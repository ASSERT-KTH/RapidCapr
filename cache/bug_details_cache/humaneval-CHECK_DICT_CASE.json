{
    "bug_id": "CHECK_DICT_CASE",
    "bug_type": "SH SF",
    "buggy_lines": "\n                } else if (state.equals(\"upper\") && !str_key.toUpperCase().equals(str_key)) {",
    "code": "    public static boolean check_dict_case(HashMap<Object, Object> dict) {\n        if (dict.size() == 0)\n            return false;\n        else {\n            String state = \"start\";\n            for (Object key : dict.keySet()) {\n                if (!(key instanceof String)) {\n                    state = \"mixed\";\n                    break;\n                }\n                String str_key = (String) key;\n                if (state.equals(\"start\")) {\n                    if (str_key.toUpperCase().equals(str_key))\n                        state = \"upper\";\n                    else if (str_key.toLowerCase().equals(str_key))\n                        state = \"lower\";\n                    else {\n                        state = \"mixed\";\n                        break;\n                    }\n                } else if (state.equals(\"upper\") && !str_key.toUpperCase().equals(str_key)) {\n                    state = \"mixed\";\n                    break;\n                }\n            }\n            return (state.equals(\"upper\")) || (state.equals(\"lower\"));\n        }\n    }",
    "fixed_code": "    public static boolean check_dict_case(HashMap<Object, Object> dict) {\n        if (dict.size() == 0)\n            return false;\n        else {\n            String state = \"start\";\n            for (Object key : dict.keySet()) {\n                if (!(key instanceof String)) {\n                    state = \"mixed\";\n                    break;\n                }\n                String str_key = (String) key;\n                if (state.equals(\"start\")) {\n                    if (str_key.toUpperCase().equals(str_key))\n                        state = \"upper\";\n                    else if (str_key.toLowerCase().equals(str_key))\n                        state = \"lower\";\n                    else {\n                        state = \"mixed\";\n                        break;\n                    }\n                } else if ((state.equals(\"upper\") && !str_key.toUpperCase().equals(str_key))\n                        || (state.equals(\"lower\") && !str_key.toLowerCase().equals(str_key))) {\n                    state = \"mixed\";\n                    break;\n                }\n            }\n            return (state.equals(\"upper\")) || (state.equals(\"lower\"));\n        }\n    }",
    "fixed_lines": "\n                } else if ((state.equals(\"upper\") && !str_key.toUpperCase().equals(str_key))\n                        || (state.equals(\"lower\") && !str_key.toLowerCase().equals(str_key))) {",
    "masked_code": "    public static boolean check_dict_case(HashMap<Object, Object> dict) {\n        if (dict.size() == 0)\n            return false;\n        else {\n            String state = \"start\";\n            for (Object key : dict.keySet()) {\n                if (!(key instanceof String)) {\n                    state = \"mixed\";\n                    break;\n                }\n                String str_key = (String) key;\n                if (state.equals(\"start\")) {\n                    if (str_key.toUpperCase().equals(str_key))\n                        state = \"upper\";\n                    else if (str_key.toLowerCase().equals(str_key))\n                        state = \"lower\";\n                    else {\n                        state = \"mixed\";\n                        break;\n                    }\n>>> [ INFILL ] <<<\n                    state = \"mixed\";\n                    break;\n                }\n            }\n            return (state.equals(\"upper\")) || (state.equals(\"lower\"));\n        }\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_CHECK_DICT_CASE.test_1:28 expected:<true> but was:<false>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(",
    "test_name": "test_1",
    "test_suite": "   TEST_CHECK_DICT_CASE"
}