{
    "bug_id": "INTERSECTION",
    "bug_type": "SH SF",
    "buggy_lines": "\n        int l = Math.min(interval1[0], interval2[0]);\n        int r = Math.max(interval1[1], interval2[1]);",
    "code": "    public static String intersection(int[] interval1, int[] interval2) {\n        int l = Math.min(interval1[0], interval2[0]);\n        int r = Math.max(interval1[1], interval2[1]);\n        int length = r - l;\n        if(length > 0 && is_prime(length)) return \"YES\";\n        return \"NO\";\n    }",
    "fixed_code": "    public static String intersection(int[] interval1, int[] interval2) {\n        int l = Math.max(interval1[0], interval2[0]);\n        int r = Math.min(interval1[1], interval2[1]);\n        int length = r - l;\n        if(length > 0 && is_prime(length)) return \"YES\";\n        return \"NO\";\n    }",
    "fixed_lines": "\n        int l = Math.max(interval1[0], interval2[0]);\n        int r = Math.min(interval1[1], interval2[1]);",
    "masked_code": "    public static String intersection(int[] interval1, int[] interval2) {\n>>> [ INFILL ] <<<\n        int length = r - l;\n        if(length > 0 && is_prime(length)) return \"YES\";\n        return \"NO\";\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_INTERSECTION.test_0:7 expected:<[NO]> but was:<[YES]>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(\"NO\", humaneval.buggy.INTERSECTION.intersection(interval1, interval2));",
    "test_name": "test_0",
    "test_suite": "   TEST_INTERSECTION"
}