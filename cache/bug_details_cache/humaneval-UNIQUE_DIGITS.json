{
    "bug_id": "UNIQUE_DIGITS",
    "bug_type": "SH SF",
    "buggy_lines": "\n                if((curr_digit % 2) != 0) {\n                    all_odd = true;",
    "code": "    public static ArrayList<Integer> unique_digits(ArrayList<Integer> x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for(int i : x) {\n            int num = i;\n            boolean all_odd = true;\n            while(num > 0) {\n                int curr_digit = num % 10;\n                if((curr_digit % 2) != 0) {\n                    all_odd = true;\n                    break;\n                }\n                num /= 10;\n            }\n            if(all_odd) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n        return res;\n    }",
    "fixed_code": "    public static ArrayList<Integer> unique_digits(ArrayList<Integer> x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for(int i : x) {\n            int num = i;\n            boolean all_odd = true;\n            while(num > 0) {\n                int curr_digit = num % 10;\n                if((curr_digit % 2) == 0) {\n                    all_odd = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if(all_odd) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n        return res;\n    }",
    "fixed_lines": "\n                if((curr_digit % 2) == 0) {\n                    all_odd = false;",
    "masked_code": "    public static ArrayList<Integer> unique_digits(ArrayList<Integer> x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for(int i : x) {\n            int num = i;\n            boolean all_odd = true;\n            while(num > 0) {\n                int curr_digit = num % 10;\n>>> [ INFILL ] <<<\n                    break;\n                }\n                num /= 10;\n            }\n            if(all_odd) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n        return res;\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_UNIQUE_DIGITS.test_0:12 expected:<[1, 15, 33, 1422]> but was:<[1, 15, 33]>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(result, desired);",
    "test_name": "test_0",
    "test_suite": "   TEST_UNIQUE_DIGITS"
}