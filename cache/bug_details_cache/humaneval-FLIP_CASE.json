{
    "bug_id": "FLIP_CASE",
    "bug_type": "SF",
    "buggy_lines": "\n                char_list[i] = Character.toLowerCase(c);\n                char_list[i] = Character.toUpperCase(c);",
    "code": "    public static String flip_case(String string) {\n        char[] char_list = string.toCharArray();\n        \n        for (int i = 0; i < char_list.length; i += 1){\n            char c = char_list[i];\n            if (Character.isLowerCase(c)) {\n                char_list[i] = Character.toLowerCase(c);\n            }\n            else {\n                char_list[i] = Character.toUpperCase(c);\n            }\n        }\n        return new String(char_list);\n    }",
    "fixed_code": "    public static String flip_case(String string) {\n        char[] char_list = string.toCharArray();\n        \n        for (int i = 0; i < char_list.length; i += 1){\n            char c = char_list[i];\n            if (Character.isLowerCase(c)) {\n                char_list[i] = Character.toUpperCase(c);\n            }\n            else {\n                char_list[i] = Character.toLowerCase(c);\n            }\n        }\n        return new String(char_list);\n    }",
    "fixed_lines": "\n                char_list[i] = Character.toUpperCase(c);\n                char_list[i] = Character.toLowerCase(c);",
    "masked_code": "    public static String flip_case(String string) {\n        char[] char_list = string.toCharArray();\n        \n        for (int i = 0; i < char_list.length; i += 1){\n            char c = char_list[i];\n            if (Character.isLowerCase(c)) {\n            }\n            else {\n>>> [ INFILL ] <<<\n            }\n        }\n        return new String(char_list);\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_FLIP_CASE.test_1:15 expected:<[Hello]!> but was:<[hELLO]!>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(",
    "test_name": "test_1",
    "test_suite": "   TEST_FLIP_CASE"
}