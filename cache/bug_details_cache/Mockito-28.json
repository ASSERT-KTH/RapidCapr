{
    "bug_id": 28,
    "bug_type": "SH SF",
    "buggy_lines": "            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();",
    "code": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n    }",
    "fixed_code": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            Object injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            mocks.remove(injected);\n        }\n    }",
    "fixed_lines": "            Object injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            mocks.remove(injected);",
    "masked_code": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n>>> [ INFILL ] <<<\n        }\n    }",
    "project": "Mockito",
    "test_error_message": "junit.framework.AssertionFailedError: expected same:<java.lang.Object@74cc987a> was not:<mockedBean>",
    "test_framework": "defects4j",
    "test_line": "        assertSame(REFERENCE, illegalInjectionExample.mockShouldNotGoInHere);",
    "test_name": "mock_should_be_injected_once_and_in_the_best_matching_type",
    "test_suite": "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest"
}