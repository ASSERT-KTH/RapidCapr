{
    "bug_id": "PROD_SIGNS",
    "bug_type": "SF",
    "buggy_lines": "\n            else if(arr[i] > 0) prod *= 1;",
    "code": "    public static int prod_signs(int[] arr) {\n        if(arr.length == 0) return -10;\n        int prod = 1;\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] == 0) prod = 0;\n            else if(arr[i] > 0) prod *= 1;\n        }\n        int sum = 0;\n        for(int i = 0; i < arr.length; i++) {\n            sum += Math.abs(arr[i]);\n        }\n        return prod * sum;\n    }",
    "fixed_code": "    public static int prod_signs(int[] arr) {\n        if(arr.length == 0) return -10;\n        int prod = 1;\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] == 0) prod = 0;\n            else if(arr[i] < 0) prod *= -1;\n        }\n        int sum = 0;\n        for(int i = 0; i < arr.length; i++) {\n            sum += Math.abs(arr[i]);\n        }\n        return prod * sum;\n    }",
    "fixed_lines": "\n            else if(arr[i] < 0) prod *= -1;",
    "masked_code": "    public static int prod_signs(int[] arr) {\n        if(arr.length == 0) return -10;\n        int prod = 1;\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] == 0) prod = 0;\n>>> [ INFILL ] <<<\n        }\n        int sum = 0;\n        for(int i = 0; i < arr.length; i++) {\n            sum += Math.abs(arr[i]);\n        }\n        return prod * sum;\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_PROD_SIGNS.test_0:7 expected:<-9> but was:<9>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(-9, humaneval.buggy.PROD_SIGNS.prod_signs(arr));",
    "test_name": "test_0",
    "test_suite": "   TEST_PROD_SIGNS"
}