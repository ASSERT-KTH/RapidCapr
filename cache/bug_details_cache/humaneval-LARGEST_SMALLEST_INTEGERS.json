{
    "bug_id": "LARGEST_SMALLEST_INTEGERS",
    "bug_type": "SF",
    "buggy_lines": "\n        boolean negative = true, positive = true;\n        int max_negative = Integer.MAX_VALUE, min_positive = Integer.MIN_VALUE; \n        for(int i = 1; i < lst.length; i++) {\n                negative = false;\n                max_negative = Math.min(max_negative, lst[i]);",
    "code": "    public static int[] largest_smallest_integers(int[] lst) {\n        boolean negative = true, positive = true;\n        int max_negative = Integer.MAX_VALUE, min_positive = Integer.MIN_VALUE; \n        for(int i = 1; i < lst.length; i++) {\n            if(lst[i] < 0) {\n                negative = false;\n                max_negative = Math.min(max_negative, lst[i]);\n            } else if(lst[i] > 0) {\n                positive = true;\n                min_positive = Math.min(min_positive, lst[i]);\n            }\n        }\n        if(!negative) max_negative = 0;\n        if(!positive) min_positive = 0;\n        int[] result = {max_negative, min_positive};\n        return result;\n    }",
    "fixed_code": "    public static int[] largest_smallest_integers(int[] lst) {\n        boolean negative = false, positive = false;\n        int max_negative = Integer.MIN_VALUE, min_positive = Integer.MAX_VALUE; \n        for(int i = 0; i < lst.length; i++) {\n            if(lst[i] < 0) {\n                negative = true;\n                max_negative = Math.max(max_negative, lst[i]);\n            } else if(lst[i] > 0) {\n                positive = true;\n                min_positive = Math.min(min_positive, lst[i]);\n            }\n        }\n        if(!negative) max_negative = 0;\n        if(!positive) min_positive = 0;\n        int[] result = {max_negative, min_positive};\n        return result;\n    }",
    "fixed_lines": "\n        boolean negative = false, positive = false;\n        int max_negative = Integer.MIN_VALUE, min_positive = Integer.MAX_VALUE; \n        for(int i = 0; i < lst.length; i++) {\n                negative = true;\n                max_negative = Math.max(max_negative, lst[i]);",
    "masked_code": "    public static int[] largest_smallest_integers(int[] lst) {\n            if(lst[i] < 0) {\n>>> [ INFILL ] <<<\n            } else if(lst[i] > 0) {\n                positive = true;\n                min_positive = Math.min(min_positive, lst[i]);\n            }\n        }\n        if(!negative) max_negative = 0;\n        if(!positive) min_positive = 0;\n        int[] result = {max_negative, min_positive};\n        return result;\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_LARGEST_SMALLEST_INTEGERS.test_0:8 arrays first differed at element [0]; expected:<0> but was:<2147483647>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertArrayEquals(result, humaneval.buggy.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));",
    "test_name": "test_0",
    "test_suite": "   TEST_LARGEST_SMALLEST_INTEGERS"
}