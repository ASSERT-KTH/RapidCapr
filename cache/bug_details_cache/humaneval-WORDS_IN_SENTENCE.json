{
    "bug_id": "WORDS_IN_SENTENCE",
    "bug_type": "SL SH SF",
    "buggy_lines": "",
    "code": "    public static String words_in_sentence(String sentence) {\n        String result = \"\";\n\n        for (String word : sentence.split(\" \")) {\n            int flag = 0;\n            for (int i = 2; i < word.length(); i += 1){\n                if (word.length() % i == 0) flag = 1;\n            }\n            if (flag == 0 || word.length() == 2)\n                result += word + \" \";\n        }\n        return result.trim();\n    }",
    "fixed_code": "    public static String words_in_sentence(String sentence) {\n        String result = \"\";\n\n        for (String word : sentence.split(\" \")) {\n            int flag = 0;\n            if (word.length() == 1) flag = 1;\n            for (int i = 2; i < word.length(); i += 1){\n                if (word.length() % i == 0) flag = 1;\n            }\n            if (flag == 0 || word.length() == 2)\n                result += word + \" \";\n        }\n        return result.trim();\n    }",
    "fixed_lines": "\n            if (word.length() == 1) flag = 1;",
    "masked_code": "    public static String words_in_sentence(String sentence) {\n        String result = \"\";\n\n        for (String word : sentence.split(\" \")) {\n            int flag = 0;\n>>> [ INFILL ] <<<\n            for (int i = 2; i < word.length(); i += 1){\n                if (word.length() % i == 0) flag = 1;\n            }\n            if (flag == 0 || word.length() == 2)\n                result += word + \" \";\n        }\n        return result.trim();\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_WORDS_IN_SENTENCE.test_0:7 expected:<is[ a]> but was:<is[]>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(",
    "test_name": "test_0",
    "test_suite": "   TEST_WORDS_IN_SENTENCE"
}