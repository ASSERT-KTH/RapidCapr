{
    "bug_id": "GET_ODD_COLLATZ",
    "bug_type": "SF",
    "buggy_lines": "\n        while(n >= 1) {\n            if((n % 2) == 1) n /= 2;",
    "code": "    public static ArrayList<Integer> get_odd_collatz(int n) {\n        ArrayList<Integer> result = new ArrayList<>();\n        if((n % 2) == 1) result.add(n);\n        while(n >= 1) {\n            if((n % 2) == 1) n /= 2;\n            else n = 3 * n + 1;\n            if((n % 2) == 1) result.add(n);\n        }\n        Collections.sort(result);\n        return result;\n    }",
    "fixed_code": "    public static ArrayList<Integer> get_odd_collatz(int n) {\n        ArrayList<Integer> result = new ArrayList<>();\n        if((n % 2) == 1) result.add(n);\n        while(n > 1) {\n            if((n % 2) == 0) n /= 2;\n            else n = 3 * n + 1;\n            if((n % 2) == 1) result.add(n);\n        }\n        Collections.sort(result);\n        return result;\n    }",
    "fixed_lines": "\n        while(n > 1) {\n            if((n % 2) == 0) n /= 2;",
    "masked_code": "    public static ArrayList<Integer> get_odd_collatz(int n) {\n        ArrayList<Integer> result = new ArrayList<>();\n        if((n % 2) == 1) result.add(n);\n>>> [ INFILL ] <<<\n            else n = 3 * n + 1;\n            if((n % 2) == 1) result.add(n);\n        }\n        Collections.sort(result);\n        return result;\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_GET_ODD_COLLATZ.test_0:11 expected:<[1, 5, 7, 11, 13, 17]> but was:<[1, 3, 7, 15, 21, 31, 43]>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(desired, result);",
    "test_name": "test_0",
    "test_suite": "   TEST_GET_ODD_COLLATZ"
}