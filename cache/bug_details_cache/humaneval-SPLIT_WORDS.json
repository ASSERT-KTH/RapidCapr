{
    "bug_id": "SPLIT_WORDS",
    "bug_type": "SF",
    "buggy_lines": "\n                if(Character.isUpperCase(curr) && ((curr - 'a') % 2) == 0) count++;",
    "code": "    public static String[] split_words(String txt) {\n        if(txt.contains(\" \")) {\n            return txt.split(\" \");\n        } else if(txt.contains(\",\")) {\n            return txt.split(\",\");\n        } else {\n            int count = 0;\n            for(int i = 0; i < txt.length(); i++) {\n                char curr = txt.charAt(i);\n                if(Character.isUpperCase(curr) && ((curr - 'a') % 2) == 0) count++;\n            }\n            String[] result = {Integer.toString(count)};\n            return result;\n        }\n    }",
    "fixed_code": "    public static String[] split_words(String txt) {\n        if(txt.contains(\" \")) {\n            return txt.split(\" \");\n        } else if(txt.contains(\",\")) {\n            return txt.split(\",\");\n        } else {\n            int count = 0;\n            for(int i = 0; i < txt.length(); i++) {\n                char curr = txt.charAt(i);\n                if(Character.isLowerCase(curr) && ((curr - 'a') % 2) == 1) count++;\n            }\n            String[] result = {Integer.toString(count)};\n            return result;\n        }\n    }",
    "fixed_lines": "\n                if(Character.isLowerCase(curr) && ((curr - 'a') % 2) == 1) count++;",
    "masked_code": "    public static String[] split_words(String txt) {\n        if(txt.contains(\" \")) {\n            return txt.split(\" \");\n        } else if(txt.contains(\",\")) {\n            return txt.split(\",\");\n        } else {\n            int count = 0;\n            for(int i = 0; i < txt.length(); i++) {\n                char curr = txt.charAt(i);\n>>> [ INFILL ] <<<\n            }\n            String[] result = {Integer.toString(count)};\n            return result;\n        }\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_SPLIT_WORDS.test_4:32 arrays first differed at element [0]; expected:<[3]> but was:<[0]>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertArrayEquals(desired, result);",
    "test_name": "test_4",
    "test_suite": "   TEST_SPLIT_WORDS"
}