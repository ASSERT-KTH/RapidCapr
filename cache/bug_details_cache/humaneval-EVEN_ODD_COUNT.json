{
    "bug_id": "EVEN_ODD_COUNT",
    "bug_type": "SH SF",
    "buggy_lines": "\n        for (char c : (num + \"\").toCharArray()) {\n            if ((int)c % 2 == 0) even_count += 1;\n            if ((int)c % 2 == 1) odd_count += 1;",
    "code": "    public static int[] even_odd_count(int num) {\n        int even_count = 0;\n        int odd_count = 0;\n\n        for (char c : (num + \"\").toCharArray()) {\n            if ((int)c % 2 == 0) even_count += 1;\n            if ((int)c % 2 == 1) odd_count += 1;\n        }\n        return new int[] {even_count, odd_count};\n    }",
    "fixed_code": "    public static int[] even_odd_count(int num) {\n        int even_count = 0;\n        int odd_count = 0;\n\n        for (char c : (Math.abs(num) + \"\").toCharArray()) {\n            int n = c - '0';\n            if (n % 2 == 0) even_count += 1;\n            if (n % 2 == 1) odd_count += 1;\n        }\n        return new int[] {even_count, odd_count};\n    }",
    "fixed_lines": "\n        for (char c : (Math.abs(num) + \"\").toCharArray()) {\n            int n = c - '0';\n            if (n % 2 == 0) even_count += 1;\n            if (n % 2 == 1) odd_count += 1;",
    "masked_code": "    public static int[] even_odd_count(int num) {\n        int even_count = 0;\n        int odd_count = 0;\n\n>>> [ INFILL ] <<<\n        }\n        return new int[] {even_count, odd_count};\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_EVEN_ODD_COUNT.test_1:15 arrays first differed at element [1]; expected:<2> but was:<1>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertArrayEquals(",
    "test_name": "test_1",
    "test_suite": "   TEST_EVEN_ODD_COUNT"
}