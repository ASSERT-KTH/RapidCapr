{
    "bug_id": "SEPARATE_PAREN_GROUPS",
    "bug_type": "SL SH SF",
    "buggy_lines": "\n            } else {",
    "code": "    public static List<String> separate_paren_groups(String paren_string) {\n        List<String> result = new ArrayList<String>();\n        String current_string = \"\";\n        int current_depth = 0;\n\n        for (char c : paren_string.toCharArray()) {\n            if (c == '('){\n                current_depth += 1;\n                current_string += String.valueOf(c);\n            } else {\n                current_depth -= 1;\n                current_string += String.valueOf(c);\n\n                if (current_depth == 0){\n                    result.add(current_string);\n                    current_string = \"\";\n                }\n            }\n        }\n        return result;\n    }",
    "fixed_code": "    public static List<String> separate_paren_groups(String paren_string) {\n        List<String> result = new ArrayList<String>();\n        String current_string = \"\";\n        int current_depth = 0;\n\n        for (char c : paren_string.toCharArray()) {\n            if (c == '('){\n                current_depth += 1;\n                current_string += String.valueOf(c);\n            } else if (c == ')'){\n                current_depth -= 1;\n                current_string += String.valueOf(c);\n\n                if (current_depth == 0){\n                    result.add(current_string);\n                    current_string = \"\";\n                }\n            }\n        }\n        return result;\n    }",
    "fixed_lines": "\n            } else if (c == ')'){",
    "masked_code": "    public static List<String> separate_paren_groups(String paren_string) {\n        List<String> result = new ArrayList<String>();\n        String current_string = \"\";\n        int current_depth = 0;\n\n        for (char c : paren_string.toCharArray()) {\n            if (c == '('){\n                current_depth += 1;\n                current_string += String.valueOf(c);\n>>> [ INFILL ] <<<\n                current_depth -= 1;\n                current_string += String.valueOf(c);\n\n                if (current_depth == 0){\n                    result.add(current_string);\n                    current_string = \"\";\n                }\n            }\n        }\n        return result;\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_SEPARATE_PAREN_GROUPS.test_0:13 array lengths differed, expected.length=2 actual.length=4; arrays first differed at element [1]; expected:<[ (((]))> but was:<[((()]))>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertArrayEquals(",
    "test_name": "test_0",
    "test_suite": "   TEST_SEPARATE_PAREN_GROUPS"
}