{
    "bug_id": "WORDS_STRINGS",
    "bug_type": "SF",
    "buggy_lines": "",
    "code": "\tpublic static ArrayList<String> words_strings(String s) {\n\t\tArrayList<String> result = new ArrayList<String>();\n\t\tString s_list = \"\";\n\t\tfor(char c : s.toCharArray()) {\n\t\t\tif(c == ',') {\n\t\t\t\ts_list += ' ';\n\t\t\t} else {\n\t\t\t\ts_list += c;\n\t\t\t}\n\t\t}\n\t\tString[] result_array = s_list.trim().split(\"\\\\s+\");\n\t\tfor(String r : result_array) {\n\t\t\tresult.add(r);\n\t\t}\n\t\treturn result;\n\t}\n}",
    "fixed_code": "\tpublic static ArrayList<String> words_strings(String s) {\n\t\tArrayList<String> result = new ArrayList<String>();\n\t\tif(s == null || s.isEmpty()) return result;\n\t\tString s_list = \"\";\n\t\tfor(char c : s.toCharArray()) {\n\t\t\tif(c == ',') {\n\t\t\t\ts_list += ' ';\n\t\t\t} else {\n\t\t\t\ts_list += c;\n\t\t\t}\n\t\t}\n\t\tString[] result_array = s_list.trim().split(\"\\\\s+\");\n\t\tfor(String r : result_array) {\n\t\t\tresult.add(r);\n\t\t}\n\t\treturn result;\n\t}\n}",
    "fixed_lines": "\n\t\tif(s == null || s.isEmpty()) return result;",
    "masked_code": "\tpublic static ArrayList<String> words_strings(String s) {\n\t\tArrayList<String> result = new ArrayList<String>();\n>>> [ INFILL ] <<<\n\t\tString s_list = \"\";\n\t\tfor(char c : s.toCharArray()) {\n\t\t\tif(c == ',') {\n\t\t\t\ts_list += ' ';\n\t\t\t} else {\n\t\t\t\ts_list += c;\n\t\t\t}\n\t\t}\n\t\tString[] result_array = s_list.trim().split(\"\\\\s+\");\n\t\tfor(String r : result_array) {\n\t\t\tresult.add(r);\n\t\t}\n\t\treturn result;\n\t}\n}",
    "project": "humaneval",
    "test_error_message": "   TEST_WORDS_STRINGS.test_4:35 expected: java.util.ArrayList<[]> but was: java.util.ArrayList<[]>",
    "test_framework": "humanevaljava",
    "test_line": "\t\torg.junit.Assert.assertEquals(result, desired);",
    "test_name": "test_4",
    "test_suite": "   TEST_WORDS_STRINGS"
}