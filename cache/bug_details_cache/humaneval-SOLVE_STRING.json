{
    "bug_id": "SOLVE_STRING",
    "bug_type": "SF",
    "buggy_lines": "\n            if (Character.isLowerCase(c)) sb.append(Character.toUpperCase(c));\n            else sb.append(Character.toLowerCase(c));\n            flg = 1;",
    "code": "    public static String solve_string(String s) {\n        int flg = 0;\n        StringBuilder sb = new StringBuilder();\n        for (char c : s.toCharArray()) {\n            if (Character.isLowerCase(c)) sb.append(Character.toUpperCase(c));\n            else sb.append(Character.toLowerCase(c));\n            flg = 1;\n        }\n        if (flg == 0) {\n            sb = new StringBuilder();\n            for (int i = s.length() - 1; i >= 0; i -= 1) sb.append(s.charAt(i));\n        }\n        return sb.toString();\n    }",
    "fixed_code": "    public static String solve_string(String s) {\n        int flg = 0;\n        StringBuilder sb = new StringBuilder();\n        for (char c : s.toCharArray()) {\n            if (Character.isAlphabetic(c)){\n                if (Character.isLowerCase(c)) sb.append(Character.toUpperCase(c));\n                else sb.append(Character.toLowerCase(c));\n                flg = 1;\n            }\n            else sb.append(c);\n        }\n        if (flg == 0) {\n            sb = new StringBuilder();\n            for (int i = s.length() - 1; i >= 0; i -= 1) sb.append(s.charAt(i));\n        }\n        return sb.toString();\n    }",
    "fixed_lines": "\n            if (Character.isAlphabetic(c)){\n                if (Character.isLowerCase(c)) sb.append(Character.toUpperCase(c));\n                else sb.append(Character.toLowerCase(c));\n                flg = 1;\n            }\n            else sb.append(c);",
    "masked_code": "    public static String solve_string(String s) {\n        int flg = 0;\n        StringBuilder sb = new StringBuilder();\n        for (char c : s.toCharArray()) {\n>>> [ INFILL ] <<<\n        }\n        if (flg == 0) {\n            sb = new StringBuilder();\n            for (int i = s.length() - 1; i >= 0; i -= 1) sb.append(s.charAt(i));\n        }\n        return sb.toString();\n    }",
    "project": "humaneval",
    "test_error_message": "   TEST_SOLVE_STRING.test_1:15 expected:<[1234]> but was:<[4321]>",
    "test_framework": "humanevaljava",
    "test_line": "        org.junit.Assert.assertEquals(",
    "test_name": "test_1",
    "test_suite": "   TEST_SOLVE_STRING"
}