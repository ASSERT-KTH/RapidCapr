{
    "patch": "    public Fraction reduce() {\n        int num = numerator;\n        int den = denominator;\n        int gcd = greatestCommonDivisor(Math.abs(num), Math.abs(den));\n        num /= gcd;\n        den /= gcd;\n        if (den < 0) {\n            num *= -1;\n            den *= -1;\n        }\n        return new Fraction(num, den);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..61b2d4c6 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,11 +463,16 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        int num = numerator;\n+        int den = denominator;\n+        int gcd = greatestCommonDivisor(Math.abs(num), Math.abs(den));\n+        num /= gcd;\n+        den /= gcd;\n+        if (den < 0) {\n+            num *= -1;\n+            den *= -1;\n+        }\n+        return new Fraction(num, den);\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<-2/3> was not:<-2/3>",
    "test_result": "FAIL"
}