{
    "patch": "public String fixCode(String code) {\n    String pattern = \"for\\\\s*\\\\(.*:\\\\s*.*\\\\)\";\n    Pattern r = Pattern.compile(pattern);\n    Matcher m = r.matcher(code);\n    while (m.find()) {\n        String matched = m.group(0);\n        String replacement = matched.replace(\":\", \" in \");\n        code = code.replace(matched, replacement);\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..5013097b 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,17 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    String pattern = \"for\\\\s*\\\\(.*:\\\\s*.*\\\\)\";\n+    Pattern r = Pattern.compile(pattern);\n+    Matcher m = r.matcher(code);\n+    while (m.find()) {\n+        String matched = m.group(0);\n+        String replacement = matched.replace(\":\", \" in \");\n+        code = code.replace(matched, replacement);\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}