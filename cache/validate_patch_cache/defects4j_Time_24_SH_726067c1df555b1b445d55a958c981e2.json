{
    "patch": "                if (i == 0 && savedFields[i].getFieldType().equals(DateTimeFieldType.weekyear())) {\n                    if (millis < iChrono.year().set(0, iDefaultYear)) {\n                        // Use addWrapField to avoid exceptions\n                        millis = savedFields[i + 1].getField().addWrapField(millis, -1);\n                        millis = savedFields[i].set(millis, resetFields);\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..9c011bfd 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (i == 0 && savedFields[i].getFieldType().equals(DateTimeFieldType.weekyear())) {\n+                    if (millis < iChrono.year().set(0, iDefaultYear)) {\n+                        // Use addWrapField to avoid exceptions\n+                        millis = savedFields[i + 1].getField().addWrapField(millis, -1);\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    }\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}