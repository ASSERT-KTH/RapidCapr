{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent != null && parent.getType() == Token.ASSIGN) {\n        Node lhs = parent.getFirstChild();\n        if (NodeUtil.isGet(lhs)) {\n          if (lhs.getType() == Token.GETPROP &&\n              lhs.getLastChild().getString().equals(\"prototype\")) {\n            return false;\n          }\n          // Only traverse the right side if it's a safe assignment.\n          else {\n             Node llhs = lhs.getFirstChild();\n              while (llhs.getType() == Token.GETPROP) {\n                llhs = llhs.getFirstChild();\n              }\n              if (llhs.getType() == Token.NAME || llhs.getType() == Token.THIS) {\n                return true;\n              }\n              if (llhs.getType() == Token.GETPROP &&\n                  llhs.getLastChild().getString().equals(\"Object\") &&\n                  llhs.getFirstChild().getType() == Token.NAME) {\n                return true;\n              }\n              return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..8ab2df74 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,32 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && parent.getType() == Token.ASSIGN) {\n+        Node lhs = parent.getFirstChild();\n+        if (NodeUtil.isGet(lhs)) {\n+          if (lhs.getType() == Token.GETPROP &&\n+              lhs.getLastChild().getString().equals(\"prototype\")) {\n+            return false;\n+          }\n+          // Only traverse the right side if it's a safe assignment.\n+          else {\n+             Node llhs = lhs.getFirstChild();\n+              while (llhs.getType() == Token.GETPROP) {\n+                llhs = llhs.getFirstChild();\n+              }\n+              if (llhs.getType() == Token.NAME || llhs.getType() == Token.THIS) {\n+                return true;\n+              }\n+              if (llhs.getType() == Token.GETPROP &&\n+                  llhs.getLastChild().getString().equals(\"Object\") &&\n+                  llhs.getFirstChild().getType() == Token.NAME) {\n+                return true;\n+              }\n+              return false;\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 46 expected:<0> but was:<1>",
    "test_result": "FAIL"
}