{
    "patch": "```\npublic static String anti_shuffle(String s) {\n    StringTokenizer st = new StringTokenizer(s, \" \");\n    StringBuilder result = new StringBuilder();\n    while (st.hasMoreTokens()) {\n        String token = st.nextToken();\n        char[] chars = token.toCharArray();\n        Arrays.sort(chars);\n        result.append(chars).append(\" \");\n    }\n    return result.toString().trim();\n}\n```\nThis implementation uses `StringTokenizer` to split the input string into individual words and sorts each word before appending it to the `StringBuilder`. It also uses `append()` to add characters to the `StringBuilder` for efficiency and uses `trim()` to remove any leading or trailing spaces.",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ANTI_SHUFFLE.java b/src/main/java/humaneval/buggy/ANTI_SHUFFLE.java\nindex 4389f67..bafb900 100644\n--- a/src/main/java/humaneval/buggy/ANTI_SHUFFLE.java\n+++ b/src/main/java/humaneval/buggy/ANTI_SHUFFLE.java\n@@ -14,13 +14,18 @@ anti_shuffle('hello') returns 'ehllo'\n anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor' */\n \n public class ANTI_SHUFFLE {\n-    public static String anti_shuffle(String s) {\n-        String result = \"\";\n-        for (String str : s.split(\" \")) {\n-            char[] chars = str.toCharArray();\n-            Arrays.sort(chars);\n-            result += new String(chars);\n-        }\n-        return result;\n+```\n+public static String anti_shuffle(String s) {\n+    StringTokenizer st = new StringTokenizer(s, \" \");\n+    StringBuilder result = new StringBuilder();\n+    while (st.hasMoreTokens()) {\n+        String token = st.nextToken();\n+        char[] chars = token.toCharArray();\n+        Arrays.sort(chars);\n+        result.append(chars).append(\" \");\n     }\n+    return result.toString().trim();\n+}\n+```\n+This implementation uses `StringTokenizer` to split the input string into individual words and sorts each word before appending it to the `StringBuilder`. It also uses `append()` to add characters to the `StringBuilder` for efficiency and uses `trim()` to remove any leading or trailing spaces.\n }",
    "result_reason": " /tmp/humaneval-ANTI_SHUFFLE/src/main/java/humaneval/buggy/ANTI_SHUFFLE.java:[17,1] illegal character: '`'",
    "test_result": "ERROR"
}