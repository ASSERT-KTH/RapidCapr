{
    "patch": "if (n.isFunction() && NodeUtil.isFunctionDeclaration(n)) {\n  return false;\n}\n\nif (n.isCatch()) {\n  return true; // Catch clauses always have side effects, including rethrowing.\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..44047475 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,13 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n.isFunction() && NodeUtil.isFunctionDeclaration(n)) {\n+  return false;\n+}\n+\n+if (n.isCatch()) {\n+  return true; // Catch clauses always have side effects, including rethrowing.\n+}\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}