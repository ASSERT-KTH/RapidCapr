{
    "patch": "        super();\n        iPeriodType = new PeriodType();\n        iValues = new int[8];\n        iValues[DurationFieldType.MILLIS.getType()] = (int) (duration % DateTimeConstants.MILLIS_PER_SECOND);\n        iValues[DurationFieldType.SECONDS.getType()] = (int) ((duration / DateTimeConstants.MILLIS_PER_SECOND) % 60);\n        iValues[DurationFieldType.MINUTES.getType()] = (int) ((duration / DateTimeConstants.MILLIS_PER_MINUTE) % 60);\n        iValues[DurationFieldType.HOURS.getType()] = (int) ((duration / DateTimeConstants.MILLIS_PER_HOUR) % 24);\n        iValues[DurationFieldType.DAYS.getType()] = (int) (duration / DateTimeConstants.MILLIS_PER_DAY);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..d2ed45e9 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,14 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        super();\n+        iPeriodType = new PeriodType();\n+        iValues = new int[8];\n+        iValues[DurationFieldType.MILLIS.getType()] = (int) (duration % DateTimeConstants.MILLIS_PER_SECOND);\n+        iValues[DurationFieldType.SECONDS.getType()] = (int) ((duration / DateTimeConstants.MILLIS_PER_SECOND) % 60);\n+        iValues[DurationFieldType.MINUTES.getType()] = (int) ((duration / DateTimeConstants.MILLIS_PER_MINUTE) % 60);\n+        iValues[DurationFieldType.HOURS.getType()] = (int) ((duration / DateTimeConstants.MILLIS_PER_HOUR) % 24);\n+        iValues[DurationFieldType.DAYS.getType()] = (int) (duration / DateTimeConstants.MILLIS_PER_DAY);\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}