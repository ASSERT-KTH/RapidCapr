{
    "patch": "        \n        // Don't traverse function expressions that are lent to an unknown object\n        if (rhs.getType() == Token.FUNCTION &&\n            !NodeUtil.isObjectLitKey(lhs)) {\n          return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..38551516 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,11 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+        \n+        // Don't traverse function expressions that are lent to an unknown object\n+        if (rhs.getType() == Token.FUNCTION &&\n+            !NodeUtil.isObjectLitKey(lhs)) {\n+          return false;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}