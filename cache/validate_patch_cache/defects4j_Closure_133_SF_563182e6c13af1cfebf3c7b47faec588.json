{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null || !result.startsWith(\"/**\")) {\n        return null;\n    }\n    result = result.replaceFirst(\"^/\\\\*\\\\*\", \"\"); // remove '/**' at beginning of the string\n    result = result.replaceAll(\"\\\\h*\\\\*/$\", \"\"); // remove '*/' at the end of the string and any preceding horizontal whitespace\n    result = result.replaceAll(\"\\\\h*\\\\*\\\\h?\", \"\"); // remove '*' characters and any surrounding horizontal whitespace\n    result = result.replaceAll(\"@[A-Za-z0-9]+(\\\\([^\\\\)]*\\\\))?\\\\h*\", \"\"); // remove type annotations and surrounding horizontal whitespace\n    result = result.trim(); // remove any leading or trailing whitespace\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..9474df8b 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,19 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+    if (result == null || !result.startsWith(\"/**\")) {\n+        return null;\n+    }\n+    result = result.replaceFirst(\"^/\\\\*\\\\*\", \"\"); // remove '/**' at beginning of the string\n+    result = result.replaceAll(\"\\\\h*\\\\*/$\", \"\"); // remove '*/' at the end of the string and any preceding horizontal whitespace\n+    result = result.replaceAll(\"\\\\h*\\\\*\\\\h?\", \"\"); // remove '*' characters and any surrounding horizontal whitespace\n+    result = result.replaceAll(\"@[A-Za-z0-9]+(\\\\([^\\\\)]*\\\\))?\\\\h*\", \"\"); // remove type annotations and surrounding horizontal whitespace\n+    result = result.trim(); // remove any leading or trailing whitespace\n+\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}