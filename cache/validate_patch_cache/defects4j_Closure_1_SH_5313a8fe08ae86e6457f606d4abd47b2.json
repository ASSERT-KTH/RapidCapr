{
    "patch": "      while (argList.getLastChild() != null) {\n        Node lastArg = argList.getLastChild();\n        Var var = fnScope.getVar(lastArg.getString());\n        if (var == null || !referenced.contains(var)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5e85eb86 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,10 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      while (argList.getLastChild() != null) {\n+        Node lastArg = argList.getLastChild();\n+        Var var = fnScope.getVar(lastArg.getString());\n+        if (var == null || !referenced.contains(var)) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}