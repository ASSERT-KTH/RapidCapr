{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null || str.trim().isEmpty()) {\n        return null;\n    }\n    String[] parts = str.split(\"_\");\n    int length = parts.length;\n    if (length == 0 || length > 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String language = parts[0];\n    validateLanguage(language);\n    String country = \"\";\n    String variant = \"\";\n    if (length > 1 && !parts[1].isEmpty()) {\n        country = parts[1];\n        validateCountry(country);\n    }\n    if (length > 2 && !parts[2].isEmpty()) {\n        variant = parts[2];\n        validateVariant(variant);\n    }\n    return new Locale(language, country, variant);\n}\n\nprivate static void validateLanguage(String language) {\n    if (!language.isEmpty() && !isValidCode(language, 2, 3)) {\n        throw new IllegalArgumentException(\"Invalid locale format: invalid language - \" + language);\n    }\n}\n\nprivate static void validateCountry(String country) {\n    if (!country.isEmpty() && !isValidCode(country, 2, 3) && !isValidCode(country, 0, 0)) {\n        throw new IllegalArgumentException(\"Invalid locale format: invalid country - \" + country);\n    }\n}\n\nprivate static void validateVariant(String variant) {\n    if (!variant.isEmpty() && (!isValidCode(variant, 5, 8) || !variant.matches(\"[a-zA-Z0-9]+([\\\\-_][a-zA-Z0-9]+)*\"))) {\n        throw new IllegalArgumentException(\"Invalid locale format: invalid variant - \" + variant);\n    }\n}\n\nprivate static boolean isValidCode(String s, int minLen, int maxLen) {\n    if (s.length() < minLen || s.length() > maxLen) {\n        return false;\n    }\n    for (int i = 0; i < s.length(); i++) {\n        if (!Character.isLetter(s.charAt(i))) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..c945813a 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,59 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+public static Locale toLocale(final String str) {\n+    if (str == null || str.trim().isEmpty()) {\n+        return null;\n+    }\n+    String[] parts = str.split(\"_\");\n+    int length = parts.length;\n+    if (length == 0 || length > 3) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    String language = parts[0];\n+    validateLanguage(language);\n+    String country = \"\";\n+    String variant = \"\";\n+    if (length > 1 && !parts[1].isEmpty()) {\n+        country = parts[1];\n+        validateCountry(country);\n+    }\n+    if (length > 2 && !parts[2].isEmpty()) {\n+        variant = parts[2];\n+        validateVariant(variant);\n+    }\n+    return new Locale(language, country, variant);\n+}\n+\n+private static void validateLanguage(String language) {\n+    if (!language.isEmpty() && !isValidCode(language, 2, 3)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: invalid language - \" + language);\n+    }\n+}\n+\n+private static void validateCountry(String country) {\n+    if (!country.isEmpty() && !isValidCode(country, 2, 3) && !isValidCode(country, 0, 0)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: invalid country - \" + country);\n+    }\n+}\n+\n+private static void validateVariant(String variant) {\n+    if (!variant.isEmpty() && (!isValidCode(variant, 5, 8) || !variant.matches(\"[a-zA-Z0-9]+([\\\\-_][a-zA-Z0-9]+)*\"))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: invalid variant - \" + variant);\n+    }\n+}\n+\n+private static boolean isValidCode(String s, int minLen, int maxLen) {\n+    if (s.length() < minLen || s.length() > maxLen) {\n+        return false;\n+    }\n+    for (int i = 0; i < s.length(); i++) {\n+        if (!Character.isLetter(s.charAt(i))) {\n+            return false;\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n     }\n+    return true;\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: invalid variant - P",
    "test_result": "FAIL"
}