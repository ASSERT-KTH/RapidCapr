{
    "patch": "      Node fnNameNode = n.getFirstChild();\n      if (fnNameNode.getType() == Token.NAME &&\n          assignLhsChild != null &&\n          fnNameNode.matchesQualifiedName(assignLhsChild)) {\n        // Traverse a function expression even if it is part of an assignment statement\n        // And we are on the left hand side and there is no RHS of ASSIGN just this function.\n        return true;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..98c6fe88 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,14 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node fnNameNode = n.getFirstChild();\n+      if (fnNameNode.getType() == Token.NAME &&\n+          assignLhsChild != null &&\n+          fnNameNode.matchesQualifiedName(assignLhsChild)) {\n+        // Traverse a function expression even if it is part of an assignment statement\n+        // And we are on the left hand side and there is no RHS of ASSIGN just this function.\n+        return true;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}