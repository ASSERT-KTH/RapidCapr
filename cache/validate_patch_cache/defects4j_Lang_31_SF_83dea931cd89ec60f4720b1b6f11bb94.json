{
    "patch": "public static boolean containsAny(CharSequence cs, char... searchChars) {\n    if (cs == null || searchChars == null) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchCharsLength = searchChars.length;\n\n    int i = -1;\n    if (searchCharsLength == 1) {\n        char searchChar = searchChars[0];\n        while (++i < csLength) {\n            if (cs.charAt(i) == searchChar) {\n                return true;\n            }\n        }\n    } else {\n        boolean[] searchMap = new boolean[Character.MAX_VALUE + 1];\n        for (i = 0; i < searchCharsLength; i++) {\n            searchMap[searchChars[i]] = true;\n        }\n        while (++i < csLength) {\n            char ch = cs.charAt(i);\n            if (ch <= Character.MAX_VALUE && searchMap[ch]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..0c4eaebd 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char... searchChars) {\n+    if (cs == null || searchChars == null) {\n+        return false;\n+    }\n+    int csLength = cs.length();\n+    int searchCharsLength = searchChars.length;\n+\n+    int i = -1;\n+    if (searchCharsLength == 1) {\n+        char searchChar = searchChars[0];\n+        while (++i < csLength) {\n+            if (cs.charAt(i) == searchChar) {\n+                return true;\n+            }\n+        }\n+    } else {\n+        boolean[] searchMap = new boolean[Character.MAX_VALUE + 1];\n+        for (i = 0; i < searchCharsLength; i++) {\n+            searchMap[searchChars[i]] = true;\n+        }\n+        while (++i < csLength) {\n+            char ch = cs.charAt(i);\n+            if (ch <= Character.MAX_VALUE && searchMap[ch]) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}