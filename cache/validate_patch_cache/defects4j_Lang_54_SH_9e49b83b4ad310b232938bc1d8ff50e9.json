{
    "patch": "if (len >= 7 && str.charAt(5) == '_') {\n    int index = str.indexOf('_', 6);\n    if (index == -1) {\n        String language = str.substring(0, 2);\n        String country = str.substring(6);\n        if (country.length() == 2 || (country.length() == 0 && len == 7)) {\n            return new Locale(language, country);\n        } else if (country.length() == 3 && Character.isUpperCase(country.charAt(0))\n                && Character.isUpperCase(country.charAt(1)) && Character.isUpperCase(country.charAt(2))) {\n            return new Locale(language, \"\", country);\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    } else {\n        String language = str.substring(0, 2);\n        String country = str.substring(3, 5);\n        String variant = str.substring(index + 1);\n        if (variant.length() > 0) {\n            variant = variant.replace('_', '-');\n        } else if (len == index + 1) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String s = str.substring(6, index);\n        if (s.length() == 0 && country.length() == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country, s + variant);\n    }\n} else {\n    return new Locale.Builder().setLanguageTag(str).build();\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..53d4211b 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,37 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len >= 7 && str.charAt(5) == '_') {\n+    int index = str.indexOf('_', 6);\n+    if (index == -1) {\n+        String language = str.substring(0, 2);\n+        String country = str.substring(6);\n+        if (country.length() == 2 || (country.length() == 0 && len == 7)) {\n+            return new Locale(language, country);\n+        } else if (country.length() == 3 && Character.isUpperCase(country.charAt(0))\n+                && Character.isUpperCase(country.charAt(1)) && Character.isUpperCase(country.charAt(2))) {\n+            return new Locale(language, \"\", country);\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    } else {\n+        String language = str.substring(0, 2);\n+        String country = str.substring(3, 5);\n+        String variant = str.substring(index + 1);\n+        if (variant.length() > 0) {\n+            variant = variant.replace('_', '-');\n+        } else if (len == index + 1) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        String s = str.substring(6, index);\n+        if (s.length() == 0 && country.length() == 0) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        return new Locale(language, country, s + variant);\n+    }\n+} else {\n+    return new Locale.Builder().setLanguageTag(str).build();\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}