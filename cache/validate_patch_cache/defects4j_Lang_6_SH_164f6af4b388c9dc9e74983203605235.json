{
    "patch": "            int codePoint = Character.codePointAt(input, pos);\n            int consumed = Character.charCount(codePoint);\n            if (translate(codePoint, out)) {\n                pos += consumed;\n                continue;\n            }\n            char[] c = Character.toChars(codePoint);\n            out.write(c);\n            pos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..317c41f0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,15 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+            int codePoint = Character.codePointAt(input, pos);\n+            int consumed = Character.charCount(codePoint);\n+            if (translate(codePoint, out)) {\n+                pos += consumed;\n+                continue;\n+            }\n+            char[] c = Character.toChars(codePoint);\n+            out.write(c);\n+            pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}