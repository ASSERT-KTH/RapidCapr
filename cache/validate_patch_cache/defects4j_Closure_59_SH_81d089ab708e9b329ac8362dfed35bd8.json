{
    "patch": "    if (options.checkGlobalThisLevel.isOn() &&\n        options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) >= 0) {\n      options.setWarningLevel(\n          DiagnosticGroups.GLOBAL_THIS,\n          options.checkGlobalThisLevel);\n\n      // Turn off options.checkSuspiciousCode, unless it has been set explicitly (but not to \"warning\")\n      // or unless options.checkTypes is completely off.\n      if (options.checkSuspiciousCode.isOn() && !options.isCheckSuspiciousCodeSetByFlag()) {\n        // \"warning\" is the default and highest allowed level for suspicious code checking.\n        CheckLevel level = options.checkTypes ? CheckLevel.WARNING : CheckLevel.OFF;\n        options.setWarningLevel(\n            DiagnosticGroups.SUSPICIOUS_CODE,\n            level);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..3612f6b8 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,22 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+    if (options.checkGlobalThisLevel.isOn() &&\n+        options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) >= 0) {\n+      options.setWarningLevel(\n+          DiagnosticGroups.GLOBAL_THIS,\n+          options.checkGlobalThisLevel);\n+\n+      // Turn off options.checkSuspiciousCode, unless it has been set explicitly (but not to \"warning\")\n+      // or unless options.checkTypes is completely off.\n+      if (options.checkSuspiciousCode.isOn() && !options.isCheckSuspiciousCodeSetByFlag()) {\n+        // \"warning\" is the default and highest allowed level for suspicious code checking.\n+        CheckLevel level = options.checkTypes ? CheckLevel.WARNING : CheckLevel.OFF;\n+        options.setWarningLevel(\n+            DiagnosticGroups.SUSPICIOUS_CODE,\n+            level);\n+      }\n+    }\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}