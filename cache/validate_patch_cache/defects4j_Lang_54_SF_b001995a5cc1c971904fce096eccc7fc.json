{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (!isAlpha(ch0) || !isAlpha(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    int index1 = -1;\n    int index2 = -1;\n    int index3 = -1;\n\n    // Look for separators\n    for (int i = 2; i < len; i++) {\n        char ch = str.charAt(i);\n\n        if (ch == '_' && index1 < 0) {\n            index1 = i;\n        } else if (ch == '_' && index2 < 0) {\n            index2 = i;\n        } else if (ch == '_' && index3 < 0) {\n            index3 = i;\n            break;\n        }\n    }\n\n    if (index1 == -1 && index2 == -1 && index3 == -1) {\n        // No separators, language only\n        return len == 2 ? new Locale(str) : new Locale(str.substring(0, 2), str.substring(2));\n    } else if (index1 == -1 && index2 == 3 && index3 == -1) {\n        // One separator, language_country\n        return new Locale(str.substring(0, 2), str.substring(3));\n    } else if (index1 == -1 || index2 == -1 || index2 == index1 + 1) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    } else if (index2 == 3 && index3 == -1) {\n        // One separator, language_country_variant\n        return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1));\n    } else if (index1 > 2 && index2 == -1 && index3 == -1) {\n        // Two separators, language__variant\n        return new Locale(str.substring(0, 2), \"\", str.substring(3));\n    } else if (index1 > 2 && index2 > index1 && index3 == -1) {\n        // Two separators, language_country_variant\n        return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1));\n    } else if (index1 > 2 && index2 > index1 && index3 > index2) {\n        // Three separators, language_country_variant\n        return new Locale(str.substring(0, 2), str.substring(3, index1), str.substring(index1 + 1, index3));\n    } else {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}\n\nprivate static boolean isAlpha(char ch) {\n    return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..4b0b477a 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,41 +91,69 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (!isAlpha(ch0) || !isAlpha(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    int index1 = -1;\n+    int index2 = -1;\n+    int index3 = -1;\n+\n+    // Look for separators\n+    for (int i = 2; i < len; i++) {\n+        char ch = str.charAt(i);\n+\n+        if (ch == '_' && index1 < 0) {\n+            index1 = i;\n+        } else if (ch == '_' && index2 < 0) {\n+            index2 = i;\n+        } else if (ch == '_' && index3 < 0) {\n+            index3 = i;\n+            break;\n         }\n     }\n \n+    if (index1 == -1 && index2 == -1 && index3 == -1) {\n+        // No separators, language only\n+        return len == 2 ? new Locale(str) : new Locale(str.substring(0, 2), str.substring(2));\n+    } else if (index1 == -1 && index2 == 3 && index3 == -1) {\n+        // One separator, language_country\n+        return new Locale(str.substring(0, 2), str.substring(3));\n+    } else if (index1 == -1 || index2 == -1 || index2 == index1 + 1) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    } else if (index2 == 3 && index3 == -1) {\n+        // One separator, language_country_variant\n+        return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1));\n+    } else if (index1 > 2 && index2 == -1 && index3 == -1) {\n+        // Two separators, language__variant\n+        return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+    } else if (index1 > 2 && index2 > index1 && index3 == -1) {\n+        // Two separators, language_country_variant\n+        return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1));\n+    } else if (index1 > 2 && index2 > index1 && index3 > index2) {\n+        // Three separators, language_country_variant\n+        return new Locale(str.substring(0, 2), str.substring(3, index1), str.substring(index1 + 1, index3));\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+}\n+\n+private static boolean isAlpha(char ch) {\n+    return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}