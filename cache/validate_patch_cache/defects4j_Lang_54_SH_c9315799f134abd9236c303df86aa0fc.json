{
    "patch": "if (len < 2 || len > 10) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (!Character.isLowerCase(str.charAt(0)) || !Character.isLowerCase(str.charAt(1))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len > 2 && str.charAt(2) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len == 3) {\n    return new Locale(str.substring(0, 2), \"\");\n} else {\n    int pos = str.indexOf('_', 3);\n    if (pos == -1) {\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3));\n        } else if (len == 7) {\n            if (!str.substring(3).equalsIgnoreCase(\"POSIX\")) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), \"\", \"POSIX\");\n        } \n    } else {\n        if (pos != 5 && pos != 6 && pos != len) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String language = str.substring(0, 2);\n        String country = (pos == len) ? str.substring(3) : str.substring(3, pos);\n        String variant = (pos == len) ? \"\" : str.substring(pos + 1);\n        if (country.isEmpty()) {\n            return new Locale(language, \"\", variant);\n        } else if (variant.isEmpty()) {\n            return new Locale(language, country);\n        } else {\n            return new Locale(language, country, variant);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..9cec6db9 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,41 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len < 2 || len > 10) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (!Character.isLowerCase(str.charAt(0)) || !Character.isLowerCase(str.charAt(1))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len > 2 && str.charAt(2) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len == 3) {\n+    return new Locale(str.substring(0, 2), \"\");\n+} else {\n+    int pos = str.indexOf('_', 3);\n+    if (pos == -1) {\n+        if (len == 5) {\n+            return new Locale(str.substring(0, 2), str.substring(3));\n+        } else if (len == 7) {\n+            if (!str.substring(3).equalsIgnoreCase(\"POSIX\")) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            return new Locale(str.substring(0, 2), \"\", \"POSIX\");\n+        } \n+    } else {\n+        if (pos != 5 && pos != 6 && pos != len) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        String language = str.substring(0, 2);\n+        String country = (pos == len) ? str.substring(3) : str.substring(3, pos);\n+        String variant = (pos == len) ? \"\" : str.substring(pos + 1);\n+        if (country.isEmpty()) {\n+            return new Locale(language, \"\", variant);\n+        } else if (variant.isEmpty()) {\n+            return new Locale(language, country);\n+        } else {\n+            return new Locale(language, country, variant);\n+        }\n+    }\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}