{
    "patch": "    List<Node> unusedParams = new ArrayList<>();\n    Node argList = getFunctionArgList(function);\n    Node param = argList.getFirstChild();\n    while (param != null && !referenced.contains(fnScope.getVar(param.getString()))) {\n      unusedParams.add(param);\n      param = param.getNext();\n    }\n    for (Node unusedParam : unusedParams) {\n      argList.removeChild(unusedParam);\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..c9229781 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,16 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> unusedParams = new ArrayList<>();\n+    Node argList = getFunctionArgList(function);\n+    Node param = argList.getFirstChild();\n+    while (param != null && !referenced.contains(fnScope.getVar(param.getString()))) {\n+      unusedParams.add(param);\n+      param = param.getNext();\n+    }\n+    for (Node unusedParam : unusedParams) {\n+      argList.removeChild(unusedParam);\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}