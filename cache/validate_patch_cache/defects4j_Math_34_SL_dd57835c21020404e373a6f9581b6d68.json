{
    "patch": "        return new ImmutableIterator<Chromosome>(chromosomes.iterator());\n    }\n    \n    private static class ImmutableIterator<E> implements Iterator<E> {\n        private Iterator<E> iterator;\n        public ImmutableIterator(Iterator<E> iterator) {\n            this.iterator = iterator;\n        }\n        \n        public boolean hasNext() {\n            return iterator.hasNext();\n        }\n        \n        public E next() {\n            return iterator.next();\n        }\n        \n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    } ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\nindex 1eb005316..dd18e49cd 100644\n--- a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n@@ -206,6 +206,26 @@ public abstract class ListPopulation implements Population {\n      * @return chromosome iterator\n      */\n     public Iterator<Chromosome> iterator() {\n-        return chromosomes.iterator();\n+        return new ImmutableIterator<Chromosome>(chromosomes.iterator());\n+    }\n+    \n+    private static class ImmutableIterator<E> implements Iterator<E> {\n+        private Iterator<E> iterator;\n+        public ImmutableIterator(Iterator<E> iterator) {\n+            this.iterator = iterator;\n+        }\n+        \n+        public boolean hasNext() {\n+            return iterator.hasNext();\n+        }\n+        \n+        public E next() {\n+            return iterator.next();\n+        }\n+        \n+        public void remove() {\n+            throw new UnsupportedOperationException();\n+        }\n+    } \n     }\n }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}