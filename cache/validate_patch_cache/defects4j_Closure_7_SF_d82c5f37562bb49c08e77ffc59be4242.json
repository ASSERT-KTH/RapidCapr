{
    "patch": "public JSType caseObjectType(ObjectType type) {\n    if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n        JSType resultType = resultEqualsValue && ctorType.isSubtype(type) ? ctorType : type;\n        return resultType.isSubtype(getNativeType(\"Object|boolean|number|string\")) ? resultType : null;\n    }\n    return matchesExpectation(\"object\") ? type.isSubtype(getNativeType(\"Object|boolean|number|string\")) ? type : null : null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..e91407e1 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -607,15 +607,14 @@ public abstract class ChainableReverseAbstractInterpreter\n     }\n \n     @Override\n-    public JSType caseObjectType(ObjectType type) {\n-      if (value.equals(\"function\")) {\n+public JSType caseObjectType(ObjectType type) {\n+    if (value.equals(\"function\")) {\n         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n-          // Objects are restricted to \"Function\", subtypes are left\n-          // Only filter out subtypes of \"function\"\n-      }\n-      return matchesExpectation(\"object\") ? type : null;\n+        JSType resultType = resultEqualsValue && ctorType.isSubtype(type) ? ctorType : type;\n+        return resultType.isSubtype(getNativeType(\"Object|boolean|number|string\")) ? resultType : null;\n     }\n+    return matchesExpectation(\"object\") ? type.isSubtype(getNativeType(\"Object|boolean|number|string\")) ? type : null : null;\n+}\n \n     @Override\n     public JSType caseStringType() {",
    "result_reason": "error: method getNativeType in class ChainableReverseAbstractInterpreter cannot be applied to given types;",
    "test_result": "ERROR"
}