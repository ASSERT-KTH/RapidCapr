{
    "patch": "public void testLANG807() {\n    try {\n        String generatedString = LocaleUtils.random(10, 'z' + 1, 'z', false, false, null, new Random());\n        fail(\"IllegalArgumentException should have been thrown, but instead got: \" + generatedString);\n    } catch (IllegalArgumentException e) {\n        assertTrue(\"Exception message must contain 'bound must be greater than start', but was: \" + e.getMessage(),\n                e.getMessage().contains(\"bound must be greater than start\"));\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..9f835c5e 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,15 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+public void testLANG807() {\n+    try {\n+        String generatedString = LocaleUtils.random(10, 'z' + 1, 'z', false, false, null, new Random());\n+        fail(\"IllegalArgumentException should have been thrown, but instead got: \" + generatedString);\n+    } catch (IllegalArgumentException e) {\n+        assertTrue(\"Exception message must contain 'bound must be greater than start', but was: \" + e.getMessage(),\n+                e.getMessage().contains(\"bound must be greater than start\"));\n+    }\n+}\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}