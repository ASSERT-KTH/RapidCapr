{
    "patch": "public double[] repairAndDecode(final double[] x) {\n    if (x == null || x.length == 0) {\n        return new double[0];\n    }\n    \n    double[] repaired = repair(x);\n    if (repaired == null || repaired.length != x.length) {\n        return new double[0];\n    }\n    \n    double[] decoded = decode(repaired);\n    if (decoded == null || decoded.length != x.length) {\n        return new double[0];\n    }\n    \n    for (int i = 0; i < decoded.length; i++) {\n        if (Double.isNaN(decoded[i])) {\n            decoded[i] = 0.0;\n        } else if (decoded[i] < 0.0) {\n            decoded[i] = 0.0;\n        } else if (decoded[i] > 1.0) {\n            decoded[i] = 1.0;\n        }\n    }\n    \n    return decoded;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 4b7dbf6bb..c7ab9836e 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -917,10 +917,33 @@ public class CMAESOptimizer\n          * @param x Normalized objective variables.\n          * @return the original objective variables, possibly repaired.\n          */\n-        public double[] repairAndDecode(final double[] x) {\n-            return\n-                decode(x);\n+public double[] repairAndDecode(final double[] x) {\n+    if (x == null || x.length == 0) {\n+        return new double[0];\n+    }\n+    \n+    double[] repaired = repair(x);\n+    if (repaired == null || repaired.length != x.length) {\n+        return new double[0];\n+    }\n+    \n+    double[] decoded = decode(repaired);\n+    if (decoded == null || decoded.length != x.length) {\n+        return new double[0];\n+    }\n+    \n+    for (int i = 0; i < decoded.length; i++) {\n+        if (Double.isNaN(decoded[i])) {\n+            decoded[i] = 0.0;\n+        } else if (decoded[i] < 0.0) {\n+            decoded[i] = 0.0;\n+        } else if (decoded[i] > 1.0) {\n+            decoded[i] = 1.0;\n         }\n+    }\n+    \n+    return decoded;\n+}\n \n         /**\n          * @param x Normalized objective variables.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}