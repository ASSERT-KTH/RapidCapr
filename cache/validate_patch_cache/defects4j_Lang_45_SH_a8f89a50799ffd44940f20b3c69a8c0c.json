{
    "patch": "// If the input string is null, return null. \nif (str == null) {\n    return null;\n}\n\n// If the lower value is greater than the string length, set the lower and upper bounds both to the string length.\nif (lower >= str.length()) {\n    lower = str.length();\n    upper = str.length();\n}\n\n// If the upper value is -1 or greater than the string length, set it to the string length.\nif (upper == -1 || upper > str.length()) {\n    upper = str.length();\n}\n\n// if upper is less than lower, raise it to lower\nif (upper < lower) {\n    upper = lower;\n}\n\n// Convert the input string to a String Builder\nStringBuilder sb = new StringBuilder(str);\n\n// If the upper bound is less than the string length, add the appendToEnd String.\nif (upper < str.length()) {\n    if (appendToEnd != null) {\n        sb.replace(upper, str.length(), appendToEnd);\n    } else {\n        sb.replace(upper, str.length(), \"\");\n    }\n}\n\n// Truncate the string if the lower bound is greater than 0, and return\nif (lower > 0) {\n    sb.delete(0, lower);\n}\n\nreturn sb.toString();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..4f857d26 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,45 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// If the input string is null, return null. \n+if (str == null) {\n+    return null;\n+}\n+\n+// If the lower value is greater than the string length, set the lower and upper bounds both to the string length.\n+if (lower >= str.length()) {\n+    lower = str.length();\n+    upper = str.length();\n+}\n+\n+// If the upper value is -1 or greater than the string length, set it to the string length.\n+if (upper == -1 || upper > str.length()) {\n+    upper = str.length();\n+}\n+\n+// if upper is less than lower, raise it to lower\n+if (upper < lower) {\n+    upper = lower;\n+}\n+\n+// Convert the input string to a String Builder\n+StringBuilder sb = new StringBuilder(str);\n+\n+// If the upper bound is less than the string length, add the appendToEnd String.\n+if (upper < str.length()) {\n+    if (appendToEnd != null) {\n+        sb.replace(upper, str.length(), appendToEnd);\n+    } else {\n+        sb.replace(upper, str.length(), \"\");\n+    }\n+}\n+\n+// Truncate the string if the lower bound is greater than 0, and return\n+if (lower > 0) {\n+    sb.delete(0, lower);\n+}\n+\n+return sb.toString();\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}