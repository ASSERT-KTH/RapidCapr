{
    "patch": "for (String paren_group : paren_groups) {\n    int depth = 0;\n    int max_depth = 0;\n\n    // Ignore any non-parentheses characters in the input string\n    for (char c : paren_group.toCharArray()) {\n        if (c == '(') {\n            depth += 1;\n            max_depth = Math.max(depth, max_depth);\n        } else if (c == ')') {\n            depth -= 1;\n            if (depth < 0) {\n                depth = 0;\n            }\n        }\n    }\n\n    result.add(max_depth);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\nindex 6bc914f..bdaaf26 100644\n--- a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n+++ b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n@@ -15,6 +15,25 @@ public class PARSE_NESTED_PARENS {\n                 if (c == '('){\n                     depth += 1;\n                     max_depth = Math.max(depth, max_depth);\n+for (String paren_group : paren_groups) {\n+    int depth = 0;\n+    int max_depth = 0;\n+\n+    // Ignore any non-parentheses characters in the input string\n+    for (char c : paren_group.toCharArray()) {\n+        if (c == '(') {\n+            depth += 1;\n+            max_depth = Math.max(depth, max_depth);\n+        } else if (c == ')') {\n+            depth -= 1;\n+            if (depth < 0) {\n+                depth = 0;\n+            }\n+        }\n+    }\n+\n+    result.add(max_depth);\n+}\n                 }\n             }\n             result.add(max_depth);",
    "result_reason": " /tmp/humaneval-PARSE_NESTED_PARENS/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java:[18,13] variable paren_group is already defined in method parse_nested_parens(java.lang.String)",
    "test_result": "ERROR"
}