{
    "patch": "name = new Name();\nname.setIdentifier(\"\");\nisUnnamedFunction = true;\nname.setLineno(functionNode.getLineno());\n// The left paren has to be on the same line as the function name.\nint lpColumn = functionNode.getPosition() + functionNode.getLength() + 1;\nname.setCharno(lpColumn);\nname.putProp(Node.IS_METHOD, functionNode.isMethod());\nname.setLength(lpColumn - functionNode.getPosition() + 1);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..0632381c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,15 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+name = new Name();\n+name.setIdentifier(\"\");\n+isUnnamedFunction = true;\n+name.setLineno(functionNode.getLineno());\n+// The left paren has to be on the same line as the function name.\n+int lpColumn = functionNode.getPosition() + functionNode.getLength() + 1;\n+name.setCharno(lpColumn);\n+name.putProp(Node.IS_METHOD, functionNode.isMethod());\n+name.setLength(lpColumn - functionNode.getPosition() + 1);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}