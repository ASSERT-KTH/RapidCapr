{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isPrototypeProperty(parent)) {\n        return false;\n      }\n      if (NodeUtil.isGet(parent.getParent())) {\n        Node grandparent = parent.getParent();\n        if (grandparent.getParent() != null && \n            grandparent.getParent().getType() == Token.EXPR_RESULT && \n            grandparent.getParent().getParent() != null && \n            grandparent.getParent().getParent().getType() == Token.SCRIPT) {\n          Node rhs = grandparent.getNext();\n          if (rhs != null && rhs.getType() == Token.NAME && rhs.getString().equals(\"$jscomp$templatize\")) {\n            return true;\n          }\n        }\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..1e849a0e 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,23 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isPrototypeProperty(parent)) {\n+        return false;\n+      }\n+      if (NodeUtil.isGet(parent.getParent())) {\n+        Node grandparent = parent.getParent();\n+        if (grandparent.getParent() != null && \n+            grandparent.getParent().getType() == Token.EXPR_RESULT && \n+            grandparent.getParent().getParent() != null && \n+            grandparent.getParent().getParent().getType() == Token.SCRIPT) {\n+          Node rhs = grandparent.getNext();\n+          if (rhs != null && rhs.getType() == Token.NAME && rhs.getString().equals(\"$jscomp$templatize\")) {\n+            return true;\n+          }\n+        }\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}