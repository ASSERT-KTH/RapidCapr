{
    "patch": "if (cfa != null) {\n  Node finallyParent = finallyNode.getParent();\n  if (finallyParent.getNext() == null) { // Current flow of block end.\n    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, finallyParent, cfa));\n  } else {\n    Node nextNode = finallyNode.getNext();\n    Node followNode = computeFollowNode(fromNode, finallyParent, cfa);\n    if (nextNode.getType() == Token.FUNCTION) { // Function declaration.\n      nextNode = nextNode.getNext();\n    }\n    cfa.createEdge(fromNode, Branch.UNCOND, computeFallThrough(nextNode));\n    cfa.createEdge(finallyNode, Branch.UNCOND, followNode);\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..2de5e5b7 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,20 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (cfa != null) {\n+  Node finallyParent = finallyNode.getParent();\n+  if (finallyParent.getNext() == null) { // Current flow of block end.\n+    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, finallyParent, cfa));\n+  } else {\n+    Node nextNode = finallyNode.getNext();\n+    Node followNode = computeFollowNode(fromNode, finallyParent, cfa);\n+    if (nextNode.getType() == Token.FUNCTION) { // Function declaration.\n+      nextNode = nextNode.getNext();\n+    }\n+    cfa.createEdge(fromNode, Branch.UNCOND, computeFallThrough(nextNode));\n+    cfa.createEdge(finallyNode, Branch.UNCOND, followNode);\n+  }\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}