{
    "patch": "// handle lower and upper parameter values\nint strLength = str.length();\nif (lower >= strLength) {\n    lower = strLength;\n    upper = strLength;\n} else {\n    if (upper == -1) {\n        upper = strLength;\n    } else if (upper > strLength) {\n        upper = strLength;\n    }\n    if (upper < lower) {\n        upper = lower;\n    }\n}\n\n// handle appendToEnd value\nif (appendToEnd == null) {\n    appendToEnd = StringUtils.EMPTY;\n}\n\n// find index of first space occurrence after lower value\nint index = StringUtils.indexOf(str, \" \", lower);\n\n// build result string\nString result;\nif (index == -1 || index > upper) {\n    result = str.substring(0, upper) + appendToEnd;\n} else {\n    result = str.substring(0, index) + appendToEnd;\n}\n\nreturn result;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..6c559886 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,39 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// handle lower and upper parameter values\n+int strLength = str.length();\n+if (lower >= strLength) {\n+    lower = strLength;\n+    upper = strLength;\n+} else {\n+    if (upper == -1) {\n+        upper = strLength;\n+    } else if (upper > strLength) {\n+        upper = strLength;\n+    }\n+    if (upper < lower) {\n+        upper = lower;\n+    }\n+}\n+\n+// handle appendToEnd value\n+if (appendToEnd == null) {\n+    appendToEnd = StringUtils.EMPTY;\n+}\n+\n+// find index of first space occurrence after lower value\n+int index = StringUtils.indexOf(str, \" \", lower);\n+\n+// build result string\n+String result;\n+if (index == -1 || index > upper) {\n+    result = str.substring(0, upper) + appendToEnd;\n+} else {\n+    result = str.substring(0, index) + appendToEnd;\n+}\n+\n+return result;\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable result is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}