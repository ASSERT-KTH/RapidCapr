{
    "patch": "public static double getTypedPercent(String json) {\n    Gson gson = new GsonBuilder().create();\n    Map<String, Object> map = new HashMap<>();\n    map = gson.fromJson(json, map.getClass());\n\n    double count = 0.0;\n    double totalCount = 0.0;\n\n    for (Object value : map.values()) {\n        if (value instanceof String) {\n            totalCount++;\n            try {\n                double numValue = Double.parseDouble((String) value);\n                count++;\n            } catch (NumberFormatException e) {\n                // do nothing\n            }\n        }\n    }\n\n    if (totalCount == 0.0) {\n        return 0.0;\n    } else {\n        return count / totalCount * 100.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..26709ae4 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,32 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    Gson gson = new GsonBuilder().create();\n+    Map<String, Object> map = new HashMap<>();\n+    map = gson.fromJson(json, map.getClass());\n+\n+    double count = 0.0;\n+    double totalCount = 0.0;\n+\n+    for (Object value : map.values()) {\n+        if (value instanceof String) {\n+            totalCount++;\n+            try {\n+                double numValue = Double.parseDouble((String) value);\n+                count++;\n+            } catch (NumberFormatException e) {\n+                // do nothing\n+            }\n+        }\n+    }\n+\n+    if (totalCount == 0.0) {\n+        return 0.0;\n+    } else {\n+        return count / totalCount * 100.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}