{
    "patch": "      Node name = NodeUtil.getBestLValueName(first);\n\n      if (name != null && name.isCast()) {\n          name = NodeUtil.getBestLValueName(name.getFirstChild());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..604df7da 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,10 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      Node name = NodeUtil.getBestLValueName(first);\n+\n+      if (name != null && name.isCast()) {\n+          name = NodeUtil.getBestLValueName(name.getFirstChild());\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}