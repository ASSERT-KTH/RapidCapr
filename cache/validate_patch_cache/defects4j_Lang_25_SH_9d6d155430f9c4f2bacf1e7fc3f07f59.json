{
    "patch": "byte b = src[i];\nif (b < 0) {\n    dst[k] = (byte) '=';\n    dst[k + 1] = (byte) HEX_CHARS[(b & 0xF0) >>> 4];\n    dst[k + 2] = (byte) HEX_CHARS[b & 0x0F];\n    k += 3;\n} else {\n    switch ((char) b) {\n        case '_':\n            dst[k] = (byte) '=';\n            dst[k + 1] = (byte) '5';\n            dst[k + 2] = (byte) 'F';\n            k += 3;\n            break;\n        case '-':\n            dst[k] = (byte) '=';\n            dst[k + 1] = (byte) '2';\n            dst[k + 2] = (byte) 'D';\n            k += 3;\n            break;\n        default:\n            dst[k++] = b;\n            break;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}