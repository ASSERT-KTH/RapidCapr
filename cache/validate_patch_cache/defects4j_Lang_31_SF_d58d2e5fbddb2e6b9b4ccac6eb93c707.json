{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char... searchCharacters) {\n    if (isEmpty(sequence) || searchCharacters == null || searchCharacters.length == 0) {\n        return false;\n    }\n\n    final int seqLength = sequence.length();\n    final int searchLen = searchCharacters.length;\n\n    if (searchLen == 1) {\n        final char searchChar = searchCharacters[0];\n        for (int i = 0; i < seqLength; i++) {\n            if (sequence.charAt(i) == searchChar) {\n                return true;\n            }\n        }\n    } else {\n        final Set<Character> searchSet = new HashSet<>();\n        for (char c : searchCharacters) {\n            searchSet.add(c);\n        }\n        final int endIndex = seqLength - 1;\n\n        for (int i = 0; i < seqLength; i++) {\n            final char ch = sequence.charAt(i);\n\n            if (searchSet.contains(ch)) {\n                return true;\n            }\n\n            if (i < endIndex) {\n                final char surrogatePairLastChar = sequence.charAt(i + 1);\n                if (Character.isLowSurrogate(surrogatePairLastChar) && Character.isHighSurrogate(ch)) {\n                    final int codePoint = Character.toCodePoint(ch, surrogatePairLastChar);\n                    if (searchSet.contains((char) codePoint)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isEmpty(CharSequence sequence) {\n    return sequence == null || sequence.length() == 0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..8ece44c5 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,52 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char... searchCharacters) {\n+    if (isEmpty(sequence) || searchCharacters == null || searchCharacters.length == 0) {\n+        return false;\n+    }\n+\n+    final int seqLength = sequence.length();\n+    final int searchLen = searchCharacters.length;\n+\n+    if (searchLen == 1) {\n+        final char searchChar = searchCharacters[0];\n+        for (int i = 0; i < seqLength; i++) {\n+            if (sequence.charAt(i) == searchChar) {\n+                return true;\n+            }\n+        }\n+    } else {\n+        final Set<Character> searchSet = new HashSet<>();\n+        for (char c : searchCharacters) {\n+            searchSet.add(c);\n+        }\n+        final int endIndex = seqLength - 1;\n+\n+        for (int i = 0; i < seqLength; i++) {\n+            final char ch = sequence.charAt(i);\n+\n+            if (searchSet.contains(ch)) {\n+                return true;\n+            }\n+\n+            if (i < endIndex) {\n+                final char surrogatePairLastChar = sequence.charAt(i + 1);\n+                if (Character.isLowSurrogate(surrogatePairLastChar) && Character.isHighSurrogate(ch)) {\n+                    final int codePoint = Character.toCodePoint(ch, surrogatePairLastChar);\n+                    if (searchSet.contains((char) codePoint)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isEmpty(CharSequence sequence) {\n+    return sequence == null || sequence.length() == 0;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}