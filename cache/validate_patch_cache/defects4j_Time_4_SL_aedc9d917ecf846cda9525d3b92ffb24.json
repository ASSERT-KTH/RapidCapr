{
    "patch": "```\nPartial newPartial = new Partial(iChronology, newValues, newTypes);\n``` \n\nThis line creates a new `Partial` instance using the constructor that accepts `Chronology`, `int[]` and `DateTimeFieldType[]` arguments. The order of the arguments is changed to pass the validated `newValues` and `newTypes` arrays to the constructor, along with the original `iChronology` argument.",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..76d733a4 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,11 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+```\n+Partial newPartial = new Partial(iChronology, newValues, newTypes);\n+``` \n+\n+This line creates a new `Partial` instance using the constructor that accepts `Chronology`, `int[]` and `DateTimeFieldType[]` arguments. The order of the arguments is changed to pass the validated `newValues` and `newTypes` arrays to the constructor, along with the original `iChronology` argument.\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}