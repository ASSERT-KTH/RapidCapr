{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n                int offsetAfter = getOffset(nextAdjusted);\n                if (offsetAdjusted == offsetAfter) {\n                    // we were successful in pushing the time forward to\n                    // at least the next transition.\n                    // however, there is still the possibility that the\n                    // time hits another transition further on, so we need\n                    // to continue the process...\n                    return getOffsetFromLocal(instantAdjusted);\n                } else {\n                    // the gap is too small to fit back inside so return\n                    // the original zone info\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1e010bfd 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,29 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                // if we just return offsetAdjusted then the time is pushed\n+                // back before the transition, whereas it should be\n+                // on or after the transition\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    return offsetLocal;\n+                }\n+                int offsetAfter = getOffset(nextAdjusted);\n+                if (offsetAdjusted == offsetAfter) {\n+                    // we were successful in pushing the time forward to\n+                    // at least the next transition.\n+                    // however, there is still the possibility that the\n+                    // time hits another transition further on, so we need\n+                    // to continue the process...\n+                    return getOffsetFromLocal(instantAdjusted);\n+                } else {\n+                    // the gap is too small to fit back inside so return\n+                    // the original zone info\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}