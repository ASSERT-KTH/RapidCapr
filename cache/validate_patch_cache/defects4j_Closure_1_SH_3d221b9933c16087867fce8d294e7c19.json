{
    "patch": "      if (lastArg == null) {\n        // All arguments were removed. Ensure that the function has an empty arg list.\n        Node emptyArgList = new Node(Token.PARAM_LIST);\n        function.replaceChild(argList, emptyArgList);\n        argList = emptyArgList;\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..67df5b5b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,12 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      if (lastArg == null) {\n+        // All arguments were removed. Ensure that the function has an empty arg list.\n+        Node emptyArgList = new Node(Token.PARAM_LIST);\n+        function.replaceChild(argList, emptyArgList);\n+        argList = emptyArgList;\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}