{
    "patch": "public class StringUtils {\n\n    public static boolean containsAny(final char[] str, final char[] searchChars) {\n        if (searchChars == null || str == null) {\n            return false;\n        }\n        \n        final int len = str.length;\n        final int searchLen = searchChars.length;\n        if (searchLen == 0) {\n            return false;\n        }\n        if (searchLen == 1) {\n            return CharUtils.indexOf(str, searchChars[0]) != -1;\n        }\n        \n        final boolean[] searchMap = new boolean[Character.MAX_VALUE + 1];\n        for (char c : searchChars) {\n            searchMap[c] = true;\n        }\n\n        for (int i = 0; i < len; i++) {\n            if (searchMap[str[i]]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..089c0faf 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+\n+    public static boolean containsAny(final char[] str, final char[] searchChars) {\n+        if (searchChars == null || str == null) {\n+            return false;\n+        }\n+        \n+        final int len = str.length;\n+        final int searchLen = searchChars.length;\n+        if (searchLen == 0) {\n+            return false;\n+        }\n+        if (searchLen == 1) {\n+            return CharUtils.indexOf(str, searchChars[0]) != -1;\n+        }\n+        \n+        final boolean[] searchMap = new boolean[Character.MAX_VALUE + 1];\n+        for (char c : searchChars) {\n+            searchMap[c] = true;\n+        }\n+\n+        for (int i = 0; i < len; i++) {\n+            if (searchMap[str[i]]) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}