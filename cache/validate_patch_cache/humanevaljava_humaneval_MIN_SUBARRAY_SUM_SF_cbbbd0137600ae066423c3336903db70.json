{
    "patch": "public static long min_subarray_sum(ArrayList<Long> nums) {\n    long min_sum = Long.MAX_VALUE;\n    long s = 0;\n    for(long num : nums) {\n        s += num;\n        min_sum = Math.min(min_sum, s);\n        s = Math.min(s, 0);\n    }\n    if(min_sum >= 0){\n        return 0;\n    } else {\n        return min_sum;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java b/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\nindex 36e383f..92dcf51 100644\n--- a/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\n+++ b/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\n@@ -11,23 +11,18 @@ import java.util.ArrayList;\n  */\n \n public class MIN_SUBARRAY_SUM {\n-    public static long min_subarray_sum(ArrayList<Long> nums) {\n-        long max_sum = 0;\n-        long s = 0;\n-        for(long num : nums) {\n-            s += num;\n-            if(s < 0) {\n-                s = 0;\n-            }\n-            max_sum = Math.max(s, max_sum);\n-        }\n-        if(max_sum == 0) {\n-            max_sum = -nums.get(0);\n-            for(int i = 1; i < nums.size(); i++) {\n-                max_sum = Math.max(max_sum, -nums.get(i));\n-            }\n-        }\n-        long min_sum = -max_sum;\n+public static long min_subarray_sum(ArrayList<Long> nums) {\n+    long min_sum = Long.MAX_VALUE;\n+    long s = 0;\n+    for(long num : nums) {\n+        s += num;\n+        min_sum = Math.min(min_sum, s);\n+        s = Math.min(s, 0);\n+    }\n+    if(min_sum >= 0){\n+        return 0;\n+    } else {\n         return min_sum;\n     }\n }\n+}",
    "result_reason": "   TEST_MIN_SUBARRAY_SUM.test_0:11 expected:<1> but was:<0>",
    "test_result": "FAIL"
}