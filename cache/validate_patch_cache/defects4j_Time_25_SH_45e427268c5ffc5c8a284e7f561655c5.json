{
    "patch": "                // we need to ensure that time is always after the DST gap\n                // this happens naturally for positive offsets, but not for negative\n                if ((offsetLocal - offsetAdjusted) < 0) {\n                    long prev = previousTransition(instantAdjusted);\n                    int offsetPrev = getOffset(prev);\n                    long next = nextTransition(instantAdjusted);\n                    int offsetNext = getOffset(next);\n                    if (offsetPrev < offsetNext) {\n                        // we are in a DST gap, so need to return the standard offset\n                        return offsetPrev;\n                    }\n                    // we are in a DST overlap, so need to return the later offset\n                    return offsetNext;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8bc51fd0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // we need to ensure that time is always after the DST gap\n+                // this happens naturally for positive offsets, but not for negative\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    long prev = previousTransition(instantAdjusted);\n+                    int offsetPrev = getOffset(prev);\n+                    long next = nextTransition(instantAdjusted);\n+                    int offsetNext = getOffset(next);\n+                    if (offsetPrev < offsetNext) {\n+                        // we are in a DST gap, so need to return the standard offset\n+                        return offsetPrev;\n+                    }\n+                    // we are in a DST overlap, so need to return the later offset\n+                    return offsetNext;\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}