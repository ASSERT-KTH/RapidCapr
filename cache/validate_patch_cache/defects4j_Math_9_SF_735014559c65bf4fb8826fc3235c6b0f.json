{
    "patch": "public Line revert() {\n    final Line reverted = new Line(zero, direction.negate());\n    Line zeroLine = new Line(zero, zero);\n    if (zeroLine.equals(this)) {\n        return this;\n    }\n\n    return reverted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..aacf5d017 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -83,11 +83,16 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n     /** Get a line with reversed direction.\n      * @return a new instance, with reversed direction\n      */\n-    public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n-        return reverted;\n+public Line revert() {\n+    final Line reverted = new Line(zero, direction.negate());\n+    Line zeroLine = new Line(zero, zero);\n+    if (zeroLine.equals(this)) {\n+        return this;\n     }\n \n+    return reverted;\n+}\n+\n     /** Get the normalized direction vector.\n      * @return normalized direction vector\n      */",
    "result_reason": "org.apache.commons.math3.exception.MathIllegalArgumentException: zero norm",
    "test_result": "FAIL"
}