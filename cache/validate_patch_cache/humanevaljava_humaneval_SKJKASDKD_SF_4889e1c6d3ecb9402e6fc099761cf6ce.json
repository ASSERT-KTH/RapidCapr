{
    "patch": "public static int skjkasdkd(int[] lst) {\n    int max = -1;\n    int digitSum = 0;\n    for(int i = 0; i < lst.length; i++) {\n        if(isPrime(lst[i])) {\n            if(lst[i] > max) {\n                max = lst[i];\n                digitSum = 0;\n                while (max > 0) {\n                    digitSum += max % 10;\n                    max /= 10;\n                }\n            } else if (lst[i] == max) {\n                int digits = 0;\n                int num = lst[i];\n                while (num > 0) {\n                    digits += num % 10;\n                    num /= 10;\n                }\n                digitSum = Math.max(digitSum, digits);\n            }\n        }\n    }\n    return digitSum;\n}\n\nprivate static boolean isPrime(int n) {\n    if(n < 2) {\n        return false;\n    }\n    for(int i = 2; i * i <= n; i++) {\n        if(n % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SKJKASDKD.java b/src/main/java/humaneval/buggy/SKJKASDKD.java\nindex 4fd1548..c067374 100644\n--- a/src/main/java/humaneval/buggy/SKJKASDKD.java\n+++ b/src/main/java/humaneval/buggy/SKJKASDKD.java\n@@ -19,18 +19,41 @@ public class SKJKASDKD {\n         return true;\n     }\n \n-    public static int skjkasdkd(int[] lst) {\n-        int max = 0;\n-        int i = 0;\n-        while(i < lst.length) {\n-            if (lst[i] > max && is_prime(lst[i]))\n+public static int skjkasdkd(int[] lst) {\n+    int max = -1;\n+    int digitSum = 0;\n+    for(int i = 0; i < lst.length; i++) {\n+        if(isPrime(lst[i])) {\n+            if(lst[i] > max) {\n                 max = lst[i];\n-            i += 1;\n+                digitSum = 0;\n+                while (max > 0) {\n+                    digitSum += max % 10;\n+                    max /= 10;\n+                }\n+            } else if (lst[i] == max) {\n+                int digits = 0;\n+                int num = lst[i];\n+                while (num > 0) {\n+                    digits += num % 10;\n+                    num /= 10;\n+                }\n+                digitSum = Math.max(digitSum, digits);\n+            }\n         }\n-        int result = 0;\n-        for (char c : (max + \"\").toCharArray()) {\n-            result += (int) c;\n+    }\n+    return digitSum;\n+}\n+\n+private static boolean isPrime(int n) {\n+    if(n < 2) {\n+        return false;\n+    }\n+    for(int i = 2; i * i <= n; i++) {\n+        if(n % i == 0) {\n+            return false;\n         }\n-        return result;\n     }\n+    return true;\n+}\n }",
    "result_reason": "   TEST_SKJKASDKD.test_0:7 expected:<3> but was:<10>",
    "test_result": "FAIL"
}