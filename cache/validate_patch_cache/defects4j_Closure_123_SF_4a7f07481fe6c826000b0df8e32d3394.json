{
    "patch": "public class ForLoopBug {\n\n    public static String fixLoop() {\n        boolean c = true;\n        boolean[] d = new boolean[2];\n        String expected = \"for(a=c?0:(0 in d);;)foo()\";\n        String b = \"for(a=c?0:\";\n\n        if (0 in d) {\n            b += \"0 in d\";\n        } else {\n            b += \"1\";\n        }\n\n        b += \";;)foo()\";\n\n        return expected.equals(b) ? \"bug is fixed\" : \"bug is not fixed\";\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..320d7cbb 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,25 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class ForLoopBug {\n+\n+    public static String fixLoop() {\n+        boolean c = true;\n+        boolean[] d = new boolean[2];\n+        String expected = \"for(a=c?0:(0 in d);;)foo()\";\n+        String b = \"for(a=c?0:\";\n+\n+        if (0 in d) {\n+            b += \"0 in d\";\n+        } else {\n+            b += \"1\";\n+        }\n+\n+        b += \";;)foo()\";\n+\n+        return expected.equals(b) ? \"bug is fixed\" : \"bug is not fixed\";\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}