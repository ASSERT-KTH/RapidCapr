{
    "patch": "            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                if (e.getDateTimeFieldType() == DateTimeFieldType.year() && e.getIllegalValue() == 0) {\n                    // Pivot year.\n                    e.setIllegalFieldValueException(DateTimeFieldType.year(), \"1\");\n                    e.prependMessage(\"Defaulting to year 1 AD\");\n                    iSavedFields[0] = new SavedField(DateTimeFieldType.year(), \"1\");\n                } else {\n                    throw e;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..7b709e85 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,18 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                if (e.getDateTimeFieldType() == DateTimeFieldType.year() && e.getIllegalValue() == 0) {\n+                    // Pivot year.\n+                    e.setIllegalFieldValueException(DateTimeFieldType.year(), \"1\");\n+                    e.prependMessage(\"Defaulting to year 1 AD\");\n+                    iSavedFields[0] = new SavedField(DateTimeFieldType.year(), \"1\");\n+                } else {\n+                    throw e;\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}