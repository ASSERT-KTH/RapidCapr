{
    "patch": "\n        String pat = b + b;\n        for (int i = 0; i < a.length(); i += 1) {\n            if (a.charAt(i) == pat.charAt(0)) {\n                int j = 0;\n                while (j < l && a.charAt(i + j) == pat.charAt(j)) {\n                    j += 1;\n                }\n                if (j == l) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..48cb7ef 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -11,9 +11,20 @@ package humaneval.buggy;\n public class CYCPATTERN_CHECK {\n     public static boolean cycpattern_check(String a, String b) {\n         int l = b.length();\n-        String pat = b;\n+\n+        String pat = b + b;\n         for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n+            if (a.charAt(i) == pat.charAt(0)) {\n+                int j = 0;\n+                while (j < l && a.charAt(i + j) == pat.charAt(j)) {\n+                    j += 1;\n+                }\n+                if (j == l) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n                 if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n             }\n         }",
    "result_reason": " /tmp/humaneval-CYCPATTERN_CHECK/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java:[31,9] class, interface, or enum expected",
    "test_result": "ERROR"
}