{
    "patch": "public class MyClass {\n    public static String getProperty(String propKey) {\n        String propValue;\n\n        try {\n            Properties prop = new Properties();\n            FileInputStream input = new FileInputStream(\"config.properties\");\n            prop.load(input);\n            input.close();\n\n            propValue = prop.getProperty(propKey);\n\n            if (propValue == null || propValue.isEmpty()) {\n                throw new IllegalArgumentException();\n            }\n        } catch (IOException e) {\n            System.err.println(\"Error: config.properties not found\");\n            throw new RuntimeException(e);\n        } catch (IllegalArgumentException e) {\n            System.err.printf(\"Error: the property '%s' is not specified or is empty%n\", propKey);\n            throw new RuntimeException(e);\n        }\n\n        return propValue;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..38dd994c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,32 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public class MyClass {\n+    public static String getProperty(String propKey) {\n+        String propValue;\n+\n+        try {\n+            Properties prop = new Properties();\n+            FileInputStream input = new FileInputStream(\"config.properties\");\n+            prop.load(input);\n+            input.close();\n+\n+            propValue = prop.getProperty(propKey);\n+\n+            if (propValue == null || propValue.isEmpty()) {\n+                throw new IllegalArgumentException();\n+            }\n+        } catch (IOException e) {\n+            System.err.println(\"Error: config.properties not found\");\n+            throw new RuntimeException(e);\n+        } catch (IllegalArgumentException e) {\n+            System.err.printf(\"Error: the property '%s' is not specified or is empty%n\", propKey);\n+            throw new RuntimeException(e);\n+        }\n+\n+        return propValue;\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}