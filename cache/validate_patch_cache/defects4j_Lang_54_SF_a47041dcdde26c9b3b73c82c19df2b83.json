{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char sep = '-';\n    if (str.contains(\"_\")) {\n        sep = '_';\n        if (str.indexOf(sep) != str.lastIndexOf(sep)) {\n            if (str.lastIndexOf(sep) - str.indexOf(sep) == 1) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (len - str.lastIndexOf(sep) > 3) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n    }\n    String[] parts = str.split(\"\" + sep, -1);\n    int part0Len = parts[0].length();\n    if (part0Len != 2 && part0Len != 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (parts.length == 1) {\n        return new Locale(parts[0]);\n    } else if (parts.length == 2) {\n        return new Locale(parts[0], parts[1]);\n    } else {\n        return new Locale(parts[0], parts[1], parts[2]);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..57b3deff 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,38 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char sep = '-';\n+    if (str.contains(\"_\")) {\n+        sep = '_';\n+        if (str.indexOf(sep) != str.lastIndexOf(sep)) {\n+            if (str.lastIndexOf(sep) - str.indexOf(sep) == 1) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+            } else if (len - str.lastIndexOf(sep) > 3) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n         }\n     }\n+    String[] parts = str.split(\"\" + sep, -1);\n+    int part0Len = parts[0].length();\n+    if (part0Len != 2 && part0Len != 3) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (parts.length == 1) {\n+        return new Locale(parts[0]);\n+    } else if (parts.length == 2) {\n+        return new Locale(parts[0], parts[1]);\n+    } else {\n+        return new Locale(parts[0], parts[1], parts[2]);\n+    }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}