{
    "patch": "if (functionType.getThisType() != null) {\n  Node parent = n.getParent();\n  Node gramps = parent.getParent();\n  boolean isGetPropOrGetElem =\n      (parent.isGetProp() && n == parent.getLastChild()) || parent.isGetElem();\n  boolean isCallWithGet = isGetPropOrGetElem && (gramps.isCall() || gramps.isNew());\n  boolean isMethodCallWithCorrectThis =\n      gramps.isCall() && gramps.getFirstChild().matchesQualifiedName(\"goog.bind\") &&\n          isGetPropOrGetElem && gramps.getChildAtIndex(2) == parent;\n\n  if (!isCallWithGet && !isMethodCallWithCorrectThis) {\n    report(t, n, INVALID_THIS_TYPE, functionType.getThisType().toString());\n    ensureTyped(t, n);\n    return;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..33bb7ceb 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+if (functionType.getThisType() != null) {\n+  Node parent = n.getParent();\n+  Node gramps = parent.getParent();\n+  boolean isGetPropOrGetElem =\n+      (parent.isGetProp() && n == parent.getLastChild()) || parent.isGetElem();\n+  boolean isCallWithGet = isGetPropOrGetElem && (gramps.isCall() || gramps.isNew());\n+  boolean isMethodCallWithCorrectThis =\n+      gramps.isCall() && gramps.getFirstChild().matchesQualifiedName(\"goog.bind\") &&\n+          isGetPropOrGetElem && gramps.getChildAtIndex(2) == parent;\n+\n+  if (!isCallWithGet && !isMethodCallWithCorrectThis) {\n+    report(t, n, INVALID_THIS_TYPE, functionType.getThisType().toString());\n+    ensureTyped(t, n);\n+    return;\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}