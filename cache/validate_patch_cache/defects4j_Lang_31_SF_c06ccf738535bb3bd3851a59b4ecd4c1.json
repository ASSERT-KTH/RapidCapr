{
    "patch": "public class StringUtils {\n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || searchChars == null) {\n            return false;\n        }\n        int len = str.length();\n        int searchLen = searchChars.length;\n        int i, j;\n        for (i = 0; i < len; i++) {\n            char ch = str.charAt(i);\n            for (j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    if (Character.isHighSurrogate(ch) && j < searchLen - 1) {\n                        if (Character.isLowSurrogate(searchChars[j + 1])) {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..5ad55cc1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || searchChars == null) {\n+            return false;\n+        }\n+        int len = str.length();\n+        int searchLen = searchChars.length;\n+        int i, j;\n+        for (i = 0; i < len; i++) {\n+            char ch = str.charAt(i);\n+            for (j = 0; j < searchLen; j++) {\n+                if (searchChars[j] == ch) {\n+                    if (Character.isHighSurrogate(ch) && j < searchLen - 1) {\n+                        if (Character.isLowSurrogate(searchChars[j + 1])) {\n+                            return true;\n+                        }\n+                    } else {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}