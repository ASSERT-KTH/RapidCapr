{
    "patch": "public static Iterable<Integer> findIndexesOfMaxValue(ArrayList<Integer> arrayList) {\n    int maxValue = Collections.max(arrayList);\n    List<Integer> indexes = new ArrayList<>();\n    for (int i = 0; i < arrayList.size(); i++) {\n        if (arrayList.get(i) == maxValue) {\n            indexes.add(i);\n        }\n    }\n    return indexes;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..9d255d93c 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,16 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static Iterable<Integer> findIndexesOfMaxValue(ArrayList<Integer> arrayList) {\n+    int maxValue = Collections.max(arrayList);\n+    List<Integer> indexes = new ArrayList<>();\n+    for (int i = 0; i < arrayList.size(); i++) {\n+        if (arrayList.get(i) == maxValue) {\n+            indexes.add(i);\n+        }\n+    }\n+    return indexes;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}