{
    "patch": "MockMaker mockMaker = mock(MockMaker.class, MockSettings.withSettings().lenient());\nMockHandler<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMockSettingsImpl settings = new MockSettingsImpl();\nsettings.defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\nsettings.spiedInstance(mock);\nMockitoPlugins.getPluginSwitch().turnOnMockitoCache();\nMockitoCache mockedOngoingStubbing = Mockito.mock(MockitoCache.class);\nMockito.when(mockitoCore.mockOngoingStubbing(settings, newMockHandler, realClass, (String) null))\n    .thenReturn(mockedOngoingStubbing);\nMockito.when(mockedOngoingStubbing.get()).thenReturn(null);\nMockito.when(mockMaker.createMock(settings, newMockHandler)).thenReturn(mock);\nMockito.when(Mockito.framework().getHooks()).thenReturn(new NoOpMockCreationListener());\n((Factory) mock).setCallback(0, new MethodInterceptorFilter(newMockHandler, settings));",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..a1b5fb95e 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,23 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockMaker mockMaker = mock(MockMaker.class, MockSettings.withSettings().lenient());\n+MockHandler<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MockSettingsImpl settings = new MockSettingsImpl();\n+settings.defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\n+settings.spiedInstance(mock);\n+MockitoPlugins.getPluginSwitch().turnOnMockitoCache();\n+MockitoCache mockedOngoingStubbing = Mockito.mock(MockitoCache.class);\n+Mockito.when(mockitoCore.mockOngoingStubbing(settings, newMockHandler, realClass, (String) null))\n+    .thenReturn(mockedOngoingStubbing);\n+Mockito.when(mockedOngoingStubbing.get()).thenReturn(null);\n+Mockito.when(mockMaker.createMock(settings, newMockHandler)).thenReturn(mock);\n+Mockito.when(Mockito.framework().getHooks()).thenReturn(new NoOpMockCreationListener());\n+((Factory) mock).setCallback(0, new MethodInterceptorFilter(newMockHandler, settings));\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}