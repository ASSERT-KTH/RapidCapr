{
    "patch": "public static String getProp(String propName) throws Exception {\n    InputStream input = null;\n    String propVal = null;\n    try {\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        input = classLoader.getResourceAsStream(\"config.properties\");\n        Properties properties = new Properties();\n        properties.load(input);\n        propVal = properties.getProperty(propName);\n        if (propVal == null) {\n            throw new Exception(\"Property not found\");\n        }\n    } finally {\n        if (input != null) {\n            input.close();\n        }\n    }\n    return propVal;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..2b48108f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getProp(String propName) throws Exception {\n+    InputStream input = null;\n+    String propVal = null;\n+    try {\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        input = classLoader.getResourceAsStream(\"config.properties\");\n+        Properties properties = new Properties();\n+        properties.load(input);\n+        propVal = properties.getProperty(propName);\n+        if (propVal == null) {\n+            throw new Exception(\"Property not found\");\n+        }\n+    } finally {\n+        if (input != null) {\n+            input.close();\n+        }\n+    }\n+    return propVal;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}