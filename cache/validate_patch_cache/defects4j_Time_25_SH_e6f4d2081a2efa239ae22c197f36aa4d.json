{
    "patch": "                // we need to ensure that time is always after the DST gap\n                // this happens naturally for positive offsets, but not for negative\n                // we continue to adjust the time until we are on or after the transition (or at the start of the gap)\n\n                // first calculate the NEXT transition after instantAdjusted\n                long nextLocalTransition = nextTransition(instantAdjusted);\n                long nextAdjustedTransition = nextTransition(instantAdjusted - offsetLocal);\n                if (nextLocalTransition != nextAdjustedTransition) {\n                    // there is a DST gap between instantLocal and next(Local|Adjusted)Transition\n                    // we need to adjust instantLocal to a value on or after the next(Local|Adjusted)Transition\n                    long adjustedNext = (offsetLocal > 0)\n                            ? nextLocalTransition - offsetLocal // start of gap\n                            : nextLocalTransition - offsetLocal - getStandardOffset(nextLocalTransition); // end of gap\n                    // continue to adjust instantLocal until we are on or after the start of the DST gap\n                    do {\n                        int adjOffset = getOffset(adjustedNext);\n                        if (adjOffset != offsetLocal) {\n                            // we're not there yet, so continue to adjust\n                            int nextOffset = getOffset(adjustedNext + (adjOffset - offsetLocal));\n                            long nextAdjusted = nextTransition(adjustedNext + (adjOffset - offsetLocal));\n                            if (nextAdjusted != nextLocalTransition) {\n                                // the nextAdjusted transition is the start of a new DST gap, which means\n                                // we can't adjust our way to the correct offset value, so we return the original value\n                                return offsetLocal;\n                            }\n                            if (nextOffset == adjOffset) {\n                                // we've reached the point where the DST gap starts, so we're done\n                                break;\n                            }\n                        }\n                        instantLocal = adjustedNext;\n                        offsetLocal = getOffset(instantLocal);\n                        adjustedNext = nextTransition(instantLocal);\n                    } while (true);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1837c739 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,41 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // we need to ensure that time is always after the DST gap\n+                // this happens naturally for positive offsets, but not for negative\n+                // we continue to adjust the time until we are on or after the transition (or at the start of the gap)\n+\n+                // first calculate the NEXT transition after instantAdjusted\n+                long nextLocalTransition = nextTransition(instantAdjusted);\n+                long nextAdjustedTransition = nextTransition(instantAdjusted - offsetLocal);\n+                if (nextLocalTransition != nextAdjustedTransition) {\n+                    // there is a DST gap between instantLocal and next(Local|Adjusted)Transition\n+                    // we need to adjust instantLocal to a value on or after the next(Local|Adjusted)Transition\n+                    long adjustedNext = (offsetLocal > 0)\n+                            ? nextLocalTransition - offsetLocal // start of gap\n+                            : nextLocalTransition - offsetLocal - getStandardOffset(nextLocalTransition); // end of gap\n+                    // continue to adjust instantLocal until we are on or after the start of the DST gap\n+                    do {\n+                        int adjOffset = getOffset(adjustedNext);\n+                        if (adjOffset != offsetLocal) {\n+                            // we're not there yet, so continue to adjust\n+                            int nextOffset = getOffset(adjustedNext + (adjOffset - offsetLocal));\n+                            long nextAdjusted = nextTransition(adjustedNext + (adjOffset - offsetLocal));\n+                            if (nextAdjusted != nextLocalTransition) {\n+                                // the nextAdjusted transition is the start of a new DST gap, which means\n+                                // we can't adjust our way to the correct offset value, so we return the original value\n+                                return offsetLocal;\n+                            }\n+                            if (nextOffset == adjOffset) {\n+                                // we've reached the point where the DST gap starts, so we're done\n+                                break;\n+                            }\n+                        }\n+                        instantLocal = adjustedNext;\n+                        offsetLocal = getOffset(instantLocal);\n+                        adjustedNext = nextTransition(instantLocal);\n+                    } while (true);\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable offsetLocal",
    "test_result": "ERROR"
}