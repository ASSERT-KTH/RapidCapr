{
    "patch": "byte[] escapeISO8859_1(String inputString) {\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    byte[] inputBytes = inputString.getBytes();\n    try {\n        for (int i = 0; i < inputBytes.length; i++) {\n            if (shouldEscapeISO8859_1(inputBytes[i])) {\n                byteArrayOutputStream.write('\\\\');\n                String octal = Integer.toOctalString(inputBytes[i]);\n                for (int j = 0; j < 3 - octal.length(); j++)\n                    out.write('0'); // Bug: should write '0' instead of 0\n                byteArrayOutputStream.write(octal.getBytes());\n            } else {\n                byteArrayOutputStream.write(inputBytes[i]);\n            }\n        }\n    } catch (IOException e) {\n        // ignore exception thrown by ByteArrayOutputStream\n    }\n    return byteArrayOutputStream.toByteArray();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}