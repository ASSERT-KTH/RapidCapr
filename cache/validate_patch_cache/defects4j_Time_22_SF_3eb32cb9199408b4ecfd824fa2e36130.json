{
    "patch": "protected BasePeriod(long duration) {\n    Duration d = new Duration(duration);\n    long weeks = d.getStandardWeeks();\n    long days = d.getStandardDays() - weeks * 7;\n    long hours = d.getStandardHours() - weeks * 7 * 24 - days * 24;\n    long minutes = d.getStandardMinutes() - weeks * 7 * 24 * 60 - days * 24 * 60 - hours * 60;\n    long seconds = d.getStandardSeconds() - weeks * 7 * 24 * 60 * 60 - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n    this(Period.weeks((int)weeks).withDays((int)days).withHours((int)hours).withMinutes((int)minutes).withSeconds((int)seconds), null, null);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..798c18eb 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,15 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    Duration d = new Duration(duration);\n+    long weeks = d.getStandardWeeks();\n+    long days = d.getStandardDays() - weeks * 7;\n+    long hours = d.getStandardHours() - weeks * 7 * 24 - days * 24;\n+    long minutes = d.getStandardMinutes() - weeks * 7 * 24 * 60 - days * 24 * 60 - hours * 60;\n+    long seconds = d.getStandardSeconds() - weeks * 7 * 24 * 60 * 60 - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n+    this(Period.weeks((int)weeks).withDays((int)days).withHours((int)hours).withMinutes((int)minutes).withSeconds((int)seconds), null, null);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}