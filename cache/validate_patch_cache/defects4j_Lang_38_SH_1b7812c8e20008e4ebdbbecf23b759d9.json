{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            TimeZone originalTimeZone = calendar.getTimeZone();\n            calendar.setTimeZone(mTimeZone);\n            applyRules(calendar, buf);\n            calendar.setTimeZone(originalTimeZone); // reset to original time zone\n        } else {\n            applyRules(calendar, buf);\n        }\n        return buf;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..fb1b78cb 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,17 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n+        if (mTimeZoneForced) {\n+            TimeZone originalTimeZone = calendar.getTimeZone();\n+            calendar.setTimeZone(mTimeZone);\n+            applyRules(calendar, buf);\n+            calendar.setTimeZone(originalTimeZone); // reset to original time zone\n+        } else {\n+            applyRules(calendar, buf);\n+        }\n+        return buf;\n+    }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}