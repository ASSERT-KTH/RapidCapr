{
    "patch": "        } else if (block == ref.getBasicBlock()) {\n          // If this is the block of the assignment, then the assignment is more than once.\n          count++;\n        }\n      }\n\n      return count == 1;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..4aa9648a 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        } else if (block == ref.getBasicBlock()) {\n+          // If this is the block of the assignment, then the assignment is more than once.\n+          count++;\n+        }\n+      }\n+\n+      return count == 1;\n+    }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}