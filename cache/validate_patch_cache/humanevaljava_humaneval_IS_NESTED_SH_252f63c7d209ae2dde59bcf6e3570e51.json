{
    "patch": "import java.util.ArrayList;\nimport java.util.Collections;\n\npublic class IS_NESTED {\n\n    public static boolean is_nested(String brackets) {\n        ArrayList<Integer> opening_brackets = new ArrayList<>();\n        ArrayList<Integer> closing_brackets = new ArrayList<>();\n        for(int i = 0; i < brackets.length(); i++) {\n            if(brackets.charAt(i) == '[') opening_brackets.add(i);\n            else closing_brackets.add(i);\n        }\n\n        Collections.sort(opening_brackets);\n        Collections.reverse(opening_brackets);\n        int cnt = 0, i = 0, l = opening_brackets.size();\n        for(int idx : closing_brackets) {\n            if(i < l && idx >= opening_brackets.get(i)) {\n                i++;\n                cnt++;\n            }\n        }\n        return cnt >= 1 && opening_brackets.get(l-1) < closing_brackets.get(0);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_NESTED.java b/src/main/java/humaneval/buggy/IS_NESTED.java\nindex 28b9704..0070e90 100644\n--- a/src/main/java/humaneval/buggy/IS_NESTED.java\n+++ b/src/main/java/humaneval/buggy/IS_NESTED.java\n@@ -25,10 +25,31 @@ public class IS_NESTED {\n             if(brackets.charAt(i) == '[') opening_brackets.add(i);\n             else closing_brackets.add(i);\n         }\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+public class IS_NESTED {\n+\n+    public static boolean is_nested(String brackets) {\n+        ArrayList<Integer> opening_brackets = new ArrayList<>();\n+        ArrayList<Integer> closing_brackets = new ArrayList<>();\n+        for(int i = 0; i < brackets.length(); i++) {\n+            if(brackets.charAt(i) == '[') opening_brackets.add(i);\n+            else closing_brackets.add(i);\n+        }\n+\n+        Collections.sort(opening_brackets);\n         Collections.reverse(opening_brackets);\n         int cnt = 0, i = 0, l = opening_brackets.size();\n         for(int idx : closing_brackets) {\n-            if(i < l || idx >= opening_brackets.get(i)) {\n+            if(i < l && idx >= opening_brackets.get(i)) {\n+                i++;\n+                cnt++;\n+            }\n+        }\n+        return cnt >= 1 && opening_brackets.get(l-1) < closing_brackets.get(0);\n+    }\n+}\n                 i++;\n                 cnt++;\n             }",
    "result_reason": " /tmp/humaneval-IS_NESTED/src/main/java/humaneval/buggy/IS_NESTED.java:[28,1] illegal start of expression",
    "test_result": "ERROR"
}