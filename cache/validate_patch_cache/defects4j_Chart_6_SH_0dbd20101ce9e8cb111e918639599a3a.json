{
    "patch": "if (obj == null || !getClass().equals(obj.getClass())) {\n    return false;\n}\nShapeList other = (ShapeList) obj;\nif (this.size() != other.size()) {\n    return false;\n}\nfor (int i = 0; i < this.size(); i++) {\n    Shape thisShape = this.get(i);\n    Shape otherShape = other.get(i);\n    if (thisShape == null ^ otherShape == null) {\n        return false;\n    } else if (thisShape != null && !thisShape.equals(otherShape)) {\n        return false;\n    }\n}\nreturn true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..b5499a0 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,23 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+if (obj == null || !getClass().equals(obj.getClass())) {\n+    return false;\n+}\n+ShapeList other = (ShapeList) obj;\n+if (this.size() != other.size()) {\n+    return false;\n+}\n+for (int i = 0; i < this.size(); i++) {\n+    Shape thisShape = this.get(i);\n+    Shape otherShape = other.get(i);\n+    if (thisShape == null ^ otherShape == null) {\n+        return false;\n+    } else if (thisShape != null && !thisShape.equals(otherShape)) {\n+        return false;\n+    }\n+}\n+return true;\n \n     }\n \n@@ -169,4 +185,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}