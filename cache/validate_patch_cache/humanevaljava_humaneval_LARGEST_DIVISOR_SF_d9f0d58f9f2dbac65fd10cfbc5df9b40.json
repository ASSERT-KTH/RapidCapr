{
    "patch": "    public static int largest_divisor(int n) {\n        if (n <= 1) {\n            throw new IllegalArgumentException(\"Input must be greater than 1\");\n        }\n        int largest_divisor = 1;\n        for (int i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                largest_divisor = i;\n            }\n        }\n        return largest_divisor;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\nindex e93b282..b368868 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n@@ -2,10 +2,15 @@ package humaneval.buggy;\n \n public class LARGEST_DIVISOR {\n     public static int largest_divisor(int n) {\n-        for (int i = n; i >= 0; i -= 1){\n-            if (n % i == 0)\n-                return i;\n+        if (n <= 1) {\n+            throw new IllegalArgumentException(\"Input must be greater than 1\");\n         }\n-        return 1;\n+        int largest_divisor = 1;\n+        for (int i = 2; i <= n / 2; i++) {\n+            if (n % i == 0) {\n+                largest_divisor = i;\n+            }\n+        }\n+        return largest_divisor;\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}