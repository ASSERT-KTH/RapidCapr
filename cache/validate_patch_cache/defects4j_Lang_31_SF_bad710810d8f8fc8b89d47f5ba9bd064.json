{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strSize = str.length();\n    int searchSize = searchChars.length;\n    int i;\n    for (i = 0; i < strSize; i++) {\n        char ch = str.charAt(i);\n        if (Character.isHighSurrogate(ch)) {\n            if (++i >= strSize) {\n                throw new IllegalArgumentException(\"Invalid surrogate pair at index \" + (i - 1));\n            }\n            char ch2 = str.charAt(i);\n            if (!Character.isLowSurrogate(ch2)) {\n                throw new IllegalArgumentException(\"Expected low surrogate but got char '\" + ch2 + \"' at index \" + i);\n            }\n            ch = Character.toCodePoint(ch, ch2);\n        }\n        if (contains(searchChars, ch)) {\n            return true;\n        }\n    }\n    return false;\n}\n\npublic static boolean contains(char[] array, char searchChar) {\n    for (char element : array) {\n        if (element == searchChar) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..7f7cacd0 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,40 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strSize = str.length();\n+    int searchSize = searchChars.length;\n+    int i;\n+    for (i = 0; i < strSize; i++) {\n+        char ch = str.charAt(i);\n+        if (Character.isHighSurrogate(ch)) {\n+            if (++i >= strSize) {\n+                throw new IllegalArgumentException(\"Invalid surrogate pair at index \" + (i - 1));\n+            }\n+            char ch2 = str.charAt(i);\n+            if (!Character.isLowSurrogate(ch2)) {\n+                throw new IllegalArgumentException(\"Expected low surrogate but got char '\" + ch2 + \"' at index \" + i);\n+            }\n+            ch = Character.toCodePoint(ch, ch2);\n+        }\n+        if (contains(searchChars, ch)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+public static boolean contains(char[] array, char searchChar) {\n+    for (char element : array) {\n+        if (element == searchChar) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}