{
    "patch": "public static boolean containsAny(CharSequence sequence, char[] searchChars) {\n    int strLength = sequence.length();\n    int searchLength = searchChars.length;\n    int minSearchLength = 2;\n    if (searchLength == 1) {\n        char searchChar = searchChars[0];\n        for (int i = 0; i < strLength; i++) {\n            if (sequence.charAt(i) == searchChar) {\n                return true;\n            }\n        }\n    } else if (searchLength == 2) {\n        char searchChar1 = searchChars[0];\n        char searchChar2 = searchChars[1];\n        for (int i = 0; i < strLength; i++) {\n            char ch = sequence.charAt(i);\n            if (ch == searchChar1 || ch == searchChar2) {\n                return true;\n            }\n        }\n    } else if (searchLength > 2) {\n        if (searchLength > 0x7fff) {\n            throw new IllegalArgumentException(\"Array too large: \" + searchLength);\n        }\n        boolean[] search = new boolean[0x10000];\n        for (int i = 0; i < searchLength; i++) {\n            char ch = searchChars[i];\n            if (ch >= 0x10000) {\n                throw new IllegalArgumentException(\"Invalid code point \" + Integer.toHexString(ch) + \" in char array at position \" + i);\n            }\n            search[ch] = true;\n        }\n        for (int i = 0; i < strLength; i++) {\n            char ch = sequence.charAt(i);\n            if (ch < 0x10000) {\n                if (search[ch]) {\n                    return true;\n                }\n            } else if (ch >= 0x10000 && ch <= 0x10FFFF) {\n                char ch0 = (char) ((ch >> 10) + 0xd7c0);\n                char ch1 = (char) ((ch & 0x3ff) + 0xdc00);\n                if (search[ch0] || search[ch1]) {\n                    return true;\n                }\n            } else {\n                throw new IllegalArgumentException(\"Invalid code point: \" + Integer.toHexString(ch));\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..21edbeb7 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,57 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence sequence, char[] searchChars) {\n+    int strLength = sequence.length();\n+    int searchLength = searchChars.length;\n+    int minSearchLength = 2;\n+    if (searchLength == 1) {\n+        char searchChar = searchChars[0];\n+        for (int i = 0; i < strLength; i++) {\n+            if (sequence.charAt(i) == searchChar) {\n+                return true;\n+            }\n+        }\n+    } else if (searchLength == 2) {\n+        char searchChar1 = searchChars[0];\n+        char searchChar2 = searchChars[1];\n+        for (int i = 0; i < strLength; i++) {\n+            char ch = sequence.charAt(i);\n+            if (ch == searchChar1 || ch == searchChar2) {\n+                return true;\n+            }\n+        }\n+    } else if (searchLength > 2) {\n+        if (searchLength > 0x7fff) {\n+            throw new IllegalArgumentException(\"Array too large: \" + searchLength);\n+        }\n+        boolean[] search = new boolean[0x10000];\n+        for (int i = 0; i < searchLength; i++) {\n+            char ch = searchChars[i];\n+            if (ch >= 0x10000) {\n+                throw new IllegalArgumentException(\"Invalid code point \" + Integer.toHexString(ch) + \" in char array at position \" + i);\n+            }\n+            search[ch] = true;\n+        }\n+        for (int i = 0; i < strLength; i++) {\n+            char ch = sequence.charAt(i);\n+            if (ch < 0x10000) {\n+                if (search[ch]) {\n+                    return true;\n+                }\n+            } else if (ch >= 0x10000 && ch <= 0x10FFFF) {\n+                char ch0 = (char) ((ch >> 10) + 0xd7c0);\n+                char ch1 = (char) ((ch & 0x3ff) + 0xdc00);\n+                if (search[ch0] || search[ch1]) {\n+                    return true;\n+                }\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid code point: \" + Integer.toHexString(ch));\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}