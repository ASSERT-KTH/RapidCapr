{
    "patch": "void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n      return;\n    }\n\n    // Check if the new code starts with a forward slash and the last character appended was a forward slash\n    if (newcode.charAt(0) == '/' && getLastChar() == '/') {\n      // Avoid having a forward slash appear after a DIV.\n      // For example, / / / / should print like / // / /\n      append(\" \");\n    }\n\n    // Check if the current and last characters are word characters or backslashes\n    if ((isWordChar(newcode.charAt(0)) || newcode.charAt(0) == '\\\\') && isWordChar(getLastChar())) {\n      // Need space to separate. This is not pretty printing.\n      // For example: \"return foo;\"\n      append(\" \");\n    }\n\n    append(newcode);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..e35f011c 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,28 +178,29 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n+void add(String newcode) {\n     maybeEndStatement();\n \n     if (newcode.length() == 0) {\n       return;\n     }\n \n-    char c = newcode.charAt(0);\n-    if ((isWordChar(c) || c == '\\\\') &&\n-        isWordChar(getLastChar())) {\n-      // need space to separate. This is not pretty printing.\n+    // Check if the new code starts with a forward slash and the last character appended was a forward slash\n+    if (newcode.charAt(0) == '/' && getLastChar() == '/') {\n+      // Avoid having a forward slash appear after a DIV.\n+      // For example, / / / / should print like / // / /\n+      append(\" \");\n+    }\n+\n+    // Check if the current and last characters are word characters or backslashes\n+    if ((isWordChar(newcode.charAt(0)) || newcode.charAt(0) == '\\\\') && isWordChar(getLastChar())) {\n+      // Need space to separate. This is not pretty printing.\n       // For example: \"return foo;\"\n       append(\" \");\n-      // Do not allow a forward slash to appear after a DIV.\n-      // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n     }\n \n     append(newcode);\n-  }\n+}\n \n   void appendOp(String op, boolean binOp) {\n     append(op);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}