{
    "patch": "    public double solve(double min, double max) throws MaxIterationsExceededException,\n        FunctionEvaluationException {\n\n        clearResult();\n        verifyInterval(min, max);\n\n        double ret = Double.NaN;\n\n        double yMin = f.value(min);\n        double yMax = f.value(max);\n\n        double sign = yMin * yMax;\n        if (sign >= 0.0) {\n            if ((yMin == 0.0) || (yMax == 0.0)) {\n                // one of the bounds is a root\n                ret = (yMin == 0.0) ? min : max;\n            } else {\n                // Neither yMin nor yMax is zero and they have the same sign\n                throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\" + \"  Endpoints: [\" + min + \",\" + max + \"]\" + \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n            }\n        } else {\n            // solve using only the first endpoint as initial guess\n            ret = solve(min, yMin, max, yMax, min, yMin);\n        }\n\n        return ret;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/BrentSolver.java b/src/java/org/apache/commons/math/analysis/BrentSolver.java\nindex 766d87ed5..f5ccd8c22 100644\n--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -122,30 +122,29 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n      * @throws IllegalArgumentException if min is not less than max or the\n      * signs of the values of the function at the endpoints are not opposites\n      */\n-    public double solve(double min, double max) throws MaxIterationsExceededException, \n+    public double solve(double min, double max) throws MaxIterationsExceededException,\n         FunctionEvaluationException {\n-        \n+\n         clearResult();\n         verifyInterval(min, max);\n-        \n+\n         double ret = Double.NaN;\n-        \n+\n         double yMin = f.value(min);\n         double yMax = f.value(max);\n-        \n-        // Verify bracketing\n+\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n-            // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+        if (sign >= 0.0) {\n+            if ((yMin == 0.0) || (yMax == 0.0)) {\n+                // one of the bounds is a root\n+                ret = (yMin == 0.0) ? min : max;\n+            } else {\n+                // Neither yMin nor yMax is zero and they have the same sign\n+                throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\" + \"  Endpoints: [\" + min + \",\" + max + \"]\" + \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            }\n         } else {\n             // solve using only the first endpoint as initial guess\n             ret = solve(min, yMin, max, yMax, min, yMin);\n-            // either min or max is a root\n         }\n \n         return ret;",
    "result_reason": "java.lang.IllegalArgumentException: Function values at endpoints do not have different signs. Endpoints: [3.0,3.141592653589793] Values: [0.1411200080598672,1.2246467991473532E-16]",
    "test_result": "FAIL"
}