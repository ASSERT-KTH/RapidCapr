{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden,\n    // need to increment these\n    if (!(meanImpl instanceof Mean)) {\n        meanImpl.increment(value);\n        // fix NaN mean calculation\n        double newMean = meanImpl.getResult();\n        if (Double.isNaN(newMean)) {\n            meanImpl.clear();\n            for (int i = 0; i < n; i++) {\n                meanImpl.increment(scores[i]);\n            }\n        }\n    }\n    if (!(varianceImpl instanceof Variance)) {\n        varianceImpl.increment(value);\n    }\n    if (!(geoMeanImpl instanceof GeometricMean)) {\n        geoMeanImpl.increment(value);\n        // fix NaN geo mean calculation\n        double newGeoMean = geoMeanImpl.getResult();\n        if (Double.isNaN(newGeoMean)) {\n            geoMeanImpl.clear();\n            for (int i = 0; i < n; i++) {\n                geoMeanImpl.increment(scores[i]);\n            }\n        }\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..e89eb58a0 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,42 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden,\n+    // need to increment these\n+    if (!(meanImpl instanceof Mean)) {\n+        meanImpl.increment(value);\n+        // fix NaN mean calculation\n+        double newMean = meanImpl.getResult();\n+        if (Double.isNaN(newMean)) {\n+            meanImpl.clear();\n+            for (int i = 0; i < n; i++) {\n+                meanImpl.increment(scores[i]);\n+            }\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+    }\n+    if (!(varianceImpl instanceof Variance)) {\n+        varianceImpl.increment(value);\n+    }\n+    if (!(geoMeanImpl instanceof GeometricMean)) {\n+        geoMeanImpl.increment(value);\n+        // fix NaN geo mean calculation\n+        double newGeoMean = geoMeanImpl.getResult();\n+        if (Double.isNaN(newGeoMean)) {\n+            geoMeanImpl.clear();\n+            for (int i = 0; i < n; i++) {\n+                geoMeanImpl.increment(scores[i]);\n+            }\n         }\n-        n++;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}