{
    "patch": "                long instant = savedFields[i].set(millis, resetFields);\n                if (millis != instant) {\n                    if (iZone == null) {\n                        millis = instant;\n                    } else {\n                        int offsetBefore = iZone.getOffset(millis);\n                        int offsetAfter = iZone.getOffset(instant);\n                        if (offsetBefore != offsetAfter) {\n                            if (resetFields) {\n                                offsetBefore = iZone.getOffset(instant - offsetBefore);\n                                offsetAfter = iZone.getOffset(instant - offsetAfter);\n                                if (offsetBefore != offsetAfter) {\n                                    throw new IllegalArgumentException(\n                                        \"Illegal instant due to time zone offset transition (\" + iZone + ')');\n                                }\n                            } else {\n                                millis = instant;\n                            }\n                        } else {\n                            millis = instant;\n                        }\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..286737f8 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,29 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                long instant = savedFields[i].set(millis, resetFields);\n+                if (millis != instant) {\n+                    if (iZone == null) {\n+                        millis = instant;\n+                    } else {\n+                        int offsetBefore = iZone.getOffset(millis);\n+                        int offsetAfter = iZone.getOffset(instant);\n+                        if (offsetBefore != offsetAfter) {\n+                            if (resetFields) {\n+                                offsetBefore = iZone.getOffset(instant - offsetBefore);\n+                                offsetAfter = iZone.getOffset(instant - offsetAfter);\n+                                if (offsetBefore != offsetAfter) {\n+                                    throw new IllegalArgumentException(\n+                                        \"Illegal instant due to time zone offset transition (\" + iZone + ')');\n+                                }\n+                            } else {\n+                                millis = instant;\n+                            }\n+                        } else {\n+                            millis = instant;\n+                        }\n+                    }\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}