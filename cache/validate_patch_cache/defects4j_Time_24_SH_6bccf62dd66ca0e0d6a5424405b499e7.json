{
    "patch": "        int savedFieldsCount = 0;\n        SavedField firstDayOfYear = null;\n        SavedField firstDayOfMonth = null;\n        for (int i = 0; i < count; i++) {\n            DateTimeField field = savedFields[i].iField;\n            if (field == null) {\n                // confirm that all values are the same\n                long value1 = savedFields[i].iValue;\n                for (int j = i + 1; j < count; j++) {\n                    long value2 = savedFields[j].iValue;\n                    if (value2 != value1) {\n                        if (text != null) {\n                            throw new IllegalFieldValueException(\n                                \"Conflict found: Field \" + field.getType() + \" \" +\n                                \"is set to \" + value2 + \", but a previous \" +\n                                \"value of \" + value1 + \" has already been \" +\n                                \"set and was not equal\", text, iSavedFields);\n                        }\n                        throw new IllegalFieldValueException(\n                            \"Conflict found: Field \" + field.getType() + \" \" +\n                            \"is set to \" + value2 + \", but a previous \" +\n                            \"value of \" + value1 + \" has already been \" +\n                            \"set and was not equal\");\n                    }\n                }\n                continue;\n            }\n            int compare = compareReverse(field.getDurationField(), firstDayOfYearDurField);\n            if (compare >= 0 && compareReverse(field.getDurationField(), firstDayOfYearDurFieldLimit) <= 0) {\n                firstDayOfYear = savedFields[i];\n            }\n            if (compare >= 0 && compareReverse(field.getDurationField(), firstDayOfMonthDurFieldLimit) <= 0) {\n                firstDayOfMonth = savedFields[i];\n            }\n            savedFields[savedFieldsCount++] = savedFields[i];\n        }\n        count = savedFieldsCount;\n        if (count > 0) {\n            if (firstDayOfMonth != null) {\n                iChrono.validateDateTime(iDefaultYear, firstDayOfMonth.iField.getType(),\n                                          firstDayOfMonth.iValue);\n            } else if (firstDayOfYear != null) {\n                iChrono.validateDateTime(iDefaultYear, firstDayOfYear.iField.getType(),\n                                          firstDayOfYear.iValue);\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a26523df 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,52 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        int savedFieldsCount = 0;\n+        SavedField firstDayOfYear = null;\n+        SavedField firstDayOfMonth = null;\n+        for (int i = 0; i < count; i++) {\n+            DateTimeField field = savedFields[i].iField;\n+            if (field == null) {\n+                // confirm that all values are the same\n+                long value1 = savedFields[i].iValue;\n+                for (int j = i + 1; j < count; j++) {\n+                    long value2 = savedFields[j].iValue;\n+                    if (value2 != value1) {\n+                        if (text != null) {\n+                            throw new IllegalFieldValueException(\n+                                \"Conflict found: Field \" + field.getType() + \" \" +\n+                                \"is set to \" + value2 + \", but a previous \" +\n+                                \"value of \" + value1 + \" has already been \" +\n+                                \"set and was not equal\", text, iSavedFields);\n+                        }\n+                        throw new IllegalFieldValueException(\n+                            \"Conflict found: Field \" + field.getType() + \" \" +\n+                            \"is set to \" + value2 + \", but a previous \" +\n+                            \"value of \" + value1 + \" has already been \" +\n+                            \"set and was not equal\");\n+                    }\n+                }\n+                continue;\n+            }\n+            int compare = compareReverse(field.getDurationField(), firstDayOfYearDurField);\n+            if (compare >= 0 && compareReverse(field.getDurationField(), firstDayOfYearDurFieldLimit) <= 0) {\n+                firstDayOfYear = savedFields[i];\n+            }\n+            if (compare >= 0 && compareReverse(field.getDurationField(), firstDayOfMonthDurFieldLimit) <= 0) {\n+                firstDayOfMonth = savedFields[i];\n+            }\n+            savedFields[savedFieldsCount++] = savedFields[i];\n+        }\n+        count = savedFieldsCount;\n+        if (count > 0) {\n+            if (firstDayOfMonth != null) {\n+                iChrono.validateDateTime(iDefaultYear, firstDayOfMonth.iField.getType(),\n+                                          firstDayOfMonth.iValue);\n+            } else if (firstDayOfYear != null) {\n+                iChrono.validateDateTime(iDefaultYear, firstDayOfYear.iField.getType(),\n+                                          firstDayOfYear.iValue);\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: no suitable constructor found for IllegalFieldValueException(String,String,SavedField[])",
    "test_result": "ERROR"
}