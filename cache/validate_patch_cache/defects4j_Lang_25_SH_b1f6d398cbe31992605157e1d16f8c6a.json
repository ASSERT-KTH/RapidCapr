{
    "patch": "public static String unescape(String in) {\n    int len = in.length();\n    char aChar;\n    StringBuffer out = new StringBuffer(len);\n\n    int x = 0;\n    while (x < len) {\n        aChar = in.charAt(x++);\n        if (aChar == '\\\\') {\n            aChar = in.charAt(x++);\n            if (aChar == 'u') {\n                // Read the xxxx\n                int value = 0;\n                for (int i = 0; i < 4; i++) {\n                    aChar = in.charAt(x++);\n                    switch (aChar) {\n                        case '0':\n                        case '1':\n                        case '2':\n                        case '3':\n                        case '4':\n                        case '5':\n                        case '6':\n                        case '7':\n                        case '8':\n                        case '9':\n                            value = (value << 4) + aChar - '0';\n                            break;\n                        case 'a':\n                        case 'b':\n                        case 'c':\n                        case 'd':\n                        case 'e':\n                        case 'f':\n                            value = (value << 4) + 10 + aChar - 'a';\n                            break;\n                        case 'A':\n                        case 'B':\n                        case 'C':\n                        case 'D':\n                        case 'E':\n                        case 'F':\n                            value = (value << 4) + 10 + aChar - 'A';\n                            break;\n                        default:\n                            throw new IllegalArgumentException(\n                                    \"Malformed \\\\uxxxx encoding.\");\n                    }\n                }\n                out.append((char) value);\n            } else {\n                if (aChar == 't') {\n                    out.append('\\t');\n                } else if (aChar == 'r') {\n                    out.append('\\r');\n                } else if (aChar == 'n') {\n                    out.append('\\n');\n                } else if (aChar == 'f') {\n                    out.append('\\f');\n                } else if (aChar == '\\\\') {\n                    out.append('\\\\');\n                } else {\n                    out.append(aChar);\n                }\n            }\n        } else {\n            out.append(aChar);\n        }\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}