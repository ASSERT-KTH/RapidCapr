{
    "patch": "      boolean validThisType = functionType.getTypeOfThis() == null\n          || NodeUtil.isGet(functionType.getTypeOfThis().getDeclaredType(), true)\n          || NodeUtil.isGetElem(functionType.getTypeOfThis().getDeclaredType(), true);\n      if (!validThisType) {\n        report(t, n, INVALID_THIS_TYPE);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..4c506930 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,12 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      boolean validThisType = functionType.getTypeOfThis() == null\n+          || NodeUtil.isGet(functionType.getTypeOfThis().getDeclaredType(), true)\n+          || NodeUtil.isGetElem(functionType.getTypeOfThis().getDeclaredType(), true);\n+      if (!validThisType) {\n+        report(t, n, INVALID_THIS_TYPE);\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}