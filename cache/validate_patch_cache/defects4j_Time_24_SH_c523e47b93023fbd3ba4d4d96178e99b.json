{
    "patch": "            boolean done = false;\n            String text;\n            do {\n                text = savedFields[0].getField().getDurationType().getName() + \" is not supported\";\n                try {\n                    for (int i = 0; i < count; i++) {\n                        millis = savedFields[i].set(millis, resetFields);\n                    }\n                    done = true;\n                } catch (IllegalFieldValueException e) {\n                    if (count != 1 || savedFields[0].getFieldType() != DateTimeFieldType.monthOfYear()) {\n                        throw e;\n                    }\n                    if (savedFields[0].getValue() != 13) {\n                        throw e;\n                    }\n                    savedFields[0] = new SavedField(DateTimeFieldType.year(), iDefaultYear);\n                    count = 1;\n                    done = false;\n                }\n            } while (!done);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..e87d1a25 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            boolean done = false;\n+            String text;\n+            do {\n+                text = savedFields[0].getField().getDurationType().getName() + \" is not supported\";\n+                try {\n+                    for (int i = 0; i < count; i++) {\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    }\n+                    done = true;\n+                } catch (IllegalFieldValueException e) {\n+                    if (count != 1 || savedFields[0].getFieldType() != DateTimeFieldType.monthOfYear()) {\n+                        throw e;\n+                    }\n+                    if (savedFields[0].getValue() != 13) {\n+                        throw e;\n+                    }\n+                    savedFields[0] = new SavedField(DateTimeFieldType.year(), iDefaultYear);\n+                    count = 1;\n+                    done = false;\n+                }\n+            } while (!done);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: variable text is already defined in method computeMillis(boolean,String)",
    "test_result": "ERROR"
}