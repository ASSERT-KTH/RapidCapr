{
    "patch": "                if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n                    int year = e.getIllegalNumberValue();\n                    if (year >= 0 && (year < 100 || e.isTwoDigitYear())) {\n                        year = iDefaultYear;\n                    }\n                    millis = iChrono.setYear(millis, year);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..7de89a8b 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n+                    int year = e.getIllegalNumberValue();\n+                    if (year >= 0 && (year < 100 || e.isTwoDigitYear())) {\n+                        year = iDefaultYear;\n+                    }\n+                    millis = iChrono.setYear(millis, year);\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}