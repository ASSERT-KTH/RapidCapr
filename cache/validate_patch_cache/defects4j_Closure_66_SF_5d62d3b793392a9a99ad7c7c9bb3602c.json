{
    "patch": "public static double getTypedPercent(JsonArray arr) {\n    double total = 0.0;\n    double typed = 0.0;\n    for (JsonElement elem : arr) {\n        JsonObject obj = elem.getAsJsonObject();\n        total += obj.get(\"total\").getAsDouble();\n        typed += obj.get(\"typed\").getAsDouble();\n    }\n\n    if (total == 0.0) {\n        return 100.0;\n    }\n\n    return (typed/total)*100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..53bd9ba1 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JsonArray arr) {\n+    double total = 0.0;\n+    double typed = 0.0;\n+    for (JsonElement elem : arr) {\n+        JsonObject obj = elem.getAsJsonObject();\n+        total += obj.get(\"total\").getAsDouble();\n+        typed += obj.get(\"typed\").getAsDouble();\n+    }\n+\n+    if (total == 0.0) {\n+        return 100.0;\n+    }\n+\n+    return (typed/total)*100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}