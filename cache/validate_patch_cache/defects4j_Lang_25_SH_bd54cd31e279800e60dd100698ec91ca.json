{
    "patch": "public static byte[] escape(byte[] bytes) {\n    byte[] escaped = new byte[bytes.length];\n    int pos = 0;\n    for (int i=0; i<bytes.length; i++) {\n        if (bytes[i] == 0x3d) {\n            escaped[pos] = 0x5c;\n            pos++;\n            escaped[pos] = 0x3d;  //error here\n        }\n        else {\n            escaped[pos] = bytes[i];\n        }\n        pos++;\n    }\n    byte[] trimmed = new byte[pos];\n    System.arraycopy(escaped, 0, trimmed, 0, pos);\n    return trimmed;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}