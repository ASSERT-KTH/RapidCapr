{
    "patch": "        if (startIndex + n > source.length() || \n            !source.substring(startIndex, startIndex + n).equals(getImaginaryCharacter())) {\n                // set index back to initial, error index should be the start index\n                // character examined.\n                pos.setIndex(initialIndex);\n                pos.setErrorIndex(startIndex);\n                return null;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/ComplexFormat.java b/src/java/org/apache/commons/math/complex/ComplexFormat.java\nindex b404bc415..ec38e7f9d 100644\n--- a/src/java/org/apache/commons/math/complex/ComplexFormat.java\n+++ b/src/java/org/apache/commons/math/complex/ComplexFormat.java\n@@ -374,7 +374,13 @@ public class ComplexFormat extends Format implements Serializable {\n         int n = getImaginaryCharacter().length();\n         startIndex = pos.getIndex();\n         int endIndex = startIndex + n;\n-        if (\n+        if (startIndex + n > source.length() || \n+            !source.substring(startIndex, startIndex + n).equals(getImaginaryCharacter())) {\n+                // set index back to initial, error index should be the start index\n+                // character examined.\n+                pos.setIndex(initialIndex);\n+                pos.setErrorIndex(startIndex);\n+                return null;\n             source.substring(startIndex, endIndex).compareTo(\n             getImaginaryCharacter()) != 0) {\n             // set index back to initial, error index should be the start index",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}