{
    "patch": "public static int modp(int n, int p) {\n    if (p <= 0) {\n        throw new IllegalArgumentException(\"p must be greater than 0\");\n    }\n    int result = 1;\n    while (n > 0) {\n        if ((n & 1) != 0) {\n            result = (result * 2) % p;\n        }\n        n >>= 1;\n        if (n > 0) {\n            int temp = 2 % p;\n            for (int i = 1; i < p; i++) {\n                temp = (temp * 2) % p;\n                if (temp == 1) {\n                    break;\n                }\n            }\n            while (n > 0 && temp > 1) {\n                result = (result * temp) % p;\n                n--;\n            }\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MODP.java b/src/main/java/humaneval/buggy/MODP.java\nindex a8f7394..8fcfca1 100644\n--- a/src/main/java/humaneval/buggy/MODP.java\n+++ b/src/main/java/humaneval/buggy/MODP.java\n@@ -13,11 +13,30 @@ package humaneval.buggy;\n 1 */\n \n public class MODP {\n-    public static int modp(int n, int p) {\n-        int result = 1;\n-        for (int i = 0; i < n; i += 1){\n-            result = 2 * result;\n+public static int modp(int n, int p) {\n+    if (p <= 0) {\n+        throw new IllegalArgumentException(\"p must be greater than 0\");\n+    }\n+    int result = 1;\n+    while (n > 0) {\n+        if ((n & 1) != 0) {\n+            result = (result * 2) % p;\n+        }\n+        n >>= 1;\n+        if (n > 0) {\n+            int temp = 2 % p;\n+            for (int i = 1; i < p; i++) {\n+                temp = (temp * 2) % p;\n+                if (temp == 1) {\n+                    break;\n+                }\n+            }\n+            while (n > 0 && temp > 1) {\n+                result = (result * temp) % p;\n+                n--;\n+            }\n         }\n-        return result % p;\n     }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_MODP.test_0:7 expected:<4> but was:<3>",
    "test_result": "FAIL"
}