{
    "patch": "      List<Reference> assignments = getAllAssignments();\n      if (assignments.size() != 1) {\n        return false;\n      }\n\n      Reference ref = assignments.get(0);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..49e9fb03 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,12 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+      List<Reference> assignments = getAllAssignments();\n+      if (assignments.size() != 1) {\n+        return false;\n+      }\n+\n+      Reference ref = assignments.get(0);\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}