{
    "patch": "                boolean negOffset = (offsetAdjusted < 0);\n                long correctInstant = negOffset ?\n                        nextTransition(instantLocal - offsetAdjusted) :\n                        nextTransition(instantLocal - offsetAdjusted + 1) - 1;\n                int newOffset = getOffset(correctInstant);\n                if (offsetLocal != newOffset) {\n                    return offsetLocal;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..4a72fd6a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                boolean negOffset = (offsetAdjusted < 0);\n+                long correctInstant = negOffset ?\n+                        nextTransition(instantLocal - offsetAdjusted) :\n+                        nextTransition(instantLocal - offsetAdjusted + 1) - 1;\n+                int newOffset = getOffset(correctInstant);\n+                if (offsetLocal != newOffset) {\n+                    return offsetLocal;\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}