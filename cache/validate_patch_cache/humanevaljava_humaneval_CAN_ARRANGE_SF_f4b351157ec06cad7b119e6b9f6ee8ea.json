{
    "patch": "public static int can_arrange(int[] arr) {\n    int n = arr.length;\n    int[] sortedArr = Arrays.copyOf(arr, n);\n    Arrays.sort(sortedArr);\n    int left = -1;\n    int right = -1;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] != sortedArr[i]) {\n            if (left == -1) {\n                left = i;\n            } else {\n                right = i;\n            }\n        }\n    }\n    return right == -1 ? 0 : right;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CAN_ARRANGE.java b/src/main/java/humaneval/buggy/CAN_ARRANGE.java\nindex 8bb1b11..481ed29 100644\n--- a/src/main/java/humaneval/buggy/CAN_ARRANGE.java\n+++ b/src/main/java/humaneval/buggy/CAN_ARRANGE.java\n@@ -13,11 +13,21 @@ package humaneval.buggy;\n  */\n \n public class CAN_ARRANGE {\n-    public static int can_arrange(int[] arr) {\n-        int ind = 1;\n-        for(int i = 0; i < arr.length - 1; i++) {\n-            if(arr[i] < arr[i + 1]) ind = i + 1;\n+public static int can_arrange(int[] arr) {\n+    int n = arr.length;\n+    int[] sortedArr = Arrays.copyOf(arr, n);\n+    Arrays.sort(sortedArr);\n+    int left = -1;\n+    int right = -1;\n+    for (int i = 0; i < n; i++) {\n+        if (arr[i] != sortedArr[i]) {\n+            if (left == -1) {\n+                left = i;\n+            } else {\n+                right = i;\n+            }\n         }\n-        return ind;\n     }\n+    return right == -1 ? 0 : right;\n+}\n }",
    "result_reason": " /tmp/humaneval-CAN_ARRANGE/src/main/java/humaneval/buggy/CAN_ARRANGE.java:[18,23] cannot find symbol",
    "test_result": "ERROR"
}