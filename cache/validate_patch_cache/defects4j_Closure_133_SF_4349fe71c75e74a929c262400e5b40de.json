{
    "patch": "private String getRemainingJSDocLine() {\n  String result = stream.getRemainingJSDocLine();\n\n  if (result == null) {\n    throw new IllegalStateException(\"Failed to get remaining JSDoc line\");\n  }\n\n  String sanitizedResult = result.replace(\"*/\", \"\");\n\n  // Preserve leading and trailing spaces\n  int leadingSpaces = result.length() - result.trimLeft().length();\n  int trailingSpaces = result.length() - result.trimRight().length();\n  String spaces = new String(new char[leadingSpaces]).replace('\\0', ' ');\n  String trailingSpacesStr = new String(new char[trailingSpaces]).replace('\\0', ' ');\n\n  return spaces + sanitizedResult.trim() + trailingSpacesStr;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..dd211f1c 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,11 +2396,24 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+private String getRemainingJSDocLine() {\n+  String result = stream.getRemainingJSDocLine();\n+\n+  if (result == null) {\n+    throw new IllegalStateException(\"Failed to get remaining JSDoc line\");\n   }\n \n+  String sanitizedResult = result.replace(\"*/\", \"\");\n+\n+  // Preserve leading and trailing spaces\n+  int leadingSpaces = result.length() - result.trimLeft().length();\n+  int trailingSpaces = result.length() - result.trimRight().length();\n+  String spaces = new String(new char[leadingSpaces]).replace('\\0', ' ');\n+  String trailingSpacesStr = new String(new char[trailingSpaces]).replace('\\0', ' ');\n+\n+  return spaces + sanitizedResult.trim() + trailingSpacesStr;\n+}\n+\n   /**\n    * Determines whether the parser has been populated with docinfo with a\n    * fileoverview tag.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}