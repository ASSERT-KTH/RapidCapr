{
    "patch": "```\npublic static boolean isAvailableLocale(Locale locale) {\n    if (locale == null) {\n        return false;\n    }\n    return cAvailableLocaleSet != null && cAvailableLocaleSet.contains(locale);\n}\n```\nThis function checks if the input locale is null and returns false if it is. Otherwise, it checks if `cAvailableLocaleSet` is null to avoid `NullPointerException`, and if not, checks if the locale is contained in the set using the `contains()` method.",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex ceb886e8..3f774961 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -219,9 +219,15 @@ public class LocaleUtils {\n      * @param locale the Locale object to check if it is available\n      * @return true if the locale is a known locale\n      */\n-    public static boolean isAvailableLocale(Locale locale) {\n-        return cAvailableLocaleSet.contains(locale);\n+```\n+public static boolean isAvailableLocale(Locale locale) {\n+    if (locale == null) {\n+        return false;\n     }\n+    return cAvailableLocaleSet != null && cAvailableLocaleSet.contains(locale);\n+}\n+```\n+This function checks if the input locale is null and returns false if it is. Otherwise, it checks if `cAvailableLocaleSet` is null to avoid `NullPointerException`, and if not, checks if the locale is contained in the set using the `contains()` method.\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}