{
    "patch": "        final Point zero = new Point(0, 0);\n        final Vector direction = Vector.fromCoordinates(this.p2.getX() - this.p1.getX(), this.p2.getY() - this.p1.getY());\n        final Line reverted = new Line(zero, zero.add(direction));\n        return reverted;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..2b2a4b307 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,10 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+        final Point zero = new Point(0, 0);\n+        final Vector direction = Vector.fromCoordinates(this.p2.getX() - this.p1.getX(), this.p2.getY() - this.p1.getY());\n+        final Line reverted = new Line(zero, zero.add(direction));\n+        return reverted;\n         return reverted;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}