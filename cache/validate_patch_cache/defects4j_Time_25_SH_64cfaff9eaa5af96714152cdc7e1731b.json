{
    "patch": "final int offsetLocal = getOffset(instantLocal);\nfinal int offsetAdjusted;\n\nif (offsetLocal >= 0) {\n    offsetAdjusted = getOffset(instantLocal - offsetLocal);\n    if (offsetLocal != offsetAdjusted) {\n        long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n        long prevLocal = previousTransition(instantLocal);\n        if (prevAdjusted < prevLocal && instantLocal >= prevAdjusted - offsetLocal) {\n            return offsetLocal;\n        }\n    }\n} else {\n    offsetAdjusted = getOffset(instantLocal - offsetLocal);\n    if (offsetLocal != offsetAdjusted) {\n        long nextLocal = nextTransition(instantLocal);\n        long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n        if (nextLocal != nextAdjusted) {\n            return offsetLocal;\n        }\n    }\n}\n\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..228b9f15 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,30 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+final int offsetLocal = getOffset(instantLocal);\n+final int offsetAdjusted;\n+\n+if (offsetLocal >= 0) {\n+    offsetAdjusted = getOffset(instantLocal - offsetLocal);\n+    if (offsetLocal != offsetAdjusted) {\n+        long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+        long prevLocal = previousTransition(instantLocal);\n+        if (prevAdjusted < prevLocal && instantLocal >= prevAdjusted - offsetLocal) {\n+            return offsetLocal;\n+        }\n+    }\n+} else {\n+    offsetAdjusted = getOffset(instantLocal - offsetLocal);\n+    if (offsetLocal != offsetAdjusted) {\n+        long nextLocal = nextTransition(instantLocal);\n+        long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+        if (nextLocal != nextAdjusted) {\n+            return offsetLocal;\n+        }\n+    }\n+}\n+\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: variable offsetLocal is already defined in method getOffsetFromLocal(long)",
    "test_result": "ERROR"
}