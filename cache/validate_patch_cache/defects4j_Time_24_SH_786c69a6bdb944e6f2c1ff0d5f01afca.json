{
    "patch": "            if (millis < iMillis || (millis > iMillis && savedFields[count - 1].iField.getType() != DateTimeFieldType.millisOfSecond())) {\n                // Sometimes the time of second becomes 60 seconds. Avoid this situation.\n                if (millis < iMillis) {\n                    millis = iMillis;\n                }\n                throw new IllegalArgumentException(\"Illegal instant due to time zone offset transition (\" + iZone + ')');\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..06d6f14a 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (millis < iMillis || (millis > iMillis && savedFields[count - 1].iField.getType() != DateTimeFieldType.millisOfSecond())) {\n+                // Sometimes the time of second becomes 60 seconds. Avoid this situation.\n+                if (millis < iMillis) {\n+                    millis = iMillis;\n+                }\n+                throw new IllegalArgumentException(\"Illegal instant due to time zone offset transition (\" + iZone + ')');\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": " java.lang.IllegalArgumentException: Illegal instant due to time zone offset transition (null)",
    "test_result": "ERROR"
}