{
    "patch": "      // The function String() with no args returns an empty string ''.\n      if (!callTarget.hasMoreThanOneChild()) {\n        Node emptyString = IR.string(\"\").srcref(callTarget);\n        n.getParent().replaceChild(n, emptyString);\n        reportCodeChange();\n        return emptyString;\n      } else {\n        Node value = callTarget.getNext();\n        if (value.isString()) {\n          // The function String(string) returns the same string.\n          Node stringNode = IR.string(value.getString()).srcref(value);\n          n.getParent().replaceChild(n, stringNode);\n          reportCodeChange();\n          return stringNode;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\nindex bfa17074..66ef9ca2 100644\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n@@ -217,7 +217,21 @@ class PeepholeSubstituteAlternateSyntax\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n+      // The function String() with no args returns an empty string ''.\n+      if (!callTarget.hasMoreThanOneChild()) {\n+        Node emptyString = IR.string(\"\").srcref(callTarget);\n+        n.getParent().replaceChild(n, emptyString);\n+        reportCodeChange();\n+        return emptyString;\n+      } else {\n+        Node value = callTarget.getNext();\n+        if (value.isString()) {\n+          // The function String(string) returns the same string.\n+          Node stringNode = IR.string(value.getString()).srcref(value);\n+          n.getParent().replaceChild(n, stringNode);\n+          reportCodeChange();\n+          return stringNode;\n+        }\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());",
    "result_reason": "error: variable value is already defined in method tryFoldSimpleFunctionCall(Node)",
    "test_result": "ERROR"
}