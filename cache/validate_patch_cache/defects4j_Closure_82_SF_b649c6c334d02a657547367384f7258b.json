{
    "patch": "public final boolean isEmptyType() {\n    boolean isEmpty = false;\n\n    if (isNoType() || isNoResolvedType() || (isVoidType() && !isNullType())) {\n        isEmpty = true;\n    } else if (isPrimitiveType()) {\n        // primitive types are never empty\n        isEmpty = false;\n    } else if (isArrayType() || isWildcardType() || isUnionType()) {\n        // these types are empty if their components are empty\n        isEmpty = getComponentType().isEmptyType();\n    } else if (isParameterizedType() || isTypeVariable() || isIntersectionType()) {\n        // these types are empty if any of their type parameters are empty\n        for (TypeMirror type : getTypeArguments()) {\n            if (((Type) type).isEmptyType()) {\n                isEmpty = true;\n                break;\n            }\n        }\n    } else {\n        // all other types are non-empty\n        isEmpty = false;\n    }\n\n    if (isEmpty) {\n        System.out.println(\"**Warning**: Type is empty!\");\n    }\n\n    return isEmpty;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..5afd6230 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,36 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    boolean isEmpty = false;\n+\n+    if (isNoType() || isNoResolvedType() || (isVoidType() && !isNullType())) {\n+        isEmpty = true;\n+    } else if (isPrimitiveType()) {\n+        // primitive types are never empty\n+        isEmpty = false;\n+    } else if (isArrayType() || isWildcardType() || isUnionType()) {\n+        // these types are empty if their components are empty\n+        isEmpty = getComponentType().isEmptyType();\n+    } else if (isParameterizedType() || isTypeVariable() || isIntersectionType()) {\n+        // these types are empty if any of their type parameters are empty\n+        for (TypeMirror type : getTypeArguments()) {\n+            if (((Type) type).isEmptyType()) {\n+                isEmpty = true;\n+                break;\n+            }\n+        }\n+    } else {\n+        // all other types are non-empty\n+        isEmpty = false;\n+    }\n+\n+    if (isEmpty) {\n+        System.out.println(\"**Warning**: Type is empty!\");\n+    }\n+\n+    return isEmpty;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}