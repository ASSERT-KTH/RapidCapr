{
    "patch": "        if (start > this.getItemCount() - 1) {\n            throw new IllegalArgumentException(\"Unable to create copy, start index is beyond series size.\");\n        }\n        if (end > this.getItemCount() - 1) {\n            throw new IllegalArgumentException(\"Unable to create copy, end index is beyond series size.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.clear();\n        for (int index = start; index <= end; index++) {\n            TimeSeriesDataItem item = this.getDataItem(index);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n        return copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..5925fab 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start > this.getItemCount() - 1) {\n+            throw new IllegalArgumentException(\"Unable to create copy, start index is beyond series size.\");\n+        }\n+        if (end > this.getItemCount() - 1) {\n+            throw new IllegalArgumentException(\"Unable to create copy, end index is beyond series size.\");\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.clear();\n+        for (int index = start; index <= end; index++) {\n+            TimeSeriesDataItem item = this.getDataItem(index);\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+            try {\n+                copy.add(clone);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: variable copy is already defined in method createCopy(int,int)",
    "test_result": "ERROR"
}