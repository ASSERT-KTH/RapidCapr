{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int len = str.length();\n    final int searchLen = searchChars.length;\n    final int firstSupplementaryCharIndex = findFirstSupplementaryChar(searchChars);\n    if (firstSupplementaryCharIndex == ArrayUtils.INDEX_NOT_FOUND) {\n        for (int i = 0; i < len; i++) {\n            final char ch = str.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    if (len >= searchLen) {\n        int i = 0;\n        while (i < len) {\n            final int codePoint = codePointAt(str, i);\n            for (int j = 0; j < searchLen; j++) {\n                final char[] chars = toChars(codePoint);\n                if (Chars.contains(searchChars, chars)) {\n                    return true;\n                }\n            }\n            i += Character.charCount(codePoint);\n        }\n    }\n    return false;\n}\n\nprivate static int findFirstSupplementaryChar(final char[] searchChars) {\n    if (searchChars != null && searchChars.length != 0) {\n        for (int i = 0 ; i < searchChars.length ;) {\n            final int cp = codePointAt(searchChars, i, searchChars.length);\n            if (Character.isSupplementaryCodePoint(cp)) {\n                return i;\n            }\n            i += Character.charCount(cp);\n        }\n    }\n    return ArrayUtils.INDEX_NOT_FOUND;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..1bcce6c8 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,52 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int len = str.length();\n+    final int searchLen = searchChars.length;\n+    final int firstSupplementaryCharIndex = findFirstSupplementaryChar(searchChars);\n+    if (firstSupplementaryCharIndex == ArrayUtils.INDEX_NOT_FOUND) {\n+        for (int i = 0; i < len; i++) {\n+            final char ch = str.charAt(i);\n+            for (int j = 0; j < searchLen; j++) {\n+                if (searchChars[j] == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+    if (len >= searchLen) {\n+        int i = 0;\n+        while (i < len) {\n+            final int codePoint = codePointAt(str, i);\n+            for (int j = 0; j < searchLen; j++) {\n+                final char[] chars = toChars(codePoint);\n+                if (Chars.contains(searchChars, chars)) {\n+                    return true;\n+                }\n+            }\n+            i += Character.charCount(codePoint);\n+        }\n+    }\n+    return false;\n+}\n+\n+private static int findFirstSupplementaryChar(final char[] searchChars) {\n+    if (searchChars != null && searchChars.length != 0) {\n+        for (int i = 0 ; i < searchChars.length ;) {\n+            final int cp = codePointAt(searchChars, i, searchChars.length);\n+            if (Character.isSupplementaryCodePoint(cp)) {\n+                return i;\n+            }\n+            i += Character.charCount(cp);\n+        }\n+    }\n+    return ArrayUtils.INDEX_NOT_FOUND;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}