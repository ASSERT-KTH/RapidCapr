{
    "patch": "Type[] actualTypeArguments = getActualTypeArgumentsFor(typeVariable);\nif(actualTypeArguments != null) {\n   for(Type actualType : actualTypeArguments) {\n      registerTypeVariablesOn(actualType);\n   }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..aa3fc152c 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,17 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] actualTypeArguments = getActualTypeArgumentsFor(typeVariable);\n+if(actualTypeArguments != null) {\n+   for(Type actualType : actualTypeArguments) {\n+      registerTypeVariablesOn(actualType);\n+   }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}