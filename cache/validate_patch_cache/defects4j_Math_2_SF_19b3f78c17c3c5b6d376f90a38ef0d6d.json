{
    "patch": "    public double getNumericalMean() {\n        double mean = Double.NaN;\n        \n        if (getPopulationSize() > 0) {\n            mean = (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n        }\n\n        return mean;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..403617ff6 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -265,7 +265,13 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+        double mean = Double.NaN;\n+        \n+        if (getPopulationSize() > 0) {\n+            mean = (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+        }\n+\n+        return mean;\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: sample=-50",
    "test_result": "FAIL"
}