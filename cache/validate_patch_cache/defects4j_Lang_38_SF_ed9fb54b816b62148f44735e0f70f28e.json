{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        Calendar originalCalendar = (Calendar) calendar.clone();\n        StringBuffer result = applyRules(originalCalendar, buf);\n        if (mTimeZoneForced) {\n            calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..e0655229 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -872,7 +872,12 @@ public class FastDateFormat extends Format {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }\n-        return applyRules(calendar, buf);\n+        Calendar originalCalendar = (Calendar) calendar.clone();\n+        StringBuffer result = applyRules(originalCalendar, buf);\n+        if (mTimeZoneForced) {\n+            calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+        }\n+        return result;\n     }\n \n     /**",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08]:42:16.000Z>",
    "test_result": "FAIL"
}