{
    "patch": "public double getTypedPercent(String js) {\n    int count = 0;\n    int typedCount = 0;\n    String[] lines = js.split(\"\\n\");\n    for (String line : lines) {\n        if (line.trim().startsWith(\"//\")) {\n            continue;\n        }\n        count++;\n        if (line.trim().length() > 0) {\n            typedCount++;\n        }\n    }\n    if (count == 0) {\n        return 0;\n    }\n    return ((double) typedCount / (double) count) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..88d0be7d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    int count = 0;\n+    int typedCount = 0;\n+    String[] lines = js.split(\"\\n\");\n+    for (String line : lines) {\n+        if (line.trim().startsWith(\"//\")) {\n+            continue;\n+        }\n+        count++;\n+        if (line.trim().length() > 0) {\n+            typedCount++;\n+        }\n+    }\n+    if (count == 0) {\n+        return 0;\n+    }\n+    return ((double) typedCount / (double) count) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}