{
    "patch": "        if (NodeUtil.getEnclosingType(n, Token.FUNCTION) != null) {\n          handleFunctionInputs(parent);\n        }\n        return;\n      }\n\n      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          if (NodeUtil.getEnclosingType(parent, Token.OBJECTLIT) != null) {\n            defineDeclaredFunction(n, parent);\n          } else {\n            defineFunction(n, parent);\n          }\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n        case Token.CONST:\n          defineVar(n, parent);\n          break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..2fd11e75 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1448,21 +1448,31 @@ final class TypedScopeCreator implements ScopeCreator {\n         return;\n       }\n \n+        if (NodeUtil.getEnclosingType(n, Token.FUNCTION) != null) {\n+          handleFunctionInputs(parent);\n+        }\n+        return;\n+      }\n+\n       attachLiteralTypes(n);\n       switch (n.getType()) {\n         case Token.FUNCTION:\n           if (parent.getType() == Token.NAME) {\n             return;\n           }\n-          defineDeclaredFunction(n, parent);\n+          if (NodeUtil.getEnclosingType(parent, Token.OBJECTLIT) != null) {\n+            defineDeclaredFunction(n, parent);\n+          } else {\n+            defineFunction(n, parent);\n+          }\n           break;\n         case Token.CATCH:\n           defineCatch(n, parent);\n           break;\n         case Token.VAR:\n+        case Token.CONST:\n           defineVar(n, parent);\n           break;\n-      }\n     }\n \n     /** Handle bleeding functions and function parameters. */",
    "result_reason": "error: invalid method declaration; return type required",
    "test_result": "ERROR"
}