{
    "patch": "public Object process(MyValues values) {\n  String input = (String) values.getValueFor(\"input\");\n\n  if (input == null || input.isEmpty()) {\n    return Collections.emptyList(); // return an empty list when input is empty or null\n  }\n  char[] chars = input.toCharArray();\n\n  Set<Character> set = new LinkedHashSet<>();\n\n  for (char c : chars) {\n    set.add(c);\n  }\n\n  StringBuilder sb = new StringBuilder();\n\n  for (Character character : set) {\n    sb.append(character);\n  }\n\n  return sb.toString();\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}