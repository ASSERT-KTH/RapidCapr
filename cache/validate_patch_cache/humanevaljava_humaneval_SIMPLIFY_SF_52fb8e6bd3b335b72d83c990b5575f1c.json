{
    "patch": "public static boolean simplify(String x, String n) {\n    String[] xSplit = x.split(\"/\");\n    String[] nSplit = n.split(\"/\");\n    try {\n        int a = Integer.parseInt(xSplit[0]);\n        int b = Integer.parseInt(xSplit[1]);\n        int c = Integer.parseInt(nSplit[0]);\n        int d = Integer.parseInt(nSplit[1]);\n        int gcdX = gcd(a, b);\n        int gcdN = gcd(c, d);\n        int numerator = a / gcdX * c / gcdN;\n        int denominator = b / gcdX * d / gcdN;\n        return denominator == 1;\n    } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {\n        return false;\n    }\n}\n\nprivate static int gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    } else {\n        return gcd(b, a % b);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SIMPLIFY.java b/src/main/java/humaneval/buggy/SIMPLIFY.java\nindex a55ee2e..45b9285 100644\n--- a/src/main/java/humaneval/buggy/SIMPLIFY.java\n+++ b/src/main/java/humaneval/buggy/SIMPLIFY.java\n@@ -12,16 +12,29 @@ simplify(\"1/6\", \"2/1\") = False\n simplify(\"7/10\", \"10/2\") = False */\n \n public class SIMPLIFY {\n-    public static boolean simplify(String x, String n) {\n-        int a = Integer.parseInt(x.split(\"/\")[0]);\n-        int b = Integer.parseInt(x.split(\"/\")[1]);\n-        int c = Integer.parseInt(n.split(\"/\")[0]);\n-        int d = Integer.parseInt(n.split(\"/\")[1]);\n-\n-        int numerator = a * c;\n-        int denom = b * d;\n-        if (numerator / denom == (int) (numerator / denom))\n-            return true;\n+public static boolean simplify(String x, String n) {\n+    String[] xSplit = x.split(\"/\");\n+    String[] nSplit = n.split(\"/\");\n+    try {\n+        int a = Integer.parseInt(xSplit[0]);\n+        int b = Integer.parseInt(xSplit[1]);\n+        int c = Integer.parseInt(nSplit[0]);\n+        int d = Integer.parseInt(nSplit[1]);\n+        int gcdX = gcd(a, b);\n+        int gcdN = gcd(c, d);\n+        int numerator = a / gcdX * c / gcdN;\n+        int denominator = b / gcdX * d / gcdN;\n+        return denominator == 1;\n+    } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {\n         return false;\n     }\n }\n+\n+private static int gcd(int a, int b) {\n+    if (b == 0) {\n+        return a;\n+    } else {\n+        return gcd(b, a % b);\n+    }\n+}\n+}",
    "result_reason": "   TEST_SIMPLIFY.test_0:7 expected:<false> but was:<true>",
    "test_result": "FAIL"
}