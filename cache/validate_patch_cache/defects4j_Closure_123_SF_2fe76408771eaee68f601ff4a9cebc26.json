{
    "patch": "public class LoopBug {\n    public static String fixLoopBug(boolean c, int[] d) {\n        String expected = c ? \"for(a=0; ;)foo()\" : \"for(a=(0 in d); ;)foo()\";\n        String actual = \"\";\n        // Fix the loop condition:\n        actual += \"for(a=\";\n        if (c) {\n            actual += \"0\";\n        } else {\n            actual += \"0 in d\";\n        }\n        actual += \"; ;)foo()\";\n        return actual;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..f453d751 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,21 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class LoopBug {\n+    public static String fixLoopBug(boolean c, int[] d) {\n+        String expected = c ? \"for(a=0; ;)foo()\" : \"for(a=(0 in d); ;)foo()\";\n+        String actual = \"\";\n+        // Fix the loop condition:\n+        actual += \"for(a=\";\n+        if (c) {\n+            actual += \"0\";\n+        } else {\n+            actual += \"0 in d\";\n+        }\n+        actual += \"; ;)foo()\";\n+        return actual;\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}