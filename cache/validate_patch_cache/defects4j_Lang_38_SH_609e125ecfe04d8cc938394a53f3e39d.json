{
    "patch": "        TimeZone prevTimeZone = null;\n        boolean timeZoneChanged = false;\n        if (mTimeZoneForced) {\n            prevTimeZone = calendar.getTimeZone();\n            calendar.setTimeZone(mTimeZone);\n            timeZoneChanged = true;\n        }\n        try {\n            return applyRules(calendar, buf);\n        } finally {\n            if (timeZoneChanged) {\n                calendar.setTimeZone(prevTimeZone);\n            }\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..312addad 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,20 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        TimeZone prevTimeZone = null;\n+        boolean timeZoneChanged = false;\n+        if (mTimeZoneForced) {\n+            prevTimeZone = calendar.getTimeZone();\n+            calendar.setTimeZone(mTimeZone);\n+            timeZoneChanged = true;\n+        }\n+        try {\n+            return applyRules(calendar, buf);\n+        } finally {\n+            if (timeZoneChanged) {\n+                calendar.setTimeZone(prevTimeZone);\n+            }\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}