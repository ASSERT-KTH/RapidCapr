{
    "patch": " public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        if (type.isTop()) {\n          // if this is the top object type, we need to return the constructor type\n          JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n          return resultEqualsValue ? ctorType : null;\n        } else {\n          // Objects are restricted to \"Function\", subtypes are left\n          // Only filter out subtypes of \"function\"\n          JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n          return ctorType.isSubtype(type) ? ctorType : null;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..a73e08c7 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -607,15 +607,18 @@ public abstract class ChainableReverseAbstractInterpreter\n     }\n \n     @Override\n-    public JSType caseObjectType(ObjectType type) {\n+ public JSType caseObjectType(ObjectType type) {\n       if (value.equals(\"function\")) {\n-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n+        if (type.isTop()) {\n+          // if this is the top object type, we need to return the constructor type\n+          JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n+          return resultEqualsValue ? ctorType : null;\n+        } else {\n           // Objects are restricted to \"Function\", subtypes are left\n           // Only filter out subtypes of \"function\"\n-      }\n-      return matchesExpectation(\"object\") ? type : null;\n-    }\n+          JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n+          return ctorType.isSubtype(type) ? ctorType : null;\n+        }\n \n     @Override\n     public JSType caseStringType() {",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}