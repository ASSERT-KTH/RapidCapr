{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    final int n = m.getColumnDimension();\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    final RealMatrix eigenvalues = MatrixUtils.createRealDiagonalMatrix(dec.getRealEigenvalues());\n    final RealMatrix U = dec.getV();\n    final RealMatrix UT = U.transpose();\n\n    final RealMatrix D = MatrixUtils.createRealDiagonalMatrix(\n            IntStream.range(0, n).mapToDouble(i -> Math.sqrt(eigenvalues.getEntry(i, i))).toArray());\n\n    final RealMatrix A = U.multiply(D).multiply(UT);\n\n    return A;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..7f1688bba 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,18 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final int n = m.getColumnDimension();\n+    final EigenDecomposition dec = new EigenDecomposition(m);\n+    final RealMatrix eigenvalues = MatrixUtils.createRealDiagonalMatrix(dec.getRealEigenvalues());\n+    final RealMatrix U = dec.getV();\n+    final RealMatrix UT = U.transpose();\n+\n+    final RealMatrix D = MatrixUtils.createRealDiagonalMatrix(\n+            IntStream.range(0, n).mapToDouble(i -> Math.sqrt(eigenvalues.getEntry(i, i))).toArray());\n+\n+    final RealMatrix A = U.multiply(D).multiply(UT);\n+\n+    return A;\n+}\n }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}