{
    "patch": "private static final int MAX_ITERATIONS = 100;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    final int n = m.getColumnDimension();\n    final RealMatrix x = MatrixUtils.createRealMatrix(n, n);\n    final RealMatrix delta = MatrixUtils.createRealIdentityMatrix(n);\n    for (int i = 0; i < MAX_ITERATIONS; i++) {\n        final RealMatrix y = x.add(m.subtract(x.multiply(x)).multiply(delta).multiply(0.5));\n        if (y.equals(x)) {\n            break;\n        }\n        x.copySubMatrix(y.getData(), 0, n - 1, 0, n - 1);\n    }\n    return x;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..5f799b7c4 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,19 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private static final int MAX_ITERATIONS = 100;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final int n = m.getColumnDimension();\n+    final RealMatrix x = MatrixUtils.createRealMatrix(n, n);\n+    final RealMatrix delta = MatrixUtils.createRealIdentityMatrix(n);\n+    for (int i = 0; i < MAX_ITERATIONS; i++) {\n+        final RealMatrix y = x.add(m.subtract(x.multiply(x)).multiply(delta).multiply(0.5));\n+        if (y.equals(x)) {\n+            break;\n+        }\n+        x.copySubMatrix(y.getData(), 0, n - 1, 0, n - 1);\n     }\n+    return x;\n+}\n }",
    "result_reason": "error: method multiply in interface RealMatrix cannot be applied to given types;",
    "test_result": "ERROR"
}