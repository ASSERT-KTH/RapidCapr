{
    "patch": "        MockHandler<T> mockHandler = getMockHandler(mock);\n        if(!(mockHandler instanceof MockHandlerImpl)){\n            mockHandler = new MockHandlerImpl(mockHandler.getMockSettings());\n            setMockHandler(mock, mockHandler);\n        }\n        InvocationHandler invocationHandler = new InvocationInterceptorFilter(mockHandler);\n        Object newProxyInstance;\n        try {\n            newProxyInstance = Proxy.newProxyInstance(mock.getClass().getClassLoader(), getAllInterfaces(mock.getClass()), invocationHandler);\n        } catch (IllegalArgumentException e) {\n            throw new IllegalArgumentException(\"failed to create a proxy for \" + mock, e);\n        }\n        ((Factory) mock).setCallbacks(new Callback[]{(Callback) newproxyInstance});",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..e0a91a4b4 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,22 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandler<T> mockHandler = getMockHandler(mock);\n+        if(!(mockHandler instanceof MockHandlerImpl)){\n+            mockHandler = new MockHandlerImpl(mockHandler.getMockSettings());\n+            setMockHandler(mock, mockHandler);\n+        }\n+        InvocationHandler invocationHandler = new InvocationInterceptorFilter(mockHandler);\n+        Object newProxyInstance;\n+        try {\n+            newProxyInstance = Proxy.newProxyInstance(mock.getClass().getClassLoader(), getAllInterfaces(mock.getClass()), invocationHandler);\n+        } catch (IllegalArgumentException e) {\n+            throw new IllegalArgumentException(\"failed to create a proxy for \" + mock, e);\n+        }\n+        ((Factory) mock).setCallbacks(new Callback[]{(Callback) newproxyInstance});\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: incompatible types: MockHandlerInterface<T> cannot be converted to MockHandler<T>",
    "test_result": "ERROR"
}