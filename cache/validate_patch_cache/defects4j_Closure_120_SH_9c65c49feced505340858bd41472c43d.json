{
    "patch": "      int numOfAssignments = 0;\n      for (Reference r : references) {\n        if (r.isAssignmentToSameName()) {\n          numOfAssignments++;\n        }\n      }\n      return numOfAssignments == 1;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..e4592b80 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,13 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+      int numOfAssignments = 0;\n+      for (Reference r : references) {\n+        if (r.isAssignmentToSameName()) {\n+          numOfAssignments++;\n+        }\n+      }\n+      return numOfAssignments == 1;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}