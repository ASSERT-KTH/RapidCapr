{
    "patch": "if ((c >= 0x20 && c <= 0x7E && c != '\\\"' && c != '\\'' && c != '\\\\' && c != '>' && c != '<')\n    || (outputCharsetEncoder != null && outputCharsetEncoder.canEncode(Character.toString(c)))\n    || (c == '>' && i > 1 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']')))",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..b3f74b3f 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,9 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+if ((c >= 0x20 && c <= 0x7E && c != '\\\"' && c != '\\'' && c != '\\\\' && c != '>' && c != '<')\n+    || (outputCharsetEncoder != null && outputCharsetEncoder.canEncode(Character.toString(c)))\n+    || (c == '>' && i > 1 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']')))\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}