{
    "patch": "public static String fixCode(String code) {\n    String newCode = \"\";\n    boolean inSingleQuotes = false;\n    boolean inDoubleQuotes = false;\n    for (int i = 0; i < code.length(); i++) {\n        char c = code.charAt(i);\n        if (c == '\\'') {\n            inSingleQuotes = !inSingleQuotes;\n        } else if (c == '\\\"') {\n            inDoubleQuotes = !inDoubleQuotes;\n        } else if (c == ':' && !inSingleQuotes && !inDoubleQuotes) {\n            newCode += \"(?\";\n        } else if (c == '?' && !inSingleQuotes && !inDoubleQuotes) {\n            newCode += \":\";\n        }\n        newCode += c;\n    }\n    return newCode;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..180e47d3 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,25 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String newCode = \"\";\n+    boolean inSingleQuotes = false;\n+    boolean inDoubleQuotes = false;\n+    for (int i = 0; i < code.length(); i++) {\n+        char c = code.charAt(i);\n+        if (c == '\\'') {\n+            inSingleQuotes = !inSingleQuotes;\n+        } else if (c == '\\\"') {\n+            inDoubleQuotes = !inDoubleQuotes;\n+        } else if (c == ':' && !inSingleQuotes && !inDoubleQuotes) {\n+            newCode += \"(?\";\n+        } else if (c == '?' && !inSingleQuotes && !inDoubleQuotes) {\n+            newCode += \":\";\n+        }\n+        newCode += c;\n+    }\n+    return newCode;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}