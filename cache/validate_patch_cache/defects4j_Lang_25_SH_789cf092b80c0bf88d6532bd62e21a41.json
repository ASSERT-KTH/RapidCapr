{
    "patch": "int len = s.length();\nchar[] out = new char[len];\nint outLen = 0;\n\nfor (int i = 0; i < len; i++) {\n    char ch = s.charAt(i);\n    if (ch == '\\\\') {\n        if (++i >= len) {\n            throw new IllegalArgumentException(\"Invalid escape sequence at index \" + (i - 1));\n        }\n        ch = s.charAt(i);\n        if (ch == 'n') {\n            ch = '\\n';\n        } else if (ch == 't') {\n            ch = '\\t';\n        } else if (ch == 'r') {\n            ch = '\\r';\n        } else if (ch == 'u') {\n            if (i + 4 >= len) {\n                throw new IllegalArgumentException(\"Invalid Unicode sequence at index \" + (i - 1));\n            }\n            // FIXED\n            int value = Integer.parseInt(s.substring(i + 1, i + 5), 16);\n            if (Character.isHighSurrogate(ch) || Character.isLowSurrogate(ch)) {\n                throw new IllegalArgumentException(\"Illegal surrogate sequence at index \" + (i - 1));\n            }\n            ch = (char) value;\n            i += 4;\n        } else if (ch == 'f') {\n            ch = '\\f';\n        } else if (ch == '\\\\') {\n            ch = '\\\\';\n        }\n        // FIXED\n        out[outLen++] = ch;\n    } else {\n        out[outLen++] = ch;\n    }\n}\nreturn new String(out, 0, outLen);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}