{
    "patch": "public boolean getprop(String key) {\n    try {\n        OutputStream os = new ByteArrayOutputStream();\n        Process p = Runtime.getRuntime().exec(\"getprop \" + key);\n        p.waitFor();\n        InputStream is = p.getInputStream();\n        byte[] buffer = new byte[1024];\n        while (is.read(buffer) != -1) {\n            os.write(buffer);\n        }\n        os.close();\n        is.close();\n        return !os.toString().equals(\"\");\n    } catch (IOException | InterruptedException e) {\n        e.printStackTrace();\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..125a6b06 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public boolean getprop(String key) {\n+    try {\n+        OutputStream os = new ByteArrayOutputStream();\n+        Process p = Runtime.getRuntime().exec(\"getprop \" + key);\n+        p.waitFor();\n+        InputStream is = p.getInputStream();\n+        byte[] buffer = new byte[1024];\n+        while (is.read(buffer) != -1) {\n+            os.write(buffer);\n+        }\n+        os.close();\n+        is.close();\n+        return !os.toString().equals(\"\");\n+    } catch (IOException | InterruptedException e) {\n+        e.printStackTrace();\n+        return false;\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: multi-catch statement is not supported in -source 1.6",
    "test_result": "ERROR"
}