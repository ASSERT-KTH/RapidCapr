{
    "patch": "// Fix hunk\nif (a <= 0 || b <= 0 || c <= 0) {\n    return false;\n} else if ((a + b <= c) || (b + c <= a) || (c + a <= b)) {\n    return false;\n} else {\n    int a2 = a * a;\n    int b2 = b * b;\n    int c2 = c * c;\n    if (a2 + b2 == c2 || b2 + c2 =",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..8013437 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,15 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+// Fix hunk\n+if (a <= 0 || b <= 0 || c <= 0) {\n+    return false;\n+} else if ((a + b <= c) || (b + c <= a) || (c + a <= b)) {\n+    return false;\n+} else {\n+    int a2 = a * a;\n+    int b2 = b * b;\n+    int c2 = c * c;\n+    if (a2 + b2 == c2 || b2 + c2 =\n     }\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[23,5] illegal start of expression",
    "test_result": "ERROR"
}