{
    "patch": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Collections;\n\npublic static Integer[] order_by_points(Integer[] nums) {\n    ArrayList<Integer> digits = new ArrayList<Integer>();\n    HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n\n    for (int i = 0; i < nums.length; i++) {\n        int num = nums[i];\n        int digitSum = 0;\n        \n        boolean isNegative = false;\n        if (num < 0) {\n            isNegative = true;\n            num = -num;\n        }\n\n        while (num != 0) {\n            digitSum += num % 10;\n            num /= 10;\n        }\n\n        if (isNegative) {\n            digitSum = -digitSum;\n        }\n        \n        digits.add(digitSum);\n\n        if (!digits_number.containsKey(digitSum)) {\n            digits_number.put(digitSum, new ArrayList<Integer>());\n        }\n        digits_number.get(digitSum).add(nums[i]);\n    }\n    Collections.sort(digits);\n\n    ArrayList<Integer> result = new ArrayList<Integer>();\n    for (int i = 0; i < digits.size(); i++) {\n        result.addAll(digits_number.get(digits.get(i)));\n    }\n    return result.toArray(new Integer[result.size()]);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\nindex 4e6cd94..f3aab67 100644\n--- a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n+++ b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n@@ -14,32 +14,46 @@ For example:\n >>> order_by_points([]) == [] */\n \n public class ORDER_BY_POINTS {\n-    public static Integer[] order_by_points(Integer[] nums) {\n-        ArrayList<Integer> digits = new ArrayList<Integer>();\n-        HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n-\n-        for (int i = 0; i < nums.length; i += 1){\n-            int neg = 1;\n-            int n = nums[i];\n-            if (n < 0) {\n-                n = -1 * n;\n-                neg = -1;\n-            }\n-            int digit = 0;\n-            for (int j = 0; j < (n + \"\").toCharArray().length; j += 1){\n-                digit += ((n + \"\").toCharArray()[j] - '0') * neg;\n-            }\n-            digits.add(digit);\n-            if (! digits_number.containsKey(digit))\n-                digits_number.put(digit, new ArrayList<Integer>());\n-            digits_number.get(digit).add(nums[i]);\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Collections;\n+\n+public static Integer[] order_by_points(Integer[] nums) {\n+    ArrayList<Integer> digits = new ArrayList<Integer>();\n+    HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n+\n+    for (int i = 0; i < nums.length; i++) {\n+        int num = nums[i];\n+        int digitSum = 0;\n+        \n+        boolean isNegative = false;\n+        if (num < 0) {\n+            isNegative = true;\n+            num = -num;\n+        }\n+\n+        while (num != 0) {\n+            digitSum += num % 10;\n+            num /= 10;\n+        }\n+\n+        if (isNegative) {\n+            digitSum = -digitSum;\n         }\n-        Collections.sort(digits);\n         \n-        ArrayList<Integer> result = new ArrayList<Integer>();\n-        for (int i = 0; i < digits.size(); i += 1) {\n-            result.addAll(digits_number.get(digits.get(i)));\n+        digits.add(digitSum);\n+\n+        if (!digits_number.containsKey(digitSum)) {\n+            digits_number.put(digitSum, new ArrayList<Integer>());\n         }\n-        return result.toArray(new Integer[] {});\n+        digits_number.get(digitSum).add(nums[i]);\n     }\n+    Collections.sort(digits);\n+\n+    ArrayList<Integer> result = new ArrayList<Integer>();\n+    for (int i = 0; i < digits.size(); i++) {\n+        result.addAll(digits_number.get(digits.get(i)));\n+    }\n+    return result.toArray(new Integer[result.size()]);\n+}\n }",
    "result_reason": " /tmp/humaneval-ORDER_BY_POINTS/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java:[17,1] illegal start of type",
    "test_result": "ERROR"
}