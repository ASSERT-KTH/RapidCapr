{
    "patch": "import org.apache.commons.math3.util.*;\n\npublic class GammaFunction {\n\n    public static double regularizedGammaP(double a, double x) {\n        if (a <= 0 || x < 0) {\n            throw new IllegalArgumentException(\"Invalid argument for Gamma function\");\n        }\n\n        final double epsilon = 1e-15;\n        double term = 1 / a;\n        double sum = term;\n        int i = 0;\n        while (i < 1000 && Math.abs(term) > Math.abs(sum) * epsilon && sum < 1) {\n            ++i;\n            term *= x / (a + i);\n            sum += term;\n        }\n        return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n    }\n\n    public static double logGamma(double x) {\n        double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n        double ser = 1.0 + 76.18009173 / (x + 0) - 86.50532033 / (x + 1)\n                + 24.01409822 / (x + 2) - 1.231739516 / (x + 3)\n                + 0.00120858003 / (x + 4) - 0.00000536382 / (x + 5);\n        return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..5ead1c675 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,35 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.util.*;\n+\n+public class GammaFunction {\n+\n+    public static double regularizedGammaP(double a, double x) {\n+        if (a <= 0 || x < 0) {\n+            throw new IllegalArgumentException(\"Invalid argument for Gamma function\");\n+        }\n+\n+        final double epsilon = 1e-15;\n+        double term = 1 / a;\n+        double sum = term;\n+        int i = 0;\n+        while (i < 1000 && Math.abs(term) > Math.abs(sum) * epsilon && sum < 1) {\n+            ++i;\n+            term *= x / (a + i);\n+            sum += term;\n+        }\n+        return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+    }\n+\n+    public static double logGamma(double x) {\n+        double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n+        double ser = 1.0 + 76.18009173 / (x + 0) - 86.50532033 / (x + 1)\n+                + 24.01409822 / (x + 2) - 1.231739516 / (x + 3)\n+                + 0.00120858003 / (x + 4) - 0.00000536382 / (x + 5);\n+        return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}