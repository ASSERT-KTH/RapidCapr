{
    "patch": "                    if (offsetLocal == offsetAdjusted) {\n                        // We stepped into a gap, need to try the next instant after this one.\n                        nextLocal = nextTransition(nextLocal + 1);\n                        nextAdjusted = nextTransition(nextLocal + millisPerHour - 1) - millisPerHour;\n                    } else {\n                        return offsetLocal;\n                    }\n                }\n                offsetAdjusted = getOffset(nextAdjusted);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d8b49306 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    if (offsetLocal == offsetAdjusted) {\n+                        // We stepped into a gap, need to try the next instant after this one.\n+                        nextLocal = nextTransition(nextLocal + 1);\n+                        nextAdjusted = nextTransition(nextLocal + millisPerHour - 1) - millisPerHour;\n+                    } else {\n+                        return offsetLocal;\n+                    }\n+                }\n+                offsetAdjusted = getOffset(nextAdjusted);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}