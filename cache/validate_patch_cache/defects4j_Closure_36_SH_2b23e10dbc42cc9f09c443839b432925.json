{
    "patch": "          if (value.getParent().isAssign()) {\n            Node grandparent = value.getGrandparent();\n            if (grandparent.getParent().isExprResult() && grandparent.getNext() == null) {\n              // The function is a GETTER.\n              return false;\n            } else if (grandparent.isName()) {\n              Set<String> getters = convention.getGetterNames();\n              return !getters.contains(grandparent.getString());\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..64ae0479 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,15 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (value.getParent().isAssign()) {\n+            Node grandparent = value.getGrandparent();\n+            if (grandparent.getParent().isExprResult() && grandparent.getNext() == null) {\n+              // The function is a GETTER.\n+              return false;\n+            } else if (grandparent.isName()) {\n+              Set<String> getters = convention.getGetterNames();\n+              return !getters.contains(grandparent.getString());\n+            }\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}