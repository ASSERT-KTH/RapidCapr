{
    "patch": "      Name name = functionNode.getFunctionName();\n      Node node = newNode(Token.FUNCTION);\n      if (name != null) {\n        node.addChildToBack(transform(name));\n      } else {\n        node.addChildToBack(newStringNode(Token.NAME, \"\"));\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..3e4ba8da 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,13 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      Name name = functionNode.getFunctionName();\n+      Node node = newNode(Token.FUNCTION);\n+      if (name != null) {\n+        node.addChildToBack(transform(name));\n+      } else {\n+        node.addChildToBack(newStringNode(Token.NAME, \"\"));\n+      }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}