{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int countryIndex = -1;\n        int variantIndex = -1;\n\n        for (int i = 3; i < len; i++) {\n            char ch = str.charAt(i);\n            if (ch == '_') {\n                if (countryIndex == -1) {\n                    countryIndex = i;\n                } else {\n                    variantIndex = i;\n                    break;\n                }\n            } else if (ch < 'A' || (ch > 'Z' && ch < 'a') || ch > 'z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n        if (countryIndex == -1 && variantIndex == -1) {\n            return new Locale(str.substring(0, 2), str.substring(3));\n        } else if (countryIndex == -1) {\n            return new Locale(str.substring(0, 2), str.substring(3, variantIndex),\n                    str.substring(variantIndex + 1));\n        } else if (variantIndex == -1) {\n            return new Locale(str.substring(0, 2), str.substring(3, countryIndex),\n                    str.substring(countryIndex + 1));\n        } else {\n            return new Locale(str.substring(0, 2), str.substring(3, countryIndex),\n                    str.substring(countryIndex + 1, variantIndex), str.substring(variantIndex + 1));\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..5b91c5c8 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,55 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    } else {\n+        if (str.charAt(2) != '_') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        int countryIndex = -1;\n+        int variantIndex = -1;\n+\n+        for (int i = 3; i < len; i++) {\n+            char ch = str.charAt(i);\n+            if (ch == '_') {\n+                if (countryIndex == -1) {\n+                    countryIndex = i;\n+                } else {\n+                    variantIndex = i;\n+                    break;\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else if (ch < 'A' || (ch > 'Z' && ch < 'a') || ch > 'z') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n         }\n+        if (countryIndex == -1 && variantIndex == -1) {\n+            return new Locale(str.substring(0, 2), str.substring(3));\n+        } else if (countryIndex == -1) {\n+            return new Locale(str.substring(0, 2), str.substring(3, variantIndex),\n+                    str.substring(variantIndex + 1));\n+        } else if (variantIndex == -1) {\n+            return new Locale(str.substring(0, 2), str.substring(3, countryIndex),\n+                    str.substring(countryIndex + 1));\n+        } else {\n+            return new Locale(str.substring(0, 2), str.substring(3, countryIndex),\n+                    str.substring(countryIndex + 1, variantIndex), str.substring(variantIndex + 1));\n+        }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: no suitable constructor found for Locale(String,String,String,String)",
    "test_result": "ERROR"
}