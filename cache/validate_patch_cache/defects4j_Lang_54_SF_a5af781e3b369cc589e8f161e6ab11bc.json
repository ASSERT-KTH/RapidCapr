{
    "patch": "        if (str == null || str.isEmpty()) {\n            return null;\n        }\n        int len = str.length();\n        if (len != 2 && len != 5 && len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                String country = str.substring(3, 5);\n                String variant = str.substring(6);\n                if (country.isEmpty()) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (variant.isEmpty()) {\n                    return new Locale(str.substring(0, 2), country);\n                } else {\n                    if(variant.contains(\"_\")) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    return new Locale(str.substring(0, 2), country, variant);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..fd986119 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,8 +91,7 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n+        if (str == null || str.isEmpty()) {\n             return null;\n         }\n         int len = str.length();\n@@ -121,10 +120,18 @@ public class LocaleUtils {\n                 if (str.charAt(5) != '_') {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n-        }\n-    }\n+                String country = str.substring(3, 5);\n+                String variant = str.substring(6);\n+                if (country.isEmpty()) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (variant.isEmpty()) {\n+                    return new Locale(str.substring(0, 2), country);\n+                } else {\n+                    if(variant.contains(\"_\")) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    return new Locale(str.substring(0, 2), country, variant);\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}