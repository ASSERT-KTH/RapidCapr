{
    "patch": "        int gcd = Math.abs(getGCD(numerator, denom));\n        numerator /= gcd;\n        denom /= gcd;\n\n        if(denom < 0) {\n            numerator *= -1;\n            denom *= -1;\n        }\n\n        if(denom == 1)\n            return true;\n        \n        return false;\n    }\n    \n    private static int getGCD(int a, int b) {\n        if (b == 0)\n            return a;\n        return getGCD(b, a % b);\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SIMPLIFY.java b/src/main/java/humaneval/buggy/SIMPLIFY.java\nindex a55ee2e..d9dc1c3 100644\n--- a/src/main/java/humaneval/buggy/SIMPLIFY.java\n+++ b/src/main/java/humaneval/buggy/SIMPLIFY.java\n@@ -20,7 +20,26 @@ public class SIMPLIFY {\n \n         int numerator = a * c;\n         int denom = b * d;\n-        if (numerator / denom == (int) (numerator / denom))\n+        int gcd = Math.abs(getGCD(numerator, denom));\n+        numerator /= gcd;\n+        denom /= gcd;\n+\n+        if(denom < 0) {\n+            numerator *= -1;\n+            denom *= -1;\n+        }\n+\n+        if(denom == 1)\n+            return true;\n+        \n+        return false;\n+    }\n+    \n+    private static int getGCD(int a, int b) {\n+        if (b == 0)\n+            return a;\n+        return getGCD(b, a % b);\n+    }\n             return true;\n         return false;\n     }",
    "result_reason": " /tmp/humaneval-SIMPLIFY/src/main/java/humaneval/buggy/SIMPLIFY.java:[43,13] illegal start of type",
    "test_result": "ERROR"
}