{
    "patch": "      } else if (name.globalSets == 1 && name.localSets == 0 &&\n          name.aliasingGets == 0 && name.getParent() != null &&\n          // Only inline if there is one declaration, and it's not a loop variable\n          // or a function parameter.\n          name.declaration != null && name.declaration.getParent() != null &&\n          NodeUtil.getEnclosingIterationStatement(name.declaration.getFirstChild()) == null &&\n          NodeUtil.isFunctionExpression(name.declaration.getParent())) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..6124b1f7 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,13 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      } else if (name.globalSets == 1 && name.localSets == 0 &&\n+          name.aliasingGets == 0 && name.getParent() != null &&\n+          // Only inline if there is one declaration, and it's not a loop variable\n+          // or a function parameter.\n+          name.declaration != null && name.declaration.getParent() != null &&\n+          NodeUtil.getEnclosingIterationStatement(name.declaration.getFirstChild()) == null &&\n+          NodeUtil.isFunctionExpression(name.declaration.getParent())) {\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}