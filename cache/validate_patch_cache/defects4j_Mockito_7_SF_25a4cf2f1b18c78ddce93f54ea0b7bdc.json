{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (arg == null) {\n        return StringDescription.toString(m).equals(\"null\");\n    }\n    return arg.toString().equals(StringDescription.toString(m));\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..18a756083 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,13 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (arg == null) {\n+        return StringDescription.toString(m).equals(\"null\");\n+    }\n+    return arg.toString().equals(StringDescription.toString(m));\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}