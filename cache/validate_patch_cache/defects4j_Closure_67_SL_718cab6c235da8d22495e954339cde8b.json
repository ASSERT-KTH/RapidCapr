{
    "patch": "        return (assign.getParent() != null && (assign.getParent().getType() == Token.FUNCTION || assign.getParent().getType() == Token.EXPR_RESULT)) && assign.getNext() == null && n != null && n.getType() == Token.GETPROP && n.getFirstChild() != null && n.getFirstChild().getType() == Token.GETPROP && n.getFirstChild().getFirstChild() != null && n.getFirstChild().getFirstChild().getNext() != null && n.getFirstChild().getFirstChild().getNext().getType() == Token.STRING && n.getFirstChild().getFirstChild().getNext().getString() != null && n.getFirstChild().getFirstChild().getNext().getString().equals(\"prototype\");",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\nindex 30b19e0b..02dcffa4 100644\n--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n@@ -315,7 +315,7 @@ class AnalyzePrototypeProperties implements CompilerPass {\n       Node n = assign.getFirstChild();\n       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n           && n.getType() == Token.GETPROP\n-          ) {\n+        return (assign.getParent() != null && (assign.getParent().getType() == Token.FUNCTION || assign.getParent().getType() == Token.EXPR_RESULT)) && assign.getNext() == null && n != null && n.getType() == Token.GETPROP && n.getFirstChild() != null && n.getFirstChild().getType() == Token.GETPROP && n.getFirstChild().getFirstChild() != null && n.getFirstChild().getFirstChild().getNext() != null && n.getFirstChild().getFirstChild().getNext().getType() == Token.STRING && n.getFirstChild().getFirstChild().getNext().getString() != null && n.getFirstChild().getFirstChild().getNext().getString().equals(\"prototype\");\n         // We want to exclude the assignment itself from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType() == Token.GETPROP;",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}