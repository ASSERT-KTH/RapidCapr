{
    "patch": "        if (val.startsWith(\"+\")) {\n            val = val.substring(1);\n        }\n        int decPos = val.indexOf('.');\n        int expPos = val.indexOf('e') + val.indexOf('E') + 1;\n\n        if (decPos == val.length() - 1) {\n            val = val.substring(0, decPos);\n        } else if (expPos > 0) {\n            try {\n                double d = Double.parseDouble(val);\n                if (Double.isInfinite(d) || (d == 0.0 && !val.contains(\".\"))) {\n                    return createBigDecimal(val);\n                }\n            } catch (NumberFormatException nfe) {\n                // empty catch block\n            }\n        }\n\n        if (decPos > -1 && expPos > -1) {\n            if (expPos < decPos) {\n                throw new NumberFormatException(val + \" is not a valid number.\");\n            }\n            return createBigDecimal(val);\n        }\n\n        if (decPos > -1) {\n            return createDouble(val);\n        }\n\n        if (expPos > -1) {\n            return createInteger(val);\n        }\n\n        return createLong(val);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..317b0b07 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,41 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.startsWith(\"+\")) {\n+            val = val.substring(1);\n+        }\n+        int decPos = val.indexOf('.');\n+        int expPos = val.indexOf('e') + val.indexOf('E') + 1;\n+\n+        if (decPos == val.length() - 1) {\n+            val = val.substring(0, decPos);\n+        } else if (expPos > 0) {\n+            try {\n+                double d = Double.parseDouble(val);\n+                if (Double.isInfinite(d) || (d == 0.0 && !val.contains(\".\"))) {\n+                    return createBigDecimal(val);\n+                }\n+            } catch (NumberFormatException nfe) {\n+                // empty catch block\n+            }\n+        }\n+\n+        if (decPos > -1 && expPos > -1) {\n+            if (expPos < decPos) {\n+                throw new NumberFormatException(val + \" is not a valid number.\");\n+            }\n+            return createBigDecimal(val);\n+        }\n+\n+        if (decPos > -1) {\n+            return createDouble(val);\n+        }\n+\n+        if (expPos > -1) {\n+            return createInteger(val);\n+        }\n+\n+        return createLong(val);\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: variable decPos is already defined in method createNumber(String)",
    "test_result": "ERROR"
}