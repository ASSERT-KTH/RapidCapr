{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.Precision;\nimport org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class MyClass {\n    @Test\n    public void testRegularizedGammaPositivePositive() {\n        double a = 1.49;\n        double x = 0.62;\n        double expected = Gamma.regularizedGammaP(a, x);\n        double actual = 1 - Gamma.regularizedGammaQ(a, x);\n        assertEquals(expected, actual, Precision.EPSILON);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..c38a66ce8 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,21 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.Precision;\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+\n+public class MyClass {\n+    @Test\n+    public void testRegularizedGammaPositivePositive() {\n+        double a = 1.49;\n+        double x = 0.62;\n+        double expected = Gamma.regularizedGammaP(a, x);\n+        double actual = 1 - Gamma.regularizedGammaQ(a, x);\n+        assertEquals(expected, actual, Precision.EPSILON);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}