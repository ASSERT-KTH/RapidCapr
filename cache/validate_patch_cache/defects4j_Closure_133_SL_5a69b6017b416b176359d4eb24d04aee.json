{
    "patch": "String result = stream.getRemainingJSDocLine();\n// check if result is null or empty\nif (result == null || result.isEmpty()) {\n  return \"\";\n}\n// trim the result to remove leading/trailing white spaces\nresult = result.trim();\n// check if result has \"@type\" annotation\nif (result.contains(\"@type\")) {\n  // concatenate the rest of the JSDoc line with result\n  String remainingJSDocLine = stream.getRemainingJSDocLine();\n  if (remainingJSDocLine != null) {\n    result = result.concat(remainingJSDocLine);\n  }\n}\nreturn result;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..af1de953 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,22 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+String result = stream.getRemainingJSDocLine();\n+// check if result is null or empty\n+if (result == null || result.isEmpty()) {\n+  return \"\";\n+}\n+// trim the result to remove leading/trailing white spaces\n+result = result.trim();\n+// check if result has \"@type\" annotation\n+if (result.contains(\"@type\")) {\n+  // concatenate the rest of the JSDoc line with result\n+  String remainingJSDocLine = stream.getRemainingJSDocLine();\n+  if (remainingJSDocLine != null) {\n+    result = result.concat(remainingJSDocLine);\n+  }\n+}\n+return result;\n     return result;\n   }\n ",
    "result_reason": "error: variable result is already defined in method getRemainingJSDocLine()",
    "test_result": "ERROR"
}