{
    "patch": "    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    // Get all parameter names\n    Set<String> paramNames = new HashSet<>();\n    Node argList = getFunctionArgList(function);\n    for (Node arg : argList.children()) {\n      paramNames.add(arg.getString());\n    }\n\n    // Find unreferenced parameters and remove them\n    NodeUtil.visitPreOrder(\n        function.getLastChild(),\n        new NodeUtil.Visitor() {\n          @Override\n          public void visit(Node node) {\n            if (node.isName()) {\n              Var var = fnScope.getVar(node.getString());\n              if (var != null\n                  && var.getParentNode() == argList\n                  && !referenced.contains(var)\n                  && !paramNames.contains(var.getName())) {\n                argList.removeChild(var.getParentNode());\n                compiler.reportCodeChange();\n              }\n            }\n          }\n        });",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..51751f70 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,39 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    // Get all parameter names\n+    Set<String> paramNames = new HashSet<>();\n+    Node argList = getFunctionArgList(function);\n+    for (Node arg : argList.children()) {\n+      paramNames.add(arg.getString());\n+    }\n+\n+    // Find unreferenced parameters and remove them\n+    NodeUtil.visitPreOrder(\n+        function.getLastChild(),\n+        new NodeUtil.Visitor() {\n+          @Override\n+          public void visit(Node node) {\n+            if (node.isName()) {\n+              Var var = fnScope.getVar(node.getString());\n+              if (var != null\n+                  && var.getParentNode() == argList\n+                  && !referenced.contains(var)\n+                  && !paramNames.contains(var.getName())) {\n+                argList.removeChild(var.getParentNode());\n+                compiler.reportCodeChange();\n+              }\n+            }\n+          }\n+        });\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}