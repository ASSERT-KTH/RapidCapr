{
    "patch": "            double[][] data = new double[m.getRowDimension()][m.getColumnDimension()];\n            try {\n                RealMatrix sqrt = dec.getSquareRoot();\n                data = sqrt.getData();\n            } catch (OutOfMemoryError e) {\n                // Increase the heap space and try again\n                int maxMemory = (int) Runtime.getRuntime().maxMemory();\n                int newMemory = maxMemory - (int) Math.pow(10, 9); // Subtract 1GB\n                System.setProperty(\"xmx\", Integer.toString(newMemory));\n                RealMatrix sqrt = dec.getSquareRoot();\n                data = sqrt.getData();\n            }\n            return MatrixUtils.createRealMatrix(data);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..72cfb79da 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,17 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+            double[][] data = new double[m.getRowDimension()][m.getColumnDimension()];\n+            try {\n+                RealMatrix sqrt = dec.getSquareRoot();\n+                data = sqrt.getData();\n+            } catch (OutOfMemoryError e) {\n+                // Increase the heap space and try again\n+                int maxMemory = (int) Runtime.getRuntime().maxMemory();\n+                int newMemory = maxMemory - (int) Math.pow(10, 9); // Subtract 1GB\n+                System.setProperty(\"xmx\", Integer.toString(newMemory));\n+                RealMatrix sqrt = dec.getSquareRoot();\n+                data = sqrt.getData();\n+            }\n+            return MatrixUtils.createRealMatrix(data);\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}