{
    "patch": "private String getRemainingJSDocLine() {\n  StringBuilder result = new StringBuilder(stream.getRemainingJSDocLine());\n  while (stream.hasMoreJSDocLines() && result.toString().contains(\"@type\") && !result.toString().contains(\"*/\")) { \n      result.append(stream.getRemainingJSDocLine());\n  }\n  return result.toString();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..3827ab5a 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,13 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+private String getRemainingJSDocLine() {\n+  StringBuilder result = new StringBuilder(stream.getRemainingJSDocLine());\n+  while (stream.hasMoreJSDocLines() && result.toString().contains(\"@type\") && !result.toString().contains(\"*/\")) { \n+      result.append(stream.getRemainingJSDocLine());\n   }\n+  return result.toString();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}