{
    "patch": "        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MockitoSession session = Mockito.mockitoSession().initMocks(mock).startMocking();\n        Mockito.doAnswer(invocation -> {\n            invocation.callRealMethod();\n            return null;\n        }).when(session).finishMocking();\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().spiedInstance(mock).defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n        ((Factory) mock).setCallbacks(new Callback[]{newFilter});",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..d44c16436 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,17 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MockitoSession session = Mockito.mockitoSession().initMocks(mock).startMocking();\n+        Mockito.doAnswer(invocation -> {\n+            invocation.callRealMethod();\n+            return null;\n+        }).when(session).finishMocking();\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().spiedInstance(mock).defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: lambda expressions are not supported in -source 1.5",
    "test_result": "ERROR"
}