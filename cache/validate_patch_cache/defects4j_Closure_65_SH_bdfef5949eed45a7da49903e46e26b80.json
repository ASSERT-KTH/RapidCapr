{
    "patch": "// escape special characters as necessary\nswitch (c) {\n  case '\\0': sb.append(\"\\\\0\"); break;\n  case '\\n': sb.append(\"\\\\n\"); break;\n  case '\\r': sb.append(\"\\\\r\"); break;\n  case '\\t': sb.append(\"\\\\t\"); break;\n  case '\\\"': sb.append(\"\\\\\\\"\"); break;\n  case '\\'': sb.append(\"\\\\'\"); break;\n  case '\\\\': sb.append(\"\\\\\\\\\"); break;\n  default:\n    // If we're given an outputCharsetEncoder, then check if the\n    //  character can be represented in this character set.",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 6117a89b..8064a434 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1012,7 +1012,18 @@ class CodeGenerator {\n     for (int i = 0; i < s.length(); i++) {\n       char c = s.charAt(i);\n       switch (c) {\n-        case '\\0': sb.append(\"\\\\0\"); break;\n+// escape special characters as necessary\n+switch (c) {\n+  case '\\0': sb.append(\"\\\\0\"); break;\n+  case '\\n': sb.append(\"\\\\n\"); break;\n+  case '\\r': sb.append(\"\\\\r\"); break;\n+  case '\\t': sb.append(\"\\\\t\"); break;\n+  case '\\\"': sb.append(\"\\\\\\\"\"); break;\n+  case '\\'': sb.append(\"\\\\'\"); break;\n+  case '\\\\': sb.append(\"\\\\\\\\\"); break;\n+  default:\n+    // If we're given an outputCharsetEncoder, then check if the\n+    //  character can be represented in this character set.\n         case '\\n': sb.append(\"\\\\n\"); break;\n         case '\\r': sb.append(\"\\\\r\"); break;\n         case '\\t': sb.append(\"\\\\t\"); break;",
    "result_reason": "error: case, default, or '}' expected",
    "test_result": "ERROR"
}