{
    "patch": "      Set<String> propertyNames = new HashSet<>();\n      for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {\n        String name = child.getString();\n        if (!propertyNames.add(name)) {\n          // Duplicate property name found.\n          compiler.report(JSError.make(\n              t.getSourceName(), child, DupProp.DUPLICATE_OBJECT_KEY, name));\n          continue;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..49d42f9d 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,14 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+      Set<String> propertyNames = new HashSet<>();\n+      for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {\n+        String name = child.getString();\n+        if (!propertyNames.add(name)) {\n+          // Duplicate property name found.\n+          compiler.report(JSError.make(\n+              t.getSourceName(), child, DupProp.DUPLICATE_OBJECT_KEY, name));\n+          continue;\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}