{
    "patch": "Iterable iterable = values.returnValueFor(Iterable.class);\nif (iterable != null) {\n    assertFalse(iterable.iterator().hasNext());\n} else {\n    assertFalse(false);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..c311c96eb 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,12 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+Iterable iterable = values.returnValueFor(Iterable.class);\n+if (iterable != null) {\n+    assertFalse(iterable.iterator().hasNext());\n+} else {\n+    assertFalse(false);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}