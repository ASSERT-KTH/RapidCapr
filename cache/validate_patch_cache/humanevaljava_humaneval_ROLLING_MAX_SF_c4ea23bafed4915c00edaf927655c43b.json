{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<>();\n    int n = numbers.size();\n    \n    for (int i = 0; i < n; i++) {\n        int max = numbers.get(i);\n        \n        for (int j = i + 1; j < Math.min(n, i + 4); j++) {\n            max = Math.max(max, numbers.get(j));\n        }\n        \n        result.add(max);\n    }\n    \n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..a59353c 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,20 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n-\n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<>();\n+    int n = numbers.size();\n+    \n+    for (int i = 0; i < n; i++) {\n+        int max = numbers.get(i);\n+        \n+        for (int j = i + 1; j < Math.min(n, i + 4); j++) {\n+            max = Math.max(max, numbers.get(j));\n         }\n-        return result;\n+        \n+        result.add(max);\n     }\n+    \n+    return result;\n+}\n }",
    "result_reason": "   TEST_ROLLING_MAX.test_1:24 arrays first differed at element [0]; expected:<4> but was:<1>",
    "test_result": "FAIL"
}