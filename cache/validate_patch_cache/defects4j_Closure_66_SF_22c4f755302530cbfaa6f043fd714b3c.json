{
    "patch": "public static double getTypedPercent(JsonStructure document) {\n    double totalCount = getCount(document, \"total_count\");\n    double typedCount = getCount(document, \"typed_count\");\n    return (typedCount / totalCount) * 100;\n}\n\nprivate static double getCount(JsonStructure document, String key) {\n    JsonObject json = (JsonObject) document;\n    return json.getJsonObject(\"data\")\n            .getJsonNumber(key)\n            .doubleValue();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..f06713a3 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JsonStructure document) {\n+    double totalCount = getCount(document, \"total_count\");\n+    double typedCount = getCount(document, \"typed_count\");\n+    return (typedCount / totalCount) * 100;\n+}\n+\n+private static double getCount(JsonStructure document, String key) {\n+    JsonObject json = (JsonObject) document;\n+    return json.getJsonObject(\"data\")\n+            .getJsonNumber(key)\n+            .doubleValue();\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}