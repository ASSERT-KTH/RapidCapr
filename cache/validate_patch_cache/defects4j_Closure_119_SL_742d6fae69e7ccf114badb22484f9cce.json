{
    "patch": "case Token.CATCH:\n  name = getVarName(n.getFirstChild());\n  if (!isGlobalNameReference(name, scope)) {\n    return;\n  }\n  handleSetFromLocal(module, scope, n, parent, name);\n  break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..c27f7add 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,13 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.CATCH:\n+  name = getVarName(n.getFirstChild());\n+  if (!isGlobalNameReference(name, scope)) {\n+    return;\n+  }\n+  handleSetFromLocal(module, scope, n, parent, name);\n+  break;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}