{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<Integer>();\n    Deque<Integer> window = new ArrayDeque<>();\n    \n    for (int i = 0; i < numbers.size(); i++) {\n        if (i >= window.size()) {\n            window.add(numbers.get(i));\n            \n            while (!window.isEmpty() && window.peekFirst() < numbers.get(i)) {\n                window.removeFirst();\n            }\n        } else {\n            if (window.peekFirst().equals(numbers.get(i - window.size()))) {\n                window.removeFirst();\n            }\n            \n            while (!window.isEmpty() && window.peekFirst() < numbers.get(i)) {\n                window.removeFirst();\n            }\n\n            window.add(numbers.get(i));\n        }\n        \n        result.add(window.peekFirst());\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..4e433a1 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,31 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<Integer>();\n+    Deque<Integer> window = new ArrayDeque<>();\n+    \n+    for (int i = 0; i < numbers.size(); i++) {\n+        if (i >= window.size()) {\n+            window.add(numbers.get(i));\n+            \n+            while (!window.isEmpty() && window.peekFirst() < numbers.get(i)) {\n+                window.removeFirst();\n+            }\n+        } else {\n+            if (window.peekFirst().equals(numbers.get(i - window.size()))) {\n+                window.removeFirst();\n+            }\n+            \n+            while (!window.isEmpty() && window.peekFirst() < numbers.get(i)) {\n+                window.removeFirst();\n+            }\n \n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n+            window.add(numbers.get(i));\n         }\n-        return result;\n+        \n+        result.add(window.peekFirst());\n     }\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-ROLLING_MAX/src/main/java/humaneval/buggy/ROLLING_MAX.java:[9,5] cannot find symbol",
    "test_result": "ERROR"
}