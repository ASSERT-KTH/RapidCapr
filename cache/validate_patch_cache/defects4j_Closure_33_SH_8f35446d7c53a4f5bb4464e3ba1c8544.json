{
    "patch": "      if (!getScope().isDeclared(prop, false)) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        ObjectType inferredObj = getNativeObjectType(JSTypeNative.OBJECT_TYPE)\n            .withProperty(prop, propType == null ? getNativeType(JSTypeNative.NO_TYPE) : propType);\n        defineDeclaredPropertyOnThisClass(prop, inferredObj, null, false);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..efc0c8c0 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,12 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+      if (!getScope().isDeclared(prop, false)) {\n+        JSType propType = constraintObj.getPropertyType(prop);\n+        ObjectType inferredObj = getNativeObjectType(JSTypeNative.OBJECT_TYPE)\n+            .withProperty(prop, propType == null ? getNativeType(JSTypeNative.NO_TYPE) : propType);\n+        defineDeclaredPropertyOnThisClass(prop, inferredObj, null, false);\n+      }\n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}