{
    "patch": "        boolean[] arr = new boolean[d.length];\n        for(int i = 0; i < d.length; i++) {\n            try {\n                arr[i] = d.getClass().getMethod(\"get\".concat(String.valueOf(i+1))).invoke(d) != null;\n            } catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {\n                arr[i] = false;\n            }\n        }\n        Context rhsContext = arr[0] ? Context.PRIMARY : Context.SECONDARY;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}