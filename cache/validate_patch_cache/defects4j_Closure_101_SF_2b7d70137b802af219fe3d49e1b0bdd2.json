{
    "patch": "options.setProcessCommonJSModules(flags.process_common_js_modules);\noptions.setProcessCommonJSModulesPrimitives(flags.process_closure_primitives);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex bdf55921..80ddc23e 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -416,27 +416,8 @@ public class CommandLineRunner extends\n   }\n \n   @Override\n-  protected CompilerOptions createOptions() {\n-    CompilerOptions options = new CompilerOptions();\n-    options.setCodingConvention(new ClosureCodingConvention());\n-    CompilationLevel level = flags.compilation_level;\n-    level.setOptionsForCompilationLevel(options);\n-    if (flags.debug) {\n-      level.setDebugOptionsForCompilationLevel(options);\n-    }\n-\n-    WarningLevel wLevel = flags.warning_level;\n-    wLevel.setOptionsForWarningLevel(options);\n-    for (FormattingOption formattingOption : flags.formatting) {\n-      formattingOption.applyToOptions(options);\n-    }\n-    if (flags.process_closure_primitives) {\n-      options.closurePass = true;\n-    }\n-\n-    initOptionsFromFlags(options);\n-    return options;\n-  }\n+options.setProcessCommonJSModules(flags.process_common_js_modules);\n+options.setProcessCommonJSModulesPrimitives(flags.process_closure_primitives);\n \n   @Override\n   protected Compiler createCompiler() {",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}