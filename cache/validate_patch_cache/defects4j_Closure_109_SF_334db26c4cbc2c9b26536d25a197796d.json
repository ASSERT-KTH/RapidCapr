{
    "patch": "  private Node parseContextTypeExpression(JsDocToken token) {\n    try {\n        // attempt to parse as a type expression\n        return parseTypeExpression(token);\n    } catch (ParseException e) {\n        // if parsing as a type expression fails, attempt to parse as a type name\n        return parseTypeName(token);\n    }\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..88506ecf 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,13 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+    try {\n+        // attempt to parse as a type expression\n+        return parseTypeExpression(token);\n+    } catch (ParseException e) {\n+        // if parsing as a type expression fails, attempt to parse as a type name\n+        return parseTypeName(token);\n+    }\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}