{
    "patch": "int pos = 0;\nint len = input.length();\nwhile (pos < len) {\n    int consumed = translate(input, pos, out);\n    if (consumed == 0) {\n        int codePoint = Character.codePointAt(input, pos);\n        int codePointLen = Character.charCount(codePoint);\n        out.write(Character.toChars(codePoint));\n        pos += codePointLen;\n        continue;\n    }\n    pos += consumed;\n    if (pos < len && Character.isHighSurrogate(input.charAt(pos - 1))) {\n        int remainingChars = len - pos;\n        if (remainingChars > 1 && Character.isLowSurrogate(input.charAt(pos))) {\n            int codePoint = Character.toCodePoint(input.charAt(pos - 1), input.charAt(pos));\n            int codePointLen = Character.charCount(codePoint);\n            out.write(Character.toChars(codePoint));\n            pos += codePointLen;\n        } else {\n            out.write(input.charAt(pos - 1));\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..726e3c5e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,30 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+int pos = 0;\n+int len = input.length();\n+while (pos < len) {\n+    int consumed = translate(input, pos, out);\n+    if (consumed == 0) {\n+        int codePoint = Character.codePointAt(input, pos);\n+        int codePointLen = Character.charCount(codePoint);\n+        out.write(Character.toChars(codePoint));\n+        pos += codePointLen;\n+        continue;\n+    }\n+    pos += consumed;\n+    if (pos < len && Character.isHighSurrogate(input.charAt(pos - 1))) {\n+        int remainingChars = len - pos;\n+        if (remainingChars > 1 && Character.isLowSurrogate(input.charAt(pos))) {\n+            int codePoint = Character.toCodePoint(input.charAt(pos - 1), input.charAt(pos));\n+            int codePointLen = Character.charCount(codePoint);\n+            out.write(Character.toChars(codePoint));\n+            pos += codePointLen;\n+        } else {\n+            out.write(input.charAt(pos - 1));\n+        }\n+    }\n+}\n             }\n         }\n     }",
    "result_reason": "error: variable pos is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}