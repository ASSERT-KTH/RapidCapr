{
    "patch": "public static double[] find_closest_elements(double[] numbers) {\n    if (numbers == null || numbers.length < 2) {\n        throw new IllegalArgumentException(\"At least two numbers are needed to find closest elements\");\n    }\n\n    Arrays.sort(numbers);\n\n    double minDiff = Double.POSITIVE_INFINITY;\n    double[] result = { numbers[0], numbers[1] };\n\n    for (int i = 1; i < numbers.length - 1; i++) {\n        double diff1 = Math.abs(numbers[i] - numbers[i - 1]);\n        double diff2 = Math.abs(numbers[i + 1] - numbers[i]);\n\n        if (diff1 < minDiff) {\n            minDiff = diff1;\n            result[0] = numbers[i - 1];\n            result[1] = numbers[i];\n        }\n\n        if (diff2 < minDiff) {\n            minDiff = diff2;\n            result[0] = numbers[i];\n            result[1] = numbers[i + 1];\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\nindex 72388af..01013f3 100644\n--- a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n@@ -1,25 +1,33 @@\n package humaneval.buggy;\n \n public class FIND_CLOSEST_ELEMENTS {\n-    public static double[] find_closest_elements(double[] numbers) {\n-        double[] result = new double[2];\n+public static double[] find_closest_elements(double[] numbers) {\n+    if (numbers == null || numbers.length < 2) {\n+        throw new IllegalArgumentException(\"At least two numbers are needed to find closest elements\");\n+    }\n+\n+    Arrays.sort(numbers);\n+\n+    double minDiff = Double.POSITIVE_INFINITY;\n+    double[] result = { numbers[0], numbers[1] };\n+\n+    for (int i = 1; i < numbers.length - 1; i++) {\n+        double diff1 = Math.abs(numbers[i] - numbers[i - 1]);\n+        double diff2 = Math.abs(numbers[i + 1] - numbers[i]);\n \n-        double distance = Double.MAX_VALUE;\n-        for (int i = 0; i < numbers.length; i += 1){\n-            for (int j = 0; j < numbers.length; j += 1){\n-                double new_distance = Math.abs(numbers[i] - numbers[j]);\n-                if (new_distance < distance){\n-                    distance = new_distance;\n-                    if (numbers[i] < numbers[j]){\n-                        result[0] = numbers[i];\n-                        result[1] = numbers[j];\n-                    } else{\n-                        result[0] = numbers[j];\n-                        result[1] = numbers[i];\n-                    }\n-                }\n-            }\n+        if (diff1 < minDiff) {\n+            minDiff = diff1;\n+            result[0] = numbers[i - 1];\n+            result[1] = numbers[i];\n+        }\n+\n+        if (diff2 < minDiff) {\n+            minDiff = diff2;\n+            result[0] = numbers[i];\n+            result[1] = numbers[i + 1];\n         }\n-        return result;\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-FIND_CLOSEST_ELEMENTS/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java:[9,5] cannot find symbol",
    "test_result": "ERROR"
}