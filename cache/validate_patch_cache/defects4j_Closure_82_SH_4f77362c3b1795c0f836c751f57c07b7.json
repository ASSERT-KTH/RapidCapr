{
    "patch": "    boolean noType = isNoType();\n    boolean noObjectType = isNoObjectType();\n    boolean noResolvedType = isNoResolvedType();\n    boolean isNullType = isNullType();\n    boolean isUnionType = isUnionType();\n    boolean isVoidType = isVoidType();\n\n\n    if (noType && !isNullType && !isUnionType()) {\n        return true;\n    }\n    if (noObjectType || noResolvedType) {\n        return true;\n    }\n    if (isNullType && !isFunctionType() && !isUnionType) {\n        return true;\n    }\n    return isVoidType && !isNullType && !isUnionType;",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..68e7703e 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,24 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+    boolean noType = isNoType();\n+    boolean noObjectType = isNoObjectType();\n+    boolean noResolvedType = isNoResolvedType();\n+    boolean isNullType = isNullType();\n+    boolean isUnionType = isUnionType();\n+    boolean isVoidType = isVoidType();\n+\n+\n+    if (noType && !isNullType && !isUnionType()) {\n+        return true;\n+    }\n+    if (noObjectType || noResolvedType) {\n+        return true;\n+    }\n+    if (isNullType && !isFunctionType() && !isUnionType) {\n+        return true;\n+    }\n+    return isVoidType && !isNullType && !isUnionType;\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}