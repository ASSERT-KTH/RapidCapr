{
    "patch": "import org.apache.commons.math3.util.Precision;\n\npublic Line revert() {\n    final Vector3D zero = Vector3D.ZERO;\n    final Vector3D revertedDirection = direction.negate();\n    final Line reverted = new Line(zero, revertedDirection);\n    final double[] expected = {zero.getX(), zero.getY(), zero.getZ(), revertedDirection.getX(), revertedDirection.getY(), revertedDirection.getZ()};\n    final double[] actual = {origin.getX(), origin.getY(), origin.getZ(), direction.getX(), direction.getY(), direction.getZ()};\n    assertTrue(Precision.equals(expected, actual, Precision.EPSILON));\n    return reverted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..d0233650d 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,17 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+import org.apache.commons.math3.util.Precision;\n+\n+public Line revert() {\n+    final Vector3D zero = Vector3D.ZERO;\n+    final Vector3D revertedDirection = direction.negate();\n+    final Line reverted = new Line(zero, revertedDirection);\n+    final double[] expected = {zero.getX(), zero.getY(), zero.getZ(), revertedDirection.getX(), revertedDirection.getY(), revertedDirection.getZ()};\n+    final double[] actual = {origin.getX(), origin.getY(), origin.getZ(), direction.getX(), direction.getY(), direction.getZ()};\n+    assertTrue(Precision.equals(expected, actual, Precision.EPSILON));\n+    return reverted;\n+}\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}