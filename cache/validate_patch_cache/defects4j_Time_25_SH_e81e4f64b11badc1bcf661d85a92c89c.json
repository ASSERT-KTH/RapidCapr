{
    "patch": "                } else if ((offsetLocal - getOffset(nextLocal)) < 0) {\n                    return offsetLocal;\n                }\n            } else if ((offsetLocal - offsetAdjusted) > 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                // if the same transition is found, cannot be sure\n                if (nextLocal == nextAdjusted) {\n                    return offsetAdjusted;\n                }\n                // if crossing forward, then went too far\n                if (instantAdjusted + offsetLocal < nextLocal) {\n                    return offsetLocal;\n                }\n                // if crossing backward, then not yet up to\n                if (instantAdjusted + offsetAdjusted >= nextLocal) {\n                    return offsetAdjusted;\n                }\n                // now we are near the transition and have to actually work\n                return getOffset(nextLocal - offsetAdjusted);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3ecb7bed 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,26 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                } else if ((offsetLocal - getOffset(nextLocal)) < 0) {\n+                    return offsetLocal;\n+                }\n+            } else if ((offsetLocal - offsetAdjusted) > 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                // if the same transition is found, cannot be sure\n+                if (nextLocal == nextAdjusted) {\n+                    return offsetAdjusted;\n+                }\n+                // if crossing forward, then went too far\n+                if (instantAdjusted + offsetLocal < nextLocal) {\n+                    return offsetLocal;\n+                }\n+                // if crossing backward, then not yet up to\n+                if (instantAdjusted + offsetAdjusted >= nextLocal) {\n+                    return offsetAdjusted;\n+                }\n+                // now we are near the transition and have to actually work\n+                return getOffset(nextLocal - offsetAdjusted);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}