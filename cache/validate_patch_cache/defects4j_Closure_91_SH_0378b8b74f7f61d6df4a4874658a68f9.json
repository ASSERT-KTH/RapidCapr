{
    "patch": "            // JSX element or child function\n            pType == Token.CALL ||\n            // object literal keys\n            pType == Token.STRING ||\n            pType == Token.NUMBER)) {\n        return false;\n      }\n\n      // Don't traverse functions that are getting lent to a prototype.\n      Node value = parent.getLastChild();\n      if (NodeUtil.isGet(parent) && NodeUtil.isGet(value)) {\n        Node valueName = value.getLastChild();\n        if (valueName != null && \"prototype\".equals(valueName.getString())) {\n          return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..f9862edc 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,20 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+            // JSX element or child function\n+            pType == Token.CALL ||\n+            // object literal keys\n+            pType == Token.STRING ||\n+            pType == Token.NUMBER)) {\n+        return false;\n+      }\n+\n+      // Don't traverse functions that are getting lent to a prototype.\n+      Node value = parent.getLastChild();\n+      if (NodeUtil.isGet(parent) && NodeUtil.isGet(value)) {\n+        Node valueName = value.getLastChild();\n+        if (valueName != null && \"prototype\".equals(valueName.getString())) {\n+          return false;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}