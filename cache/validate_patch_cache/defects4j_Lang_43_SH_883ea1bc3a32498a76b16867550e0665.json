{
    "patch": "            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n                next(pos);\n                return appendTo == null ? null : appendTo.append(QUOTE);\n            } else if (c[pos.getIndex()] == QUOTE) {\n                if (appendTo == null) {\n                    appendTo = new StringBuffer();\n                }\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n                next(pos);\n                return appendQuotedString(pattern, pos, appendTo, true);\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..af015947 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,17 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n+                next(pos);\n+                return appendTo == null ? null : appendTo.append(QUOTE);\n+            } else if (c[pos.getIndex()] == QUOTE) {\n+                if (appendTo == null) {\n+                    appendTo = new StringBuffer();\n+                }\n+                appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n+                next(pos);\n+                return appendQuotedString(pattern, pos, appendTo, true);\n+            }\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}