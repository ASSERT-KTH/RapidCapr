{
    "patch": "public static double median(int[] list) {\n    if (list == null || list.length == 0) {\n        throw new IllegalArgumentException(\"List cannot be null or empty\");\n    }\n    \n    Arrays.sort(list);\n    int middleIndex = list.length / 2;\n    \n    if (list.length % 2 == 0) {\n        double medianSum = (double) list[middleIndex - 1] + list[middleIndex];\n        return medianSum / 2;\n    } else {\n        return (double) list[middleIndex];\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MEDIAN.java b/src/main/java/humaneval/buggy/MEDIAN.java\nindex 6ba9604..656a8b3 100644\n--- a/src/main/java/humaneval/buggy/MEDIAN.java\n+++ b/src/main/java/humaneval/buggy/MEDIAN.java\n@@ -9,13 +9,19 @@ import java.util.Arrays;\n 15.0 */\n \n public class MEDIAN {\n-    public static double median(int[] list) {\n-        Arrays.sort(list);\n-\n-        if (list.length % 2 == 1) {\n-            return list[(int) (list.length / 2)];\n-        } else {\n-            return list[(int) (list.length / 2)] + list[(int) (list.length / 2) + 1] / 2;\n-        }\n+public static double median(int[] list) {\n+    if (list == null || list.length == 0) {\n+        throw new IllegalArgumentException(\"List cannot be null or empty\");\n+    }\n+    \n+    Arrays.sort(list);\n+    int middleIndex = list.length / 2;\n+    \n+    if (list.length % 2 == 0) {\n+        double medianSum = (double) list[middleIndex - 1] + list[middleIndex];\n+        return medianSum / 2;\n+    } else {\n+        return (double) list[middleIndex];\n     }\n }\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}