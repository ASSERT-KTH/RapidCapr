{
    "patch": "            if (offsetLocal != offsetAdjusted) {\n                int diff = offsetAdjusted - offsetLocal;\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetLocal + (diff < 0 ? 1 : -1));\n                if (nextLocal != nextAdjusted) {\n                    int offsetNext = getOffset(nextAdjusted - (diff < 0 ? 1 : 0));\n                    if (offsetNext == offsetLocal) {\n                        return offsetLocal;\n                    }\n                    return offsetNext;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..ccd8fe73 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal != offsetAdjusted) {\n+                int diff = offsetAdjusted - offsetLocal;\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetLocal + (diff < 0 ? 1 : -1));\n+                if (nextLocal != nextAdjusted) {\n+                    int offsetNext = getOffset(nextAdjusted - (diff < 0 ? 1 : 0));\n+                    if (offsetNext == offsetLocal) {\n+                        return offsetLocal;\n+                    }\n+                    return offsetNext;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}