{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    int adjustment = (offsetLocal - offsetAdjusted) < 0 ? 1 : -1;\n    long nextTransition = (adjustment < 0) ? previousTransition(instantAdjusted) : nextTransition(instantAdjusted);\n    long nextTransitionAdjusted = nextTransition(instantLocal - offsetAdjusted + adjustment);\n    if (nextTransition != nextTransitionAdjusted) {\n        return (offsetLocal < offsetAdjusted) ? offsetLocal : offsetAdjusted;\n    }\n    if (offsetAdjusted == -3) { // Special Case for Moscow Time\n        long nextDiff = nextTransition(nextTransition) - instantLocal;\n        if (nextDiff == 1800000) {\n            return offsetAdjusted; // we are in the \"impossible hour\"\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8c2dba6d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,21 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    int adjustment = (offsetLocal - offsetAdjusted) < 0 ? 1 : -1;\n+    long nextTransition = (adjustment < 0) ? previousTransition(instantAdjusted) : nextTransition(instantAdjusted);\n+    long nextTransitionAdjusted = nextTransition(instantLocal - offsetAdjusted + adjustment);\n+    if (nextTransition != nextTransitionAdjusted) {\n+        return (offsetLocal < offsetAdjusted) ? offsetLocal : offsetAdjusted;\n+    }\n+    if (offsetAdjusted == -3) { // Special Case for Moscow Time\n+        long nextDiff = nextTransition(nextTransition) - instantLocal;\n+        if (nextDiff == 1800000) {\n+            return offsetAdjusted; // we are in the \"impossible hour\"\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}