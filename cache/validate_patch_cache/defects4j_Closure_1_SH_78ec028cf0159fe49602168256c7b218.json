{
    "patch": "    LinkedHashSet<Node> referencedSet = new LinkedHashSet<>(referenced);\n    // Discard the arguments that are referenced\n    for (Node arg : argList.children()) {\n      if (!referencedSet.contains(fnScope.getVar(arg.getString()))) {\n        arg.detach();\n        compiler.reportCodeChange();\n      } else {\n        referencedSet.remove(fnScope.getVar(arg.getString()));\n      }\n    }\n\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n    if (modifyCallers) {\n      callSiteOptimizer.optimize(fnScope, referenced);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..a5b6c9db 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,20 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    LinkedHashSet<Node> referencedSet = new LinkedHashSet<>(referenced);\n+    // Discard the arguments that are referenced\n+    for (Node arg : argList.children()) {\n+      if (!referencedSet.contains(fnScope.getVar(arg.getString()))) {\n+        arg.detach();\n+        compiler.reportCodeChange();\n+      } else {\n+        referencedSet.remove(fnScope.getVar(arg.getString()));\n+      }\n+    }\n+\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+    if (modifyCallers) {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}