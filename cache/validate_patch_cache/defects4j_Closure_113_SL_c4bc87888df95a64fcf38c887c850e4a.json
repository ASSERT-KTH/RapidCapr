{
    "patch": "parent.detachFromParent();\ncompiler.reportCodeChange();\nif (provided == null) {\n  if (!ns.equals(\"module\") && !ns.startsWith(\"exports.\")) {\n    unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n  }\n} else {\n  if (!provided.isExplicitlyProvided()) {\n    compiler.report(\n        t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n            provided.explicitModule.getName(),\n            t.getModule().getName()));\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..753066dc 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,20 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+parent.detachFromParent();\n+compiler.reportCodeChange();\n+if (provided == null) {\n+  if (!ns.equals(\"module\") && !ns.startsWith(\"exports.\")) {\n+    unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n+  }\n+} else {\n+  if (!provided.isExplicitlyProvided()) {\n+    compiler.report(\n+        t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n+            provided.explicitModule.getName(),\n+            t.getModule().getName()));\n+  }\n+}\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}