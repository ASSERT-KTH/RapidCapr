{
    "patch": "                ArrayList<String> groups = new ArrayList<String>();\n                for (int i = 0; i < s.length(); i += 3){\n                    if (i + 3 > s.length()){\n                        groups.add(s.substring(i));\n                    }else {\n                        groups.add(s.substring(i, i + 3));\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..28771c4 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -8,7 +8,14 @@ public class DECODE_CYCLIC {\n             String encode_cyclic(String s) {\n                 ArrayList<String> groups = new ArrayList<String>();\n \n+                ArrayList<String> groups = new ArrayList<String>();\n                 for (int i = 0; i < s.length(); i += 3){\n+                    if (i + 3 > s.length()){\n+                        groups.add(s.substring(i));\n+                    }else {\n+                        groups.add(s.substring(i, i + 3));\n+                    }\n+                }\n                     groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n                 }\n                 int remain = s.length() % 3;",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[24,17] illegal start of type",
    "test_result": "ERROR"
}