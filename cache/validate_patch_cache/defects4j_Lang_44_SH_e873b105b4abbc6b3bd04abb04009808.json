{
    "patch": "if (val == null || val.isBlank()) {\n    return null;\n}\n//Checking if input consists only of digits, '-' or '.'\nif (!val.matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {\n    throw new NumberFormatException(val + \" is not a valid number.\");\n}\n//Replacing leading '+' signs\nval = val.replaceFirst(\"^\\\\+\",\"\");\n//Checking if input starts with '-'\nif (val.startsWith(\"-\")) {\n    if (val.length() == 1) {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    } else if (val.charAt(1) == '.') {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    } else if (val.length() == 2 && Character.isDigit(val.charAt(1))) {\n        return createInteger(val);\n    }        \n} else {\n    if (val.charAt(0) == '.') {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    } else if (val.charAt(0) == '+') {\n        val = val.substring(1);\n    } else if (val.length() == 1) {\n        return createInteger(val);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..d293754e 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,33 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val == null || val.isBlank()) {\n+    return null;\n+}\n+//Checking if input consists only of digits, '-' or '.'\n+if (!val.matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {\n+    throw new NumberFormatException(val + \" is not a valid number.\");\n+}\n+//Replacing leading '+' signs\n+val = val.replaceFirst(\"^\\\\+\",\"\");\n+//Checking if input starts with '-'\n+if (val.startsWith(\"-\")) {\n+    if (val.length() == 1) {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    } else if (val.charAt(1) == '.') {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    } else if (val.length() == 2 && Character.isDigit(val.charAt(1))) {\n+        return createInteger(val);\n+    }        \n+} else {\n+    if (val.charAt(0) == '.') {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    } else if (val.charAt(0) == '+') {\n+        val = val.substring(1);\n+    } else if (val.length() == 1) {\n+        return createInteger(val);\n+    }\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}