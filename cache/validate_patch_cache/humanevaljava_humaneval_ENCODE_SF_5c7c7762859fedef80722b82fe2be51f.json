{
    "patch": "public static String encode(String message) {\n    StringBuilder sb = new StringBuilder();\n    for (char c : message.toCharArray()) {\n        if (!Character.isLetter(c)) {\n            sb.append(c);\n            continue;\n        }\n        if (Character.isUpperCase(c)) {\n            c = Character.toLowerCase(c);\n        } else {\n            c = Character.toUpperCase(c);\n        }\n        if (\"aeiou\".indexOf(c) != -1) {\n            int asciiCode = (int) c + 2;\n            c = (char) (asciiCode > 122 ? asciiCode - 26 : asciiCode);\n        }\n        sb.append(c);\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ENCODE.java b/src/main/java/humaneval/buggy/ENCODE.java\nindex 6fe264c..105a011 100644\n--- a/src/main/java/humaneval/buggy/ENCODE.java\n+++ b/src/main/java/humaneval/buggy/ENCODE.java\n@@ -13,21 +13,24 @@ package humaneval.buggy;\n // 'tHKS KS C MGSSCGG'\n \n public class ENCODE {\n-    public static String encode(String message) {\n-        StringBuilder sb = new StringBuilder();\n-        for (char c : message.toCharArray()) {\n-            if (Character.isUpperCase(c)) {\n-                c = Character.toLowerCase(c);\n-            }\n-            if (Character.isLowerCase(c)) {\n-                c = Character.toUpperCase(c);\n-            }\n-            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O'\n-                    || c == 'U') {\n-                c = (char) ((int) c + 2);\n-            }\n+public static String encode(String message) {\n+    StringBuilder sb = new StringBuilder();\n+    for (char c : message.toCharArray()) {\n+        if (!Character.isLetter(c)) {\n             sb.append(c);\n+            continue;\n         }\n-        return sb.toString();\n+        if (Character.isUpperCase(c)) {\n+            c = Character.toLowerCase(c);\n+        } else {\n+            c = Character.toUpperCase(c);\n+        }\n+        if (\"aeiou\".indexOf(c) != -1) {\n+            int asciiCode = (int) c + 2;\n+            c = (char) (asciiCode > 122 ? asciiCode - 26 : asciiCode);\n+        }\n+        sb.append(c);\n     }\n+    return sb.toString();\n+}\n }",
    "result_reason": "   TEST_ENCODE.test_1:15 expected:<m[UDASI]R> but was:<m[WDCSK]R>",
    "test_result": "FAIL"
}