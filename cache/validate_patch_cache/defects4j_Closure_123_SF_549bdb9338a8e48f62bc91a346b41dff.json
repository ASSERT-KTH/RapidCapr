{
    "patch": "public static String fixCode(String code) {\n    String pattern = \"(?<!\\\\w)for\\\\s*\\\\(((?!;).)*)(\\\\s+in\\\\s+\\\\w+\\\\s*(\\\\.\\\\w+)?)(.*;.*;.*\\\\))(.*)\";\n    Pattern r = Pattern.compile(pattern);\n    Matcher m = r.matcher(code);\n    if (m.find()) {\n        String expr = m.group(1);\n        String var = m.group(3);\n        String stmt = m.group(4);\n        stmt = stmt.replace(\"in \", \":\");\n        code = m.replaceFirst(\"for(\" + expr + var + stmt + \")\" + m.group(5));\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..dd5de4e8 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,19 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String pattern = \"(?<!\\\\w)for\\\\s*\\\\(((?!;).)*)(\\\\s+in\\\\s+\\\\w+\\\\s*(\\\\.\\\\w+)?)(.*;.*;.*\\\\))(.*)\";\n+    Pattern r = Pattern.compile(pattern);\n+    Matcher m = r.matcher(code);\n+    if (m.find()) {\n+        String expr = m.group(1);\n+        String var = m.group(3);\n+        String stmt = m.group(4);\n+        stmt = stmt.replace(\"in \", \":\");\n+        code = m.replaceFirst(\"for(\" + expr + var + stmt + \")\" + m.group(5));\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}