{
    "patch": "          // Make sure the function containing the assignment is not nested.\n          BasicBlock currentBlock = ref.getBasicBlock();\n          while (currentBlock != null) {\n            if (currentBlock.isFunction) {\n              return false;\n            }\n            currentBlock = currentBlock.getParent();\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..fe30cd5e 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          // Make sure the function containing the assignment is not nested.\n+          BasicBlock currentBlock = ref.getBasicBlock();\n+          while (currentBlock != null) {\n+            if (currentBlock.isFunction) {\n+              return false;\n+            }\n+            currentBlock = currentBlock.getParent();\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}