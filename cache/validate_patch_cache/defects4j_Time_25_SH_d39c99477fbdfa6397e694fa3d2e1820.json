{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    long nextAdjustedLocal = nextAdjusted - offsetAdjusted;\n                    long diff = nextAdjustedLocal - instantLocal;\n                    // if time is before gap, move to end of gap\n                    if (diff < 0) {\n                        diff = -diff;\n                    } else if (diff > 1) {\n                        // if time is after overlap after gap, move to end of overlap\n                        long nextOverlap = previousTransition(nextAdjustedLocal - 1);\n                        if (nextOverlap > instantAdjusted) {\n                            // use negative diff to move forward\n                            diff = nextAdjustedLocal - nextOverlap;\n                            diff = -diff;\n                        }\n                    }\n                    instantLocal += diff;\n                    offsetAdjusted = getOffset(instantLocal);\n                    if (offsetLocal != offsetAdjusted) {\n                        if ((offsetLocal - offsetAdjusted) < 0) {\n                            long nextLocal2 = nextTransition(instantLocal);\n                            long nextAdjusted2 = nextTransition(instantLocal - offsetAdjusted);\n                            if (nextLocal2 != nextAdjusted2) {\n                                return offsetLocal;\n                            }\n                        }\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..4ce59089 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,37 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    long nextAdjustedLocal = nextAdjusted - offsetAdjusted;\n+                    long diff = nextAdjustedLocal - instantLocal;\n+                    // if time is before gap, move to end of gap\n+                    if (diff < 0) {\n+                        diff = -diff;\n+                    } else if (diff > 1) {\n+                        // if time is after overlap after gap, move to end of overlap\n+                        long nextOverlap = previousTransition(nextAdjustedLocal - 1);\n+                        if (nextOverlap > instantAdjusted) {\n+                            // use negative diff to move forward\n+                            diff = nextAdjustedLocal - nextOverlap;\n+                            diff = -diff;\n+                        }\n+                    }\n+                    instantLocal += diff;\n+                    offsetAdjusted = getOffset(instantLocal);\n+                    if (offsetLocal != offsetAdjusted) {\n+                        if ((offsetLocal - offsetAdjusted) < 0) {\n+                            long nextLocal2 = nextTransition(instantLocal);\n+                            long nextAdjusted2 = nextTransition(instantLocal - offsetAdjusted);\n+                            if (nextLocal2 != nextAdjusted2) {\n+                                return offsetLocal;\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable offsetAdjusted",
    "test_result": "ERROR"
}