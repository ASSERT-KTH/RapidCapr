{
    "patch": "static void runOnFunctionBody(Node root) {\n  NodeTraversal.Callback cb = new MinimizeExitPointsCallback();\n  NodeTraversal.traverseEs6(root, cb);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineObjectLiterals.java b/src/com/google/javascript/jscomp/InlineObjectLiterals.java\nindex 2b85d84f..bd4e62b6 100644\n--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java\n+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java\n@@ -173,6 +173,10 @@ class InlineObjectLiterals implements CompilerPass {\n \n           // Deleting a property has different semantics from deleting\n           // a variable, so deleted properties should not be inlined.\n+static void runOnFunctionBody(Node root) {\n+  NodeTraversal.Callback cb = new MinimizeExitPointsCallback();\n+  NodeTraversal.traverseEs6(root, cb);\n+}\n \n           // NOTE(nicksantos): This pass's object-splitting algorithm has\n           // a blind spot. It assumes that if a property isn't defined on an",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}