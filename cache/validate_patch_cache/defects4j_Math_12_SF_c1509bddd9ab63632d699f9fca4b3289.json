{
    "patch": "import java.util.Random;\n\npublic class Distribution {\n    private final Random rand;\n\n    public Distribution() {\n        rand = new Random();\n    }\n\n    public Distribution(Random rand) {\n        this.rand = rand;\n    }\n\n    public double[] sample(int n) {\n        double[] samples = new double[n];\n\n        for (int i = 0; i < n; i++) {\n            samples[i] = rand.nextDouble();\n        }\n\n        return samples;\n    }\n\n    public static double[] mean(Distribution dist, int nSamples, int nMeans) {\n        double[] means = new double[nMeans];\n\n        for (int i = 0; i < nMeans; i++) {\n            double[] samples = dist.sample(nSamples);\n            means[i] = mean(samples);\n        }\n\n        return means;\n    }\n\n    public static double[] meanAndStdDev(Distribution dist, int nSamples, int nMeans) {\n        double[] means = new double[nMeans];\n        double[] stdDevs = new double[nMeans];\n\n        for (int i = 0; i < nMeans; i++) {\n            double[] samples = dist.sample(nSamples);\n            means[i] = mean(samples);\n            stdDevs[i] = stdDev(samples, means[i]);\n        }\n\n        return new double[]{mean(means), mean(stdDevs)};\n    }\n\n    private static double mean(double[] arr) {\n        double sum = 0.0;\n\n        for (double elem : arr) {\n            sum += elem;\n        }\n\n        return sum / arr.length;\n    }\n\n    private static double stdDev(double[] arr, double mean) {\n        double sum = 0.0;\n\n        for (double elem : arr) {\n            sum += Math.pow(elem - mean, 2);\n        }\n\n        return Math.sqrt(sum / arr.length);\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}