{
    "patch": "import java.nio.charset.StandardCharsets;\nimport java.nio.charset.Charset;\n\npublic class CharsetDetector {\n   \n   public static Charset guessEncoding(byte[] bytes) {\n       \n      Charset charset = StandardCharsets.UTF_8;\n      if (bytes.length > 2 && bytes[0] == (byte)0xff && bytes[1] == (byte)0xfe) {\n          charset = StandardCharsets.UTF_16LE;\n      } else if (bytes.length > 2 && bytes[0] == (byte)0xfe && bytes[1] == (byte)0xff) {\n          charset = StandardCharsets.UTF_16BE;\n      } else if (bytes.length > 3 && bytes[0] == (byte)0xef && bytes[1] == (byte)0xbb && bytes[2] == (byte)0xbf) {\n          charset = StandardCharsets.UTF_8;\n      }\n      \n      return charset;\n   }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..eb9f14da 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,25 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.nio.charset.StandardCharsets;\n+import java.nio.charset.Charset;\n+\n+public class CharsetDetector {\n+   \n+   public static Charset guessEncoding(byte[] bytes) {\n+       \n+      Charset charset = StandardCharsets.UTF_8;\n+      if (bytes.length > 2 && bytes[0] == (byte)0xff && bytes[1] == (byte)0xfe) {\n+          charset = StandardCharsets.UTF_16LE;\n+      } else if (bytes.length > 2 && bytes[0] == (byte)0xfe && bytes[1] == (byte)0xff) {\n+          charset = StandardCharsets.UTF_16BE;\n+      } else if (bytes.length > 3 && bytes[0] == (byte)0xef && bytes[1] == (byte)0xbb && bytes[2] == (byte)0xbf) {\n+          charset = StandardCharsets.UTF_8;\n+      }\n+      \n+      return charset;\n+   }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}