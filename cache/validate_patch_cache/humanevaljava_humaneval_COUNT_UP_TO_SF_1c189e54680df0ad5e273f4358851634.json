{
    "patch": "    public static List<Integer> count_up_to(int n) {\n        List<Integer> primes = new ArrayList<Integer>();\n\n        for (int i = 2; i <= n; i++){\n            boolean is_prime = true;\n\n            // checking if the number is prime\n            for (int j = 2; j <= i / 2; j++){\n                if (i % j == 0) {\n                    is_prime = false;\n                    break;\n                }\n            }\n\n            if (is_prime && i != 1) primes.add(i);\n        }\n        return primes;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COUNT_UP_TO.java b/src/main/java/humaneval/buggy/COUNT_UP_TO.java\nindex 2952188..4195978 100644\n--- a/src/main/java/humaneval/buggy/COUNT_UP_TO.java\n+++ b/src/main/java/humaneval/buggy/COUNT_UP_TO.java\n@@ -17,14 +17,18 @@ public class COUNT_UP_TO {\n     public static List<Integer> count_up_to(int n) {\n         List<Integer> primes = new ArrayList<Integer>();\n \n-        for (int i = 2; i < n; i += 1){\n-            boolean is_prime = false;\n-            for (int j = 2; j < i; j += 1){\n+        for (int i = 2; i <= n; i++){\n+            boolean is_prime = true;\n+\n+            // checking if the number is prime\n+            for (int j = 2; j <= i / 2; j++){\n                 if (i % j == 0) {\n                     is_prime = false;\n+                    break;\n                 }\n             }\n-            if (is_prime) primes.add(i);\n+\n+            if (is_prime && i != 1) primes.add(i);\n         }\n         return primes;\n     }",
    "result_reason": "   TEST_COUNT_UP_TO.test_0:11 expected:<[2, 3, 5]> but was:<[2, 3]>",
    "test_result": "FAIL"
}