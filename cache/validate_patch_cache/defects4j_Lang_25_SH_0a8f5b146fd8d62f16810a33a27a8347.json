{
    "patch": "} else if ((ch >= '\\u0000' && ch <= '\\u001f') \n           || (ch >= '\\u007f' && ch <= '\\u009f')\n           || (ch >= '\\ud800' && ch <= '\\uffff')) {\n          out.write(\"\\\\u\");\n          String hex = Integer.toHexString(ch);\n          for (int j = 0; j < (4 - hex.length()); j++) {\n            out.write(\"0\");\n          }\n          out.write(hex.toUpperCase());\n        } else {\n          out.write(ch);\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}