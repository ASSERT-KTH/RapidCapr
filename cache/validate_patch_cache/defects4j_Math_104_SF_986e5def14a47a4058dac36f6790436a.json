{
    "patch": "public static double regularizedGammaP(double a, double x) {\n\n   if (a <= 0.0 || x < 0.0) {\n      throw new IllegalArgumentException(\"Invalid input argument values for computing regularized gamma P function.\");\n   }\n\n   double gamma = Gamma.gamma(a);\n   double igamma = Gamma.regularizedGammaQ(a, x);\n\n   return 1.0 - igamma * gamma / Math.exp(Gamma.logGamma(a));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..031db188f 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,17 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+\n+   if (a <= 0.0 || x < 0.0) {\n+      throw new IllegalArgumentException(\"Invalid input argument values for computing regularized gamma P function.\");\n+   }\n+\n+   double gamma = Gamma.gamma(a);\n+   double igamma = Gamma.regularizedGammaQ(a, x);\n+\n+   return 1.0 - igamma * gamma / Math.exp(Gamma.logGamma(a));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}