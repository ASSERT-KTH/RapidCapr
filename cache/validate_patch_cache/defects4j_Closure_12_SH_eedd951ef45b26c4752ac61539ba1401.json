{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    try {\n        Block block = cfgNode.getBlock();\n        for (CfgEdge edge : block.getOutgoingEdges()) {\n            if (edge.isExceptionEdge()) {\n                return true;\n            }\n        }\n    } catch (Exception e) {\n        return true;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..3b9e53ca 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,19 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    try {\n+        Block block = cfgNode.getBlock();\n+        for (CfgEdge edge : block.getOutgoingEdges()) {\n+            if (edge.isExceptionEdge()) {\n+                return true;\n+            }\n+        }\n+    } catch (Exception e) {\n+        return true;\n+    }\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}