{
    "patch": "public double[] repairAndDecode(final double[] x) {\n    double[] repairedX = repair(x);\n    double[] decodedX = decode(repairedX);\n    if(decodedX[0] > 1.0) {\n        decodedX[0] = 1.0;\n    } else if (decodedX[0] < 0.0) {\n        decodedX[0] = 0.0;\n    }\n    return decodedX;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 4b7dbf6bb..c6b5947b5 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -917,10 +917,16 @@ public class CMAESOptimizer\n          * @param x Normalized objective variables.\n          * @return the original objective variables, possibly repaired.\n          */\n-        public double[] repairAndDecode(final double[] x) {\n-            return\n-                decode(x);\n-        }\n+public double[] repairAndDecode(final double[] x) {\n+    double[] repairedX = repair(x);\n+    double[] decodedX = decode(repairedX);\n+    if(decodedX[0] > 1.0) {\n+        decodedX[0] = 1.0;\n+    } else if (decodedX[0] < 0.0) {\n+        decodedX[0] = 0.0;\n+    }\n+    return decodedX;\n+}\n \n         /**\n          * @param x Normalized objective variables.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}