{
    "patch": "public static boolean same_chars(String s0, String s1) {\n    if (s0.length() != s1.length()) {\n        return false;\n    }\n\n    HashMap<Character, Integer> charCount = new HashMap<Character, Integer>();\n\n    // count characters in s0\n    for (int i = 0; i < s0.length(); i++) {\n        char c = s0.charAt(i);\n        if (charCount.containsKey(c)) {\n            charCount.put(c, charCount.get(c) + 1);\n        } else {\n            charCount.put(c, 1);\n        }\n    }\n\n    // compare character counts in s1\n    for (int i = 0; i < s1.length(); i++) {\n        char c = s1.charAt(i);\n        if (!charCount.containsKey(c) || charCount.get(c) == 0) {\n            return false;\n        }\n        charCount.put(c, charCount.get(c) - 1);\n    }\n\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SAME_CHARS.java b/src/main/java/humaneval/buggy/SAME_CHARS.java\nindex 9367e85..b8f82d5 100644\n--- a/src/main/java/humaneval/buggy/SAME_CHARS.java\n+++ b/src/main/java/humaneval/buggy/SAME_CHARS.java\n@@ -17,16 +17,32 @@ False\n False */\n \n public class SAME_CHARS {\n-    public static boolean same_chars(String s0, String s1) {\n-        ArrayList<Character> set0 = new ArrayList<Character>();\n-        ArrayList<Character> set1 = new ArrayList<Character>();\n+public static boolean same_chars(String s0, String s1) {\n+    if (s0.length() != s1.length()) {\n+        return false;\n+    }\n+\n+    HashMap<Character, Integer> charCount = new HashMap<Character, Integer>();\n \n-        for (char c0 : s0.toCharArray()) {\n-            set0.add(c0);\n+    // count characters in s0\n+    for (int i = 0; i < s0.length(); i++) {\n+        char c = s0.charAt(i);\n+        if (charCount.containsKey(c)) {\n+            charCount.put(c, charCount.get(c) + 1);\n+        } else {\n+            charCount.put(c, 1);\n         }\n-        for (char c1 : s1.toCharArray()) {\n-            set1.add(c1);\n+    }\n+\n+    // compare character counts in s1\n+    for (int i = 0; i < s1.length(); i++) {\n+        char c = s1.charAt(i);\n+        if (!charCount.containsKey(c) || charCount.get(c) == 0) {\n+            return false;\n         }\n-        return set0.equals(set1);\n+        charCount.put(c, charCount.get(c) - 1);\n     }\n+\n+    return true;\n+}\n }",
    "result_reason": "   TEST_SAME_CHARS.test_0:7 expected:<false> but was:<true>",
    "test_result": "FAIL"
}