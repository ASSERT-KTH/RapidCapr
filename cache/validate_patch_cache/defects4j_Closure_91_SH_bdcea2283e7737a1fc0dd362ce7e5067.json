{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isObjectLitKey(parent)) {\n          Node owner = parent.getParent();\n          if (owner != null &&\n              owner.getType() == Token.ASSIGN &&\n              NodeUtil.isObjectLitKey(owner.getParent())) {\n            Node grandOwner = owner.getParent().getParent();\n            if (grandOwner != null &&\n                grandOwner.getType() == Token.EXPR_RESULT &&\n                grandOwner.getParent() != null &&\n                grandOwner.getParent().getType() == Token.SCRIPT &&\n                isGetPrototypeNode(lhs)) {\n              markLvalueSideEffectful(parent);\n              return false;\n            }\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..e7679507 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,23 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isObjectLitKey(parent)) {\n+          Node owner = parent.getParent();\n+          if (owner != null &&\n+              owner.getType() == Token.ASSIGN &&\n+              NodeUtil.isObjectLitKey(owner.getParent())) {\n+            Node grandOwner = owner.getParent().getParent();\n+            if (grandOwner != null &&\n+                grandOwner.getType() == Token.EXPR_RESULT &&\n+                grandOwner.getParent() != null &&\n+                grandOwner.getParent().getType() == Token.SCRIPT &&\n+                isGetPrototypeNode(lhs)) {\n+              markLvalueSideEffectful(parent);\n+              return false;\n+            }\n+          }\n+        }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: method isObjectLitKey in class NodeUtil cannot be applied to given types;",
    "test_result": "ERROR"
}