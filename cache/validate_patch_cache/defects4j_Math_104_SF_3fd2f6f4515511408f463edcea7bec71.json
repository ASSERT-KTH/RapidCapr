{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.MathUtils;\n\npublic class GammaFunction {\n\n    /**\n     * Compute the regularized gamma function P(a, x)\n     *\n     * @param a the shape parameter\n     * @param x the integration end point\n     * @return the value of the regularized gamma function\n     */\n    public static double regularizedGamma(double a, double x) {\n        if (a <= 0.0 || x < 0.0) {\n            throw new IllegalArgumentException(\"Invalid arguments for regularized gamma function.\");\n        }\n\n        return Gamma.gamma(a, x) / Gamma.gamma(a);\n    }\n\n    public static void main(String[] args) {\n        double a = 2.0;\n        double x = 1.0;\n        double expected = 0.632120558828558;\n        double actualP = GammaFunction.regularizedGamma(a, x);\n        TestUtils.assertEquals(expected, actualP, 10e-15);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..eae0d0564 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,34 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.MathUtils;\n+\n+public class GammaFunction {\n+\n+    /**\n+     * Compute the regularized gamma function P(a, x)\n+     *\n+     * @param a the shape parameter\n+     * @param x the integration end point\n+     * @return the value of the regularized gamma function\n+     */\n+    public static double regularizedGamma(double a, double x) {\n+        if (a <= 0.0 || x < 0.0) {\n+            throw new IllegalArgumentException(\"Invalid arguments for regularized gamma function.\");\n+        }\n+\n+        return Gamma.gamma(a, x) / Gamma.gamma(a);\n+    }\n+\n+    public static void main(String[] args) {\n+        double a = 2.0;\n+        double x = 1.0;\n+        double expected = 0.632120558828558;\n+        double actualP = GammaFunction.regularizedGamma(a, x);\n+        TestUtils.assertEquals(expected, actualP, 10e-15);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}