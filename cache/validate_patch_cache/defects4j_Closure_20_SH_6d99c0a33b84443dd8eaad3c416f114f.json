{
    "patch": "      // Get argument to String constructor and check if it is immutable.\n      Node value = callTarget.getNext();\n      boolean isImmutable = value != null && NodeUtil.isImmutableValue(value);\n      if (isImmutable) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\nindex bfa17074..929a9a47 100644\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n@@ -217,7 +217,10 @@ class PeepholeSubstituteAlternateSyntax\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n+      // Get argument to String constructor and check if it is immutable.\n+      Node value = callTarget.getNext();\n+      boolean isImmutable = value != null && NodeUtil.isImmutableValue(value);\n+      if (isImmutable) {\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());",
    "result_reason": "error: variable value is already defined in method tryFoldSimpleFunctionCall(Node)",
    "test_result": "ERROR"
}