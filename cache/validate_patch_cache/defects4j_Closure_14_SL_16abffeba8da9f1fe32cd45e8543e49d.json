{
    "patch": "if (finallyNode == null) {\n  computeFollowNode(fromNode, parent, cfa);\n} else if (finallyNode.getFirstChild() == null) {\n  cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(finallyNode, null, cfa));\n} else {\n  cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(finallyNode, finallyNode.getFirstChild().getNext(), cfa));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..d850aa40 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,13 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (finallyNode == null) {\n+  computeFollowNode(fromNode, parent, cfa);\n+} else if (finallyNode.getFirstChild() == null) {\n+  cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(finallyNode, null, cfa));\n+} else {\n+  cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(finallyNode, finallyNode.getFirstChild().getNext(), cfa));\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}