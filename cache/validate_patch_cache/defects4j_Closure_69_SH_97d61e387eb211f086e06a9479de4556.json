{
    "patch": "      // Functions with explicit 'this' types must be called in a GETPROP\n      // or GETELEM.\n      ObjectType baseType = functionType.getTypeOfThis();\n      if (baseType != null && baseType.isFunctionType()) {\n        report(t, child, CANNOT_CALL_GETTER,\n            \"Functions with explicitly specified 'this' types cannot be directy called\");",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..9c6e1cba 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,12 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      // Functions with explicit 'this' types must be called in a GETPROP\n+      // or GETELEM.\n+      ObjectType baseType = functionType.getTypeOfThis();\n+      if (baseType != null && baseType.isFunctionType()) {\n+        report(t, child, CANNOT_CALL_GETTER,\n+            \"Functions with explicitly specified 'this' types cannot be directy called\");\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}