{
    "patch": "public String fixCode(String code) {\n    if (code.contains(\"for\")) {\n        String[] lines = code.split(\"\\n\");\n        for (int i = 0; i < lines.length; i++) {\n            if (lines[i].contains(\"for(\")) {\n                String[] tokens = lines[i].split(\"\\\\(\");\n                String[] subtokens = tokens[1].split(\"\\\\)\");\n\n                // check if there is an \"in\" operator in the for statement\n                if (subtokens[0].contains(\"in\")) {\n                    String[] subsubtokens = subtokens[0].split(\" \");\n                    if (subsubtokens.length == 3) { // for (a in b)\n                        lines[i] = tokens[0] + \"(\" + subsubtokens[2] + \".\" + \"length == 0 ? false : \" + subsubtokens[0] + \" in \" + subsubtokens[2] + \")\" + tokens[2];\n                    } else if (subsubtokens.length == 4) { // for (var a in b)\n                        lines[i] = tokens[0] + \"(Object.keys(\" + subsubtokens[3] + \").length == 0 ? false : \" + subsubtokens[1] + \" in \" + subsubtokens[3] + \")\" + tokens[2];\n                    }\n                }\n            }\n        }\n        return String.join(\"\\n\", lines);\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..865daffb 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,29 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    if (code.contains(\"for\")) {\n+        String[] lines = code.split(\"\\n\");\n+        for (int i = 0; i < lines.length; i++) {\n+            if (lines[i].contains(\"for(\")) {\n+                String[] tokens = lines[i].split(\"\\\\(\");\n+                String[] subtokens = tokens[1].split(\"\\\\)\");\n+\n+                // check if there is an \"in\" operator in the for statement\n+                if (subtokens[0].contains(\"in\")) {\n+                    String[] subsubtokens = subtokens[0].split(\" \");\n+                    if (subsubtokens.length == 3) { // for (a in b)\n+                        lines[i] = tokens[0] + \"(\" + subsubtokens[2] + \".\" + \"length == 0 ? false : \" + subsubtokens[0] + \" in \" + subsubtokens[2] + \")\" + tokens[2];\n+                    } else if (subsubtokens.length == 4) { // for (var a in b)\n+                        lines[i] = tokens[0] + \"(Object.keys(\" + subsubtokens[3] + \").length == 0 ? false : \" + subsubtokens[1] + \" in \" + subsubtokens[3] + \")\" + tokens[2];\n+                    }\n+                }\n+            }\n+        }\n+        return String.join(\"\\n\", lines);\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}