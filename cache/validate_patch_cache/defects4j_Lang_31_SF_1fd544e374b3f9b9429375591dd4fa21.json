{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int len = str.length();\n    int searchLen = searchChars.length;\n    int end = len - searchLen;\n    for (int i = 0; i <= end; i++) {\n        for (int j = 0; j < searchLen; j++) {\n            if (Character.isHighSurrogate(searchChars[j])) {\n                if (j == searchLen - 1) {\n                    return false;\n                }\n                if (i < end && Character.isLowSurrogate(searchChars[j + 1])) {\n                    int codePoint = Character.toCodePoint(searchChars[j], searchChars[j + 1]);\n                    if (str.codePointAt(i) == codePoint) {\n                        return true;\n                    }\n                }\n            } else {\n                if (searchChars[j] == str.charAt(i)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..9edce5f6 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,34 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int len = str.length();\n+    int searchLen = searchChars.length;\n+    int end = len - searchLen;\n+    for (int i = 0; i <= end; i++) {\n+        for (int j = 0; j < searchLen; j++) {\n+            if (Character.isHighSurrogate(searchChars[j])) {\n+                if (j == searchLen - 1) {\n+                    return false;\n+                }\n+                if (i < end && Character.isLowSurrogate(searchChars[j + 1])) {\n+                    int codePoint = Character.toCodePoint(searchChars[j], searchChars[j + 1]);\n+                    if (str.codePointAt(i) == codePoint) {\n+                        return true;\n+                    }\n+                }\n+            } else {\n+                if (searchChars[j] == str.charAt(i)) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}