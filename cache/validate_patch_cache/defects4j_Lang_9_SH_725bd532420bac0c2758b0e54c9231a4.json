{
    "patch": "        if(!patternMatcher.matches()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n        currentFormatField= patternMatcher.group();\n        Strategy currentStrategy= getStrategy(currentFormatField);\n        for(;;) {\n            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n            if(!patternMatcher.lookingAt()) {\n                if(currentStrategy.addRegex(this, regex)) {\n                    collector.add(currentStrategy);\n                }\n                nextStrategy = null;\n                break;\n            }\n            String nextFormatField= patternMatcher.group();\n            nextStrategy = getStrategy(nextFormatField);\n            if(currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n            }\n            currentFormatField= nextFormatField;\n            currentStrategy= nextStrategy;\n        }\n        currentFormatField= null;\n        if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..0b65453b 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,30 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        if(!patternMatcher.matches()) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+        currentFormatField= patternMatcher.group();\n+        Strategy currentStrategy= getStrategy(currentFormatField);\n+        for(;;) {\n+            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n+            if(!patternMatcher.lookingAt()) {\n+                if(currentStrategy.addRegex(this, regex)) {\n+                    collector.add(currentStrategy);\n+                }\n+                nextStrategy = null;\n+                break;\n+            }\n+            String nextFormatField= patternMatcher.group();\n+            nextStrategy = getStrategy(nextFormatField);\n+            if(currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+            }\n+            currentFormatField= nextFormatField;\n+            currentStrategy= nextStrategy;\n+        }\n+        currentFormatField= null;\n+        if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}