{
    "patch": "private String getRemainingJSDocLine() {\n    String result = null;\n    while (stream.hasMoreJSDocLine() && (result == null || result.trim().isEmpty() || result.contains(\"@\"))) {\n        String line = stream.getRemainingJSDocLine();\n        if (result == null) {\n            result = line;\n        } else {\n            result = result + \" \" + line.trim();\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..5ef59cec 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,18 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = null;\n+    while (stream.hasMoreJSDocLine() && (result == null || result.trim().isEmpty() || result.contains(\"@\"))) {\n+        String line = stream.getRemainingJSDocLine();\n+        if (result == null) {\n+            result = line;\n+        } else {\n+            result = result + \" \" + line.trim();\n+        }\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}