{
    "patch": "Name name = functionNode.getFunctionName();\nboolean isUnnamedFunction = false;\nif (name == null) {\n    name = new Name();\n    name.setIdentifier(\"\");\n    isUnnamedFunction = true;\n}\nNode node = newNode(Token.FUNCTION);\n\nNode newName = transform(name);\nif (isUnnamedFunction) {\n    newName.setLineno(functionNode.getLineno());\n    int lpColumn = functionNode.getParams().isEmpty() ?\n            functionNode.getBody().getLineno() :\n            functionNode.getParams().get(0).getLineno();\n    newName.setCharno(position2charno(lpColumn));\n}\n\nnode.addChildToBack(newName);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..174b378c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,25 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+boolean isUnnamedFunction = false;\n+if (name == null) {\n+    name = new Name();\n+    name.setIdentifier(\"\");\n+    isUnnamedFunction = true;\n+}\n+Node node = newNode(Token.FUNCTION);\n+\n+Node newName = transform(name);\n+if (isUnnamedFunction) {\n+    newName.setLineno(functionNode.getLineno());\n+    int lpColumn = functionNode.getParams().isEmpty() ?\n+            functionNode.getBody().getLineno() :\n+            functionNode.getParams().get(0).getLineno();\n+    newName.setCharno(position2charno(lpColumn));\n+}\n+\n+node.addChildToBack(newName);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}