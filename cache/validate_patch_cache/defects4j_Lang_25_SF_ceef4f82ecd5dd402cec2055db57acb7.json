{
    "patch": "import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class CustomStringUtils {\n    \n    private static final String[] ESCAPE_CHARS = {\"\\\\\", \"\\\"\", \"\\'\", \"\\b\", \"\\n\", \"\\r\", \"\\t\"};\n    private static final String[] ESCAPE_CHARS_REPLACEMENT = {\"\\\\\\\\\", \"\\\\\\\"\", \"\\\\'\", \"\\\\b\", \"\\\\n\", \"\\\\r\", \"\\\\t\"};\n\n    public static String escapeString(String input) {\n\n        String regex = getRegex();\n\n        Pattern pattern = Pattern.compile(regex);\n        Matcher matcher = pattern.matcher(input);\n\n        StringBuffer sb = new StringBuffer();\n        while (matcher.find()) {\n            matcher.appendReplacement(sb, getReplacement(matcher.group()));\n        }\n        matcher.appendTail(sb);\n\n        return sb.toString();\n    }\n\n    private static String getRegex() {\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"(\");\n        for (String ch : ESCAPE_CHARS) {\n            sb.append(\"\\\\\").append(ch).append(\"|\");\n        }\n        sb.deleteCharAt(sb.length() - 1);\n        sb.append(\")\");\n\n        return sb.toString();\n    }\n\n    private static String getReplacement(String group) {\n\n        for (int i = 0; i < ESCAPE_CHARS.length; i++) {\n            if (group.equals(ESCAPE_CHARS[i])) {\n                return ESCAPE_CHARS_REPLACEMENT[i];\n            }\n        }\n        return group;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..eb630d4c 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,53 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class CustomStringUtils {\n+    \n+    private static final String[] ESCAPE_CHARS = {\"\\\\\", \"\\\"\", \"\\'\", \"\\b\", \"\\n\", \"\\r\", \"\\t\"};\n+    private static final String[] ESCAPE_CHARS_REPLACEMENT = {\"\\\\\\\\\", \"\\\\\\\"\", \"\\\\'\", \"\\\\b\", \"\\\\n\", \"\\\\r\", \"\\\\t\"};\n+\n+    public static String escapeString(String input) {\n+\n+        String regex = getRegex();\n+\n+        Pattern pattern = Pattern.compile(regex);\n+        Matcher matcher = pattern.matcher(input);\n+\n+        StringBuffer sb = new StringBuffer();\n+        while (matcher.find()) {\n+            matcher.appendReplacement(sb, getReplacement(matcher.group()));\n+        }\n+        matcher.appendTail(sb);\n+\n+        return sb.toString();\n+    }\n+\n+    private static String getRegex() {\n+\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"(\");\n+        for (String ch : ESCAPE_CHARS) {\n+            sb.append(\"\\\\\").append(ch).append(\"|\");\n+        }\n+        sb.deleteCharAt(sb.length() - 1);\n+        sb.append(\")\");\n+\n+        return sb.toString();\n+    }\n+\n+    private static String getReplacement(String group) {\n+\n+        for (int i = 0; i < ESCAPE_CHARS.length; i++) {\n+            if (group.equals(ESCAPE_CHARS[i])) {\n+                return ESCAPE_CHARS_REPLACEMENT[i];\n+            }\n+        }\n+        return group;\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}