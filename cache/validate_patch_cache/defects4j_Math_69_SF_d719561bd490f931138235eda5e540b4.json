{
    "patch": "public RealMatrix getCorrelationPValues() throws MathException {\n    final double epsilon = Math.ulp(1d);\n    TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n    int nVars = correlationMatrix.getColumnDimensio",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..2ee9058f0 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -157,23 +157,10 @@ public class PearsonsCorrelation {\n      * @return matrix of p-values\n      * @throws MathException if an error occurs estimating probabilities\n      */\n-    public RealMatrix getCorrelationPValues() throws MathException {\n-        TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n-        int nVars = correlationMatrix.getColumnDimension();\n-        double[][] out = new double[nVars][nVars];\n-        for (int i = 0; i < nVars; i++) {\n-            for (int j = 0; j < nVars; j++) {\n-                if (i == j) {\n-                    out[i][j] = 0d;\n-                } else {\n-                    double r = correlationMatrix.getEntry(i, j);\n-                    double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n-                }\n-            }\n-        }\n-        return new BlockRealMatrix(out);\n-    }\n+public RealMatrix getCorrelationPValues() throws MathException {\n+    final double epsilon = Math.ulp(1d);\n+    TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n+    int nVars = correlationMatrix.getColumnDimensio\n \n \n     /**",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}