{
    "patch": "    public Object clone() throws CloneNotSupportedException {\n        TimeSeries clone = null;\n        try {\n            clone = (TimeSeries) super.clone();\n            clone.data = new ArrayList();\n            for (int i = 0; i < getItemCount(); i++) {\n                clone.add((TimeSeriesDataItem) getDataItem(i).clone());\n            }\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return clone;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..6bb7cd6 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+    public Object clone() throws CloneNotSupportedException {\n+        TimeSeries clone = null;\n+        try {\n+            clone = (TimeSeries) super.clone();\n+            clone.data = new ArrayList();\n+            for (int i = 0; i < getItemCount(); i++) {\n+                clone.add((TimeSeriesDataItem) getDataItem(i).clone());\n+            }\n+        } catch (CloneNotSupportedException e) {\n+            e.printStackTrace();\n+        }\n+        return clone;\n+    }\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}