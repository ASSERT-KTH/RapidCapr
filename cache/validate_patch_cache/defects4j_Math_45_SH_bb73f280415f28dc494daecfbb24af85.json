{
    "patch": "if (rowDimension <= 0 || columnDimension <= 0) {\n    throw new IllegalArgumentException(\"Invalid matrix dimensions.\");\n}\n// Check if the total number of entries overflows integer size\nif (Long.compare((long) rowDimension * columnDimension, Integer.MAX_VALUE) > 0) {\n    throw new NumberIsTooLargeException((long) rowDimension * (long) columnDimension, Integer.MAX_VALUE, true);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..d8726cefb 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,13 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+if (rowDimension <= 0 || columnDimension <= 0) {\n+    throw new IllegalArgumentException(\"Invalid matrix dimensions.\");\n+}\n+// Check if the total number of entries overflows integer size\n+if (Long.compare((long) rowDimension * columnDimension, Integer.MAX_VALUE) > 0) {\n+    throw new NumberIsTooLargeException((long) rowDimension * (long) columnDimension, Integer.MAX_VALUE, true);\n+}\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}