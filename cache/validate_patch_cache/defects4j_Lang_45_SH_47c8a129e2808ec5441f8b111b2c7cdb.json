{
    "patch": "// if the lower value is greater than the length of the string, set it to the length of the string\nif (lower > str.length()) {\n    lower = str.length();\n}\n// if lower is negative, set it to 0\nif (lower < 0) {\n    lower = 0;\n}\n\n// if the upper value is -1 (i.e. no limit) or is greater than the length of the string,\n// set it to the length of the string\nif (upper == -1 || upper > str.length()) {\n    upper = str.length();\n} else if (upper < lower) { // if upper is less than lower, swap their values\n    int temp = lower;\n    lower = upper;\n    upper = temp;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..2715a46a 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,24 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// if the lower value is greater than the length of the string, set it to the length of the string\n+if (lower > str.length()) {\n+    lower = str.length();\n+}\n+// if lower is negative, set it to 0\n+if (lower < 0) {\n+    lower = 0;\n+}\n+\n+// if the upper value is -1 (i.e. no limit) or is greater than the length of the string,\n+// set it to the length of the string\n+if (upper == -1 || upper > str.length()) {\n+    upper = str.length();\n+} else if (upper < lower) { // if upper is less than lower, swap their values\n+    int temp = lower;\n+    lower = upper;\n+    upper = temp;\n+}\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "junit.framework.ComparisonFailure: expected:<012[ 3]> but was:<012[]>",
    "test_result": "FAIL"
}