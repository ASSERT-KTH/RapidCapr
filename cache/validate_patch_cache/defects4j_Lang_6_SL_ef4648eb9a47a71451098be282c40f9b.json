{
    "patch": "        while (pos < len) {\n            int consumed = translate(input, pos, out);\n            if (consumed == 0) {\n                int codePoint = Character.codePointAt(input, pos);\n                pos += Character.charCount(codePoint);\n                out.write(codePoint);\n            } else {\n                for (int pt = 0; pt < consumed; pt++) {\n                    if (pos >= len) {\n                        break; // EOL detected\n                    }\n                    // handle escape sequences correctly\n                    if (input.charAt(pos) == '\\\\') {\n                        out.write(input.charAt(pos));\n                        pos++;\n                        if (pos >= len) {\n                            break; // EOL detected\n                        }\n                        out.write(input.charAt(pos));\n                    } else {\n                        out.write(input.charAt(pos));\n                    }\n                    pos++;\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..7c8894f7 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,32 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+        while (pos < len) {\n+            int consumed = translate(input, pos, out);\n+            if (consumed == 0) {\n+                int codePoint = Character.codePointAt(input, pos);\n+                pos += Character.charCount(codePoint);\n+                out.write(codePoint);\n+            } else {\n+                for (int pt = 0; pt < consumed; pt++) {\n+                    if (pos >= len) {\n+                        break; // EOL detected\n+                    }\n+                    // handle escape sequences correctly\n+                    if (input.charAt(pos) == '\\\\') {\n+                        out.write(input.charAt(pos));\n+                        pos++;\n+                        if (pos >= len) {\n+                            break; // EOL detected\n+                        }\n+                        out.write(input.charAt(pos));\n+                    } else {\n+                        out.write(input.charAt(pos));\n+                    }\n+                    pos++;\n+                }\n+            }\n+        }\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}