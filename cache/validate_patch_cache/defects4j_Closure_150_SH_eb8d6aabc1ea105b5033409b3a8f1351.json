{
    "patch": "      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          defineDeclaredFunction(n, parent);\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n        case Token.NAME:\n          if (parent != null && NodeUtil.isFunctionDeclaration(n) && NodeUtil.isStatement(parent)) {\n            defineDeclaredFunction(n, parent);\n          }\n          break;\n        case Token.LP:\n          if (parent == scope.getRootNode()) {\n            handleFunctionInputs(n, parent);\n          }\n          break;\n        default:\n          break;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..a41f9941 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1462,6 +1462,18 @@ final class TypedScopeCreator implements ScopeCreator {\n         case Token.VAR:\n           defineVar(n, parent);\n           break;\n+        case Token.NAME:\n+          if (parent != null && NodeUtil.isFunctionDeclaration(n) && NodeUtil.isStatement(parent)) {\n+            defineDeclaredFunction(n, parent);\n+          }\n+          break;\n+        case Token.LP:\n+          if (parent == scope.getRootNode()) {\n+            handleFunctionInputs(n, parent);\n+          }\n+          break;\n+        default:\n+          break;\n       }\n     }\n ",
    "result_reason": "error: method handleFunctionInputs in class TypedScopeCreator.LocalScopeBuilder cannot be applied to given types;",
    "test_result": "ERROR"
}