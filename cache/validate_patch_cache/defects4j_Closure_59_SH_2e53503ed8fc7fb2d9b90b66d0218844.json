{
    "patch": "// DiagnosticGroups override the plain checkTypes option.\nif (options.enables(DiagnosticGroups.CHECK_TYPES)) {\n  options.checkTypes = true;\n} else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {\n  options.checkTypes = false;\n} else if (!options.checkTypes) {\n  // If DiagnosticGroups did not override the plain checkTypes\n  // option, and checkTypes is enabled, then turn off the\n  // parser type warnings.\n  options.setWarningLevel(\n      DiagnosticGroup.forType(\n          RhinoErrorReporter.TYPE_PARSE_ERROR),\n      CheckLevel.OFF);\n}\nif (options.checkGlobalThisLevel.isOn()) {\n  options.setWarningLevel(\n        DiagnosticGroups.GLOBAL_THIS,\n        options.checkGlobalThisLevel);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..7a947571 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,25 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+// DiagnosticGroups override the plain checkTypes option.\n+if (options.enables(DiagnosticGroups.CHECK_TYPES)) {\n+  options.checkTypes = true;\n+} else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {\n+  options.checkTypes = false;\n+} else if (!options.checkTypes) {\n+  // If DiagnosticGroups did not override the plain checkTypes\n+  // option, and checkTypes is enabled, then turn off the\n+  // parser type warnings.\n+  options.setWarningLevel(\n+      DiagnosticGroup.forType(\n+          RhinoErrorReporter.TYPE_PARSE_ERROR),\n+      CheckLevel.OFF);\n+}\n+if (options.checkGlobalThisLevel.isOn()) {\n+  options.setWarningLevel(\n+        DiagnosticGroups.GLOBAL_THIS,\n+        options.checkGlobalThisLevel);\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}