{
    "patch": "public String getprop(String key, String def) {\n    String value = System.getProperty(key, def);\n    if (value == null || value.length() == 0) {\n        String warning = \"Property \" + key + \" was expected to be set\";\n        System.err.println(warning);\n    }\n    return value;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..ae3937d0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getprop(String key, String def) {\n+    String value = System.getProperty(key, def);\n+    if (value == null || value.length() == 0) {\n+        String warning = \"Property \" + key + \" was expected to be set\";\n+        System.err.println(warning);\n+    }\n+    return value;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}