{
    "patch": "      boolean isOverride = t.inGlobalScope() &&\n          parent.getType() == Token.ASSIGN &&\n          parent.getFirstChild().isGetProp() &&\n          getprop.matchesQualifiedName(\n              parent.getFirstChild().getQualifiedName());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..f04e33a1 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -415,6 +415,10 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n       // an existing property?\n       boolean isOverride = t.inGlobalScope() &&\n           parent.getType() == Token.ASSIGN &&\n+          parent.getFirstChild().isGetProp() &&\n+          getprop.matchesQualifiedName(\n+              parent.getFirstChild().getQualifiedName());\n+          parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n \n       // Find the lowest property defined on a class with visibility",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}