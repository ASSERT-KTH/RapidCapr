{
    "patch": "double distance = Math.abs(numbers.get(i) - numbers.get(j));\nif (Double.compare(distance, threshold) <= 0) {\n    return true;\n} else if (Double.compare(distance, Double.POSITIVE_INFINITY) == 0) {\n    // Handle infinity case or continue with other elements\n    continue;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\nindex b51eb14..f45fe91 100644\n--- a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n@@ -6,7 +6,13 @@ public class HAS_CLOSE_ELEMENTS {\n     public static boolean has_close_elements(List<Double> numbers, double threshold){\n         for (int i = 0; i < numbers.size(); i += 1){\n             for (int j = i + 1; j < numbers.size(); j += 1){\n-                double distance = numbers.get(i) - numbers.get(j);\n+double distance = Math.abs(numbers.get(i) - numbers.get(j));\n+if (Double.compare(distance, threshold) <= 0) {\n+    return true;\n+} else if (Double.compare(distance, Double.POSITIVE_INFINITY) == 0) {\n+    // Handle infinity case or continue with other elements\n+    continue;\n+}\n                 if (distance < threshold)\n                     return true;\n             }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}