{
    "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      if (child.getType() == Token.NAME) {\n        String calleeFunctionName = child.getString();\n        if (!calleeFunctionName.isEmpty() && !calleeFunctionName.startsWith(\"goog.\")) {\n          changed.add(calleeFunctionName);\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java\nindex 814a07f4..91b23fc7 100644\n--- a/src/com/google/javascript/jscomp/InlineFunctions.java\n+++ b/src/com/google/javascript/jscomp/InlineFunctions.java\n@@ -777,7 +777,10 @@ class InlineFunctions implements SpecializationAwareCompilerPass {\n     if (node.getType() == Token.CALL) {\n       Node child = node.getFirstChild();\n       if (child.getType() == Token.NAME) {\n-        changed.add(child.getString());\n+        String calleeFunctionName = child.getString();\n+        if (!calleeFunctionName.isEmpty() && !calleeFunctionName.startsWith(\"goog.\")) {\n+          changed.add(calleeFunctionName);\n+        }\n       }\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}