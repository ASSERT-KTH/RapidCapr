{
    "patch": "private static final String[][] ISO_8859_1_ESCAPE = {\n        {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n        {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark\n        {\"\\u00A2\", \"&cent;\"}, // cent sign\n        {\"\\u00A3\", \"&pound;\"}, // pound sign\n        {\"\\u00A4\", \"&curren;\"}, // currency sign\n        {\"\\u00A5\", \"&yen;\"}, // yen sign = yuan sign\n        {\"\\u00A6\", \"&brvbar;\"}, // broken bar = broken vertical bar\n        {\"\\u00A7\", \"&sect;\"}, // section sign\n        {\"\\u00A8\", \"&uml;\"}, // diaeresis = spacing diaeresis\n        {\"\\u00A9\", \"&copy;\"}, // copyright sign\n        {\"\\u00AA\", \"&ordf;\"}, // feminine ordinal indicator\n        {\"\\u00AB\", \"&laquo;\"}, // left-pointing double angle quotation mark = left pointing guillemet\n        {\"\\u00AC\", \"&not;\"}, // not sign\n        {\"\\u00AD\", \"&shy;\"}, // soft hyphen = discretionary hyphen\n        {\"\\u00AE\", \"&reg;\"}, // registered sign = registered trade mark sign\n        {\"\\u00AF\", \"&macr;\"}, // macron = spacing macron = overline = APL overbar\n        {\"\\u00B0\", \"&deg;\"}, // degree sign\n        {\"\\u00B1\", \"&plusmn;\"}, // plus-minus sign = plus or minus sign\n        {\"\\u00B2\", \"&sup2;\"}, // superscript two = superscript digit two = squared\n        {\"\\u00B3\", \"&sup3;\"}, // superscript three = superscript digit three = cubed\n        {\"\\u00B4\", \"&acute;\"}, // acute accent = spacing acute\n        {\"\\u00B5\", \"&micro;\"}, // micro sign\n        {\"\\u00B6\", \"&para;\"}, // pilcrow sign = paragraph sign\n        {\"\\u00B7\", \"&middot;\"}, // middle dot = Georgian comma = Greek middle dot\n        {\"\\u00B8\", \"&cedil;\"}, // cedilla = spacing cedilla\n        {\"\\u00B9\", \"&sup1;\"}, // superscript one = superscript digit one\n        {\"\\u00BA\", \"&ordm;\"}, // masculine ordinal indicator\n        {\"\\u00BB\", \"&raquo;\"}, // right-pointing double angle quotation mark = right pointing guillemet\n        {\"\\u00BC\", \"&frac14;\"}, // vulgar fraction one quarter = fraction one quarter\n        {\"\\u00BD\", \"&frac12;\"}, // vulgar fraction one half = fraction one half\n        {\"\\u00BE\", \"&frac34;\"}, // vulgar fraction three quarters = fraction three quarters\n        {\"\\u00BF\", \"&iquest;\"}, // inverted question mark = turned question mark\n        {\"\\u00C0\", \"&Agrave;\"}, // Latin capital letter A with grave = Latin capital letter A grave\n        {\"\\u00C1\", \"&Aacute;\"}, // Latin capital letter A with acute\n        {\"\\u00C2\", \"&Acirc;\"}, // Latin capital letter A with circumflex\n        {\"\\u00C3\", \"&Atilde;\"}, // Latin capital letter A with tilde\n        {\"\\u00C4\", \"&Auml;\"}, // Latin capital letter A with diaeresis\n        {\"\\u00C5\", \"&Aring;\"}, // Latin capital letter A with ring above = Latin capital letter A ring\n        {\"\\u00C6\", \"&AElig;\"}, // Latin capital letter AE = Latin capital ligature AE\n        {\"\\u00C7\", \"&Ccedil;\"}, // Latin capital letter C with cedilla\n        {\"\\u00C8\", \"&Egrave;\"}, // Latin capital letter E with grave\n        {\"\\u00C9\", \"&Eacute;\"}, // Latin capital letter E with acute\n        {\"\\u00CA\", \"&Ecirc;\"}, // Latin capital letter E with circumflex\n        {\"\\u00CB\", \"&Euml;\"}, // Latin capital letter E with diaeresis\n        {\"\\u00CC\", \"&Igrave;\"}, // Latin capital letter I with grave\n        {\"\\u00CD\", \"&Iacute;\"}, // Latin capital letter I with acute\n        {\"\\u00CE\", \"&Icirc;\"}, // Latin capital letter I with circumflex\n        {\"\\u00CF\", \"&Iuml;\"}, // Latin capital letter I with diaeresis\n        {\"\\u00D0\", \"&ETH;\"}, // Latin capital letter ETH\n        {\"\\u00D1\", \"&Ntilde;\"}, // Latin capital letter N with tilde\n        {\"\\u00D2\", \"&Ograve;\"}, // Latin capital letter O with grave\n        {\"\\u00D3\", \"&Oacute;\"}, // Latin capital letter O with acute\n        {\"\\u00D4\", \"&Ocirc;\"}, // Latin capital letter O with circumflex\n        {\"\\u00D5\", \"&Otilde;\"}, // Latin capital letter O with tilde\n        {\"\\u00D6\", \"&Ouml;\"}, // Latin capital letter O with diaeresis\n        {\"\\u00D7\", \"&times;\"}, // multiplication sign\n        {\"\\u00D8\", \"&Oslash;\"}, // Latin capital letter O with stroke = Latin capital letter O slash\n        {\"\\u00D9\", \"&Ugrave;\"}, // Latin capital letter U with grave\n        {\"\\u00DA\", \"&Uacute;\"}, // Latin capital letter U with acute\n        {\"\\u00DB\", \"&Ucirc;\"}, // Latin capital letter U with circumflex\n        {\"\\u00DC\", \"&Uuml;\"}, // Latin capital letter U with diaeresis\n        {\"\\u00DD\", \"&Yacute;\"}, // Latin capital letter Y with acute\n        {\"\\u00DE\", \"&THORN;\"}, // Latin capital letter THORN\n        {\"\\u00DF\", \"&szlig;\"}, // Latin small letter sharp s = ess-zed\n        {\"\\u00E0\", \"&agrave;\"}, // Latin small letter a with grave = Latin small letter a grave\n        {\"\\u00E1\", \"&aacute;\"}, // Latin small letter a with acute\n        {\"\\u00E2\", \"&acirc;\"}, // Latin small letter a with circumflex\n        {\"\\u00E3\", \"&atilde;\"}, // Latin small letter a with tilde\n        {\"\\u00E4\", \"&auml;\"}, // Latin small letter a with diaeresis\n        {\"\\u00E5\", \"&aring;\"}, // Latin small letter a with ring above = Latin small letter a ring\n        {\"\\u00E6\", \"&aelig;\"}, // Latin small letter ae = Latin small ligature ae\n        {\"\\u00E7\", \"&ccedil;\"}, // Latin small letter c with cedilla\n        {\"\\u00E8\", \"&egrave;\"}, // Latin small letter e with grave\n        {\"\\u00E9\", \"&eacute;\"}, // Latin small letter e with acute\n        {\"\\u00EA\", \"&ecirc;\"}, // Latin small letter e with circumflex\n        {\"\\u00EB\", \"&euml;\"}, // Latin small letter e with diaeresis\n        {\"\\u00EC\", \"&igrave;\"}, // Latin small letter i with grave\n        {\"\\u00ED\", \"&iacute;\"}, // Latin small letter i with acute\n        {\"\\u00EE\", \"&icirc;\"}, // Latin small letter i with circumflex\n        {\"\\u00EF\", \"&iuml;\"}, // Latin small letter i with diaeresis\n        {\"\\u00F0\", \"&eth;\"}, // Latin small letter eth\n        {\"\\u00F1\", \"&ntilde;\"}, // Latin small letter n with tilde\n        {\"\\u00F2\", \"&ograve;\"}, // Latin small letter o with grave\n        {\"\\u00F3\", \"&oacute;\"}, // Latin small letter o with acute\n        {\"\\u00F4\", \"&ocirc;\"}, // Latin small letter o with circumflex\n        {\"\\u00F5\", \"&otilde;\"}, // Latin small letter o with tilde\n        {\"\\u00F6\", \"&ouml;\"}, // Latin small letter o with diaeresis\n        {\"\\u00F7\", \"&divide;\"}, // division sign\n        {\"\\u00F8\", \"&oslash;\"}, // Latin small letter o with stroke oe = Latin small letter o slash\n        {\"\\u00F9\", \"&ugrave;\"}, // Latin small letter u with grave\n        {\"\\u00FA\", \"&uacute;\"}, // Latin small letter u with acute\n        {\"\\u00FB\", \"&ucirc;\"}, // Latin small letter u with circumflex\n        {\"\\u00FC\", \"&uuml;\"}, // Latin small letter u with diaeresis\n        {\"\\u00FD\", \"&yacute;\"}, // Latin small letter y with acute\n        {\"\\u00FE\", \"&thorn;\"}, // Latin small letter thorn with, Icelandic and Old English\n        {\"\\u00FF\", \"&yuml;\"},  // Latin small letter y with diaeresis\n};\n\npublic void testISO8859_1_ESCAPE() {\n    String[][] escaped = Entities.ISO_8859_1_ESCAPE();\n    assertNotNull(escaped);\n    assertTrue(\"Array length > 254\",escaped.length <= 254);\n    int start = 0xA0;\n    while (start <= 0xFF && start < escaped.length + 0xA0) {\n        String name = ISO_8859_1_ESCAPE[start - 0xA0][1];\n        if (name.startsWith(\"&\")) {\n            assertTrue(\"Name starts with '&'\", success);\n        }\n        start++;\n    }\n    assertTrue(\"One or more errors detected\", true);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}