{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int i = 0;\n    while (i < strLen) {\n        int codePoint = str.codePointAt(i);\n        if (Character.charCount(codePoint) > 1) {\n            i += 2;\n            if (containsAny(searchChars, Character.toChars(codePoint))) {\n                return true;\n            }\n        } else {\n            if (contains(searchChars, str.charAt(i))) {\n                return true;\n            }\n            i++;\n        }\n    }\n    return false;\n}\n\nprivate static boolean contains(char[] array, char ch) {\n    for (char c : array) {\n        if (c == ch) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate static boolean containsAny(char[] array1, char[] array2) {\n    for (char c : array1) {\n        if (contains(array2, c)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..0e4b8137 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,47 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int i = 0;\n+    while (i < strLen) {\n+        int codePoint = str.codePointAt(i);\n+        if (Character.charCount(codePoint) > 1) {\n+            i += 2;\n+            if (containsAny(searchChars, Character.toChars(codePoint))) {\n+                return true;\n+            }\n+        } else {\n+            if (contains(searchChars, str.charAt(i))) {\n+                return true;\n+            }\n+            i++;\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean contains(char[] array, char ch) {\n+    for (char c : array) {\n+        if (c == ch) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean containsAny(char[] array1, char[] array2) {\n+    for (char c : array1) {\n+        if (contains(array2, c)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}