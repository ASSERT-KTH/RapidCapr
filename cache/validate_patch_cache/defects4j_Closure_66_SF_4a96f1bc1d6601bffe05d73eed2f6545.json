{
    "patch": "public static double getTypedPercent(String jsonStr) throws JSONException {\n    JSONObject obj = new JSONObject(jsonStr);\n    int typedCount = obj.getInt(\"TypedCount\");\n    int allCount = obj.getInt(\"AllCount\");\n    \n    if (allCount == 0) {\n        return 0;\n    }\n    \n    double percentage = (double) typedCount / allCount * 100;\n    return Math.round(percentage * 10.0) / 10.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..b3ef14a9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) throws JSONException {\n+    JSONObject obj = new JSONObject(jsonStr);\n+    int typedCount = obj.getInt(\"TypedCount\");\n+    int allCount = obj.getInt(\"AllCount\");\n+    \n+    if (allCount == 0) {\n+        return 0;\n+    }\n+    \n+    double percentage = (double) typedCount / allCount * 100;\n+    return Math.round(percentage * 10.0) / 10.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}