{
    "patch": "public static double solve(int[] nums, int n, int h) {\n    double[][][] dp = new double[n + 1][h + 1][h + 1];\n    for (int i = 0; i <= n; i++) {\n        for (int j = 0; j <= h; j++) {\n            Arrays.fill(dp[i][j], -1.0);\n        }\n    }\n    return findProb(nums, dp, n, h, 0, h, h);\n}\n\npublic static double findProb(int[] nums, double[][][] dp, int n, int h, int i, int s1, int s2) {\n    if (i == n) {\n        return s1 > 0 && s2 > 0 ? 1.0 : 0.0;\n    }\n    if (dp[i][s1][s2] != -1.0) {\n        return dp[i][s1][s2];\n    }\n    double ans = 0.0;\n    ans += nums[i] * findProb(nums, dp, n, h, i + 1, Math.max(s1 - 1, 0), Math.max(s2 - 1, 0));\n    ans += (100 - nums[i]) * findProb(nums, dp, n, h, i + 1, s1, Math.max(s2 - 1, 0));\n    ans += (100 - nums[i]) * findProb(nums, dp, n, h, i + 1, Math.max(s1 - 1, 0), s2);\n    ans += nums[i] * (100 - nums[i]) / 100.0 * findProb(nums, dp, n, h, i + 1, s1, s2);\n    dp[i][s1][s2] = ans;\n    return ans;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}