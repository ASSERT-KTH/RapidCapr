{
    "patch": "public Fraction reduce() {\n    int n = numerator;\n    int d = denominator;\n    if (n == 0) {\n        d = 1;\n    } else {\n        int gcd = greatestCommonDivisor(Math.abs(n), d);\n        n /= gcd;\n        d /= gcd;\n    }\n    if (denominator < 0) {\n        n = -n;\n        d = -d;\n    }\n    return getFraction(n, d);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..cd8084b3 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,22 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+public Fraction reduce() {\n+    int n = numerator;\n+    int d = denominator;\n+    if (n == 0) {\n+        d = 1;\n+    } else {\n+        int gcd = greatestCommonDivisor(Math.abs(n), d);\n+        n /= gcd;\n+        d /= gcd;\n+    }\n+    if (denominator < 0) {\n+        n = -n;\n+        d = -d;\n+    }\n+    return getFraction(n, d);\n+}\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}