{
    "patch": "public class StringUtils {\n\n    public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n        if (isEmpty(sequence) || isEmpty(searchChars)) {\n            return false;\n        }\n        final int sequenceLength = sequence.length();\n        final int charsLength = searchChars.length;\n        final int maxCodePoint = Character.MAX_CODE_POINT;\n        final boolean[] charsLookup = new boolean[maxCodePoint + 1];\n\n        for (final char searchChar : searchChars) {\n            if (Character.isHighSurrogate(searchChar)) {\n                continue;\n            }\n            charsLookup[searchChar] = true;\n        }\n\n        for (int i = 0; i < sequenceLength; i++) {\n            final char sequenceChar = sequence.charAt(i);\n            if (charsLookup[sequenceChar]) {\n                if (Character.isHighSurrogate(sequenceChar)) {\n                    if (i < sequenceLength - 1) {\n                        final char sequenceChar2 = sequence.charAt(i + 1);\n                        if (Character.isLowSurrogate(sequenceChar2) &&\n                                charsLookup[sequenceChar2]) {\n                            return true;\n                        }\n                    }\n                } else {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private static boolean isEmpty(final CharSequence cs) {\n        return cs == null || cs.length() == 0;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..e0128a17 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,47 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+\n+    public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+        if (isEmpty(sequence) || isEmpty(searchChars)) {\n+            return false;\n+        }\n+        final int sequenceLength = sequence.length();\n+        final int charsLength = searchChars.length;\n+        final int maxCodePoint = Character.MAX_CODE_POINT;\n+        final boolean[] charsLookup = new boolean[maxCodePoint + 1];\n+\n+        for (final char searchChar : searchChars) {\n+            if (Character.isHighSurrogate(searchChar)) {\n+                continue;\n+            }\n+            charsLookup[searchChar] = true;\n+        }\n+\n+        for (int i = 0; i < sequenceLength; i++) {\n+            final char sequenceChar = sequence.charAt(i);\n+            if (charsLookup[sequenceChar]) {\n+                if (Character.isHighSurrogate(sequenceChar)) {\n+                    if (i < sequenceLength - 1) {\n+                        final char sequenceChar2 = sequence.charAt(i + 1);\n+                        if (Character.isLowSurrogate(sequenceChar2) &&\n+                                charsLookup[sequenceChar2]) {\n+                            return true;\n+                        }\n+                    }\n+                } else {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean isEmpty(final CharSequence cs) {\n+        return cs == null || cs.length() == 0;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}