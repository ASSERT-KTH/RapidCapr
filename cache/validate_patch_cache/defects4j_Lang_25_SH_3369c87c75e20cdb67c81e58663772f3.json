{
    "patch": "boolean success = true;\nfor (int i = 0; i < input.length(); i++) {\n    char c = input.charAt(i);\n    if (c >= 256) {\n        success = false;\n        break;\n    } else if (c == '\\\"' || c == '\\\\' || (c >= 0x20 && c <= 0x7e)) {\n        out.append(c);\n    } else {\n        out.append('\\\\');\n        switch (c) {\n            case '\\b':\n                out.append('b');\n                break;\n            case '\\f':\n                out.append('f');\n                break;\n            case '\\n':\n                out.append('n');\n                break;\n            case '\\r':\n                out.append('r');\n                break;\n            case '\\t':\n                out.append('t');\n                break;\n            default:\n                out.append('u');\n                out.append(toHex((c >> 12) & 0xf));\n                out.append(toHex((c >> 8) & 0xf));\n                out.append(toHex((c >> 4) & 0xf));\n                out.append(toHex((c >> 0) & 0xf));\n                break;\n        }\n    }\n}\nassertTrue(\"One or more errors detected\", success);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}