{
    "patch": "if (millis < iMinMillis || millis > iMaxMillis) {\n    throw new IllegalFieldValueException(\"Cannot parse \\\"\" + text + \"\\\": Value \" + millis\n            + \" for \" + iChrono + \" exceeds range: \" + new LocalDateTime(millis, iChrono));\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..66c8d35c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,10 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+if (millis < iMinMillis || millis > iMaxMillis) {\n+    throw new IllegalFieldValueException(\"Cannot parse \\\"\" + text + \"\\\": Value \" + millis\n+            + \" for \" + iChrono + \" exceeds range: \" + new LocalDateTime(millis, iChrono));\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}