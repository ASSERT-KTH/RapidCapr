{
    "patch": "double[] parameters = new double[]{guess[0], guess[1], guess[2]};\nfor (int i = 0; i < parameters.length; i++) {\n    if (parameters[i] <= 0) {\n        parameters[i] = 1e-9;\n    }\n}\nreturn fit(new Gaussian.Parametric(), parameters);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..effe43dd0 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,13 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+double[] parameters = new double[]{guess[0], guess[1], guess[2]};\n+for (int i = 0; i < parameters.length; i++) {\n+    if (parameters[i] <= 0) {\n+        parameters[i] = 1e-9;\n+    }\n+}\n+return fit(new Gaussian.Parametric(), parameters);\n     }\n \n     /**",
    "result_reason": "org.apache.commons.math.exception.NotStrictlyPositiveException: -5.422 is smaller than, or equal to, the minimum (0)",
    "test_result": "FAIL"
}