{
    "patch": "                // We need to ensure that time is always after the DST gap. If the given local\n                // time is in the overlap/gap period then the offsetAdjusted would be incorrect.\n                // Clamping the local instant to the transition time will give us the correct offset.\n                long clamped = nextLocal - offsetLocal;\n                int nextAdjustment = getOffset(clamped);\n\n                if (nextAdjustment == offsetAdjusted) {\n                    return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..84d73371 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // We need to ensure that time is always after the DST gap. If the given local\n+                // time is in the overlap/gap period then the offsetAdjusted would be incorrect.\n+                // Clamping the local instant to the transition time will give us the correct offset.\n+                long clamped = nextLocal - offsetLocal;\n+                int nextAdjustment = getOffset(clamped);\n+\n+                if (nextAdjustment == offsetAdjusted) {\n+                    return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}