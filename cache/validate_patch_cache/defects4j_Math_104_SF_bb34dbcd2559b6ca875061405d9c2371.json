{
    "patch": "public static double regularizedGammaQ(final double a, final double x) {\n    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n        return Double.NaN;\n    }\n    if (x == 0.0) {\n        return 1.0;\n    }\n    if (x >= a + 1) {\n        return 1 - regularizedGammaP(a, x);\n    }\n    double sum = 1.0 / a;\n    double term = sum;\n    int n = 1;\n    while (Math.abs(term) > 10E-9 * Math.abs(sum)) {\n        term *= x / (a + n);\n        sum += term;\n        n++;\n    }\n    return 1 / Math.exp(a * Math.log(x) - x - Gamma.logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..ffa8ff1ea 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,26 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaQ(final double a, final double x) {\n+    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n+        return Double.NaN;\n+    }\n+    if (x == 0.0) {\n+        return 1.0;\n+    }\n+    if (x >= a + 1) {\n+        return 1 - regularizedGammaP(a, x);\n+    }\n+    double sum = 1.0 / a;\n+    double term = sum;\n+    int n = 1;\n+    while (Math.abs(term) > 10E-9 * Math.abs(sum)) {\n+        term *= x / (a + n);\n+        sum += term;\n+        n++;\n+    }\n+    return 1 / Math.exp(a * Math.log(x) - x - Gamma.logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}