{
    "patch": "      if (value.isFunction()) {\n        Node callNode = reference.getParent();\n        if (callNode.isCall()) {\n          CodingConvention convention = compiler.getCodingConvention();\n          if (convention.isSingletonGetter(callNode.getLastChild())) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..c09695de 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,11 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+      if (value.isFunction()) {\n+        Node callNode = reference.getParent();\n+        if (callNode.isCall()) {\n+          CodingConvention convention = compiler.getCodingConvention();\n+          if (convention.isSingletonGetter(callNode.getLastChild())) {\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}