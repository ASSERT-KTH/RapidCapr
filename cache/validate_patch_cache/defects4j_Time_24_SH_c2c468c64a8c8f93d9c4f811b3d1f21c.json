{
    "patch": "            long newMillis = savedFields[i].set(millis, resetFields);\n            if (newMillis != millis) {\n                if (resetFields) {\n                    int gap = iChrono.getAverageMillisPerYearDividedByTwo();\n                    if (gap + millis <= newMillis && gap + newMillis <= millis) {\n                        throw new IllegalFieldValueException\n                            (savedFields[i].iField.getType(),\n                             \"The parsed date '\" + text + \"' would be invalid as the\" +\n                             \" value of \" + savedFields[i].iField.getName() + \" is \" +\n                             savedFields[i].get() + \" but it should be in the range \" +\n                             (millis + gap) + \" to \" + (millis - gap) + '.');\n                    }\n                }\n                millis = newMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..9bc6c757 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,20 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            long newMillis = savedFields[i].set(millis, resetFields);\n+            if (newMillis != millis) {\n+                if (resetFields) {\n+                    int gap = iChrono.getAverageMillisPerYearDividedByTwo();\n+                    if (gap + millis <= newMillis && gap + newMillis <= millis) {\n+                        throw new IllegalFieldValueException\n+                            (savedFields[i].iField.getType(),\n+                             \"The parsed date '\" + text + \"' would be invalid as the\" +\n+                             \" value of \" + savedFields[i].iField.getName() + \" is \" +\n+                             savedFields[i].get() + \" but it should be in the range \" +\n+                             (millis + gap) + \" to \" + (millis - gap) + '.');\n+                    }\n+                }\n+                millis = newMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}