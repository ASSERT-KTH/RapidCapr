{
    "patch": "                long prevLocal = previousTransition(instantAdjusted);\n                int offsetPrev = getOffset(prevLocal);\n                if (offsetPrev != offsetLocal && offsetPrev == offsetAdjusted) {\n                    return offsetPrev;\n                }\n                long nextLocal = nextTransition(instantAdjusted);\n                int offsetNext = getOffset(nextLocal);\n                if (offsetNext != offsetLocal && offsetNext == offsetAdjusted) {\n                    return offsetNext;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d882fb6d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long prevLocal = previousTransition(instantAdjusted);\n+                int offsetPrev = getOffset(prevLocal);\n+                if (offsetPrev != offsetLocal && offsetPrev == offsetAdjusted) {\n+                    return offsetPrev;\n+                }\n+                long nextLocal = nextTransition(instantAdjusted);\n+                int offsetNext = getOffset(nextLocal);\n+                if (offsetNext != offsetLocal && offsetNext == offsetAdjusted) {\n+                    return offsetNext;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}