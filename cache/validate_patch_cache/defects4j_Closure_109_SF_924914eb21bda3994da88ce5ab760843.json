{
    "patch": "          if (token.getType() == JsDocTokenType.OPEN_ANGLE) {\n              return parseTemplateTypeExpression(token, false);\n          } else {\n              return parseTypeName(token);\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..10ebc0fd 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1904,9 +1904,11 @@ public final class JsDocInfoParser {\n    * ContextTypeExpression := BasicTypeExpression | '?'\n    * For expressions on the right hand side of a this: or new:\n    */\n-  private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n-  }\n+          if (token.getType() == JsDocTokenType.OPEN_ANGLE) {\n+              return parseTemplateTypeExpression(token, false);\n+          } else {\n+              return parseTypeName(token);\n+          }\n \n   /**\n    * BasicTypeExpression := '*' | 'null' | 'undefined' | TypeName",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}