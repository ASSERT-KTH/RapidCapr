{
    "patch": "if ((Character.isLetter(curr)) &&\n    ((i == 0) ||\n     ((!Character.isLetter(txt.charAt(i-1))) &&\n      (Character.isLetter(txt.charAt(i-1)))) &&\n    ((i == txt.length()-1) ||\n     ((!Character.isLetter(txt.charAt(i+1))) &&\n      (Character.isLetter(txt.charAt(i+1))))) &&\n    (Character.isUpperCase(curr)))\n{\n    count++;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SPLIT_WORDS.java b/src/main/java/humaneval/buggy/SPLIT_WORDS.java\nindex 780a4b4..1ced384 100644\n--- a/src/main/java/humaneval/buggy/SPLIT_WORDS.java\n+++ b/src/main/java/humaneval/buggy/SPLIT_WORDS.java\n@@ -20,7 +20,17 @@ public class SPLIT_WORDS {\n             int count = 0;\n             for(int i = 0; i < txt.length(); i++) {\n                 char curr = txt.charAt(i);\n-                if(Character.isUpperCase(curr) && ((curr - 'a') % 2) == 0) count++;\n+if ((Character.isLetter(curr)) &&\n+    ((i == 0) ||\n+     ((!Character.isLetter(txt.charAt(i-1))) &&\n+      (Character.isLetter(txt.charAt(i-1)))) &&\n+    ((i == txt.length()-1) ||\n+     ((!Character.isLetter(txt.charAt(i+1))) &&\n+      (Character.isLetter(txt.charAt(i+1))))) &&\n+    (Character.isUpperCase(curr)))\n+{\n+    count++;\n+}\n             }\n             String[] result = {Integer.toString(count)};\n             return result;",
    "result_reason": " /tmp/humaneval-SPLIT_WORDS/src/main/java/humaneval/buggy/SPLIT_WORDS.java:[30,35] ')' expected",
    "test_result": "ERROR"
}