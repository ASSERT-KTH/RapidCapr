{
    "patch": "import org.mockito.internal.creation.bytebuddy.MockMethodInterceptor;\nimport org.mockito.internal.util.MockUtil;\nimport org.mockito.invocation.Invocation;\nimport org.mockito.mock.MockCreationSettings;\nimport org.mockito.plugins.MockMaker;\n\nimport java.util.List;\n\npublic <T> void resetMock(T mock) {\n    MockCreationSettings<T> settings = new MockUtil().getMockSettings(mock);\n    Class<?> type = settings.getTypeToMock();\n    MockMaker mockMaker = settings.getMockitoPlugins().getMockMaker();\n    MockMethodInterceptor<T> oldInterceptor = (MockMethodInterceptor<T>) mockMaker.getHandler(mock);\n    List<MockMethodInterceptor> otherInterceptors = oldInterceptor.getMocksForSameHandler();\n    MockMethodInterceptor<T> newInterceptor = new MockMethodInterceptor<T>(type, otherInterceptors);\n    for (MockMethodInterceptor interceptor : otherInterceptors) {\n        interceptor.setHandler(newInterceptor);\n    }\n    mockMaker.setInterceptedHandler(mock, newInterceptor);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..ba0fee7c6 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,27 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+import org.mockito.internal.creation.bytebuddy.MockMethodInterceptor;\n+import org.mockito.internal.util.MockUtil;\n+import org.mockito.invocation.Invocation;\n+import org.mockito.mock.MockCreationSettings;\n+import org.mockito.plugins.MockMaker;\n+\n+import java.util.List;\n+\n+public <T> void resetMock(T mock) {\n+    MockCreationSettings<T> settings = new MockUtil().getMockSettings(mock);\n+    Class<?> type = settings.getTypeToMock();\n+    MockMaker mockMaker = settings.getMockitoPlugins().getMockMaker();\n+    MockMethodInterceptor<T> oldInterceptor = (MockMethodInterceptor<T>) mockMaker.getHandler(mock);\n+    List<MockMethodInterceptor> otherInterceptors = oldInterceptor.getMocksForSameHandler();\n+    MockMethodInterceptor<T> newInterceptor = new MockMethodInterceptor<T>(type, otherInterceptors);\n+    for (MockMethodInterceptor interceptor : otherInterceptors) {\n+        interceptor.setHandler(newInterceptor);\n+    }\n+    mockMaker.setInterceptedHandler(mock, newInterceptor);\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}