{
    "patch": "if (c == '\\\\') {\n    idxSrc++;\n    if (idxSrc < lenSrc) {\n        switch (src.charAt(idxSrc)) {\n            case 'r':\n                target.append('\\r');\n                break;\n            case 'n':\n                target.append('\\n');\n                break;\n            case 't':\n                target.append('\\t');\n                break;\n            case 'f':\n                target.append('\\f');\n                break;\n            case '\\\\':\n                target.append('\\\\');\n                break;\n            case '\\\"':\n                target.append('\\\"');\n                break;\n            default:\n                // was an incorrect escape - skip it\n                idxSrc--;\n                target.append('\\\\');\n                break;\n        }\n    } else {\n        target.append('\\\\');\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}