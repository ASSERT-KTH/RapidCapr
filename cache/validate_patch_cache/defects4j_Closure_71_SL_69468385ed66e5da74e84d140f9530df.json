{
    "patch": "      boolean isOverride = parent != null && parent.getFirstChild() == getprop &&\n          (parent.getType() == Token.ASSIGN || parent.getType() == Token.ASSIGN_ADD ||\n              parent.getType() == Token.ASSIGN_BITAND || parent.getType() == Token.ASSIGN_BITOR ||\n              parent.getType() == Token.ASSIGN_BITXOR || parent.getType() == Token.ASSIGN_DIV ||\n              parent.getType() == Token.ASSIGN_MOD || parent.getType() == Token.ASSIGN_MUL ||\n              parent.getType() == Token.ASSIGN_SHEQ || parent.getType() == Token.ASSIGN_SHL ||\n              parent.getType() == Token.ASSIGN_SHR || parent.getType() == Token.ASSIGN_SUB ||\n              parent.getType() == Token.ASSIGN_USHR);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..a3e34a35 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -413,7 +413,14 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n     if (objectType != null) {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n-      boolean isOverride = t.inGlobalScope() &&\n+      boolean isOverride = parent != null && parent.getFirstChild() == getprop &&\n+          (parent.getType() == Token.ASSIGN || parent.getType() == Token.ASSIGN_ADD ||\n+              parent.getType() == Token.ASSIGN_BITAND || parent.getType() == Token.ASSIGN_BITOR ||\n+              parent.getType() == Token.ASSIGN_BITXOR || parent.getType() == Token.ASSIGN_DIV ||\n+              parent.getType() == Token.ASSIGN_MOD || parent.getType() == Token.ASSIGN_MUL ||\n+              parent.getType() == Token.ASSIGN_SHEQ || parent.getType() == Token.ASSIGN_SHL ||\n+              parent.getType() == Token.ASSIGN_SHR || parent.getType() == Token.ASSIGN_SUB ||\n+              parent.getType() == Token.ASSIGN_USHR);\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}