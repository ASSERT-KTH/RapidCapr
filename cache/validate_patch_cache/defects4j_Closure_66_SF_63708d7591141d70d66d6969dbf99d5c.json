{
    "patch": "public static double getTypedPercent(String json) {\n    int total = 0;\n    int typed = 0;\n    int index = 0;\n    while ((index = json.indexOf(\"tags\", index)) > -1) {\n        index += \"tags\".length() + 4;\n        total++;\n        if (json.charAt(index - 2) == 't' && json.charAt(index - 3) == 'y' && json.charAt(index - 4) == 'p') {\n            typed++;\n        }\n    }\n    return (double) typed / total * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..7663db35 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    int total = 0;\n+    int typed = 0;\n+    int index = 0;\n+    while ((index = json.indexOf(\"tags\", index)) > -1) {\n+        index += \"tags\".length() + 4;\n+        total++;\n+        if (json.charAt(index - 2) == 't' && json.charAt(index - 3) == 'y' && json.charAt(index - 4) == 'p') {\n+            typed++;\n+        }\n+    }\n+    return (double) typed / total * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}