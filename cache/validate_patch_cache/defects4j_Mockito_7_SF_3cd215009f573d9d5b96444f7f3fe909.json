{
    "patch": "private static Type getActualTypeArgumentFor(TypeVariable<?> typeVariable) {\n    // get the owner of the type variable, which should be a parameterized type\n    ParameterizedType parameterizedType = (ParameterizedType) typeVariable.getGenericDeclaration();\n\n    // find the index of the type variable in the parameterized type's type arguments\n    int index = Arrays.asList(parameterizedType.getActualTypeArguments())\n            .indexOf(typeVariable);\n\n    if (index == -1) {\n        return null;\n    }\n\n    // return the corresponding actual type argument\n    return parameterizedType.getActualTypeArguments()[index];\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..432412faf 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,22 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private static Type getActualTypeArgumentFor(TypeVariable<?> typeVariable) {\n+    // get the owner of the type variable, which should be a parameterized type\n+    ParameterizedType parameterizedType = (ParameterizedType) typeVariable.getGenericDeclaration();\n+\n+    // find the index of the type variable in the parameterized type's type arguments\n+    int index = Arrays.asList(parameterizedType.getActualTypeArguments())\n+            .indexOf(typeVariable);\n+\n+    if (index == -1) {\n+        return null;\n+    }\n+\n+    // return the corresponding actual type argument\n+    return parameterizedType.getActualTypeArguments()[index];\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}