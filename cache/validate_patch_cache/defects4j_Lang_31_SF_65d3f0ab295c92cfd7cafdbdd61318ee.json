{
    "patch": "import java.lang.Character;\n\npublic class StringUtils {\n    \n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || searchChars == null) {\n            return false;\n        }\n        int len = str.length();\n        int searchLen = searchChars.length;\n        int i = 0;\n        for (; i < len; i++) {\n            char ch = str.charAt(i);\n            if (Character.isHighSurrogate(ch)) {\n                if (i + 1 < len && searchLen != 0) {\n                    char[] surrogatePair = { ch, str.charAt(i + 1) };\n                    if (containsAny(surrogatePair, 0, 2, searchChars, 0, searchLen)) {\n                        return true;\n                    }\n                }\n            } else {\n                if (containsAny(new char[] { ch }, 0, 1, searchChars, 0, searchLen)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private static boolean containsAny(char[] arr1, int offset1, int len1,\n                                        char[] arr2, int offset2, int len2) {\n        int i = offset1;\n        for (; i < offset1 + len1; i++) {\n            char ch1 = arr1[i];\n            int j = offset2;\n            for (; j < offset2 + len2; j++) {\n                char ch2 = arr2[j];\n                if (ch1 == ch2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..c17dc614 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,51 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.lang.Character;\n+\n+public class StringUtils {\n+    \n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || searchChars == null) {\n+            return false;\n+        }\n+        int len = str.length();\n+        int searchLen = searchChars.length;\n+        int i = 0;\n+        for (; i < len; i++) {\n+            char ch = str.charAt(i);\n+            if (Character.isHighSurrogate(ch)) {\n+                if (i + 1 < len && searchLen != 0) {\n+                    char[] surrogatePair = { ch, str.charAt(i + 1) };\n+                    if (containsAny(surrogatePair, 0, 2, searchChars, 0, searchLen)) {\n+                        return true;\n+                    }\n+                }\n+            } else {\n+                if (containsAny(new char[] { ch }, 0, 1, searchChars, 0, searchLen)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean containsAny(char[] arr1, int offset1, int len1,\n+                                        char[] arr2, int offset2, int len2) {\n+        int i = offset1;\n+        for (; i < offset1 + len1; i++) {\n+            char ch1 = arr1[i];\n+            int j = offset2;\n+            for (; j < offset2 + len2; j++) {\n+                char ch2 = arr2[j];\n+                if (ch1 == ch2) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}