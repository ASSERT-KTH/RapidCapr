{
    "patch": "private void handleBlockComment(Comment comment) {\n+    if(comment == null || comment.getValue() == null)\n+        return;\n+\n+    boolean containsSuspectTag = comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1;\n+    if (containsSuspectTag) {\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n           sourceName,\n           comment.getLineno(), \"\", 0);\n     }\n   }\n }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..c3109b3a 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -249,7 +249,19 @@ class IRFactory {\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n   private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n+private void handleBlockComment(Comment comment) {\n++    if(comment == null || comment.getValue() == null)\n++        return;\n++\n++    boolean containsSuspectTag = comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1;\n++    if (containsSuspectTag) {\n+       errorReporter.warning(\n+           SUSPICIOUS_COMMENT_WARNING,\n+           sourceName,\n+           comment.getLineno(), \"\", 0);\n+     }\n+   }\n+ }\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n           sourceName,",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}