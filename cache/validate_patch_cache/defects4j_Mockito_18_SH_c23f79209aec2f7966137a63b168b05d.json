{
    "patch": "public ReturnValues execute(Method method, Object[] args) {\n    for (int i = 0; i < mocks.length; i++) {\n        try {\n            return ReturnValuesFactory.create(mocks[i].getClass(), method, mocks[i], args);\n        } catch (Throwable e) {\n            // catching throwable for any error\n        }\n    }\n    // if no mocks were able to return anything, return null or default value accordingly\n    Class<?> returnType = method.getReturnType();\n    return ReturnValuesFactory.create(returnType, null);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}