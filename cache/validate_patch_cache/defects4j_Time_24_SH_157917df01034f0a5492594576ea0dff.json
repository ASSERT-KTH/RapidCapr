{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            // reset fields that may have been changed\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].reset(millis);\n            }\n            if (savedFields[0].getFieldType() == DateTimeFieldType.monthOfYear() &&\n                savedFields[1].getFieldType() == DateTimeFieldType.dayOfMonth() &&\n                savedFields[2].getFieldType() == DateTimeFieldType.year() &&\n                savedFields[3].getFieldType() == DateTimeFieldType.weekOfWeekyear()) {\n                // weekyear cannot be altered, so restore to ensure no change\n                savedFields[2].set(millis, iDefaultYear);\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..8407479e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].set(millis, resetFields);\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            // reset fields that may have been changed\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].reset(millis);\n+            }\n+            if (savedFields[0].getFieldType() == DateTimeFieldType.monthOfYear() &&\n+                savedFields[1].getFieldType() == DateTimeFieldType.dayOfMonth() &&\n+                savedFields[2].getFieldType() == DateTimeFieldType.year() &&\n+                savedFields[3].getFieldType() == DateTimeFieldType.weekOfWeekyear()) {\n+                // weekyear cannot be altered, so restore to ensure no change\n+                savedFields[2].set(millis, iDefaultYear);\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}