{
    "patch": "public static boolean containsAny(String str, char[] chars) {\n    if (str != null && chars != null) {\n        for (int i = 0; i < str.length(); i++) {\n            char c = str.charAt(i);\n            for (char aChar : chars) {\n                if (aChar == c) {\n                    return true;\n                }\n                if (Character.isHighSurrogate(aChar)) {\n                    if (i < str.length() - 1 && Character.isLowSurrogate(str.charAt(i + 1))) {\n                        int codePoint = Character.toCodePoint(aChar, str.charAt(i + 1));\n                        if (str.codePoints().anyMatch(cp -> cp == codePoint)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..c5d68e1e 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,27 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] chars) {\n+    if (str != null && chars != null) {\n+        for (int i = 0; i < str.length(); i++) {\n+            char c = str.charAt(i);\n+            for (char aChar : chars) {\n+                if (aChar == c) {\n+                    return true;\n+                }\n+                if (Character.isHighSurrogate(aChar)) {\n+                    if (i < str.length() - 1 && Character.isLowSurrogate(str.charAt(i + 1))) {\n+                        int codePoint = Character.toCodePoint(aChar, str.charAt(i + 1));\n+                        if (str.codePoints().anyMatch(cp -> cp == codePoint)) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}