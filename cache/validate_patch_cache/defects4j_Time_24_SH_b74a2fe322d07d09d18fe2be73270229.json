{
    "patch": "            if (savedFields[i].isSaved()) {\n                DurationField field = savedFields[i].iField.getDurationField();\n                long duration = field.getUnitMillis() * savedFields[i].getValue();\n                millis = savedFields[i].iField.add(millis, duration);\n                if (millis < iMillis) {\n                    throw new IllegalFieldValueException(field.getType(),\n                            \"The parsed date exceeds the maximum supported date (\" + new Date(Long.MAX_VALUE) + \")\");\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f789ddbc 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].isSaved()) {\n+                DurationField field = savedFields[i].iField.getDurationField();\n+                long duration = field.getUnitMillis() * savedFields[i].getValue();\n+                millis = savedFields[i].iField.add(millis, duration);\n+                if (millis < iMillis) {\n+                    throw new IllegalFieldValueException(field.getType(),\n+                            \"The parsed date exceeds the maximum supported date (\" + new Date(Long.MAX_VALUE) + \")\");\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}