{
    "patch": "Map<Integer, Integer> countMap = new HashMap<>();\nfor (int i : lst) {\n    if (i >= 0 && i <= max) {\n        countMap.put(i, countMap.getOrDefault(i, 0) + 1);\n    }\n}\n\nfor (int i = 0; i <= max; i++) {\n    if (countMap.containsKey(i) && countMap.get(i) >= i) {\n        result = i;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SEARCH.java b/src/main/java/humaneval/buggy/SEARCH.java\nindex 285deda..9eacb93 100644\n--- a/src/main/java/humaneval/buggy/SEARCH.java\n+++ b/src/main/java/humaneval/buggy/SEARCH.java\n@@ -18,9 +18,18 @@ public class SEARCH {\n         }\n \n         int result = -1;\n-        int[] frq = new int[max];\n-        for (int i = 0; i < lst.length; i += 1)  frq[i] += 1;\n-        for (int i = 0; i < frq.length; i += 1) if (frq[i] >= i) result = i;\n+Map<Integer, Integer> countMap = new HashMap<>();\n+for (int i : lst) {\n+    if (i >= 0 && i <= max) {\n+        countMap.put(i, countMap.getOrDefault(i, 0) + 1);\n+    }\n+}\n+\n+for (int i = 0; i <= max; i++) {\n+    if (countMap.containsKey(i) && countMap.get(i) >= i) {\n+        result = i;\n+    }\n+}\n         \n         return result;\n     }",
    "result_reason": " /tmp/humaneval-SEARCH/src/main/java/humaneval/buggy/SEARCH.java:[21,1] cannot find symbol",
    "test_result": "ERROR"
}