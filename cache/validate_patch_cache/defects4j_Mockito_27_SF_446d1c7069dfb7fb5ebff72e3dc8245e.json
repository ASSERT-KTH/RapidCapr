{
    "patch": "    public <T> void resetMock(T mock) {\n        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n\n        if (oldMockHandler instanceof MockMethodInterceptor) {\n            MockMethodInterceptor<T> oldMethodInterceptor = (MockMethodInterceptor<T>) oldMockHandler;\n            MockHandler<T> newMockHandler = new MockHandler<>(oldMethodInterceptor.getDelegate());\n            MockMethodInterceptor<T> newMethodInterceptor = new MockMethodInterceptor<>(newMockHandler, oldMethodInterceptor.getMockSettingsImpl());\n            Mockito.mockingDetails(mock).getMockCreationSettings().getInterceptor().setMockHandler(newMethodInterceptor);\n        } else {\n            throw new RuntimeException(\"Cannot reset non-mock object: \" + mock);\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..6b745db6d 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+    public <T> void resetMock(T mock) {\n+        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+\n+        if (oldMockHandler instanceof MockMethodInterceptor) {\n+            MockMethodInterceptor<T> oldMethodInterceptor = (MockMethodInterceptor<T>) oldMockHandler;\n+            MockHandler<T> newMockHandler = new MockHandler<>(oldMethodInterceptor.getDelegate());\n+            MockMethodInterceptor<T> newMethodInterceptor = new MockMethodInterceptor<>(newMockHandler, oldMethodInterceptor.getMockSettingsImpl());\n+            Mockito.mockingDetails(mock).getMockCreationSettings().getInterceptor().setMockHandler(newMethodInterceptor);\n+        } else {\n+            throw new RuntimeException(\"Cannot reset non-mock object: \" + mock);\n+        }\n+    }\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}