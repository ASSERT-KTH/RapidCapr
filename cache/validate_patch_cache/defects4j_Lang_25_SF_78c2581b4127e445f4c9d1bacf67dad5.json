{
    "patch": "public static String unescape(String input) {\n    final StringBuilder output = new StringBuilder(input.length());\n    for (int i = 0; i < input.length(); i++) {\n        char ch = input.charAt(i);\n        if (ch == '\\\\') {\n            i++;\n            if (i < input.length()) {\n                ch = input.charAt(i);\n                if (ch == 'n') {\n                    ch = '\\n';\n                } else if (ch == '\\\"') {\n                    ch = '\\\"';\n                } else if (ch == '\\'') {\n                    ch = '\\'';\n                } else if (ch == '\\\\') {\n                    ch = '\\\\';\n                } else {\n                    // invalid escape sequence ignore it.\n                    i--;\n                }\n            }\n        }\n        output.append(ch);\n    }\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..19aed112 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,32 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String input) {\n+    final StringBuilder output = new StringBuilder(input.length());\n+    for (int i = 0; i < input.length(); i++) {\n+        char ch = input.charAt(i);\n+        if (ch == '\\\\') {\n+            i++;\n+            if (i < input.length()) {\n+                ch = input.charAt(i);\n+                if (ch == 'n') {\n+                    ch = '\\n';\n+                } else if (ch == '\\\"') {\n+                    ch = '\\\"';\n+                } else if (ch == '\\'') {\n+                    ch = '\\'';\n+                } else if (ch == '\\\\') {\n+                    ch = '\\\\';\n+                } else {\n+                    // invalid escape sequence ignore it.\n+                    i--;\n+                }\n+            }\n+        }\n+        output.append(ch);\n+    }\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}