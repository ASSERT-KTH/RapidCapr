{
    "patch": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), true);\n              if (astParameter.isName()) {\n                String paramName = astParameter.getString();\n                Symbol paramSymbol = symbolTable.getSymbol(paramName);\n                if (paramSymbol != null) {\n                  errorReporter.warning(\n                      DuplicateVariable.BewareDuplicateVariableDefn(paramName),\n                      paramNameNode, null, null);\n                }\n              }\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..b26c8d4f 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1743,6 +1743,15 @@ final class TypedScopeCreator implements ScopeCreator {\n             if (jsDocParameter != null) {\n               defineSlot(astParameter, functionNode,\n                   jsDocParameter.getJSType(), true);\n+              if (astParameter.isName()) {\n+                String paramName = astParameter.getString();\n+                Symbol paramSymbol = symbolTable.getSymbol(paramName);\n+                if (paramSymbol != null) {\n+                  errorReporter.warning(\n+                      DuplicateVariable.BewareDuplicateVariableDefn(paramName),\n+                      paramNameNode, null, null);\n+                }\n+              }\n               jsDocParameter = jsDocParameter.getNext();\n             } else {\n               defineSlot(astParameter, functionNode, null, true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}