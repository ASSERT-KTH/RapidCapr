{
    "patch": "public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n    if (start < 0) {\n        throw new IllegalArgumentException(\"Start index cannot be negative.\");\n    }\n    if (end < start) {\n        throw new IllegalArgumentException(\"End index must be greater than start index.\");\n    }\n    TimeSeries copy = (TimeSeries) super.clone();\n    copy.clear();\n    int numItems = getItemCount();\n    if (numItems <= 0) {\n        throw new IllegalArgumentException(\"Cannot copy an empty TimeSeries.\");\n    }\n    int endIndex = Math.min(end, numItems - 1);\n    int curIndex = start;\n    for (int i = 0; i < numItems; i++) {\n        TimeSeriesDataItem item = getDataItem(i);\n        if (i == curIndex) {\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n            if (curIndex >= endIndex) {\n                break;  // stop copying if already reached the end index\n            }\n            curIndex++;\n        } else if (i > curIndex) {\n            break;  // stop copying if already passed the end index\n        }\n    }\n    if (copy.getItemCount() <= 0) {\n        throw new IllegalArgumentException(\"No data within specified range.\");\n    }\n    return copy;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..04260cd 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,43 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n+    if (start < 0) {\n+        throw new IllegalArgumentException(\"Start index cannot be negative.\");\n+    }\n+    if (end < start) {\n+        throw new IllegalArgumentException(\"End index must be greater than start index.\");\n+    }\n+    TimeSeries copy = (TimeSeries) super.clone();\n+    copy.clear();\n+    int numItems = getItemCount();\n+    if (numItems <= 0) {\n+        throw new IllegalArgumentException(\"Cannot copy an empty TimeSeries.\");\n+    }\n+    int endIndex = Math.min(end, numItems - 1);\n+    int curIndex = start;\n+    for (int i = 0; i < numItems; i++) {\n+        TimeSeriesDataItem item = getDataItem(i);\n+        if (i == curIndex) {\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+            try {\n+                copy.add(clone);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+            if (curIndex >= endIndex) {\n+                break;  // stop copying if already reached the end index\n+            }\n+            curIndex++;\n+        } else if (i > curIndex) {\n+            break;  // stop copying if already passed the end index\n+        }\n+    }\n+    if (copy.getItemCount() <= 0) {\n+        throw new IllegalArgumentException(\"No data within specified range.\");\n+    }\n+    return copy;\n+}\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "java.lang.IllegalArgumentException: Cannot copy an empty TimeSeries.",
    "test_result": "FAIL"
}