{
    "patch": "public static String unescape(String input) {\n    StringBuilder result = new StringBuilder();\n    int i = 0;\n    int lastStart = 0;\n    while (i < input.length()) {\n        char ch = input.charAt(i);\n        if (ch == '\\\\') {\n            result.append(input.substring(lastStart, i));\n            if (i + 1 < input.length()) {\n                char nextChar = input.charAt(i + 1);\n                switch (nextChar) {\n                    case '\\\\':\n                        result.append('\\\\');\n                        break;\n                    case 'n':\n                        result.append('\\n');\n                        break;\n                    case 'r':\n                        result.append('\\r');\n                        break;\n                    case 't':\n                        result.append('\\t');\n                        break;\n                    case '\\\"':\n                        result.append('\\\"');\n                        break;\n                    default:\n                        // Invalid escape, ignore and continue\n                        break;\n                }\n                lastStart = i + 2; \n                i = lastStart;\n            }\n        } else {\n            i++;\n        }\n    }\n    result.append(input.substring(lastStart));\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}