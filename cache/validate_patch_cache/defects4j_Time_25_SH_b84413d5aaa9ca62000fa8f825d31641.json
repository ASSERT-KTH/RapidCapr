{
    "patch": "                // We need to check if instantLocal is at the transition point or not\n                int offsetNext = getOffset(nextLocal);\n                if (offsetLocal != offsetNext) {\n                    // find out the time before the transition\n                    long nextLocalMinusOne = nextTransition(nextLocal - 1);\n                    if (nextAdjusted >= nextLocalMinusOne - offsetLocal) {\n                        return offsetNext;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..325d2a2d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // We need to check if instantLocal is at the transition point or not\n+                int offsetNext = getOffset(nextLocal);\n+                if (offsetLocal != offsetNext) {\n+                    // find out the time before the transition\n+                    long nextLocalMinusOne = nextTransition(nextLocal - 1);\n+                    if (nextAdjusted >= nextLocalMinusOne - offsetLocal) {\n+                        return offsetNext;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}