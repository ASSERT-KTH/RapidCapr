{
    "patch": "public static boolean cycpattern_check(String a, String b) {\n    int n = a.length();\n    int m = b.length();\n    if (n < m) return false;\n\n    // Check if b is a substring of a twice\n    String a_twice = a + a;\n    if (a_twice.contains(b + b)) return true;\n\n    // Check if b can be obtained by cyclically permuting a substring of a\n    for (int i = 1; i < n; i++) {\n        if (i + m > n) break;\n        String sub_a = a.substring(i) + a.substring(0, i);\n        if (sub_a.equals(b)) return true;\n    }\n\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..9a0fbf3 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -9,14 +9,22 @@ package humaneval.buggy;\n // cycpattern_check(\"himenss\",\"simen\") => True\n \n public class CYCPATTERN_CHECK {\n-    public static boolean cycpattern_check(String a, String b) {\n-        int l = b.length();\n-        String pat = b;\n-        for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n-                if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n-            }\n-        }\n-        return false;\n+public static boolean cycpattern_check(String a, String b) {\n+    int n = a.length();\n+    int m = b.length();\n+    if (n < m) return false;\n+\n+    // Check if b is a substring of a twice\n+    String a_twice = a + a;\n+    if (a_twice.contains(b + b)) return true;\n+\n+    // Check if b can be obtained by cyclically permuting a substring of a\n+    for (int i = 1; i < n; i++) {\n+        if (i + m > n) break;\n+        String sub_a = a.substring(i) + a.substring(0, i);\n+        if (sub_a.equals(b)) return true;\n     }\n+\n+    return false;\n+}\n }",
    "result_reason": "   TEST_CYCPATTERN_CHECK.test_1:15 expected:<false> but was:<true>",
    "test_result": "FAIL"
}