{
    "patch": "if (count > 0) {\n    // alter base year for parsing if first field is month or day\n    DurationField months = DurationFieldType.months().getField(iChrono);\n    DurationField days = DurationFieldType.days().getField(iChrono);\n    DurationField first = savedFields[0].iField.getDurationField();\n    if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n        long year = iDefaultYear;\n        DateTimeField wbyearField = iChrono.weekyear();\n        DateTimeField yearField = iChrono.year();\n        \n        // Transition from weekyear to year around year boundary\n        // Week 1 of year 2 is the same as week 52 or 53 of year 1\n        // Week 1 of year 1 is the same as week 52 or 53 of the previous year\n        //\n        // We will try to determine if this is the case and adjust the year accordingly\n        SavedField wbyearFieldSaved = null;\n        long wbyear = 0;\n        boolean wbyearSet = false;\n        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            DateTimeField field = savedField.iField;\n            if (field == wbyearField) {\n                wbyearFieldSaved = savedField;\n                wbyear = savedField.iValue;\n                wbyearSet = true;\n                continue;\n            }\n            if (!wbyearSet) {\n                continue;\n            }\n            // Check if there is a change in the weekyear field value - this indicates week-based year\n            if (field == yearField) {\n                long yearVal = yearField.remainder(millis);\n                if (yearVal == year - 1 || yearVal == year + 1) {\n                    long weekyear = wbyear;\n                    if (yearVal == year + 1 && compareReverse(first, days) <= 0) {\n                        weekyear--;\n                    } else if (yearVal == year - 1 && compareReverse(first, days) >= 0) {\n                        weekyear++;\n                    }\n                    saveField(wbyearField, weekyear);\n                    millis = wbyearFieldSaved.set(millis, false);\n                }\n                break;\n            }\n        }\n        if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n            saveField(yearField, year);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..932667e9 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,57 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+if (count > 0) {\n+    // alter base year for parsing if first field is month or day\n+    DurationField months = DurationFieldType.months().getField(iChrono);\n+    DurationField days = DurationFieldType.days().getField(iChrono);\n+    DurationField first = savedFields[0].iField.getDurationField();\n+    if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n+        long year = iDefaultYear;\n+        DateTimeField wbyearField = iChrono.weekyear();\n+        DateTimeField yearField = iChrono.year();\n+        \n+        // Transition from weekyear to year around year boundary\n+        // Week 1 of year 2 is the same as week 52 or 53 of year 1\n+        // Week 1 of year 1 is the same as week 52 or 53 of the previous year\n+        //\n+        // We will try to determine if this is the case and adjust the year accordingly\n+        SavedField wbyearFieldSaved = null;\n+        long wbyear = 0;\n+        boolean wbyearSet = false;\n+        for (int i = 0; i < count; i++) {\n+            SavedField savedField = savedFields[i];\n+            DateTimeField field = savedField.iField;\n+            if (field == wbyearField) {\n+                wbyearFieldSaved = savedField;\n+                wbyear = savedField.iValue;\n+                wbyearSet = true;\n+                continue;\n+            }\n+            if (!wbyearSet) {\n+                continue;\n+            }\n+            // Check if there is a change in the weekyear field value - this indicates week-based year\n+            if (field == yearField) {\n+                long yearVal = yearField.remainder(millis);\n+                if (yearVal == year - 1 || yearVal == year + 1) {\n+                    long weekyear = wbyear;\n+                    if (yearVal == year + 1 && compareReverse(first, days) <= 0) {\n+                        weekyear--;\n+                    } else if (yearVal == year - 1 && compareReverse(first, days) >= 0) {\n+                        weekyear++;\n+                    }\n+                    saveField(wbyearField, weekyear);\n+                    millis = wbyearFieldSaved.set(millis, false);\n+                }\n+                break;\n+            }\n+        }\n+        if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n+            saveField(yearField, year);\n+        }\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: no suitable method found for saveField(DateTimeField,long)",
    "test_result": "ERROR"
}