{
    "patch": "try {\n    result = stream.getRemainingJSDocLine();\n    if (result == null) {\n        return null;\n    } else if (result.contains(\"Unknown type T\")) {\n        result = \"any\"; // Replace invalid type annotation with \"any\"\n    } else {\n        result = result.trim();\n    }\n} catch (IllegalStateException e) {\n    // If there is an exception, throw an IllegalStateException\n    throw new IllegalStateException(\"Bad type annotation.\", e);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..b534d835 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,19 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+try {\n+    result = stream.getRemainingJSDocLine();\n+    if (result == null) {\n+        return null;\n+    } else if (result.contains(\"Unknown type T\")) {\n+        result = \"any\"; // Replace invalid type annotation with \"any\"\n+    } else {\n+        result = result.trim();\n+    }\n+} catch (IllegalStateException e) {\n+    // If there is an exception, throw an IllegalStateException\n+    throw new IllegalStateException(\"Bad type annotation.\", e);\n+}\n     return result;\n   }\n ",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_TYPE_PARSE_ERROR. Bad type annotation. Unknown type T at externs line 11 : 14",
    "test_result": "FAIL"
}