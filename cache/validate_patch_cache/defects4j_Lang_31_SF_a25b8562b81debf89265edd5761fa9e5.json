{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int csLen = searchChars.length - 1;\n    for (int i = 0; i < strLen; i++) {\n        char ch = str.charAt(i);\n        if (ch <= csLen && searchChars[ch] != '\\0') {\n            return true;\n        }\n        if (ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n            if (i < strLen - 1) {\n                char ch2 = str.charAt(i + 1);\n                if (ch2 >= Character.MIN_LOW_SURROGATE && ch2 <= Character.MAX_LOW_SURROGATE) {\n                    int codePoint = Character.toCodePoint(ch, ch2);\n                    if (codePoint <= searchChars.length\n                            && (searchChars[codePoint - 1] != '\\0' || searchChars[codePoint] != '\\0')) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..cc3fae09 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int csLen = searchChars.length - 1;\n+    for (int i = 0; i < strLen; i++) {\n+        char ch = str.charAt(i);\n+        if (ch <= csLen && searchChars[ch] != '\\0') {\n+            return true;\n+        }\n+        if (ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n+            if (i < strLen - 1) {\n+                char ch2 = str.charAt(i + 1);\n+                if (ch2 >= Character.MIN_LOW_SURROGATE && ch2 <= Character.MAX_LOW_SURROGATE) {\n+                    int codePoint = Character.toCodePoint(ch, ch2);\n+                    if (codePoint <= searchChars.length\n+                            && (searchChars[codePoint - 1] != '\\0' || searchChars[codePoint] != '\\0')) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}