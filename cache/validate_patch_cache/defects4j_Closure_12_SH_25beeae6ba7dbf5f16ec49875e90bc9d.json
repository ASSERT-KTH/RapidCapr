{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode instanceof TryCatchBlockNode) {\n      TryCatchBlockNode tryCatchBlockNode = (TryCatchBlockNode) cfgNode;\n      return tryCatchBlockNode.handler != null && hasExceptionHandler(tryCatchBlockNode.handler);\n    }\n    if (cfgNode instanceof JumpInsnNode) {\n      JumpInsnNode jumpInsn = (JumpInsnNode) cfgNode;\n      if (jumpInsn.getOpcode() == Opcodes.GOTO) {\n        return hasExceptionHandler(ControlFlowGraph.getNext(cfgNode));\n      }\n    }\n    List<Node> successors = ControlFlowGraph.getSuccessors(cfgNode);\n    if (successors.size() == 1) {\n      return hasExceptionHandler(successors.get(0));\n    } else if (successors.size() == 2) {\n      return hasExceptionHandler(successors.get(0)) || hasExceptionHandler(successors.get(1));\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..8bd4a0d8 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,25 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode instanceof TryCatchBlockNode) {\n+      TryCatchBlockNode tryCatchBlockNode = (TryCatchBlockNode) cfgNode;\n+      return tryCatchBlockNode.handler != null && hasExceptionHandler(tryCatchBlockNode.handler);\n+    }\n+    if (cfgNode instanceof JumpInsnNode) {\n+      JumpInsnNode jumpInsn = (JumpInsnNode) cfgNode;\n+      if (jumpInsn.getOpcode() == Opcodes.GOTO) {\n+        return hasExceptionHandler(ControlFlowGraph.getNext(cfgNode));\n+      }\n+    }\n+    List<Node> successors = ControlFlowGraph.getSuccessors(cfgNode);\n+    if (successors.size() == 1) {\n+      return hasExceptionHandler(successors.get(0));\n+    } else if (successors.size() == 2) {\n+      return hasExceptionHandler(successors.get(0)) || hasExceptionHandler(successors.get(1));\n+    }\n+    return false;\n+  }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}