{
    "patch": "public static String decode(String text, String enc) throws UnsupportedEncodingException {\n    byte[] bytes = new byte[text.length() / 2];\n    int j = 0;\n    for (int i = 0; i < text.length(); i += 2) {\n        bytes[j++] = (byte) (Integer.parseInt(text.substring(i, i + 2), 16) & 0xff);\n    }\n    return new String(bytes, enc);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..18d779d2 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,14 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String text, String enc) throws UnsupportedEncodingException {\n+    byte[] bytes = new byte[text.length() / 2];\n+    int j = 0;\n+    for (int i = 0; i < text.length(); i += 2) {\n+        bytes[j++] = (byte) (Integer.parseInt(text.substring(i, i + 2), 16) & 0xff);\n+    }\n+    return new String(bytes, enc);\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}