{
    "patch": "        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            long newMillis;\n            try {\n                newMillis = savedField.set(millis, resetFields);\n            } catch (IllegalArgumentException e) {\n                if (text != null) {\n                    e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n                }\n                throw e;\n            }\n            if (newMillis == millis || savedField.getDurationField().getType() == DurationFieldType.weekyears()) {\n                continue;\n            }\n            if (newMillis < millis && i > 0) {\n                SavedField tmp = savedFields[i - 1];\n                savedFields[i - 1] = savedField;\n                savedFields[i] = tmp;\n                i -= 2;\n            } else {\n                millis = newMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..4db3732c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        for (int i = 0; i < count; i++) {\n+            SavedField savedField = savedFields[i];\n+            long newMillis;\n+            try {\n+                newMillis = savedField.set(millis, resetFields);\n+            } catch (IllegalArgumentException e) {\n+                if (text != null) {\n+                    e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n+                }\n+                throw e;\n+            }\n+            if (newMillis == millis || savedField.getDurationField().getType() == DurationFieldType.weekyears()) {\n+                continue;\n+            }\n+            if (newMillis < millis && i > 0) {\n+                SavedField tmp = savedFields[i - 1];\n+                savedFields[i - 1] = savedField;\n+                savedFields[i] = tmp;\n+                i -= 2;\n+            } else {\n+                millis = newMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}