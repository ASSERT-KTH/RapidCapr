{
    "patch": "public static int max_element(List<Integer> l) {\n    if (l == null || l.isEmpty()) {\n        throw new IllegalArgumentException(\"List is null or empty.\");\n    }\n    OptionalInt max = l.stream().filter(Objects::nonNull).mapToInt(Integer::intValue).max();\n    if (!max.isPresent()) {\n        throw new IllegalArgumentException(\"List contains only null elements\");\n    }\n    return max.getAsInt();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAX_ELEMENT.java b/src/main/java/humaneval/buggy/MAX_ELEMENT.java\nindex e510a0a..f1be46f 100644\n--- a/src/main/java/humaneval/buggy/MAX_ELEMENT.java\n+++ b/src/main/java/humaneval/buggy/MAX_ELEMENT.java\n@@ -3,13 +3,14 @@ package humaneval.buggy;\n import java.util.List;\n \n public class MAX_ELEMENT {\n-    public static int max_element(List<Integer> l) {\n-        int m = 0;\n-        for (Integer e : l) {\n-            if (e > m){\n-                m = e;\n-            }\n-        }\n-        return m;\n+public static int max_element(List<Integer> l) {\n+    if (l == null || l.isEmpty()) {\n+        throw new IllegalArgumentException(\"List is null or empty.\");\n     }\n+    OptionalInt max = l.stream().filter(Objects::nonNull).mapToInt(Integer::intValue).max();\n+    if (!max.isPresent()) {\n+        throw new IllegalArgumentException(\"List contains only null elements\");\n+    }\n+    return max.getAsInt();\n+}\n }",
    "result_reason": " /tmp/humaneval-MAX_ELEMENT/src/main/java/humaneval/buggy/MAX_ELEMENT.java:[10,5] cannot find symbol",
    "test_result": "ERROR"
}