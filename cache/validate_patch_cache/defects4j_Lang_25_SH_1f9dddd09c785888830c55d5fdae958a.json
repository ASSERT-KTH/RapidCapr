{
    "patch": "private static final char[] hexArray = \"0123456789ABCDEF\".toCharArray();\npublic static String escape(String str) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < str.length(); i++) {\n        char ch = str.charAt(i);\n        if (ch <= 127) {\n            sb.append(ch);\n        } else {\n            byte[] bytes = String.valueOf(ch).getBytes(Charset.forName(\"UTF-8\"));\n            for (byte b : bytes) {\n                int unsignedByte = b & 0xFF;\n                sb.append(\"\\\\x\");\n                sb.append(hexArray[unsignedByte >>> 4]);\n                sb.append(hexArray[unsignedByte & 0x0F]);\n            }\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}