{
    "patch": "   public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n        // initial parameter checks\n        if (str == null) {\n            return null;\n        }\n\n        // If the lower value is greater than the length of the string,\n        // set to the length of the string\n        lower = Math.min(lower, str.length());\n\n        // If the upper value is -1 (i.e. no limit) or is greater\n        // than the length of the string, set to the length of the string\n        upper = (upper == -1 || upper > str.length()) ? str.length() : upper;\n\n        // If upper is less than lower, raise it to lower\n        upper = Math.max(upper, lower);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..69bee95f 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,22 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+   public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n+        // initial parameter checks\n+        if (str == null) {\n+            return null;\n+        }\n+\n+        // If the lower value is greater than the length of the string,\n+        // set to the length of the string\n+        lower = Math.min(lower, str.length());\n+\n+        // If the upper value is -1 (i.e. no limit) or is greater\n+        // than the length of the string, set to the length of the string\n+        upper = (upper == -1 || upper > str.length()) ? str.length() : upper;\n+\n+        // If upper is less than lower, raise it to lower\n+        upper = Math.max(upper, lower);\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}