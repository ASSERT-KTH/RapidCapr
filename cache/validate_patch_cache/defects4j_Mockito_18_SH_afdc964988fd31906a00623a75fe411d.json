{
    "patch": "public ReturnValue execute(Configuration config, Input input) {\n    List<String> urls = input.read(List.class);\n    List<String> resultUrls = new ArrayList<>();\n    for (String url : urls) {\n        try {\n            URL u = new URL(url);\n            URLConnection conn = u.openConnection();\n            conn.setUseCaches(false);\n            InputStream is = conn.getInputStream();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(is));\n            String line;\n            while ((line = reader.readLine()) != null) {\n                if (line.contains(\"title\") && !line.contains(\"<title>\")) {\n                    resultUrls.add(line.split(\"<title>\")[1].split(\"</title>\")[0]);\n                }\n            }\n            is.close();\n            reader.close();\n        } catch (Exception e) {\n            // ignoring any exception\n        }\n    }\n    return new ReturnValue.Builder()\n            .set(Iterable.class, resultUrls)\n            .build();\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}