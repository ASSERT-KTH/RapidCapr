{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.junit.Test;\nimport org.apache.commons.math3.util.FastMath;\nimport org.apache.commons.math3.util.DoubleArray;\nimport org.apache.commons.math3.stat.inference.TestUtils;\n\npublic class GammaTest{\n    private double EPS = 10E-15;\n\n    @Test public void testRegularizedGammaPositivePositive(){\n        double x = 2.0;\n        double a = 1.0;\n        double expected = Gamma.regularizedGammaP(a, x);\n        double actualP = Gamma.regularizedGammaP(a, x);\n        TestUtils.assertEquals(expected, actualP, EPS);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..76dbaa7d5 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,23 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.junit.Test;\n+import org.apache.commons.math3.util.FastMath;\n+import org.apache.commons.math3.util.DoubleArray;\n+import org.apache.commons.math3.stat.inference.TestUtils;\n+\n+public class GammaTest{\n+    private double EPS = 10E-15;\n+\n+    @Test public void testRegularizedGammaPositivePositive(){\n+        double x = 2.0;\n+        double a = 1.0;\n+        double expected = Gamma.regularizedGammaP(a, x);\n+        double actualP = Gamma.regularizedGammaP(a, x);\n+        TestUtils.assertEquals(expected, actualP, EPS);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}