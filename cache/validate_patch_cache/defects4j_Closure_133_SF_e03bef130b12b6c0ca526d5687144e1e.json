{
    "patch": "private String getRemainingJSDocLine() {\n    String remainingLine = stream.getRemainingJSDocLine();\n    if (remainingLine == null || !remainingLine.startsWith(\"/**\")) {\n        return null;\n    }\n    remainingLine = remainingLine.substring(3).trim();\n    remainingLine = remainingLine.replaceAll(\"\\\\s*\\\\*/\\\\s*$\", \"\")\n        .replaceAll(\"\\\\s*(?:\\\\*\\n)+\\\\s*\", \" \")\n        .replaceAll(\"\\\\s*\\\\*?\\\\s*\", \"\");\n    remainingLine = remainingLine.replaceAll(\"\\\\s*@.*?\\\\b\\\\s*(\\\\{[^}]+\\\\})?\\\\s*\", \" \");\n    remainingLine = remainingLine.trim();\n    return remainingLine;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..8a02ba91 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,19 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+    String remainingLine = stream.getRemainingJSDocLine();\n+    if (remainingLine == null || !remainingLine.startsWith(\"/**\")) {\n+        return null;\n+    }\n+    remainingLine = remainingLine.substring(3).trim();\n+    remainingLine = remainingLine.replaceAll(\"\\\\s*\\\\*/\\\\s*$\", \"\")\n+        .replaceAll(\"\\\\s*(?:\\\\*\\n)+\\\\s*\", \" \")\n+        .replaceAll(\"\\\\s*\\\\*?\\\\s*\", \"\");\n+    remainingLine = remainingLine.replaceAll(\"\\\\s*@.*?\\\\b\\\\s*(\\\\{[^}]+\\\\})?\\\\s*\", \" \");\n+    remainingLine = remainingLine.trim();\n+    return remainingLine;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}