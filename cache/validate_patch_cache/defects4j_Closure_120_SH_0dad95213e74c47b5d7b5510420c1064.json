{
    "patch": "List<Reference> assignments = getAllAssignments();\nfor (int i = 1; i < assignments.size(); i++) {\n  if (!assignments.get(i).getBasicBlock().equals(assignments.get(0).getBasicBlock())) {\n    return false;\n  }\n}\nreturn true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..9165078e 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,13 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+List<Reference> assignments = getAllAssignments();\n+for (int i = 1; i < assignments.size(); i++) {\n+  if (!assignments.get(i).getBasicBlock().equals(assignments.get(0).getBasicBlock())) {\n+    return false;\n+  }\n+}\n+return true;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}