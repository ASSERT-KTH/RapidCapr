{
    "patch": "public class MyClass {\n    public static void main(String[] args) {\n        // variable declarations\n        boolean c = true;\n        int[] d = {1, 2, 3};\n        \n        // loop with ternary operator\n        String loopStr = \"for(a=c?0:[(0 in d)];;)foo()\";\n        int index = loopStr.indexOf(\"[(\");\n        int endIndex = loopStr.indexOf(\")]\");\n        if (index != -1 && endIndex != -1) {\n            String subStr = loopStr.substring(index + 1, endIndex);\n            if (subStr.contains(\"in\")) {\n                loopStr = loopStr.substring(0, index + 1) \n                            + \"0 \" + subStr + loopStr.substring(endIndex);\n            }\n        }\n        System.out.println(loopStr);\n    }\n        \n    public static void foo() {\n        // do something\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..3b5b5ec2 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,30 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class MyClass {\n+    public static void main(String[] args) {\n+        // variable declarations\n+        boolean c = true;\n+        int[] d = {1, 2, 3};\n+        \n+        // loop with ternary operator\n+        String loopStr = \"for(a=c?0:[(0 in d)];;)foo()\";\n+        int index = loopStr.indexOf(\"[(\");\n+        int endIndex = loopStr.indexOf(\")]\");\n+        if (index != -1 && endIndex != -1) {\n+            String subStr = loopStr.substring(index + 1, endIndex);\n+            if (subStr.contains(\"in\")) {\n+                loopStr = loopStr.substring(0, index + 1) \n+                            + \"0 \" + subStr + loopStr.substring(endIndex);\n+            }\n+        }\n+        System.out.println(loopStr);\n+    }\n+        \n+    public static void foo() {\n+        // do something\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}