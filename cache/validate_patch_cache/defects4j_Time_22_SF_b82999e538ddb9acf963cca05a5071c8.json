{
    "patch": "protected BasePeriod(long duration) {\n    PeriodType periodType = PeriodType.standard()\n        .withYearsRemoved()\n        .withMonthsRemoved()\n        .withSecondsRemoved()\n        .withMillisRemoved();\n    if (duration >= DateTimeConstants.MILLIS_PER_DAY) {\n        periodType = periodType.withWeeksRemoved();\n    }\n    if (duration >= DateTimeConstants.MILLIS_PER_HOUR) {\n        periodType = periodType.withDaysRemoved();\n    }\n    if (duration >= DateTimeConstants.MILLIS_PER_MINUTE) {\n        periodType = periodType.withHoursRemoved();\n    }\n    if (duration >= DateTimeConstants.MILLIS_PER_SECOND) {\n        periodType = periodType.withMinutesRemoved();\n    }\n    this(duration, periodType, null);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..168466c4 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,26 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    PeriodType periodType = PeriodType.standard()\n+        .withYearsRemoved()\n+        .withMonthsRemoved()\n+        .withSecondsRemoved()\n+        .withMillisRemoved();\n+    if (duration >= DateTimeConstants.MILLIS_PER_DAY) {\n+        periodType = periodType.withWeeksRemoved();\n     }\n+    if (duration >= DateTimeConstants.MILLIS_PER_HOUR) {\n+        periodType = periodType.withDaysRemoved();\n+    }\n+    if (duration >= DateTimeConstants.MILLIS_PER_MINUTE) {\n+        periodType = periodType.withHoursRemoved();\n+    }\n+    if (duration >= DateTimeConstants.MILLIS_PER_SECOND) {\n+        periodType = periodType.withMinutesRemoved();\n+    }\n+    this(duration, periodType, null);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}