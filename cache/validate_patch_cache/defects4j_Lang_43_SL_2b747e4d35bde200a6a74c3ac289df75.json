{
    "patch": "if (escapingOn && pos.getIndex() < pattern.length() && pattern.charAt(pos.getIndex()) == QUOTE) {\n    pos.setIndex(pos.getIndex() + 1);\n    return appendTo == null ? null : appendTo.append(QUOTE);\n} else if (c[pos.getIndex()] == 'd') {\n    DateFormatSymbols symbols = new DateFormatSymbols(Locale.getDefault());\n    String[] shortMonths = symbols.getShortMonths();\n    try {\n        String month = shortMonths[emf.getCalendar().get(Calendar.MONTH)].toUpperCase();\n        StringBuffer sb = new StringBuffer();\n        Formatter formatter = new Formatter(sb);\n        formatter.format(\"%02d\", emf.getCalendar().get(Calendar.DAY_OF_MONTH));\n        sb.insert(0, month + \" \");\n        pos.setIndex(pos.getIndex() + 2);\n        return appendTo == null ? null : appendTo.append(sb);\n    } catch (Exception e) {\n        e.printStackTrace();\n        throw new IllegalArgumentException(\n                \"Illegal argument for date format at position \" + start);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..324169be 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,26 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+if (escapingOn && pos.getIndex() < pattern.length() && pattern.charAt(pos.getIndex()) == QUOTE) {\n+    pos.setIndex(pos.getIndex() + 1);\n+    return appendTo == null ? null : appendTo.append(QUOTE);\n+} else if (c[pos.getIndex()] == 'd') {\n+    DateFormatSymbols symbols = new DateFormatSymbols(Locale.getDefault());\n+    String[] shortMonths = symbols.getShortMonths();\n+    try {\n+        String month = shortMonths[emf.getCalendar().get(Calendar.MONTH)].toUpperCase();\n+        StringBuffer sb = new StringBuffer();\n+        Formatter formatter = new Formatter(sb);\n+        formatter.format(\"%02d\", emf.getCalendar().get(Calendar.DAY_OF_MONTH));\n+        sb.insert(0, month + \" \");\n+        pos.setIndex(pos.getIndex() + 2);\n+        return appendTo == null ? null : appendTo.append(sb);\n+    } catch (Exception e) {\n+        e.printStackTrace();\n+        throw new IllegalArgumentException(\n+                \"Illegal argument for date format at position \" + start);\n+    }\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}