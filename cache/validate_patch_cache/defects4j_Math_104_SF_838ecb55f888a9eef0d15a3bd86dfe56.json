{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double gamma = gamma(a);\n    double[] fractions = {1.0, 1 / (1 + x - a), (x - a) / ((1 + x - a) * (2 + x - a)),\n                          (x - a) * (x - a - 1) / ((1 + x - a) * (2 + x - a) * (3 + x - a))};\n    double series = fractions[0];\n    double lastValue;\n    for (int i = 1; i < 100; ++i) {\n        lastValue = fractions[i % 4];\n        fractions[i % 4] = fractions[i % 4] * (a + i - 1) / x;\n        series += fractions[i % 4];\n        if (Math.abs(fractions[i % 4] / series) < 1e-15) {\n            break;\n        }\n    }\n    return series * Math.exp(-x + a * Math.log(x) - gamma) / a;\n}\n\npublic static double gamma(double x) {\n    if (x == 0) {\n        return Double.POSITIVE_INFINITY;\n    } else if (x < 0) {\n        return Math.PI / (x * Math.sin(Math.PI * x) * gamma(1 - x));\n    } else if (x == 1) {\n        return 1;\n    } else {\n        return (x - 1) * gamma(x - 1);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..e1ff8daa3 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,34 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double gamma = gamma(a);\n+    double[] fractions = {1.0, 1 / (1 + x - a), (x - a) / ((1 + x - a) * (2 + x - a)),\n+                          (x - a) * (x - a - 1) / ((1 + x - a) * (2 + x - a) * (3 + x - a))};\n+    double series = fractions[0];\n+    double lastValue;\n+    for (int i = 1; i < 100; ++i) {\n+        lastValue = fractions[i % 4];\n+        fractions[i % 4] = fractions[i % 4] * (a + i - 1) / x;\n+        series += fractions[i % 4];\n+        if (Math.abs(fractions[i % 4] / series) < 1e-15) {\n+            break;\n+        }\n+    }\n+    return series * Math.exp(-x + a * Math.log(x) - gamma) / a;\n+}\n+\n+public static double gamma(double x) {\n+    if (x == 0) {\n+        return Double.POSITIVE_INFINITY;\n+    } else if (x < 0) {\n+        return Math.PI / (x * Math.sin(Math.PI * x) * gamma(1 - x));\n+    } else if (x == 1) {\n+        return 1;\n+    } else {\n+        return (x - 1) * gamma(x - 1);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}