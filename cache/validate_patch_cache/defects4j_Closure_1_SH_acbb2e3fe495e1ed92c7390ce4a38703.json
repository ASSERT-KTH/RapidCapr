{
    "patch": "    boolean modifyCallers =\n        modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n\n    if (!modifyCallers) {\n      List<Node> argNodes = new ArrayList<>();\n      for (Node arg : argList.children()) {\n        Var var = fnScope.getVar(arg.getString());\n        if (referenced.contains(var)) {\n          argNodes.add(arg);\n        }\n      }\n      argList.removeChildren();\n      argList.addChildrenToBack(argNodes);\n      compiler.reportCodeChange();\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..94dca934 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,22 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    boolean modifyCallers =\n+        modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+\n+    if (!modifyCallers) {\n+      List<Node> argNodes = new ArrayList<>();\n+      for (Node arg : argList.children()) {\n+        Var var = fnScope.getVar(arg.getString());\n+        if (referenced.contains(var)) {\n+          argNodes.add(arg);\n+        }\n+      }\n+      argList.removeChildren();\n+      argList.addChildrenToBack(argNodes);\n+      compiler.reportCodeChange();\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}