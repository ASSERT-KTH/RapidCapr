{
    "patch": "        JSTypeExpression maybeType = child.getJSType();\n        T type = null;\n        if (maybeType != null) {\n          type = typeSystem.evaluateTypeExpressionToBound(\n              maybeType, getScope(), null, null);\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..016a2924 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,12 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        JSTypeExpression maybeType = child.getJSType();\n+        T type = null;\n+        if (maybeType != null) {\n+          type = typeSystem.evaluateTypeExpressionToBound(\n+              maybeType, getScope(), null, null);\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}