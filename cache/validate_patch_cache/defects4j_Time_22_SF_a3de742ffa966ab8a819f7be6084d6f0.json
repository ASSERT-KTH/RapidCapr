{
    "patch": "protected BasePeriod(long duration) {\n    super(duration);\n\n    long seconds = getSeconds();\n    int months = getMonths();\n\n    // Bug fix: calculate the weeks field correctly\n    int weeks = (int) (seconds / (7 * 24 * 60 * 60));\n    seconds -= weeks * (7 * 24 * 60 * 60);\n\n    setValue(0, weeks);\n    setValue(1, (int) (seconds / (24 * 60 * 60)));\n    setValue(2, (int) ((seconds / (60 * 60)) % 24));\n    setValue(3, (int) ((seconds / 60) % 60));\n    setValue(4, (int) (seconds % 60));\n    setValue(5, months);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..c92178e6 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,23 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super(duration);\n+\n+    long seconds = getSeconds();\n+    int months = getMonths();\n+\n+    // Bug fix: calculate the weeks field correctly\n+    int weeks = (int) (seconds / (7 * 24 * 60 * 60));\n+    seconds -= weeks * (7 * 24 * 60 * 60);\n+\n+    setValue(0, weeks);\n+    setValue(1, (int) (seconds / (24 * 60 * 60)));\n+    setValue(2, (int) ((seconds / (60 * 60)) % 24));\n+    setValue(3, (int) ((seconds / 60) % 60));\n+    setValue(4, (int) (seconds % 60));\n+    setValue(5, months);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}