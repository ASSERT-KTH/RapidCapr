{
    "patch": "if(collector.isEmpty()) {\n    currentFormatField = null;\n    strategies= new Strategy[0];\n    parsePattern= null;\n} else {\n    strategies= collector.toArray(new Strategy[collector.size()]);\n    parsePattern= Pattern.compile(regex.toString());\n    if(!patternMatcher.hitEnd() || patternMatcher.regionStart() != patternMatcher.regionEnd()) {\n        // There is a remaining format field that does not match any strategy\n        throw new IllegalArgumentException(\"Invalid pattern\");\n    } else {\n        currentFormatField = null;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..8aa472f9 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,20 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(collector.isEmpty()) {\n+    currentFormatField = null;\n+    strategies= new Strategy[0];\n+    parsePattern= null;\n+} else {\n+    strategies= collector.toArray(new Strategy[collector.size()]);\n+    parsePattern= Pattern.compile(regex.toString());\n+    if(!patternMatcher.hitEnd() || patternMatcher.regionStart() != patternMatcher.regionEnd()) {\n+        // There is a remaining format field that does not match any strategy\n+        throw new IllegalArgumentException(\"Invalid pattern\");\n+    } else {\n+        currentFormatField = null;\n+    }\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "junit.framework.AssertionFailedError: Parsed dates should be equal expected:<null> but was:<Fri Jan 02 21:00:00 PST 1970>",
    "test_result": "FAIL"
}