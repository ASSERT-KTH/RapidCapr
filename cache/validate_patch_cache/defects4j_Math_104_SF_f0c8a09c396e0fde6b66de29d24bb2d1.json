{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    final int maxIterations = 10000;\n    final double eps = 10e-15;\n\n    double gammaLowerIncomplete = Gamma.regularizedGammaP(a, x, eps, maxIterations);\n    double gammaUpperIncomplete = Gamma.regularizedGammaQ(a, x, eps, maxIterations);\n\n    return gammaLowerIncomplete + gammaUpperIncomplete;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..3705cb2cf 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,15 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    final int maxIterations = 10000;\n+    final double eps = 10e-15;\n+\n+    double gammaLowerIncomplete = Gamma.regularizedGammaP(a, x, eps, maxIterations);\n+    double gammaUpperIncomplete = Gamma.regularizedGammaQ(a, x, eps, maxIterations);\n+\n+    return gammaLowerIncomplete + gammaUpperIncomplete;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}