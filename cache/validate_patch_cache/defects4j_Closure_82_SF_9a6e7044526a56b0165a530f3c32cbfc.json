{
    "patch": "/**\n * Returns true if this type is empty, where an empty type is any of the following:\n * <ul>\n * <li> no type should resolve to true, </li>\n * <li> no object type should resolve to true, </li>\n * <li> unknown type should resolve to true, </li>\n * <li> unable to be resolved type should resolve to true, </li>\n * <li> void type should resolve to true, </li>\n * <li> null type should resolve to true.</li>\n * </ul>\n * @return true if this type is empty\n */\npublic final boolean isEmptyType() {\n    return isNoType() || isNoObjectType() || isUnknownType() || isNoResolvedType() || isVoidType() || isNullType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..f4f53c38 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,21 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+/**\n+ * Returns true if this type is empty, where an empty type is any of the following:\n+ * <ul>\n+ * <li> no type should resolve to true, </li>\n+ * <li> no object type should resolve to true, </li>\n+ * <li> unknown type should resolve to true, </li>\n+ * <li> unable to be resolved type should resolve to true, </li>\n+ * <li> void type should resolve to true, </li>\n+ * <li> null type should resolve to true.</li>\n+ * </ul>\n+ * @return true if this type is empty\n+ */\n+public final boolean isEmptyType() {\n+    return isNoType() || isNoObjectType() || isUnknownType() || isNoResolvedType() || isVoidType() || isNullType();\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}