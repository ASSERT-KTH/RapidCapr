{
    "patch": "public String fixCode(String input) {\n    String[] lines = input.split(\"\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        String line = lines[i];\n\n        int inIndex = line.indexOf(\"in\");\n        if (inIndex != -1 && line.charAt(inIndex - 1) != '(') {\n            lines[i] = line.substring(0, inIndex) + \"(\" + line.substring(inIndex) + \")\";\n        }\n    }\n    return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..2134bd92 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,18 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String input) {\n+    String[] lines = input.split(\"\\n\");\n+    for (int i = 0; i < lines.length; i++) {\n+        String line = lines[i];\n+\n+        int inIndex = line.indexOf(\"in\");\n+        if (inIndex != -1 && line.charAt(inIndex - 1) != '(') {\n+            lines[i] = line.substring(0, inIndex) + \"(\" + line.substring(inIndex) + \")\";\n+        }\n+    }\n+    return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}