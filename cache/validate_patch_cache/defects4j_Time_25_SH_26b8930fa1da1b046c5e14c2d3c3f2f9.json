{
    "patch": "            final int minOffsetAdjusted = getOffset(instantLocal - 1L);\n            final int maxOffsetAdjusted = offsetAdjusted;\n            if (minOffsetAdjusted == maxOffsetAdjusted) {\n                return offsetAdjusted;\n            }\n            long prevTransition = previousTransition(instantAdjusted);\n            if (prevTransition == instantAdjusted - 1L) {\n                // a duplicate local time\n                prevTransition = previousTransition(prevTransition);\n            }\n            if (prevTransition < instantLocal - 1L &&\n                    getOffset(prevTransition) == maxOffsetAdjusted) {\n                // gap bridged\n                return maxOffsetAdjusted;\n            }\n            long nextTransition = nextTransition(instantLocal);\n            if (nextTransition == instantLocal) {\n                nextTransition = nextTransition(nextTransition + 1L);\n            }\n            if (nextTransition - 1L == instantLocal &&\n                    getOffset(nextTransition) == minOffsetAdjusted) {\n                // overlap bridged\n                return maxOffsetAdjusted;\n            }\n            return minOffsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..93798e25 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,31 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            final int minOffsetAdjusted = getOffset(instantLocal - 1L);\n+            final int maxOffsetAdjusted = offsetAdjusted;\n+            if (minOffsetAdjusted == maxOffsetAdjusted) {\n+                return offsetAdjusted;\n+            }\n+            long prevTransition = previousTransition(instantAdjusted);\n+            if (prevTransition == instantAdjusted - 1L) {\n+                // a duplicate local time\n+                prevTransition = previousTransition(prevTransition);\n+            }\n+            if (prevTransition < instantLocal - 1L &&\n+                    getOffset(prevTransition) == maxOffsetAdjusted) {\n+                // gap bridged\n+                return maxOffsetAdjusted;\n+            }\n+            long nextTransition = nextTransition(instantLocal);\n+            if (nextTransition == instantLocal) {\n+                nextTransition = nextTransition(nextTransition + 1L);\n+            }\n+            if (nextTransition - 1L == instantLocal &&\n+                    getOffset(nextTransition) == minOffsetAdjusted) {\n+                // overlap bridged\n+                return maxOffsetAdjusted;\n+            }\n+            return minOffsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}