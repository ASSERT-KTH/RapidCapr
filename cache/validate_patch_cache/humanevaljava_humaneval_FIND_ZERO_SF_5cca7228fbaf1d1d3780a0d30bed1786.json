{
    "patch": "public static double find_zero(List<Double> xs) {\n    double begin = -1.0;\n    double end = 1.0;\n    double mid = (begin + end) / 2;\n\n    while (Math.abs(poly(xs, mid)) > 1e-10) {\n        if (poly(xs, begin) * poly(xs, mid) < 0) {\n            end = mid;\n        } else {\n            begin = mid;\n        }\n        mid = (begin + end) / 2;\n    }\n\n    return mid;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..c9c87f1 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -11,23 +11,20 @@ public class FIND_ZERO {\n         return sum;\n     }\n \n-    public static double find_zero(List<Double> xs){\n-        double begin = -1.;\n-        double end = 1.;\n+public static double find_zero(List<Double> xs) {\n+    double begin = -1.0;\n+    double end = 1.0;\n+    double mid = (begin + end) / 2;\n \n-        while (poly(xs, begin) * poly(xs, end) > 0) {\n-            begin *= 2.;\n-            end *= 2.;\n+    while (Math.abs(poly(xs, mid)) > 1e-10) {\n+        if (poly(xs, begin) * poly(xs, mid) < 0) {\n+            end = mid;\n+        } else {\n+            begin = mid;\n         }\n-        while (end - begin > 1e-10) {\n-            double center = (begin + end) / 2.;\n-            \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n-                begin = center;\n-            } else {\n-                end = center;\n-            }\n-        }\n-        return begin;\n+        mid = (begin + end) / 2;\n     }\n+\n+    return mid;\n+}\n }",
    "result_reason": "",
    "test_result": "FAIL"
}