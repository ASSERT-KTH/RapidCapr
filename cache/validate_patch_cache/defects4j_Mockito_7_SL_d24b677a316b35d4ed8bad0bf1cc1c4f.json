{
    "patch": "            Type actualTypeArgument = null;\n            for (TypeVariable<? extends Class<?>> currentTypeVariable : typeVariable.getGenericDeclaration().getTypeParameters()) {\n                if (typeVariable.equals(currentTypeVariable)) {\n                    actualTypeArgument = ((ParameterizedType) this.getClass().getGenericSuperclass())\n                            .getActualTypeArguments()[0];\n                    break;\n                }\n            }\n            registerTypeVariablesOn(actualTypeArgument);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..592d17389 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,20 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+            Type actualTypeArgument = null;\n+            for (TypeVariable<? extends Class<?>> currentTypeVariable : typeVariable.getGenericDeclaration().getTypeParameters()) {\n+                if (typeVariable.equals(currentTypeVariable)) {\n+                    actualTypeArgument = ((ParameterizedType) this.getClass().getGenericSuperclass())\n+                            .getActualTypeArguments()[0];\n+                    break;\n+                }\n+            }\n+            registerTypeVariablesOn(actualTypeArgument);\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: incompatible types: TypeVariable<?> cannot be converted to TypeVariable<? extends Class<?>>",
    "test_result": "ERROR"
}