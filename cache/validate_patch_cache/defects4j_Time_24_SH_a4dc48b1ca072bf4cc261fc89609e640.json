{
    "patch": "for (int i = 0; i < count; i++) {\n    SavedField savedField = savedFields[i];\n    int value = savedField.getValue();\n    ChronoField field = savedField.getField();\n    int newValue = field.range().checkValidIntValue(value, field);\n    if (newValue != value) {\n        millis = savedFields[i].set(millis, field, newValue, resetFields);\n        for (int j = i + 1; j < count; j++) {\n            millis = savedFields[j].set(millis, resetFields);\n        }\n        valueStr = format(millis, resetFields);\n        throw new IllegalArgumentException(\"Value of \" + field + \" (\" + value + \") \"\n                + \" is outside the expected range: \" + valueStr);\n    } else {\n        try {\n            millis = savedFields[i].set(millis, resetFields);\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..278ad25f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,30 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    SavedField savedField = savedFields[i];\n+    int value = savedField.getValue();\n+    ChronoField field = savedField.getField();\n+    int newValue = field.range().checkValidIntValue(value, field);\n+    if (newValue != value) {\n+        millis = savedFields[i].set(millis, field, newValue, resetFields);\n+        for (int j = i + 1; j < count; j++) {\n+            millis = savedFields[j].set(millis, resetFields);\n+        }\n+        valueStr = format(millis, resetFields);\n+        throw new IllegalArgumentException(\"Value of \" + field + \" (\" + value + \") \"\n+                + \" is outside the expected range: \" + valueStr);\n+    } else {\n+        try {\n+            millis = savedFields[i].set(millis, resetFields);\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}