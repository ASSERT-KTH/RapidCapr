{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden, need to increment these\n    if (meanImpl instanceof Mean) {\n        ((Mean) meanImpl).increment(value);\n    } else if (meanImpl.getClass().getName().startsWith(\"org.apache.commons.\")) {\n        try {\n            meanImpl.getClass().getMethod(\"incrementAll\", double[].class).invoke(meanImpl, new double[]{value});\n        } catch (Exception e) {\n            // do nothing\n        }\n    } else {\n        double oldMean = meanImpl.getResult();\n        double newMean = oldMean + (value - oldMean) / (n + 1);\n        double delta = value - oldMean;\n        meanImpl.increment(newMean);\n        if (varianceImpl instanceof Variance) {\n            double temp = sumsqImpl.getResult() - 2 * oldMean * sumImpl.getResult() + n * oldMean * oldMean;\n            double newVariance = (temp + (n + 1) * delta * delta) / (n + 1);\n            ((Variance) varianceImpl).increment(newVariance);\n        } else if (varianceImpl.getClass().getName().startsWith(\"org.apache.commons.\")) {\n            try {\n                varianceImpl.getClass().getMethod(\"incrementAll\", double[].class).invoke(varianceImpl, new double[]{value});\n            } catch (Exception e) {\n                // do nothing\n            }\n        } else {\n            varianceImpl.increment(value);\n        }\n        if (geoMeanImpl instanceof GeometricMean) {\n            ((GeometricMean) geoMeanImpl).increment(value);\n        } else if (geoMeanImpl.getClass().getName().startsWith(\"org.apache.commons.\")) {\n            try {\n                geoMeanImpl.getClass().getMethod(\"incrementAll\", double[].class).invoke(geoMeanImpl, new double[]{value});\n            } catch (Exception e) {\n                // do nothing\n            }\n        } else {\n            geoMeanImpl.increment(Math.log(value));\n        }\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..ad042b8a8 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,54 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden, need to increment these\n+    if (meanImpl instanceof Mean) {\n+        ((Mean) meanImpl).increment(value);\n+    } else if (meanImpl.getClass().getName().startsWith(\"org.apache.commons.\")) {\n+        try {\n+            meanImpl.getClass().getMethod(\"incrementAll\", double[].class).invoke(meanImpl, new double[]{value});\n+        } catch (Exception e) {\n+            // do nothing\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+    } else {\n+        double oldMean = meanImpl.getResult();\n+        double newMean = oldMean + (value - oldMean) / (n + 1);\n+        double delta = value - oldMean;\n+        meanImpl.increment(newMean);\n+        if (varianceImpl instanceof Variance) {\n+            double temp = sumsqImpl.getResult() - 2 * oldMean * sumImpl.getResult() + n * oldMean * oldMean;\n+            double newVariance = (temp + (n + 1) * delta * delta) / (n + 1);\n+            ((Variance) varianceImpl).increment(newVariance);\n+        } else if (varianceImpl.getClass().getName().startsWith(\"org.apache.commons.\")) {\n+            try {\n+                varianceImpl.getClass().getMethod(\"incrementAll\", double[].class).invoke(varianceImpl, new double[]{value});\n+            } catch (Exception e) {\n+                // do nothing\n+            }\n+        } else {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+        if (geoMeanImpl instanceof GeometricMean) {\n+            ((GeometricMean) geoMeanImpl).increment(value);\n+        } else if (geoMeanImpl.getClass().getName().startsWith(\"org.apache.commons.\")) {\n+            try {\n+                geoMeanImpl.getClass().getMethod(\"incrementAll\", double[].class).invoke(geoMeanImpl, new double[]{value});\n+            } catch (Exception e) {\n+                // do nothing\n+            }\n+        } else {\n+            geoMeanImpl.increment(Math.log(value));\n         }\n-        n++;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2.213363839400643> but was:<NaN>",
    "test_result": "FAIL"
}