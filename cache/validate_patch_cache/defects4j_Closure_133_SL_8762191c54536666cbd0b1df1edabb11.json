{
    "patch": "private String getRemainingJSDocLine() {\n  String result = stream.getRemainingJSDocLine();\n  if (result != null && result.trim().startsWith(\"*\")) {\n    result = null;\n  } else if (result != null && result.trim().startsWith(\"@type \")) {\n    result = result.trim().substring(6).trim();\n  } else if (result != null && result.trim().startsWith(\"@\")) {\n    String line = stream.getRemainingJSDocLine();\n    while (line != null && line.trim().startsWith(\"@\")) {\n      result += \" \" + line.trim();\n      line = stream.getRemainingJSDocLine();\n    }\n    if (line != null && line.trim().startsWith(\"*\")) {\n      line = null;\n    }\n    if (line != null && line.trim().startsWith(\"@type \")) {\n      line = line.trim().substring(6).trim();\n    }\n    if (line != null && !line.trim().isEmpty()) {\n      stream.pushBackJSDocLine(line);\n    }\n  }\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..a96285cf 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,30 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+  String result = stream.getRemainingJSDocLine();\n+  if (result != null && result.trim().startsWith(\"*\")) {\n+    result = null;\n+  } else if (result != null && result.trim().startsWith(\"@type \")) {\n+    result = result.trim().substring(6).trim();\n+  } else if (result != null && result.trim().startsWith(\"@\")) {\n+    String line = stream.getRemainingJSDocLine();\n+    while (line != null && line.trim().startsWith(\"@\")) {\n+      result += \" \" + line.trim();\n+      line = stream.getRemainingJSDocLine();\n+    }\n+    if (line != null && line.trim().startsWith(\"*\")) {\n+      line = null;\n+    }\n+    if (line != null && line.trim().startsWith(\"@type \")) {\n+      line = line.trim().substring(6).trim();\n+    }\n+    if (line != null && !line.trim().isEmpty()) {\n+      stream.pushBackJSDocLine(line);\n+    }\n+  }\n+  return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}