{
    "patch": "      ArrayList<Node> unreferencedArgs = new ArrayList<>();\n      for (Node arg = argList.getFirstChild(); arg != null;\n          arg = arg.getNext()) {\n        Var var = fnScope.getVar(arg.getString());\n        if (!referenced.contains(var)) {\n          unreferencedArgs.add(arg);\n        } else if (!unreferencedArgs.isEmpty()) { // stops at first ref'd arg\n          break;\n        }\n      }\n      for (int i = unreferencedArgs.size() - 1; i >= 0; i--) {\n        Node arg = unreferencedArgs.get(i);\n        argList.removeChild(arg);\n      }\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..78496832 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,21 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      ArrayList<Node> unreferencedArgs = new ArrayList<>();\n+      for (Node arg = argList.getFirstChild(); arg != null;\n+          arg = arg.getNext()) {\n+        Var var = fnScope.getVar(arg.getString());\n+        if (!referenced.contains(var)) {\n+          unreferencedArgs.add(arg);\n+        } else if (!unreferencedArgs.isEmpty()) { // stops at first ref'd arg\n+          break;\n+        }\n+      }\n+      for (int i = unreferencedArgs.size() - 1; i >= 0; i--) {\n+        Node arg = unreferencedArgs.get(i);\n+        argList.removeChild(arg);\n+      }\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}