{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int charsSkipped = 0;\n    for (int i = 0; i < strLen; i++) {\n        int codepoint = str.codePointAt(i);\n        if (Character.isSupplementaryCodePoint(codepoint)) {\n            i++;\n        }\n        if (ArrayUtils.contains(searchChars, (char) codepoint)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..99c4dc39 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,24 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int charsSkipped = 0;\n+    for (int i = 0; i < strLen; i++) {\n+        int codepoint = str.codePointAt(i);\n+        if (Character.isSupplementaryCodePoint(codepoint)) {\n+            i++;\n+        }\n+        if (ArrayUtils.contains(searchChars, (char) codepoint)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}