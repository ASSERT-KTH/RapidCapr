{
    "patch": "public static double getTypedPercent(String jsonStr) throws JSONException {\n    JSONObject jsonObj = new JSONObject(jsonStr);\n    JSONArray jsonArray = jsonObj.getJSONArray(\"data\");\n    double count = 0.0;\n    double totalCount = jsonArray.length();\n\n    for (int i = 0; i < totalCount; i++) {\n        if (jsonArray.getJSONObject(i).getString(\"type\").equals(\"typed\")) {\n            count++;\n        }\n    }\n    return count * 100 / totalCount;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..2d85147c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) throws JSONException {\n+    JSONObject jsonObj = new JSONObject(jsonStr);\n+    JSONArray jsonArray = jsonObj.getJSONArray(\"data\");\n+    double count = 0.0;\n+    double totalCount = jsonArray.length();\n+\n+    for (int i = 0; i < totalCount; i++) {\n+        if (jsonArray.getJSONObject(i).getString(\"type\").equals(\"typed\")) {\n+            count++;\n+        }\n+    }\n+    return count * 100 / totalCount;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}