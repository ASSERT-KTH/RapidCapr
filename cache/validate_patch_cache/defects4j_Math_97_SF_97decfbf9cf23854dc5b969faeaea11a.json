{
    "patch": "    public double solve(double min, double max) throws MaxIterationsExceededException, \n        FunctionEvaluationException {\n        \n        clearResult();\n        verifyInterval(min, max);\n        \n        double ret = Double.NaN;\n        \n        double yMin = f.value(min);\n        double yMax = f.value(max);\n        \n        // Verify bracketing\n        double sign = yMin * yMax;\n        if (sign >= 0) {\n            // check if either value is close to a zero\n            if (Math.abs(yMin) <= FUNCTION_VALUE_ACCURACY) {\n                ret = min;\n                setResult(ret, 0);\n                return ret;\n            }\n            if (Math.abs(yMax) <= FUNCTION_VALUE_ACCURACY) {\n                ret = max;\n                setResult(ret, 0);\n                return ret;\n            }\n\n            // neither value is close to zero and min and max do not bracket root.\n            throw new IllegalArgumentException\n                (\"Function values at endpoints do not have different signs.\" +\n                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n        } else {\n            // solve using only the first endpoint as initial guess\n            ret = solve(min, yMin, max, yMax, min, yMin);\n            // either min or max is a root\n        }\n\n        return ret;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/BrentSolver.java b/src/java/org/apache/commons/math/analysis/BrentSolver.java\nindex 766d87ed5..45dd75283 100644\n--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,8 +137,19 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n         double sign = yMin * yMax;\n         if (sign >= 0) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n+            if (Math.abs(yMin) <= FUNCTION_VALUE_ACCURACY) {\n+                ret = min;\n+                setResult(ret, 0);\n+                return ret;\n+            }\n+            if (Math.abs(yMax) <= FUNCTION_VALUE_ACCURACY) {\n+                ret = max;\n+                setResult(ret, 0);\n+                return ret;\n+            }\n+\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n                 (\"Function values at endpoints do not have different signs.\" +\n                         \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n                         \"  Values: [\" + yMin + \",\" + yMax + \"]\");",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}