{
    "patch": "public static boolean containsAny(String str, char[] chars) {\n    if (str != null && chars != null) {\n        for (int i = 0; i < chars.length; i++) {\n            if (str.indexOf(chars[i]) >= 0) {\n                return true;\n            }\n        }\n        for (int i = 0; i < str.length(); i++) {\n            int codePoint = str.codePointAt(i);\n            if (Character.charCount(codePoint) > 1) {\n                i++; // skip supplementary characters\n            } else {\n                if (contains(chars, (char) codePoint)) {\n                    return true;\n                }\n            }\n         }\n    }\n    return false;\n}\n\npublic static boolean contains(char[] chars, char ch) {\n    if (chars != null) {\n        for (int i = 0; i < chars.length; i++) {\n            if (chars[i] == ch) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..9ec72624 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,37 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] chars) {\n+    if (str != null && chars != null) {\n+        for (int i = 0; i < chars.length; i++) {\n+            if (str.indexOf(chars[i]) >= 0) {\n+                return true;\n+            }\n+        }\n+        for (int i = 0; i < str.length(); i++) {\n+            int codePoint = str.codePointAt(i);\n+            if (Character.charCount(codePoint) > 1) {\n+                i++; // skip supplementary characters\n+            } else {\n+                if (contains(chars, (char) codePoint)) {\n+                    return true;\n+                }\n+            }\n+         }\n+    }\n+    return false;\n+}\n+\n+public static boolean contains(char[] chars, char ch) {\n+    if (chars != null) {\n+        for (int i = 0; i < chars.length; i++) {\n+            if (chars[i] == ch) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}