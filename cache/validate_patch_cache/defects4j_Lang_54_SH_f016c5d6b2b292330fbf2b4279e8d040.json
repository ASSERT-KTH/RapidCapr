{
    "patch": "            if (len == 6 && str.charAt(5) == '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (len == 2) {\n                 return new Locale(str, \"\");\n            } else if (len == 5) {\n                if (str.charAt(4) == '_') {\n                    return new Locale(str.substring(0, 2), str.substring(3, 4));\n                } else {\n                    return new Locale(str, \"\");\n                }\n            } else if (len >= 7) {\n                if (str.charAt(2) != '_' || !Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (len == 7) {\n                    return new Locale(str.substring(0, 2), \"\", str.substring(3, 5));\n                } else if (len == 8 && (str.charAt(5) == '_' || Character.isDigit(str.charAt(5)))) {\n                    return new Locale(str.substring(0, 2), \"\", str.substring(3, 5));\n                } else if (len == 9 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n                    return new Locale(str.substring(0, 2), str.substring(6, 8), str.substring(3, 5));\n                } else if (len == 10 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n                    return new Locale(str.substring(0, 2), str.substring(6, 8) + \"_\" + str.substring(9), str.substring(3, 5));\n                } else {",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..2b9090b9 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,29 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            if (len == 6 && str.charAt(5) == '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else if (len == 2) {\n+                 return new Locale(str, \"\");\n+            } else if (len == 5) {\n+                if (str.charAt(4) == '_') {\n+                    return new Locale(str.substring(0, 2), str.substring(3, 4));\n+                } else {\n+                    return new Locale(str, \"\");\n+                }\n+            } else if (len >= 7) {\n+                if (str.charAt(2) != '_' || !Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (len == 7) {\n+                    return new Locale(str.substring(0, 2), \"\", str.substring(3, 5));\n+                } else if (len == 8 && (str.charAt(5) == '_' || Character.isDigit(str.charAt(5)))) {\n+                    return new Locale(str.substring(0, 2), \"\", str.substring(3, 5));\n+                } else if (len == 9 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n+                    return new Locale(str.substring(0, 2), str.substring(6, 8), str.substring(3, 5));\n+                } else if (len == 10 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n+                    return new Locale(str.substring(0, 2), str.substring(6, 8) + \"_\" + str.substring(9), str.substring(3, 5));\n+                } else {\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}