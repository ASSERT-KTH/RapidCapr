{
    "patch": "        if (Double.doubleToLongBits(x) == Double.doubleToLongBits(y)) {\n            return true;\n        } else if (Double.isNaN(x) || Double.isNaN(y)) {\n            return false;\n        } else if (Double.isInfinite(x) || Double.isInfinite(y)) {\n            return false;\n        } else {\n            double absolute = Math.abs(x - y);\n            double maxAbsolute = Math.max(Math.abs(x), Math.abs(y));\n            if (x == 0 || y == 0 || maxAbsolute < Double.MIN_NORMAL) {\n                return absolute < (Math.ulp(x) * Math.ulp(y));\n            } else {\n                double relative = absolute / maxAbsolute;\n                return (relative < Math.ulp(1.0));\n            }\n        }``",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..c10415bd5 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -414,7 +414,22 @@ public final class MathUtils {\n      * @return {@code true} if the values are equal.\n      */\n     public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+        if (Double.doubleToLongBits(x) == Double.doubleToLongBits(y)) {\n+            return true;\n+        } else if (Double.isNaN(x) || Double.isNaN(y)) {\n+            return false;\n+        } else if (Double.isInfinite(x) || Double.isInfinite(y)) {\n+            return false;\n+        } else {\n+            double absolute = Math.abs(x - y);\n+            double maxAbsolute = Math.max(Math.abs(x), Math.abs(y));\n+            if (x == 0 || y == 0 || maxAbsolute < Double.MIN_NORMAL) {\n+                return absolute < (Math.ulp(x) * Math.ulp(y));\n+            } else {\n+                double relative = absolute / maxAbsolute;\n+                return (relative < Math.ulp(1.0));\n+            }\n+        }``\n     }\n \n     /**",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}