{
    "patch": "public ReturnValue execute(Context ctx) throws Exception {\n    Map<Object, Object> map = new HashMap<>();\n    for (int i = 0; i < keys.size(); i++) {\n        Object key = keys.get(i);\n        Object value = values.get(i);\n        map.put(key, value);\n    }\n    Iterable<Object> iterable = map.entrySet().stream()\n            .filter(entry -> condition.test(entry.getKey(), entry.getValue()))\n            .map(Map.Entry::getKey)\n            .collect(Collectors.toList());\n    return new ReturnValue(iterable);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}