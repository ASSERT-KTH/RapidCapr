{
    "patch": "            } catch (IllegalFieldValueException e) {\n               if (text != null) {\n                   e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n               }\n               if (resetFields) {\n                   for (int i = 0; i < count; i++) {\n                       int oldSMOD = savedFields[i].iSavedState;\n                       SavedField savedField = savedFields[i].pop();\n                       while (savedField != null) {\n                           try {\n                               oldSMOD = savedField.iField.set(savedField.iFieldIndex, oldSMOD, savedField.iValue);\n                               savedField = savedField.iNext;\n                           } catch (RuntimeException ex) {\n                               // ignore exception\n                               savedField = savedField.iNext;\n                           }\n                       }\n                       savedFields[i].iSavedState = oldSMOD;\n                   }\n               }\n               throw e;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..22ae4062 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException e) {\n+               if (text != null) {\n+                   e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+               }\n+               if (resetFields) {\n+                   for (int i = 0; i < count; i++) {\n+                       int oldSMOD = savedFields[i].iSavedState;\n+                       SavedField savedField = savedFields[i].pop();\n+                       while (savedField != null) {\n+                           try {\n+                               oldSMOD = savedField.iField.set(savedField.iFieldIndex, oldSMOD, savedField.iValue);\n+                               savedField = savedField.iNext;\n+                           } catch (RuntimeException ex) {\n+                               // ignore exception\n+                               savedField = savedField.iNext;\n+                           }\n+                       }\n+                       savedFields[i].iSavedState = oldSMOD;\n+                   }\n+               }\n+               throw e;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}