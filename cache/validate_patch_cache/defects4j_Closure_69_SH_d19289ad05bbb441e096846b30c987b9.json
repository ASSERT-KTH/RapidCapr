{
    "patch": "      // Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n      Node parent = n.getParent();\n      boolean isGetProp = parent.isGetProp();\n      boolean isGetElem = parent.isGetElem();\n      if (functionType.getTypeOfThis() != null && !(isGetProp || isGetElem)) {\n        report(t, n, ILLEGAL_THIS);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..d736b7e3 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,12 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      // Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n+      Node parent = n.getParent();\n+      boolean isGetProp = parent.isGetProp();\n+      boolean isGetElem = parent.isGetElem();\n+      if (functionType.getTypeOfThis() != null && !(isGetProp || isGetElem)) {\n+        report(t, n, ILLEGAL_THIS);\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}