{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    int p = str.indexOf('_');\n    if (p < 0) {\n        if (len != 2 && len != 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return len == 2 ? new Locale(str) : new Locale(str.substring(0, 2), str.substring(3));\n    }\n\n    String lang = str.substring(0, p);\n    if (p == len - 1) {\n        return new Locale(lang);\n    }\n\n    ++p;\n    int q = str.indexOf('_', p);\n    if (q < 0) {\n        if (len - p != 4) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(lang, str.substring(p));\n    }\n\n    String country = str.substring(p, q);\n    if (q == len - 1) {\n        return new Locale(lang, country);\n    }\n    return new Locale(lang, country, str.substring(q + 1));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..7b9e7d73 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,48 +85,45 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    int p = str.indexOf('_');\n+    if (p < 0) {\n+        if (len != 2 && len != 5) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final int len = str.length();\n-        if (len < 2) {\n+        return len == 2 ? new Locale(str) : new Locale(str.substring(0, 2), str.substring(3));\n+    }\n+\n+    String lang = str.substring(0, p);\n+    if (p == len - 1) {\n+        return new Locale(lang);\n+    }\n+\n+    ++p;\n+    int q = str.indexOf('_', p);\n+    if (q < 0) {\n+        if (len - p != 4) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        return new Locale(lang, str.substring(p));\n     }\n \n+    String country = str.substring(p, q);\n+    if (q == len - 1) {\n+        return new Locale(lang, country);\n+    }\n+    return new Locale(lang, country, str.substring(q + 1));\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: _GB",
    "test_result": "FAIL"
}