{
    "patch": "protected BasePeriod(long duration) {\n    super(duration);\n    Duration dur = new Duration(duration);\n    int weeks = (int) Math.floor(dur.getStandardDays() / 7);\n    dur = dur.minusDays(weeks * 7);\n    weeks += dur.toPeriod().normalizedStandard(PeriodType.days()).getDays() > 3 ? 1 : 0;\n    this.iWeeks = weeks;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..2df92600 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,14 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super(duration);\n+    Duration dur = new Duration(duration);\n+    int weeks = (int) Math.floor(dur.getStandardDays() / 7);\n+    dur = dur.minusDays(weeks * 7);\n+    weeks += dur.toPeriod().normalizedStandard(PeriodType.days()).getDays() > 3 ? 1 : 0;\n+    this.iWeeks = weeks;\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}