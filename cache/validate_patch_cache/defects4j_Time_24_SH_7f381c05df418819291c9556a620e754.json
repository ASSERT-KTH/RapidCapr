{
    "patch": "if (iChrono == null) {\n    throw new IllegalArgumentException(\"Invalid chronology, null not allowed\");\n}\nChronology isoChrono = ISOChronology.getInstanceUTC();\nLocalDate date = LocalDate.parse(text, isoChrono);\ndate = date.withChronology(iChrono);\nfor (int i = 0; i < count; i++) {\n    millis = savedFields[i].set(millis, resetFields);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..11668305 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+if (iChrono == null) {\n+    throw new IllegalArgumentException(\"Invalid chronology, null not allowed\");\n+}\n+Chronology isoChrono = ISOChronology.getInstanceUTC();\n+LocalDate date = LocalDate.parse(text, isoChrono);\n+date = date.withChronology(iChrono);\n+for (int i = 0; i < count; i++) {\n+    millis = savedFields[i].set(millis, resetFields);\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}