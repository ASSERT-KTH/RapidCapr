{
    "patch": "public static String unescape(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    StringBuilder sb = new StringBuilder(len);\n    for (int i = 0; i < len; i++) {\n        char c = str.charAt(i);\n        if (c == '\\\\') {\n            if (i + 1 < len) {\n                char nextChar = str.charAt(i + 1);\n                switch (nextChar) {\n                    case '\\\\':\n                        c = '\\\\';\n                        break;\n                    case 'n':\n                        c = '\\n';\n                        break;\n                    case 'r':\n                        c = '\\r';\n                        break;\n                    case 't':\n                        c = '\\t';\n                        break;\n                    case 'f':\n                        c = '\\f';\n                        break;\n                    case '\\'':\n                        c = '\\'';\n                        break;\n                    case '\\\"':\n                        c = '\\\"';\n                        break;\n                    case 'u':\n                        if (i + 5 < len) {\n                            char[] hexChars = new char[4];\n                            str.getChars(i + 2, i + 6, hexChars, 0);\n                            int codePoint = Integer.parseInt(new String(hexChars), 16);\n                            sb.appendCodePoint(codePoint);\n                            i += 5;\n                            continue;\n                        }\n                        break;\n                }\n                i++;\n            }\n        }\n        sb.append(c);\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..fd23d444 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,57 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    StringBuilder sb = new StringBuilder(len);\n+    for (int i = 0; i < len; i++) {\n+        char c = str.charAt(i);\n+        if (c == '\\\\') {\n+            if (i + 1 < len) {\n+                char nextChar = str.charAt(i + 1);\n+                switch (nextChar) {\n+                    case '\\\\':\n+                        c = '\\\\';\n+                        break;\n+                    case 'n':\n+                        c = '\\n';\n+                        break;\n+                    case 'r':\n+                        c = '\\r';\n+                        break;\n+                    case 't':\n+                        c = '\\t';\n+                        break;\n+                    case 'f':\n+                        c = '\\f';\n+                        break;\n+                    case '\\'':\n+                        c = '\\'';\n+                        break;\n+                    case '\\\"':\n+                        c = '\\\"';\n+                        break;\n+                    case 'u':\n+                        if (i + 5 < len) {\n+                            char[] hexChars = new char[4];\n+                            str.getChars(i + 2, i + 6, hexChars, 0);\n+                            int codePoint = Integer.parseInt(new String(hexChars), 16);\n+                            sb.appendCodePoint(codePoint);\n+                            i += 5;\n+                            continue;\n+                        }\n+                        break;\n+                }\n+                i++;\n+            }\n+        }\n+        sb.append(c);\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}