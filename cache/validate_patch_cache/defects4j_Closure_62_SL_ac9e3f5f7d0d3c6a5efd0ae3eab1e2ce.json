{
    "patch": "      if (excerpt.equals(LINE)\n          && 0 <= charno && charno < sourceExcerpt.length()) {\n        for (int i = 0; i < charno; i++) {\n          char c = sourceExcerpt.charAt(i);\n          if (Character.isWhitespace(c)) {\n            b.append(c);\n          } else {\n            b.append(' ');\n          }\n        }\n        b.append(\"^\\n\");\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..14d5a395 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -94,6 +94,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // padding equal to the excerpt and arrow at the end\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n+      if (excerpt.equals(LINE)\n       if (excerpt.equals(LINE)\n           && 0 <= charno && charno < sourceExcerpt.length()) {\n         for (int i = 0; i < charno; i++) {\n@@ -106,6 +107,16 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n         }\n         b.append(\"^\\n\");\n       }\n+        for (int i = 0; i < charno; i++) {\n+          char c = sourceExcerpt.charAt(i);\n+          if (Character.isWhitespace(c)) {\n+            b.append(c);\n+          } else {\n+            b.append(' ');\n+          }\n+        }\n+        b.append(\"^\\n\");\n+      }\n     }\n     return b.toString();\n   }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}