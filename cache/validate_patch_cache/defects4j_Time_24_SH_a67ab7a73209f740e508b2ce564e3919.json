{
    "patch": "            } catch (IllegalFieldValueException ex) {\n                if (resetFields) {\n                    // try to reset the remaining fields\n                    for (int i = iSavedFieldsCount; i < savedFields.length; i++) {\n                        if (savedFields[i].isSaved()) {\n                            resetField(savedFields[i].getField());\n                            savedFields[i].setSaved(false);\n                        }\n                    }\n                }\n                throw ex;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..883e395c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException ex) {\n+                if (resetFields) {\n+                    // try to reset the remaining fields\n+                    for (int i = iSavedFieldsCount; i < savedFields.length; i++) {\n+                        if (savedFields[i].isSaved()) {\n+                            resetField(savedFields[i].getField());\n+                            savedFields[i].setSaved(false);\n+                        }\n+                    }\n+                }\n+                throw ex;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}