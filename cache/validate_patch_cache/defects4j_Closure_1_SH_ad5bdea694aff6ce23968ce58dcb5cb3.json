{
    "patch": "+      argList = getFunctionArgList(function);\n+      Node currArg = argList.getFirstChild();\n+      while (currArg != null) {\n+        Node next = currArg.getNext();\n+        if (!referenced.contains(fnScope.getVar(currArg.getString()))) {\n+          currArg.detach();\n+        }\n+        currArg = next;\n+      }\n+      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..180fb92b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,16 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n++      argList = getFunctionArgList(function);\n++      Node currArg = argList.getFirstChild();\n++      while (currArg != null) {\n++        Node next = currArg.getNext();\n++        if (!referenced.contains(fnScope.getVar(currArg.getString()))) {\n++          currArg.detach();\n++        }\n++        currArg = next;\n++      }\n++      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}