{
    "patch": "StringBuilder sb = new StringBuilder();\nfor (int i = 0; i < input.length(); i++) {\n    char c = input.charAt(i);\n    if ((c >= 0x0020) && (c <= 0x007e)) {\n        if (c == '\\\\') {\n            sb.append('\\\\');\n            sb.append('\\\\');\n        } else {\n            sb.append(c);\n        }\n    } else {\n        switch (c) {\n            case '\\n':  sb.append(\"\\\\n\");  break;\n            case '\\r':  sb.append(\"\\\\r\");  break;\n            case '\\t':  sb.append(\"\\\\t\");  break;\n            case '\\f':  sb.append(\"\\\\f\");  break;\n            case '\\b':  sb.append(\"\\\\b\");  break;\n            default: {\n                sb.append(\"\\\\u\");\n                String hex = Integer.toHexString(c);\n                int pad = 4 - hex.length();\n                while (pad-- > 0) {\n                    sb.append('0');\n                }\n                sb.append(hex);\n            }\n        }\n    }\n}\nString result = sb.toString();\nassertTrue(\"One or more errors detected\", result.equals(expected));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}