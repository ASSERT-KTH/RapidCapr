{
    "patch": "if (end <= start) {\n  throw new IllegalArgumentException(\"bound must be greater than start\");\n} else if (count < 0) {\n  throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n} else if (count == 0) {\n  return \"\";\n} else if (chars != null && chars.length == 0) {\n  throw new IllegalArgumentException(\"The chars array must not be empty.\");\n} else if (chars == null && !letters && !numbers) {\n  end = Integer.MAX_VALUE; // if no characters are specified, set end to max value\n} \n\n// rest of the original code",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..15aa944d 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,19 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+if (end <= start) {\n+  throw new IllegalArgumentException(\"bound must be greater than start\");\n+} else if (count < 0) {\n+  throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n+} else if (count == 0) {\n+  return \"\";\n+} else if (chars != null && chars.length == 0) {\n+  throw new IllegalArgumentException(\"The chars array must not be empty.\");\n+} else if (chars == null && !letters && !numbers) {\n+  end = Integer.MAX_VALUE; // if no characters are specified, set end to max value\n+} \n+\n+// rest of the original code\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "junit.framework.AssertionFailedError: Message (bound must be positive) must contain 'start'",
    "test_result": "FAIL"
}