{
    "patch": "public static long min_subarray_sum(ArrayList<Long> nums) {\n    long ans = Long.MIN_VALUE;\n    long sum = 0;\n\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums.get(i);\n        ans = Math.min(ans, sum);\n        ans = Math.max(ans, -sum);\n        if (sum > 0) {\n            sum = 0;\n        }\n    }\n    return ans;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java b/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\nindex 36e383f..9561a0e 100644\n--- a/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\n+++ b/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\n@@ -15,7 +15,20 @@ public class MIN_SUBARRAY_SUM {\n         long max_sum = 0;\n         long s = 0;\n         for(long num : nums) {\n-            s += num;\n+public static long min_subarray_sum(ArrayList<Long> nums) {\n+    long ans = Long.MIN_VALUE;\n+    long sum = 0;\n+\n+    for (int i = 0; i < nums.size(); i++) {\n+        sum += nums.get(i);\n+        ans = Math.min(ans, sum);\n+        ans = Math.max(ans, -sum);\n+        if (sum > 0) {\n+            sum = 0;\n+        }\n+    }\n+    return ans;\n+}\n             if(s < 0) {\n                 s = 0;\n             }",
    "result_reason": " /tmp/humaneval-MIN_SUBARRAY_SUM/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java:[18,1] illegal start of expression",
    "test_result": "ERROR"
}