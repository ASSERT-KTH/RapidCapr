{
    "patch": "Type[] actualTypeArguments = typeVariable.getGenericDeclaration() instanceof ParameterizedType ?\n                    ((ParameterizedType) typeVariable.getGenericDeclaration()).getActualTypeArguments() :\n                    null;\nif (actualTypeArguments != null && actualTypeArguments.length > 0) {\n    for (Type actualType : actualTypeArguments) {\n        if (!actualType.equals(Object.class)) {\n            registerTypeVariablesOn(actualType);\n        }\n    }\n} else {\n    for (Type type : typeVariable.getBounds()) {\n        if (!type.equals(Object.class)) {\n            registerTypeVariablesOn(type);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..66aec2371 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,27 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] actualTypeArguments = typeVariable.getGenericDeclaration() instanceof ParameterizedType ?\n+                    ((ParameterizedType) typeVariable.getGenericDeclaration()).getActualTypeArguments() :\n+                    null;\n+if (actualTypeArguments != null && actualTypeArguments.length > 0) {\n+    for (Type actualType : actualTypeArguments) {\n+        if (!actualType.equals(Object.class)) {\n+            registerTypeVariablesOn(actualType);\n+        }\n+    }\n+} else {\n+    for (Type type : typeVariable.getBounds()) {\n+        if (!type.equals(Object.class)) {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}