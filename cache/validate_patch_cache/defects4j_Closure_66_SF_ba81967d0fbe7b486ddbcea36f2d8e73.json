{
    "patch": "public static double getTypedPercent(String json) {\n    int total = 0;\n    int typed = 0;\n    int index = 0;\n    while (index < json.length()) {\n        char c = json.charAt(index);\n        if (c == '{') {\n            total++;\n            index++;\n            while (index < json.length() && json.charAt(index) != '}') {\n                if (json.charAt(index) == '\"' && index < json.length() - 1 && json.charAt(index + 1) == ':') {\n                    typed++;\n                }\n                index++;\n            }\n        } else {\n            index++;\n        }\n    }\n    return ((double) typed) / total * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..d1b44d44 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    int total = 0;\n+    int typed = 0;\n+    int index = 0;\n+    while (index < json.length()) {\n+        char c = json.charAt(index);\n+        if (c == '{') {\n+            total++;\n+            index++;\n+            while (index < json.length() && json.charAt(index) != '}') {\n+                if (json.charAt(index) == '\"' && index < json.length() - 1 && json.charAt(index + 1) == ':') {\n+                    typed++;\n+                }\n+                index++;\n+            }\n+        } else {\n+            index++;\n+        }\n+    }\n+    return ((double) typed) / total * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}