{
    "patch": "public static boolean right_angle_triangle(int a, int b, int c) {\n    if (a <= 0 || b <= 0 || c <= 0) {    // check if any of the sides are less than or equal to zero\n        return false;\n    }\n\n    // sort sides in ascending order\n    int[] sides = {a, b, c};\n    Arrays.sort(sides);\n\n    // check if sum of shorter sides is greater than the longest side\n    if (sides[0] + sides[1] <= sides[2]) {\n        return false;\n    }\n\n    // check if any two sides square sum up to the square of the third side\n    return (sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..3c6b464 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -9,7 +9,21 @@ package humaneval.buggy;\n // right_angle_triangle(1, 2, 3) == False\n \n public class RIGHT_ANGLE_TRIANGLE {\n-    public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+public static boolean right_angle_triangle(int a, int b, int c) {\n+    if (a <= 0 || b <= 0 || c <= 0) {    // check if any of the sides are less than or equal to zero\n+        return false;\n     }\n+\n+    // sort sides in ascending order\n+    int[] sides = {a, b, c};\n+    Arrays.sort(sides);\n+\n+    // check if sum of shorter sides is greater than the longest side\n+    if (sides[0] + sides[1] <= sides[2]) {\n+        return false;\n+    }\n+\n+    // check if any two sides square sum up to the square of the third side\n+    return (sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]);\n+}\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[19,5] cannot find symbol",
    "test_result": "ERROR"
}