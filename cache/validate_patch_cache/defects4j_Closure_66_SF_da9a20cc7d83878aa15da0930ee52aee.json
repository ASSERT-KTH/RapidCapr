{
    "patch": "public static double getTypedPercent(String json) {\n    double numTyped = 0;\n    double numTotal = 0;\n\n    try {\n        JSONObject obj = new JSONObject(json);\n        JSONArray arr = obj.getJSONArray(\"quiz\");\n\n        for (int i = 0; i < arr.length(); i++) {\n            JSONObject q = arr.getJSONObject(i);\n            JSONArray answers = q.getJSONArray(\"answers\");\n\n            for (int j = 0; j < answers.length(); j++) {\n                JSONObject ans = answers.getJSONObject(j);\n                char selected = ans.getString(\"selected\").charAt(0);\n                char correct = ans.getString(\"correct\").charAt(0);\n                if (selected != '-') {\n                    numTotal++;\n                    if (selected == correct) {\n                        numTyped++;\n                    }\n                }\n            }\n        }\n\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n\n    if (numTotal > 0) {\n        return numTyped / numTotal * 100;\n    }\n    return 0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..cd43a042 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,40 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    double numTyped = 0;\n+    double numTotal = 0;\n+\n+    try {\n+        JSONObject obj = new JSONObject(json);\n+        JSONArray arr = obj.getJSONArray(\"quiz\");\n+\n+        for (int i = 0; i < arr.length(); i++) {\n+            JSONObject q = arr.getJSONObject(i);\n+            JSONArray answers = q.getJSONArray(\"answers\");\n+\n+            for (int j = 0; j < answers.length(); j++) {\n+                JSONObject ans = answers.getJSONObject(j);\n+                char selected = ans.getString(\"selected\").charAt(0);\n+                char correct = ans.getString(\"correct\").charAt(0);\n+                if (selected != '-') {\n+                    numTotal++;\n+                    if (selected == correct) {\n+                        numTyped++;\n+                    }\n+                }\n+            }\n+        }\n+\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+\n+    if (numTotal > 0) {\n+        return numTyped / numTotal * 100;\n+    }\n+    return 0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}