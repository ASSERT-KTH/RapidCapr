{
    "patch": "if (nameNode.isQualifiedName()) {\n    String targetName = nameNode.getFirstChild().getQualifiedName();\n    if (targetName.startsWith(\"Math.\") ||\n        targetName.startsWith(\"console.\")) {\n        return false;\n    }\n    if (compiler != null && targetName.startsWith(\"JSON.\")) {\n        for (Node arg : callNode.getChildren().skip(1)) {\n            if (arg.isObjectLit()) {\n                return false;\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..f8f93eae 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,20 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.isQualifiedName()) {\n+    String targetName = nameNode.getFirstChild().getQualifiedName();\n+    if (targetName.startsWith(\"Math.\") ||\n+        targetName.startsWith(\"console.\")) {\n+        return false;\n+    }\n+    if (compiler != null && targetName.startsWith(\"JSON.\")) {\n+        for (Node arg : callNode.getChildren().skip(1)) {\n+            if (arg.isObjectLit()) {\n+                return false;\n+            }\n+        }\n+    }\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}