{
    "patch": "private void handleBlockComment(Comment comment) {\n    String commentValue = comment.getValue().trim();\n    boolean hasTag = false;\n    if(commentValue.startsWith(\"/*\") && commentValue.endsWith(\"*/\"))\n    {\n        String[] lines = commentValue.split(\"\\\\r?\\\\n\");\n        for(int idx=1; id",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..5775f2f9 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,13 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n-    }\n-  }\n+private void handleBlockComment(Comment comment) {\n+    String commentValue = comment.getValue().trim();\n+    boolean hasTag = false;\n+    if(commentValue.startsWith(\"/*\") && commentValue.endsWith(\"*/\"))\n+    {\n+        String[] lines = commentValue.split(\"\\\\r?\\\\n\");\n+        for(int idx=1; id\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}