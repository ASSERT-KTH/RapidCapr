{
    "patch": "public static List<Integer> strange_sort_list(List<Integer> lst) {\n    if (lst == null || lst.isEmpty()) {\n        return new ArrayList<>();\n    }\n    List<Integer> result = new ArrayList<>(lst.size());\n\n    boolean switched = true;\n    while (!lst.isEmpty()) {\n        int extremaIndex = 0;\n        for (int i = 1; i < lst.size(); i++) {\n            if (switched) {\n                if (lst.get(i) < lst.get(extremaIndex)) {\n                    extremaIndex = i;\n                }\n            } else {\n                if (lst.get(i) > lst.get(extremaIndex)) {\n                    extremaIndex = i;\n                }\n            }\n        }\n        result.add(lst.get(extremaIndex));\n        lst.remove(extremaIndex);\n        switched = !switched;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\nindex 094f5de..2ca8634 100644\n--- a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n+++ b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n@@ -14,17 +14,30 @@ strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n strange_sort_list([]) == [] */\n \n public class STRANGE_SORT_LIST {\n-    public static List<Integer> strange_sort_list(List<Integer> lst) {\n-        List<Integer> result = new ArrayList<Integer>();\n+public static List<Integer> strange_sort_list(List<Integer> lst) {\n+    if (lst == null || lst.isEmpty()) {\n+        return new ArrayList<>();\n+    }\n+    List<Integer> result = new ArrayList<>(lst.size());\n \n-        boolean switched = true;\n-        while (lst.size() > 0) {\n+    boolean switched = true;\n+    while (!lst.isEmpty()) {\n+        int extremaIndex = 0;\n+        for (int i = 1; i < lst.size(); i++) {\n             if (switched) {\n-                result.add(Collections.min(lst));\n+                if (lst.get(i) < lst.get(extremaIndex)) {\n+                    extremaIndex = i;\n+                }\n             } else {\n-                result.add(Collections.max(lst));\n+                if (lst.get(i) > lst.get(extremaIndex)) {\n+                    extremaIndex = i;\n+                }\n             }\n         }\n-        return result;\n+        result.add(lst.get(extremaIndex));\n+        lst.remove(extremaIndex);\n+        switched = !switched;\n     }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}