{
    "patch": "public final boolean isEmptyType() {\n    if (isNoType() || isVoidType() || isNullType() || isNoResolvedType() || isNoObjectType() || isUnknownType()) {\n        return true;\n    } else if (isArrayType()) {\n        return ((ArrayType) this).getComponentType().isEmptyType();\n    } else if (isUnionType()) {\n        for (TypeMirror type : ((UnionType) this).getAlternatives()) {\n            if (!type.isEmptyType()) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..c9c7b4d4 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,22 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+public final boolean isEmptyType() {\n+    if (isNoType() || isVoidType() || isNullType() || isNoResolvedType() || isNoObjectType() || isUnknownType()) {\n+        return true;\n+    } else if (isArrayType()) {\n+        return ((ArrayType) this).getComponentType().isEmptyType();\n+    } else if (isUnionType()) {\n+        for (TypeMirror type : ((UnionType) this).getAlternatives()) {\n+            if (!type.isEmptyType()) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}