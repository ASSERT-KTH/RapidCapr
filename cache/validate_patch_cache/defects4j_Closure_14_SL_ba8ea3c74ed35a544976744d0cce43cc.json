{
    "patch": "if (cfa != null && parent.getNext() != null) {\n  Node followNode = computeFollowNode(fromNode, parent.getNext(), cfa);\n  if (followNode != null) {\n    cfa.createEdge(fromNode, Branch.UNCOND, followNode);\n  } else {\n    Node nextSibling = parent.getNext();\n\n    while (nextSibling != null && nextSibling.isFunction()) {\n      nextSibling = nextSibling.getNext();\n    }\n\n    if (nextSibling != null) {\n      cfa.createEdge(fromNode, Branch.UNCOND, nextSibling);\n    } else {\n      cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, parent.getParent(), cfa));\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..c84c0bf5 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,24 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (cfa != null && parent.getNext() != null) {\n+  Node followNode = computeFollowNode(fromNode, parent.getNext(), cfa);\n+  if (followNode != null) {\n+    cfa.createEdge(fromNode, Branch.UNCOND, followNode);\n+  } else {\n+    Node nextSibling = parent.getNext();\n+\n+    while (nextSibling != null && nextSibling.isFunction()) {\n+      nextSibling = nextSibling.getNext();\n+    }\n+\n+    if (nextSibling != null) {\n+      cfa.createEdge(fromNode, Branch.UNCOND, nextSibling);\n+    } else {\n+      cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, parent.getParent(), cfa));\n+    }\n+  }\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "junit.framework.AssertionFailedError: No cross edges found",
    "test_result": "FAIL"
}