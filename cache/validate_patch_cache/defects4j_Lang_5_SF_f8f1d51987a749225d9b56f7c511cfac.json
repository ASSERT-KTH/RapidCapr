{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 3 || str.charAt(2) != '_' && str.charAt(2) != '-') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    int index = 3;\n    char separator = str.charAt(2);\n    while (index < len) {\n        final int nextIndex = str.indexOf(separator, index);\n        if (nextIndex == -1) {\n            break;\n        }\n        if (nextIndex - index == 2 && Character.isUpperCase(str.charAt(index)) && Character.isUpperCase(str.charAt(index + 1))) {\n            if (nextIndex + 1 == len || nextIndex + 1 == len - 1 && separator == '-') {\n                return new Locale(str.substring(0, index), str.substring(index, nextIndex), \"\");\n            } else if (nextIndex + 1 < len - 1 && (str.charAt(nextIndex + 1) == '_' || str.charAt(nextIndex + 1) == '-')) {\n                return new Locale(str.substring(0, index), str.substring(index, nextIndex), str.substring(nextIndex + 2, len));\n            }\n        }\n        index = nextIndex + 1;\n    }\n    if (len - index == 2 && Character.isUpperCase(str.charAt(index)) && Character.isUpperCase(str.charAt(index + 1))) {\n        return new Locale(str.substring(0, index), str.substring(index), \"\");\n    }\n    if (len - index == 3 && Character.isUpperCase(str.charAt(index)) && Character.isUpperCase(str.charAt(index + 1)) && (str.charAt(index + 2) == '-' || str.charAt(index + 2) == '_')) {\n        return new Locale(str.substring(0, index), str.substring(index, index + 2), \"\");\n    }\n    if (index == 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, index - 1), \"\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..0cf9b97e 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,53 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+public static Locale toLocale(final String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    final char ch0 = str.charAt(0);\n+    final char ch1 = str.charAt(1);\n+    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str);\n+    }\n+    if (len < 3 || str.charAt(2) != '_' && str.charAt(2) != '-') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    int index = 3;\n+    char separator = str.charAt(2);\n+    while (index < len) {\n+        final int nextIndex = str.indexOf(separator, index);\n+        if (nextIndex == -1) {\n+            break;\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        if (nextIndex - index == 2 && Character.isUpperCase(str.charAt(index)) && Character.isUpperCase(str.charAt(index + 1))) {\n+            if (nextIndex + 1 == len || nextIndex + 1 == len - 1 && separator == '-') {\n+                return new Locale(str.substring(0, index), str.substring(index, nextIndex), \"\");\n+            } else if (nextIndex + 1 < len - 1 && (str.charAt(nextIndex + 1) == '_' || str.charAt(nextIndex + 1) == '-')) {\n+                return new Locale(str.substring(0, index), str.substring(index, nextIndex), str.substring(nextIndex + 2, len));\n             }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n+        index = nextIndex + 1;\n+    }\n+    if (len - index == 2 && Character.isUpperCase(str.charAt(index)) && Character.isUpperCase(str.charAt(index + 1))) {\n+        return new Locale(str.substring(0, index), str.substring(index), \"\");\n+    }\n+    if (len - index == 3 && Character.isUpperCase(str.charAt(index)) && Character.isUpperCase(str.charAt(index + 1)) && (str.charAt(index + 2) == '-' || str.charAt(index + 2) == '_')) {\n+        return new Locale(str.substring(0, index), str.substring(index, index + 2), \"\");\n     }\n+    if (index == 3) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    return new Locale(str.substring(0, index - 1), \"\");\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<fr[]> but was:<fr[_]>",
    "test_result": "FAIL"
}