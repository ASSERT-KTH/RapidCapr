{
    "patch": "String deciphered = \"\";\nfor (int i = 0; i < message.length(); i++) {\n    char ch = message.charAt(i);\n\n    if (ch == '+' && isUrlEncoded) {\n        deciphered += ' ';\n    } else if (ch == '%') {\n        if (i + 2 < message.length()) {\n            String hexCode = message.substring(i + 1, i + 3);\n            char decodedChar = (char) Integer.parseInt(hexCode, 16);\n            deciphered += decodedChar;\n            i += 2;\n        } else {\n            deciphered += ch;\n        }\n    } else {\n        deciphered += ch;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}