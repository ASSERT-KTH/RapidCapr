{
    "patch": "String remainingLine = stream.getRemainingJSDocLine();\n\n// Repeat until non-warning line is obtained\nwhile (remainingLine != null && (remainingLine.trim().startsWith(\"*\") || remainingLine.contains(\"JSC_TYPE_PARSE_ERROR\"))) {\n    remainingLine = stream.getRemainingJSDocLine();\n}\n\nif (remainingLine == null || remainingLine.trim().isEmpty()) {\n    throw new IllegalStateException(\"Recorded bad position information\");\n}\n\nreturn remainingLine.replaceAll(\"\\\\{T\\\\}\", \"\").trim();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..32aaa383 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,18 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+String remainingLine = stream.getRemainingJSDocLine();\n+\n+// Repeat until non-warning line is obtained\n+while (remainingLine != null && (remainingLine.trim().startsWith(\"*\") || remainingLine.contains(\"JSC_TYPE_PARSE_ERROR\"))) {\n+    remainingLine = stream.getRemainingJSDocLine();\n+}\n+\n+if (remainingLine == null || remainingLine.trim().isEmpty()) {\n+    throw new IllegalStateException(\"Recorded bad position information\");\n+}\n+\n+return remainingLine.replaceAll(\"\\\\{T\\\\}\", \"\").trim();\n     return result;\n   }\n ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}