{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nNode grandParent = NodeUtil.getEnclosingNode(parent, Token.ASSIGN);\nif (grandParent != null) {\n  Node lhs = grandParent.getFirstChild();\n  if (lhs.getType() == Token.GETPROP) {\n    Node proto = lhs.getLastChild();\n    if (proto.getType() == Token.STRING &&\n        proto.getString().equals(\"prototype\")) {\n      Node owner = lhs.getFirstChild();\n      if (owner != null) {\n        String name = NodeUtil.getNearestFunctionName(owner);\n        if (name != null &&\n            (\"Object\".equals(name) ||\n             \"Function\".equals(name) ||\n             \"goog.abstractMethod\".equals(name) ||\n             \"goog.reflect.objectProperty\".equals(name))) {\n          // Don't traverse Object.prototype, Function.prototype,\n          // goog.abstractMethod, or goog.reflect.objectProperty\n          return false;\n        } else if (NodeUtil.isObjectLitKey(n)) {\n          // Don't traverse functions declared inside an object literal.\n          return false;\n        }\n      }\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..155ac42e 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,33 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+Node grandParent = NodeUtil.getEnclosingNode(parent, Token.ASSIGN);\n+if (grandParent != null) {\n+  Node lhs = grandParent.getFirstChild();\n+  if (lhs.getType() == Token.GETPROP) {\n+    Node proto = lhs.getLastChild();\n+    if (proto.getType() == Token.STRING &&\n+        proto.getString().equals(\"prototype\")) {\n+      Node owner = lhs.getFirstChild();\n+      if (owner != null) {\n+        String name = NodeUtil.getNearestFunctionName(owner);\n+        if (name != null &&\n+            (\"Object\".equals(name) ||\n+             \"Function\".equals(name) ||\n+             \"goog.abstractMethod\".equals(name) ||\n+             \"goog.reflect.objectProperty\".equals(name))) {\n+          // Don't traverse Object.prototype, Function.prototype,\n+          // goog.abstractMethod, or goog.reflect.objectProperty\n+          return false;\n+        } else if (NodeUtil.isObjectLitKey(n)) {\n+          // Don't traverse functions declared inside an object literal.\n+          return false;\n+        }\n+      }\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}