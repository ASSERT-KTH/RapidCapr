{
    "patch": "          if (topType.isUnknownType()\n                  || topType.isAllType()\n                  || topType.isNoType()\n                  || topType.isVoidType()) {\n              return registry.getNativeType(JSTypeNative.TOP_FUNCTION.getInstance());\n          }\n          return topType;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..1640c7ca 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,6 +51,12 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n+          if (topType.isUnknownType()\n+                  || topType.isAllType()\n+                  || topType.isNoType()\n+                  || topType.isVoidType()) {\n+              return registry.getNativeType(JSTypeNative.TOP_FUNCTION.getInstance());\n+          }\n           return topType;\n         }\n ",
    "result_reason": "error: package JSTypeNative does not exist",
    "test_result": "ERROR"
}