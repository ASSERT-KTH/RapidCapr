{
    "patch": "public void testISO8859_1_ESCAPE() throws Exception {\n    StringReader reader = new StringReader(\"this is a test \\\\302\\\\261\\\\303\\\\231\\\\342\\\\200\\\\223\\\\342\\\\200\\\\234\\\\342\\\\200\\\\246\\\\342\\\\200\\\\250\\\\342\\\\200\\\\251\");\n    StringWriter writer = new StringWriter();\n    int b;\n    boolean success = true;\n    while ((b = reader.read()) != -1) {\n        char ch = (char) b;\n        String escape = EncoderFactory.getISO8859_1_ESCAPE().translate(Character.toString(ch));\n        String expected = escape.substring(2);\n        if (ch <= 0x7F) {\n            expected = String.format(\"\\\\%03d\", (int) ch);\n        }\n        if (!escape.equals(expected)) {\n            success = false;\n            System.err.println(\"Unmatched escape: got \" + escape + \", expected \" + expected);\n        }\n        writer.write(ch);\n    }\n    writer.flush();\n    assertEquals(\"this is a test \\u00f1\\u00e7\\u2013\\u201c\\u2026\\u2030\\u2039\", writer.toString());\n    assertTrue(\"One or more errors detected\", success);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}