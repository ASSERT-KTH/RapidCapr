{
    "patch": "public static String getprop(String propName) {\n        String[] command = new String[] { \"getprop\", propName };\n        try {\n            Process process = new ProcessBuilder().command(command).redirectErrorStream(true).start();\n            try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {\n                String line = reader.readLine();\n                if (line != null) {\n                    return line;\n                }\n            }\n        } catch (IOException e) {\n            // ignore exception and return null if any IO exception occurs\n        }\n        return null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..c4c8a3f5 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getprop(String propName) {\n+        String[] command = new String[] { \"getprop\", propName };\n+        try {\n+            Process process = new ProcessBuilder().command(command).redirectErrorStream(true).start();\n+            try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {\n+                String line = reader.readLine();\n+                if (line != null) {\n+                    return line;\n+                }\n+            }\n+        } catch (IOException e) {\n+            // ignore exception and return null if any IO exception occurs\n+        }\n+        return null;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}