{
    "patch": "        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n        if (oldMockHandler instanceof MethodInterceptorFilter) {\n            return;\n        }\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n        newFilter.setInvocationHandler(invocation -> {\n            try {\n                MethodInvocationReport report = new MethodInvocationReport(invocation.getMock(), invocation.getMethod(), invocation.getArguments(), invocation.callRealMethod());\n                invocationListener.reportInvocation(report);\n                return report.getReturnValue();\n            } catch (Throwable throwable) {\n                throw new MockitoException(\"Failed to report invocation\", throwable);\n            }\n        });\n        ((Factory) mock).setCallback(0, newFilter);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..f53fb143c 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,25 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+        if (oldMockHandler instanceof MethodInterceptorFilter) {\n+            return;\n+        }\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        newFilter.setInvocationHandler(invocation -> {\n+            try {\n+                MethodInvocationReport report = new MethodInvocationReport(invocation.getMock(), invocation.getMethod(), invocation.getArguments(), invocation.callRealMethod());\n+                invocationListener.reportInvocation(report);\n+                return report.getReturnValue();\n+            } catch (Throwable throwable) {\n+                throw new MockitoException(\"Failed to report invocation\", throwable);\n+            }\n+        });\n+        ((Factory) mock).setCallback(0, newFilter);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: lambda expressions are not supported in -source 1.5",
    "test_result": "ERROR"
}