{
    "patch": "        double yMin = f.value(min);\n        double yMax = f.value(max);\n\n        // check if endpoints bracket the root\n        if (yMin * yMax >= 0) {\n            throw new IllegalArgumentException(\"The provided interval does not bracket a root. The function values at the endpoints are [\" + yMin + \", \" + yMax + \"].\");\n        }\n\n        // Full Brent algorithm starting with provided initial guess",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..08ee4776c 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,15 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        double yMin = f.value(min);\n+        double yMax = f.value(max);\n+\n+        // check if endpoints bracket the root\n+        if (yMin * yMax >= 0) {\n+            throw new IllegalArgumentException(\"The provided interval does not bracket a root. The function values at the endpoints are [\" + yMin + \", \" + yMax + \"].\");\n+        }\n+\n+        // Full Brent algorithm starting with provided initial guess\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: variable yMin is already defined in method solve(UnivariateRealFunction,double,double,double)",
    "test_result": "ERROR"
}