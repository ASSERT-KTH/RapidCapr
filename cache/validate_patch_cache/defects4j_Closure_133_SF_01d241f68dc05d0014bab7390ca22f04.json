{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (!result.trim().startsWith(\"/**\")) {\n        return null;\n    }\n\n    result = result.replaceFirst(\"^\\\\s*/\\\\*\\\\*[ ]*\", \"\"); // remove \"/**\"\n    result = result.replaceFirst(\"[ ]*\\\\*/$\", \"\");      // remove \"*/\" and any preceding spaces\n\n    result = result.replaceAll(\"\\n\", \" \");               // replace line breaks with spaces\n    result = result.replaceAll(\"\\\\s+\", \" \");             // replace any consecutive whitespace with a single whitespace\n    \n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..cf8f102c 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,20 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+    if (!result.trim().startsWith(\"/**\")) {\n+        return null;\n+    }\n+\n+    result = result.replaceFirst(\"^\\\\s*/\\\\*\\\\*[ ]*\", \"\"); // remove \"/**\"\n+    result = result.replaceFirst(\"[ ]*\\\\*/$\", \"\");      // remove \"*/\" and any preceding spaces\n+\n+    result = result.replaceAll(\"\\n\", \" \");               // replace line breaks with spaces\n+    result = result.replaceAll(\"\\\\s+\", \" \");             // replace any consecutive whitespace with a single whitespace\n+    \n+    return result.trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}