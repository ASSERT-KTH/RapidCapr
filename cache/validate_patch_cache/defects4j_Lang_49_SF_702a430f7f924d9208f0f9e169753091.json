{
    "patch": "        int gcd = greatestCommonDivisor(numerator, denominator);\n        if (gcd == 0) {\n            return this;\n        } else {\n            return new Fraction(numerator / gcd, denominator / gcd);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..50a0692e 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,13 +462,12 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n+        int gcd = greatestCommonDivisor(numerator, denominator);\n+        if (gcd == 0) {\n             return this;\n+        } else {\n+            return new Fraction(numerator / gcd, denominator / gcd);\n         }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n-    }\n \n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}