{
    "patch": "        if (start >= getItemCount()) {\n            throw new IllegalArgumentException(\"Start index is out of range.\");\n        }\n        end = Math.min(end, getItemCount() - 1);\n        if (end < start) {\n            throw new IllegalArgumentException(\"End index is less than start index.\");\n        }\n        int numItems = end - start + 1;\n        TimeSeries copy = new TimeSeries(getDescription());\n        // set the maximum item count, to ensure that it doesn't grow dynamically\n        copy.setMaximumItemCount(numItems);\n        if (this.data.size() > 0) {\n            for (int i = start; i <= end; i++) {\n                TimeSeriesDataItem item = this.data.get(i);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                } catch (SeriesException e) {",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..ccd0af5 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start >= getItemCount()) {\n+            throw new IllegalArgumentException(\"Start index is out of range.\");\n+        }\n+        end = Math.min(end, getItemCount() - 1);\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"End index is less than start index.\");\n+        }\n+        int numItems = end - start + 1;\n+        TimeSeries copy = new TimeSeries(getDescription());\n+        // set the maximum item count, to ensure that it doesn't grow dynamically\n+        copy.setMaximumItemCount(numItems);\n+        if (this.data.size() > 0) {\n+            for (int i = start; i <= end; i++) {\n+                TimeSeriesDataItem item = this.data.get(i);\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                try {\n+                    copy.add(clone);\n+                } catch (SeriesException e) {\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}