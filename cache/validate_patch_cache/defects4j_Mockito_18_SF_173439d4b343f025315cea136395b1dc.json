{
    "patch": "public static int alternativeSum(int[] arr) {\n    if (arr == null || arr.length == 0) {\n        return 0;\n    }\n    \n    int sum = 0;\n    \n    for (int i = 0; i < arr.length; i+=2) {\n        sum += arr[i];\n        if(i + 1 < arr.length)\n            sum -= arr[i+1];\n    }\n    \n    return sum;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..35c3ff484 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,21 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static int alternativeSum(int[] arr) {\n+    if (arr == null || arr.length == 0) {\n+        return 0;\n+    }\n+    \n+    int sum = 0;\n+    \n+    for (int i = 0; i < arr.length; i+=2) {\n+        sum += arr[i];\n+        if(i + 1 < arr.length)\n+            sum -= arr[i+1];\n+    }\n+    \n+    return sum;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}