{
    "patch": "public static String unescape(String str) {\n    StringBuffer out = new StringBuffer();\n    for (int i = 0; i < str.length(); i++) {\n        char c = str.charAt(i);\n        if (c == '\\\\') {\n            if (++i >= str.length()) {\n                throw new IllegalArgumentException(\n                    \"invalid escape sequence: \\\\\" + c);\n            }\n            switch (c = str.charAt(i)) {\n            case 'n':\n                c = '\\n';\n                break;\n            case 't':\n                c = '\\t';\n                break;\n            case 'r':\n                c = '\\r';\n                break;\n            case 'f':\n                c = '\\f';\n                break;\n            case '\\\\':\n                c = '\\\\';\n                break;\n            case '\\\"':\n                c = '\\\"';\n                break;\n            case '\\'':\n                c = '\\'';\n                break;\n            case 'u':\n                if (i >= str.length() - 4) {\n                    throw new IllegalArgumentException(\n                        \"invalid escape sequence: \\\\u\" + str.substring(i));\n                }\n                int value = Integer.parseInt(str.substring(i + 1, i + 5), 16);\n                if (value < 0) {\n                    throw new IllegalArgumentException(\n                        \"invalid escape sequence: \\\\u\" + str.substring(i, i + 5));\n                }\n                c = (char)value;\n                i += 4;\n                break;\n            default:\n                throw new IllegalArgumentException(\n                    \"invalid escape sequence: \\\\\" + c);\n            }\n        }\n        out.append(c);\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..0a4b30fd 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,59 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str) {\n+    StringBuffer out = new StringBuffer();\n+    for (int i = 0; i < str.length(); i++) {\n+        char c = str.charAt(i);\n+        if (c == '\\\\') {\n+            if (++i >= str.length()) {\n+                throw new IllegalArgumentException(\n+                    \"invalid escape sequence: \\\\\" + c);\n+            }\n+            switch (c = str.charAt(i)) {\n+            case 'n':\n+                c = '\\n';\n+                break;\n+            case 't':\n+                c = '\\t';\n+                break;\n+            case 'r':\n+                c = '\\r';\n+                break;\n+            case 'f':\n+                c = '\\f';\n+                break;\n+            case '\\\\':\n+                c = '\\\\';\n+                break;\n+            case '\\\"':\n+                c = '\\\"';\n+                break;\n+            case '\\'':\n+                c = '\\'';\n+                break;\n+            case 'u':\n+                if (i >= str.length() - 4) {\n+                    throw new IllegalArgumentException(\n+                        \"invalid escape sequence: \\\\u\" + str.substring(i));\n+                }\n+                int value = Integer.parseInt(str.substring(i + 1, i + 5), 16);\n+                if (value < 0) {\n+                    throw new IllegalArgumentException(\n+                        \"invalid escape sequence: \\\\u\" + str.substring(i, i + 5));\n+                }\n+                c = (char)value;\n+                i += 4;\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\n+                    \"invalid escape sequence: \\\\\" + c);\n+            }\n+        }\n+        out.append(c);\n+    }\n+    return out.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}