{
    "patch": "public static int fib(int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"n cannot be negative.\");\n    }\n    if (n == 0) {\n        return 0;\n    } else if (n == 1) {\n        return 1;\n    }\n    int first = 0, second = 1;\n    for (int i = 2; i <= n; i++) {\n        int temp = second;\n        second += first;\n        first = temp;\n        if (second < 0) {\n            throw new IllegalArgumentException(\"fib(\" + n + \") is too large to fit in an int\");\n        }\n    }\n    return second;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB.java b/src/main/java/humaneval/buggy/FIB.java\nindex fdc9c32..a4e1526 100644\n--- a/src/main/java/humaneval/buggy/FIB.java\n+++ b/src/main/java/humaneval/buggy/FIB.java\n@@ -9,7 +9,24 @@ package humaneval.buggy;\n 21 */\n \n public class FIB {\n-    public static int fib(int n) {\n-        return fib(n - 1) + fib(n - 2);\n+public static int fib(int n) {\n+    if (n < 0) {\n+        throw new IllegalArgumentException(\"n cannot be negative.\");\n     }\n+    if (n == 0) {\n+        return 0;\n+    } else if (n == 1) {\n+        return 1;\n+    }\n+    int first = 0, second = 1;\n+    for (int i = 2; i <= n; i++) {\n+        int temp = second;\n+        second += first;\n+        first = temp;\n+        if (second < 0) {\n+            throw new IllegalArgumentException(\"fib(\" + n + \") is too large to fit in an int\");\n+        }\n+    }\n+    return second;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}