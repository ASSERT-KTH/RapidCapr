{
    "patch": "        if (actualTypeParameter instanceof TypeVariable) {\n            Type resolvedTypeParameter = this.contextualActualTypeParameters.get(actualTypeParameter);\n            if (resolvedTypeParameter != null) {\n                actualTypeParameter = resolvedTypeParameter;\n            }\n        }\n        if (actualTypeParameter instanceof WildcardType) {\n            contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeParameter));\n        } else {\n            contextualActualTypeParameters.put(typeParameter, actualTypeParameter);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..6510ba779 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,17 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+        if (actualTypeParameter instanceof TypeVariable) {\n+            Type resolvedTypeParameter = this.contextualActualTypeParameters.get(actualTypeParameter);\n+            if (resolvedTypeParameter != null) {\n+                actualTypeParameter = resolvedTypeParameter;\n+            }\n+        }\n+        if (actualTypeParameter instanceof WildcardType) {\n+            contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeParameter));\n+        } else {\n+            contextualActualTypeParameters.put(typeParameter, actualTypeParameter);\n+        }\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}