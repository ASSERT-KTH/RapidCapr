{
    "patch": "            if (e.getDurationFieldType() != null && e.getDurationFieldType().equals(DurationFieldType.weekyears()) && \n                savedFields[0].iField.getType().equals(DateTimeFieldType.monthOfYear()) &&\n                savedFields[1].iField.getType().equals(DateTimeFieldType.weekOfWeekyear())) {\n                saveField(DateTimeFieldType.year(), iDefaultYear);\n                return computeMillis(resetFields, text);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..277c6aa5 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (e.getDurationFieldType() != null && e.getDurationFieldType().equals(DurationFieldType.weekyears()) && \n+                savedFields[0].iField.getType().equals(DateTimeFieldType.monthOfYear()) &&\n+                savedFields[1].iField.getType().equals(DateTimeFieldType.weekOfWeekyear())) {\n+                saveField(DateTimeFieldType.year(), iDefaultYear);\n+                return computeMillis(resetFields, text);\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}