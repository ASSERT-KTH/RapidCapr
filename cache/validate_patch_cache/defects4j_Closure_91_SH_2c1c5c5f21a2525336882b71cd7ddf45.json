{
    "patch": "      Node grandparent = parent.getParent();\n      if (grandparent != null && grandparent.getType() == Token.ASSIGN &&\n          NodeUtil.isGet(grandparent.getFirstChild())) {\n        Node greatGrandparent = grandparent.getParent();\n        if (greatGrandparent != null &&\n            (greatGrandparent.getType() == Token.EXPR_RESULT ||\n             greatGrandparent.getType() == Token.BLOCK)) {\n          // Traverse the function in this case only if it's not being\n          // assigned to a prototype property.\n          Node getTarget = grandparent.getFirstChild();\n          if (NodeUtil.isGet(getTarget)) {\n            if (getTarget.getType() == Token.GETPROP &&\n                getTarget.getLastChild().getString().equals(\"prototype\")) {\n              return false;\n            }\n            Node obj = getTarget.getFirstChild();\n            if (obj.getType() == Token.GETPROP &&\n                obj.getLastChild().getString().equals(\"prototype\")) {\n              return false;\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..5c20928f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,29 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = parent.getParent();\n+      if (grandparent != null && grandparent.getType() == Token.ASSIGN &&\n+          NodeUtil.isGet(grandparent.getFirstChild())) {\n+        Node greatGrandparent = grandparent.getParent();\n+        if (greatGrandparent != null &&\n+            (greatGrandparent.getType() == Token.EXPR_RESULT ||\n+             greatGrandparent.getType() == Token.BLOCK)) {\n+          // Traverse the function in this case only if it's not being\n+          // assigned to a prototype property.\n+          Node getTarget = grandparent.getFirstChild();\n+          if (NodeUtil.isGet(getTarget)) {\n+            if (getTarget.getType() == Token.GETPROP &&\n+                getTarget.getLastChild().getString().equals(\"prototype\")) {\n+              return false;\n+            }\n+            Node obj = getTarget.getFirstChild();\n+            if (obj.getType() == Token.GETPROP &&\n+                obj.getLastChild().getString().equals(\"prototype\")) {\n+              return false;\n+            }\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}