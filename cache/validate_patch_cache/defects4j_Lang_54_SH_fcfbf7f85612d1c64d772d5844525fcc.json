{
    "patch": "            if (len == 5 && str.charAt(4) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (len == 7 && (str.charAt(5) != '_' || str.charAt(6) == '_')) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (len > 7) {\n                for (int i = 5; i < len; i++) {\n                    if (str.charAt(i) == '_') {\n                        if (i == len - 1 || i == len - 2 || i == len - 3) {\n                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                        } else if (str.charAt(i + 1) < 'A' || str.charAt(i + 1) > 'Z' || str.charAt(i + 2) < 'A'\n                                || str.charAt(i + 2) > 'Z') {\n                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                        }\n                    } else if (str.charAt(i) != '-' || i == len - 1 || i == len - 2 || i == len - 3\n                            || i == len - 4) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    } else if (str.charAt(i + 1) < 'a' || str.charAt(i + 1) > 'z' || str.charAt(i + 2) < 'A'\n                            || str.charAt(i + 2) > 'Z') {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                }\n            }\n            return new Locale.Builder().setLanguage(str.substring(0, 2))\n                    .setRegion(len == 2 ? \"\" : str.substring(3, 5)).setVariant(len <= 5 ? \"\" : str.substring(6))\n                    .build();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..b0571789 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,31 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            if (len == 5 && str.charAt(4) != '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else if (len == 7 && (str.charAt(5) != '_' || str.charAt(6) == '_')) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else if (len > 7) {\n+                for (int i = 5; i < len; i++) {\n+                    if (str.charAt(i) == '_') {\n+                        if (i == len - 1 || i == len - 2 || i == len - 3) {\n+                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                        } else if (str.charAt(i + 1) < 'A' || str.charAt(i + 1) > 'Z' || str.charAt(i + 2) < 'A'\n+                                || str.charAt(i + 2) > 'Z') {\n+                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                        }\n+                    } else if (str.charAt(i) != '-' || i == len - 1 || i == len - 2 || i == len - 3\n+                            || i == len - 4) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    } else if (str.charAt(i + 1) < 'a' || str.charAt(i + 1) > 'z' || str.charAt(i + 2) < 'A'\n+                            || str.charAt(i + 2) > 'Z') {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                }\n+            }\n+            return new Locale.Builder().setLanguage(str.substring(0, 2))\n+                    .setRegion(len == 2 ? \"\" : str.substring(3, 5)).setVariant(len <= 5 ? \"\" : str.substring(6))\n+                    .build();\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}