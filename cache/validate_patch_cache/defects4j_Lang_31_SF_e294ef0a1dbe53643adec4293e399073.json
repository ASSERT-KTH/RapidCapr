{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false; // both sequence and search array are empty\n    }\n    final int len = sequence.length();\n    final int searchLen = searchChars.length;\n    final int ogLen = Character.isSupplementaryCodePoint(searchChars[0]) ? 2 : 1;\n    for (int i = 0; i < len; i++) {\n        final char ch = sequence.charAt(i);\n        for (int j = 0; j < searchLen; j += ogLen) {\n            if (searchChars[j] == ch && (ogLen == 1 || (j + 1 < searchLen && searchChars[j + 1] == sequence.charAt(i + 1)))) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..75bc63a0 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,23 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false; // both sequence and search array are empty\n+    }\n+    final int len = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int ogLen = Character.isSupplementaryCodePoint(searchChars[0]) ? 2 : 1;\n+    for (int i = 0; i < len; i++) {\n+        final char ch = sequence.charAt(i);\n+        for (int j = 0; j < searchLen; j += ogLen) {\n+            if (searchChars[j] == ch && (ogLen == 1 || (j + 1 < searchLen && searchChars[j + 1] == sequence.charAt(i + 1)))) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}