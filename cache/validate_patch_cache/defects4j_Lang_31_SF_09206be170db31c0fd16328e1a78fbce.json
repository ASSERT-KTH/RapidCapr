{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int sequenceLength = sequence.length();\n    final int searchLength = searchChars.length;\n    final int lastCharIndex = sequenceLength - 1;\n    final int lastSearchCharIndex = searchLength - 1;\n    boolean isPrevCharHighSurrogate = false;\n    for (int i = 0; i < sequenceLength; i++) {\n        final char currentChar = sequence.charAt(i);\n        if (Character.isHighSurrogate(currentChar)) {\n            if (i == lastCharIndex) {\n                return false;\n            }\n            final char nextChar = sequence.charAt(i + 1);\n            if (Character.isSurrogatePair(currentChar, nextChar)) {\n                final int codePoint = Character.toCodePoint(currentChar, nextChar);\n                for (int j = 0; j < searchLength; j++) {\n                    final char searchChar = searchChars[j];\n                    if (Character.isSupplementaryCodePoint(searchChar) &&\n                            searchChar == codePoint) {\n                        return true;\n                    }\n                }\n                i++;\n                isPrevCharHighSurrogate = false;\n            } else {\n                if (isPrevCharHighSurrogate) {\n                    return false;\n                }\n                isPrevCharHighSurrogate = true;\n            }\n        } else if (Character.isLowSurrogate(currentChar)) {\n            return false;\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                final char searchChar = searchChars[j];\n                if (Character.isBmpCodePoint(searchChar) && searchChar == currentChar) {\n                    return true;\n                }\n            }\n            isPrevCharHighSurrogate = false;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..44ca6234 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,53 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int sequenceLength = sequence.length();\n+    final int searchLength = searchChars.length;\n+    final int lastCharIndex = sequenceLength - 1;\n+    final int lastSearchCharIndex = searchLength - 1;\n+    boolean isPrevCharHighSurrogate = false;\n+    for (int i = 0; i < sequenceLength; i++) {\n+        final char currentChar = sequence.charAt(i);\n+        if (Character.isHighSurrogate(currentChar)) {\n+            if (i == lastCharIndex) {\n+                return false;\n+            }\n+            final char nextChar = sequence.charAt(i + 1);\n+            if (Character.isSurrogatePair(currentChar, nextChar)) {\n+                final int codePoint = Character.toCodePoint(currentChar, nextChar);\n+                for (int j = 0; j < searchLength; j++) {\n+                    final char searchChar = searchChars[j];\n+                    if (Character.isSupplementaryCodePoint(searchChar) &&\n+                            searchChar == codePoint) {\n+                        return true;\n+                    }\n+                }\n+                i++;\n+                isPrevCharHighSurrogate = false;\n+            } else {\n+                if (isPrevCharHighSurrogate) {\n+                    return false;\n+                }\n+                isPrevCharHighSurrogate = true;\n+            }\n+        } else if (Character.isLowSurrogate(currentChar)) {\n+            return false;\n+        } else {\n+            for (int j = 0; j < searchLength; j++) {\n+                final char searchChar = searchChars[j];\n+                if (Character.isBmpCodePoint(searchChar) && searchChar == currentChar) {\n+                    return true;\n+                }\n+            }\n+            isPrevCharHighSurrogate = false;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}