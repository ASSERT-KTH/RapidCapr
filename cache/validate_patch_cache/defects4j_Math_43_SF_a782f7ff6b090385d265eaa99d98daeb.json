{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden,\n    // need to increment these\n    if (meanImpl != null) {\n        try {\n            if (!Double.isNaN(value)) {\n                meanImpl.increment(value);\n            }\n        } catch (MathIllegalArgumentException e) {\n            meanImpl = createMeanImpl();\n        }\n    }\n    if (varianceImpl != null) {\n        try {\n            if (!Double.isNaN(value)) {\n                varianceImpl.increment(value);\n            }\n        } catch (MathIllegalArgumentException e) {\n            varianceImpl = createVarianceImpl();\n        }\n    }\n    if (geoMeanImpl != null) {\n        try {\n            if (value > 0) {\n                geoMeanImpl.increment(value);\n            }\n        } catch (MathIllegalArgumentException e) {\n            geoMeanImpl = createGeoMeanImpl();\n        }\n    }\n    n++;\n}\n\nprivate UnivariateStatistic createMeanImpl() {\n    if (meanImpl == null) {\n        return new Mean();\n    }\n    if (meanImpl.getClass() == Mean.class) {\n        return new Mean();\n    }\n    return new MeanEvaluator();\n}\n\nprivate UnivariateStatistic createVarianceImpl() {\n    if (varianceImpl == null) {\n        return new Variance();\n    }\n    if (varianceImpl.getClass() == Variance.class) {\n        return new Variance();\n    }\n    return new VarianceEvaluator();\n}\n\nprivate UnivariateStatistic createGeoMeanImpl() {\n    if (geoMeanImpl == null) {\n        return new GeometricMean();\n    }\n    if (geoMeanImpl.getClass() == GeometricMean.class) {\n        return new GeometricMean();\n    }\n    return new GeometricMeanEvaluator();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..75ee5d0ad 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,74 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden,\n+    // need to increment these\n+    if (meanImpl != null) {\n+        try {\n+            if (!Double.isNaN(value)) {\n+                meanImpl.increment(value);\n+            }\n+        } catch (MathIllegalArgumentException e) {\n+            meanImpl = createMeanImpl();\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+    }\n+    if (varianceImpl != null) {\n+        try {\n+            if (!Double.isNaN(value)) {\n+                varianceImpl.increment(value);\n+            }\n+        } catch (MathIllegalArgumentException e) {\n+            varianceImpl = createVarianceImpl();\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+    }\n+    if (geoMeanImpl != null) {\n+        try {\n+            if (value > 0) {\n+                geoMeanImpl.increment(value);\n+            }\n+        } catch (MathIllegalArgumentException e) {\n+            geoMeanImpl = createGeoMeanImpl();\n         }\n-        n++;\n     }\n+    n++;\n+}\n+\n+private UnivariateStatistic createMeanImpl() {\n+    if (meanImpl == null) {\n+        return new Mean();\n+    }\n+    if (meanImpl.getClass() == Mean.class) {\n+        return new Mean();\n+    }\n+    return new MeanEvaluator();\n+}\n+\n+private UnivariateStatistic createVarianceImpl() {\n+    if (varianceImpl == null) {\n+        return new Variance();\n+    }\n+    if (varianceImpl.getClass() == Variance.class) {\n+        return new Variance();\n+    }\n+    return new VarianceEvaluator();\n+}\n+\n+private UnivariateStatistic createGeoMeanImpl() {\n+    if (geoMeanImpl == null) {\n+        return new GeometricMean();\n+    }\n+    if (geoMeanImpl.getClass() == GeometricMean.class) {\n+        return new GeometricMean();\n+    }\n+    return new GeometricMeanEvaluator();\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}