{
    "patch": "public int parseArguments(Parameters params) throws CmdLineException {\n    String param;\n\n    try {\n        param = params.getParameter(0);\n    } catch (CmdLineException e) {\n        setter.addValue(true);\n        return 0;\n    }\n\n    String lowerParam = param.toLowerCase();\n    if (TRUES.contains(lowerParam)) {\n        setter.addValue(true);\n    } else if (FALSES.contains(lowerParam)) {\n        setter.addValue(false);\n    } else {\n        throw new CmdLineException(owner, \"Invalid parameter: \" + param);\n    }\n\n    return 1;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..6906cad2 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -330,25 +330,27 @@ public class CommandLineRunner extends\n       }\n \n       @Override\n-      public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+public int parseArguments(Parameters params) throws CmdLineException {\n+    String param;\n \n-        if (param == null) {\n-          setter.addValue(true);\n-          return 0;\n-        } else {\n-          String lowerParam = param.toLowerCase();\n-          if (TRUES.contains(lowerParam)) {\n-            setter.addValue(true);\n-          } else if (FALSES.contains(lowerParam)) {\n-            setter.addValue(false);\n-          } else {\n-            setter.addValue(true);\n-            return 0;\n-          }\n-          return 1;\n-        }\n-      }\n+    try {\n+        param = params.getParameter(0);\n+    } catch (CmdLineException e) {\n+        setter.addValue(true);\n+        return 0;\n+    }\n+\n+    String lowerParam = param.toLowerCase();\n+    if (TRUES.contains(lowerParam)) {\n+        setter.addValue(true);\n+    } else if (FALSES.contains(lowerParam)) {\n+        setter.addValue(false);\n+    } else {\n+        throw new CmdLineException(owner, \"Invalid parameter: \" + param);\n+    }\n+\n+    return 1;\n+}\n \n       @Override\n       public String getDefaultMetaVariable() {",
    "result_reason": "error: no suitable constructor found for CmdLineException(CmdLineParser,String)",
    "test_result": "ERROR"
}