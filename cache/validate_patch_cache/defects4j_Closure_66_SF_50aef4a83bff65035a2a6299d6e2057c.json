{
    "patch": "public static double getTypedPercent(List<ClickResponse> clickResponses) {\n    double numOfCorrect = 0;\n    double numOfTotal = clickResponses.size();\n    for (ClickResponse clickResponse : clickResponses) {\n        if (clickResponse.getType() == ClickResponse.Type.TYPED) {\n            numOfCorrect++;\n        }\n    }\n    double percent = (numOfCorrect / numOfTotal) * 100.0;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..266f1298 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(List<ClickResponse> clickResponses) {\n+    double numOfCorrect = 0;\n+    double numOfTotal = clickResponses.size();\n+    for (ClickResponse clickResponse : clickResponses) {\n+        if (clickResponse.getType() == ClickResponse.Type.TYPED) {\n+            numOfCorrect++;\n+        }\n+    }\n+    double percent = (numOfCorrect / numOfTotal) * 100.0;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}