{
    "patch": "private static String convertString(String str, boolean escapeUnicode) {\n    String outStr;\n    int len = str.length();\n    StringBuffer buf = new StringBuffer(len * 2);\n    for (int x = 0; x < len; x++) {\n        char aChar = str.charAt(x);\n        if (aChar > 126 || aChar < 32) {\n            switch (aChar) {\n                case '\\b':\n                    buf.append('\\\\'); buf.append('b');\n                    break;\n                case '\\t':\n                    buf.append('\\\\'); buf.append('t');\n                    break;\n                case '\\n':\n                    buf.append('\\\\'); buf.append('n');\n                    break;\n                case '\\f':\n                    buf.append('\\\\'); buf.append('f');\n                    break;\n                case '\\r':\n                    buf.append('\\\\'); buf.append('r');\n                    break;\n                case '\\\"':\n                    buf.append('\\\\'); buf.append('\\\"');\n                    break;\n                case '\\'':\n                    buf.append('\\\\');\n                    buf.append('\\'');\n                    break;\n                case '\\\\':\n                    buf.append('\\\\');\n                    buf.append('\\\\');\n                    break;\n                default:\n                    if (aChar > 255) {\n                        buf.append('\\\\');\n                        buf.append('u');\n                        buf.append(toHex((aChar >> 8) & 0xFF));\n                        buf.append(toHex(aChar & 0xFF));\n                    } else {\n                        buf.append('\\\\');\n                        buf.append('x');\n                        buf.append(toHex(aChar >> 4));\n                        buf.append(toHex(aChar & 0xF));\n                    }\n                    break;\n            }\n        } else {\n            buf.append(aChar);\n        }\n    }\n    outStr = buf.toString();\n    return outStr;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}