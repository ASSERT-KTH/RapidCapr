{
    "patch": "    // Check whether there are any destructuring patterns in argList.\n    boolean hasDestructuring = NodeUtil.hasDestructuringLhs(argList);\n\n    if (hasDestructuring) {\n      // Don't optimize for destructuring pattern parameters because\n      // that could change the shape of the parameter namespace for\n      // the rest of the function.",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..9674e566 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,13 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Check whether there are any destructuring patterns in argList.\n+    boolean hasDestructuring = NodeUtil.hasDestructuringLhs(argList);\n+\n+    if (hasDestructuring) {\n+      // Don't optimize for destructuring pattern parameters because\n+      // that could change the shape of the parameter namespace for\n+      // the rest of the function.\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}