{
    "patch": "if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\nif (nextStrategy == null) {\n    if (currentStrategy == null) {\n        throw new IllegalArgumentException(\"Invalid pattern\");\n    }\n    currentFormatField = null;\n} else {\n    currentFormatField = nextFormatField;\n    currentStrategy = nextStrategy;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..3a9947f6 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,18 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+if (nextStrategy == null) {\n+    if (currentStrategy == null) {\n+        throw new IllegalArgumentException(\"Invalid pattern\");\n+    }\n+    currentFormatField = null;\n+} else {\n+    currentFormatField = nextFormatField;\n+    currentStrategy = nextStrategy;\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}