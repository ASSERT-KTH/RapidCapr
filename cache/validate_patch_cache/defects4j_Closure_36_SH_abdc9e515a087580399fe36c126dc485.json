{
    "patch": "          if ((nameNode = convention.getSingletonGetterClassName(callNode)) != null) {\n            if (!mayModifyExterns || !compiler.getCodingConvention().isExported(nameNode)) {\n              return false;\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..04d3bba0 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,10 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if ((nameNode = convention.getSingletonGetterClassName(callNode)) != null) {\n+            if (!mayModifyExterns || !compiler.getCodingConvention().isExported(nameNode)) {\n+              return false;\n+            }\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}