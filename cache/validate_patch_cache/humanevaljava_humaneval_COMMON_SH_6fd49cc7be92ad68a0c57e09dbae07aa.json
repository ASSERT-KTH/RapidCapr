{
    "patch": "    public static int[] common(int[] l1, int[] l2) {\n>>> [ INFILL ] <<<\n        Arrays.sort(l1);\n        Arrays.sort(l2);\n        int i = 0, j = 0, k = 0;\n        while (i < l1.length && j < l2.length) {\n            if (l1[i] < l2[j]) {\n                i++;\n            } else if (l2[j] < l1[i]) {\n                j++;\n            } else {\n                common[k++] = l1[i++];\n                j++;\n            }\n        }\n        return Arrays.copyOf(common, k);\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMMON.java b/src/main/java/humaneval/buggy/COMMON.java\nindex f818c29..159cdaf 100644\n--- a/src/main/java/humaneval/buggy/COMMON.java\n+++ b/src/main/java/humaneval/buggy/COMMON.java\n@@ -10,7 +10,23 @@ import java.util.*;\n \n public class COMMON {\n     public static int[] common(int[] l1, int[] l2) {\n-        ArrayList<Integer> common = new ArrayList<Integer>();\n+    public static int[] common(int[] l1, int[] l2) {\n+>>> [ INFILL ] <<<\n+        Arrays.sort(l1);\n+        Arrays.sort(l2);\n+        int i = 0, j = 0, k = 0;\n+        while (i < l1.length && j < l2.length) {\n+            if (l1[i] < l2[j]) {\n+                i++;\n+            } else if (l2[j] < l1[i]) {\n+                j++;\n+            } else {\n+                common[k++] = l1[i++];\n+                j++;\n+            }\n+        }\n+        return Arrays.copyOf(common, k);\n+    }\n         \n         for (int i = 0; i < l1.length; i += 1){\n             for (int j = 0; j < l2.length; j += 1){",
    "result_reason": " /tmp/humaneval-COMMON/src/main/java/humaneval/buggy/COMMON.java:[13,5] illegal start of expression",
    "test_result": "ERROR"
}