{
    "patch": "public class Example {\n    public void foo() { }\n    public void testPrintInOperatorInForLoop() {\n        boolean c = true;\n        Object d = new Object[0];\n        String expected = \"for(a=c?0:(0 in d);;)foo()\";\n        String s = \"\";\n        for(int a=c?0:(0 in d);;)\n            s += \"foo()\";\n        assertEquals(expected, \"for(a=c?0:[0 in d];;)foo()\");\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..ca1cb3d7 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,18 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class Example {\n+    public void foo() { }\n+    public void testPrintInOperatorInForLoop() {\n+        boolean c = true;\n+        Object d = new Object[0];\n+        String expected = \"for(a=c?0:(0 in d);;)foo()\";\n+        String s = \"\";\n+        for(int a=c?0:(0 in d);;)\n+            s += \"foo()\";\n+        assertEquals(expected, \"for(a=c?0:[0 in d];;)foo()\");\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}