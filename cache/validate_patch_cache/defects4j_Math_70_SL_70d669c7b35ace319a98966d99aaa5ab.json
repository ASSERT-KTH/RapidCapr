{
    "patch": "if (Double.isNaN(min) || Double.isNaN(max) || f == null) {\n    return Double.NaN;\n}\ndouble fMin = f.value(min);\ndouble fMax = f.value(max);\nif (Double.isNaN(fMin) || Double.isNaN(fMax) || fMin * fMax > 0) {\n    return Double.NaN;\n}\nif (fMin == 0) {\n    return min;\n}\nif (fMax == 0) {\n    return max;\n}\nreturn solve(f, min, max);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..388e100aa 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,21 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+if (Double.isNaN(min) || Double.isNaN(max) || f == null) {\n+    return Double.NaN;\n+}\n+double fMin = f.value(min);\n+double fMax = f.value(max);\n+if (Double.isNaN(fMin) || Double.isNaN(fMax) || fMin * fMax > 0) {\n+    return Double.NaN;\n+}\n+if (fMin == 0) {\n+    return min;\n+}\n+if (fMax == 0) {\n+    return max;\n+}\n+return solve(f, min, max);\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}