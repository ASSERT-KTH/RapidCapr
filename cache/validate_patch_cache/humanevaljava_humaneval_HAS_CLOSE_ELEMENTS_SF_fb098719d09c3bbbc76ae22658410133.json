{
    "patch": "public static boolean has_close_elements(List<Double> numbers, double threshold) {\n    Set<Double> set = new HashSet<>();\n    for (double number : numbers) {\n        for (double i = number - threshold; i <= number + threshold; i += threshold) {\n            if (set.contains(i)) {\n                return true;\n            }\n        }\n        set.add(number);\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\nindex b51eb14..65e3548 100644\n--- a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n@@ -3,14 +3,16 @@ package humaneval.buggy;\n import java.util.List;\n \n public class HAS_CLOSE_ELEMENTS {\n-    public static boolean has_close_elements(List<Double> numbers, double threshold){\n-        for (int i = 0; i < numbers.size(); i += 1){\n-            for (int j = i + 1; j < numbers.size(); j += 1){\n-                double distance = numbers.get(i) - numbers.get(j);\n-                if (distance < threshold)\n-                    return true;\n+public static boolean has_close_elements(List<Double> numbers, double threshold) {\n+    Set<Double> set = new HashSet<>();\n+    for (double number : numbers) {\n+        for (double i = number - threshold; i <= number + threshold; i += threshold) {\n+            if (set.contains(i)) {\n+                return true;\n             }\n         }\n-        return false;\n+        set.add(number);\n     }\n+    return false;\n+}\n }",
    "result_reason": " /tmp/humaneval-HAS_CLOSE_ELEMENTS/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java:[7,5] cannot find symbol",
    "test_result": "ERROR"
}