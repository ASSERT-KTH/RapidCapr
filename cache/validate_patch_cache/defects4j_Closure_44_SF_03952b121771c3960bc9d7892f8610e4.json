{
    "patch": "void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n      return;\n    }\n\n    char c = newcode.charAt(0);\n    if ((isWordChar(c) || c == '\\\\') &&\n        isWordChar(getLastChar())) {\n      append(\" \");\n    } else if (getLastChar() == '/' && c == '/') {\n      // Do not allow a forward slash to appear after a DIV.\n      // For example, REGEXP DIV REGEXP is valid and should print like / // / /\n      append(\" \");\n    } else if (getLastChar() == '/' && newcode.startsWith(\"*\")) {\n      // avoid having a start-comment appear after a DIV\n      // For example, DIV_START_COMMENT should be '/ *'\n      append(\" \");\n    }\n\n    append(newcode);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..e92b793b 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,7 +178,7 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n+void add(String newcode) {\n     maybeEndStatement();\n \n     if (newcode.length() == 0) {\n@@ -188,14 +188,15 @@ abstract class CodeConsumer {\n     char c = newcode.charAt(0);\n     if ((isWordChar(c) || c == '\\\\') &&\n         isWordChar(getLastChar())) {\n-      // need space to separate. This is not pretty printing.\n-      // For example: \"return foo;\"\n       append(\" \");\n+    } else if (getLastChar() == '/' && c == '/') {\n       // Do not allow a forward slash to appear after a DIV.\n-      // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n+      // For example, REGEXP DIV REGEXP is valid and should print like / // / /\n+      append(\" \");\n+    } else if (getLastChar() == '/' && newcode.startsWith(\"*\")) {\n+      // avoid having a start-comment appear after a DIV\n+      // For example, DIV_START_COMMENT should be '/ *'\n+      append(\" \");\n     }\n \n     append(newcode);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}