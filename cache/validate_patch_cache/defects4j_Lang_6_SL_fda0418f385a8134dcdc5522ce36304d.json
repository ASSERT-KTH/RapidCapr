{
    "patch": "pos += Character.isHighSurrogate(input.charAt(pos)) && pos + 1 < len &&\n       Character.isLowSurrogate(input.charAt(pos+1)) ?\n       translate(input.subSequence(pos, pos+2), out) :\n       translate(Character.toString(input.charAt(pos)), out);\npos++;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..f3fbdfaa 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,11 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+pos += Character.isHighSurrogate(input.charAt(pos)) && pos + 1 < len &&\n+       Character.isLowSurrogate(input.charAt(pos+1)) ?\n+       translate(input.subSequence(pos, pos+2), out) :\n+       translate(Character.toString(input.charAt(pos)), out);\n+pos++;\n             }\n         }\n     }",
    "result_reason": "error: bad operand types for binary operator '+'",
    "test_result": "ERROR"
}