{
    "patch": "\n        String pat = b+b;\n        for (int i = 0; i < a.length(); i += 1) {\n            if (i + l < a.length()) {\n                if (a.substring(i, i + l).equals(pat.substring(0, l))) return true;\n            } else {\n                if ((a.substring(i, a.length()) + a.substring(0, i + l - a.length())).equals(pat)) return true;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..6f628f4 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -11,9 +11,17 @@ package humaneval.buggy;\n public class CYCPATTERN_CHECK {\n     public static boolean cycpattern_check(String a, String b) {\n         int l = b.length();\n-        String pat = b;\n+\n+        String pat = b+b;\n         for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n+            if (i + l < a.length()) {\n+                if (a.substring(i, i + l).equals(pat.substring(0, l))) return true;\n+            } else {\n+                if ((a.substring(i, a.length()) + a.substring(0, i + l - a.length())).equals(pat)) return true;\n+            }\n+        }\n+        return false;\n+    }\n                 if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n             }\n         }",
    "result_reason": " /tmp/humaneval-CYCPATTERN_CHECK/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java:[25,17] illegal start of type",
    "test_result": "ERROR"
}