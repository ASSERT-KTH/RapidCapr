{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if ((ch0 < 'a' || ch0 > 'z') || (ch1 < 'a' || ch1 > 'z')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n\n    if (str.charAt(2) != '_' || str.charAt(len - 1) == '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    int idxCountry = 3;\n    int idxVariant = str.indexOf('_', 4);\n    if (idxVariant == -1) {\n        idxVariant = len;\n    }\n\n    String language = str.substring(0, 2);\n    String country = str.substring(idxCountry, idxVariant);\n    String variant = \"\";\n    if (idxVariant < len) {\n        variant = str.substring(idxVariant + 1, len);\n        if (variant.contains(\"_\") || variant.length() < 2 || \n            !(Character.isUpperCase(variant.charAt(0)) && Character.isUpperCase(variant.charAt(1)))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n\n    if (country.length() != 2 || variant.length() > 0 && variant.length() < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    return new Locale(language, country, variant);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..f7dde796 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,41 +91,54 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if ((ch0 < 'a' || ch0 > 'z') || (ch1 < 'a' || ch1 > 'z')) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    }\n+\n+    if (str.charAt(2) != '_' || str.charAt(len - 1) == '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    int idxCountry = 3;\n+    int idxVariant = str.indexOf('_', 4);\n+    if (idxVariant == -1) {\n+        idxVariant = len;\n+    }\n+\n+    String language = str.substring(0, 2);\n+    String country = str.substring(idxCountry, idxVariant);\n+    String variant = \"\";\n+    if (idxVariant < len) {\n+        variant = str.substring(idxVariant + 1, len);\n+        if (variant.contains(\"_\") || variant.length() < 2 || \n+            !(Character.isUpperCase(variant.charAt(0)) && Character.isUpperCase(variant.charAt(1)))) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n-        }\n     }\n \n+    if (country.length() != 2 || variant.length() > 0 && variant.length() < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    return new Locale(language, country, variant);\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}