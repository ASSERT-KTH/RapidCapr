{
    "patch": "   public static boolean containsAny(final CharSequence cs, final char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        final int strLength = cs.length();\n        final int searchLength = searchChars.length;\n        final int csLast = strLength - 1;\n        final int searchLast = searchLength - 1;\n        for (int i = 0; i < strLength; i++)  {\n            final char ch = cs.charAt(i);\n            if (isHighSurrogate(ch) && i < csLast) {\n                final char ch2 = cs.charAt(i + 1);\n                if (isLowSurrogate(ch2)) {\n                    final int codePoint = toCodePoint(ch, ch2);\n                    if (contains(searchChars, codePoint)) {\n                        return true;\n                    }\n                }\n            } else if (contains(searchChars, ch)) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..d6242f64 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,30 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+   public static boolean containsAny(final CharSequence cs, final char[] searchChars) {\n+        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n+            return false;\n+        }\n+        final int strLength = cs.length();\n+        final int searchLength = searchChars.length;\n+        final int csLast = strLength - 1;\n+        final int searchLast = searchLength - 1;\n+        for (int i = 0; i < strLength; i++)  {\n+            final char ch = cs.charAt(i);\n+            if (isHighSurrogate(ch) && i < csLast) {\n+                final char ch2 = cs.charAt(i + 1);\n+                if (isLowSurrogate(ch2)) {\n+                    final int codePoint = toCodePoint(ch, ch2);\n+                    if (contains(searchChars, codePoint)) {\n+                        return true;\n+                    }\n+                }\n+            } else if (contains(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}