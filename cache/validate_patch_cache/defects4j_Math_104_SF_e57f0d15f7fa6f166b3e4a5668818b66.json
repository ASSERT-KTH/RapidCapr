{
    "patch": "public static double regularizedGammaQ(double a, double x){\n    double[] cf = {1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091,\n                   -1.231739572450155, 0.001208650973866179, -0.000005395239384953};\n    double gold = cf[0];\n    double g = gold;\n    double fac = 1.0;\n    for (int i = 1; i < cf.length; i++) {\n        g += cf[i] / (a + i);\n        fac *= x / (a + i);\n    }\n    double gammaQ = 1.0 - g * fac * Math.exp(-x + a * Math.log(x) - logGamma(a));\n    return gammaQ;\n}\n\nprivate static double logGamma(double x){\n    double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n    double ser = 1.0 + 76.18009172947146 / (x + 0) - 86.50532032941677 / (x + 1)\n                  + 24.01409824083091 / (x + 2) - 1.231739572450155 / (x + 3)\n                  + 0.001208650973866179 / (x + 4) - 0.000005395239384953 / (x + 5);\n    return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..da9f011f0 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,27 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaQ(double a, double x){\n+    double[] cf = {1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091,\n+                   -1.231739572450155, 0.001208650973866179, -0.000005395239384953};\n+    double gold = cf[0];\n+    double g = gold;\n+    double fac = 1.0;\n+    for (int i = 1; i < cf.length; i++) {\n+        g += cf[i] / (a + i);\n+        fac *= x / (a + i);\n+    }\n+    double gammaQ = 1.0 - g * fac * Math.exp(-x + a * Math.log(x) - logGamma(a));\n+    return gammaQ;\n+}\n+\n+private static double logGamma(double x){\n+    double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n+    double ser = 1.0 + 76.18009172947146 / (x + 0) - 86.50532032941677 / (x + 1)\n+                  + 24.01409824083091 / (x + 2) - 1.231739572450155 / (x + 3)\n+                  + 0.001208650973866179 / (x + 4) - 0.000005395239384953 / (x + 5);\n+    return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}