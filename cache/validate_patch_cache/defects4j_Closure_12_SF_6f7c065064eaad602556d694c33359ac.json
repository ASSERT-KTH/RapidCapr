{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    return cfgNode.getLastChild().isTry() && cfgNode.getLastChild().hasChildren() && cfgNode.getLastChild().getLastChild().isCatch();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..0dd6bcd7 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,9 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    return cfgNode.getLastChild().isTry() && cfgNode.getLastChild().hasChildren() && cfgNode.getLastChild().getLastChild().isCatch();\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}