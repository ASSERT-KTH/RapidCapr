{
    "patch": "public static boolean containsAny(final String str, final char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int csLength = str.length();\n    final int searchLength = searchChars.length;\n    final int csLast = csLength - 1;\n    final int searchLast = searchLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        final char ch = str.charAt(i);\n        if (isCharInArray(ch, searchChars)) {\n            return true;\n        }\n        if (i < csLast && Character.isSurrogatePair(ch, str.charAt(i + 1))) {\n            final int chcp = Character.codePointAt(str, i);\n            i++;\n            if (isCharInArray(chcp, searchChars)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isCharInArray(final int ch, final char[] searchChars) {\n    for (final char searchChar : searchChars) {\n        if (searchChar == ch) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..1b929c25 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,38 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final String str, final char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int csLength = str.length();\n+    final int searchLength = searchChars.length;\n+    final int csLast = csLength - 1;\n+    final int searchLast = searchLength - 1;\n+    for (int i = 0; i < csLength; i++) {\n+        final char ch = str.charAt(i);\n+        if (isCharInArray(ch, searchChars)) {\n+            return true;\n+        }\n+        if (i < csLast && Character.isSurrogatePair(ch, str.charAt(i + 1))) {\n+            final int chcp = Character.codePointAt(str, i);\n+            i++;\n+            if (isCharInArray(chcp, searchChars)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isCharInArray(final int ch, final char[] searchChars) {\n+    for (final char searchChar : searchChars) {\n+        if (searchChar == ch) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}