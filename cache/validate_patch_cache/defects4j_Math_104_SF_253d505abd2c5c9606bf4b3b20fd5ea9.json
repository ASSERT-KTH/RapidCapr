{
    "patch": "import org.apache.commons.math3.stat.inference.TestUtils;\nimport org.apache.commons.math3.special.Gamma;\n\npublic class GammaRegularized {\n\n   public static double gammaRegularized(double x, double a) {\n      if(x < 0 || a <= 0) {\n         throw new IllegalArgumentException();\n      }\n      double eps = 10e-15;\n      int maxIterations = 1000;\n      double prevSum = 0;\n      double sum = 1/a;\n      int k = 1;\n      while(Math.abs(sum - prevSum) > eps && k <= maxIterations) {\n         prevSum = sum;\n         sum += (1/a)*Math.pow(x, k)/Gamma.gamma(a + k);\n         k++;\n      }\n      double actualP = Math.exp(-x)*Math.pow(x, a)/Gamma.gamma(a)*(1 - sum);\n      return actualP;\n   }\n\n   public static void main(String[] args){\n          double x = 2.2;\n          double a = 3.7;\n          double expected = 0.632120558828558;\n          double actualP = gammaRegularized(x, a);\n          TestUtils.assertEquals(expected, actualP, 10e-15);\n          System.out.println(actualP);\n   }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..3c3825e64 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,38 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.stat.inference.TestUtils;\n+import org.apache.commons.math3.special.Gamma;\n+\n+public class GammaRegularized {\n+\n+   public static double gammaRegularized(double x, double a) {\n+      if(x < 0 || a <= 0) {\n+         throw new IllegalArgumentException();\n+      }\n+      double eps = 10e-15;\n+      int maxIterations = 1000;\n+      double prevSum = 0;\n+      double sum = 1/a;\n+      int k = 1;\n+      while(Math.abs(sum - prevSum) > eps && k <= maxIterations) {\n+         prevSum = sum;\n+         sum += (1/a)*Math.pow(x, k)/Gamma.gamma(a + k);\n+         k++;\n+      }\n+      double actualP = Math.exp(-x)*Math.pow(x, a)/Gamma.gamma(a)*(1 - sum);\n+      return actualP;\n+   }\n+\n+   public static void main(String[] args){\n+          double x = 2.2;\n+          double a = 3.7;\n+          double expected = 0.632120558828558;\n+          double actualP = gammaRegularized(x, a);\n+          TestUtils.assertEquals(expected, actualP, 10e-15);\n+          System.out.println(actualP);\n+   }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}