{
    "patch": "              !mayEffectMutableState(lhs)) {\n            n.removeChild(cond);\n            Node assignName = thenOp.removeFirstChild();\n            Node thenExpr = thenOp.removeFirstChild();\n            Node elseExpr = elseOp.getLastChild();\n            elseOp.removeChild(elseExpr);\n\n            Node hookNode = IR.hook(cond, thenExpr, elseExpr).srcref(n);\n            Node assign = new Node(thenOp.getType(), assignName, hookNode)\n                                .srcref(thenOp);\n            Node expr = NodeUtil.newExpr(assign);\n            parent.replaceChild(n, expr);\n            reportChangeToEnclosingScope(parent);\n            return expr;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\nindex ae568e8e..4c07db1a 100644\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n@@ -780,6 +780,20 @@ class PeepholeSubstituteAlternateSyntax\n               // NOTE - there are some circumstances where we can\n               // proceed even if there are side effects...\n               !mayEffectMutableState(lhs)) {\n+            n.removeChild(cond);\n+            Node assignName = thenOp.removeFirstChild();\n+            Node thenExpr = thenOp.removeFirstChild();\n+            Node elseExpr = elseOp.getLastChild();\n+            elseOp.removeChild(elseExpr);\n+\n+            Node hookNode = IR.hook(cond, thenExpr, elseExpr).srcref(n);\n+            Node assign = new Node(thenOp.getType(), assignName, hookNode)\n+                                .srcref(thenOp);\n+            Node expr = NodeUtil.newExpr(assign);\n+            parent.replaceChild(n, expr);\n+            reportChangeToEnclosingScope(parent);\n+            return expr;\n+          }\n \n             n.removeChild(cond);\n             Node assignName = thenOp.removeFirstChild();",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}