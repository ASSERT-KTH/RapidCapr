{
    "patch": "    // Strip unreferenced args off the end of the function declaration.\n    Node argList = NodeUtil.getFunctionParameters(fn.getNode());\n    Node lastArg = argList.getLastChild();\n    while (lastArg != null && !NodeUtil.isVarArgs(lastArg)) {\n      if (!referenced.contains(fnScope.getVar(lastArg.getString()))) {\n        lastArg.detach();\n        compiler.reportCodeChange();\n        lastArg = argList.getLastChild();\n      } else {\n        break;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..331208a3 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,18 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Strip unreferenced args off the end of the function declaration.\n+    Node argList = NodeUtil.getFunctionParameters(fn.getNode());\n+    Node lastArg = argList.getLastChild();\n+    while (lastArg != null && !NodeUtil.isVarArgs(lastArg)) {\n+      if (!referenced.contains(fnScope.getVar(lastArg.getString()))) {\n+        lastArg.detach();\n+        compiler.reportCodeChange();\n+        lastArg = argList.getLastChild();\n+      } else {\n+        break;\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}