{
    "patch": "// Fix Hunk\ntry {\n    return Math.addExact(x, y);\n} catch (ArithmeticException e) {\n    if (x > 0 && y > 0) {\n        return Integer.MAX_VALUE;\n    } else if (x < 0 && y < 0) {\n        return Integer.MIN_VALUE;\n    } else {\n        long sum = (long) x + y;\n        if (sum > Integer.MAX_VALUE) {\n            return Integer.MAX_VALUE;\n        } else if (sum < Integer.MIN_VALUE) {\n            return Integer.MIN_VALUE;\n        } else {\n            return (int) sum;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ADD.java b/src/main/java/humaneval/buggy/ADD.java\nindex 186aae7..0c82cb7 100644\n--- a/src/main/java/humaneval/buggy/ADD.java\n+++ b/src/main/java/humaneval/buggy/ADD.java\n@@ -8,6 +8,24 @@ package humaneval.buggy;\n \n public class ADD {\n     public static int add(int x, int y) {\n-        return x | y;\n+// Fix Hunk\n+try {\n+    return Math.addExact(x, y);\n+} catch (ArithmeticException e) {\n+    if (x > 0 && y > 0) {\n+        return Integer.MAX_VALUE;\n+    } else if (x < 0 && y < 0) {\n+        return Integer.MIN_VALUE;\n+    } else {\n+        long sum = (long) x + y;\n+        if (sum > Integer.MAX_VALUE) {\n+            return Integer.MAX_VALUE;\n+        } else if (sum < Integer.MIN_VALUE) {\n+            return Integer.MIN_VALUE;\n+        } else {\n+            return (int) sum;\n+        }\n+    }\n+}\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}