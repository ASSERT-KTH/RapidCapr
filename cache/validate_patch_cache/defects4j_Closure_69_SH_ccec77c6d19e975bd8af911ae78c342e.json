{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n      JSType thisType = functionType.getTypeOfThis();\n      Node parent = n.getParent();\n      if (thisType != null && !(\n          parent.isGetElem() ||\n          (parent.isGetProp() && parent.getFirstChild() == n))) {\n        report(t, n, EXPECTED_THIS_TYPE, thisType.toString());\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..7d0b069b 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n+      JSType thisType = functionType.getTypeOfThis();\n+      Node parent = n.getParent();\n+      if (thisType != null && !(\n+          parent.isGetElem() ||\n+          (parent.isGetProp() && parent.getFirstChild() == n))) {\n+        report(t, n, EXPECTED_THIS_TYPE, thisType.toString());\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}