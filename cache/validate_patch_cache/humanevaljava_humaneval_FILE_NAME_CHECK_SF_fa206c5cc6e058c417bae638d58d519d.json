{
    "patch": "public static String file_name_check(String file_name) {\n    String[] parts = file_name.split(\"\\\\.\");\n    if (parts.length != 2 || !isValidFileType(parts[1]) || !isValidFileName(parts[0])) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n\nprivate static boolean isValidFileType(String extension) {\n    return extension.equals(\"txt\") || extension.equals(\"exe\") || extension.equals(\"dll\");\n}\n\nprivate static boolean isValidFileName(String fileName) {\n    if (fileName.length() == 0) {\n        return false;\n    }\n    if (!Character.isLetter(fileName.charAt(0))) {\n        return false;\n    }\n    int digitCount = 0;\n    for (int i = 0; i < fileName.length(); i++) {\n        char c = fileName.charAt(i);\n        if (Character.isDigit(c)) {\n            digitCount++;\n        }\n        if (!Character.isLetter(c) && !Character.isDigit(c)) {\n            return false;\n        }\n    }\n    return digitCount <= 3;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java b/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java\nindex fe9a279..919e688 100644\n--- a/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java\n+++ b/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java\n@@ -14,23 +14,35 @@ file_name_check(\"example.txt\") # => 'Yes'\n file_name_check(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter) */\n \n public class FILE_NAME_CHECK {\n-    public static String file_name_check(String file_name) {\n-        String[] lst = file_name.split(\"\\\\.\");\n+public static String file_name_check(String file_name) {\n+    String[] parts = file_name.split(\"\\\\.\");\n+    if (parts.length != 2 || !isValidFileType(parts[1]) || !isValidFileName(parts[0])) {\n+        return \"No\";\n+    }\n+    return \"Yes\";\n+}\n+\n+private static boolean isValidFileType(String extension) {\n+    return extension.equals(\"txt\") || extension.equals(\"exe\") || extension.equals(\"dll\");\n+}\n \n-        if (lst.length != 2)\n-            return \"No\";\n-        if (! (lst[1].equals(\"txt\") || lst[1].equals(\"exe\") || lst[1].equals(\"dll\")))\n-            return \"No\";\n-        if (lst[0].length() == 0)\n-            return \"No\";\n-        if ('a' > lst[0].charAt(0) && lst[0].charAt(0) > 'z' || 'A' > lst[0].charAt(0) && lst[0].charAt(0) > 'Z')\n-            return \"No\";\n-        int digit_cnt = 0;\n-        for (char c : file_name.toCharArray()){\n-            if ('0' <= c && c <= '9')\n-                digit_cnt += 1;\n+private static boolean isValidFileName(String fileName) {\n+    if (fileName.length() == 0) {\n+        return false;\n+    }\n+    if (!Character.isLetter(fileName.charAt(0))) {\n+        return false;\n+    }\n+    int digitCount = 0;\n+    for (int i = 0; i < fileName.length(); i++) {\n+        char c = fileName.charAt(i);\n+        if (Character.isDigit(c)) {\n+            digitCount++;\n+        }\n+        if (!Character.isLetter(c) && !Character.isDigit(c)) {\n+            return false;\n         }\n-        if (digit_cnt > 3)  return \"No\";\n-        return \"Yes\";\n     }\n+    return digitCount <= 3;\n+}\n }",
    "result_reason": "   TEST_FILE_NAME_CHECK.test_8:82 expected:<[No]> but was:<[Yes]>",
    "test_result": "FAIL"
}