{
    "patch": "public static String getprop(String prop) throws IOException {\n    String[] command = {\"getprop\", prop};\n    Process process = Runtime.getRuntime().exec(command);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n    String line = reader.readLine();\n    reader.close();\n    return line;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..302b8b12 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getprop(String prop) throws IOException {\n+    String[] command = {\"getprop\", prop};\n+    Process process = Runtime.getRuntime().exec(command);\n+    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n+    String line = reader.readLine();\n+    reader.close();\n+    return line;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}