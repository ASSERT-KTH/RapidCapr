{
    "patch": "public class StringUtils {\n\n    /**\n     * Determines whether the String contains any character in the given set of characters.\n     * \n     * @param str\n     *            the String to check, may be null\n     * @param chars\n     *            the characters to search for, may be null\n     * @return true if any of the character is found, false otherwise\n     */\n    public static boolean containsAny(String str, char[] chars) {\n        if (str == null || chars == null) {\n            return false;\n        }\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            for (int j = 0; j < chars.length; j++) {\n                if (ch == chars[j]) {\n                    return true;\n                }\n            }\n            if (Character.isHighSurrogate(ch)) {\n                if (++i == str.length()) {\n                    return false;\n                }\n                char ch2 = str.charAt(i);\n                if (Character.isLowSurrogate(ch2)) {\n                    int codePoint = Character.toCodePoint(ch, ch2);\n                    for (int j = 0; j < chars.length; j++) {\n                        if (Character.charCount(codePoint) == 2 && j < chars.length - 1 && Character.isSurrogatePair(chars[j], chars[j + 1])) {\n                            int cp = Character.toCodePoint(chars[j], chars[j + 1]);\n                            if (cp == codePoint) {\n                                return true;\n                            }\n                        } else if (chars[j] == codePoint) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..2725f787 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,51 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+\n+    /**\n+     * Determines whether the String contains any character in the given set of characters.\n+     * \n+     * @param str\n+     *            the String to check, may be null\n+     * @param chars\n+     *            the characters to search for, may be null\n+     * @return true if any of the character is found, false otherwise\n+     */\n+    public static boolean containsAny(String str, char[] chars) {\n+        if (str == null || chars == null) {\n+            return false;\n+        }\n+        for (int i = 0; i < str.length(); i++) {\n+            char ch = str.charAt(i);\n+            for (int j = 0; j < chars.length; j++) {\n+                if (ch == chars[j]) {\n+                    return true;\n+                }\n+            }\n+            if (Character.isHighSurrogate(ch)) {\n+                if (++i == str.length()) {\n+                    return false;\n+                }\n+                char ch2 = str.charAt(i);\n+                if (Character.isLowSurrogate(ch2)) {\n+                    int codePoint = Character.toCodePoint(ch, ch2);\n+                    for (int j = 0; j < chars.length; j++) {\n+                        if (Character.charCount(codePoint) == 2 && j < chars.length - 1 && Character.isSurrogatePair(chars[j], chars[j + 1])) {\n+                            int cp = Character.toCodePoint(chars[j], chars[j + 1]);\n+                            if (cp == codePoint) {\n+                                return true;\n+                            }\n+                        } else if (chars[j] == codePoint) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}