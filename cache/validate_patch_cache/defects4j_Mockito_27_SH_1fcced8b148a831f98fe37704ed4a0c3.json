{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\nif (mock instanceof Factory) {\n    try {\n        ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n    } catch (IllegalArgumentException e) {\n        Callback[] callbacks = ((Factory) mock).getCallbacks();\n        if (callbacks.length > 0 && callbacks[0] instanceof MethodInterceptorFilter) {\n            ((Factory) mock).setCallback(0, newFilter);\n        } else {\n            // Shift the callbacks to the right\n            System.arraycopy(callbacks, 0, callbacks, 1, callbacks.length);\n            ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n        }\n    }\n} else {\n    throw new RuntimeException(\"Mock object is not a Factory instance.\");\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..4a0bb4a4a 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,28 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+if (mock instanceof Factory) {\n+    try {\n+        ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n+    } catch (IllegalArgumentException e) {\n+        Callback[] callbacks = ((Factory) mock).getCallbacks();\n+        if (callbacks.length > 0 && callbacks[0] instanceof MethodInterceptorFilter) {\n+            ((Factory) mock).setCallback(0, newFilter);\n+        } else {\n+            // Shift the callbacks to the right\n+            System.arraycopy(callbacks, 0, callbacks, 1, callbacks.length);\n+            ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n+        }\n+    }\n+} else {\n+    throw new RuntimeException(\"Mock object is not a Factory instance.\");\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}