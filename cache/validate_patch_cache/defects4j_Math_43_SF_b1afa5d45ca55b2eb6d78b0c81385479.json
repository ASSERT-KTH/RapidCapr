{
    "patch": "    public void addValue(double value) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        sumLogImpl.increment(value);\n        secondMoment.increment(value);\n        // If mean, variance or geomean have been overridden,\n        // need to increment these\n        if (!(meanImpl instanceof Mean) && !Double.isNaN(value)) {\n            meanImpl.increment(value);\n        }\n        if (!(varianceImpl instanceof Variance) && !Double.isNaN(value)) {\n            varianceImpl.increment(value);\n        }\n        if (!(geoMeanImpl instanceof GeometricMean) && value > 0.0) {\n            geoMeanImpl.increment(value);\n        }\n        n++;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..01670bd11 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -155,13 +155,13 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         secondMoment.increment(value);\n         // If mean, variance or geomean have been overridden,\n         // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+        if (!(meanImpl instanceof Mean) && !Double.isNaN(value)) {\n             meanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+        if (!(varianceImpl instanceof Variance) && !Double.isNaN(value)) {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+        if (!(geoMeanImpl instanceof GeometricMean) && value > 0.0) {\n             geoMeanImpl.increment(value);\n         }\n         n++;",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2.5> but was:<NaN>",
    "test_result": "FAIL"
}