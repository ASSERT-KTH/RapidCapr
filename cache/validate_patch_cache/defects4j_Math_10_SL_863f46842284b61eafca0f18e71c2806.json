{
    "patch": "        if (Double.isNaN(result[resultOffset])) {\n            if (Double.isNaN(y[yOffset]) || Double.isNaN(x[xOffset])) {\n                result[resultOffset] = Double.NaN;\n            } else {\n                result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\nindex bf6dd65d5..1e332cd5a 100644\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n@@ -1416,6 +1416,13 @@ public class DSCompiler {\n         }\n \n         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n+        if (Double.isNaN(result[resultOffset])) {\n+            if (Double.isNaN(y[yOffset]) || Double.isNaN(x[xOffset])) {\n+                result[resultOffset] = Double.NaN;\n+            } else {\n+                result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);\n+            }\n+        }\n \n     }\n ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}