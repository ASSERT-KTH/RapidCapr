{
    "patch": "public static String circular_shift(int x, int shift) {\n    String s = String.valueOf(x);\n\n    StringBuilder sb = new StringBuilder(s.length());\n    for (int i = 0; i < s.length(); i++) {\n        int idx = (i + shift) % s.length();\n        sb.append(s.charAt(idx));\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\nindex 9131a1c..58c089c 100644\n--- a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n@@ -9,16 +9,14 @@ If shift > number of digits, return digits reversed.\n \"12\" */\n \n public class CIRCULAR_SHIFT {\n-    public static String circular_shift(int x, int shift) {\n-        String s = x + \"\";\n+public static String circular_shift(int x, int shift) {\n+    String s = String.valueOf(x);\n \n-        if (shift > s.length()) {\n-            StringBuilder sb = new StringBuilder();\n-            for (int i = s.length() - 1; i >= 0; i -= 1)\n-                sb.append(s.charAt(i));\n-            return sb.toString();\n-        } else {\n-            return s.substring(s.length() - shift + 1) + s.substring(0, s.length() - shift - 1);\n-        }\n+    StringBuilder sb = new StringBuilder(s.length());\n+    for (int i = 0; i < s.length(); i++) {\n+        int idx = (i + shift) % s.length();\n+        sb.append(s.charAt(idx));\n     }\n+    return sb.toString();\n+}\n }",
    "result_reason": "   TEST_CIRCULAR_SHIFT.test_0:7 expected:<0[10]> but was:<0[01]>",
    "test_result": "FAIL"
}