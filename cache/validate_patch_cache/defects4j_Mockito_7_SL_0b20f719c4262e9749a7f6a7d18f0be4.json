{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument instanceof TypeVariable) {\n    registerTypeVariablesOn(typeVariable.getBounds()[0]);\n} else if (actualTypeArgument instanceof ParameterizedType) {\n    for (Type type : ((ParameterizedType) actualTypeArgument).getActualTypeArguments()) {\n        registerTypeVariablesOn(type);\n    }\n} else if (actualTypeArgument instanceof WildcardType) {\n    Type[] upperBounds = ((WildcardType) actualTypeArgument).getUpperBounds();\n    if (upperBounds != null && upperBounds.length > 0) {\n        registerTypeVariablesOn(upperBounds[0]);\n    }\n} else if (actualTypeArgument != null) {\n    registerTypeVariablesOn(actualTypeArgument);\n} else {\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..6c96717b3 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,30 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument instanceof TypeVariable) {\n+    registerTypeVariablesOn(typeVariable.getBounds()[0]);\n+} else if (actualTypeArgument instanceof ParameterizedType) {\n+    for (Type type : ((ParameterizedType) actualTypeArgument).getActualTypeArguments()) {\n+        registerTypeVariablesOn(type);\n+    }\n+} else if (actualTypeArgument instanceof WildcardType) {\n+    Type[] upperBounds = ((WildcardType) actualTypeArgument).getUpperBounds();\n+    if (upperBounds != null && upperBounds.length > 0) {\n+        registerTypeVariablesOn(upperBounds[0]);\n+    }\n+} else if (actualTypeArgument != null) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+} else {\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}