{
    "patch": "            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n            try {\n                iChronology.validate(newPartial, newValues);\n            } catch (IllegalFieldValueException e) {\n                // Remove this partial so that it cannot partially mutate \n                // another partial\n                newPartial = new Partial(iChronology, newTypes, new int[newValues.length]);\n                Arrays.fill(newPartial.iValues, 0);\n                throw e;\n            }\n            return newPartial;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..1846e2f7 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -462,6 +462,16 @@ public final class Partial\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n             Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            try {\n+                iChronology.validate(newPartial, newValues);\n+            } catch (IllegalFieldValueException e) {\n+                // Remove this partial so that it cannot partially mutate \n+                // another partial\n+                newPartial = new Partial(iChronology, newTypes, new int[newValues.length]);\n+                Arrays.fill(newPartial.iValues, 0);\n+                throw e;\n+            }\n+            return newPartial;\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}