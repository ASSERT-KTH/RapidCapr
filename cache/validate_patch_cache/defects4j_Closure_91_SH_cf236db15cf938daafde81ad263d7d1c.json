{
    "patch": "    if (n.getParent().getType() == Token.ASSIGN) {\n      Node assignedValue = n.getNext();\n      if (assignedValue.getType() == Token.FUNCTION ||\n          assignedValue.getType() == Token.FUNCTION_EXPR) {\n        Node assignedObj = n.getFirstChild();\n        if (assignedObj.getType() == Token.GETPROP &&\n            assignedObj.getNext().getString().equals(\"prototype\")) {\n          // Don't traverse functions that are getting lent to a prototype.\n          return false;\n        }\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..84e5acee 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,18 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+    if (n.getParent().getType() == Token.ASSIGN) {\n+      Node assignedValue = n.getNext();\n+      if (assignedValue.getType() == Token.FUNCTION ||\n+          assignedValue.getType() == Token.FUNCTION_EXPR) {\n+        Node assignedObj = n.getFirstChild();\n+        if (assignedObj.getType() == Token.GETPROP &&\n+            assignedObj.getNext().getString().equals(\"prototype\")) {\n+          // Don't traverse functions that are getting lent to a prototype.\n+          return false;\n+        }\n+      }\n+    }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}