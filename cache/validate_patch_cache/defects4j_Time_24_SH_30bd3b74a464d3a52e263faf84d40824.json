{
    "patch": "        for (int i = 0; i < count; i++) {\n            try {\n                millis = savedFields[i].set(millis, resetFields);\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            }\n            if (i == count - 1 && savedFields[i].iField.getType() == DateTimeFieldType.monthOfYear()) {\n                long monthDuration = chunkedRangeDurationField.getDurationField().getType().getField(iChrono).getUnitMillis();\n                if (monthDuration > savedFields[i].iDurationFieldValue) {\n                    for (int j = 0; j <= savedFields[i].iDurationFieldInt - 1; j++) {\n                        millis = chunkedRangeDurationField.add(millis, 1);\n                    }\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1b436a06 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        for (int i = 0; i < count; i++) {\n+            try {\n+                millis = savedFields[i].set(millis, resetFields);\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            }\n+            if (i == count - 1 && savedFields[i].iField.getType() == DateTimeFieldType.monthOfYear()) {\n+                long monthDuration = chunkedRangeDurationField.getDurationField().getType().getField(iChrono).getUnitMillis();\n+                if (monthDuration > savedFields[i].iDurationFieldValue) {\n+                    for (int j = 0; j <= savedFields[i].iDurationFieldInt - 1; j++) {\n+                        millis = chunkedRangeDurationField.add(millis, 1);\n+                    }\n+                }\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}