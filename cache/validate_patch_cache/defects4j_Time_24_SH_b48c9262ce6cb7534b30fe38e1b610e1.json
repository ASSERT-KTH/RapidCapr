{
    "patch": "            if (savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n                millis = savedFields[i].set(millis, resetFields);\n                Chronology chrono = iChrono;\n                int year = dateTimeFormatter.getLocale().getWeekYear(millis);\n                millis = chrono.year().set(millis, year);\n                if (chrono.year().get(millis) != year) {\n                    throw new IllegalArgumentException(\n                        \"Invalid format: Weekyear date cannot be resolved: \" + year);\n                }\n                continue;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b852f63e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n+                millis = savedFields[i].set(millis, resetFields);\n+                Chronology chrono = iChrono;\n+                int year = dateTimeFormatter.getLocale().getWeekYear(millis);\n+                millis = chrono.year().set(millis, year);\n+                if (chrono.year().get(millis) != year) {\n+                    throw new IllegalArgumentException(\n+                        \"Invalid format: Weekyear date cannot be resolved: \" + year);\n+                }\n+                continue;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}