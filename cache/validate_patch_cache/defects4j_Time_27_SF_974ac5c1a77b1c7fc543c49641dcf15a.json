{
    "patch": "private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        int size = elementPairs.size();\n        List<Object> list = new ArrayList<Object>();\n        for (Object obj : elementPairs) {\n            if (obj instanceof Separator) {\n                if (list.size() != 0) {\n                    PeriodFormatter f = toFormatter(list, notPrinter, notParser);\n                    Separator sep = ((Separator) obj).finish(f.getPrinter(), f.getParser());\n                    return new PeriodFormatter(sep, sep);\n                }\n            } else {\n                list.add(obj);\n            }\n        }\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..66541fe1 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -791,16 +791,22 @@ public class PeriodFormatterBuilder {\n     }\n \n     //-----------------------------------------------------------------------\n-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n+private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n         if (notPrinter && notParser) {\n             throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n         }\n         int size = elementPairs.size();\n-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n-            Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n+        List<Object> list = new ArrayList<Object>();\n+        for (Object obj : elementPairs) {\n+            if (obj instanceof Separator) {\n+                if (list.size() != 0) {\n+                    PeriodFormatter f = toFormatter(list, notPrinter, notParser);\n+                    Separator sep = ((Separator) obj).finish(f.getPrinter(), f.getParser());\n+                    return new PeriodFormatter(sep, sep);\n+                }\n+            } else {\n+                list.add(obj);\n+            }\n         }\n         Object[] comp = createComposite(elementPairs);\n         if (notPrinter) {",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}