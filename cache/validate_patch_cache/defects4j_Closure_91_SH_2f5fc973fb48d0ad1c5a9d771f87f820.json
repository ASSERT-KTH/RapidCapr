{
    "patch": "      if (pType == Token.MEMBER_FUNCTION_DEF || pType == Token.METHOD) {\n        Node gp = parent.getGrandparent();\n        if (gp.getType() == Token.OBJLIT) {\n          return gp.getParent() == null || gp.getParent().getType() != Token.ASSIGN;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..bedd4f7a 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,10 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (pType == Token.MEMBER_FUNCTION_DEF || pType == Token.METHOD) {\n+        Node gp = parent.getGrandparent();\n+        if (gp.getType() == Token.OBJLIT) {\n+          return gp.getParent() == null || gp.getParent().getType() != Token.ASSIGN;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}