{
    "patch": "        int indexOfDot = namespace.indexOf('.');\n        ProvidedName parentName = null;\n        if (indexOfDot != -1) {\n          parentName = providedNames.get(namespace.substring(0, indexOfDot));\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..775d21c2 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -786,7 +786,11 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+        int indexOfDot = namespace.indexOf('.');\n+        ProvidedName parentName = null;\n+        if (indexOfDot != -1) {\n+          parentName = providedNames.get(namespace.substring(0, indexOfDot));\n+        }\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)",
    "result_reason": "error: variable parentName is already defined in method replace()",
    "test_result": "ERROR"
}