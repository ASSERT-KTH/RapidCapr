{
    "patch": "public static boolean right_angle_triangle(int a, int b, int c) {\n    if (a <= 0 || b <= 0 || c <= 0) { // Check if any side is less than or equal to zero\n        return false;\n    }\n    int sumOfSquares = (a * a) + (b * b) + (c * c);\n    int max = Math.max(Math.max(a, b), c);\n    return (sumOfSquares - (max * max)) == (max * max); // Check if the sum of the squared values of the smaller sides equals the square of the larger side\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..cb10505 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -9,7 +9,12 @@ package humaneval.buggy;\n // right_angle_triangle(1, 2, 3) == False\n \n public class RIGHT_ANGLE_TRIANGLE {\n-    public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+public static boolean right_angle_triangle(int a, int b, int c) {\n+    if (a <= 0 || b <= 0 || c <= 0) { // Check if any side is less than or equal to zero\n+        return false;\n     }\n+    int sumOfSquares = (a * a) + (b * b) + (c * c);\n+    int max = Math.max(Math.max(a, b), c);\n+    return (sumOfSquares - (max * max)) == (max * max); // Check if the sum of the squared values of the smaller sides equals the square of the larger side\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}