{
    "patch": "public static String fixCode(String code) {\n    String output = code.replaceAll(\"\\\\[(\\\\s*\\\\d+\\\\s*)\\\\s*in\\\\s*(\\\\s*[a-zA-Z0-9.]+\\\\s*)\\\\]\", \"[$2.contains($1)]\");\n    output = output.replaceAll(\"\\\\bfor\\\\s*\\\\(\\\\s*(.*\\\\s*\\\\[.*\\\\s*in\\\\s*.*\\\\].*)\\\\s*;\\\\s*(.*)\\\\s*;\\\\s*(.*)\\\\s*\\\\)\", \"for($1;$2;$3)\");\n    return output;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..310017bf 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,11 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String output = code.replaceAll(\"\\\\[(\\\\s*\\\\d+\\\\s*)\\\\s*in\\\\s*(\\\\s*[a-zA-Z0-9.]+\\\\s*)\\\\]\", \"[$2.contains($1)]\");\n+    output = output.replaceAll(\"\\\\bfor\\\\s*\\\\(\\\\s*(.*\\\\s*\\\\[.*\\\\s*in\\\\s*.*\\\\].*)\\\\s*;\\\\s*(.*)\\\\s*;\\\\s*(.*)\\\\s*\\\\)\", \"for($1;$2;$3)\");\n+    return output;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}