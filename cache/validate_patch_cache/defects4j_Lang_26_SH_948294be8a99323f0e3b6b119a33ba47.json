{
    "patch": "Calendar c = Calendar.getInstance();\nc.setTimeZone(mTimeZone);\nc.setMinimalDaysInFirstWeek(4);\nc.setFirstDayOfWeek(Calendar.MONDAY);\nc.setTime(date);\nint year = c.get(Calendar.YEAR);\nif (c.get(Calendar.MONTH) == Calendar.JANUARY && c.get(Calendar.WEEK_OF_YEAR) > 50) {\n    // Week 1 is defined as the week containing Jan 4th\n    // If Jan 1st-3rd is in week 52 last year, we need to add 52\n    // If Jan 1st-3rd is in week 53 last year, we need to add 53\n    Calendar temp = Calendar.getInstance();\n    temp.setTimeZone(mTimeZone);\n    temp.set(year - 1, Calendar.DECEMBER, 31);\n    int maxWeeks = temp.getActualMaximum(Calendar.WEEK_OF_YEAR);\n    int weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n    if (weekOfYear == maxWeeks || weekOfYear == maxWeeks - 1) {\n        weekOfYear += maxWeeks - 52;\n        year--;\n    }\n} else if (c.get(Calendar.MONTH) == Calendar.DECEMBER && c.get(Calendar.WEEK_OF_YEAR) == 1) {\n    // If days before Jan 4th is in week 53, it should be considered in year (x-1)\n    // If days before Jan 4th is in week 52, it should still be considered in year x\n    Calendar temp = Calendar.getInstance();\n    temp.setTimeZone(mTimeZone);\n    temp.set(year, Calendar.DECEMBER, 31);\n    int maxWeeks = temp.getActualMaximum(Calendar.WEEK_OF_YEAR);\n    if (maxWeeks == 52) {\n        year++;\n    }\n}\nc.set(Calendar.YEAR, year);\nint weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\nif (weekOfYear == 0) {\n    c.add(Calendar.YEAR, -1);\n    c.set(Calendar.WEEK_OF_YEAR, 52);\n    weekOfYear = 52;\n} else if (weekOfYear > 52) {\n    c.add(Calendar.YEAR, 1);\n    c.set(Calendar.WEEK_OF_YEAR, 1);\n    weekOfYear = 1;\n}\nc.set(Calendar.WEEK_OF_YEAR, weekOfYear);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..48f0f74b 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -817,7 +817,48 @@ public class FastDateFormat extends Format {\n      * @return the formatted string\n      */\n     public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n+Calendar c = Calendar.getInstance();\n+c.setTimeZone(mTimeZone);\n+c.setMinimalDaysInFirstWeek(4);\n+c.setFirstDayOfWeek(Calendar.MONDAY);\n+c.setTime(date);\n+int year = c.get(Calendar.YEAR);\n+if (c.get(Calendar.MONTH) == Calendar.JANUARY && c.get(Calendar.WEEK_OF_YEAR) > 50) {\n+    // Week 1 is defined as the week containing Jan 4th\n+    // If Jan 1st-3rd is in week 52 last year, we need to add 52\n+    // If Jan 1st-3rd is in week 53 last year, we need to add 53\n+    Calendar temp = Calendar.getInstance();\n+    temp.setTimeZone(mTimeZone);\n+    temp.set(year - 1, Calendar.DECEMBER, 31);\n+    int maxWeeks = temp.getActualMaximum(Calendar.WEEK_OF_YEAR);\n+    int weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n+    if (weekOfYear == maxWeeks || weekOfYear == maxWeeks - 1) {\n+        weekOfYear += maxWeeks - 52;\n+        year--;\n+    }\n+} else if (c.get(Calendar.MONTH) == Calendar.DECEMBER && c.get(Calendar.WEEK_OF_YEAR) == 1) {\n+    // If days before Jan 4th is in week 53, it should be considered in year (x-1)\n+    // If days before Jan 4th is in week 52, it should still be considered in year x\n+    Calendar temp = Calendar.getInstance();\n+    temp.setTimeZone(mTimeZone);\n+    temp.set(year, Calendar.DECEMBER, 31);\n+    int maxWeeks = temp.getActualMaximum(Calendar.WEEK_OF_YEAR);\n+    if (maxWeeks == 52) {\n+        year++;\n+    }\n+}\n+c.set(Calendar.YEAR, year);\n+int weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n+if (weekOfYear == 0) {\n+    c.add(Calendar.YEAR, -1);\n+    c.set(Calendar.WEEK_OF_YEAR, 52);\n+    weekOfYear = 52;\n+} else if (weekOfYear > 52) {\n+    c.add(Calendar.YEAR, 1);\n+    c.set(Calendar.WEEK_OF_YEAR, 1);\n+    weekOfYear = 1;\n+}\n+c.set(Calendar.WEEK_OF_YEAR, weekOfYear);\n         c.setTime(date);\n         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}