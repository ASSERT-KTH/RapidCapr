{
    "patch": "      if (functionType.isConstructor() &&\n          !functionType.isNativeObjectType() &&\n          !isExtern &&\n          (functionType.getThisType().isUnknownType() ||\n           functionType.getThisType().isVoidType())) {\n        report(t, n, CONSTRUCTOR_CALL_WITHOUT_NEW, childType.toString());\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..546caf1c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      if (functionType.isConstructor() &&\n+          !functionType.isNativeObjectType() &&\n+          !isExtern &&\n+          (functionType.getThisType().isUnknownType() ||\n+           functionType.getThisType().isVoidType())) {\n+        report(t, n, CONSTRUCTOR_CALL_WITHOUT_NEW, childType.toString());\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}