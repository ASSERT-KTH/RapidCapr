{
    "patch": "        if (list.length == 0) {\n            throw new IllegalArgumentException(\"Empty array\");\n        }\n        \n        double median;\n        int mid = list.length / 2;\n\n        if (list.length % 2 == 1) {\n            median = list[mid];\n        } else {\n            median = (double) (list[mid - 1] + list[mid]) / 2;\n        }\n\n        if (Double.isNaN(median) || Double.isInfinite(median)) {\n            throw new IllegalArgumentException(\"Invalid median value\");\n        }\n\n        return median;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MEDIAN.java b/src/main/java/humaneval/buggy/MEDIAN.java\nindex 6ba9604..a7994bd 100644\n--- a/src/main/java/humaneval/buggy/MEDIAN.java\n+++ b/src/main/java/humaneval/buggy/MEDIAN.java\n@@ -15,7 +15,24 @@ public class MEDIAN {\n         if (list.length % 2 == 1) {\n             return list[(int) (list.length / 2)];\n         } else {\n-            return list[(int) (list.length / 2)] + list[(int) (list.length / 2) + 1] / 2;\n+        if (list.length == 0) {\n+            throw new IllegalArgumentException(\"Empty array\");\n+        }\n+        \n+        double median;\n+        int mid = list.length / 2;\n+\n+        if (list.length % 2 == 1) {\n+            median = list[mid];\n+        } else {\n+            median = (double) (list[mid - 1] + list[mid]) / 2;\n+        }\n+\n+        if (Double.isNaN(median) || Double.isInfinite(median)) {\n+            throw new IllegalArgumentException(\"Invalid median value\");\n+        }\n+\n+        return median;\n         }\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}