{
    "patch": "                SavedField savedField = savedFields[i];\n                DateTimeField field = savedField.iField;\n                int old = savedField.iValue;\n                int parsedValue = field.getParser().parseLocalText(\n                        savedField.iText, 0);\n                savedField = savedField.set(parsedValue);\n                int offset = field.getDifference(millis, savedField.iValue);\n                if (offset == 0) {\n                    continue;\n                }\n                millis = field.add(millis, offset);\n                for (int j = i + 1; j < count; j++) {\n                    millis = savedFields[j].set(millis, true);\n                }\n                if (i > 0) {\n                    iSavedFields = savedFields = copy(savedFields, i);\n                    iSavedFieldsCount = count = i;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..05db96f5 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                SavedField savedField = savedFields[i];\n+                DateTimeField field = savedField.iField;\n+                int old = savedField.iValue;\n+                int parsedValue = field.getParser().parseLocalText(\n+                        savedField.iText, 0);\n+                savedField = savedField.set(parsedValue);\n+                int offset = field.getDifference(millis, savedField.iValue);\n+                if (offset == 0) {\n+                    continue;\n+                }\n+                millis = field.add(millis, offset);\n+                for (int j = i + 1; j < count; j++) {\n+                    millis = savedFields[j].set(millis, true);\n+                }\n+                if (i > 0) {\n+                    iSavedFields = savedFields = copy(savedFields, i);\n+                    iSavedFieldsCount = count = i;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}