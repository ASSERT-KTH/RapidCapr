{
    "patch": "            if (len == 5 && str.charAt(4) == '_') {\n                return new Locale(str.substring(0, 2), str.substring(3, 4));\n            }\n            if (len == 7 && str.charAt(4) == '_' && Character.isDigit(str.charAt(5)) && Character.isDigit(str.charAt(6))) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 7));\n            }\n            if (len >= 7 && str.charAt(2) == '_' && str.charAt(5) == '_') {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..984fafad 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,16 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            if (len == 5 && str.charAt(4) == '_') {\n+                return new Locale(str.substring(0, 2), str.substring(3, 4));\n+            }\n+            if (len == 7 && str.charAt(4) == '_' && Character.isDigit(str.charAt(5)) && Character.isDigit(str.charAt(6))) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 7));\n+            }\n+            if (len >= 7 && str.charAt(2) == '_' && str.charAt(5) == '_') {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            }\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}