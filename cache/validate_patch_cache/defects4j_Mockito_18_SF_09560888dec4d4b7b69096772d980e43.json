{
    "patch": "public class StringUtils {\n  \n  /**\n   * Reverses a given string.\n   *\n   * @param str the string to be reversed\n   * @return the reversed string\n   */\n  public static String reverse(String str) {\n    if (str == null) {\n      return null;\n    }\n    StringBuilder reversed = new StringBuilder();\n    for (int i = str.length() - 1; i >= 0; i--) {\n      reversed.append(str.charAt(i));\n    }\n    return reversed.toString();\n  }\n}\n",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..97cda9688 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,26 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public class StringUtils {\n+  \n+  /**\n+   * Reverses a given string.\n+   *\n+   * @param str the string to be reversed\n+   * @return the reversed string\n+   */\n+  public static String reverse(String str) {\n+    if (str == null) {\n+      return null;\n+    }\n+    StringBuilder reversed = new StringBuilder();\n+    for (int i = str.length() - 1; i >= 0; i--) {\n+      reversed.append(str.charAt(i));\n+    }\n+    return reversed.toString();\n+  }\n+}\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}