{
    "patch": "        copy.data = new java.util.ArrayList<>();\n        if (this.data.isEmpty()) {\n            return copy;\n        }\n        int startIndex = Math.max(Collections.binarySearch(this.data, new TimeSeriesDataItem(this.timePeriodClass.createInstance(start)), new TimeSeriesDataItemComparator()), -1);\n        int endIndex = Math.min(Collections.binarySearch(this.data, new TimeSeriesDataItem(this.timePeriodClass.createInstance(end)), new TimeSeriesDataItemComparator()), this.data.size() - 1);\n\n        if (startIndex < 0) {\n            startIndex = -startIndex - 1;\n        }\n        if (endIndex < 0) {\n            endIndex = -(endIndex + 2);\n        }\n\n        for (int i = startIndex; i <= endIndex; i++) {\n            TimeSeriesDataItem item = this.data.get(i);\n            try {\n                copy.addOrUpdate((TimeSeriesDataItem) item.clone());\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..76c6f2e 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,28 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList<>();\n+        if (this.data.isEmpty()) {\n+            return copy;\n+        }\n+        int startIndex = Math.max(Collections.binarySearch(this.data, new TimeSeriesDataItem(this.timePeriodClass.createInstance(start)), new TimeSeriesDataItemComparator()), -1);\n+        int endIndex = Math.min(Collections.binarySearch(this.data, new TimeSeriesDataItem(this.timePeriodClass.createInstance(end)), new TimeSeriesDataItemComparator()), this.data.size() - 1);\n+\n+        if (startIndex < 0) {\n+            startIndex = -startIndex - 1;\n+        }\n+        if (endIndex < 0) {\n+            endIndex = -(endIndex + 2);\n+        }\n+\n+        for (int i = startIndex; i <= endIndex; i++) {\n+            TimeSeriesDataItem item = this.data.get(i);\n+            try {\n+                copy.addOrUpdate((TimeSeriesDataItem) item.clone());\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}