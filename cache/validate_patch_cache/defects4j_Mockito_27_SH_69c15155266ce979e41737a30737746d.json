{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\nFactory factory = (Factory) mock;\nCallback[] callbacks = factory.getCallbacks();\ncallbacks[0] = newFilter;\nfactory.setCallbacks(callbacks);\n\n// Create a new spy object for initializedSpy\nT initializedSpyNew = spy(initializedSpy);\nMockHandlerInterface<T> initializedMockHandler = getMockHandler(initializedSpyNew);\nMockHandler<T> initializedMockHandlerNew = new MockHandler<T>(initializedMockHandler);\nMethodInterceptorFilter initializedFilter = new MethodInterceptorFilter(initializedMockHandlerNew, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\nfactory = (Factory) initializedSpyNew;\ncallbacks = factory.getCallbacks();\ncallbacks[0] = initializedFilter;\nfactory.setCallbacks(callbacks);\n\ninitializedSpy = initializedSpyNew;",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..a27eb0089 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,27 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+Factory factory = (Factory) mock;\n+Callback[] callbacks = factory.getCallbacks();\n+callbacks[0] = newFilter;\n+factory.setCallbacks(callbacks);\n+\n+// Create a new spy object for initializedSpy\n+T initializedSpyNew = spy(initializedSpy);\n+MockHandlerInterface<T> initializedMockHandler = getMockHandler(initializedSpyNew);\n+MockHandler<T> initializedMockHandlerNew = new MockHandler<T>(initializedMockHandler);\n+MethodInterceptorFilter initializedFilter = new MethodInterceptorFilter(initializedMockHandlerNew, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+factory = (Factory) initializedSpyNew;\n+callbacks = factory.getCallbacks();\n+callbacks[0] = initializedFilter;\n+factory.setCallbacks(callbacks);\n+\n+initializedSpy = initializedSpyNew;\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}