{
    "patch": "    protected BasePeriod(long duration) {\n        this(duration, PeriodType.standard());\n        // fix [3264409]\n        iYears = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_YEAR);\n        duration = duration - (iYears * DateTimeConstants.MILLIS_PER_YEAR);\n        iMonths = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_MONTH);\n        duration = duration - (iMonths * DateTimeConstants.MILLIS_PER_MONTH);\n        iWeeks = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_WEEK);\n        duration = duration - (iWeeks * DateTimeConstants.MILLIS_PER_WEEK);\n        iDays = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_DAY);\n        duration = duration - (iDays * DateTimeConstants.MILLIS_PER_DAY);\n        iHours = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_HOUR);\n        duration = duration - (iHours * DateTimeConstants.MILLIS_PER_HOUR);\n        iMinutes = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_MINUTE);\n        duration = duration - (iMinutes * DateTimeConstants.MILLIS_PER_MINUTE);\n        iSeconds = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_SECOND);\n        iMillis = FieldUtils.safeToInt(duration - (iSeconds * DateTimeConstants.MILLIS_PER_SECOND));\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..c9a99b24 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,8 +219,22 @@ public abstract class BasePeriod\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(duration, PeriodType.standard());\n+        // fix [3264409]\n+        iYears = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_YEAR);\n+        duration = duration - (iYears * DateTimeConstants.MILLIS_PER_YEAR);\n+        iMonths = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_MONTH);\n+        duration = duration - (iMonths * DateTimeConstants.MILLIS_PER_MONTH);\n+        iWeeks = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_WEEK);\n+        duration = duration - (iWeeks * DateTimeConstants.MILLIS_PER_WEEK);\n+        iDays = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_DAY);\n+        duration = duration - (iDays * DateTimeConstants.MILLIS_PER_DAY);\n+        iHours = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_HOUR);\n+        duration = duration - (iHours * DateTimeConstants.MILLIS_PER_HOUR);\n+        iMinutes = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_MINUTE);\n+        duration = duration - (iMinutes * DateTimeConstants.MILLIS_PER_MINUTE);\n+        iSeconds = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_SECOND);\n+        iMillis = FieldUtils.safeToInt(duration - (iSeconds * DateTimeConstants.MILLIS_PER_SECOND));\n     }\n \n     /**",
    "result_reason": "error: no suitable constructor found for BasePeriod(long,PeriodType)",
    "test_result": "ERROR"
}