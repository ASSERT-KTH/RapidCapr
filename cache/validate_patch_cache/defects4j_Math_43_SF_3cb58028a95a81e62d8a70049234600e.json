{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    if (Double.isNaN(getMean()) || Double.isNaN(getVariance()) ||\n        Double.isNaN(getGeometricMean()) || Double.isInfinite(getMean()) ||\n        Double.isInfinite(getVariance()) || Double.isInfinite(getGeometricMean())) {\n        sumImpl.clear();\n        sumsqImpl.clear();\n        minImpl.clear();\n        maxImpl.clear();\n        sumLogImpl.clear();\n        secondMoment.clear();\n        if (meanImpl instanceof Mean && (Double.isNaN(meanImpl.getResult()) || Double.isInfinite(meanImpl.getResult()))) {\n            ((Mean) meanImpl).clear();\n        } else if (meanImpl instanceof SecondMoment) {\n            secondMoment = (SecondMoment) meanImpl;\n            secondMoment.increment(value);\n            meanImpl = new Mean(secondMoment);\n        } else {\n            meanImpl.increment(value);\n        }\n        if (varianceImpl instanceof Variance && (Double.isNaN(varianceImpl.getResult()) || Double.isInfinite(varianceImpl.getResult()))) {\n            ((Variance) varianceImpl).clear();\n        } else if (varianceImpl instanceof SecondMoment) {\n            secondMoment = (SecondMoment) varianceImpl;\n            secondMoment.increment(value);\n            varianceImpl = new Variance(secondMoment);\n        } else {\n            varianceImpl.increment(value);\n        }\n        if (geoMeanImpl instanceof GeometricMean && Double.isInfinite(geoMeanImpl.getResult())) {\n            ((GeometricMean) geoMeanImpl).clear();\n        } else {\n            geoMeanImpl.increment(value);\n        }\n        n = 0;\n    } else {\n        if (!(meanImpl instanceof Mean)) {\n            meanImpl.increment(value);\n        }\n        if (!(varianceImpl instanceof Variance)) {\n            varianceImpl.increment(value);\n        }\n        if (!(geoMeanImpl instanceof GeometricMean)) {\n            geoMeanImpl.increment(value);\n        }\n        n++;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..29bfdb6ce 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,15 +146,48 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    if (Double.isNaN(getMean()) || Double.isNaN(getVariance()) ||\n+        Double.isNaN(getGeometricMean()) || Double.isInfinite(getMean()) ||\n+        Double.isInfinite(getVariance()) || Double.isInfinite(getGeometricMean())) {\n+        sumImpl.clear();\n+        sumsqImpl.clear();\n+        minImpl.clear();\n+        maxImpl.clear();\n+        sumLogImpl.clear();\n+        secondMoment.clear();\n+        if (meanImpl instanceof Mean && (Double.isNaN(meanImpl.getResult()) || Double.isInfinite(meanImpl.getResult()))) {\n+            ((Mean) meanImpl).clear();\n+        } else if (meanImpl instanceof SecondMoment) {\n+            secondMoment = (SecondMoment) meanImpl;\n+            secondMoment.increment(value);\n+            meanImpl = new Mean(secondMoment);\n+        } else {\n+            meanImpl.increment(value);\n+        }\n+        if (varianceImpl instanceof Variance && (Double.isNaN(varianceImpl.getResult()) || Double.isInfinite(varianceImpl.getResult()))) {\n+            ((Variance) varianceImpl).clear();\n+        } else if (varianceImpl instanceof SecondMoment) {\n+            secondMoment = (SecondMoment) varianceImpl;\n+            secondMoment.increment(value);\n+            varianceImpl = new Variance(secondMoment);\n+        } else {\n+            varianceImpl.increment(value);\n+        }\n+        if (geoMeanImpl instanceof GeometricMean && Double.isInfinite(geoMeanImpl.getResult())) {\n+            ((GeometricMean) geoMeanImpl).clear();\n+        } else {\n+            geoMeanImpl.increment(value);\n+        }\n+        n = 0;\n+    } else {\n         if (!(meanImpl instanceof Mean)) {\n             meanImpl.increment(value);\n         }\n@@ -166,6 +199,7 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         }\n         n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}