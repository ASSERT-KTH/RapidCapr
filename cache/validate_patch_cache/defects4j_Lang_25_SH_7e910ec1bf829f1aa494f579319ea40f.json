{
    "patch": "// Split the string into characters\nchar[] inputArray = input.toCharArray();\n\nfor (int i = 0; i < inputArray.length; i++) {\n\n    // Check if the character is in the ASCII range of printable characters\n    if (inputArray[i] >= 32 && inputArray[i] <= 126) {\n        output.append(inputArray[i]);\n    }\n    // Check if the character is a newline, tab or carriage return\n    else if (inputArray[i] == '\\n' || inputArray[i] == '\\r' || inputArray[i] == '\\t') {\n        output.append(inputArray[i]);\n    }\n    // Otherwise, encode the character\n    else {\n        output.append(String.format(\"\\\\u%04X\", (int)inputArray[i]));\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}