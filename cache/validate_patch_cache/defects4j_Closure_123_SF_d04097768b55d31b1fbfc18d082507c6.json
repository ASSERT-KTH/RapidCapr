{
    "patch": "public void printInOperatorInForLoop(boolean c, boolean d, String expected) {\n    String result = \"\";\n    Object a = null;\n    for (a = c ? 0 : (0 in d ? new Object[]{0} : new Object[0]); ; foo()) {\n        result += \"foo\";\n        if (a instanceof Integer && (int) a == 10) {\n            break;\n        }\n    }\n    assertEquals(expected, result);\n}\n\n// Helper function\npublic void foo() {\n    return;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..0cce0d94 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,22 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void printInOperatorInForLoop(boolean c, boolean d, String expected) {\n+    String result = \"\";\n+    Object a = null;\n+    for (a = c ? 0 : (0 in d ? new Object[]{0} : new Object[0]); ; foo()) {\n+        result += \"foo\";\n+        if (a instanceof Integer && (int) a == 10) {\n+            break;\n+        }\n+    }\n+    assertEquals(expected, result);\n+}\n+\n+// Helper function\n+public void foo() {\n+    return;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}