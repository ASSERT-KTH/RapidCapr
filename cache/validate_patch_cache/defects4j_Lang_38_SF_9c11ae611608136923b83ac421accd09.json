{
    "patch": "        if (mTimeZoneForced && !calendar.getTimeZone().equals(mTimeZone)) {\n            calendar.setTimeZone(mTimeZone);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..f02c7e22 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -867,13 +867,9 @@ public class FastDateFormat extends Format {\n      * @param buf  the buffer to format into\n      * @return the specified string buffer\n      */\n-    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n-        if (mTimeZoneForced) {\n-            calendar = (Calendar) calendar.clone();\n+        if (mTimeZoneForced && !calendar.getTimeZone().equals(mTimeZone)) {\n             calendar.setTimeZone(mTimeZone);\n         }\n-        return applyRules(calendar, buf);\n-    }\n \n     /**\n      * <p>Performs the formatting by applying the rules to the",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}