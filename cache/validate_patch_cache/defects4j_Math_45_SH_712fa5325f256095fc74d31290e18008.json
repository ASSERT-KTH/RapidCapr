{
    "patch": "    public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n        super(rowDimension, columnDimension);\n        int maxProduct = Integer.MAX_VALUE / Math.max(rowDimension, 1);\n        if (columnDimension > maxProduct) {\n            throw new NumberIsTooLargeException(columnDimension, maxProduct, true);\n        }\n        this.rows = rowDimension;\n        this.columns = columnDimension;\n        this.entries = new OpenIntToDoubleHashMap(0.0);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..4563917d0 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,16 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+    public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n+        super(rowDimension, columnDimension);\n+        int maxProduct = Integer.MAX_VALUE / Math.max(rowDimension, 1);\n+        if (columnDimension > maxProduct) {\n+            throw new NumberIsTooLargeException(columnDimension, maxProduct, true);\n+        }\n+        this.rows = rowDimension;\n+        this.columns = columnDimension;\n+        this.entries = new OpenIntToDoubleHashMap(0.0);\n+    }\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}