{
    "patch": "        Node rhs = thenOp.getLastChild();\n        Node elseRhs = elseOp.getLastChild();\n        if (areNodesEqualForInlining(thenOp, elseOp.getLastChild()) &&\n            (lhs.getType() == Token.NAME &&\n             lhs.getFirstChild() == null ||\n             !mayHaveSideEffects(lhs.getFirstChild()))) {\n          // if(x)a=1;else a=1; -> a=1;\n          n.removeChild(cond);\n          Node assign = IR.assign(lhs, rhs).srcref(thenOp);\n          Node expr = NodeUtil.newExpr(assign);\n          parent.replaceChild(n, expr);\n          reportCodeChange();\n\n          return expr;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\nindex ae568e8e..37f6d00a 100644\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n@@ -779,7 +779,21 @@ class PeepholeSubstituteAlternateSyntax\n               // evaluates LHS before cond]\n               // NOTE - there are some circumstances where we can\n               // proceed even if there are side effects...\n-              !mayEffectMutableState(lhs)) {\n+        Node rhs = thenOp.getLastChild();\n+        Node elseRhs = elseOp.getLastChild();\n+        if (areNodesEqualForInlining(thenOp, elseOp.getLastChild()) &&\n+            (lhs.getType() == Token.NAME &&\n+             lhs.getFirstChild() == null ||\n+             !mayHaveSideEffects(lhs.getFirstChild()))) {\n+          // if(x)a=1;else a=1; -> a=1;\n+          n.removeChild(cond);\n+          Node assign = IR.assign(lhs, rhs).srcref(thenOp);\n+          Node expr = NodeUtil.newExpr(assign);\n+          parent.replaceChild(n, expr);\n+          reportCodeChange();\n+\n+          return expr;\n+        }\n \n             n.removeChild(cond);\n             Node assignName = thenOp.removeFirstChild();",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}