{
    "patch": "public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n    PriorityQueue<Integer> pq = new PriorityQueue<>(k, Collections.reverseOrder());\n    for (int num : arr) {\n        pq.offer(num);\n        if (pq.size() > k) {\n            pq.poll();\n        }\n    }\n    ArrayList<Integer> result = new ArrayList<>(pq);\n    Collections.reverse(result);\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..16b3d38 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -32,7 +32,18 @@ public class MAXIMUM_K {\n     public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n         Collections.sort(arr);\n         ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n+public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n+    PriorityQueue<Integer> pq = new PriorityQueue<>(k, Collections.reverseOrder());\n+    for (int num : arr) {\n+        pq.offer(num);\n+        if (pq.size() > k) {\n+            pq.poll();\n+        }\n+    }\n+    ArrayList<Integer> result = new ArrayList<>(pq);\n+    Collections.reverse(result);\n+    return result;\n+}\n             result.add(arr.get(i));\n         }\n         return result;",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[35,1] illegal start of expression",
    "test_result": "ERROR"
}