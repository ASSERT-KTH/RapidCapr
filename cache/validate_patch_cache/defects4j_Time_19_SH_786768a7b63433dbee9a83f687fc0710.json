{
    "patch": "        } else if (offsetLocal >= 0 && offsetAdjusted >= 0) {\n            // we need to ensure that time is always after the DST gap\n            // this happens naturally for positive offsets, but not for negative\n            int offsetDiff = offsetLocal - offsetAdjusted;\n            if (offsetDiff < 0 && offsetAdjusted < 0) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return getOffset(nextAdjusted);\n                }\n            } else if (offsetDiff > 0) {\n                long prev = previousTransition(instantLocal - offsetAdjusted);\n                int offsetPrev = getOffset(prev);\n                if (offsetPrev < offsetAdjusted) {\n                    return offsetPrev;\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..3d0882d1 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,27 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+        } else if (offsetLocal >= 0 && offsetAdjusted >= 0) {\n+            // we need to ensure that time is always after the DST gap\n+            // this happens naturally for positive offsets, but not for negative\n+            int offsetDiff = offsetLocal - offsetAdjusted;\n+            if (offsetDiff < 0 && offsetAdjusted < 0) {\n+                // if we just return offsetAdjusted then the time is pushed\n+                // back before the transition, whereas it should be\n+                // on or after the transition\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    return getOffset(nextAdjusted);\n+                }\n+            } else if (offsetDiff > 0) {\n+                long prev = previousTransition(instantLocal - offsetAdjusted);\n+                int offsetPrev = getOffset(prev);\n+                if (offsetPrev < offsetAdjusted) {\n+                    return offsetPrev;\n+                }\n+            }\n+        }\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}