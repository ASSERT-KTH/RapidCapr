{
    "patch": "public class Rectangle {\n    private int width, length;\n\n    public Rectangle(int w, int l) {\n        width = w;\n        length = l;\n    }\n\n    public int getArea() {\n        return width * length;\n    }\n\n    @Override // this annotation indicates that we are attempting to override a superclass method\n    public boolean equals(Object obj) { // the parameter type should be \"Object\", not \"Rectangle\"\n        if (this == obj) return true; // if we are comparing the same object, they must be equal\n        if (!(obj instanceof Rectangle)) return false; // if the input object is not a Rectangle, it is not equal to this one\n        Rectangle other = (Rectangle)obj; // downcast the input object to a Rectangle so that we can compare fields\n        return this.width == other.width && this.length == other.length; // return whether they have the same width and length\n    }\n} ",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\nindex bbd5ddb..fa439be 100644\n--- a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n@@ -327,7 +327,26 @@ public class MinMaxCategoryRenderer extends AbstractCategoryItemRenderer {\n      * @param column  the column index (zero-based).\n      * @param pass  the pass index.\n      */\n-    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n+public class Rectangle {\n+    private int width, length;\n+\n+    public Rectangle(int w, int l) {\n+        width = w;\n+        length = l;\n+    }\n+\n+    public int getArea() {\n+        return width * length;\n+    }\n+\n+    @Override // this annotation indicates that we are attempting to override a superclass method\n+    public boolean equals(Object obj) { // the parameter type should be \"Object\", not \"Rectangle\"\n+        if (this == obj) return true; // if we are comparing the same object, they must be equal\n+        if (!(obj instanceof Rectangle)) return false; // if the input object is not a Rectangle, it is not equal to this one\n+        Rectangle other = (Rectangle)obj; // downcast the input object to a Rectangle so that we can compare fields\n+        return this.width == other.width && this.length == other.length; // return whether they have the same width and length\n+    }\n+} \n             Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n             ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n             int pass) {",
    "result_reason": "error: annotations are not supported in -source 1.4",
    "test_result": "ERROR"
}