{
    "patch": "            for (int j = 0; j < numbers.length; j++) {\n                if (i != j) {\n                    double new_distance = Math.abs(numbers[i] - numbers[j]);\n                    if (new_distance < distance) {\n                        distance = new_distance;\n                        result[0] = Math.min(numbers[i], numbers[j]);\n                        result[1] = Math.max(numbers[i], numbers[j]);\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\nindex 72388af..3909d5d 100644\n--- a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n@@ -6,7 +6,16 @@ public class FIND_CLOSEST_ELEMENTS {\n \n         double distance = Double.MAX_VALUE;\n         for (int i = 0; i < numbers.length; i += 1){\n-            for (int j = 0; j < numbers.length; j += 1){\n+            for (int j = 0; j < numbers.length; j++) {\n+                if (i != j) {\n+                    double new_distance = Math.abs(numbers[i] - numbers[j]);\n+                    if (new_distance < distance) {\n+                        distance = new_distance;\n+                        result[0] = Math.min(numbers[i], numbers[j]);\n+                        result[1] = Math.max(numbers[i], numbers[j]);\n+                    }\n+                }\n+            }\n                 double new_distance = Math.abs(numbers[i] - numbers[j]);\n                 if (new_distance < distance){\n                     distance = new_distance;",
    "result_reason": " /tmp/humaneval-FIND_CLOSEST_ELEMENTS/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java:[32,9] illegal start of type",
    "test_result": "ERROR"
}