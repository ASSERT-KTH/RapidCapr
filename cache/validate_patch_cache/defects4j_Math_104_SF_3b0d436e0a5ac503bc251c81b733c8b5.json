{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.*;\n\npublic class MyFunction {\n    \n    public static double compute(double x, double alpha, double lambda) {\n        \n        double expected = Gamma.regularizedGammaP(alpha, x * lambda);\n        double actualP = 1 - Gamma.regularizedGammaQ(alpha, x * lambda);\n        TestUtils.assertEquals(expected, actualP, 1e-14);\n        return actualP;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..1e02df380 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,19 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.*;\n+\n+public class MyFunction {\n+    \n+    public static double compute(double x, double alpha, double lambda) {\n+        \n+        double expected = Gamma.regularizedGammaP(alpha, x * lambda);\n+        double actualP = 1 - Gamma.regularizedGammaQ(alpha, x * lambda);\n+        TestUtils.assertEquals(expected, actualP, 1e-14);\n+        return actualP;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}