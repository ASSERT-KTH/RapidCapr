{
    "patch": "public static boolean equals(CharSequence cs1, CharSequence cs2) {\n    if (cs1 == cs2) {\n        return true;\n    }\n    if (cs1 == null || cs2 == null) {\n        return false;\n    }\n    Iterator<Character> it1 = iterate(cs1);\n    Iterator<Character> it2 = iterate(cs2);\n    while (it1.hasNext() && it2.hasNext()) {\n        char c1 = it1.next();\n        char c2 = it2.next();\n        if (c1 != c2) {\n            return false;\n        }\n    }\n    return !it1.hasNext() && !it2.hasNext();\n}\n\nprivate static Iterator<Character> iterate(CharSequence cs) {\n    return new Iterator<Character>() {\n        private int index = 0;\n\n        @Override\n        public boolean hasNext() {\n            return index < cs.length();\n        }\n\n        @Override\n        public Character next() {\n            return cs.charAt(index++);\n        }\n    };\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex 535a3f24..5d3a98b8 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -778,15 +778,40 @@ public class StringUtils {\n      * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}\n      * @since 3.0 Changed signature from equals(String, String) to equals(CharSequence, CharSequence)\n      */\n-    public static boolean equals(CharSequence cs1, CharSequence cs2) {\n-        if (cs1 == cs2) {\n-            return true;\n-        }\n-        if (cs1 == null || cs2 == null) {\n+public static boolean equals(CharSequence cs1, CharSequence cs2) {\n+    if (cs1 == cs2) {\n+        return true;\n+    }\n+    if (cs1 == null || cs2 == null) {\n+        return false;\n+    }\n+    Iterator<Character> it1 = iterate(cs1);\n+    Iterator<Character> it2 = iterate(cs2);\n+    while (it1.hasNext() && it2.hasNext()) {\n+        char c1 = it1.next();\n+        char c2 = it2.next();\n+        if (c1 != c2) {\n             return false;\n         }\n-            return cs1.equals(cs2);\n     }\n+    return !it1.hasNext() && !it2.hasNext();\n+}\n+\n+private static Iterator<Character> iterate(CharSequence cs) {\n+    return new Iterator<Character>() {\n+        private int index = 0;\n+\n+        @Override\n+        public boolean hasNext() {\n+            return index < cs.length();\n+        }\n+\n+        @Override\n+        public Character next() {\n+            return cs.charAt(index++);\n+        }\n+    };\n+}\n \n     /**\n      * <p>Compares two CharSequences, returning {@code true} if they represent",
    "result_reason": "error: local variable cs is accessed from within inner class; needs to be declared final",
    "test_result": "ERROR"
}