{
    "patch": "        super(rowDimension, columnDimension);\n        if ((long) rowDimension * (long) columnDimension >= Integer.MAX_VALUE) {\n            throw new NumberIsTooLargeException(\n                    Long.valueOf(rowDimension), Long.valueOf(columnDimension), false);\n        }\n        this.rows = rowDimension;\n        this.columns = columnDimension;\n        this.entries = new OpenIntToDoubleHashMap(0.0);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..fee5170ce 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,14 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+        super(rowDimension, columnDimension);\n+        if ((long) rowDimension * (long) columnDimension >= Integer.MAX_VALUE) {\n+            throw new NumberIsTooLargeException(\n+                    Long.valueOf(rowDimension), Long.valueOf(columnDimension), false);\n+        }\n+        this.rows = rowDimension;\n+        this.columns = columnDimension;\n+        this.entries = new OpenIntToDoubleHashMap(0.0);\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: call to super must be first statement in constructor",
    "test_result": "ERROR"
}