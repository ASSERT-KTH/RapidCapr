{
    "patch": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n   int strLen = cs.length();\n   int searchLen = searchChars.length;\n   for (int i = 0; i < strLen; i++) {\n      char ch = cs.charAt(i);\n      for (int j = 0; j < searchLen; j++) {\n         char ch2 = searchChars[j];\n         if (ch == ch2 || Character.isHighSurrogate(ch2) && j < searchLen - 1 && Character.isLowSurrogate(searchChars[j + 1]) && ch == Character.toCodePoint(ch2, searchChars[j + 1])) {\n            return true;\n         }\n      }\n   }\n   return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..73095443 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,20 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char[] searchChars) {\n+   int strLen = cs.length();\n+   int searchLen = searchChars.length;\n+   for (int i = 0; i < strLen; i++) {\n+      char ch = cs.charAt(i);\n+      for (int j = 0; j < searchLen; j++) {\n+         char ch2 = searchChars[j];\n+         if (ch == ch2 || Character.isHighSurrogate(ch2) && j < searchLen - 1 && Character.isLowSurrogate(searchChars[j + 1]) && ch == Character.toCodePoint(ch2, searchChars[j + 1])) {\n+            return true;\n+         }\n+      }\n+   }\n+   return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}