{
    "patch": "savedFields = savedFields.clone();\ncount = iSavedFieldsCount;\nmillis = iMillis;\nboolean weekFieldsSet = false;\nfor (int i = 0; i < count; i++) {\n    try {\n        if (isWeekFieldsFirst(savedFields[i])) {\n            setWeekFields(savedFields[i], millis, resetFields);\n            weekFieldsSet = true;\n        } else {\n            millis = savedFields[i].set(millis, resetFields);\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n        }\n        throw e;\n    } catch (IllegalArgumentException e) {\n        if (text != null) {\n            if (\"Weekyears can not be set\".equals(e.getMessage()) && !weekFieldsSet) {\n                // week year field is not first, re-throw the exception\n                throw e;\n            } else {\n                e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\\\"', e);\n            }\n        }\n        throw e;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2f3e3141 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,35 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+savedFields = savedFields.clone();\n+count = iSavedFieldsCount;\n+millis = iMillis;\n+boolean weekFieldsSet = false;\n+for (int i = 0; i < count; i++) {\n+    try {\n+        if (isWeekFieldsFirst(savedFields[i])) {\n+            setWeekFields(savedFields[i], millis, resetFields);\n+            weekFieldsSet = true;\n+        } else {\n+            millis = savedFields[i].set(millis, resetFields);\n+        }\n+    } catch (IllegalFieldValueException e) {\n+        if (text != null) {\n+            e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n+        }\n+        throw e;\n+    } catch (IllegalArgumentException e) {\n+        if (text != null) {\n+            if (\"Weekyears can not be set\".equals(e.getMessage()) && !weekFieldsSet) {\n+                // week year field is not first, re-throw the exception\n+                throw e;\n+            } else {\n+                e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\\\"', e);\n+            }\n+        }\n+        throw e;\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}