{
    "patch": "        if (offsetLocal != offsetAdjusted) {\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted && (nextLocal - instantAdjusted) < (3 * MAX_MILLIS_DIFFERENCE)) {\n                int offsetBefore = getOffset(nextLocal - 1);\n                int offsetAfter = getOffset(nextLocal);\n                if (offsetAfter > offsetBefore) {\n                    return offsetBefore;\n                }\n                if ((offsetLocal - offsetAfter) < 0) {\n                    return offsetLocal;\n                }\n                return offsetAfter;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a48293d5 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,21 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if (offsetLocal != offsetAdjusted) {\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextLocal != nextAdjusted && (nextLocal - instantAdjusted) < (3 * MAX_MILLIS_DIFFERENCE)) {\n+                int offsetBefore = getOffset(nextLocal - 1);\n+                int offsetAfter = getOffset(nextLocal);\n+                if (offsetAfter > offsetBefore) {\n+                    return offsetBefore;\n+                }\n+                if ((offsetLocal - offsetAfter) < 0) {\n+                    return offsetLocal;\n+                }\n+                return offsetAfter;\n+            }\n+        }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}