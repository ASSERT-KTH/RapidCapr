{
    "patch": "                // adjust the milli if any of the higher fields have been updated\n                int iField = i + 1;\n                if (iField < count) {\n                    DateTimeField field = savedFields[iField].iField;\n                    DurationField durationField = field.getDurationField();\n                    long diff = savedFields[iField].getMillis() - field.set(millis, iDefaultYear);\n                    if (diff != 0) {\n                        millis = durationField.add(millis, diff);\n                        // Inlined \"reluctant\" time-zone adjustment here\n                        if (iField == savedFields.length - 1) {\n                            // Last in savedFields, so only chance to adjust millis\n                            if (iZone != null) {\n                                int newOffset = iZone.getOffsetFromLocal(DateTimeUtils.getInstantMillis(millis));\n                                millis += newOffset - iZone.getOffset(millis);\n                            }\n                        }\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d155b804 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                // adjust the milli if any of the higher fields have been updated\n+                int iField = i + 1;\n+                if (iField < count) {\n+                    DateTimeField field = savedFields[iField].iField;\n+                    DurationField durationField = field.getDurationField();\n+                    long diff = savedFields[iField].getMillis() - field.set(millis, iDefaultYear);\n+                    if (diff != 0) {\n+                        millis = durationField.add(millis, diff);\n+                        // Inlined \"reluctant\" time-zone adjustment here\n+                        if (iField == savedFields.length - 1) {\n+                            // Last in savedFields, so only chance to adjust millis\n+                            if (iZone != null) {\n+                                int newOffset = iZone.getOffsetFromLocal(DateTimeUtils.getInstantMillis(millis));\n+                                millis += newOffset - iZone.getOffset(millis);\n+                            }\n+                        }\n+                    }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}