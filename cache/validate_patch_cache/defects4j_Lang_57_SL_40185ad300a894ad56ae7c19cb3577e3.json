{
    "patch": "    private static Set<Locale> getAllAvailableLocales() {\n        Set<Locale> availableLocales = new HashSet<>();\n        DateFormatSymbols dateFormatSymbols = DateFormatSymbols.getInstance();\n        for (Locale locale : Locale.getAvailableLocales()) {\n            try {\n                dateFormatSymbols = new DateFormatSymbols(locale);\n                availableLocales.add(locale);\n            } catch (Exception e) {\n                // ignore locales that cannot be initialized with DateFormatSymbols\n            }\n        }\n        return availableLocales;\n    }\n\n    public static boolean isAvailableLocale(Locale locale) {\n        Set<Locale> availableLocales = getAllAvailableLocales();\n        return availableLocales.contains(locale);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex ceb886e8..288a6173 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -220,7 +220,24 @@ public class LocaleUtils {\n      * @return true if the locale is a known locale\n      */\n     public static boolean isAvailableLocale(Locale locale) {\n-        return cAvailableLocaleSet.contains(locale);\n+    private static Set<Locale> getAllAvailableLocales() {\n+        Set<Locale> availableLocales = new HashSet<>();\n+        DateFormatSymbols dateFormatSymbols = DateFormatSymbols.getInstance();\n+        for (Locale locale : Locale.getAvailableLocales()) {\n+            try {\n+                dateFormatSymbols = new DateFormatSymbols(locale);\n+                availableLocales.add(locale);\n+            } catch (Exception e) {\n+                // ignore locales that cannot be initialized with DateFormatSymbols\n+            }\n+        }\n+        return availableLocales;\n+    }\n+\n+    public static boolean isAvailableLocale(Locale locale) {\n+        Set<Locale> availableLocales = getAllAvailableLocales();\n+        return availableLocales.contains(locale);\n+    }\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}