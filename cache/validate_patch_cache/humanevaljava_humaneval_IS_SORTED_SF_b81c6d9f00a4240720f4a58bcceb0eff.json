{
    "patch": "public static boolean is_sorted(int[] lst) {\n    int first = lst[0];\n    int last = lst[lst.length - 1];\n    boolean increasing = first <= last;\n    boolean decreasing = first >= last;\n    for(int i = 1; i < lst.length - 1; i++) {\n        if(lst[i] > lst[i - 1] && lst[i] <= lst[i + 1]) increasing = true;\n        else if(lst[i] < lst[i - 1] && lst[i] >= lst[i + 1]) decreasing = true;\n        else return false;\n    }\n    return increasing || decreasing;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..b97263a 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,16 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n-        }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n-        }\n-        return true;\n+public static boolean is_sorted(int[] lst) {\n+    int first = lst[0];\n+    int last = lst[lst.length - 1];\n+    boolean increasing = first <= last;\n+    boolean decreasing = first >= last;\n+    for(int i = 1; i < lst.length - 1; i++) {\n+        if(lst[i] > lst[i - 1] && lst[i] <= lst[i + 1]) increasing = true;\n+        else if(lst[i] < lst[i - 1] && lst[i] >= lst[i + 1]) decreasing = true;\n+        else return false;\n     }\n+    return increasing || decreasing;\n+}\n }",
    "result_reason": "   TEST_IS_SORTED.test_11:62 expected:<true> but was:<false>",
    "test_result": "FAIL"
}