{
    "patch": "package com.example;\n\npublic class StringUtils {\n    \n    public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n        if (isEmpty(sequence) || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n\n        final int sequenceLength = sequence.length();\n        final int searchLength = searchChars.length;\n        final int sequenceLastIndex = sequenceLength - 1;\n        final int searchLastIndex = searchLength - 1;\n        int i = 0;\n\n        while (i < sequenceLength) {\n            final int currentCodePoint = Character.codePointAt(sequence, i);\n            final int currentCodePointLength = Character.charCount(currentCodePoint);\n\n            if (Character.isSupplementaryCodePoint(currentCodePoint)) {\n                for (int j = 0; j < searchLength; j++) {\n                    final int searchCodePoint = Character.codePointAt(searchChars, j);\n                    if (Character.compare(currentCodePoint, searchCodePoint) == 0) {\n                        return true;\n                    }\n                }\n            } else {\n                for (int j = 0; j < searchLength; j++) {\n                    final char searchChar = searchChars[j];\n                    if (sequence.charAt(i) == searchChar) {\n                        return true;\n                    }\n                }\n            }\n\n            i += currentCodePointLength;\n        }\n\n        return false;\n    }\n\n    private static boolean isEmpty(final CharSequence cs) {\n        return cs == null || cs.length() == 0;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..357863a1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,51 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+package com.example;\n+\n+public class StringUtils {\n+    \n+    public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n+        if (isEmpty(sequence) || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+\n+        final int sequenceLength = sequence.length();\n+        final int searchLength = searchChars.length;\n+        final int sequenceLastIndex = sequenceLength - 1;\n+        final int searchLastIndex = searchLength - 1;\n+        int i = 0;\n+\n+        while (i < sequenceLength) {\n+            final int currentCodePoint = Character.codePointAt(sequence, i);\n+            final int currentCodePointLength = Character.charCount(currentCodePoint);\n+\n+            if (Character.isSupplementaryCodePoint(currentCodePoint)) {\n+                for (int j = 0; j < searchLength; j++) {\n+                    final int searchCodePoint = Character.codePointAt(searchChars, j);\n+                    if (Character.compare(currentCodePoint, searchCodePoint) == 0) {\n+                        return true;\n+                    }\n+                }\n+            } else {\n+                for (int j = 0; j < searchLength; j++) {\n+                    final char searchChar = searchChars[j];\n+                    if (sequence.charAt(i) == searchChar) {\n+                        return true;\n+                    }\n+                }\n+            }\n+\n+            i += currentCodePointLength;\n+        }\n+\n+        return false;\n+    }\n+\n+    private static boolean isEmpty(final CharSequence cs) {\n+        return cs == null || cs.length() == 0;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}