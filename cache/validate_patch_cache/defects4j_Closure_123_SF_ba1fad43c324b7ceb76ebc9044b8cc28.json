{
    "patch": "public static String fixCode(String code) {\n    Pattern pattern = Pattern.compile(\"\\\\b(\\\\d+)\\\\b(?!.*\\\\])\");\n    Matcher matcher = pattern.matcher(code);\n    while (matcher.find()) {\n        String match = matcher.group();\n        String replacement = \"[\" + match + \"]\";\n        code = code.substring(0, matcher.start()) + replacement + code.substring(matcher.end());\n        matcher = pattern.matcher(code);\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..997c6b2b 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,17 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    Pattern pattern = Pattern.compile(\"\\\\b(\\\\d+)\\\\b(?!.*\\\\])\");\n+    Matcher matcher = pattern.matcher(code);\n+    while (matcher.find()) {\n+        String match = matcher.group();\n+        String replacement = \"[\" + match + \"]\";\n+        code = code.substring(0, matcher.start()) + replacement + code.substring(matcher.end());\n+        matcher = pattern.matcher(code);\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}