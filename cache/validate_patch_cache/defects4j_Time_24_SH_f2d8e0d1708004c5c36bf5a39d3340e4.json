{
    "patch": "            if (savedFields[i].iValue == Long.MIN_VALUE) {\n                savedFields[i] = null;\n                count--;\n                System.arraycopy(savedFields, i + 1, savedFields, i, count - i);\n                savedFields[count] = null;\n                i--;\n                continue;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..011677ba 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iValue == Long.MIN_VALUE) {\n+                savedFields[i] = null;\n+                count--;\n+                System.arraycopy(savedFields, i + 1, savedFields, i, count - i);\n+                savedFields[count] = null;\n+                i--;\n+                continue;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}