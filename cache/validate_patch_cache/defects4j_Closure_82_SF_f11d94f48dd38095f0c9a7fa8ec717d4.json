{
    "patch": "public boolean isEmptyType() {\n    return isNoType() ||\n            isVoidType() ||\n            isUnknownType() ||\n            isWildcardType() ||\n            isUnionType() ||\n            (isArray() && getComponentType().isEmptyType()) ||\n            (isPrimitive() && (getTag() == TypeTags.BYTE || getTag() == TypeTags.CHAR ||\n                    getTag() == TypeTags.SHORT || getTag() == TypeTags.INT ||\n                    getTag() == TypeTags.LONG || getTag() == TypeTags.FLOAT ||\n                    getTag() == TypeTags.DOUBLE)) ||\n            (isNullable() && underlyingType.isEmptyType()) ||\n            (isObjectType() && ((BObjectType) this).getFields().isEmpty());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..07332116 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,20 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public boolean isEmptyType() {\n+    return isNoType() ||\n+            isVoidType() ||\n+            isUnknownType() ||\n+            isWildcardType() ||\n+            isUnionType() ||\n+            (isArray() && getComponentType().isEmptyType()) ||\n+            (isPrimitive() && (getTag() == TypeTags.BYTE || getTag() == TypeTags.CHAR ||\n+                    getTag() == TypeTags.SHORT || getTag() == TypeTags.INT ||\n+                    getTag() == TypeTags.LONG || getTag() == TypeTags.FLOAT ||\n+                    getTag() == TypeTags.DOUBLE)) ||\n+            (isNullable() && underlyingType.isEmptyType()) ||\n+            (isObjectType() && ((BObjectType) this).getFields().isEmpty());\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}