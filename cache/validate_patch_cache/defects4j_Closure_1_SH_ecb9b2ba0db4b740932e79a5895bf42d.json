{
    "patch": "// Strip unreferenced args from the function declaration.\nNode args = function.getSecondChild();\nNode argsToRemove = null;\n\nfor (Node arg = args.getFirstChild(); arg != null; arg = arg.getNext()) {\n  Var var = fnScope.getVar(arg.getString());\n  if (!referenced.contains(var)) {\n    if (argsToRemove == null) {\n      argsToRemove = arg;\n    } else {\n      argsToRemove.addChildBefore(arg, argsToRemove.getLastChild());\n    }\n    compiler.reportCodeChange();\n  } else {\n    argsToRemove = null;\n  }\n}\n\nif (argsToRemove != null) {\n  args.removeChildren(argsToRemove);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2ac61cc7 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,27 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+// Strip unreferenced args from the function declaration.\n+Node args = function.getSecondChild();\n+Node argsToRemove = null;\n+\n+for (Node arg = args.getFirstChild(); arg != null; arg = arg.getNext()) {\n+  Var var = fnScope.getVar(arg.getString());\n+  if (!referenced.contains(var)) {\n+    if (argsToRemove == null) {\n+      argsToRemove = arg;\n+    } else {\n+      argsToRemove.addChildBefore(arg, argsToRemove.getLastChild());\n+    }\n+    compiler.reportCodeChange();\n+  } else {\n+    argsToRemove = null;\n+  }\n+}\n+\n+if (argsToRemove != null) {\n+  args.removeChildren(argsToRemove);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}