{
    "patch": "        try {\n            copy.data = new java.util.ArrayList();\n            if (this.data.size() > 0) {\n                for (int index = start; index <= end; index++) {\n                    TimeSeriesDataItem item\n                            = (TimeSeriesDataItem) this.data.get(index);\n                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                    copy.data.add(clone);\n                }\n            }\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e); // should not happen\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..db508fd 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        try {\n+            copy.data = new java.util.ArrayList();\n+            if (this.data.size() > 0) {\n+                for (int index = start; index <= end; index++) {\n+                    TimeSeriesDataItem item\n+                            = (TimeSeriesDataItem) this.data.get(index);\n+                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                    copy.data.add(clone);\n+                }\n+            }\n+        } catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e); // should not happen\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: exception CloneNotSupportedException is never thrown in body of corresponding try statement",
    "test_result": "ERROR"
}