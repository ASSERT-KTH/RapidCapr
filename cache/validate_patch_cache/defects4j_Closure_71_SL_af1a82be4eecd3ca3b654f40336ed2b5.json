{
    "patch": "boolean isOverride = false;\nif (parent.getType() == Token.ASSIGN &&\n        parent.getFirstChild() == getprop) {\n    ObjectType lhsType =\n        ObjectType.cast(dereference(parent.getFirstFirstChild().getJSType()));\n    ObjectType rhsType =\n        ObjectType.cast(dereference(getprop.getNext().getJSType()));\n    FunctionType lhsCtor = lhsType == null ? null : lhsType.getConstructor();\n    FunctionType rhsCtor = rhsType == null ? null : rhsType.getConstructor();\n\n    if (lhsCtor != null && rhsCtor != null &&\n        lhsCtor.getPrototype().isEquivalentTo(rhsCtor.getPrototype())) {\n        isOverride = true;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..5b11831b 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -413,7 +413,21 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n     if (objectType != null) {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n-      boolean isOverride = t.inGlobalScope() &&\n+boolean isOverride = false;\n+if (parent.getType() == Token.ASSIGN &&\n+        parent.getFirstChild() == getprop) {\n+    ObjectType lhsType =\n+        ObjectType.cast(dereference(parent.getFirstFirstChild().getJSType()));\n+    ObjectType rhsType =\n+        ObjectType.cast(dereference(getprop.getNext().getJSType()));\n+    FunctionType lhsCtor = lhsType == null ? null : lhsType.getConstructor();\n+    FunctionType rhsCtor = rhsType == null ? null : rhsType.getConstructor();\n+\n+    if (lhsCtor != null && rhsCtor != null &&\n+        lhsCtor.getPrototype().isEquivalentTo(rhsCtor.getPrototype())) {\n+        isOverride = true;\n+    }\n+}\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}