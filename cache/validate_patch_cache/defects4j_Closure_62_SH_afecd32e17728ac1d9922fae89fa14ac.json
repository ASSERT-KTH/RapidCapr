{
    "patch": "if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) {\n  for (int i = 0; i < charno; i++) {\n    b.append(sourceExcerpt.charAt(i) == '\\t' ? '\\t' : ' ');\n  }\n  b.append(\"^\\n\");\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..bb6d5205 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,12 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) {\n+  for (int i = 0; i < charno; i++) {\n+    b.append(sourceExcerpt.charAt(i) == '\\t' ? '\\t' : ' ');\n+  }\n+  b.append(\"^\\n\");\n+}\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}