{
    "patch": "                int next = i + 1;\n                if (next < count) {\n                    DurationField nextField = savedFields[next].iField.getDurationField();\n                    if (compareReverse(nextField, savedFields[i].iField.getDurationField()) > 0) {\n                        DateTimeZone zone = DateTimeUtils.getZone(iZone);\n                        millis = nextField.add(millis, zone.getOffset(millis), 1);\n                        millis = savedFields[i].set(millis, resetFields);\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..0eaa423a 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                int next = i + 1;\n+                if (next < count) {\n+                    DurationField nextField = savedFields[next].iField.getDurationField();\n+                    if (compareReverse(nextField, savedFields[i].iField.getDurationField()) > 0) {\n+                        DateTimeZone zone = DateTimeUtils.getZone(iZone);\n+                        millis = nextField.add(millis, zone.getOffset(millis), 1);\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}