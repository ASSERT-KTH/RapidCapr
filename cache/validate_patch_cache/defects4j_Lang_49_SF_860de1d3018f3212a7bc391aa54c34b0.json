{
    "patch": "    public Fraction reduce() {\n<<<<<<< Updated upstream\n        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        if (gcd == denominator) {\n            numerator /= gcd;\n            denominator /= gcd;\n        } else if (gcd > 1) {\n            numerator /= gcd;\n            denominator /= gcd;\n        }\n        return this;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..c9f973f4 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,11 +463,16 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+<<<<<<< Updated upstream\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        if (gcd == denominator) {\n+            numerator /= gcd;\n+            denominator /= gcd;\n+        } else if (gcd > 1) {\n+            numerator /= gcd;\n+            denominator /= gcd;\n+        }\n+        return this;\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}