{
    "patch": "public static int[] removeElement(int[] nums, int val) {\n    if (nums == null || nums.length == 0) {\n        return nums;\n    }\n    int i = 0, n = nums.length;\n    while (i < n) {\n        if (nums[i] != val) {\n            i++;\n        } else {\n            nums[i] = nums[n - 1];\n            n--;\n        }\n    }\n    int[] res = new int[n];\n    for (i = 0; i < n; i++) {\n        res[i] = nums[i];\n    }\n    return res;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..40850c17c 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,25 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static int[] removeElement(int[] nums, int val) {\n+    if (nums == null || nums.length == 0) {\n+        return nums;\n+    }\n+    int i = 0, n = nums.length;\n+    while (i < n) {\n+        if (nums[i] != val) {\n+            i++;\n+        } else {\n+            nums[i] = nums[n - 1];\n+            n--;\n+        }\n+    }\n+    int[] res = new int[n];\n+    for (i = 0; i < n; i++) {\n+        res[i] = nums[i];\n+    }\n+    return res;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}