{
    "patch": "          if (offsetLocal != offsetAdjusted) {\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal == nextAdjusted) {\n                int diff = offsetAdjusted - offsetLocal;\n                if ((diff > 0 && (instantLocal - nextLocal) >= TimeSpan.fromHours(diff).getMillis()) || \n                    (diff < 0 && (nextLocal - instantAdjusted) >= TimeSpan.fromHours(-diff).getMillis())) {\n                    return offsetLocal;\n                }\n            } else {\n                if (offsetLocal > offsetAdjusted) {\n                  long next = previousTransition(nextLocal);\n                    if (next != nextLocal) {\n                        int offsetBefore = getOffset(next - 1);\n                        int offsetAfter = getOffset(next);\n                        if (offsetAfter > offsetBefore) {\n                            return offsetBefore;\n                        }\n                        if ((offsetLocal - offsetAfter) < 0) {\n                            return offsetLocal;\n                        }\n                        return offsetAfter;\n                    }\n                } else {\n                    if (nextLocal != instantAdjusted && (nextLocal - instantAdjusted) < TimeSpan.fromHours(1).getMillis() + TimeSpan.fromMinutes(1).getMillis()) {\n                        return offsetLocal;\n                    }\n                    long next = nextTransition(nextLocal);\n                    if (next != nextLocal) {\n                        int offsetBefore = getOffset(next - 1);\n                        int offsetAfter = getOffset(next);\n                        if (offsetBefore < offsetAfter) {\n                            if ((offsetAdjusted - offsetBefore) >= 0) {\n                                return offsetBefore;\n                            }\n                            return offsetAdjusted;\n                        }\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..84d8734e 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,44 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+          if (offsetLocal != offsetAdjusted) {\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextLocal == nextAdjusted) {\n+                int diff = offsetAdjusted - offsetLocal;\n+                if ((diff > 0 && (instantLocal - nextLocal) >= TimeSpan.fromHours(diff).getMillis()) || \n+                    (diff < 0 && (nextLocal - instantAdjusted) >= TimeSpan.fromHours(-diff).getMillis())) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                if (offsetLocal > offsetAdjusted) {\n+                  long next = previousTransition(nextLocal);\n+                    if (next != nextLocal) {\n+                        int offsetBefore = getOffset(next - 1);\n+                        int offsetAfter = getOffset(next);\n+                        if (offsetAfter > offsetBefore) {\n+                            return offsetBefore;\n+                        }\n+                        if ((offsetLocal - offsetAfter) < 0) {\n+                            return offsetLocal;\n+                        }\n+                        return offsetAfter;\n+                    }\n+                } else {\n+                    if (nextLocal != instantAdjusted && (nextLocal - instantAdjusted) < TimeSpan.fromHours(1).getMillis() + TimeSpan.fromMinutes(1).getMillis()) {\n+                        return offsetLocal;\n+                    }\n+                    long next = nextTransition(nextLocal);\n+                    if (next != nextLocal) {\n+                        int offsetBefore = getOffset(next - 1);\n+                        int offsetAfter = getOffset(next);\n+                        if (offsetBefore < offsetAfter) {\n+                            if ((offsetAdjusted - offsetBefore) >= 0) {\n+                                return offsetBefore;\n+                            }\n+                            return offsetAdjusted;\n+                        }\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}