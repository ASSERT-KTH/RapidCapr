{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    // check if there was a DST transition\n    if (Math.abs(offsetLocal - offsetAdjusted) == DateTimeConstants.MILLIS_PER_HOUR) {\n        // if so, choose the greater of the two offsets\n        return Math.max(offsetLocal, offsetAdjusted);\n    } else {\n        // otherwise, return the original offset\n        return offsetLocal;\n    }       \n} ",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..233ce212 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    // check if there was a DST transition\n+    if (Math.abs(offsetLocal - offsetAdjusted) == DateTimeConstants.MILLIS_PER_HOUR) {\n+        // if so, choose the greater of the two offsets\n+        return Math.max(offsetLocal, offsetAdjusted);\n+    } else {\n+        // otherwise, return the original offset\n+        return offsetLocal;\n+    }       \n+} \n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}