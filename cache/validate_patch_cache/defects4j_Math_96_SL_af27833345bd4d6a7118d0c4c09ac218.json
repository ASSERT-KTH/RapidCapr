{
    "patch": "ret = other instanceof Complex && Double.compare(this.getReal(), ((Complex)other).getReal()) == 0 && Double.compare(this.getImaginary(), ((Complex)other).getImaginary()) == 0 && this.isNaN() == ((Complex)other).isNaN();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java\nindex 3571567f8..fe946e89c 100644\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n@@ -255,7 +255,7 @@ public class Complex implements Serializable  {\n                 if (rhs.isNaN()) {\n                     ret = this.isNaN();\n                 } else {\n-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); \n+ret = other instanceof Complex && Double.compare(this.getReal(), ((Complex)other).getReal()) == 0 && Double.compare(this.getImaginary(), ((Complex)other).getImaginary()) == 0 && this.isNaN() == ((Complex)other).isNaN();\n                 }\n             } catch (ClassCastException ex) {\n                 // ignore exception",
    "result_reason": "junit.framework.AssertionFailedError: expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>",
    "test_result": "FAIL"
}