{
    "patch": "Name name = functionNode.getFunctionName();\nBoolean isUnnamedFunction = false;\nif (name == null || name.length() == 0) {\n  name = new Name();\n  name.setIdentifier(\"\");\n  isUnnamedFunction = true;\n}\nNode node = newNode(Token.FUNCTION);\nNode newName = transform(name);\nif (isUnnamedFunction) {\n  newName.setLineno(functionNode.getLineno());\n}\nnode.addChildToBack(newName);\nNode lp = newNode(Token.LP);\nlp.setLineno(newName.getLineno());\nint lparenCharno = functionNode.getLp() + functionNode.getAbsolutePosition();\nlp.setCharno(position2charno(lparenCharno));\nfor (AstNode param : functionNode.getParams()) {\n  lp.addChildToBack(transform(param));\n}\nnode.addChildToBack(lp);\nNode bodyNode = transform(functionNode.getBody());\nnode.addChildToBack(bodyNode);\nreturn node;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..d402777d 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,30 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+Boolean isUnnamedFunction = false;\n+if (name == null || name.length() == 0) {\n+  name = new Name();\n+  name.setIdentifier(\"\");\n+  isUnnamedFunction = true;\n+}\n+Node node = newNode(Token.FUNCTION);\n+Node newName = transform(name);\n+if (isUnnamedFunction) {\n+  newName.setLineno(functionNode.getLineno());\n+}\n+node.addChildToBack(newName);\n+Node lp = newNode(Token.LP);\n+lp.setLineno(newName.getLineno());\n+int lparenCharno = functionNode.getLp() + functionNode.getAbsolutePosition();\n+lp.setCharno(position2charno(lparenCharno));\n+for (AstNode param : functionNode.getParams()) {\n+  lp.addChildToBack(transform(param));\n+}\n+node.addChildToBack(lp);\n+Node bodyNode = transform(functionNode.getBody());\n+node.addChildToBack(bodyNode);\n+return node;\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}