{
    "patch": "public String fixCode(String code) {\n    code = code.replace(\"in \", \"in Object \"); // add Object class to 'in' operator\n    String[] lines = code.split(\"\\\\n\");\n    StringBuilder fixedCode = new StringBuilder();\n    for (int i = 0; i < lines.length; i++) {\n        String[] words = lines[i].split(\" \");\n        for (int j = 0; j < words.length; j++) {\n            if (words[j].equals(\"in\")) {\n                if (words[j-1].contains(\"]\")) {\n                    int lastBracketIndex = words[j-1].lastIndexOf(\"]\");\n                    words[j-1] = words[j-1].substring(0, lastBracketIndex) + \" Object\" +\n                            words[j-1].substring(lastBracketIndex);\n                } else {\n                    words[j-1] = words[j-1] + \" Object\"; // add Object class to array type\n                }\n            }\n        }\n        fixedCode.append(String.join(\" \", words)).append(\"\\n\");\n    }\n    return fixedCode.toString().trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..61cbe78a 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,27 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    code = code.replace(\"in \", \"in Object \"); // add Object class to 'in' operator\n+    String[] lines = code.split(\"\\\\n\");\n+    StringBuilder fixedCode = new StringBuilder();\n+    for (int i = 0; i < lines.length; i++) {\n+        String[] words = lines[i].split(\" \");\n+        for (int j = 0; j < words.length; j++) {\n+            if (words[j].equals(\"in\")) {\n+                if (words[j-1].contains(\"]\")) {\n+                    int lastBracketIndex = words[j-1].lastIndexOf(\"]\");\n+                    words[j-1] = words[j-1].substring(0, lastBracketIndex) + \" Object\" +\n+                            words[j-1].substring(lastBracketIndex);\n+                } else {\n+                    words[j-1] = words[j-1] + \" Object\"; // add Object class to array type\n+                }\n+            }\n+        }\n+        fixedCode.append(String.join(\" \", words)).append(\"\\n\");\n+    }\n+    return fixedCode.toString().trim();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}