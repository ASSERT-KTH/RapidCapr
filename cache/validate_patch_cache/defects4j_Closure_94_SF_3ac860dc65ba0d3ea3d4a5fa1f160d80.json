{
    "patch": "  static boolean isValidDefineValue(Node val, Set<String> defines) {\n    switch (val.getType()) {\n      case Token.STRING:\n      case Token.NUMBER:\n      case Token.TRUE:\n      case Token.FALSE:\n        return true;\n\n      // Binary operators are only valid if both children are valid.\n      case Token.BITAND:\n      case Token.BITNOT:\n      case Token.BITOR:\n      case Token.BITXOR:\n\n      // Uniary operators are valid if the child is valid.\n      case Token.NOT:\n      case Token.NEG:\n        return isValidDefineValue(val.getFirstChild(), defines);\n\n      // Names are valid if and only if they are defines themselves.\n      case Token.NAME:\n        return defines.contains(val.getString());\n      case Token.GETPROP:\n        if (val.getLastChild().getType() == Token.STRING) {\n          String namespace = val.getFirstChild().getQualifiedName();\n          if (defines.contains(namespace)) {\n            String name = val.getLastChild().getString();\n            return defines.contains(namespace + \".\" + name);\n          }\n        }\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex a31b17a2..e236337e 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -338,9 +338,14 @@ public final class NodeUtil {\n \n       // Names are valid if and only if they are defines themselves.\n       case Token.NAME:\n+        return defines.contains(val.getString());\n       case Token.GETPROP:\n-        if (val.isQualifiedName()) {\n-          return defines.contains(val.getQualifiedName());\n+        if (val.getLastChild().getType() == Token.STRING) {\n+          String namespace = val.getFirstChild().getQualifiedName();\n+          if (defines.contains(namespace)) {\n+            String name = val.getLastChild().getString();\n+            return defines.contains(namespace + \".\" + name);\n+          }\n         }\n     }\n     return false;",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}