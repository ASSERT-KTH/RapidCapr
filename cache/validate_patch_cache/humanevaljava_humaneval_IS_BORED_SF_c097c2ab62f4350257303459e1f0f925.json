{
    "patch": "public static int is_bored(String S) {\n    int result = 0;\n    boolean prevIsEndOfSentence = true; // initialize to true to account for potential leading \"I\"\n    for (int i = 0; i < S.length(); i++) {\n        if (prevIsEndOfSentence && (S.charAt(i) == 'I' || S.charAt(i) == 'i') && (i + 1 == S.length() || S.charAt(i+1) == ' ' || S.charAt(i+1) == '\\'' || S.charAt(i+1) == '\\\"')) {\n            result++;\n        }\n        prevIsEndOfSentence = (S.charAt(i) == '.' || S.charAt(i) == '?' || S.charAt(i) == '!');\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_BORED.java b/src/main/java/humaneval/buggy/IS_BORED.java\nindex 56b1db3..1bc92a3 100644\n--- a/src/main/java/humaneval/buggy/IS_BORED.java\n+++ b/src/main/java/humaneval/buggy/IS_BORED.java\n@@ -11,13 +11,15 @@ For example:\n 1 */\n \n public class IS_BORED {\n-    public static int is_bored(String S) {\n-        String[] sentences = S.split(\"\\\\.|\\\\?|!\");\n-        int result = 0;\n-        for (String sentence : sentences) {\n-            if (sentence.length() >= 2 && sentence.subSequence(0, 2).equals(\"I \"))\n-                result += 1;\n+public static int is_bored(String S) {\n+    int result = 0;\n+    boolean prevIsEndOfSentence = true; // initialize to true to account for potential leading \"I\"\n+    for (int i = 0; i < S.length(); i++) {\n+        if (prevIsEndOfSentence && (S.charAt(i) == 'I' || S.charAt(i) == 'i') && (i + 1 == S.length() || S.charAt(i+1) == ' ' || S.charAt(i+1) == '\\'' || S.charAt(i+1) == '\\\"')) {\n+            result++;\n         }\n-        return result;\n+        prevIsEndOfSentence = (S.charAt(i) == '.' || S.charAt(i) == '?' || S.charAt(i) == '!');\n     }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_IS_BORED.test_4:39 expected:<1> but was:<2>",
    "test_result": "FAIL"
}