{
    "patch": "    public static HashMap<Character, Integer> histogram(String s) {\n        HashMap<Character, Integer> res = new HashMap<>();\n        if(s.isEmpty()) return res;\n        String[] list_letters = s.split(\" \");\n        int[] count_letter = new int[26];\n        int most_count = -1;\n        for(int i = 0; i < list_letters.length; i++) {\n            char c = list_letters[i].charAt(0);\n            count_letter[c - 'a']++;\n            if(count_letter[c - 'a'] > most_count) {\n                most_count = count_letter[c - 'a'];\n            }\n        }\n        for(int i = 0; i < 26; i++) {\n            if(count_letter[i] == most_count) {\n                res.put((char) ('a' + i), most_count);\n            }\n        }\n        if(most_count == 0) res.clear();\n        return res;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HISTOGRAM.java b/src/main/java/humaneval/buggy/HISTOGRAM.java\nindex 7ebdd21..bc44b2b 100644\n--- a/src/main/java/humaneval/buggy/HISTOGRAM.java\n+++ b/src/main/java/humaneval/buggy/HISTOGRAM.java\n@@ -27,7 +27,27 @@ public class HISTOGRAM {\n         }\n         int most_count = 0;\n         for(int i = 0; i < 26; i++) {\n-            if(count_letter[i] < most_count) {\n+    public static HashMap<Character, Integer> histogram(String s) {\n+        HashMap<Character, Integer> res = new HashMap<>();\n+        if(s.isEmpty()) return res;\n+        String[] list_letters = s.split(\" \");\n+        int[] count_letter = new int[26];\n+        int most_count = -1;\n+        for(int i = 0; i < list_letters.length; i++) {\n+            char c = list_letters[i].charAt(0);\n+            count_letter[c - 'a']++;\n+            if(count_letter[c - 'a'] > most_count) {\n+                most_count = count_letter[c - 'a'];\n+            }\n+        }\n+        for(int i = 0; i < 26; i++) {\n+            if(count_letter[i] == most_count) {\n+                res.put((char) ('a' + i), most_count);\n+            }\n+        }\n+        if(most_count == 0) res.clear();\n+        return res;\n+    }\n                 most_count = count_letter[i];\n                 res.clear();\n                 res.put((char) ('a' + i), most_count);",
    "result_reason": " /tmp/humaneval-HISTOGRAM/src/main/java/humaneval/buggy/HISTOGRAM.java:[30,5] illegal start of expression",
    "test_result": "ERROR"
}