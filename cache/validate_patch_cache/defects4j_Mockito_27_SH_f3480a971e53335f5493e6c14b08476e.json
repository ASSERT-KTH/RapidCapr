{
    "patch": "    public <T> void resetMock(T mock) {\n        MockHandler<T> oldHandler = (MockHandler<T>) Proxy.getInvocationHandler(mock);\n        MockHandler<T> newHandler = new MockHandler<>(oldHandler);\n        newHandler.setStubbingLookupListeners(oldHandler.getStubbingLookupListeners());\n        newHandler.setInvocationListeners(oldHandler.getInvocationListeners());\n        ((MockitoMock) mock).setMockHandler(newHandler);\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..df72dbcd6 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,16 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+    public <T> void resetMock(T mock) {\n+        MockHandler<T> oldHandler = (MockHandler<T>) Proxy.getInvocationHandler(mock);\n+        MockHandler<T> newHandler = new MockHandler<>(oldHandler);\n+        newHandler.setStubbingLookupListeners(oldHandler.getStubbingLookupListeners());\n+        newHandler.setInvocationListeners(oldHandler.getInvocationListeners());\n+        ((MockitoMock) mock).setMockHandler(newHandler);\n+    }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}