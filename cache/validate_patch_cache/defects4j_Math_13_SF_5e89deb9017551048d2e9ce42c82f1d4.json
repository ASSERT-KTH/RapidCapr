{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        final CholeskyDecomposition dec = new CholeskyDecomposition(m);\n        RealMatrix lowTriangular = dec.getL();\n        RealMatrix squareRoot = lowTriangular.scalarMultiply(Math.sqrt(2.0));\n        return squareRoot.multiply(squareRoot.transpose());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..23aad178b 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,9 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        final CholeskyDecomposition dec = new CholeskyDecomposition(m);\n+        RealMatrix lowTriangular = dec.getL();\n+        RealMatrix squareRoot = lowTriangular.scalarMultiply(Math.sqrt(2.0));\n+        return squareRoot.multiply(squareRoot.transpose());\n     }\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}