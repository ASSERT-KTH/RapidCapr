{
    "patch": "Type genericType = typeVariable.getGenericDeclaration();\nif (genericType instanceof ParameterizedType) {\n    ParameterizedType parameterizedType = (ParameterizedType) genericType;\n    Type actualTypeArgument = parameterizedType.getActualTypeArguments()[0];\n    registerTypeVariablesOn(actualTypeArgument);\n} else {\n    registerTypeVariablesOn(typeVariable.getBounds()[0]);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..ac90733dc 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type genericType = typeVariable.getGenericDeclaration();\n+if (genericType instanceof ParameterizedType) {\n+    ParameterizedType parameterizedType = (ParameterizedType) genericType;\n+    Type actualTypeArgument = parameterizedType.getActualTypeArguments()[0];\n+    registerTypeVariablesOn(actualTypeArgument);\n+} else {\n+    registerTypeVariablesOn(typeVariable.getBounds()[0]);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: incompatible types: GenericDeclaration cannot be converted to Type",
    "test_result": "ERROR"
}