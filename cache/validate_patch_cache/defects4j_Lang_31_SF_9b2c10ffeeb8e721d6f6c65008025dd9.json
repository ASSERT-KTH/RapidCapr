{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n        return false;\n    }\n    int len = str.length();\n    int searchLen = searchChars.length;\n    int i = 0;\n    while (i < len) {\n        int codePoint = Character.codePointAt(str, i);\n        if (Character.isSupplementaryCodePoint(codePoint)) {\n            i += 2;\n            continue;\n        }\n        for (int j = 0; j < searchLen; j++) {\n            char searchChar = searchChars[j];\n            if (searchChar == codePoint) {\n                return true;\n            }\n        }\n        i++;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..eb9d2a72 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n+        return false;\n+    }\n+    int len = str.length();\n+    int searchLen = searchChars.length;\n+    int i = 0;\n+    while (i < len) {\n+        int codePoint = Character.codePointAt(str, i);\n+        if (Character.isSupplementaryCodePoint(codePoint)) {\n+            i += 2;\n+            continue;\n+        }\n+        for (int j = 0; j < searchLen; j++) {\n+            char searchChar = searchChars[j];\n+            if (searchChar == codePoint) {\n+                return true;\n+            }\n+        }\n+        i++;\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}