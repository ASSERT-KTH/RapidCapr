{
    "patch": "private String getRemainingJSDocLine() {\n  String result = stream.getRemainingJSDocLine();\n  // Fix Starts\n  if (result.trim().equals(\"\") || result == null) return null;\n  // Fix Ends\n  if (result.charAt(0) == '*') {\n    result = result.substring(1);\n    if (result.length() > 0 && result.charAt(0) == ' ') {\n      result = result.substring(1);\n    }\n  }\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..129c4499 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,19 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+  String result = stream.getRemainingJSDocLine();\n+  // Fix Starts\n+  if (result.trim().equals(\"\") || result == null) return null;\n+  // Fix Ends\n+  if (result.charAt(0) == '*') {\n+    result = result.substring(1);\n+    if (result.length() > 0 && result.charAt(0) == ' ') {\n+      result = result.substring(1);\n+    }\n+  }\n+  return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}