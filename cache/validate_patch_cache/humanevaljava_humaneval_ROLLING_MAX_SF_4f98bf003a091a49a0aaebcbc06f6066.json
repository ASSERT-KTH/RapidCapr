{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<Integer>();\n\n    if (numbers.isEmpty()) {\n        return result;\n    }\n\n    int running_max = Integer.MIN_VALUE;\n\n    for (Integer n : numbers) {\n        running_max = Math.max(running_max, n);\n        result.add(running_max);\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..baa8617 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,20 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<Integer>();\n \n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n-        }\n+    if (numbers.isEmpty()) {\n         return result;\n     }\n+\n+    int running_max = Integer.MIN_VALUE;\n+\n+    for (Integer n : numbers) {\n+        running_max = Math.max(running_max, n);\n+        result.add(running_max);\n+    }\n+\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}