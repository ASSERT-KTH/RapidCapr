{
    "patch": "Node maybeClass = convention.getClassesDefinedByCall(callNode).getClassNode();\nif (maybeClass != null) {\n  String maybeClassName = NodeUtil.getNameDeclaration(maybeClass);\n  if (maybeClassName != null && maybeClassName.contains(\"$\")) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..76a8919f 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,13 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+Node maybeClass = convention.getClassesDefinedByCall(callNode).getClassNode();\n+if (maybeClass != null) {\n+  String maybeClassName = NodeUtil.getNameDeclaration(maybeClass);\n+  if (maybeClassName != null && maybeClassName.contains(\"$\")) {\n+    return false;\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}