{
    "patch": "                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n                // if we have jumped over a transition...\n                if (nextLocal == instantLocal - offsetLocal && nextAdjusted != instantLocal - offsetLocal) {\n                    // set the nextAdjustment to the last transition \n                    // which has the same offset as the initial offsetLocal at instantLocal \n                    long lastLocal = previousTransition(nextLocal);\n                    long lastAdjusted = previousTransition(instantLocal - offsetLocal);\n                    while (lastLocal != nextLocal && lastAdjusted != nextAdjusted) {\n                        nextLocal = lastLocal;\n                        nextAdjusted = lastAdjusted;\n                        lastLocal = previousTransition(nextLocal);\n                        lastAdjusted = previousTransition(instantLocal - offsetLocal);\n                    }\n                }\n ",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..9810ac3d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,21 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+                // if we have jumped over a transition...\n+                if (nextLocal == instantLocal - offsetLocal && nextAdjusted != instantLocal - offsetLocal) {\n+                    // set the nextAdjustment to the last transition \n+                    // which has the same offset as the initial offsetLocal at instantLocal \n+                    long lastLocal = previousTransition(nextLocal);\n+                    long lastAdjusted = previousTransition(instantLocal - offsetLocal);\n+                    while (lastLocal != nextLocal && lastAdjusted != nextAdjusted) {\n+                        nextLocal = lastLocal;\n+                        nextAdjusted = lastAdjusted;\n+                        lastLocal = previousTransition(nextLocal);\n+                        lastAdjusted = previousTransition(instantLocal - offsetLocal);\n+                    }\n+                }\n+ \n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}