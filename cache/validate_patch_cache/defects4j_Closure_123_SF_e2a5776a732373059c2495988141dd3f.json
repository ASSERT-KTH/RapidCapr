{
    "patch": "public static String fixBug(String input) {\n   String[] lines = input.split(\"\\n\");\n   for (int i = 0; i < lines.length; i++) {\n      String line = lines[i];\n      if (line.contains(\"for\")) {\n         String[] parts = line.split(\" \");\n         for (int j = 0; j < parts.length; j++) {\n            if (parts[j].equals(\"in\")) {\n               String varName = parts[j-1];\n               String collection = parts[j+1];\n               String newLine = \"for (\" + varName + \" : \" + collection + \") {\";\n               lines[i] = newLine;\n               break;\n            }\n         }\n      }\n   }\n   return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..5c5765bf 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,25 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixBug(String input) {\n+   String[] lines = input.split(\"\\n\");\n+   for (int i = 0; i < lines.length; i++) {\n+      String line = lines[i];\n+      if (line.contains(\"for\")) {\n+         String[] parts = line.split(\" \");\n+         for (int j = 0; j < parts.length; j++) {\n+            if (parts[j].equals(\"in\")) {\n+               String varName = parts[j-1];\n+               String collection = parts[j+1];\n+               String newLine = \"for (\" + varName + \" : \" + collection + \") {\";\n+               lines[i] = newLine;\n+               break;\n+            }\n+         }\n+      }\n+   }\n+   return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}