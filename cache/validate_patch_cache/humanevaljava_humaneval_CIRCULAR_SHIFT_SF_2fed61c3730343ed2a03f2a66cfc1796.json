{
    "patch": "public static String circular_shift(int x, int shift) {\n    String s = x + \"\";\n    String result;\n\n    if (shift > s.length()) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = s.length() - 1; i >= 0; i--) {\n            sb.append(s.charAt(i));\n        }\n        result = sb.toString();\n    } else {\n        String firstPart = s.substring(0, s.length() - shift);\n        String secondPart = s.substring(s.length() - shift);\n        result = secondPart + firstPart;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\nindex 9131a1c..980882a 100644\n--- a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n@@ -9,16 +9,21 @@ If shift > number of digits, return digits reversed.\n \"12\" */\n \n public class CIRCULAR_SHIFT {\n-    public static String circular_shift(int x, int shift) {\n-        String s = x + \"\";\n+public static String circular_shift(int x, int shift) {\n+    String s = x + \"\";\n+    String result;\n \n-        if (shift > s.length()) {\n-            StringBuilder sb = new StringBuilder();\n-            for (int i = s.length() - 1; i >= 0; i -= 1)\n-                sb.append(s.charAt(i));\n-            return sb.toString();\n-        } else {\n-            return s.substring(s.length() - shift + 1) + s.substring(0, s.length() - shift - 1);\n+    if (shift > s.length()) {\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = s.length() - 1; i >= 0; i--) {\n+            sb.append(s.charAt(i));\n         }\n+        result = sb.toString();\n+    } else {\n+        String firstPart = s.substring(0, s.length() - shift);\n+        String secondPart = s.substring(s.length() - shift);\n+        result = secondPart + firstPart;\n     }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}