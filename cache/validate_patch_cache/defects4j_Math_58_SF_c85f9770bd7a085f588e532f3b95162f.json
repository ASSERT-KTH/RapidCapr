{
    "patch": "    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        final double[] lowerBound = { 0.0, guess[1] * 0.5, 0 };\n        final double[][] bounds = { lowerBound, null, null };\n        final LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();\n        final LeastSquaresProblem problem = new LeastSquaresBuilder()\n                .maxEvaluations(Integer.MAX_VALUE)\n                .maxIterations(Integer.MAX_VALUE)\n                .start(guess)\n                .target(getObservations())\n                .weight(new DiagonalMatrix(getWeights()))\n                .model(new Gaussian.Parametric())\n                .constraint(0, Relationship.GEQ, 0.0)\n                .constraint(1, Relationship.GEQ, 0.0)\n                .constraint(2, Relationship.GEQ, 0.0)\n                .lazy(true)\n                .build();\n        final LeastSquaresOptimizer.Optimum optimum = optimizer.optimize(problem);\n        return optimum.getPoint().toArray();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..27add42d7 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,23 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final double[] lowerBound = { 0.0, guess[1] * 0.5, 0 };\n+        final double[][] bounds = { lowerBound, null, null };\n+        final LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();\n+        final LeastSquaresProblem problem = new LeastSquaresBuilder()\n+                .maxEvaluations(Integer.MAX_VALUE)\n+                .maxIterations(Integer.MAX_VALUE)\n+                .start(guess)\n+                .target(getObservations())\n+                .weight(new DiagonalMatrix(getWeights()))\n+                .model(new Gaussian.Parametric())\n+                .constraint(0, Relationship.GEQ, 0.0)\n+                .constraint(1, Relationship.GEQ, 0.0)\n+                .constraint(2, Relationship.GEQ, 0.0)\n+                .lazy(true)\n+                .build();\n+        final LeastSquaresOptimizer.Optimum optimum = optimizer.optimize(problem);\n+        return optimum.getPoint().toArray();\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}