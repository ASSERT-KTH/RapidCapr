{
    "patch": "public static String escape(String str) throws UnsupportedEncodingException {\n    ByteArrayOutputStream buf = new ByteArrayOutputStream();\n    OutputStreamWriter writer = new OutputStreamWriter(buf, \"ISO-8859-1\");\n    for (int i = 0; i < str.length(); i++) {\n        char ch = str.charAt(i);\n        if (ch <= 127) {\n            writer.write(ch);\n        } else {\n            writer.write(\"=\");// Replaced + with =\n            writer.write(Integer.toHexString((int) ch).toUpperCase());\n        }\n    }\n    writer.flush();\n    return buf.toString(\"ISO-8859-1\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..a88b5a70 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,21 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String str) throws UnsupportedEncodingException {\n+    ByteArrayOutputStream buf = new ByteArrayOutputStream();\n+    OutputStreamWriter writer = new OutputStreamWriter(buf, \"ISO-8859-1\");\n+    for (int i = 0; i < str.length(); i++) {\n+        char ch = str.charAt(i);\n+        if (ch <= 127) {\n+            writer.write(ch);\n+        } else {\n+            writer.write(\"=\");// Replaced + with =\n+            writer.write(Integer.toHexString((int) ch).toUpperCase());\n+        }\n+    }\n+    writer.flush();\n+    return buf.toString(\"ISO-8859-1\");\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}