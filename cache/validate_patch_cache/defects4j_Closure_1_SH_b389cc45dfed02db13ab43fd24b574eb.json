{
    "patch": "/**\n * Gets the last argument node in the given argument list.\n */\nprivate static Node getLastArg(Node argList) {\n    if (argList.hasChildren()) {\n        return argList.getLastChild();\n    }\n    return null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..38e765f6 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,15 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+/**\n+ * Gets the last argument node in the given argument list.\n+ */\n+private static Node getLastArg(Node argList) {\n+    if (argList.hasChildren()) {\n+        return argList.getLastChild();\n+    }\n+    return null;\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}