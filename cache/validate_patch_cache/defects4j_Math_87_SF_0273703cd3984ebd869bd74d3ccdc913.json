{
    "patch": "private Integer getBasicRow(final int col) {\n    Integer basicRow = null;\n    boolean hasOne = false;\n    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n        double entry = getEntry(i, col);\n        if (Math.abs(entry - 1.0) <= epsilon) {\n            if (hasOne) {\n                return null;\n            }\n            basicRow = i;\n            hasOne = true;\n        } else if (Math.abs(entry) > epsilon) {\n            return null;\n        }\n    }\n    if (!hasOne) {\n        return null;\n    }\n    return basicRow;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex 0ab790cd6..841955e53 100644\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -269,19 +269,26 @@ class SimplexTableau implements Serializable {\n      * @param col index of the column to check\n      * @return the row that the variable is basic in.  null if the column is not basic\n      */\n-    private Integer getBasicRow(final int col) {\n-        Integer row = null;\n-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-                if (row == null) {\n-                row = i;\n-                } else {\n+private Integer getBasicRow(final int col) {\n+    Integer basicRow = null;\n+    boolean hasOne = false;\n+    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n+        double entry = getEntry(i, col);\n+        if (Math.abs(entry - 1.0) <= epsilon) {\n+            if (hasOne) {\n                 return null;\n-                }\n             }\n+            basicRow = i;\n+            hasOne = true;\n+        } else if (Math.abs(entry) > epsilon) {\n+            return null;\n         }\n-        return row;\n     }\n+    if (!hasOne) {\n+        return null;\n+    }\n+    return basicRow;\n+}\n \n     /**\n      * Removes the phase 1 objective function and artificial variables from this tableau.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}