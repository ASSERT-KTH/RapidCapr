{
    "patch": "        if (!ref.isSimpleAssignmentToName() || !ref.isDeclaration()) {\n          return false;\n        }\n\n        BasicBlock block = ref.getBasicBlock();\n        while (block != null) {\n          if (block.isFunction) {\n            // Only allow one assignment to a variable in a function.\n            return true;\n          } else if (block.isLoop) {\n            return false;\n          } else if (!block.equals(ref.getBasicBlock())) {\n            // Only a block point can own an assignment statement.\n            return false;\n          }\n          block = block.getParent();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..23297380 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,22 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        if (!ref.isSimpleAssignmentToName() || !ref.isDeclaration()) {\n+          return false;\n+        }\n+\n+        BasicBlock block = ref.getBasicBlock();\n+        while (block != null) {\n+          if (block.isFunction) {\n+            // Only allow one assignment to a variable in a function.\n+            return true;\n+          } else if (block.isLoop) {\n+            return false;\n+          } else if (!block.equals(ref.getBasicBlock())) {\n+            // Only a block point can own an assignment statement.\n+            return false;\n+          }\n+          block = block.getParent();\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}