{
    "patch": "boolean noType = isNoType();\nboolean noObjectType = isNoObjectType();\nboolean noResolvedType = isNoResolvedType();\n\nif (noType || noObjectType || noResolvedType) {\n    return true;\n} else if (isNullType() && !isFunctionType()) {\n    return true;\n} else if (isVoidType()) {\n    return true;\n} else if (isBooleanType()) {\n    return true;\n} else {\n    return isTupleType() && !isFunctionType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..78dbb272 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,21 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+boolean noType = isNoType();\n+boolean noObjectType = isNoObjectType();\n+boolean noResolvedType = isNoResolvedType();\n+\n+if (noType || noObjectType || noResolvedType) {\n+    return true;\n+} else if (isNullType() && !isFunctionType()) {\n+    return true;\n+} else if (isVoidType()) {\n+    return true;\n+} else if (isBooleanType()) {\n+    return true;\n+} else {\n+    return isTupleType() && !isFunctionType();\n+}\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}