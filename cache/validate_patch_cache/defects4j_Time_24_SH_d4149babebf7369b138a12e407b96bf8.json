{
    "patch": "                try {\n                    millis = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    if (savedFields[i].iField.getType() == DateTimeFieldType.year() &&\n                        (i + 1) < count && savedFields[i + 1].iField.getType() == DateTimeFieldType.weekyear()) {\n                        // backup to the year before the weekyear ...\n                        int year = savedFields[i + 1].getDifference();\n                        year = year > 0 ? year - 1 : year + 1;\n                        // ... and restart parsing\n                        SavedField newSavedField = new SavedField(DateTimeFieldType.year(), year, iChrono);\n                        newSavedField = newSavedField.updateDurationField(savedFields[i]);\n                        savedFields[i] = newSavedField;\n                        for (int j = i + 1; j < count; j++) {\n                            if (savedFields[j] == savedFields[i + 1]) {\n                                savedFields[j] = newSavedField;\n                            }\n                        }\n                        i--;\n                    } else {\n                        throw e;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f183d12f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,30 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                try {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    if (savedFields[i].iField.getType() == DateTimeFieldType.year() &&\n+                        (i + 1) < count && savedFields[i + 1].iField.getType() == DateTimeFieldType.weekyear()) {\n+                        // backup to the year before the weekyear ...\n+                        int year = savedFields[i + 1].getDifference();\n+                        year = year > 0 ? year - 1 : year + 1;\n+                        // ... and restart parsing\n+                        SavedField newSavedField = new SavedField(DateTimeFieldType.year(), year, iChrono);\n+                        newSavedField = newSavedField.updateDurationField(savedFields[i]);\n+                        savedFields[i] = newSavedField;\n+                        for (int j = i + 1; j < count; j++) {\n+                            if (savedFields[j] == savedFields[i + 1]) {\n+                                savedFields[j] = newSavedField;\n+                            }\n+                        }\n+                        i--;\n+                    } else {\n+                        throw e;\n+                    }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'try' without 'catch' or 'finally'",
    "test_result": "ERROR"
}