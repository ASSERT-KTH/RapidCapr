{
    "patch": "public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations){\n    if(x < 0 || a <= 0) {\n        throw new IllegalArgumentException(\"Invalid argument for Gamma function\");\n    }\n    \n    if(x == 0){\n        return 0.0;\n    }\n    \n    double gammaValue = Gamma.gamma(a);\n    \n    double incompleteGamma = incompleteGammaSeries(a, x, epsilon, maxIterations);\n        \n    return incompleteGamma / gammaValue;\n}\n\nprivate static double incompleteGammaSeries(double a, double x, double epsilon, int maxIterations){\n    double incompleteGammaSeriesSum = 0.0;\n    \n    double termValue = 1.0 / a;\n    double sumValue = termValue;\n    for(int n = 1; Math.abs(termValue / sumValue) > epsilon && n < maxIterations; n++){\n        termValue *= x / (a + n);\n        sumValue += termValue;\n    }\n    \n    return Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * sumValue;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..90745a52b 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,34 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations){\n+    if(x < 0 || a <= 0) {\n+        throw new IllegalArgumentException(\"Invalid argument for Gamma function\");\n+    }\n+    \n+    if(x == 0){\n+        return 0.0;\n+    }\n+    \n+    double gammaValue = Gamma.gamma(a);\n+    \n+    double incompleteGamma = incompleteGammaSeries(a, x, epsilon, maxIterations);\n+        \n+    return incompleteGamma / gammaValue;\n+}\n+\n+private static double incompleteGammaSeries(double a, double x, double epsilon, int maxIterations){\n+    double incompleteGammaSeriesSum = 0.0;\n+    \n+    double termValue = 1.0 / a;\n+    double sumValue = termValue;\n+    for(int n = 1; Math.abs(termValue / sumValue) > epsilon && n < maxIterations; n++){\n+        termValue *= x / (a + n);\n+        sumValue += termValue;\n+    }\n+    \n+    return Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * sumValue;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}