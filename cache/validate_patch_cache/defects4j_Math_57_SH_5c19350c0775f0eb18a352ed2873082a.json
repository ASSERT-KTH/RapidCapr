{
    "patch": "double sum = 0.0;\n// Compute the sum of squared distances\nfor (int i = 0; i < pointSet.size(); i++) {\n    final T p = pointSet.get(i);\n    final Cluster<T> nearest = getNearestCluster(resultSet, p);\n    final double d = p.distanceFrom(nearest.getCenter());\n    sum += d * d;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java b/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java\nindex b73ac9d3e..1b3d57ecc 100644\n--- a/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java\n+++ b/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java\n@@ -172,7 +172,14 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {\n         while (resultSet.size() < k) {\n             // For each data point x, compute D(x), the distance between x and\n             // the nearest center that has already been chosen.\n-            int sum = 0;\n+double sum = 0.0;\n+// Compute the sum of squared distances\n+for (int i = 0; i < pointSet.size(); i++) {\n+    final T p = pointSet.get(i);\n+    final Cluster<T> nearest = getNearestCluster(resultSet, p);\n+    final double d = p.distanceFrom(nearest.getCenter());\n+    sum += d * d;\n+}\n             for (int i = 0; i < pointSet.size(); i++) {\n                 final T p = pointSet.get(i);\n                 final Cluster<T> nearest = getNearestCluster(resultSet, p);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}