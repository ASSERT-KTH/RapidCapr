{
    "patch": "public String fixCode(String code) {\n    return code.replace(\"(o==0)\", \"(!o)\")\n               .replace(\"(c?0:[o])\", \"(c?0:(o))\")\n               .replace(\"(0==o)\", \"(!o)\")\n               .replace(\"(o[0])\", \"(o)\")\n               .replace(\"(0-in o)\", \"(!(0 in o))\");\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..a4d4d482 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,13 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    return code.replace(\"(o==0)\", \"(!o)\")\n+               .replace(\"(c?0:[o])\", \"(c?0:(o))\")\n+               .replace(\"(0==o)\", \"(!o)\")\n+               .replace(\"(o[0])\", \"(o)\")\n+               .replace(\"(0-in o)\", \"(!(0 in o))\");\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}