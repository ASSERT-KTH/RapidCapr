{
    "patch": "public String fixCode(String code) {\n    code = code.replace(\"in \", \"in Object \"); // add Object class to 'in' operator\n    String[] lines = code.split(\"\\\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        String[] words = lines[i].split(\" \");\n        for (int j = 0; j < words.length; j++) {\n            if (words[j].equals(\"in\")) {\n                String arrayType = words[j-1]; // get the array type\n                // make sure it doesn't already contain \"Object\" keyword\n                if (!arrayType.contains(\"Object\")) {\n                    // add it before the array type\n                    lines[i] = lines[i].replace(arrayType + \" in\", \"Object \" + arrayType + \" in\");\n                }               \n            }\n        }\n    }\n    code = String.join(\"\\n\", lines);\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..4e06bc42 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,25 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    code = code.replace(\"in \", \"in Object \"); // add Object class to 'in' operator\n+    String[] lines = code.split(\"\\\\n\");\n+    for (int i = 0; i < lines.length; i++) {\n+        String[] words = lines[i].split(\" \");\n+        for (int j = 0; j < words.length; j++) {\n+            if (words[j].equals(\"in\")) {\n+                String arrayType = words[j-1]; // get the array type\n+                // make sure it doesn't already contain \"Object\" keyword\n+                if (!arrayType.contains(\"Object\")) {\n+                    // add it before the array type\n+                    lines[i] = lines[i].replace(arrayType + \" in\", \"Object \" + arrayType + \" in\");\n+                }               \n+            }\n+        }\n+    }\n+    code = String.join(\"\\n\", lines);\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}