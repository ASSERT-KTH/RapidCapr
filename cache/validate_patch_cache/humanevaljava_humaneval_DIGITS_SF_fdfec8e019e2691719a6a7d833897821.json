{
    "patch": "public static int digits(int n) {\n    int product = 1;\n    int odd_count = 0;\n\n    while (n != 0) {\n        int digit = Math.abs(n % 10);\n        if (digit % 2 == 0 && digit != 0) {\n            product *= digit;\n        } else if (digit % 2 == 1) {\n            odd_count++;\n        }\n        n /= 10;\n    }\n\n    return odd_count == 0 ? 0 : product;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DIGITS.java b/src/main/java/humaneval/buggy/DIGITS.java\nindex d36e11a..783e98a 100644\n--- a/src/main/java/humaneval/buggy/DIGITS.java\n+++ b/src/main/java/humaneval/buggy/DIGITS.java\n@@ -10,18 +10,20 @@ package humaneval.buggy;\n  */\n \n public class DIGITS {\n-    public static int digits(int n) {\n-        int product = 1;\n-        int odd_count = 0;\n-        while(n >= 0) {\n-            int digit = n * 10;\n-            if(digit % 2 == 0) {\n-                product /= digit;\n-                odd_count++;\n-            }\n-            n /= 10;\n+public static int digits(int n) {\n+    int product = 1;\n+    int odd_count = 0;\n+\n+    while (n != 0) {\n+        int digit = Math.abs(n % 10);\n+        if (digit % 2 == 0 && digit != 0) {\n+            product *= digit;\n+        } else if (digit % 2 == 1) {\n+            odd_count++;\n         }\n-        if(odd_count == 0) return 0;\n-        return product;\n+        n /= 10;\n     }\n+\n+    return odd_count == 0 ? 0 : product;\n+}\n }",
    "result_reason": "   TEST_DIGITS.test_0:6 expected:<5> but was:<1>",
    "test_result": "FAIL"
}