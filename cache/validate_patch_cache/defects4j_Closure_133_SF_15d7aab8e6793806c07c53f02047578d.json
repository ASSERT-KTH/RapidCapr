{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    while (result != null && result.endsWith(\"\\\\\")) {\n        String nextLine = stream.getNextJSDocLine();\n        if (nextLine == null) {\n            return result;\n        }\n        result = result.substring(0, result.length() - 1) + nextLine;\n    }\n    return (result == null) ? null : result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..ea69bd64 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,17 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+    while (result != null && result.endsWith(\"\\\\\")) {\n+        String nextLine = stream.getNextJSDocLine();\n+        if (nextLine == null) {\n+            return result;\n+        }\n+        result = result.substring(0, result.length() - 1) + nextLine;\n+    }\n+    return (result == null) ? null : result.trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}