{
    "patch": "if (typeVariable.getGenericDeclaration() instanceof ParameterizedType) {\n    Type[] actualTypeArguments = ((ParameterizedType) typeVariable.getGenericDeclaration()).getActualTypeArguments();\n    for (Type actualTypeArgument : actualTypeArguments) {\n        if (actualTypeArgument instanceof TypeVariable) {\n            registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable) actualTypeArgument));\n        } else {\n            registerTypeVariablesOn(actualTypeArgument);\n        }\n    }\n} else {\n    registerTypeVariablesOn(Object.class);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..5e30251ec 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,23 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if (typeVariable.getGenericDeclaration() instanceof ParameterizedType) {\n+    Type[] actualTypeArguments = ((ParameterizedType) typeVariable.getGenericDeclaration()).getActualTypeArguments();\n+    for (Type actualTypeArgument : actualTypeArguments) {\n+        if (actualTypeArgument instanceof TypeVariable) {\n+            registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable) actualTypeArgument));\n+        } else {\n+            registerTypeVariablesOn(actualTypeArgument);\n+        }\n+    }\n+} else {\n+    registerTypeVariablesOn(Object.class);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}