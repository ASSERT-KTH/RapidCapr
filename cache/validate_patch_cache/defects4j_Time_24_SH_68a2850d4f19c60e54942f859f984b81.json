{
    "patch": "            if (!resetFields) {\n                throw e;\n            } else {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                DateTimeField brokenField = e.getDateTimeField();\n                int index = savedFields.length;\n                while (--index >= 0) {\n                    if (savedFields[index].iField == brokenField) {\n                        System.arraycopy(savedFields, index + 1, savedFields, index, count - index - 1);\n                        savedFields[--count] = null;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..143e32df 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,20 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (!resetFields) {\n+                throw e;\n+            } else {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                DateTimeField brokenField = e.getDateTimeField();\n+                int index = savedFields.length;\n+                while (--index >= 0) {\n+                    if (savedFields[index].iField == brokenField) {\n+                        System.arraycopy(savedFields, index + 1, savedFields, index, count - index - 1);\n+                        savedFields[--count] = null;\n+                    }\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}