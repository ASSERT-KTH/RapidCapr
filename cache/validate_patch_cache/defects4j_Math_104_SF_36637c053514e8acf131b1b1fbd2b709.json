{
    "patch": "public static double regularizedGamma(double a, double x)\n{\n    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n        return Double.NaN;\n    }\n\n    if (x == 0.0) {\n        return 0.0;\n    }\n\n    double d = 1.0 / (a * Constants.EULER);\n    double c = d / x;\n    double sum = c;\n    double del = c;\n\n    int i = 1;\n    while (i < 1000 && Math.abs(del) > Math.abs(sum) * 10e-15) {\n        ++i;\n        d *= (a + i - 1) / i;\n        c *= x / (a + i - 1);\n        del = c * d;\n        sum += del;\n    }\n\n    if (i == 1000 && Math.abs(del) > Math.abs(sum) * 10e-15) {\n        throw new RuntimeException(\"maximum iterations exceeded\");\n    }\n\n    return Math.exp(-x + a * Math.log(x) - Math.log(a) - Gamma.logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..330f91fd4 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,36 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x)\n+{\n+    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n+        return Double.NaN;\n+    }\n+\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+\n+    double d = 1.0 / (a * Constants.EULER);\n+    double c = d / x;\n+    double sum = c;\n+    double del = c;\n+\n+    int i = 1;\n+    while (i < 1000 && Math.abs(del) > Math.abs(sum) * 10e-15) {\n+        ++i;\n+        d *= (a + i - 1) / i;\n+        c *= x / (a + i - 1);\n+        del = c * d;\n+        sum += del;\n+    }\n+\n+    if (i == 1000 && Math.abs(del) > Math.abs(sum) * 10e-15) {\n+        throw new RuntimeException(\"maximum iterations exceeded\");\n+    }\n+\n+    return Math.exp(-x + a * Math.log(x) - Math.log(a) - Gamma.logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}