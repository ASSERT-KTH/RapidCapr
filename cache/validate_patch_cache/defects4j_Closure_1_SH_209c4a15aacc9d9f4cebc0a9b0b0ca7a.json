{
    "patch": "      for (Node curr = argList.getFirstChild(); curr != null; curr = curr.getNext()) {\n        if (curr.isName()) {\n          Var var = fnScope.getVar(curr.getString());\n          if (!referenced.contains(var)) {\n            NodeUtil.removeChild(argList, curr);\n            compiler.reportCodeChange();\n          }\n        }\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..4f473967 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,17 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      for (Node curr = argList.getFirstChild(); curr != null; curr = curr.getNext()) {\n+        if (curr.isName()) {\n+          Var var = fnScope.getVar(curr.getString());\n+          if (!referenced.contains(var)) {\n+            NodeUtil.removeChild(argList, curr);\n+            compiler.reportCodeChange();\n+          }\n+        }\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}