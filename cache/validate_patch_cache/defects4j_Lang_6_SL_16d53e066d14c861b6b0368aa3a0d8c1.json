{
    "patch": "if (consumed == 1) {\n    pos += Character.charCount(Character.codePointAt(input, pos));\n} else if (consumed == 2) {\n    if (pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {\n        pos += 2;\n    } else {\n        pos++; // unpaired high surrogate\n    }\n} else {\n    pos++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..0cfdec98 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,17 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+if (consumed == 1) {\n+    pos += Character.charCount(Character.codePointAt(input, pos));\n+} else if (consumed == 2) {\n+    if (pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {\n+        pos += 2;\n+    } else {\n+        pos++; // unpaired high surrogate\n+    }\n+} else {\n+    pos++;\n+}\n             }\n         }\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}