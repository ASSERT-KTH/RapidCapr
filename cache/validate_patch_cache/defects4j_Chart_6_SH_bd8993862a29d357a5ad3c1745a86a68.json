{
    "patch": "if (obj == null || !(obj instanceof ShapeList)) {\n    return false;\n}\nShapeList other = (ShapeList) obj;\nif (this.size() != other.size()) {\n    return false;\n}\nIterator<Shape> it1 = iterator();\nIterator<Shape> it2 = other.iterator();\nwhile (it1.hasNext() && it2.hasNext()) {\n    Shape shape1 = it1.next();\n    Shape shape2 = it2.next();\n    if (!ShapeUtilities.equal(shape1, shape2)) {\n        return false;\n    }\n}\nreturn !(it1.hasNext() || it2.hasNext());",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..73b1693 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,23 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+if (obj == null || !(obj instanceof ShapeList)) {\n+    return false;\n+}\n+ShapeList other = (ShapeList) obj;\n+if (this.size() != other.size()) {\n+    return false;\n+}\n+Iterator<Shape> it1 = iterator();\n+Iterator<Shape> it2 = other.iterator();\n+while (it1.hasNext() && it2.hasNext()) {\n+    Shape shape1 = it1.next();\n+    Shape shape2 = it2.next();\n+    if (!ShapeUtilities.equal(shape1, shape2)) {\n+        return false;\n+    }\n+}\n+return !(it1.hasNext() || it2.hasNext());\n \n     }\n \n@@ -169,4 +185,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}