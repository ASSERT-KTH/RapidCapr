{
    "patch": "if(!patternMatcher.lookingAt()) {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}\ncurrentFormatField= patternMatcher.group();\nStrategy currentStrategy= getStrategy(currentFormatField);\nfor(;;) {\n    patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n    if(!patternMatcher.lookingAt()) {\n        if (currentStrategy != null) {\n            collector.add(currentStrategy);\n        }\n        break;\n    }\n    String nextFormatField= patternMatcher.group();\n    nextStrategy = getStrategy(nextFormatField);\n    if (currentStrategy != null) {\n        if (currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n    }\n    currentFormatField= nextFormatField;\n    currentStrategy= nextStrategy;\n}\ncurrentFormatField = null;\nif (collector.isEmpty()) {\n    strategies = new Strategy[0];\n    parsePattern = null;\n} else {\n    strategies = collector.toArray(new Strategy[collector.size()]);\n    parsePattern = Pattern.compile(regex.toString());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..0800fe94 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,37 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(!patternMatcher.lookingAt()) {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n+currentFormatField= patternMatcher.group();\n+Strategy currentStrategy= getStrategy(currentFormatField);\n+for(;;) {\n+    patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n+    if(!patternMatcher.lookingAt()) {\n+        if (currentStrategy != null) {\n+            collector.add(currentStrategy);\n+        }\n+        break;\n+    }\n+    String nextFormatField= patternMatcher.group();\n+    nextStrategy = getStrategy(nextFormatField);\n+    if (currentStrategy != null) {\n+        if (currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        }\n+    }\n+    currentFormatField= nextFormatField;\n+    currentStrategy= nextStrategy;\n+}\n+currentFormatField = null;\n+if (collector.isEmpty()) {\n+    strategies = new Strategy[0];\n+    parsePattern = null;\n+} else {\n+    strategies = collector.toArray(new Strategy[collector.size()]);\n+    parsePattern = Pattern.compile(regex.toString());\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: variable currentStrategy is already defined in method init()",
    "test_result": "ERROR"
}