{
    "patch": "for(int i = 0; i < grid.length; i++) {\n    int row_capacity = Integer.MAX_VALUE; // fixed line\n    for(int j = 0; j < grid[i].length; j++) { // fixed line\n        row_capacity = Math.min(row_capacity, grid[i][j]); // fixed line\n    } // fixed line\n    result += (row_capacity + bucket_capacity - 1) / bucket_capacity;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAX_FILL.java b/src/main/java/humaneval/buggy/MAX_FILL.java\nindex c55aed5..95c0ba7 100644\n--- a/src/main/java/humaneval/buggy/MAX_FILL.java\n+++ b/src/main/java/humaneval/buggy/MAX_FILL.java\n@@ -39,8 +39,13 @@ public class MAX_FILL {\n         int result = 0;\n         for(int i = 0; i < grid.length; i++) {\n             int row_capacity = 0;\n-            for(int j = 0; j < grid[j].length; j++) {\n-                row_capacity += grid[j][i];\n+for(int i = 0; i < grid.length; i++) {\n+    int row_capacity = Integer.MAX_VALUE; // fixed line\n+    for(int j = 0; j < grid[i].length; j++) { // fixed line\n+        row_capacity = Math.min(row_capacity, grid[i][j]); // fixed line\n+    } // fixed line\n+    result += (row_capacity + bucket_capacity - 1) / bucket_capacity;\n+}\n             }\n             result += (row_capacity + bucket_capacity - 1) / bucket_capacity;\n         }",
    "result_reason": " /tmp/humaneval-MAX_FILL/src/main/java/humaneval/buggy/MAX_FILL.java:[52,9] illegal start of type",
    "test_result": "ERROR"
}