{
    "patch": "public final boolean isEmptyType() {\n    /*\n     * A Java type represents a value domain, followed here:\n     * https://docs.oracle.com/en/java/javase/13/docs/specs/jls/se13/html/jls-4.html\n     * A type is considered empty (does not provide any useful information) if it is a\n     * no-type, void-type, top-type, null-type, or a type variable with no declared bounds.\n     */\n    return isNoType() || isVoidType() || isNullType() || isTypeVariable() && ((ITypeBinding) getErasure()).getTypeBounds().length == 0 || isWildcardType() && getWildcard() == Wildcard.SUPER_TYPE && !getBound().isTypeCompatible(getTypeBound());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..a1ef4200 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,15 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    /*\n+     * A Java type represents a value domain, followed here:\n+     * https://docs.oracle.com/en/java/javase/13/docs/specs/jls/se13/html/jls-4.html\n+     * A type is considered empty (does not provide any useful information) if it is a\n+     * no-type, void-type, top-type, null-type, or a type variable with no declared bounds.\n+     */\n+    return isNoType() || isVoidType() || isNullType() || isTypeVariable() && ((ITypeBinding) getErasure()).getTypeBounds().length == 0 || isWildcardType() && getWildcard() == Wildcard.SUPER_TYPE && !getBound().isTypeCompatible(getTypeBound());\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}