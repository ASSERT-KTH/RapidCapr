{
    "patch": "if (mTimeZoneForced) {\n    TimeZone originalTimeZone = calendar.getTimeZone();\n    boolean hasDifferentTimeZone = !mTimeZone.equals(originalTimeZone);\n    if (hasDifferentTimeZone) {\n        calendar = Calendar.getInstance(mTimeZone);\n    }\n    applyRules(calendar, buf);\n    if (hasDifferentTimeZone) {\n        calendar.setTimeZone(originalTimeZone);\n    }\n} else {\n    applyRules(calendar, buf);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..dd2d02d3 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,19 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    TimeZone originalTimeZone = calendar.getTimeZone();\n+    boolean hasDifferentTimeZone = !mTimeZone.equals(originalTimeZone);\n+    if (hasDifferentTimeZone) {\n+        calendar = Calendar.getInstance(mTimeZone);\n+    }\n+    applyRules(calendar, buf);\n+    if (hasDifferentTimeZone) {\n+        calendar.setTimeZone(originalTimeZone);\n+    }\n+} else {\n+    applyRules(calendar, buf);\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<20[09-10-16T16:42:16.000]Z> but was:<20[23-08-02T12:44:16.163Z2023-08-02T12:44:16.163]Z>",
    "test_result": "FAIL"
}