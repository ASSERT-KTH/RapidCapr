{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nNode grandParent = parent.getParent();\nif (grandParent != null) {\n  int grandParentType = grandParent.getType();\n  if (grandParentType == Token.EXPR_RESULT) {\n    Node grandGrandParent = grandParent.getParent();\n    int grandGrandParentType = grandGrandParent.getType();\n    if (grandGrandParentType == Token.ASSIGN ||\n        grandGrandParentType == Token.VAR) {\n      Node lhs = grandGrandParent.getFirstChild();\n      if (lhs.getType() == Token.GETPROP) {\n        if (lhs.getLastChild().getString().equals(\"prototype\")) {\n          Node target = lhs.getFirstChild();\n          if (target.getType() == Token.THIS ||\n              target.getType() == Token.NAME) {\n            if (grandParent.getFirstChild() == parent) {\n              return false;\n            }\n          } else if (target.getType() == Token.GETPROP) {\n            Node grandTarget = target.getFirstChild();\n            if (grandTarget.getType() == Token.THIS ||\n                grandTarget.getType() == Token.NAME) {\n              if (grandParent.getFirstChild() == parent) {\n                return false;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..77d57784 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,38 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+Node grandParent = parent.getParent();\n+if (grandParent != null) {\n+  int grandParentType = grandParent.getType();\n+  if (grandParentType == Token.EXPR_RESULT) {\n+    Node grandGrandParent = grandParent.getParent();\n+    int grandGrandParentType = grandGrandParent.getType();\n+    if (grandGrandParentType == Token.ASSIGN ||\n+        grandGrandParentType == Token.VAR) {\n+      Node lhs = grandGrandParent.getFirstChild();\n+      if (lhs.getType() == Token.GETPROP) {\n+        if (lhs.getLastChild().getString().equals(\"prototype\")) {\n+          Node target = lhs.getFirstChild();\n+          if (target.getType() == Token.THIS ||\n+              target.getType() == Token.NAME) {\n+            if (grandParent.getFirstChild() == parent) {\n+              return false;\n+            }\n+          } else if (target.getType() == Token.GETPROP) {\n+            Node grandTarget = target.getFirstChild();\n+            if (grandTarget.getType() == Token.THIS ||\n+                grandTarget.getType() == Token.NAME) {\n+              if (grandParent.getFirstChild() == parent) {\n+                return false;\n+              }\n+            }\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}