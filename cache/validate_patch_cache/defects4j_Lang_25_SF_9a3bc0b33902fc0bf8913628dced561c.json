{
    "patch": "public static String unescape(String s) {\n    String result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c == '\\\\') {\n            if (i + 1 < s.length()) {\n                char next = s.charAt(i + 1);\n                switch (next) {\n                    case 'n':\n                        result += '\\n';\n                        break;\n                    case 'r':\n                        result += '\\r';\n                        break;\n                    case 't':\n                        result += '\\t';\n                        break;\n                    case '\\\\':\n                        result += '\\\\';\n                        break;\n                    default:\n                        result += '\\\\' + next;\n                        break;\n                }\n                i++;\n            } else {\n                result += c;\n            }\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..27b5497b 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,40 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    String result = \"\";\n+    for (int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        if (c == '\\\\') {\n+            if (i + 1 < s.length()) {\n+                char next = s.charAt(i + 1);\n+                switch (next) {\n+                    case 'n':\n+                        result += '\\n';\n+                        break;\n+                    case 'r':\n+                        result += '\\r';\n+                        break;\n+                    case 't':\n+                        result += '\\t';\n+                        break;\n+                    case '\\\\':\n+                        result += '\\\\';\n+                        break;\n+                    default:\n+                        result += '\\\\' + next;\n+                        break;\n+                }\n+                i++;\n+            } else {\n+                result += c;\n+            }\n+        } else {\n+            result += c;\n+        }\n+    }\n+    return result;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}