{
    "patch": "for (int i = 0; i < count; i++) {\n    try {\n        millis = savedFields[i].set(millis, resetFields);\n        if (i > 0 && savedFields[i-1].iField.getType().equals(DateTimeFieldType.monthOfYear())) {\n            int lastMonth = savedFields[i-1].getValue();\n            if (lastMonth == 12 && savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n                int estimatedYear = savedFields[i].iChronology.weekyear().get(millis);\n                if (estimatedYear + 1 < iDefaultYear) {\n                    millis = savedFields[i].set(millis + WEEK_IN_MILLIS, resetFields);\n                }\n            }\n        }\n    } catch (IllegalFieldValueException ex) {\n        if (text != null) {\n            ex.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n        }\n        throw ex;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..64dc5f95 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    try {\n+        millis = savedFields[i].set(millis, resetFields);\n+        if (i > 0 && savedFields[i-1].iField.getType().equals(DateTimeFieldType.monthOfYear())) {\n+            int lastMonth = savedFields[i-1].getValue();\n+            if (lastMonth == 12 && savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n+                int estimatedYear = savedFields[i].iChronology.weekyear().get(millis);\n+                if (estimatedYear + 1 < iDefaultYear) {\n+                    millis = savedFields[i].set(millis + WEEK_IN_MILLIS, resetFields);\n+                }\n+            }\n+        }\n+    } catch (IllegalFieldValueException ex) {\n+        if (text != null) {\n+            ex.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n+        }\n+        throw ex;\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}