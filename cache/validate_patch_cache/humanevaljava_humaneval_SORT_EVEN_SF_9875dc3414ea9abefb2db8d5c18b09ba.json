{
    "patch": "    public static int[] sort_even(int[] l) {\n        int[] result = new int[l.length];\n\n        int[] evens = new int[1 + (int) (l.length / 2.)];\n        int evenIndex = 0;\n        for (int i = 0; i < l.length; i += 1) {\n            if (l[i] % 2 == 0) {\n                evens[evenIndex] = l[i];\n                evenIndex += 1;\n            }\n            result[i] = l[i];\n        }\n        Arrays.sort(evens);\n        evenIndex = 0;\n        for (int i = 0; i < l.length; i += 1) {\n            if (result[i] % 2 == 0) {\n                result[i] = evens[evenIndex];\n                evenIndex += 1;\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SORT_EVEN.java b/src/main/java/humaneval/buggy/SORT_EVEN.java\nindex cce3d2a..2c1671b 100644\n--- a/src/main/java/humaneval/buggy/SORT_EVEN.java\n+++ b/src/main/java/humaneval/buggy/SORT_EVEN.java\n@@ -7,15 +7,20 @@ public class SORT_EVEN {\n         int[] result = new int[l.length];\n \n         int[] evens = new int[1 + (int) (l.length / 2.)];\n-        for (int i = 0; i < l.length; i += 2) {\n-            evens[(int) i / 2] = l[i];\n+        int evenIndex = 0;\n+        for (int i = 0; i < l.length; i += 1) {\n+            if (l[i] % 2 == 0) {\n+                evens[evenIndex] = l[i];\n+                evenIndex += 1;\n+            }\n+            result[i] = l[i];\n         }\n         Arrays.sort(evens);\n+        evenIndex = 0;\n         for (int i = 0; i < l.length; i += 1) {\n-            if (i % 2 == 0){\n-                result[i] = evens[(int) i / 2];\n-            } else{\n-                result[i] = l[i];\n+            if (result[i] % 2 == 0) {\n+                result[i] = evens[evenIndex];\n+                evenIndex += 1;\n             }\n         }\n         return result;",
    "result_reason": "   TEST_SORT_EVEN.test_0:11",
    "test_result": "FAIL"
}