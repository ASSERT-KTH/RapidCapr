{
    "patch": "if (Double.isNaN(result[resultOffset])) {\n    if (x[xOffset] == 0 && y[yOffset] > 0) {\n        result[resultOffset] = FastMath.PI / 2.0;\n    } else if (x[xOffset] == 0 && y[yOffset] < 0) {\n        result[resultOffset] = -FastMath.PI / 2.0;\n    } else if ((x[xOffset] == Double.POSITIVE_INFINITY && y[yOffset] == Double.POSITIVE_INFINITY) ||\n               (x[xOffset] == Double.POSITIVE_INFINITY && y[yOffset] == Double.NEGATIVE_INFINITY)) {\n        result[resultOffset] = FastMath.PI / 4.0;\n    } else if ((x[xOffset] == Double.NEGATIVE_INFINITY && y[yOffset] == Double.POSITIVE_INFINITY) ||\n               (x[xOffset] == Double.NEGATIVE_INFINITY && y[yOffset] == Double.NEGATIVE_INFINITY)) {\n        result[resultOffset] = -3.0 * FastMath.PI / 4.0;\n    } else {\n        result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\nindex bf6dd65d5..e8bafe6a1 100644\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n@@ -1416,6 +1416,21 @@ public class DSCompiler {\n         }\n \n         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n+if (Double.isNaN(result[resultOffset])) {\n+    if (x[xOffset] == 0 && y[yOffset] > 0) {\n+        result[resultOffset] = FastMath.PI / 2.0;\n+    } else if (x[xOffset] == 0 && y[yOffset] < 0) {\n+        result[resultOffset] = -FastMath.PI / 2.0;\n+    } else if ((x[xOffset] == Double.POSITIVE_INFINITY && y[yOffset] == Double.POSITIVE_INFINITY) ||\n+               (x[xOffset] == Double.POSITIVE_INFINITY && y[yOffset] == Double.NEGATIVE_INFINITY)) {\n+        result[resultOffset] = FastMath.PI / 4.0;\n+    } else if ((x[xOffset] == Double.NEGATIVE_INFINITY && y[yOffset] == Double.POSITIVE_INFINITY) ||\n+               (x[xOffset] == Double.NEGATIVE_INFINITY && y[yOffset] == Double.NEGATIVE_INFINITY)) {\n+        result[resultOffset] = -3.0 * FastMath.PI / 4.0;\n+    } else {\n+        result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);\n+    }\n+}\n \n     }\n ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}