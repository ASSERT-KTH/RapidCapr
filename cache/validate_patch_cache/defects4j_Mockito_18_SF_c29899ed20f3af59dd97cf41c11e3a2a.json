{
    "patch": "public static String reverseString(String str) {\n    if (str == null || str.isEmpty()) {\n        return str;\n    }\n    char[] arr = str.toCharArray();\n    int left = 0;\n    int right = arr.length - 1;\n    while (left < right) {\n        char temp = arr[left];\n        arr[left++] = arr[right];\n        arr[right--] = temp;\n    }\n    return new String(arr);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..605853fb7 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,20 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static String reverseString(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return str;\n+    }\n+    char[] arr = str.toCharArray();\n+    int left = 0;\n+    int right = arr.length - 1;\n+    while (left < right) {\n+        char temp = arr[left];\n+        arr[left++] = arr[right];\n+        arr[right--] = temp;\n+    }\n+    return new String(arr);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}