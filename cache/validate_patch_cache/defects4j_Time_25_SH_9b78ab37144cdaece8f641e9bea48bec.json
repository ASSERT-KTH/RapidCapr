{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n\n                if(nextLocal != instantAdjusted && offsetAdjusted == getOffset(nextLocal)) {\n                    return offsetAdjusted;\n                } else if(nextAdjusted != instantLocal - offsetAdjusted && offsetLocal == getOffset(nextAdjusted)) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..c8cf1902 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+\n+                if(nextLocal != instantAdjusted && offsetAdjusted == getOffset(nextLocal)) {\n+                    return offsetAdjusted;\n+                } else if(nextAdjusted != instantLocal - offsetAdjusted && offsetLocal == getOffset(nextAdjusted)) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}