{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    while (result != null && result.contains(\"@\") && !result.contains(\"@type\")) {\n        String remainingLine = stream.getRemainingJSDocLine();\n        result = remainingLine != null ? result.concat(remainingLine) : result;\n    }\n    return result == null ? \"\" : result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..75819835 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,14 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    while (result != null && result.contains(\"@\") && !result.contains(\"@type\")) {\n+        String remainingLine = stream.getRemainingJSDocLine();\n+        result = remainingLine != null ? result.concat(remainingLine) : result;\n+    }\n+    return result == null ? \"\" : result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}