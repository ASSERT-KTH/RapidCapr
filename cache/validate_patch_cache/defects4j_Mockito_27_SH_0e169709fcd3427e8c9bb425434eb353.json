{
    "patch": "        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n        for(int i = 0; i < oldMockHandler.getInvocationHandlers().length; i++) {\n            if (oldMockHandler.getInvocationHandlers()[i] instanceof MethodInterceptorFilter) {\n                oldMockHandler.removeInterceptor((MethodInterceptorFilter) oldMockHandler.getInvocationHandlers()[i]);\n            }\n        }\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n        newMockHandler.addInterceptor(newFilter);\n        ((Factory) mock).setCallback(0, newFilter);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..89cfcff51 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+        for(int i = 0; i < oldMockHandler.getInvocationHandlers().length; i++) {\n+            if (oldMockHandler.getInvocationHandlers()[i] instanceof MethodInterceptorFilter) {\n+                oldMockHandler.removeInterceptor((MethodInterceptorFilter) oldMockHandler.getInvocationHandlers()[i]);\n+            }\n+        }\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        newMockHandler.addInterceptor(newFilter);\n+        ((Factory) mock).setCallback(0, newFilter);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}