{
    "patch": "// Try to parse the type expression\nNode typeExpression = parseTypeExpression(token);\n\n// If parsing fails, try to parse the type name\nif (typeExpression == null) {\n  typeExpression = parseTypeName(token);\n}\n\n// If neither parsing attempt was successful, return null\nreturn typeExpression;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..3defbd0f 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,16 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+// Try to parse the type expression\n+Node typeExpression = parseTypeExpression(token);\n+\n+// If parsing fails, try to parse the type name\n+if (typeExpression == null) {\n+  typeExpression = parseTypeName(token);\n+}\n+\n+// If neither parsing attempt was successful, return null\n+return typeExpression;\n   }\n \n   /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}