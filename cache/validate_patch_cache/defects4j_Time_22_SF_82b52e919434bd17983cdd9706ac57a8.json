{
    "patch": "    public int getWeeks() {\n        long elapsed = getMillis();\n        int weeks = (int) (elapsed / DateUtils.MILLIS_PER_WEEK);\n        long weekMillis = weeks * DateUtils.MILLIS_PER_WEEK;\n\n        // if duration is negative, we need to round up the weeks and subtract from the total\n        if (elapsed - weekMillis < 0 && elapsed - weekMillis != 0) {\n            weeks -= 1;\n        }\n\n        return weeks;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..2f3bd260 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,9 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+    public int getWeeks() {\n+        long elapsed = getMillis();\n+        int weeks = (int) (elapsed / DateUtils.MILLIS_PER_WEEK);\n+        long weekMillis = weeks * DateUtils.MILLIS_PER_WEEK;\n+\n+        // if duration is negative, we need to round up the weeks and subtract from the total\n+        if (elapsed - weekMillis < 0 && elapsed - weekMillis != 0) {\n+            weeks -= 1;\n+        }\n+\n+        return weeks;\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}