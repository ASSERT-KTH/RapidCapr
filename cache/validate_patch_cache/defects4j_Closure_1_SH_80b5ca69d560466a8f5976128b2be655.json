{
    "patch": "      // Strip unreferenced args at call sites.\n      NodeUtil.visitPreOrder(\n          function.getLastChild(),\n          new AbstractShallowStatementCallback() {\n            @Override\n            public void visit(NodeTraversal t, Node n, Node parent) {\n              if (parent != null\n                  && n.isFunction()\n                  && modifyCallSites\n                  && n.getChildCount() == argList.getChildCount()) {\n                removeUnreferencedArgs(\n                    fnScope, argList, n.getFirstChild(), referenced);\n              }\n            }\n          });",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0764b82e 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,21 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // Strip unreferenced args at call sites.\n+      NodeUtil.visitPreOrder(\n+          function.getLastChild(),\n+          new AbstractShallowStatementCallback() {\n+            @Override\n+            public void visit(NodeTraversal t, Node n, Node parent) {\n+              if (parent != null\n+                  && n.isFunction()\n+                  && modifyCallSites\n+                  && n.getChildCount() == argList.getChildCount()) {\n+                removeUnreferencedArgs(\n+                    fnScope, argList, n.getFirstChild(), referenced);\n+              }\n+            }\n+          });\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}