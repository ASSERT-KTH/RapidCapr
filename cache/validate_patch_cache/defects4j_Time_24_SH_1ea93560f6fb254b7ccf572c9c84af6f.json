{
    "patch": "            } catch (IllegalArgumentException iae) {\n                if (savedFields[i].isSaved) {\n                    StringBuffer sb = new StringBuffer(text);\n                    for (int j = 0; j < i; ++j) {\n                        savedFields[j].copyInto(sb, sb.length());\n                    }\n                    if (sb.length() > 0) {\n                        iae.prependMessage(\"Cannot parse \\\"\" + sb + \"\\\"\");\n                    }\n                }\n                throw iae;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1d81e08c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalArgumentException iae) {\n+                if (savedFields[i].isSaved) {\n+                    StringBuffer sb = new StringBuffer(text);\n+                    for (int j = 0; j < i; ++j) {\n+                        savedFields[j].copyInto(sb, sb.length());\n+                    }\n+                    if (sb.length() > 0) {\n+                        iae.prependMessage(\"Cannot parse \\\"\" + sb + \"\\\"\");\n+                    }\n+                }\n+                throw iae;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}