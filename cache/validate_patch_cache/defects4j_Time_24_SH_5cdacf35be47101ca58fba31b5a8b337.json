{
    "patch": "            DateTimeFormatter parser = new DateTimeFormatterBuilder()\n                .appendPattern(e.getFormatString())\n                .toFormatter().withChronology(iChrono).withLocale(iLocale);\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \" + parser.parseLocalDate(text));",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2ac804fa 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,11 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            DateTimeFormatter parser = new DateTimeFormatterBuilder()\n+                .appendPattern(e.getFormatString())\n+                .toFormatter().withChronology(iChrono).withLocale(iLocale);\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \" + parser.parseLocalDate(text));\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}