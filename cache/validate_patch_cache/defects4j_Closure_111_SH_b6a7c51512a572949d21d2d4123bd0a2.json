{
    "patch": "          if (topType.isEnumType()) {\n            return getNativeType(JSTypeNative.STRING_TYPE);\n          } else if (topType.isTemplatizedType()) {\n            JSTypeReferencedType referencedType = topType.getReferencedType();\n            if (referencedType == JSTypeNative.ARRAY_TYPE.getReferencedType()) {\n              return getNativeType(JSTypeNative.ARRAY_TYPE);\n            } else if (referencedType == JSTypeNative.OBJECT_TYPE.getReferencedType()) {\n              return topType;\n            }\n          }\n          return getNativeType(JSTypeNative.TOP_TYPE);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..27db585f 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,17 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+          if (topType.isEnumType()) {\n+            return getNativeType(JSTypeNative.STRING_TYPE);\n+          } else if (topType.isTemplatizedType()) {\n+            JSTypeReferencedType referencedType = topType.getReferencedType();\n+            if (referencedType == JSTypeNative.ARRAY_TYPE.getReferencedType()) {\n+              return getNativeType(JSTypeNative.ARRAY_TYPE);\n+            } else if (referencedType == JSTypeNative.OBJECT_TYPE.getReferencedType()) {\n+              return topType;\n+            }\n+          }\n+          return getNativeType(JSTypeNative.TOP_TYPE);\n         }\n \n         @Override",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}