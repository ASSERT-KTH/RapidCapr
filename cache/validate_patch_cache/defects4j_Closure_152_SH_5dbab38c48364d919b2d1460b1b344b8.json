{
    "patch": "// Attempt to resolve `typeOfThis`\nJSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);\n\nif (!(resolvedTypeOfThis instanceof ObjectType)) {\n  // Handle error case\n} else {\n  typeOfThis = (ObjectType) resolvedTypeOfThis;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex fc2578d8..79da6eb9 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -868,7 +868,14 @@ public class FunctionType extends PrototypeObjectType {\n     // Warning about typeOfThis if it doesn't resolve to an ObjectType\n     // is handled further upstream.\n     // TODO(nicksantos): Handle this correctly if we have a UnionType.\n-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);\n+// Attempt to resolve `typeOfThis`\n+JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);\n+\n+if (!(resolvedTypeOfThis instanceof ObjectType)) {\n+  // Handle error case\n+} else {\n+  typeOfThis = (ObjectType) resolvedTypeOfThis;\n+}\n \n     boolean changed = false;\n     ImmutableList.Builder<ObjectType> resolvedInterfaces =",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}