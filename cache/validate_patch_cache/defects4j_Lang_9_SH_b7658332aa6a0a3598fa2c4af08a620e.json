{
    "patch": "List<Strategy> collector = new ArrayList<>();\nwhile (patternMatcher.find()) {\n    String formatField = patternMatcher.group();\n    Strategy strategy = getStrategy(formatField);\n    strategy.addRegex(this, regex);\n    collector.add(strategy);\n}\nif (collector.isEmpty()) {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}\nstrategies = collector.toArray(new Strategy[collector.size()]);\nparsePattern = Pattern.compile(regex.toString());\ncurrentFormatField = null;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..5a0366cd 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+List<Strategy> collector = new ArrayList<>();\n+while (patternMatcher.find()) {\n+    String formatField = patternMatcher.group();\n+    Strategy strategy = getStrategy(formatField);\n+    strategy.addRegex(this, regex);\n+    collector.add(strategy);\n+}\n+if (collector.isEmpty()) {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n+strategies = collector.toArray(new Strategy[collector.size()]);\n+parsePattern = Pattern.compile(regex.toString());\n+currentFormatField = null;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}