{
    "patch": "    List<String> paramNames = NodeUtil.getFunctionParameters(fnScope.getRootNode());\n    int paramsSize = paramNames.size();\n    Node fnBlock = NodeUtil.getFunctionBody(fnScope.getRootNode());\n\n    // The parameters object literal setters can not be removed.\n    if (NodeUtil.isGetOrSetKey(fnScope.getRootNode().getParent())) {\n      return;\n    }\n\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(fnScope.getRootNode());\n    if (modifyCallers) {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    } else {\n      // Strip unreferenced args off the end of the function declaration.\n      for (int i = paramsSize - 1; i >= 0; i--) {\n        if (!referenced.contains(fnScope.getVar(paramNames.get(i)))) {\n          Node toRemove = fnBlock.getLastChild().getChildAtIndex(i);\n          fnBlock.getLastChild().removeChild(toRemove);\n          compiler.reportCodeChange();\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..6b3b88ea 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,27 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<String> paramNames = NodeUtil.getFunctionParameters(fnScope.getRootNode());\n+    int paramsSize = paramNames.size();\n+    Node fnBlock = NodeUtil.getFunctionBody(fnScope.getRootNode());\n+\n+    // The parameters object literal setters can not be removed.\n+    if (NodeUtil.isGetOrSetKey(fnScope.getRootNode().getParent())) {\n+      return;\n+    }\n+\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(fnScope.getRootNode());\n+    if (modifyCallers) {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    } else {\n+      // Strip unreferenced args off the end of the function declaration.\n+      for (int i = paramsSize - 1; i >= 0; i--) {\n+        if (!referenced.contains(fnScope.getVar(paramNames.get(i)))) {\n+          Node toRemove = fnBlock.getLastChild().getChildAtIndex(i);\n+          fnBlock.getLastChild().removeChild(toRemove);\n+          compiler.reportCodeChange();\n+        }\n+      }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}