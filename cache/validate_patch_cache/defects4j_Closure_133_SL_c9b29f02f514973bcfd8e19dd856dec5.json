{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if(result == null) { \n        return \"\"; \n    }\n    result = result.trim();\n\n    if (result.length() == 0) {\n        return \"\";\n    }\n\n    if (result.charAt(0) == '*') {\n        result = result.substring(Math.min(1, result.length()));\n    }\n\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..1c8ae5fb 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,23 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    if(result == null) { \n+        return \"\"; \n+    }\n+    result = result.trim();\n+\n+    if (result.length() == 0) {\n+        return \"\";\n+    }\n+\n+    if (result.charAt(0) == '*') {\n+        result = result.substring(Math.min(1, result.length()));\n+    }\n+\n+    return result.trim();\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}