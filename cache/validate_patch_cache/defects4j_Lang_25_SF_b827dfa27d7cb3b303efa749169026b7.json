{
    "patch": "public static String unescape(String s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c == '\\\\') {\n            i++;\n            if (i < s.length()) {\n                char d = s.charAt(i);\n                if (d == 'n') sb.append('\\n');\n                else if (d == 'r') sb.append('\\r');\n                else if (d == 't') sb.append('\\t');\n                else if (d == 'f') sb.append('\\f');\n                else if (d == '\\\\') sb.append('\\\\');\n                else if (d == '\\'') sb.append('\\'');\n                else if (d == '\\\"') sb.append('\\\"');\n                else if (d >= '0' && d <= '7') {\n                    int oct = d - '0';\n                    i++;\n                    if (i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n                        oct = oct * 8 + s.charAt(i) - '0';\n                        i++;\n                        if (i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n                            oct = oct * 8 + s.charAt(i) - '0';\n                        }\n                    }\n                    i--;\n                    sb.append((char)oct);\n                }\n                else {\n                    sb.append('\\\\');\n                    sb.append(d);\n                }\n            }\n        }\n        else {\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e417b615 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,46 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    StringBuilder sb = new StringBuilder();\n+    for (int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        if (c == '\\\\') {\n+            i++;\n+            if (i < s.length()) {\n+                char d = s.charAt(i);\n+                if (d == 'n') sb.append('\\n');\n+                else if (d == 'r') sb.append('\\r');\n+                else if (d == 't') sb.append('\\t');\n+                else if (d == 'f') sb.append('\\f');\n+                else if (d == '\\\\') sb.append('\\\\');\n+                else if (d == '\\'') sb.append('\\'');\n+                else if (d == '\\\"') sb.append('\\\"');\n+                else if (d >= '0' && d <= '7') {\n+                    int oct = d - '0';\n+                    i++;\n+                    if (i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n+                        oct = oct * 8 + s.charAt(i) - '0';\n+                        i++;\n+                        if (i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n+                            oct = oct * 8 + s.charAt(i) - '0';\n+                        }\n+                    }\n+                    i--;\n+                    sb.append((char)oct);\n+                }\n+                else {\n+                    sb.append('\\\\');\n+                    sb.append(d);\n+                }\n+            }\n+        }\n+        else {\n+            sb.append(c);\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}