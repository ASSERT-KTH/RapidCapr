{
    "patch": "public Fraction reduce() {\n        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        int newNumerator = numerator, newDenominator = denominator;\n        if (gcd != 0) {\n            newNumerator = numerator / gcd;\n            newDenominator = denominator / gcd;\n        }\n        return new Fraction(newNumerator, newDenominator);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..9e78c139 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,15 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+public Fraction reduce() {\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n+        int newNumerator = numerator, newDenominator = denominator;\n+        if (gcd != 0) {\n+            newNumerator = numerator / gcd;\n+            newDenominator = denominator / gcd;\n+        }\n+        return new Fraction(newNumerator, newDenominator);\n+    }\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}