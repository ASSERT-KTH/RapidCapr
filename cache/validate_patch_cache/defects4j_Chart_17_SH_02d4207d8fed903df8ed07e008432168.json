{
    "patch": "public Object clone() throws CloneNotSupportedException {\n        TimeSeries cloneSeries = (TimeSeries) super.clone();\n        cloneSeries.data = (List) ObjectUtilities.deepClone(this.data);\n        cloneSeries.domainIsPointsInTime = (Boolean) this.domainIsPointsInTime.clone();\n        cloneSeries.rangeDescription = (String) this.rangeDescription.clone();\n        cloneSeries.domainDescription = (String) this.domainDescription.clone();\n        return cloneSeries;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..93858f7 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,14 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+public Object clone() throws CloneNotSupportedException {\n+        TimeSeries cloneSeries = (TimeSeries) super.clone();\n+        cloneSeries.data = (List) ObjectUtilities.deepClone(this.data);\n+        cloneSeries.domainIsPointsInTime = (Boolean) this.domainIsPointsInTime.clone();\n+        cloneSeries.rangeDescription = (String) this.rangeDescription.clone();\n+        cloneSeries.domainDescription = (String) this.domainDescription.clone();\n+        return cloneSeries;\n+}\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}