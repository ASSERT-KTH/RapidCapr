{
    "patch": "final int delta = offsetLocal - offsetAdjusted;\nif (delta >= 0) {\n    final long nextTransition = nextTransition(instantAdjusted);\n    final long adjNext = nextTransition(instantLocal - offsetAdjusted);\n    if (adjNext != nextTransition) {\n        if (getOffset(nextTransition - 1) >= getOffset(nextTransition)) {\n            return getOffset(nextTransition) + delta;\n        }\n        return offsetLocal;\n    } else {\n        return offsetAdjusted;\n    }\n} else {\n    long lastTransition = previousTransition(instantLocal - offsetAdjusted);\n    final long lastAdj = previousTransition(instantAdjusted) + offsetAdjusted;\n    final int offsetLast = getOffset(lastTransition);\n    final int offsetAdj = getOffset(lastAdj);\n    if (offsetLast < offsetAdj) {\n        lastTransition = previousTransition(lastAdj - 1);\n        offsetLast = getOffset(lastTransition);\n    }\n    final int offsetBeforeLast = getOffset(lastTransition - 1);\n    if (offsetBeforeLast >= offsetAdj) {\n        return offsetLocal;\n    }\n    final int minDelta = Math.min(delta, 0);\n    if (offsetBeforeLast < offsetLocal + minDelta) {\n        return offsetBeforeLast;\n    }\n    final int maxDelta = Math.max(delta, 0);\n    if (offsetAdj < offsetLocal + maxDelta) {\n        return offsetAdj;\n    }\n    return offsetLocal + maxDelta;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3a7e3de0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,41 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+final int delta = offsetLocal - offsetAdjusted;\n+if (delta >= 0) {\n+    final long nextTransition = nextTransition(instantAdjusted);\n+    final long adjNext = nextTransition(instantLocal - offsetAdjusted);\n+    if (adjNext != nextTransition) {\n+        if (getOffset(nextTransition - 1) >= getOffset(nextTransition)) {\n+            return getOffset(nextTransition) + delta;\n+        }\n+        return offsetLocal;\n+    } else {\n+        return offsetAdjusted;\n+    }\n+} else {\n+    long lastTransition = previousTransition(instantLocal - offsetAdjusted);\n+    final long lastAdj = previousTransition(instantAdjusted) + offsetAdjusted;\n+    final int offsetLast = getOffset(lastTransition);\n+    final int offsetAdj = getOffset(lastAdj);\n+    if (offsetLast < offsetAdj) {\n+        lastTransition = previousTransition(lastAdj - 1);\n+        offsetLast = getOffset(lastTransition);\n+    }\n+    final int offsetBeforeLast = getOffset(lastTransition - 1);\n+    if (offsetBeforeLast >= offsetAdj) {\n+        return offsetLocal;\n+    }\n+    final int minDelta = Math.min(delta, 0);\n+    if (offsetBeforeLast < offsetLocal + minDelta) {\n+        return offsetBeforeLast;\n+    }\n+    final int maxDelta = Math.max(delta, 0);\n+    if (offsetAdj < offsetLocal + maxDelta) {\n+        return offsetAdj;\n+    }\n+    return offsetLocal + maxDelta;\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable offsetLast",
    "test_result": "ERROR"
}