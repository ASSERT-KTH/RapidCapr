{
    "patch": "I apologize for my mistake, and thank you for bringing it to my attention. Here is the corrected implementation of `StringUtils.containsAny`:\n\n```\npublic class StringUtils {\n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || searchChars == null) {\n            return false;\n        }\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            if (Character.isHighSurrogate(ch)) {\n                if (i < str.length() - 1) {\n                    int codePoint = Character.toCodePoint(ch, str.charAt(++i));\n                    if (contains(searchChars, codePoint)) {\n                        return true;\n                    }\n                }\n            } else if (contains(searchChars, ch)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static boolean contains(char[] arr, int codePoint) {\n        for (char c : Character.toChars(codePoint)) {\n            for (char a : arr) {\n                if (a == c) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n```\n\nI hope this fixes your issue!",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..73ef7e1c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,44 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+I apologize for my mistake, and thank you for bringing it to my attention. Here is the corrected implementation of `StringUtils.containsAny`:\n+\n+```\n+public class StringUtils {\n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || searchChars == null) {\n+            return false;\n+        }\n+        for (int i = 0; i < str.length(); i++) {\n+            char ch = str.charAt(i);\n+            if (Character.isHighSurrogate(ch)) {\n+                if (i < str.length() - 1) {\n+                    int codePoint = Character.toCodePoint(ch, str.charAt(++i));\n+                    if (contains(searchChars, codePoint)) {\n+                        return true;\n+                    }\n+                }\n+            } else if (contains(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean contains(char[] arr, int codePoint) {\n+        for (char c : Character.toChars(codePoint)) {\n+            for (char a : arr) {\n+                if (a == c) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n+```\n+\n+I hope this fixes your issue!\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}