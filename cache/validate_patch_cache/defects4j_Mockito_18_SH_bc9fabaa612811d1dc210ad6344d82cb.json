{
    "patch": "public ReturnValue apply(Input input) {\n    try {\n        Object returnValue = method.invoke(targetObject, input.getArguments());\n        if (returnValue == null) {\n            return new ReturnValue(null);\n        }\n        if (returnValue.getClass().isArray()) {\n            return new ReturnValue(Arrays.asList((Object[]) returnValue));\n        }\n        if (Iterable.class.isAssignableFrom(returnValue.getClass())) {\n            Iterable iterable = (Iterable) returnValue;\n            Iterator iterator = iterable.iterator();\n            List list = new ArrayList();\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return new ReturnValue(list);\n        }\n        return new ReturnValue(returnValue);\n    } catch (Throwable throwable) {\n        return new ReturnValue(throwable);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}