{
    "patch": "static boolean mayBeString(Node n, boolean recurse) {\n  if (recurse && allResultsMatch(n, MAY_BE_STRING_PREDICATE)) {\n    return true;\n  }\n  if (n.isTemplateLiteral() || n.isString() || n.isTemplateLitSub()) {\n    return true;\n  } else if (n.isAdd()) {\n    return mayBeString(n.getFirstChild(), recurse) || mayBeString(n.getLastChild(), recurse);\n  } else {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eef27927..1648c65f 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1412,13 +1412,18 @@ public final class NodeUtil {\n     return mayBeString(n, true);\n   }\n \n-  static boolean mayBeString(Node n, boolean recurse) {\n-    if (recurse) {\n-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n-    } else {\n-      return mayBeStringHelper(n);\n-    }\n+static boolean mayBeString(Node n, boolean recurse) {\n+  if (recurse && allResultsMatch(n, MAY_BE_STRING_PREDICATE)) {\n+    return true;\n   }\n+  if (n.isTemplateLiteral() || n.isString() || n.isTemplateLitSub()) {\n+    return true;\n+  } else if (n.isAdd()) {\n+    return mayBeString(n.getFirstChild(), recurse) || mayBeString(n.getLastChild(), recurse);\n+  } else {\n+    return false;\n+  }\n+}\n \n   static boolean mayBeStringHelper(Node n) {\n     return !isNumericResult(n) && !isBooleanResult(n)",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}