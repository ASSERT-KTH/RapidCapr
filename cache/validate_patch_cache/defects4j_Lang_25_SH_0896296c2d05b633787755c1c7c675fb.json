{
    "patch": "// determine if the character to be encoded is an ASCII character\nif (ch < 127 && dontNeedEncoding.get(ch)) {\n    out.write(ch);\n} else {\n    //Character is not ASCII. Encode it.\n    if (ch > 65535) {\n        throw new IllegalArgumentException(\"Invalid Unicode character: \" + ch);\n    }\n    out.write('%');\n    out.write(hexDigit[(ch >> 4) & 0xF]);\n    out.write(hexDigit[ch & 0xF]);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}