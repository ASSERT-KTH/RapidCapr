{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument == null) {\n    actualTypeArgument = determineActualTypeArgumentFromBounds(typeVariable.getBounds());\n}\nif(actualTypeArgument == null) {\n    actualTypeArgument = Object.class;\n}\nregisterTypeVariablesOn(actualTypeArgument);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..872704525 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument == null) {\n+    actualTypeArgument = determineActualTypeArgumentFromBounds(typeVariable.getBounds());\n+}\n+if(actualTypeArgument == null) {\n+    actualTypeArgument = Object.class;\n+}\n+registerTypeVariablesOn(actualTypeArgument);\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}