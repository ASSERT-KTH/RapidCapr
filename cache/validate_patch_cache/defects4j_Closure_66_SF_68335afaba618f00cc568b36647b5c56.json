{
    "patch": "import org.json.JSONObject;\nimport org.json.JSONException;\n\npublic class MyClass {\n    public static double getTypedPercent(String jsonString) throws JSONException {\n        JSONObject jsonObject = new JSONObject(jsonString);\n        int total = jsonObject.optInt(\"total\", 0);\n        if (total == 0) {\n            return 100.0;\n        }\n        int typed = jsonObject.optInt(\"typed\", 0);\n        return ((double)typed / (double)total) * 100.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..d2653119 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import org.json.JSONObject;\n+import org.json.JSONException;\n+\n+public class MyClass {\n+    public static double getTypedPercent(String jsonString) throws JSONException {\n+        JSONObject jsonObject = new JSONObject(jsonString);\n+        int total = jsonObject.optInt(\"total\", 0);\n+        if (total == 0) {\n+            return 100.0;\n+        }\n+        int typed = jsonObject.optInt(\"typed\", 0);\n+        return ((double)typed / (double)total) * 100.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}