{
    "patch": "public static String reverseString(String str) {\n    if(str == null || str.length() <= 1) {\n        return str;\n    }\n    char[] charArr = str.toCharArray();\n    for(int i = 0, j = charArr.length - 1; i < j; i++, j--) {\n        char temp = charArr[i];\n        charArr[i] = charArr[j];\n        charArr[j] = temp;\n    }\n    return new String(charArr);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..8d6db95ee 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,18 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static String reverseString(String str) {\n+    if(str == null || str.length() <= 1) {\n+        return str;\n+    }\n+    char[] charArr = str.toCharArray();\n+    for(int i = 0, j = charArr.length - 1; i < j; i++, j--) {\n+        char temp = charArr[i];\n+        charArr[i] = charArr[j];\n+        charArr[j] = temp;\n+    }\n+    return new String(charArr);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}