{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent != null && parent.getType() == Token.ASSIGN) {\n        Node lhs = parent.getFirstChild();\n        Node llhs = lhs;\n        while (llhs != null && NodeUtil.isGet(llhs)) {\n          llhs = llhs.getFirstChild();\n        }\n        Node rhs = lhs.getNext();\n        if (llhs != null && llhs.getType() == Token.NAME &&\n            \"Object\".equals(llhs.getString()) &&\n            NodeUtil.isGet(rhs)) {\n          rhs = rhs.getFirstChild();\n        }\n        if (rhs.getType() == Token.OBJECTLIT) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..d5cc2920 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,23 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && parent.getType() == Token.ASSIGN) {\n+        Node lhs = parent.getFirstChild();\n+        Node llhs = lhs;\n+        while (llhs != null && NodeUtil.isGet(llhs)) {\n+          llhs = llhs.getFirstChild();\n+        }\n+        Node rhs = lhs.getNext();\n+        if (llhs != null && llhs.getType() == Token.NAME &&\n+            \"Object\".equals(llhs.getString()) &&\n+            NodeUtil.isGet(rhs)) {\n+          rhs = rhs.getFirstChild();\n+        }\n+        if (rhs.getType() == Token.OBJECTLIT) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}