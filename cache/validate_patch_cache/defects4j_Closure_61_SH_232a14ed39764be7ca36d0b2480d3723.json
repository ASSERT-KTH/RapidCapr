{
    "patch": "if (nameNode.getFirstChild().getType() == Token.NAME &&\n    nameNode.getFirstChild().getString().equals(\"Math\") &&\n    callNode.getFirstChild().getNext() != null &&\n    !callNode.getFirstChild().getNext().isEquivalentTo(\n        IR.number(0).srcref(callNode.getLineno()))) {\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..b7b9648c 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,13 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.getFirstChild().getType() == Token.NAME &&\n+    nameNode.getFirstChild().getString().equals(\"Math\") &&\n+    callNode.getFirstChild().getNext() != null &&\n+    !callNode.getFirstChild().getNext().isEquivalentTo(\n+        IR.number(0).srcref(callNode.getLineno()))) {\n+    return false;\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}