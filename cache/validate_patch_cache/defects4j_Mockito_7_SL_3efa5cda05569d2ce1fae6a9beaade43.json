{
    "patch": "if(typeVariable instanceof WildcardType) {\n    Type[] upperBounds = ((WildcardType)typeVariable).getUpperBounds();\n    Type[] lowerBounds = ((WildcardType)typeVariable).getLowerBounds();\n    for(Type bound : upperBounds) {\n        registerTypeVariablesOn(bound);\n    }\n    for(Type bound : lowerBounds) {\n        registerTypeVariablesOn(bound);\n    }\n} else {\n    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n    if (actualTypeArgument != null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    } else {\n        for (Type type : typeVariable.getBounds()) {\n            registerTypeVariablesOn(type);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..a9cd3c833 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,30 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if(typeVariable instanceof WildcardType) {\n+    Type[] upperBounds = ((WildcardType)typeVariable).getUpperBounds();\n+    Type[] lowerBounds = ((WildcardType)typeVariable).getLowerBounds();\n+    for(Type bound : upperBounds) {\n+        registerTypeVariablesOn(bound);\n+    }\n+    for(Type bound : lowerBounds) {\n+        registerTypeVariablesOn(bound);\n+    }\n+} else {\n+    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+    if (actualTypeArgument != null) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    } else {\n+        for (Type type : typeVariable.getBounds()) {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}