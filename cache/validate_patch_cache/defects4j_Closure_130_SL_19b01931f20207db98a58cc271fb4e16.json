{
    "patch": "      if (name.getDeclaration() != null && name.localSets == 0 && name.parent != null && name.parent.type == Name.Type.OBJECTLIT &&\n          name.aliasingGets == 0 && name.props != null && name.props.stream().allMatch(prop -> prop.globalSets == 1 && prop.localSets == 0 && prop.aliasingGets == 0)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..bba488b4 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,8 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.getDeclaration() != null && name.localSets == 0 && name.parent != null && name.parent.type == Name.Type.OBJECTLIT &&\n+          name.aliasingGets == 0 && name.props != null && name.props.stream().allMatch(prop -> prop.globalSets == 1 && prop.localSets == 0 && prop.aliasingGets == 0)) {\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}