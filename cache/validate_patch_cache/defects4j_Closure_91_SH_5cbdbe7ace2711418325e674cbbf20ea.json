{
    "patch": "      Node grandparent = parent.getParent();\n      if (grandparent != null &&\n          (grandparent.getType() == Token.EXPR_RESULT ||\n           grandparent.getType() == Token.VAR ||\n           grandparent.getType() == Token.LET ||\n           grandparent.getType() == Token.CONST)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..9213c957 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,12 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = parent.getParent();\n+      if (grandparent != null &&\n+          (grandparent.getType() == Token.EXPR_RESULT ||\n+           grandparent.getType() == Token.VAR ||\n+           grandparent.getType() == Token.LET ||\n+           grandparent.getType() == Token.CONST)) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}