{
    "patch": " Set<String> referenced = new LinkedHashSet<>();\n referenced.addAll(topScope.getVarNames());\n\nremoveUnreferencedVarDecls(topScope, referenced);\n\nList<Scope> allFunctionScopes = topScope.getFunctionScopes();\n\nfor (Scope fnScope : allFunctionScopes) {\n  removeUnreferencedFunctionArgs(fnScope, referenced);\n  resetScope(fnScope);\n}\n\nremoveUnreferencedProperties(topScope, referenced);\n\ngetReferenceList(topScope).removeUnreferenced();\n\nremoveUnusedVars(topScope, referenced, getAllVars(topScope, false));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..9affb551 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,23 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+ Set<String> referenced = new LinkedHashSet<>();\n+ referenced.addAll(topScope.getVarNames());\n+\n+removeUnreferencedVarDecls(topScope, referenced);\n+\n+List<Scope> allFunctionScopes = topScope.getFunctionScopes();\n+\n+for (Scope fnScope : allFunctionScopes) {\n+  removeUnreferencedFunctionArgs(fnScope, referenced);\n+  resetScope(fnScope);\n+}\n+\n+removeUnreferencedProperties(topScope, referenced);\n+\n+getReferenceList(topScope).removeUnreferenced();\n+\n+removeUnusedVars(topScope, referenced, getAllVars(topScope, false));\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}