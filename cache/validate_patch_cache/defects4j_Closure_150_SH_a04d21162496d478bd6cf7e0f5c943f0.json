{
    "patch": "      attachLiteralTypes(n);\n      Node nameNode = n.getFirstChild();\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          defineDeclaredFunction(n, parent);\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n        case Token.ASSIGN:\n          if (NodeUtil.isNamespaceDecl(nameNode)) {\n            defineNamespace(nameNode);\n          }\n          break;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..587d9174 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1449,11 +1449,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       }\n \n       attachLiteralTypes(n);\n+      Node nameNode = n.getFirstChild();\n       switch (n.getType()) {\n         case Token.FUNCTION:\n-          if (parent.getType() == Token.NAME) {\n-            return;\n-          }\n           defineDeclaredFunction(n, parent);\n           break;\n         case Token.CATCH:\n@@ -1462,6 +1460,11 @@ final class TypedScopeCreator implements ScopeCreator {\n         case Token.VAR:\n           defineVar(n, parent);\n           break;\n+        case Token.ASSIGN:\n+          if (NodeUtil.isNamespaceDecl(nameNode)) {\n+            defineNamespace(nameNode);\n+          }\n+          break;\n       }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}