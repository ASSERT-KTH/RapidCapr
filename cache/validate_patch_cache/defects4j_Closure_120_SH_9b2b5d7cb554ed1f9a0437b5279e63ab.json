{
    "patch": "          // We assume that a function may assign to the variable for which this analysis is being done.\n          // TODO: If we maintain information about which variables are assigned in which functions,\n          // we could be more precise here.",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..dc849e0b 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,9 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          // We assume that a function may assign to the variable for which this analysis is being done.\n+          // TODO: If we maintain information about which variables are assigned in which functions,\n+          // we could be more precise here.\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}