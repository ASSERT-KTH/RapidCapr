{
    "patch": "if (val == null) {\n    return null;\n}\nif (val.length() == 0) {\n    throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n}\nString input = val.trim();\nif (input.charAt(0) == '+' && !Character.isDigit(input.charAt(1))) {\n    return null;\n}\nif (input.startsWith(\"--\") || input.startsWith(\"++\")) {\n    // this is protection for poorness in java.lang.BigDecimal.\n    // it accepts this as a legal value, but it does not appear\n    // to be in specification of class. OS X Java parses it to\n    // a wrong value.\n    return null;\n}\nif (input.startsWith(\"0x\") || input.startsWith(\"-0x\")) {\n    return createInteger(input);\n}\nif (input.startsWith(\"-\") && input.length() == 1) {\n    return null;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..a7f13ea6 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,29 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val == null) {\n+    return null;\n+}\n+if (val.length() == 0) {\n+    throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n+}\n+String input = val.trim();\n+if (input.charAt(0) == '+' && !Character.isDigit(input.charAt(1))) {\n+    return null;\n+}\n+if (input.startsWith(\"--\") || input.startsWith(\"++\")) {\n+    // this is protection for poorness in java.lang.BigDecimal.\n+    // it accepts this as a legal value, but it does not appear\n+    // to be in specification of class. OS X Java parses it to\n+    // a wrong value.\n+    return null;\n+}\n+if (input.startsWith(\"0x\") || input.startsWith(\"-0x\")) {\n+    return createInteger(input);\n+}\n+if (input.startsWith(\"-\") && input.length() == 1) {\n+    return null;\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: 0",
    "test_result": "FAIL"
}