{
    "patch": "public static boolean equals(double x, double y) {\n    // Handle NaN values\n    if (Double.isNaN(x) && Double.isNaN(y)) {\n        return true;\n    } else {\n        // Handle positive zero and negative zero\n        if (x == 0 && y == 0) {\n            return Double.doubleToLongBits(x) == Double.doubleToLongBits(y);\n        } else {\n            return Math.abs(x - y) < Math.ulp(Math.max(Math.abs(x), Math.abs(y)));\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..4a318ea25 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -413,9 +413,19 @@ public final class MathUtils {\n      * @param y second value\n      * @return {@code true} if the values are equal.\n      */\n-    public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+public static boolean equals(double x, double y) {\n+    // Handle NaN values\n+    if (Double.isNaN(x) && Double.isNaN(y)) {\n+        return true;\n+    } else {\n+        // Handle positive zero and negative zero\n+        if (x == 0 && y == 0) {\n+            return Double.doubleToLongBits(x) == Double.doubleToLongBits(y);\n+        } else {\n+            return Math.abs(x - y) < Math.ulp(Math.max(Math.abs(x), Math.abs(y)));\n+        }\n     }\n+}\n \n     /**\n      * Returns true if both arguments are NaN or neither is NaN and they are",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}