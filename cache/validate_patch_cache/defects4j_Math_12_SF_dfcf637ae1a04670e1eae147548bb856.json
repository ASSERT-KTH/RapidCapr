{
    "patch": "public static double[] calculateDistribution(double[] values) {\n    int len = values.length;\n    double[] distribution = new double[len];\n    double sum = 0;\n    double minNonZero = Double.MAX_VALUE;\n\n    // Find non-zero minimum and sum of values\n    for (int i = 0; i < len; i++) {\n        double value = values[i];\n        if (value != 0) {\n            sum += value;\n            minNonZero = Math.min(minNonZero, value);\n        }\n    }\n\n    if (sum == 0) {\n        return distribution;\n    }\n\n    // Compute distribution while avoiding numerical errors\n    for (int i = 0; i < len; i++) {\n        double value = values[i];\n        if (value == 0) {\n            distribution[i] = minNonZero / (2 * sum);  // small value to avoid division by zero\n        } else {\n            distribution[i] = (value + Double.MIN_VALUE) / sum;  // add small delta to avoid rounding errors\n        }\n    }\n\n    return distribution;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}