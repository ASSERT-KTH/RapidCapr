{
    "patch": "result[resultOffset] = (Double.isFinite(x[xOffset]) && Double.isFinite(y[yOffset])) ? result[resultOffset] : FastMath.atan2(y[yOffset], x[xOffset]);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\nindex bf6dd65d5..38c13ba43 100644\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n@@ -1416,6 +1416,7 @@ public class DSCompiler {\n         }\n \n         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n+result[resultOffset] = (Double.isFinite(x[xOffset]) && Double.isFinite(y[yOffset])) ? result[resultOffset] : FastMath.atan2(y[yOffset], x[xOffset]);\n \n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.0> but was:<NaN>",
    "test_result": "FAIL"
}