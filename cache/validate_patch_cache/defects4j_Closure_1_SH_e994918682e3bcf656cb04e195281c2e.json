{
    "patch": "    // strip parameters which are not referenced in the function body\n    Node body = NodeUtil.getFunctionBody(fnScope.getRootNode());\n\n    Node argList = NodeUtil.getFunctionParameters(fnScope.getRootNode());\n    Set<String> referencedParams = new HashSet<>();\n\n    NodeTraversal.traverse(compiler, body, new AbstractPostOrderCallback() {\n      @Override\n      public void visit(NodeTraversal t, Node n, Node parent) {\n        if (n.isName() && parent.isParamList()) {\n          referencedParams.add(n.getString());\n        }\n      }\n\n      @Override\n      public void visit(NodeTraversal t, Node n) {\n        if (n.isName()) {\n          referencedParams.remove(n.getString());\n        }\n      }\n    });\n\n    for (Node param : argList.children()) {\n      if (referencedParams.contains(param.getString())) {\n        continue;\n      }\n\n      param.detach();\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..cc801ec3 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,36 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // strip parameters which are not referenced in the function body\n+    Node body = NodeUtil.getFunctionBody(fnScope.getRootNode());\n+\n+    Node argList = NodeUtil.getFunctionParameters(fnScope.getRootNode());\n+    Set<String> referencedParams = new HashSet<>();\n+\n+    NodeTraversal.traverse(compiler, body, new AbstractPostOrderCallback() {\n+      @Override\n+      public void visit(NodeTraversal t, Node n, Node parent) {\n+        if (n.isName() && parent.isParamList()) {\n+          referencedParams.add(n.getString());\n+        }\n+      }\n+\n+      @Override\n+      public void visit(NodeTraversal t, Node n) {\n+        if (n.isName()) {\n+          referencedParams.remove(n.getString());\n+        }\n+      }\n+    });\n+\n+    for (Node param : argList.children()) {\n+      if (referencedParams.contains(param.getString())) {\n+        continue;\n+      }\n+\n+      param.detach();\n+      compiler.reportCodeChange();\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}