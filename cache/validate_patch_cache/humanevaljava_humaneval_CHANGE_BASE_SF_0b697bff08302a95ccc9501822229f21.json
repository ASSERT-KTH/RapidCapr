{
    "patch": "public static String change_base(int x, int base) {\n    if (x == 0) {\n        return \"0\";\n    }\n    StringBuilder result = new StringBuilder();\n    boolean isNegative = x < 0;\n    x = Math.abs(x);\n    while (x > 0) {\n        int digit = Math.floorMod(x, base); // use floorMod to handle negative x values\n        if (digit >= 10) {\n            result.append((char) ('A' + digit - 10));\n        } else {\n            result.append(digit);\n        }\n        x /= base;\n    }\n    if (i",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CHANGE_BASE.java b/src/main/java/humaneval/buggy/CHANGE_BASE.java\nindex 6e31774..21afb72 100644\n--- a/src/main/java/humaneval/buggy/CHANGE_BASE.java\n+++ b/src/main/java/humaneval/buggy/CHANGE_BASE.java\n@@ -11,13 +11,21 @@ base numbers are less than 10.\n '111' */\n \n public class CHANGE_BASE {\n-    public static String change_base(int x, int base) {\n-        String result = \"\";\n-\n-        while (x > 0) {\n-            result = result + x % base;\n-            x = x - x / base;\n+public static String change_base(int x, int base) {\n+    if (x == 0) {\n+        return \"0\";\n+    }\n+    StringBuilder result = new StringBuilder();\n+    boolean isNegative = x < 0;\n+    x = Math.abs(x);\n+    while (x > 0) {\n+        int digit = Math.floorMod(x, base); // use floorMod to handle negative x values\n+        if (digit >= 10) {\n+            result.append((char) ('A' + digit - 10));\n+        } else {\n+            result.append(digit);\n         }\n-        return result;\n+        x /= base;\n     }\n+    if (i\n }",
    "result_reason": " /tmp/humaneval-CHANGE_BASE/src/main/java/humaneval/buggy/CHANGE_BASE.java:[30,10] ')' expected",
    "test_result": "ERROR"
}