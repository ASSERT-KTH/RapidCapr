{
    "patch": "protected BasePeriod(long duration) {\n    super(getPeriod(duration), null, null);\n}\n\nprivate static PeriodType getPeriod(long duration) {\n    long seconds = duration / 1000;\n    int weeks = (int) (seconds / (86400 * 7)); // corrected calculation for total weeks\n    int days = (int) ((seconds / 86400) % 7);\n    int hours = (int) ((seconds / 3600) % 24);\n    int minutes = (int) ((seconds / 60) % 60);\n    int remainingSeconds = (int) (seconds % 60);\n    return PeriodType.weeks().withDays(days).withHours(hours).withMinutes(minutes).withSeconds(remainingSeconds).withWeeks(weeks);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..7d9c7ef9 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,19 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super(getPeriod(duration), null, null);\n+}\n+\n+private static PeriodType getPeriod(long duration) {\n+    long seconds = duration / 1000;\n+    int weeks = (int) (seconds / (86400 * 7)); // corrected calculation for total weeks\n+    int days = (int) ((seconds / 86400) % 7);\n+    int hours = (int) ((seconds / 3600) % 24);\n+    int minutes = (int) ((seconds / 60) % 60);\n+    int remainingSeconds = (int) (seconds % 60);\n+    return PeriodType.weeks().withDays(days).withHours(hours).withMinutes(minutes).withSeconds(remainingSeconds).withWeeks(weeks);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}