{
    "patch": "                    int offsetNext = getOffset(nextLocal);\n                    if (offsetNext > offsetAdjusted) {\n                        return offsetNext;\n                    }\n                }\n            }\n            else {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    int offsetPrev = getOffset(prevLocal);\n                    if (offsetPrev == offsetAdjusted) {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d290c56c 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    int offsetNext = getOffset(nextLocal);\n+                    if (offsetNext > offsetAdjusted) {\n+                        return offsetNext;\n+                    }\n+                }\n+            }\n+            else {\n+                long prevLocal = previousTransition(instantAdjusted);\n+                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                if (prevLocal != prevAdjusted) {\n+                    int offsetPrev = getOffset(prevLocal);\n+                    if (offsetPrev == offsetAdjusted) {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}