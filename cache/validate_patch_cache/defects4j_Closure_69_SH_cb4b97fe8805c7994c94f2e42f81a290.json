{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n      if (functionType.isConstructor() || functionJSDocInfo != null) {\n        JSType thisType = functionType.getTypeOfThis();\n        if (thisType != null && !isThisAllowed(child.getParent())) {\n          report(t, child, INVALID_THIS_TYPE,\n              \"Function with 'this' type '\" + thisType.toString() + \"' \" +\n              \"cannot be called with a plain function call. \" +\n              \"Use 'new' or a dotted method call instead.\");\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..9308a6ca 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n+      if (functionType.isConstructor() || functionJSDocInfo != null) {\n+        JSType thisType = functionType.getTypeOfThis();\n+        if (thisType != null && !isThisAllowed(child.getParent())) {\n+          report(t, child, INVALID_THIS_TYPE,\n+              \"Function with 'this' type '\" + thisType.toString() + \"' \" +\n+              \"cannot be called with a plain function call. \" +\n+              \"Use 'new' or a dotted method call instead.\");\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}