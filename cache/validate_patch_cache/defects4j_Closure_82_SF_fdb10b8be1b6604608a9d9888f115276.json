{
    "patch": "public final boolean isEmptyType() {\n    boolean isEmpty = isNoType()\n            || isNoObjectType()\n            || isNoResolvedType()\n            || isUnknownType()\n            || isNullType()\n            || isVoidType()\n            || isArrayType()\n            || isUnionType();\n\n    if (isEmpty) {\n        String warning = \"Warning: Encountered an empty type: \";\n        if (isNoType()) {\n            warning += \"NoType\";\n        } else if (isNoObjectType()) {\n            warning += \"NoObjectType\";\n        } else if (isNoResolvedType()) {\n            warning += \"NoResolvedType\";\n        } else if (isUnknownType()) {\n            warning += \"UnknownType\";\n        } else if (isNullType()) {\n            warning += \"NullType\";\n        } else if (isVoidType()) {\n            warning += \"VoidType\";\n        } else if (isArrayType()) {\n            warning += \"ArrayType\";\n        } else if (isUnionType()) {\n            warning += \"UnionType\";\n        }\n        \n        System.err.println(warning);\n    }\n\n    return isEmpty;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..b396fb9b 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,41 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    boolean isEmpty = isNoType()\n+            || isNoObjectType()\n+            || isNoResolvedType()\n+            || isUnknownType()\n+            || isNullType()\n+            || isVoidType()\n+            || isArrayType()\n+            || isUnionType();\n+\n+    if (isEmpty) {\n+        String warning = \"Warning: Encountered an empty type: \";\n+        if (isNoType()) {\n+            warning += \"NoType\";\n+        } else if (isNoObjectType()) {\n+            warning += \"NoObjectType\";\n+        } else if (isNoResolvedType()) {\n+            warning += \"NoResolvedType\";\n+        } else if (isUnknownType()) {\n+            warning += \"UnknownType\";\n+        } else if (isNullType()) {\n+            warning += \"NullType\";\n+        } else if (isVoidType()) {\n+            warning += \"VoidType\";\n+        } else if (isArrayType()) {\n+            warning += \"ArrayType\";\n+        } else if (isUnionType()) {\n+            warning += \"UnionType\";\n+        }\n+        \n+        System.err.println(warning);\n+    }\n+\n+    return isEmpty;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}