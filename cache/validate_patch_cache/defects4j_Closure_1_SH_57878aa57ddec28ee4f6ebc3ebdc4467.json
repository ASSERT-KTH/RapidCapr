{
    "patch": "    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction(), function);\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node body = function.getLastChild();\n    Node argList = getFunctionArgList(function);\n    Set<String> varsToRemove = new HashSet<>();\n    for (Node arg : argList.children()) {\n      if (arg.isName()) {\n        String argName = arg.getString();\n        Var var = fnScope.getVar(argName);\n        if (var == null || !referenced.contains(var)) {\n          varsToRemove.add(argName);\n        }\n      }\n    }\n    for (String varName : varsToRemove) {\n      Node arg = argList.getFirstChild();\n      while (arg != null && !varName.equals(arg.getString())) {\n        arg = arg.getNext();\n      }\n      Preconditions.checkNotNull(arg, varName);\n      arg.detach();\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..1f4a1d12 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,35 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction(), function);\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node body = function.getLastChild();\n+    Node argList = getFunctionArgList(function);\n+    Set<String> varsToRemove = new HashSet<>();\n+    for (Node arg : argList.children()) {\n+      if (arg.isName()) {\n+        String argName = arg.getString();\n+        Var var = fnScope.getVar(argName);\n+        if (var == null || !referenced.contains(var)) {\n+          varsToRemove.add(argName);\n+        }\n+      }\n+    }\n+    for (String varName : varsToRemove) {\n+      Node arg = argList.getFirstChild();\n+      while (arg != null && !varName.equals(arg.getString())) {\n+        arg = arg.getNext();\n+      }\n+      Preconditions.checkNotNull(arg, varName);\n+      arg.detach();\n+      compiler.reportCodeChange();\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}