{
    "patch": "          // Don't inline singleton getter methods\n          // calls as this confused class removing logic.\n          String className = convention.getSingletonGetterClassName(value);\n          if (className == null) {\n            return false;\n          }\n          if (compiler.getCodingConvention().isClassReference(reference, className)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..84f1f6ec 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,13 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          // Don't inline singleton getter methods\n+          // calls as this confused class removing logic.\n+          String className = convention.getSingletonGetterClassName(value);\n+          if (className == null) {\n+            return false;\n+          }\n+          if (compiler.getCodingConvention().isClassReference(reference, className)) {\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}