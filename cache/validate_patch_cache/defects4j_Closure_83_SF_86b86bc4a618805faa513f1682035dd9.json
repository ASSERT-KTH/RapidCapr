{
    "patch": "        String param = null;\n        List<String> args = params.getArguments();\n        if (args.size() > 0) {\n          param = args.get(0);\n        }\n        \n        if (param == null) {\n          setter.addValue(true);\n          return 0;\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n          } else {\n            setter.addValue(true);\n            return 0;\n          }\n          return 1;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..b18e6d32 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -330,9 +330,12 @@ public class CommandLineRunner extends\n       }\n \n       @Override\n-      public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n-\n+        String param = null;\n+        List<String> args = params.getArguments();\n+        if (args.size() > 0) {\n+          param = args.get(0);\n+        }\n+        \n         if (param == null) {\n           setter.addValue(true);\n           return 0;\n@@ -348,7 +351,6 @@ public class CommandLineRunner extends\n           }\n           return 1;\n         }\n-      }\n \n       @Override\n       public String getDefaultMetaVariable() {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}