{
    "patch": "        // Perform Cholesky decomposition on the input matrix\n        CholeskyDecomposition dec = new CholeskyDecomposition(m);\n\n        // Get the lower-triangular Cholesky matrix\n        RealMatrix l = dec.getL();\n\n        // Construct the square root of the matrix using the Cholesky matrix\n        RealMatrix lInv = new LUDecomposition(l).getSolver().getInverse();\n\n        return l.multiply(lInv);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..983c7806d 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,14 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+        // Perform Cholesky decomposition on the input matrix\n+        CholeskyDecomposition dec = new CholeskyDecomposition(m);\n+\n+        // Get the lower-triangular Cholesky matrix\n+        RealMatrix l = dec.getL();\n+\n+        // Construct the square root of the matrix using the Cholesky matrix\n+        RealMatrix lInv = new LUDecomposition(l).getSolver().getInverse();\n+\n+        return l.multiply(lInv);\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}