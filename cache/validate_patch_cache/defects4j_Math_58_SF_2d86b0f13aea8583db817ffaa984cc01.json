{
    "patch": "    public double[] fit() {\n        double[] guess = (new ParameterGuesser(getObservations())).guess();\n        for (int i = 0; i < guess.length; i++) {\n            if (guess[i] <= 0) {\n                guess[i] = Math.abs(guess[i]) + 1.0;\n            }\n        }\n        return fit(new Gaussian.Parametric(), guess);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..024836a63 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -117,7 +117,12 @@ public class GaussianFitter extends CurveFitter {\n      * observed points (in the same order as above).\n      */\n     public double[] fit() {\n-        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n+        double[] guess = (new ParameterGuesser(getObservations())).guess();\n+        for (int i = 0; i < guess.length; i++) {\n+            if (guess[i] <= 0) {\n+                guess[i] = Math.abs(guess[i]) + 1.0;\n+            }\n+        }\n         return fit(new Gaussian.Parametric(), guess);\n     }\n ",
    "result_reason": "org.apache.commons.math.exception.NotStrictlyPositiveException: -0.816 is smaller than, or equal to, the minimum (0)",
    "test_result": "FAIL"
}