{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLength = str.length();\n    int searchLength = searchChars.length;\n    int min = Character.MIN_VALUE;\n    if (searchLength > 1) {\n        for (int i = 0; i < strLength; i++) {\n            int ch = str.charAt(i);\n            if (ch >= min && ch <= Character.MAX_VALUE) {\n                for (int j = 0; j < searchLength; j++) {\n                    if (searchChars[j] == ch) {\n                        return true;\n                    }\n                }\n            }\n        }\n    } else if (searchLength == 1) {\n        return StringUtils.indexOf(str, searchChars[0]) >= 0;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..9f87ddd3 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLength = str.length();\n+    int searchLength = searchChars.length;\n+    int min = Character.MIN_VALUE;\n+    if (searchLength > 1) {\n+        for (int i = 0; i < strLength; i++) {\n+            int ch = str.charAt(i);\n+            if (ch >= min && ch <= Character.MAX_VALUE) {\n+                for (int j = 0; j < searchLength; j++) {\n+                    if (searchChars[j] == ch) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    } else if (searchLength == 1) {\n+        return StringUtils.indexOf(str, searchChars[0]) >= 0;\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}