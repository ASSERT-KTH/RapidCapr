{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nT enhancedMock = (T) Enhancer.create(\n        mock.getClass(),\n        TypeUtils.getAllInterfaces(mock.getClass()),\n        newFilter\n);\n((Factory) enhancedMock).setCallbacks(((Factory) mock).getCallbacks());\noldMockHandler.setMock(enhancedMock);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..f59a77416 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,17 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+T enhancedMock = (T) Enhancer.create(\n+        mock.getClass(),\n+        TypeUtils.getAllInterfaces(mock.getClass()),\n+        newFilter\n+);\n+((Factory) enhancedMock).setCallbacks(((Factory) mock).getCallbacks());\n+oldMockHandler.setMock(enhancedMock);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}