{
    "patch": "if (searchStr.isEmpty()) {\n    return true;\n}\nint strIndex = 0;\nint strLength = str.length();\nint searchIndex = 0;\nint searchLength = searchStr.length();\nwhile (strIndex < strLength && searchIndex < searchLength) {\n    char strChar = str.charAt(strIndex);\n    char searchChar = searchStr.charAt(searchIndex);\n    if (Character.toLowerCase(strChar) != Character.toLowerCase(searchChar)) {\n        strIndex -= searchIndex - 1;\n        searchIndex = 0;\n    } else {\n        searchIndex++;\n    }\n    strIndex++;\n}\nreturn searchIndex == searchLength;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..4bf124f3 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,25 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+if (searchStr.isEmpty()) {\n+    return true;\n+}\n+int strIndex = 0;\n+int strLength = str.length();\n+int searchIndex = 0;\n+int searchLength = searchStr.length();\n+while (strIndex < strLength && searchIndex < searchLength) {\n+    char strChar = str.charAt(strIndex);\n+    char searchChar = searchStr.charAt(searchIndex);\n+    if (Character.toLowerCase(strChar) != Character.toLowerCase(searchChar)) {\n+        strIndex -= searchIndex - 1;\n+        searchIndex = 0;\n+    } else {\n+        searchIndex++;\n+    }\n+    strIndex++;\n+}\n+return searchIndex == searchLength;\n     }\n \n     // IndexOfAny chars",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}