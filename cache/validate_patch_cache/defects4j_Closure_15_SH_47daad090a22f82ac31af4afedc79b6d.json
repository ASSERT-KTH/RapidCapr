{
    "patch": "        // Check if any child node has a side-effect\n        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n          if (apply(c)) {\n            return true;\n          }\n        }\n        return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..c3480f64 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,13 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        // Check if any child node has a side-effect\n+        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n+          if (apply(c)) {\n+            return true;\n+          }\n+        }\n+        return false;\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}