{
    "patch": "if (m == null && arg == null) {\n    return true;\n} else if (m == null || arg == null) {\n    return m == arg;\n} else {\n    try {\n        String mString = StringDescription.toString(m);\n        String argString = arg.toString();\n        if (mString == null || argString == null) {\n            return mString == argString;\n        } else {\n            return mString.equals(argString);\n        }\n    } catch (NullPointerException e) {\n        return m.matches(\"\\\\Q\" + String.valueOf(arg) + \"\\\\E\");\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..c62d8a635 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,24 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n+\n     private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n+if (m == null && arg == null) {\n+    return true;\n+} else if (m == null || arg == null) {\n+    return m == arg;\n+} else {\n+    try {\n+        String mString = StringDescription.toString(m);\n+        String argString = arg.toString();\n+        if (mString == null || argString == null) {\n+            return mString == argString;\n+        } else {\n+            return mString.equals(argString);\n+        }\n+    } catch (NullPointerException e) {\n+        return m.matches(\"\\\\Q\" + String.valueOf(arg) + \"\\\\E\");\n+    }\n+}\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}