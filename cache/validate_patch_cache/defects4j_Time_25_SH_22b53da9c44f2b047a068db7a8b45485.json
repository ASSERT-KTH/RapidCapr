{
    "patch": "                if ((offsetLocal - offsetAdjusted) < 0) {\n                    long prevTransition = previousTransition(instantAdjusted);\n                    long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n                    if (prevTransition != prevAdjusted) {\n                        return offsetLocal;\n                    }\n                    return offsetAdjusted;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..f9ea8b52 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    long prevTransition = previousTransition(instantAdjusted);\n+                    long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+                    if (prevTransition != prevAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                    return offsetAdjusted;\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}