{
    "patch": "// convert character to escape sequence\nprivate void convert(char ch, Writer out) throws IOException {\n    if (ch > 0xfff) {\n        out.write(\"\\\\u\"+hex(ch));\n    } else if (ch > 0xff) {\n        out.write(\"\\\\u0\"+hex(ch));\n    } else if (ch > 0x7f) {\n        out.write(\"\\\\u00\"+hex(ch));\n    } else if (ch < 32) {\n        switch (ch) {\n            case '\\b':\n                out.write('\\\\');\n                out.write('b');\n                break;\n            case '\\n':\n                out.write('\\\\');\n                out.write('n');\n\t\t        break;\n            case '\\t':\n                out.write('\\\\');\n                out.write('t');\n                break;\n            case '\\f':\n                out.write('\\\\');\n                out.write('f');\n                break;\n            case '\\r':\n                out.write('\\\\');\n                out.write('r');\n                break;\n            default:\n                if (ch > 0xf) {\n                    out.write(\"\\\\u00\"+hex(ch));\n                } else {\n                    out.write(\"\\\\u000\"+hex(ch));\n                }\n                break;\n        }\n    } else {\n        switch (ch) {\n            case '\\\"':\n                out.write('\\\\');\n                out.write('\\\"');\n                break;\n            case '\\\\':\n                out.write('\\\\');\n                out.write('\\\\');\n                break;\n            default:\n                out.write(ch);\n                break;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}