{
    "patch": "      if (NodeUtil.hasFinally(n)) {\n        Node finallyBlock = n.getLastChild();\n        tryMinimizeExits(finallyBlock, exitType, labelName);\n        if (finallyBlock.isBlock() && finallyBlock.hasChildren()) {\n          Node lastFinallyChild = finallyBlock.getLastChild();\n          if (lastFinallyChild.isBlock() && lastFinallyChild.hasChildren()) {\n            tryMinimizeExits(lastFinallyChild, exitType, labelName);\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..97ff337e 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -141,7 +141,12 @@ class MinimizeExitPoints\n       if (NodeUtil.hasFinally(n)) {\n         Node finallyBlock = n.getLastChild();\n         tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+        if (finallyBlock.isBlock() && finallyBlock.hasChildren()) {\n+          Node lastFinallyChild = finallyBlock.getLastChild();\n+          if (lastFinallyChild.isBlock() && lastFinallyChild.hasChildren()) {\n+            tryMinimizeExits(lastFinallyChild, exitType, labelName);\n+          }\n+        }\n     }\n \n     // Just a 'label'.",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}