{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null || result.isEmpty()) {\n        try {\n            throw new IllegalStateException(\"Recorded bad position information\");\n        } catch (IllegalStateException e) {\n            result = \"\";\n        }\n    }\n    result = result.trim();\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..f3726dff 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,18 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    if (result == null || result.isEmpty()) {\n+        try {\n+            throw new IllegalStateException(\"Recorded bad position information\");\n+        } catch (IllegalStateException e) {\n+            result = \"\";\n+        }\n+    }\n+    result = result.trim();\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}