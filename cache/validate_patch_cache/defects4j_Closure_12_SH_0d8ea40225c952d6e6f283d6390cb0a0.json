{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode.getNodeType() == Node.TRY_STATEMENT) {\n        TryStatement tryStmt = (TryStatement) cfgNode;\n        if (tryStmt.getCatchClauses().size() > 0) {\n            return true;\n        }\n    } \n    for (Node child : cfgNode.getChildren()) {\n        if (hasExceptionHandler(child)) {\n            return true;\n        }\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..d8d6dc73 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,20 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode.getNodeType() == Node.TRY_STATEMENT) {\n+        TryStatement tryStmt = (TryStatement) cfgNode;\n+        if (tryStmt.getCatchClauses().size() > 0) {\n+            return true;\n+        }\n+    } \n+    for (Node child : cfgNode.getChildren()) {\n+        if (hasExceptionHandler(child)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+  }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}