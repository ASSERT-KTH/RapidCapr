{
    "patch": "    public static boolean triples_sum_to_zero(int[] numbers) {\n        Arrays.sort(numbers);\n        for (int i = 0; i < numbers.length - 2; i += 1) {\n            int j = i + 1;\n            int k = numbers.length - 1;\n            while (j < k) {\n                if (numbers[i] + numbers[j] + numbers[k] == 0)\n                    return true;\n                else if (numbers[i] + numbers[j] + numbers[k] > 0)\n                    k -= 1;\n                else\n                    j += 1;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\nindex e851652..468901e 100644\n--- a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n+++ b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n@@ -19,12 +19,17 @@ False\n \n public class TRIPLES_SUM_TO_ZERO {\n     public static boolean triples_sum_to_zero(int[] numbers) {\n-        for (int i = 0; i < numbers.length; i += 1) {\n-            for (int j = i; j < numbers.length; j += 1) {\n-                for (int k = j; k < numbers.length; k += 1) {\n-                    if (numbers[i] + numbers[j] + numbers[k] == 0)\n-                        return true;\n-                }\n+        Arrays.sort(numbers);\n+        for (int i = 0; i < numbers.length - 2; i += 1) {\n+            int j = i + 1;\n+            int k = numbers.length - 1;\n+            while (j < k) {\n+                if (numbers[i] + numbers[j] + numbers[k] == 0)\n+                    return true;\n+                else if (numbers[i] + numbers[j] + numbers[k] > 0)\n+                    k -= 1;\n+                else\n+                    j += 1;\n             }\n         }\n         return false;",
    "result_reason": " /tmp/humaneval-TRIPLES_SUM_TO_ZERO/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java:[22,9] cannot find symbol",
    "test_result": "ERROR"
}