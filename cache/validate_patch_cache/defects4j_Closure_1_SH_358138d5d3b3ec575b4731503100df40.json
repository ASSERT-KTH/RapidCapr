{
    "patch": "          // Removing an unnamed parameter of an arrow function is illegal, but not a problem in this case\n          if (lastArg.isName() || lastArg.isAssign()) {\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n          } else {\n            return;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..be0c6ed8 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,13 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+          // Removing an unnamed parameter of an arrow function is illegal, but not a problem in this case\n+          if (lastArg.isName() || lastArg.isAssign()) {\n+            argList.removeChild(lastArg);\n+            compiler.reportCodeChange();\n+          } else {\n+            return;\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}