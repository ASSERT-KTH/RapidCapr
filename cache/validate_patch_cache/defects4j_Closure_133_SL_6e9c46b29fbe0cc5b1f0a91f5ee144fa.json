{
    "patch": "private String getRemainingJSDocLine() {\n  String result = null;\n  try {\n    result = stream.getRemainingJSDocLine().trim();\n  } catch (com.google.javascript.jscomp.JSCompInternalError e) {\n    throw new IllegalStateException(e);\n  }\n\n  if (result != null && result.startsWith(\"*\")) {\n    result = result.substring(1).trim();\n  }\n\n  if (result == null || result.isEmpty()) {\n    throw new IllegalStateException(\"Recorded bad position information\");\n  }\n\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..e978577d 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,24 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+  String result = null;\n+  try {\n+    result = stream.getRemainingJSDocLine().trim();\n+  } catch (com.google.javascript.jscomp.JSCompInternalError e) {\n+    throw new IllegalStateException(e);\n+  }\n+\n+  if (result != null && result.startsWith(\"*\")) {\n+    result = result.substring(1).trim();\n+  }\n+\n+  if (result == null || result.isEmpty()) {\n+    throw new IllegalStateException(\"Recorded bad position information\");\n+  }\n+\n+  return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}