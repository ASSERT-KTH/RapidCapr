{
    "patch": "public static String escapeJavaString(String st){\n    StringBuilder sb = new StringBuilder();\n    for (int i=0; i<st.length(); i++) {\n        char ch = st.charAt(i);\n        if (ch == '\\\\') {\n            sb.append(\"\\\\\\\\\");\n        } else if (ch == '\"') {\n            sb.append(\"\\\\\\\"\");\n        } else if (ch == '\\n') {\n            sb.append(\"\\\\n\");\n        } else if (ch == '\\r') {\n            sb.append(\"\\\\r\");\n        } else if (ch == '\\t') {\n            sb.append(\"\\\\t\");\n        } else if (ch >= 0x0000 && ch <= 0x001F) {\n            String hex = Integer.toHexString(ch);\n            while (hex.length() < 4) {\n                hex = \"0\" + hex;\n            }\n            sb.append(\"\\\\u\" + hex.toUpperCase());\n        } else if (ch >= 0xD800 && ch <= 0xDBFF) {\n            if (i+1 < st.length()) {\n                char nextCh = st.charAt(i+1);\n                if (nextCh >= 0xDC00 && nextCh <= 0xDFFF) {\n                    int codePoint = 0x10000 + ((int)ch - 0xD800) * 0x400 + ((int)nextCh - 0xDC00);\n                    String hex = Integer.toHexString(codePoint);\n                    while (hex.length() < 8) {\n                        hex = \"0\" + hex;\n                    }\n                    sb.append(\"\\\\U\" + hex.toUpperCase());\n                    i++;\n                } else {\n                    sb.append(ch);\n                }\n            } else {\n                sb.append(ch);\n            }\n        } else {\n            sb.append(ch);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..9b933fd0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,49 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escapeJavaString(String st){\n+    StringBuilder sb = new StringBuilder();\n+    for (int i=0; i<st.length(); i++) {\n+        char ch = st.charAt(i);\n+        if (ch == '\\\\') {\n+            sb.append(\"\\\\\\\\\");\n+        } else if (ch == '\"') {\n+            sb.append(\"\\\\\\\"\");\n+        } else if (ch == '\\n') {\n+            sb.append(\"\\\\n\");\n+        } else if (ch == '\\r') {\n+            sb.append(\"\\\\r\");\n+        } else if (ch == '\\t') {\n+            sb.append(\"\\\\t\");\n+        } else if (ch >= 0x0000 && ch <= 0x001F) {\n+            String hex = Integer.toHexString(ch);\n+            while (hex.length() < 4) {\n+                hex = \"0\" + hex;\n+            }\n+            sb.append(\"\\\\u\" + hex.toUpperCase());\n+        } else if (ch >= 0xD800 && ch <= 0xDBFF) {\n+            if (i+1 < st.length()) {\n+                char nextCh = st.charAt(i+1);\n+                if (nextCh >= 0xDC00 && nextCh <= 0xDFFF) {\n+                    int codePoint = 0x10000 + ((int)ch - 0xD800) * 0x400 + ((int)nextCh - 0xDC00);\n+                    String hex = Integer.toHexString(codePoint);\n+                    while (hex.length() < 8) {\n+                        hex = \"0\" + hex;\n+                    }\n+                    sb.append(\"\\\\U\" + hex.toUpperCase());\n+                    i++;\n+                } else {\n+                    sb.append(ch);\n+                }\n+            } else {\n+                sb.append(ch);\n+            }\n+        } else {\n+            sb.append(ch);\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}