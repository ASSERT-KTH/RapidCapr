{
    "patch": "public String unescapeUnicode(String input) {\n    StringBuilder sb = new StringBuilder(input.length());\n    for (int i = 0; i < input.length(); ) {\n        char ch = input.charAt(i);\n        if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 'u') {\n            try {\n                sb.append((char) Integer.parseInt(input.substring(i + 2, i + 6), 16));\n                i += 6;\n            } catch (NumberFormatException e) {\n                sb.append(ch);\n                i++;\n            }\n        } else if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 'r') {\n            sb.append('\\r');\n            i += 2;\n        } else if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 'n') {\n            sb.append('\\n');\n            i += 2;\n        } else if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 't') {\n            sb.append('\\t');\n            i += 2;\n        } else {\n            sb.append(ch);\n            i++;\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..871075bc 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,34 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String unescapeUnicode(String input) {\n+    StringBuilder sb = new StringBuilder(input.length());\n+    for (int i = 0; i < input.length(); ) {\n+        char ch = input.charAt(i);\n+        if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 'u') {\n+            try {\n+                sb.append((char) Integer.parseInt(input.substring(i + 2, i + 6), 16));\n+                i += 6;\n+            } catch (NumberFormatException e) {\n+                sb.append(ch);\n+                i++;\n+            }\n+        } else if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 'r') {\n+            sb.append('\\r');\n+            i += 2;\n+        } else if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 'n') {\n+            sb.append('\\n');\n+            i += 2;\n+        } else if (ch == '\\\\' && i < input.length() - 1 && input.charAt(i + 1) == 't') {\n+            sb.append('\\t');\n+            i += 2;\n+        } else {\n+            sb.append(ch);\n+            i++;\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}