{
    "patch": "    Calendar c = new GregorianCalendar(mTimeZone, getLocale());\n    c.setMinimalDaysInFirstWeek(4);\n    c.setFirstDayOfWeek(Calendar.MONDAY);\n    c.setTime(date);\n    int year = c.get(Calendar.YEAR);\n    int weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n    if (weekOfYear == 1 && c.get(Calendar.MONTH) == Calendar.DECEMBER) {\n        weekOfYear = 53;\n    } else if (weekOfYear >= 52 && c.get(Calendar.MONTH) == Calendar.JANUARY) {\n        weekOfYear = 0;\n    }\n    c.set(Calendar.YEAR, year);\n    c.set(Calendar.WEEK_OF_YEAR, weekOfYear);\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..69b41d9e 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -817,7 +817,20 @@ public class FastDateFormat extends Format {\n      * @return the formatted string\n      */\n     public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n+    Calendar c = new GregorianCalendar(mTimeZone, getLocale());\n+    c.setMinimalDaysInFirstWeek(4);\n+    c.setFirstDayOfWeek(Calendar.MONDAY);\n+    c.setTime(date);\n+    int year = c.get(Calendar.YEAR);\n+    int weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n+    if (weekOfYear == 1 && c.get(Calendar.MONTH) == Calendar.DECEMBER) {\n+        weekOfYear = 53;\n+    } else if (weekOfYear >= 52 && c.get(Calendar.MONTH) == Calendar.JANUARY) {\n+        weekOfYear = 0;\n+    }\n+    c.set(Calendar.YEAR, year);\n+    c.set(Calendar.WEEK_OF_YEAR, weekOfYear);\n+    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n         c.setTime(date);\n         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n     }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}