{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    // check if we are in a DST gap\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal != nextAdjusted) {\n        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n        long gapAdjustedEnd = nextAdjusted - offsetAdjusted;\n        if (instantLocal >= gapAdjustedEnd) {\n            return offsetLocal;\n        } else {\n            long prevLocal = previousTransition(instantAdjusted);\n            long gapLocalEnd = nextLocal - offsetLocal;\n            if (instantAdjusted >= gapLocalEnd) {\n                return offsetAdjusted;\n            } else if (prevLocal == prevAdjusted) {\n                return (offsetLocal < offsetAdjusted) ? offsetLocal : offsetAdjusted;\n            } else {\n                return (offsetLocal > offsetAdjusted) ? getOffset(prevAdjusted) : offsetAdjusted;\n            }\n        }\n    } else {\n        // we are not in a DST gap\n        return offsetAdjusted;\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1886fe30 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,32 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    // check if we are in a DST gap\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal != nextAdjusted) {\n+        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+        long gapAdjustedEnd = nextAdjusted - offsetAdjusted;\n+        if (instantLocal >= gapAdjustedEnd) {\n+            return offsetLocal;\n+        } else {\n+            long prevLocal = previousTransition(instantAdjusted);\n+            long gapLocalEnd = nextLocal - offsetLocal;\n+            if (instantAdjusted >= gapLocalEnd) {\n+                return offsetAdjusted;\n+            } else if (prevLocal == prevAdjusted) {\n+                return (offsetLocal < offsetAdjusted) ? offsetLocal : offsetAdjusted;\n+            } else {\n+                return (offsetLocal > offsetAdjusted) ? getOffset(prevAdjusted) : offsetAdjusted;\n+            }\n+        }\n+    } else {\n+        // we are not in a DST gap\n+        return offsetAdjusted;\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}