{
    "patch": "public String fixCode(String code) {\n    StringBuilder fixedCode = new StringBuilder(code);\n    int start = 0;\n    while (start < fixedCode.length()) {\n        int forIndex = fixedCode.indexOf(\"for(\", start);\n        if (forIndex == -1) {\n            break;\n        }\n        int inIndex = fixedCode.indexOf(\"in \", forIndex);\n        int semiIndex = fixedCode.indexOf(\";\", inIndex);\n        int openIndex = fixedCode.indexOf(\"{\", semiIndex);\n        int closeIndex = fixedCode.indexOf(\"}\", openIndex);\n        if (openIndex == -1 || closeIndex == -1) {\n            break;\n        }\n        String loopContent = fixedCode.substring(openIndex + 1, closeIndex);\n\n        String[] loopStatement = fixedCode.substring(forIndex + 4, inIndex).split(\";\");\n        String[] lhsRhs = loopStatement[0].trim().split(\"=\");\n        String varName = lhsRhs[0].trim();\n        String iterable = lhsRhs[1].trim();\n\n        String forLoop = String.format(\"for (%s : %s) { %s }\", varName, iterable, loopContent);\n        fixedCode.replace(forIndex, closeIndex + 1, forLoop);\n        start = forIndex + forLoop.length();\n    }\n    return fixedCode.toString(); \n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..ca61f5e7 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,34 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    StringBuilder fixedCode = new StringBuilder(code);\n+    int start = 0;\n+    while (start < fixedCode.length()) {\n+        int forIndex = fixedCode.indexOf(\"for(\", start);\n+        if (forIndex == -1) {\n+            break;\n+        }\n+        int inIndex = fixedCode.indexOf(\"in \", forIndex);\n+        int semiIndex = fixedCode.indexOf(\";\", inIndex);\n+        int openIndex = fixedCode.indexOf(\"{\", semiIndex);\n+        int closeIndex = fixedCode.indexOf(\"}\", openIndex);\n+        if (openIndex == -1 || closeIndex == -1) {\n+            break;\n+        }\n+        String loopContent = fixedCode.substring(openIndex + 1, closeIndex);\n+\n+        String[] loopStatement = fixedCode.substring(forIndex + 4, inIndex).split(\";\");\n+        String[] lhsRhs = loopStatement[0].trim().split(\"=\");\n+        String varName = lhsRhs[0].trim();\n+        String iterable = lhsRhs[1].trim();\n+\n+        String forLoop = String.format(\"for (%s : %s) { %s }\", varName, iterable, loopContent);\n+        fixedCode.replace(forIndex, closeIndex + 1, forLoop);\n+        start = forIndex + forLoop.length();\n+    }\n+    return fixedCode.toString(); \n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}