{
    "patch": "        try {\n            long newMillis = iMillis;\n            for (int i = 0; i < count; i++) {\n                int value = savedFields[i].iValue;\n                if (value == skippedWallTimeValue()) {\n                    DurationFieldType skippedField = savedFields[i].iField.getType();\n                    String message = \"Detected out of range value: \" + skippedField.getFieldName();\n                    if (text != null) {\n                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n                    }\n                    throw new IllegalFieldValueException(skippedField, text, message);\n                }\n                newMillis = savedFields[i].set(newMillis, resetFields);\n            }\n            millis = newMillis;\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1d83269c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            long newMillis = iMillis;\n+            for (int i = 0; i < count; i++) {\n+                int value = savedFields[i].iValue;\n+                if (value == skippedWallTimeValue()) {\n+                    DurationFieldType skippedField = savedFields[i].iField.getType();\n+                    String message = \"Detected out of range value: \" + skippedField.getFieldName();\n+                    if (text != null) {\n+                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n+                    }\n+                    throw new IllegalFieldValueException(skippedField, text, message);\n+                }\n+                newMillis = savedFields[i].set(newMillis, resetFields);\n+            }\n+            millis = newMillis;\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}