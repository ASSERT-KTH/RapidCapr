{
    "patch": "      ObjectType thisType = functionType.getTypeOfThis();\n\n      if (thisType != null) {\n        Node parent = n.getParent();\n        boolean insidePropAccess =\n            parent.isGetProp() && parent.getFirstChild() == n\n                || parent.isGetElem() && parent.getLastChild() == n;\n        if (!insidePropAccess) {\n          report(t, n, EXPLICIT_THIS, childType.toString());\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..4c9e9dfb 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      ObjectType thisType = functionType.getTypeOfThis();\n+\n+      if (thisType != null) {\n+        Node parent = n.getParent();\n+        boolean insidePropAccess =\n+            parent.isGetProp() && parent.getFirstChild() == n\n+                || parent.isGetElem() && parent.getLastChild() == n;\n+        if (!insidePropAccess) {\n+          report(t, n, EXPLICIT_THIS, childType.toString());\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}