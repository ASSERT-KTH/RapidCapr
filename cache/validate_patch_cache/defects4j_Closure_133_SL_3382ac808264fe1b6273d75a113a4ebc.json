{
    "patch": "// Fix null pointer exception: result can be null if getRemainingJSDocLine() returns null\nif (result == null) {\n  return \"\";\n}\n\n// Fix IllegalArgumentException: input == null -> ensure getRemainingJSDocLine() can never return null.\nif (stream.getRemainingJSDocLine() == null) {\n  return result;\n}\n\nString remainingJSDocLine = stream.getRemainingJSDocLine();\n\n// Fix jcw87#3529: jsc_type_parse_error on T extend (?:Foo|Bar)\n// Check if the remaining line contains \"@type\"\nif (remainingJSDocLine != null && remainingJSDocLine.contains(\"@type\")) {\n  // Append the remaining line to the result, but do not return yet\n  result = result.concat(remainingJSDocLine);\n}\n\n// Fix jcw87#3529: jsc_type_parse_error on T extend (?:Foo|Bar)\n// Check if the result already contains \"@type\", if so return it\nif (result != null && result.contains(\"@type\")) {\n  return result;\n}\n\n// Append the remaining line to the result\nresult = result.concat(remainingJSDocLine);\n\nreturn result;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..fa682714 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,35 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+// Fix null pointer exception: result can be null if getRemainingJSDocLine() returns null\n+if (result == null) {\n+  return \"\";\n+}\n+\n+// Fix IllegalArgumentException: input == null -> ensure getRemainingJSDocLine() can never return null.\n+if (stream.getRemainingJSDocLine() == null) {\n+  return result;\n+}\n+\n+String remainingJSDocLine = stream.getRemainingJSDocLine();\n+\n+// Fix jcw87#3529: jsc_type_parse_error on T extend (?:Foo|Bar)\n+// Check if the remaining line contains \"@type\"\n+if (remainingJSDocLine != null && remainingJSDocLine.contains(\"@type\")) {\n+  // Append the remaining line to the result, but do not return yet\n+  result = result.concat(remainingJSDocLine);\n+}\n+\n+// Fix jcw87#3529: jsc_type_parse_error on T extend (?:Foo|Bar)\n+// Check if the result already contains \"@type\", if so return it\n+if (result != null && result.contains(\"@type\")) {\n+  return result;\n+}\n+\n+// Append the remaining line to the result\n+result = result.concat(remainingJSDocLine);\n+\n+return result;\n     return result;\n   }\n ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}