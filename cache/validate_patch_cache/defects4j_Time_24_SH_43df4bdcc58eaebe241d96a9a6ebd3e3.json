{
    "patch": "            if (savedFields[i].iField.getType().equals(DateTimeFieldType.year()) &&\n                savedFields[i].getDifference() < 0) {\n                    throw new IllegalFieldValueException(DateTimeFieldType.year(), savedFields[i].getDifference());",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..5fa8d985 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,9 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType().equals(DateTimeFieldType.year()) &&\n+                savedFields[i].getDifference() < 0) {\n+                    throw new IllegalFieldValueException(DateTimeFieldType.year(), savedFields[i].getDifference());\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}