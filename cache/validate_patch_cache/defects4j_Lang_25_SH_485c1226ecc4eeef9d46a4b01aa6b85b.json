{
    "patch": "StringBuilder sb = new StringBuilder();\nfor (int i = 0; i < str.length(); i++) {\n    char ch = str.charAt(i);\n    if (ch <= 127) {\n        sb.append(ch);\n    } else if (ch <= 2047) {\n        sb.append((ch >> 6) | 0xC0); // Fix here, add parenthesis\n        sb.append((ch & 0x3F) | 0x80);\n    } else if (ch <= 65535) {\n        sb.append((ch >> 12) | 0xE0);\n        sb.append(((ch >> 6) & 0x3F) | 0x80);\n        sb.append((ch & 0x3F) | 0x80);\n    } else {\n        sb.append((ch >> 18) | 0xF0);\n        sb.append(((ch >> 12) & 0x3F) | 0x80);\n        sb.append(((ch >> 6) & 0x3F) | 0x80);\n        sb.append((ch & 0x3F) | 0x80);\n    }\n}\nString result = sb.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}