{
    "patch": "    if (offsetLocal < offsetAdjusted) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n        if (nextLocal == nextAdjusted) {\n            return offsetAdjusted;\n        }\n    } else if (offsetLocal > offsetAdjusted) {\n        long nextLocal = nextTransition(instantLocal - offsetAdjusted);\n        long nextAdjusted = nextTransition(instantAdjusted);\n        if (nextLocal == nextAdjusted) {\n            return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3a419b98 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,17 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+    if (offsetLocal < offsetAdjusted) {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+        if (nextLocal == nextAdjusted) {\n+            return offsetAdjusted;\n+        }\n+    } else if (offsetLocal > offsetAdjusted) {\n+        long nextLocal = nextTransition(instantLocal - offsetAdjusted);\n+        long nextAdjusted = nextTransition(instantAdjusted);\n+        if (nextLocal == nextAdjusted) {\n+            return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}