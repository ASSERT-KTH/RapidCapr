{
    "patch": "public static boolean containsAny(char[] str, char[] searchChars) {\n    if (searchChars == null || str == null) {\n        return false;\n    }\n    \n    int strLength = str.length;\n    int searchLength = searchChars.length;\n    \n    Set<Character> searchSet = new HashSet<>();\n    for (char c : searchChars) {\n        searchSet.add(c);\n    }\n    \n    for (int i = 0; i < strLength; i++) {\n        char ch = str[i];\n        if (Character.isHighSurrogate(ch) && i < strLength - 1) {\n            char ch2 = str[i + 1];\n            if (Character.isLowSurrogate(ch2)) {\n                ch = Character.toCodePoint(ch, ch2);\n                i++;\n            }\n        }\n        if (searchSet.contains(ch)) {\n            return true;\n        }\n    }\n    \n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..af84a0a9 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(char[] str, char[] searchChars) {\n+    if (searchChars == null || str == null) {\n+        return false;\n+    }\n+    \n+    int strLength = str.length;\n+    int searchLength = searchChars.length;\n+    \n+    Set<Character> searchSet = new HashSet<>();\n+    for (char c : searchChars) {\n+        searchSet.add(c);\n+    }\n+    \n+    for (int i = 0; i < strLength; i++) {\n+        char ch = str[i];\n+        if (Character.isHighSurrogate(ch) && i < strLength - 1) {\n+            char ch2 = str[i + 1];\n+            if (Character.isLowSurrogate(ch2)) {\n+                ch = Character.toCodePoint(ch, ch2);\n+                i++;\n+            }\n+        }\n+        if (searchSet.contains(ch)) {\n+            return true;\n+        }\n+    }\n+    \n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}