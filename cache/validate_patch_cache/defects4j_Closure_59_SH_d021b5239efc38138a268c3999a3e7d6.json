{
    "patch": "if (options.checkGlobalThisLevel == CheckLevel.OFF) {\n      // If checkGlobalThisLevel is off, disable this warning.\n      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n    } else if (options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) < 0) {\n      // If the language mode is earlier than ECMASCRIPT5, disable this warning.\n      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n    } else {\n      // Otherwise, set the warning level based on the checkGlobalThisLevel option.\n      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, options.checkGlobalThisLevel);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..580928eb 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,15 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel == CheckLevel.OFF) {\n+      // If checkGlobalThisLevel is off, disable this warning.\n+      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+    } else if (options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) < 0) {\n+      // If the language mode is earlier than ECMASCRIPT5, disable this warning.\n+      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+    } else {\n+      // Otherwise, set the warning level based on the checkGlobalThisLevel option.\n+      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, options.checkGlobalThisLevel);\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "junit.framework.AssertionFailedError: There should be one warning, repeated 2 time(s). expected:<2> but was:<0>",
    "test_result": "FAIL"
}