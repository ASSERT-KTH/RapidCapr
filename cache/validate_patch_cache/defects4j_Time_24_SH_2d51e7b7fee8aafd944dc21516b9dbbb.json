{
    "patch": "            if (savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n                int i = 0;\n                try {\n                    millis = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    i++;\n                    if (i >= count || savedFields[i].iField.getType() != DateTimeFieldType.weekyear()) {\n                        throw e;\n                    }\n                }\n            } else {\n                millis = savedFields[0].set(millis, resetFields);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b4b876a3 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n+                int i = 0;\n+                try {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    i++;\n+                    if (i >= count || savedFields[i].iField.getType() != DateTimeFieldType.weekyear()) {\n+                        throw e;\n+                    }\n+                }\n+            } else {\n+                millis = savedFields[0].set(millis, resetFields);\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-06-30T00:00:00.000+01:00> but was:<2010-01-01T00:00:00.000Z>",
    "test_result": "FAIL"
}