{
    "patch": "    public static <T> T[] addAll(T[] array1, T... array2) {\n        if (array1 == null && array2 == null) {\n            return null;\n        } else if (array1 == null && array2 != null) {\n            return array2.clone();\n        } else if (array1 != null && array2 == null) {\n            return array1.clone();\n        } else if (array1.getClass() != array2.getClass()) {\n            throw new IllegalArgumentException(\"Cannot add arrays of different types\");\n        } else {\n            final T[] joinedArray = Arrays.copyOf(array1, array1.length + array2.length);\n            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n            return joinedArray;\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java\nindex 889497e9..fda4b00e 100644\n--- a/src/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -2951,17 +2951,19 @@ public class ArrayUtils {\n      */\n     @SuppressWarnings(\"unchecked\")\n     public static <T> T[] addAll(T[] array1, T... array2) {\n-        if (array1 == null) {\n-            return clone(array2);\n-        } else if (array2 == null) {\n-            return clone(array1);\n-        }\n-        final Class<?> type1 = array1.getClass().getComponentType();\n-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n+        if (array1 == null && array2 == null) {\n+            return null;\n+        } else if (array1 == null && array2 != null) {\n+            return array2.clone();\n+        } else if (array1 != null && array2 == null) {\n+            return array1.clone();\n+        } else if (array1.getClass() != array2.getClass()) {\n+            throw new IllegalArgumentException(\"Cannot add arrays of different types\");\n+        } else {\n+            final T[] joinedArray = Arrays.copyOf(array1, array1.length + array2.length);\n             System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n-            // Check if problem is incompatible types\n-        return joinedArray;\n+            return joinedArray;\n+        }\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}