{
    "patch": "public double getTypedPercent(String js) {\n    int num = 0;\n    int den = 0;\n    for (int i = 0; i < js.length() - 2; i++) {\n        if (js.charAt(i) == '\\'' && js.charAt(i+2) == '\\'') {\n            den++;\n            if (js.charAt(i+1) != '?') {\n                num++;\n            }\n        }\n    }\n    if (den == 0) {\n        return 100.0;\n    } else {\n        return (double) num / den * 100.0;\n    } \n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a0c45933 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    int num = 0;\n+    int den = 0;\n+    for (int i = 0; i < js.length() - 2; i++) {\n+        if (js.charAt(i) == '\\'' && js.charAt(i+2) == '\\'') {\n+            den++;\n+            if (js.charAt(i+1) != '?') {\n+                num++;\n+            }\n+        }\n+    }\n+    if (den == 0) {\n+        return 100.0;\n+    } else {\n+        return (double) num / den * 100.0;\n+    } \n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}