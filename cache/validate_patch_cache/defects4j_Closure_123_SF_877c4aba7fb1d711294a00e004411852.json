{
    "patch": "public static String fixBug(String original, String fix) {\n    try {\n        ASTParser parser = ASTParser.newParser(AST.JLS3);\n        parser.setSource(original.toCharArray());\n        CompilationUnit cu = (CompilationUnit) parser.createAST(null);\n        ASTNode node = cu.findDeclaringNode(\"foo\");\n        IFix fixer = new ReplaceASTNode(node, fix);\n        Fix-It framework = new Fix-It();\n        framework.applyFix(fixer);\n        return framework.getFixedSource();\n    } catch (Exception e) {\n        return \"Error: \" + e.getMessage();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..a60f753d 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,20 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixBug(String original, String fix) {\n+    try {\n+        ASTParser parser = ASTParser.newParser(AST.JLS3);\n+        parser.setSource(original.toCharArray());\n+        CompilationUnit cu = (CompilationUnit) parser.createAST(null);\n+        ASTNode node = cu.findDeclaringNode(\"foo\");\n+        IFix fixer = new ReplaceASTNode(node, fix);\n+        Fix-It framework = new Fix-It();\n+        framework.applyFix(fixer);\n+        return framework.getFixedSource();\n+    } catch (Exception e) {\n+        return \"Error: \" + e.getMessage();\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}