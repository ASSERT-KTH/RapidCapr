{
    "patch": "public double getTypedPercent(String json) {\n  Gson gson = new Gson();\n  Map<String, Object> data = gson.fromJson(json, Map.class);\n  double dynamicTypedCount = ((Double) data.get(\"dynamicTypedCount\")).doubleValue();\n  double staticTypedCount = ((Double) data.get(\"staticTypedCount\")).doubleValue();\n  double total = dynamicTypedCount + staticTypedCount;\n  return total == 0 ? 0 : (staticTypedCount / total) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..569b82d9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String json) {\n+  Gson gson = new Gson();\n+  Map<String, Object> data = gson.fromJson(json, Map.class);\n+  double dynamicTypedCount = ((Double) data.get(\"dynamicTypedCount\")).doubleValue();\n+  double staticTypedCount = ((Double) data.get(\"staticTypedCount\")).doubleValue();\n+  double total = dynamicTypedCount + staticTypedCount;\n+  return total == 0 ? 0 : (staticTypedCount / total) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}