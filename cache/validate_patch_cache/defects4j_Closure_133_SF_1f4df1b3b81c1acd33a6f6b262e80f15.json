{
    "patch": "private String getRemainingJSDocLine() {\n    if (stream == null) {\n        return null;\n    }\n    String result = \"\";\n    String prevResult = \"\";\n    while ((prevResult == null || prevResult.contains(\"*\")) && (result = stream.getRemainingJSDocLine()) != null) {\n        prevResult = result.trim();     // keep track of previous result before trimming\n        result = result.trim().replaceAll(\"^\\\\*+\", \"\").trim();\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..12e62709 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,18 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    if (stream == null) {\n+        return null;\n+    }\n+    String result = \"\";\n+    String prevResult = \"\";\n+    while ((prevResult == null || prevResult.contains(\"*\")) && (result = stream.getRemainingJSDocLine()) != null) {\n+        prevResult = result.trim();     // keep track of previous result before trimming\n+        result = result.trim().replaceAll(\"^\\\\*+\", \"\").trim();\n+    }\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_TYPE_PARSE_ERROR. Bad type annotation. Unknown type T at externs line 11 : 14",
    "test_result": "FAIL"
}