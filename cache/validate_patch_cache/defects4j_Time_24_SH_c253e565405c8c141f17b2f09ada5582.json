{
    "patch": "        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            // handle specially\n            // dayOfCommonEra computationally determines the year.\n            // there are only two valid years.\n            if (e.getIllegalFieldType() == DateTimeFieldType.dayOfYear()) {\n                long day = (Long) e.getIllegalFieldValue();\n                if (day == 366 && DateTime.isLeapYear(iDefaultYear + 1)) {\n                    saveField(DateTimeFieldType.dayOfYear(), 365);\n                    saveField(DateTimeFieldType.year(), iDefaultYear + 1);\n                } else if (day == 366 && !DateTime.isLeapYear(iDefaultYear + 1)) {\n                    e.prependMessage(\"Invalid date '\").appendMessage(\"' as '\");\n                    e.appendToMessage(iDefaultYear + 1).appendToMessage(\"' is not a leap year\");\n                    throw e;\n                } else if (day == 365 && DateTime.isLeapYear(iDefaultYear)) {\n                    e.prependMessage(\"Invalid date '\").appendMessage(\"' as '\");\n                    e.appendToMessage(iDefaultYear).appendToMessage(\"' is a leap year\");\n                    throw e;\n                } else if (day == 365 && !DateTime.isLeapYear(iDefaultYear)) {\n                    saveField(DateTimeFieldType.dayOfYear(), day);\n                } else {\n                    throw e;\n                }\n            } else {\n                throw e;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..7cacfc8b 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,35 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            // handle specially\n+            // dayOfCommonEra computationally determines the year.\n+            // there are only two valid years.\n+            if (e.getIllegalFieldType() == DateTimeFieldType.dayOfYear()) {\n+                long day = (Long) e.getIllegalFieldValue();\n+                if (day == 366 && DateTime.isLeapYear(iDefaultYear + 1)) {\n+                    saveField(DateTimeFieldType.dayOfYear(), 365);\n+                    saveField(DateTimeFieldType.year(), iDefaultYear + 1);\n+                } else if (day == 366 && !DateTime.isLeapYear(iDefaultYear + 1)) {\n+                    e.prependMessage(\"Invalid date '\").appendMessage(\"' as '\");\n+                    e.appendToMessage(iDefaultYear + 1).appendToMessage(\"' is not a leap year\");\n+                    throw e;\n+                } else if (day == 365 && DateTime.isLeapYear(iDefaultYear)) {\n+                    e.prependMessage(\"Invalid date '\").appendMessage(\"' as '\");\n+                    e.appendToMessage(iDefaultYear).appendToMessage(\"' is a leap year\");\n+                    throw e;\n+                } else if (day == 365 && !DateTime.isLeapYear(iDefaultYear)) {\n+                    saveField(DateTimeFieldType.dayOfYear(), day);\n+                } else {\n+                    throw e;\n+                }\n+            } else {\n+                throw e;\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}