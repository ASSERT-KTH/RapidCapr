{
    "patch": "        copy.data = (List<TimeSeriesDataItem>) ((ArrayList<TimeSeriesDataItem>) this.data).clone();\n        if (this.data.size() > 0) {\n            for (int index = 0; index < copy.data.size(); index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) copy.data.get(index);\n                if ((item.getPeriod().getSerialIndex() < start)\n                        || (item.getPeriod().getSerialIndex() > end)) {\n                    copy.data.remove(index);\n                    index--;\n                } else {\n                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                    copy.data.set(index, clone);\n                }\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..47c24fd 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,20 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = (List<TimeSeriesDataItem>) ((ArrayList<TimeSeriesDataItem>) this.data).clone();\n+        if (this.data.size() > 0) {\n+            for (int index = 0; index < copy.data.size(); index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) copy.data.get(index);\n+                if ((item.getPeriod().getSerialIndex() < start)\n+                        || (item.getPeriod().getSerialIndex() > end)) {\n+                    copy.data.remove(index);\n+                    index--;\n+                } else {\n+                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                    copy.data.set(index, clone);\n+                }\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}