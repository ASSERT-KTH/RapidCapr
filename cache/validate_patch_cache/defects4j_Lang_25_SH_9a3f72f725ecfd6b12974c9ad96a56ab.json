{
    "patch": "if(c=='\"') {\n    buff.append(\"\\\\\\\"\");\n} else if(c=='\\\\') {\n    buff.append(\"\\\\\\\\\");\n} else if(c=='/') {\n    buff.append(\"\\\\/\");\n} else if(c=='\\b') {\n    buff.append(\"\\\\b\");\n} else if(c=='\\f') {\n    buff.append(\"\\\\f\");\n} else if(c=='\\n') {\n    buff.append(\"\\\\n\");\n} else if(c=='\\r') {\n    buff.append(\"\\\\r\");\n} else if(c=='\\t') {\n    buff.append(\"\\\\t\");\n} else if(c < 32 || c > 126) {\n    // use Unicode representation\n    hex = Integer.toHexString(c);\n    buff.append(\"\\\\u\");\n    // pad with leading zeros\n    for(int j=0;j<4-hex.length();j++) {\n        buff.append(\"0\");\n    }\n    buff.append(hex);\n} else {\n    buff.append(c);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}