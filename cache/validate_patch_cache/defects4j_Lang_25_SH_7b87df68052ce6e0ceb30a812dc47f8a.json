{
    "patch": "public static String escape(String s,String enc) {\n    boolean needToChange = false;\n    StringBuffer out = new StringBuffer(s.length());\n    Charset charset;\n    CharsetEncoder encoder;\n    ByteBuffer bb;\n    CharBuffer cb = null;\n\n    if (enc == null) {\n        throw new NullPointerException(\"charsetName\");\n    }\n\n    try {\n        charset = Charset.forName(enc);\n    } catch (IllegalArgumentException ex) {\n        throw new UnsupportedEncodingException(enc);\n    }\n    encoder = charset.newEncoder();\n\n    for (int i = 0; i < s.length(); ) {\n        char c = s.charAt(i);\n        if (dontNeedEncoding(c)) {\n            out.append(c);\n            i++;\n            continue;\n        }\n\n        // You need an entire new set of code to do the encoding,\n        // because URLEncoder isn't doing what we want.\n        bb = ByteBuffer.allocate(64);\n        cb = CharBuffer.wrap(s.substring(i, i + 1));\n        encoder.reset();\n        encoder.encode(cb, bb, true);\n        encoder.flush(bb);\n        needToChange = true;\n\n        byte[] ba = new byte[bb.position()];\n        bb.flip();\n        bb.get(ba);\n        \n        for(int j=0; j<ba.length; j++) {\n            out.append('%');\n            char ch = forDigit((ba[j] >> 4) & 0xF, 16);\n            // converting to use uppercase letter as part of\n            // the hex value if ch is a letter.\n            if (isLetter(ch)) {\n                ch -= caseDiff;\n            }\n            out.append(ch);\n            ch = forDigit(ba[j] & 0xF, 16);\n            if (isLetter(ch)) {\n                ch -= caseDiff;\n            }\n            out.append(ch);\n        }\n        i++;\n    }\n\n    return (needToChange? out.toString() : s);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}