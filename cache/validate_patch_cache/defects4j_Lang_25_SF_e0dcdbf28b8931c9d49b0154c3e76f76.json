{
    "patch": "public String iso8859_1_escape(String data) {\n        StringBuilder escaped = new StringBuilder();\n        for (int i = 0; i < data.length(); i++) {\n            char c = data.charAt(i);\n            if (c >= 160 && c <= 255) {\n                escaped.append(\"\\\\\");\n                escaped.append((int) c);\n            } else {\n                escaped.append(c);\n            }\n        }\n        return escaped.toString();\n   }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..448501fd 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,19 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String iso8859_1_escape(String data) {\n+        StringBuilder escaped = new StringBuilder();\n+        for (int i = 0; i < data.length(); i++) {\n+            char c = data.charAt(i);\n+            if (c >= 160 && c <= 255) {\n+                escaped.append(\"\\\\\");\n+                escaped.append((int) c);\n+            } else {\n+                escaped.append(c);\n+            }\n+        }\n+        return escaped.toString();\n+   }\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}