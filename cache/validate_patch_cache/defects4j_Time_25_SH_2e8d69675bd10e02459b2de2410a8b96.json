{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long prevAdjusted = previousTransition(instantAdjusted);\n                long prevLocal = previousTransition(instantLocal - offsetLocal);\n                if (prevAdjusted != prevLocal) {\n                    return offsetLocal;\n                }\n            } else {\n                long nextAdjusted = nextTransition(instantAdjusted);\n                long nextLocal = nextTransition(instantLocal - offsetAdjusted);\n                if (nextAdjusted != nextLocal) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8896859a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long prevAdjusted = previousTransition(instantAdjusted);\n+                long prevLocal = previousTransition(instantLocal - offsetLocal);\n+                if (prevAdjusted != prevLocal) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long nextAdjusted = nextTransition(instantAdjusted);\n+                long nextLocal = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextAdjusted != nextLocal) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}