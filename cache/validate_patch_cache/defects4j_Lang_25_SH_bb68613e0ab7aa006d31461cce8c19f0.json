{
    "patch": "StringBuilder sb = new StringBuilder(input.length());\nfor (int i = 0; i < input.length();) {\n    char c = input.charAt(i);\n    if (c == '\\\\') {\n        if (input.length() > i + 5 && input.charAt(i + 1) == 'u') {\n            char tmp = (char) Integer.parseInt(input.substring(i + 2, i + 6), 16);\n            sb.append(tmp);\n            i += 6;\n        } else if (input.length() > i + 1) {\n            char tmp = translateEscapedChar(input.charAt(i + 1));\n            sb.append(tmp);\n            i += 2;\n        } else {\n            sb.append(c);\n            i++;\n        }\n    } else {\n        sb.append(c);\n        i++;\n    }\n}\nString result = sb.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}