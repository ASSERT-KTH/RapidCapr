{
    "patch": "public static double regularizedGamma(double a, double x) {\n    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n        return Double.NaN;\n    }\n    if (x == 0.0) {\n        return 0.0;\n    }    \n    \n    double d = 0.0;\n    double c = Double.POSITIVE_INFINITY;\n    double sum = 1.0 / a;\n    double del = sum;\n    while (Math.abs(del) > Math.abs(sum) * 1.0e-15 && d < 1000.0) {\n        d += 1.0;\n        del *= x / (a + d);\n        sum += del;\n        if (Math.abs(del) < Math.abs(sum) * 1.0e-15) {\n            return sum * Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a));\n        }\n        if (sum > 1.0e25) {\n            return Double.POSITIVE_INFINITY;\n        }\n        if (del < c) {\n            c = del;\n        } else if (c - del < 1.0e-15 * del) {\n            return sum * Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a));\n        }\n    }\n    return sum * Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..dfe07a6b9 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,36 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n+        return Double.NaN;\n+    }\n+    if (x == 0.0) {\n+        return 0.0;\n+    }    \n+    \n+    double d = 0.0;\n+    double c = Double.POSITIVE_INFINITY;\n+    double sum = 1.0 / a;\n+    double del = sum;\n+    while (Math.abs(del) > Math.abs(sum) * 1.0e-15 && d < 1000.0) {\n+        d += 1.0;\n+        del *= x / (a + d);\n+        sum += del;\n+        if (Math.abs(del) < Math.abs(sum) * 1.0e-15) {\n+            return sum * Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a));\n+        }\n+        if (sum > 1.0e25) {\n+            return Double.POSITIVE_INFINITY;\n+        }\n+        if (del < c) {\n+            c = del;\n+        } else if (c - del < 1.0e-15 * del) {\n+            return sum * Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a));\n+        }\n+    }\n+    return sum * Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}