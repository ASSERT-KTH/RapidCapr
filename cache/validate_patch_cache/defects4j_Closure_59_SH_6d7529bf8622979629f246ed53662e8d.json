{
    "patch": "if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n      if (options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) >= 0) {\n        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, options.checkGlobalThisLevel);\n      } else {\n        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n        errorManager.report(MESSAGE_GROUP_NOT_SUPPORTED_WARNING);\n      }\n    } else {\n      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..41e568f0 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,15 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n+      if (options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) >= 0) {\n+        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, options.checkGlobalThisLevel);\n+      } else {\n+        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+        errorManager.report(MESSAGE_GROUP_NOT_SUPPORTED_WARNING);\n+      }\n+    } else {\n+      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}