{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    NodeList<Node> children = cfgNode.getChildNodes();\n    for (Node child : children) {\n      if (child.getNodeType() == Node.TRY_STATEMENT) {\n        NodeList<Node> tryChildren = child.getChildNodes();\n        for (Node tryChild : tryChildren) {\n          if (tryChild.getNodeType() == Node.CATCH_CLAUSE) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..de817695 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,20 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+    NodeList<Node> children = cfgNode.getChildNodes();\n+    for (Node child : children) {\n+      if (child.getNodeType() == Node.TRY_STATEMENT) {\n+        NodeList<Node> tryChildren = child.getChildNodes();\n+        for (Node tryChild : tryChildren) {\n+          if (tryChild.getNodeType() == Node.CATCH_CLAUSE) {\n+            return true;\n+          }\n+        }\n+      }\n+    }\n+    return false;\n+  }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}