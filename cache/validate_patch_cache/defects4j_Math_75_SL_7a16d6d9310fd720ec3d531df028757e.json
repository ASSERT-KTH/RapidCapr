{
    "patch": "        if (v instanceof Comparable) {\n            return getCumPct((Comparable<?>) v);\n        } else if (v instanceof String){\n            try {\n                return getCumPct((Comparable<?>) Integer.parseInt((String) v));\n            } catch (NumberFormatException e) {\n                return 0.0;\n            }\n        } else {\n            return 0.0;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..7a7f41576 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,17 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+        if (v instanceof Comparable) {\n+            return getCumPct((Comparable<?>) v);\n+        } else if (v instanceof String){\n+            try {\n+                return getCumPct((Comparable<?>) Integer.parseInt((String) v));\n+            } catch (NumberFormatException e) {\n+                return 0.0;\n+            }\n+        } else {\n+            return 0.0;\n+        }\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>",
    "test_result": "FAIL"
}