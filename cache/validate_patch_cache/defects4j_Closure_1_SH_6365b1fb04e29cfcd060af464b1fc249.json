{
    "patch": "    if (NodeUtil.isGetOrSetKey(function.getParent())\n        || function.getBooleanProp(Node.ANONYMOUS_FUNCTION)) {\n      // The parameters object literal setters can not be removed.\n      // Also, don't remove unused params from an anonymous function,\n      // otherwise functions used in the form (function (unusedParam) { ...})(value)\n      // will change the meaning of `this` and cause bugs.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n      Node lastArg = argList.getLastChild();\n      while (lastArg != null && !referenced.contains(fnScope.getVarLastDefinedBy(lastArg))) {\n        if (!NodeUtil.isRest(lastArg)) {\n          argList.removeChild(lastArg);\n          compiler.reportCodeChange();\n        }\n        lastArg = argList.getLastChild();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..80a26149 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,27 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    if (NodeUtil.isGetOrSetKey(function.getParent())\n+        || function.getBooleanProp(Node.ANONYMOUS_FUNCTION)) {\n+      // The parameters object literal setters can not be removed.\n+      // Also, don't remove unused params from an anonymous function,\n+      // otherwise functions used in the form (function (unusedParam) { ...})(value)\n+      // will change the meaning of `this` and cause bugs.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+      Node lastArg = argList.getLastChild();\n+      while (lastArg != null && !referenced.contains(fnScope.getVarLastDefinedBy(lastArg))) {\n+        if (!NodeUtil.isRest(lastArg)) {\n+          argList.removeChild(lastArg);\n+          compiler.reportCodeChange();\n+        }\n+        lastArg = argList.getLastChild();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}