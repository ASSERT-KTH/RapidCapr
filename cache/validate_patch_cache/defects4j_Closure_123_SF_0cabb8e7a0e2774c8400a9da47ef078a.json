{
    "patch": "public static String fixCode(String code) {\n    String fixedCode = code;\n    Pattern pattern = Pattern.compile(\"for(.*);\");\n    Matcher matcher = pattern.matcher(fixedCode);\n    while (matcher.find()) {\n        String forLoop = matcher.group(0);\n        int index = forLoop.indexOf(\"in\");\n        if (index > 0) {\n            String variable = forLoop.substring(forLoop.indexOf(\"(\") + 1, index - 1);\n            String collection = forLoop.substring(index + 3, forLoop.indexOf(\")\"));\n            String replacement = \"for(\" + variable + \":\" + collection + \")\";\n            fixedCode = fixedCode.replace(forLoop, replacement);\n        }\n    }\n    return fixedCode;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..a8f4c95b 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,22 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String fixedCode = code;\n+    Pattern pattern = Pattern.compile(\"for(.*);\");\n+    Matcher matcher = pattern.matcher(fixedCode);\n+    while (matcher.find()) {\n+        String forLoop = matcher.group(0);\n+        int index = forLoop.indexOf(\"in\");\n+        if (index > 0) {\n+            String variable = forLoop.substring(forLoop.indexOf(\"(\") + 1, index - 1);\n+            String collection = forLoop.substring(index + 3, forLoop.indexOf(\")\"));\n+            String replacement = \"for(\" + variable + \":\" + collection + \")\";\n+            fixedCode = fixedCode.replace(forLoop, replacement);\n+        }\n+    }\n+    return fixedCode;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}