{
    "patch": "public static String escapeISO8859_1(String str) {\n    if (str == null) {\n        return null;\n    }\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < str.length(); i++) {\n        char c = str.charAt(i);\n        switch (c) {\n            case '\\u00E4':\n                sb.append(\"&auml;\");\n                break;\n            case '\\u00F6':\n                sb.append(\"&ouml;\");\n                break;\n            case '\\u00FC':\n                sb.append(\"&uuml;\");\n                break;\n            case '\\u00C4':\n                sb.append(\"&Auml;\");\n                break;\n            case '\\u00D6':\n                sb.append(\"&Ouml;\");\n                break;\n            case '\\u00DC':\n                sb.append(\"&Uuml;\");\n                break;\n            case '\\u00DF':\n                sb.append(\"&szlig;\");\n                break;\n            default:\n                sb.append(c);\n                break;\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..b53c2a83 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,42 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escapeISO8859_1(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    StringBuffer sb = new StringBuffer();\n+    for (int i = 0; i < str.length(); i++) {\n+        char c = str.charAt(i);\n+        switch (c) {\n+            case '\\u00E4':\n+                sb.append(\"&auml;\");\n+                break;\n+            case '\\u00F6':\n+                sb.append(\"&ouml;\");\n+                break;\n+            case '\\u00FC':\n+                sb.append(\"&uuml;\");\n+                break;\n+            case '\\u00C4':\n+                sb.append(\"&Auml;\");\n+                break;\n+            case '\\u00D6':\n+                sb.append(\"&Ouml;\");\n+                break;\n+            case '\\u00DC':\n+                sb.append(\"&Uuml;\");\n+                break;\n+            case '\\u00DF':\n+                sb.append(\"&szlig;\");\n+                break;\n+            default:\n+                sb.append(c);\n+                break;\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}