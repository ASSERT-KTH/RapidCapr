{
    "patch": "Type[] bounds = typeVariable.getBounds();\nif(bounds.length > 0 && bounds[0] instanceof ParameterizedType){\n    registerTypeVariablesOn(getActualTypeArgumentFor((ParameterizedType) bounds[0]));\n} else if(bounds.length > 0 && bounds[0] instanceof TypeVariable) {\n    registerTypeVariablesOn(bounds[0]);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..5c5dcb9d7 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,17 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] bounds = typeVariable.getBounds();\n+if(bounds.length > 0 && bounds[0] instanceof ParameterizedType){\n+    registerTypeVariablesOn(getActualTypeArgumentFor((ParameterizedType) bounds[0]));\n+} else if(bounds.length > 0 && bounds[0] instanceof TypeVariable) {\n+    registerTypeVariablesOn(bounds[0]);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: incompatible types: ParameterizedType cannot be converted to TypeVariable",
    "test_result": "ERROR"
}