{
    "patch": "copy.data = new java.util.ArrayList();\n\nif (end > getItemCount()-1){\n    end = getItemCount()-1;\n}\n\nif (start >= getItemCount()-1 || start > end){\n\treturn copy;\n}\n\nfor (int i = start; i <= end; i++) {\n    TimeSeriesDataItem item = (TimeSeriesDataItem)getDataItem(i).clone();\n    try {\n        copy.add(item);\n    } catch (SeriesException e) {\n        e.printStackTrace();\n    }\n}\n\nreturn copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..42d035f 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,26 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+\n+if (end > getItemCount()-1){\n+    end = getItemCount()-1;\n+}\n+\n+if (start >= getItemCount()-1 || start > end){\n+\treturn copy;\n+}\n+\n+for (int i = start; i <= end; i++) {\n+    TimeSeriesDataItem item = (TimeSeriesDataItem)getDataItem(i).clone();\n+    try {\n+        copy.add(item);\n+    } catch (SeriesException e) {\n+        e.printStackTrace();\n+    }\n+}\n+\n+return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}