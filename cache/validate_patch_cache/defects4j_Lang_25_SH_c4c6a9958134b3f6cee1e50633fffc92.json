{
    "patch": "ByteArrayOutputStream buf = new ByteArrayOutputStream();\nint count = 0;\nfor (int i = 0; i < data.length(); i++) {\n    char c = data.charAt(i);\n    if (c == '\\\\') {\n        if (++i >= data.length()) { // (1)\n            throw new IllegalArgumentException(\n                    \"Invalid escape sequence at end of input: \\\\\" + c);\n        }\n        c = data.charAt(i);\n        switch (c) {\n        case 'r':\n            buf.write('\\r');\n            break;\n        case 'n':\n            buf.write('\\n');\n            break;\n        case 't':\n            buf.write('\\t');\n            break;\n        case 'f':\n            buf.write('\\f');\n            break;\n        case 'b':\n            buf.write('\\b');\n            break;\n        case '\"':\n        case '\\'':\n        case '/':\n        case '\\\\':\n            buf.write(c);\n            break;\n        case 'u':\n            if (i + 4 >= data.length()) { // (2)\n                throw new IllegalArgumentException(\n                        \"Invalid escape sequence at end of input: \\\\u\");\n            }\n            try {\n                buf.write(Integer.parseInt(data.substring(i + 1, i + 5), 16));\n            } catch (NumberFormatException e) {\n                throw new IllegalArgumentException(\n                        \"Invalid Unicode escape sequence at position \" + i + \": \" + data.substring(i, i + 5));\n            }\n            i += 4;\n            break;\n        default:\n            throw new IllegalArgumentException(\"Unrecognized escape sequence at position \" + i + \": \\\\\" + c);\n        }\n    } else {\n        buf.write(c);\n    }\n    count++;\n}\nbyte[] rawBytes = buf.toByteArray();\nString result = null;\ntry {\n    result = new String(rawBytes, \"ISO-8859-1\");\n} catch (UnsupportedEncodingException e) {\n    // (3)\n    result = new String(rawBytes);\n}\nboolean success = result.equals(expected);\nassertTrue(\"One or more errors detected\", success);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}