{
    "patch": "    List<Node> paramsToRemove = new ArrayList<>();\n    for (Node arg : argList.children()) {\n      if (!arg.isName()) {\n        continue;\n      }\n      // We don't remove unused \"this\" or arguments that have an inline\n      // default value because that would change the execution order.\n      if (\"this\".equals(arg.getString())) {\n        continue;\n      }\n      Var var = fnScope.getVar(arg.getString());\n      if (var == null || var.isParam()) {\n        if (!referenced.contains(var)) {\n          paramsToRemove.add(arg);\n        }\n      }\n    }\n    for (Node toRemove : paramsToRemove) {\n      argList.removeChild(toRemove);\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..7433a28a 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,26 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> paramsToRemove = new ArrayList<>();\n+    for (Node arg : argList.children()) {\n+      if (!arg.isName()) {\n+        continue;\n+      }\n+      // We don't remove unused \"this\" or arguments that have an inline\n+      // default value because that would change the execution order.\n+      if (\"this\".equals(arg.getString())) {\n+        continue;\n+      }\n+      Var var = fnScope.getVar(arg.getString());\n+      if (var == null || var.isParam()) {\n+        if (!referenced.contains(var)) {\n+          paramsToRemove.add(arg);\n+        }\n+      }\n+    }\n+    for (Node toRemove : paramsToRemove) {\n+      argList.removeChild(toRemove);\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}