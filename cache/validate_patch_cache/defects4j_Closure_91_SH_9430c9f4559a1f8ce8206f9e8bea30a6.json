{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      Node grandparent = parent.getParent();\n      if (grandparent.getType() == Token.ASSIGN && NodeUtil.isGet(parent)) {\n          Node assignmentsLhs = grandparent.getFirstChild();\n          if (assignmentsLhs.getType() == Token.GETPROP &&\n              assignmentsLhs.getLastChild().getString().equals(\"prototype\")) {\n            return false;\n          }\n      } else if (jsDoc != null && jsDoc.isConstructor()) {\n          return parent.getNext() != null && parent.getNext().getType() == Token.NEW;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..14824867 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = parent.getParent();\n+      if (grandparent.getType() == Token.ASSIGN && NodeUtil.isGet(parent)) {\n+          Node assignmentsLhs = grandparent.getFirstChild();\n+          if (assignmentsLhs.getType() == Token.GETPROP &&\n+              assignmentsLhs.getLastChild().getString().equals(\"prototype\")) {\n+            return false;\n+          }\n+      } else if (jsDoc != null && jsDoc.isConstructor()) {\n+          return parent.getNext() != null && parent.getNext().getType() == Token.NEW;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}