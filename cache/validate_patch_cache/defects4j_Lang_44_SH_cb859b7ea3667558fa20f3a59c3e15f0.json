{
    "patch": "if (val.startsWith(\"-\")) {\n    if (val.length() == 1) {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    }\n    if (val.length() == 2 && val.charAt(1) == '0') {\n        return createInteger(val);\n    }\n    if (val.charAt(1) == '0') {\n        // octal or hex\n        return createInteger(val);\n    }\n    for (int i = 1; i < val.length(); i++) {\n        if (!Character.isDigit(val.charAt(i))) {\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        }\n    }\n    return createInteger(val);\n} else {\n    if (val.startsWith(\"0x\") || val.startsWith(\"0X\")) {\n        return createInteger(val);\n    }\n    for (int i = 0; i < val.length(); i++) {\n        if (!Character.isDigit(val.charAt(i))) {\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        }\n    }\n    return createInteger(val);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..7fb0dc44 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,34 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val.startsWith(\"-\")) {\n+    if (val.length() == 1) {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    }\n+    if (val.length() == 2 && val.charAt(1) == '0') {\n+        return createInteger(val);\n+    }\n+    if (val.charAt(1) == '0') {\n+        // octal or hex\n+        return createInteger(val);\n+    }\n+    for (int i = 1; i < val.length(); i++) {\n+        if (!Character.isDigit(val.charAt(i))) {\n+            throw new NumberFormatException(val + \" is not a valid number.\");\n+        }\n+    }\n+    return createInteger(val);\n+} else {\n+    if (val.startsWith(\"0x\") || val.startsWith(\"0X\")) {\n+        return createInteger(val);\n+    }\n+    for (int i = 0; i < val.length(); i++) {\n+        if (!Character.isDigit(val.charAt(i))) {\n+            throw new NumberFormatException(val + \" is not a valid number.\");\n+        }\n+    }\n+    return createInteger(val);\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}