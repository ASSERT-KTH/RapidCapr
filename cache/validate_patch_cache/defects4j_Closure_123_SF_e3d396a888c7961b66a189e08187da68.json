{
    "patch": "public String fixCode(String code) {\n    if (code.contains(\"for\") && code.contains(\"in\")) {\n        code = code.replace(\"in\", \" \\n in \");\n        String[] lines = code.split(\"\\\\r?\\\\n\");\n        for (int i = 0; i < lines.length; i++) {\n            String line = lines[i];\n            if (line.contains(\"for\") && line.contains(\"in\")) {\n                String[] words = line.split(\" \");\n                for (int j = 0; j < words.length; j++) {\n                    if (words[j].equals(\"in\")) {\n                        words[j] = \" \\n\" + words[j] + \" \";\n                        if (words[j+1].startsWith(\"'\")) {\n                            words[j+1] = \"\\\"\"+ words[j+1].substring(1, words[j+1].length()-1) +\"\\\"\";\n                        }\n                        break;\n                    }\n                }\n                lines[i] = String.join(\" \", words);\n            }\n        }\n        code = String.join(\"\\n\", lines);\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..32e0aca7 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,30 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    if (code.contains(\"for\") && code.contains(\"in\")) {\n+        code = code.replace(\"in\", \" \\n in \");\n+        String[] lines = code.split(\"\\\\r?\\\\n\");\n+        for (int i = 0; i < lines.length; i++) {\n+            String line = lines[i];\n+            if (line.contains(\"for\") && line.contains(\"in\")) {\n+                String[] words = line.split(\" \");\n+                for (int j = 0; j < words.length; j++) {\n+                    if (words[j].equals(\"in\")) {\n+                        words[j] = \" \\n\" + words[j] + \" \";\n+                        if (words[j+1].startsWith(\"'\")) {\n+                            words[j+1] = \"\\\"\"+ words[j+1].substring(1, words[j+1].length()-1) +\"\\\"\";\n+                        }\n+                        break;\n+                    }\n+                }\n+                lines[i] = String.join(\" \", words);\n+            }\n+        }\n+        code = String.join(\"\\n\", lines);\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}