{
    "patch": "    List<Boolean> conditionList = new ArrayList<Boolean>();\n    for(Object e : elements) {\n        if(e instanceof Boolean) {\n            conditionList.add((Boolean) e);\n        } else {\n            String op = (String)e;\n            boolean rhs = conditionList.remove(conditionList.size()-1);\n            boolean lhs = conditionList.remove(conditionList.size()-1);\n            boolean conditionResult;\n            switch(op) {\n                case \":\": conditionResult = lhs ? true : rhs; break;\n                case \"?:\": conditionResult = lhs ? true : rhs; break;\n                case \"&&\": conditionResult = lhs && rhs; break;\n                case \"||\": conditionResult = lhs || rhs; break;\n                default: throw new UnsupportedOperationException(\"Unsupported operator: \"+op);\n            }\n            conditionList.add(conditionResult);\n        }\n    }\n    boolean result = conditionList.get(0);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}