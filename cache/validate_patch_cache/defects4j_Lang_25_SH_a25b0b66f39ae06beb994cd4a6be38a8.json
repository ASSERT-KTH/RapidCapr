{
    "patch": "public static String unescape(String escaped) {\n    StringBuffer buf = new StringBuffer(escaped.length());\n    int i = 0;\n    while (i < escaped.length()) {\n        char ch = escaped.charAt(i);\n        if (ch == '\\\\') {\n            i++;\n            if (i >= escaped.length()) {\n                throw new IllegalArgumentException(\"Invalid escape sequence at end of string.\");\n            }\n            char escapeChar = escaped.charAt(i);\n            switch (escapeChar) {\n                case '\\\"':\n                    buf.append('\\\"');\n                    break;\n                case '\\\\':\n                    buf.append('\\\\');\n                    break;\n                case 't':\n                    buf.append('\\t');\n                    break;\n                case 'r':\n                    buf.append('\\r');\n                    break;\n                case 'n':\n                    buf.append('\\n');\n                    break;\n                case 'f':\n                    buf.append('\\f');\n                    break;\n                case 'b':\n                    buf.append('\\b');\n                    break;\n                case 'u':\n                    i++;\n                    if (i + 3 >= escaped.length()) {\n                        throw new IllegalArgumentException(\"Invalid unicode sequence at end of string.\");\n                    }\n                    int code = Integer.parseInt(escaped.substring(i, i + 4), 16);\n                    buf.append((char) code);\n                    i += 3;\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid escape sequence '\\\\\" + escapeChar + \"' at position \" + i + \".\");\n            }\n        } else {\n            buf.append(ch);\n        }\n        i++;\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}