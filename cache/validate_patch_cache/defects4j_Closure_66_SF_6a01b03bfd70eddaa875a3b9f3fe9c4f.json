{
    "patch": "import org.json.*;\n\npublic class JSONUtils {\n\n    public static double getTypedPercent(JSONArray arr) {\n        double countTyped = 0.0;\n        double countTotal = arr.length();\n\n        for (int i = 0; i < countTotal; i++) {\n            try {\n                JSONObject obj = arr.getJSONObject(i);\n                String type = obj.getString(\"type\");\n                if (type.equals(\"typed\")) {\n                    countTyped++;\n                }\n            } catch (JSONException e) {\n                // handle the exception\n            }\n        }\n\n        double percent = (countTyped / countTotal) * 100;\n        return Math.round(percent * 10) / 10.0;\n    }    \n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..9e269a05 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,30 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import org.json.*;\n+\n+public class JSONUtils {\n+\n+    public static double getTypedPercent(JSONArray arr) {\n+        double countTyped = 0.0;\n+        double countTotal = arr.length();\n+\n+        for (int i = 0; i < countTotal; i++) {\n+            try {\n+                JSONObject obj = arr.getJSONObject(i);\n+                String type = obj.getString(\"type\");\n+                if (type.equals(\"typed\")) {\n+                    countTyped++;\n+                }\n+            } catch (JSONException e) {\n+                // handle the exception\n+            }\n+        }\n+\n+        double percent = (countTyped / countTotal) * 100;\n+        return Math.round(percent * 10) / 10.0;\n+    }    \n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}