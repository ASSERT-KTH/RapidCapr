{
    "patch": "public static String unescape(String str) {\n    StringBuffer out = new StringBuffer(str.length());\n    for (int i=0; i<str.length(); i++) {\n        char currentChar = str.charAt(i);\n        if (currentChar == '\\\\') {\n            char nextChar = (i == str.length()-1) ? '\\\\' : str.charAt(i+1);\n            // The following hunk has been infilled\n            if (nextChar == '\\\"' || nextChar == '\\'' || nextChar == '\\\\') {\n                currentChar = nextChar;\n                i++;\n            } else if (nextChar == 'n') {\n                currentChar = '\\n';\n                i++;\n            } else if (nextChar == 't') {\n                currentChar = '\\t';\n                i++;\n            } else if (nextChar == 'r') {\n                currentChar = '\\r';\n                i++;\n            } else if (nextChar == '\\f') {\n                currentChar = '\\f';\n                i++;\n            } else if (nextChar == '\\b') {\n                currentChar = '\\b';\n                i++;\n            } // The following hunk has been infilled\n            else { \n                throw new IllegalArgumentException(\"Unable to unescape the character \\\"\" + nextChar + \"\\\" at position \" + (i+1)); \n            }\n        } // omitted else block\n        out.append(currentChar);\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}