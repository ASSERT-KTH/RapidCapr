{
    "patch": "public static String unescape(String input) {\n    StringBuilder result = new StringBuilder(input.length());\n    for (int i = 0; i < input.length(); i++) {\n        char ch = input.charAt(i);\n        if (ch == '\\\\') {\n            i++;\n            \n            if(i >= input.length()) {\n                throw new IllegalArgumentException(\"Invalid escape sequence at index \" + (i - 1));\n            }\n            \n            ch = input.charAt(i);\n\n            switch(ch) {\n                case 'n':\n                    result.append('\\n');\n                    break;\n                case 't':\n                    result.append('\\t');\n                    break;\n                case 'r':\n                    result.append('\\r');\n                    break;\n                case 'f':\n                    result.append('\\f');\n                    break;\n                case '\\\\':\n                case '\\\"':\n                case '\\'':\n                    result.append(ch);\n                    break;\n                default:\n                    // Fixed line\n                    throw new IllegalArgumentException(\"Invalid escape sequence at index \" + (i - 1) + \": \\\\\" + ch);\n            }\n        } else {\n            result.append(ch);\n        }\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}