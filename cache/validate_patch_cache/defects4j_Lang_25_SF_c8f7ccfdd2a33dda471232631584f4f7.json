{
    "patch": "public static String unescape(String s) {\n   StringBuilder sb=new StringBuilder(s.length());\n   for (int i=0; i<s.length(); i++) {\n      char c=s.charAt(i);\n      if (c == '\\\\') {\n         if (++i < s.length()) {\n            c=s.charAt(i);\n            if      (c == 'n')  c='\\n';\n            else if (c == 'r')  c='\\r';\n            else if (c == 't')  c='\\t';\n            else if (c == 'f')  c='\\f';\n            else if (c == '\\\\') c='\\\\';\n            else if (c == '\\\"') c='\\\"';\n            else if (c == '\\'') c='\\'';\n            else if (c < '0' || c > '7') {\n               sb.append('\\\\');\n            }\n            else {\n               int start=i-1;\n               c=(char)(c - '0');\n               if (++i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n                  c=(char)((c << 3) + s.charAt(i) - '0');\n                  if (++i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n                     c=(char)((c << 3) + s.charAt(i) - '0');\n                  }\n               }\n               sb.append((char)(c));\n               continue;\n            }\n         }\n         else {\n            throw new IllegalArgumentException(\"Invalid escape character at end of string\");\n         }\n      }\n      sb.append(c);\n   }\n   return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..73568410 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,44 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+   StringBuilder sb=new StringBuilder(s.length());\n+   for (int i=0; i<s.length(); i++) {\n+      char c=s.charAt(i);\n+      if (c == '\\\\') {\n+         if (++i < s.length()) {\n+            c=s.charAt(i);\n+            if      (c == 'n')  c='\\n';\n+            else if (c == 'r')  c='\\r';\n+            else if (c == 't')  c='\\t';\n+            else if (c == 'f')  c='\\f';\n+            else if (c == '\\\\') c='\\\\';\n+            else if (c == '\\\"') c='\\\"';\n+            else if (c == '\\'') c='\\'';\n+            else if (c < '0' || c > '7') {\n+               sb.append('\\\\');\n+            }\n+            else {\n+               int start=i-1;\n+               c=(char)(c - '0');\n+               if (++i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n+                  c=(char)((c << 3) + s.charAt(i) - '0');\n+                  if (++i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '7') {\n+                     c=(char)((c << 3) + s.charAt(i) - '0');\n+                  }\n+               }\n+               sb.append((char)(c));\n+               continue;\n+            }\n+         }\n+         else {\n+            throw new IllegalArgumentException(\"Invalid escape character at end of string\");\n+         }\n+      }\n+      sb.append(c);\n+   }\n+   return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}