{
    "patch": "\n    public Object handle(Invocation invocation) throws Throwable {\n        Object result = null;\n        try {\n            result = invocation.proceed();\n        } catch (Throwable e) {\n            Exception thrownException = e instanceof InvocationTargetException ? ((InvocationTargetException) e).getTargetException() : e;\n            if (exceptionClass.isAssignableFrom(thrownException.getClass())) {\n                return returnValue;\n            } else {\n                throw thrownException;\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}