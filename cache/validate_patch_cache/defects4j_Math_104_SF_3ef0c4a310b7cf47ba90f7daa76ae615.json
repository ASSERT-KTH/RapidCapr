{
    "patch": "public static double regularizedGamma1(double a, double x) {\n    final double LOG_MAX_VALUE = Math.log(Double.MAX_VALUE);\n    if (a < 0.0 || x < 0.0) {\n        throw new IllegalArgumentException();\n    }\n\n    if (x == 0.0) {\n        return 0.0;\n    }\n\n    if (x >= a + 1) {\n        final double b1 = regularizedGamma1(a, x - 1);\n        final double logProd = Math.log(x - 1);\n        if (Double.isInfinite(b1) || Double.isInfinite(logProd) || b1 + logProd > LOG_MAX_VALUE) {\n            return Double.MAX_VALUE;\n        } else {\n            return b1 * (x - 1);\n        }\n    }\n\n    final double prod = (a + x) * Math.exp(MathUtils.logGamma(a + x) - MathUtils.logGamma(a));\n    return 1.0 - prod / (a * regularizedGamma1(a + 1, x));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..0521c2c6a 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma1(double a, double x) {\n+    final double LOG_MAX_VALUE = Math.log(Double.MAX_VALUE);\n+    if (a < 0.0 || x < 0.0) {\n+        throw new IllegalArgumentException();\n+    }\n+\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+\n+    if (x >= a + 1) {\n+        final double b1 = regularizedGamma1(a, x - 1);\n+        final double logProd = Math.log(x - 1);\n+        if (Double.isInfinite(b1) || Double.isInfinite(logProd) || b1 + logProd > LOG_MAX_VALUE) {\n+            return Double.MAX_VALUE;\n+        } else {\n+            return b1 * (x - 1);\n+        }\n+    }\n+\n+    final double prod = (a + x) * Math.exp(MathUtils.logGamma(a + x) - MathUtils.logGamma(a));\n+    return 1.0 - prod / (a * regularizedGamma1(a + 1, x));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}