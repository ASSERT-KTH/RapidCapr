{
    "patch": "          if (!value.getLastChild().isReturn()) {\n            return false;\n          }\n          Node returnValue = value.getLastChild().getFirstChild();\n          if (returnValue == null) {\n            return false;\n          }\n          if (!returnValue.isObjectLit() || !returnValue.hasMoreThanOneChild()) {\n            return false;\n          }\n          String className = null;\n          Node classNodeNameNode = returnValue.getFirstChild();\n          if (classNodeNameNode.isString()) {\n            className = classNodeNameNode.getString();\n          }\n          return className != null && (returnValue.getSecondChild().isName() &&\n              className.equals(returnValue.getSecondChild().getString()));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..81e24c97 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,23 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (!value.getLastChild().isReturn()) {\n+            return false;\n+          }\n+          Node returnValue = value.getLastChild().getFirstChild();\n+          if (returnValue == null) {\n+            return false;\n+          }\n+          if (!returnValue.isObjectLit() || !returnValue.hasMoreThanOneChild()) {\n+            return false;\n+          }\n+          String className = null;\n+          Node classNodeNameNode = returnValue.getFirstChild();\n+          if (classNodeNameNode.isString()) {\n+            className = classNodeNameNode.getString();\n+          }\n+          return className != null && (returnValue.getSecondChild().isName() &&\n+              className.equals(returnValue.getSecondChild().getString()));\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}