{
    "patch": "          // Functions share a block with their declaration, which can be an\n          // assignment.  To avoid thinking that the variable is assigned in\n          // these cases, skip this block and continue checking the parent\n          // block.\n          if (block.getParent() != null) {\n            block = block.getParent();\n            continue;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..ed00673f 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          // Functions share a block with their declaration, which can be an\n+          // assignment.  To avoid thinking that the variable is assigned in\n+          // these cases, skip this block and continue checking the parent\n+          // block.\n+          if (block.getParent() != null) {\n+            block = block.getParent();\n+            continue;\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}