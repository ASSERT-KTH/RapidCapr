{
    "patch": "if (ref == null || ref.getBasicBlock() == null || ref.getBasicBlock().isFunction) {\n  return false;\n} else if (ref.getBasicBlock().isLoop) {\n  for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {\n    if (block.isFunction) {\n      return false;\n    } else if (block.isLoop) {\n      return false;\n    }\n  }\n}\nreturn true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..d50b9b98 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,18 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+if (ref == null || ref.getBasicBlock() == null || ref.getBasicBlock().isFunction) {\n+  return false;\n+} else if (ref.getBasicBlock().isLoop) {\n+  for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {\n+    if (block.isFunction) {\n+      return false;\n+    } else if (block.isLoop) {\n+      return false;\n+    }\n+  }\n+}\n+return true;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: variable block is already defined in method isAssignedOnceInLifetime()",
    "test_result": "ERROR"
}