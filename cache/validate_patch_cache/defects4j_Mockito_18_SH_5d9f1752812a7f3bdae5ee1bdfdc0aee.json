{
    "patch": "public ReturnObject execute() {\n    try {\n        Object targetObject = targetConstructor.newInstance(targetArguments);\n        Object[] invokeArguments = Stream.concat(Stream.of(targetObject), callArguments.stream())\n                .toArray();\n        Object returnValue = method.invoke(targetObject, invokeArguments);\n        return new ReturnObject(returnValue);\n    } catch (InstantiationException | IllegalAccessException \n             | InvocationTargetException | IllegalArgumentException e) {\n        return new ReturnObject(e);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}