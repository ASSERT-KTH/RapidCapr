{
    "patch": "import java.util.Arrays;\nimport java.util.Comparator;\n\npublic class ORDER_BY_POINTS {\n    public static Integer[] order_by_points(Integer[] nums) {\n        Integer[] copy = Arrays.copyOf(nums, nums.length);\n        Arrays.sort(copy, new Comparator<Integer>() { // sort the copy using a comparator\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                return digitSum(o2) - digitSum(o1); // compare using the sum of digits\n            }\n            private int digitSum(int n) {\n                int sum = 0;\n                while (n != 0) {\n                    sum += n % 10;\n                    n /= 10;\n                }\n                return sum;\n            }\n        });\n        return copy;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\nindex 4e6cd94..507e785 100644\n--- a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n+++ b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n@@ -14,32 +14,27 @@ For example:\n >>> order_by_points([]) == [] */\n \n public class ORDER_BY_POINTS {\n-    public static Integer[] order_by_points(Integer[] nums) {\n-        ArrayList<Integer> digits = new ArrayList<Integer>();\n-        HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n+import java.util.Arrays;\n+import java.util.Comparator;\n \n-        for (int i = 0; i < nums.length; i += 1){\n-            int neg = 1;\n-            int n = nums[i];\n-            if (n < 0) {\n-                n = -1 * n;\n-                neg = -1;\n+public class ORDER_BY_POINTS {\n+    public static Integer[] order_by_points(Integer[] nums) {\n+        Integer[] copy = Arrays.copyOf(nums, nums.length);\n+        Arrays.sort(copy, new Comparator<Integer>() { // sort the copy using a comparator\n+            @Override\n+            public int compare(Integer o1, Integer o2) {\n+                return digitSum(o2) - digitSum(o1); // compare using the sum of digits\n             }\n-            int digit = 0;\n-            for (int j = 0; j < (n + \"\").toCharArray().length; j += 1){\n-                digit += ((n + \"\").toCharArray()[j] - '0') * neg;\n+            private int digitSum(int n) {\n+                int sum = 0;\n+                while (n != 0) {\n+                    sum += n % 10;\n+                    n /= 10;\n+                }\n+                return sum;\n             }\n-            digits.add(digit);\n-            if (! digits_number.containsKey(digit))\n-                digits_number.put(digit, new ArrayList<Integer>());\n-            digits_number.get(digit).add(nums[i]);\n-        }\n-        Collections.sort(digits);\n-        \n-        ArrayList<Integer> result = new ArrayList<Integer>();\n-        for (int i = 0; i < digits.size(); i += 1) {\n-            result.addAll(digits_number.get(digits.get(i)));\n-        }\n-        return result.toArray(new Integer[] {});\n+        });\n+        return copy;\n     }\n }\n+}",
    "result_reason": " /tmp/humaneval-ORDER_BY_POINTS/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java:[17,1] illegal start of type",
    "test_result": "ERROR"
}