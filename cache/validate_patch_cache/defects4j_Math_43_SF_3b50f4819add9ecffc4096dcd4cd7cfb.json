{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    if (meanImpl instanceof Mean) {\n        meanImpl.increment(value);\n    } else {\n        if (meanImpl == null) {\n            meanImpl = new Mean();\n        }\n        if (!Double.isNaN(value)) {\n            ((Mean) meanImpl).increment(value);\n        }\n    }\n    if (varianceImpl instanceof Variance) {\n        varianceImpl.increment(value);\n    } else {\n        if (varianceImpl == null) {\n            varianceImpl = new Variance();\n        }\n        if (!Double.isNaN(value)) {\n            ((Variance) varianceImpl).increment(value);\n        }\n    }\n    if (geoMeanImpl instanceof GeometricMean) {\n        if (value > 0) {\n            geoMeanImpl.increment(value);\n        }\n    } else {\n        if (geoMeanImpl == null) {\n            geoMeanImpl = new GeometricMean();\n        }\n        if (value > 0) {\n            geoMeanImpl.increment(value);\n        }\n    }\n    if (geoMeanImpl instanceof GeometricMean && value < 0) {\n        throw new IllegalArgumentException(\"Geometric Mean is undefined for negative values\");\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..273da7238 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,50 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    if (meanImpl instanceof Mean) {\n+        meanImpl.increment(value);\n+    } else {\n+        if (meanImpl == null) {\n+            meanImpl = new Mean();\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+        if (!Double.isNaN(value)) {\n+            ((Mean) meanImpl).increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+    }\n+    if (varianceImpl instanceof Variance) {\n+        varianceImpl.increment(value);\n+    } else {\n+        if (varianceImpl == null) {\n+            varianceImpl = new Variance();\n+        }\n+        if (!Double.isNaN(value)) {\n+            ((Variance) varianceImpl).increment(value);\n+        }\n+    }\n+    if (geoMeanImpl instanceof GeometricMean) {\n+        if (value > 0) {\n+            geoMeanImpl.increment(value);\n+        }\n+    } else {\n+        if (geoMeanImpl == null) {\n+            geoMeanImpl = new GeometricMean();\n+        }\n+        if (value > 0) {\n             geoMeanImpl.increment(value);\n         }\n-        n++;\n     }\n+    if (geoMeanImpl instanceof GeometricMean && value < 0) {\n+        throw new IllegalArgumentException(\"Geometric Mean is undefined for negative values\");\n+    }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "java.lang.IllegalArgumentException: Geometric Mean is undefined for negative values",
    "test_result": "FAIL"
}