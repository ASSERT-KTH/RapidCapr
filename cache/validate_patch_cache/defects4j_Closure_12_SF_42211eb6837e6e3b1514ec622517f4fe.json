{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode == null || cfgNode.isScript()) {\n        return false;\n    } else {\n        switch (cfgNode.getToken()) {\n            case TRY:\n            case CATCH:\n            case FINALLY:\n                return true;\n            case FUNCTION:\n                return false;\n            default:\n                return hasExceptionHandler(cfgNode.getParent());\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..da21e2b5 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,22 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode == null || cfgNode.isScript()) {\n+        return false;\n+    } else {\n+        switch (cfgNode.getToken()) {\n+            case TRY:\n+            case CATCH:\n+            case FINALLY:\n+                return true;\n+            case FUNCTION:\n+                return false;\n+            default:\n+                return hasExceptionHandler(cfgNode.getParent());\n+        }\n+    }\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}