{
    "patch": "    StringBuilder regex = new StringBuilder();\n    List<Strategy> collector = new ArrayList<Strategy>();\n\n    Matcher patternMatcher = formatPattern.matcher(pattern);\n    if (!patternMatcher.lookingAt()) {\n        throw new IllegalArgumentException(\"Invalid pattern\");\n    }\n\n    currentFormatField = patternMatcher.group();\n    Strategy currentStrategy = getStrategy(currentFormatField);\n    while (currentStrategy != null) {\n        if (currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n        if (!patternMatcher.find()) {\n            break;\n        }\n        currentFormatField = patternMatcher.group();\n        currentStrategy = getStrategy(currentFormatField);\n    }\n\n    currentFormatField = null;\n    strategies = collector.toArray(new Strategy[collector.size()]);\n    parsePattern = Pattern.compile(regex.toString());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..18f1bf92 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,31 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+    StringBuilder regex = new StringBuilder();\n+    List<Strategy> collector = new ArrayList<Strategy>();\n+\n+    Matcher patternMatcher = formatPattern.matcher(pattern);\n+    if (!patternMatcher.lookingAt()) {\n+        throw new IllegalArgumentException(\"Invalid pattern\");\n+    }\n+\n+    currentFormatField = patternMatcher.group();\n+    Strategy currentStrategy = getStrategy(currentFormatField);\n+    while (currentStrategy != null) {\n+        if (currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        }\n+        if (!patternMatcher.find()) {\n+            break;\n+        }\n+        currentFormatField = patternMatcher.group();\n+        currentStrategy = getStrategy(currentFormatField);\n+    }\n+\n+    currentFormatField = null;\n+    strategies = collector.toArray(new Strategy[collector.size()]);\n+    parsePattern = Pattern.compile(regex.toString());\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}