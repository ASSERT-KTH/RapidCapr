{
    "patch": "        Map<Integer, Integer> countMap = new HashMap<>();\n        for (int i : l1) {\n            countMap.put(i, countMap.getOrDefault(i, 0) + 1);\n        }\n        List<Integer> common = new ArrayList<>();\n        for (int i : l2) {\n            if (countMap.containsKey(i) && countMap.get(i) > 0) {\n                common.add(i);\n                countMap.put(i, countMap.get(i) - 1);\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMMON.java b/src/main/java/humaneval/buggy/COMMON.java\nindex f818c29..768815d 100644\n--- a/src/main/java/humaneval/buggy/COMMON.java\n+++ b/src/main/java/humaneval/buggy/COMMON.java\n@@ -10,7 +10,17 @@ import java.util.*;\n \n public class COMMON {\n     public static int[] common(int[] l1, int[] l2) {\n-        ArrayList<Integer> common = new ArrayList<Integer>();\n+        Map<Integer, Integer> countMap = new HashMap<>();\n+        for (int i : l1) {\n+            countMap.put(i, countMap.getOrDefault(i, 0) + 1);\n+        }\n+        List<Integer> common = new ArrayList<>();\n+        for (int i : l2) {\n+            if (countMap.containsKey(i) && countMap.get(i) > 0) {\n+                common.add(i);\n+                countMap.put(i, countMap.get(i) - 1);\n+            }\n+        }\n         \n         for (int i = 0; i < l1.length; i += 1){\n             for (int j = 0; j < l2.length; j += 1){",
    "result_reason": "   TEST_COMMON.test_0:9 array lengths differed, expected.length=7 actual.length=3; arrays first differed at element [1]; expected:<1> but was:<5>",
    "test_result": "FAIL"
}