{
    "patch": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n    int len = searchStr.length();\n    int max = str.length() - len;\n    for (int i = 0; i <= max; i++) {\n        if (str.regionMatches(true, i, searchStr, 0, len)) {\n            return true;\n        } else if (Character.isUpperCase(searchStr.charAt(0))) {\n            // handle special case for German uppercase eszett (\u00df)\n            String uppercaseStr = str.substring(i, i+len).toUpperCase(Locale.GERMAN);\n            if (uppercaseStr.equals(searchStr.toUpperCase(Locale.GERMAN))) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..bc1add0f 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,25 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if (str == null || searchStr == null) {\n+        return false;\n+    }\n+    int len = searchStr.length();\n+    int max = str.length() - len;\n+    for (int i = 0; i <= max; i++) {\n+        if (str.regionMatches(true, i, searchStr, 0, len)) {\n+            return true;\n+        } else if (Character.isUpperCase(searchStr.charAt(0))) {\n+            // handle special case for German uppercase eszett (\u00df)\n+            String uppercaseStr = str.substring(i, i+len).toUpperCase(Locale.GERMAN);\n+            if (uppercaseStr.equals(searchStr.toUpperCase(Locale.GERMAN))) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n     }\n \n     // IndexOfAny chars",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}