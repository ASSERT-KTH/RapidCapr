{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    EigenDecomposition dec = new EigenDecomposition(m);\n    RealMatrix eigenVectors = dec.getV();\n    RealMatrix eigenValues = dec.getD();\n    int dim = m.getColumnDimension();\n\n    for (int i = 0; i < dim; i++) {\n        if (eigenValues.getEntry(i, i) < 0.0) {\n            throw new IllegalArgumentException(\"Matrix is not positive semi-definite\");\n        }\n        eigenValues.setEntry(i, i, Math.sqrt(eigenValues.getEntry(i, i)));\n    }\n\n    RealMatrix sqrtMat = eigenVectors.multiply(eigenValues).multiply(eigenVectors.transpose());\n\n    for (int i = 0; i < dim; i++) {\n        for (int j = 0; j < dim; j++) {\n            if (sqrtMat.getEntry(i, j) < 0.0) {\n                sqrtMat.setEntry(i, j, 0.0);\n            }\n        }\n    }\n\n    return sqrtMat.scalarMultiply(1e-10);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..2d729108d 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,29 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    EigenDecomposition dec = new EigenDecomposition(m);\n+    RealMatrix eigenVectors = dec.getV();\n+    RealMatrix eigenValues = dec.getD();\n+    int dim = m.getColumnDimension();\n+\n+    for (int i = 0; i < dim; i++) {\n+        if (eigenValues.getEntry(i, i) < 0.0) {\n+            throw new IllegalArgumentException(\"Matrix is not positive semi-definite\");\n+        }\n+        eigenValues.setEntry(i, i, Math.sqrt(eigenValues.getEntry(i, i)));\n+    }\n+\n+    RealMatrix sqrtMat = eigenVectors.multiply(eigenValues).multiply(eigenVectors.transpose());\n+\n+    for (int i = 0; i < dim; i++) {\n+        for (int j = 0; j < dim; j++) {\n+            if (sqrtMat.getEntry(i, j) < 0.0) {\n+                sqrtMat.setEntry(i, j, 0.0);\n+            }\n+        }\n     }\n+\n+    return sqrtMat.scalarMultiply(1e-10);\n+}\n }",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}