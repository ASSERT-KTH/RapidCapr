{
    "patch": "public final boolean isEmptyType() {\n  return isNoType() || isNoResolvedType() || (this instanceof NoType && !isVoidType() && !isNullType()) || (this instanceof ArrayType && ((ArrayType) this).getComponentType().isEmptyType()) || (this instanceof WildcardType && ((WildcardType) this).getExtendsBound() != null && ((WildcardType) this).getExtendsBound().isEmptyType()) || (this instanceof UnionType && ((UnionType) this).getAlternatives().stream().allMatch(AlternativeType::isEmptyType));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..23489f0b 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,9 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+  return isNoType() || isNoResolvedType() || (this instanceof NoType && !isVoidType() && !isNullType()) || (this instanceof ArrayType && ((ArrayType) this).getComponentType().isEmptyType()) || (this instanceof WildcardType && ((WildcardType) this).getExtendsBound() != null && ((WildcardType) this).getExtendsBound().isEmptyType()) || (this instanceof UnionType && ((UnionType) this).getAlternatives().stream().allMatch(AlternativeType::isEmptyType));\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}