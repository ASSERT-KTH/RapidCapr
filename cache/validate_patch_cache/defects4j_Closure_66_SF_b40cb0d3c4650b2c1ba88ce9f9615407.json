{
    "patch": "public static double getTypedPercent(String json) {\n    Gson gson = new Gson();\n    Type type = new TypeToken<Map<String,Object>>() {}.getType();\n    Map<String,Object> map = gson.fromJson(json, type);\n    double numTyped = Double.parseDouble(map.get(\"typed\").toString());\n    double numTotal = Double.parseDouble(map.get(\"total\").toString());\n    return numTyped / numTotal * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..d10671d4 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    Gson gson = new Gson();\n+    Type type = new TypeToken<Map<String,Object>>() {}.getType();\n+    Map<String,Object> map = gson.fromJson(json, type);\n+    double numTyped = Double.parseDouble(map.get(\"typed\").toString());\n+    double numTotal = Double.parseDouble(map.get(\"total\").toString());\n+    return numTyped / numTotal * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}