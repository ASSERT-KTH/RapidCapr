{
    "patch": "copy.data = new java.util.ArrayList<>();\nint itemCount = getItemCount();\nboolean dataAdded = false;\nfor (int index = 0; index < itemCount; index++) {\n    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n    if (index >= start && index <= end) {\n        // we only want to add cloned data in this range\n        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n        try {\n            copy.add(clone);\n            dataAdded = true; // at least one item has been added\n        }\n        catch (SeriesException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\nif (!dataAdded) {\n    // if we didn't add any data, we need to throw an exception to match\n    // the original implementation\n    throw new IllegalArgumentException(\"No data in range [\" + start + \", \" + end + \"].\");\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..a5c408b 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,29 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList<>();\n+int itemCount = getItemCount();\n+boolean dataAdded = false;\n+for (int index = 0; index < itemCount; index++) {\n+    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+    if (index >= start && index <= end) {\n+        // we only want to add cloned data in this range\n+        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+        try {\n+            copy.add(clone);\n+            dataAdded = true; // at least one item has been added\n+        }\n+        catch (SeriesException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n+\n+if (!dataAdded) {\n+    // if we didn't add any data, we need to throw an exception to match\n+    // the original implementation\n+    throw new IllegalArgumentException(\"No data in range [\" + start + \", \" + end + \"].\");\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}