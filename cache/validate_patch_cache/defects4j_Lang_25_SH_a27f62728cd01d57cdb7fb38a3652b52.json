{
    "patch": "public static String escapeHtml(String string) {\n    StringWriter writer = new StringWriter((int) (string.length() * 1.5));\n    escapeHtml(writer, string);\n    return writer.toString();\n}\n\npublic static void escapeHtml(Writer writer, String string) {\n    if (string == null) {\n        return;\n    }\n    int len = string.length();\n    for (int i = 0; i < len; i++) {\n        char c = string.charAt(i);\n        switch (c) {\n            case '<':\n                writer.write(\"&lt;\");\n                break;\n            case '>':\n                writer.write(\"&gt;\");\n                break;\n            case '&':\n                if (len > i + 1 && string.charAt(i+1) == '#') {\n                    writer.write(\"&\");\n                } else {\n                    writer.write(\"&amp;\");\n                }\n                break;\n            case '\"':\n                writer.write(\"&quot;\");\n                break;\n            case '\\'':\n                writer.write(\"&#39;\");\n                break;\n            default:\n                // fixed hunk starts here\n                if (c < ' ' || (c >= '\\u0080' && c < '\\u00a0')) {\n                    writer.write(\"&#\");\n                    writer.write(Integer.toString(c, 10));\n                    writer.write(';');\n                // fixed hunk ends here\n                } else {\n                    writer.write(c);\n                }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}