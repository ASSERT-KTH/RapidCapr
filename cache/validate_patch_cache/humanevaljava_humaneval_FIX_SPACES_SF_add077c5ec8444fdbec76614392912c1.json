{
    "patch": "public static String fix_spaces(String text) {\n    String new_text = \"\";\n    int i = 0;\n    int start = -1; // Update start and end to be -1 to account for leading spaces\n    int end = -1;\n\n    while (i < text.length()) {\n        if (text.charAt(i) == ' ') {\n            if (start == -1) {\n                new_text += text.charAt(i); // Add leading spaces to output\n            } else {\n                end = i;\n            }\n        } else {\n            if (start == -1) {\n                start = i;\n                end = i;\n            } else {\n                if (end - start >= 2) {\n                    new_text += \"-\" + text.substring(i, i + 1);\n                    start = -1; // Reset start and end to find next word\n                    end = -1;\n                } else {\n                    new_text += text.substring(start, end + 1);\n                    start = i;\n                    end = i;\n                }\n            }\n        }\n        i += 1;\n    }\n\n    if (start != -1 && end - start >= 2) {\n        new_text += \"-\" + text.substring(i); // Add trailing spaces to output\n    } else if (start != -1) {\n        new_text += text.substring(start, end + 1);\n    }\n\n    return new_text;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..5ad95ed 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -10,29 +10,44 @@ fix_spaces(\" Example 2\") == \"_Example_2\"\n fix_spaces(\" Example   3\") == \"_Example-3\" */\n \n public class FIX_SPACES {\n-    public static String fix_spaces(String text) {\n-        String new_text = \"\";\n-        int i = 0;\n-        int start = 0;\n-        int end = 0;\n-        while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n-                    }\n-                    new_text += text.substring(i, i + 1);\n+public static String fix_spaces(String text) {\n+    String new_text = \"\";\n+    int i = 0;\n+    int start = -1; // Update start and end to be -1 to account for leading spaces\n+    int end = -1;\n+\n+    while (i < text.length()) {\n+        if (text.charAt(i) == ' ') {\n+            if (start == -1) {\n+                new_text += text.charAt(i); // Add leading spaces to output\n+            } else {\n+                end = i;\n+            }\n+        } else {\n+            if (start == -1) {\n+                start = i;\n+                end = i;\n+            } else {\n+                if (end - start >= 2) {\n+                    new_text += \"-\" + text.substring(i, i + 1);\n+                    start = -1; // Reset start and end to find next word\n+                    end = -1;\n                 } else {\n-                    new_text += text.substring(i, i + 1);\n+                    new_text += text.substring(start, end + 1);\n+                    start = i;\n+                    end = i;\n                 }\n-                start = i + 1;\n-                end = i + 1;\n             }\n-            i += 1;\n         }\n+        i += 1;\n+    }\n \n-        return new_text;\n+    if (start != -1 && end - start >= 2) {\n+        new_text += \"-\" + text.substring(i); // Add trailing spaces to output\n+    } else if (start != -1) {\n+        new_text += text.substring(start, end + 1);\n     }\n+\n+    return new_text;\n+}\n }",
    "result_reason": "   TEST_FIX_SPACES.test_1:19 expected:<Mudasir[ Hanif ]> but was:<Mudasir[_Hanif_]>",
    "test_result": "FAIL"
}