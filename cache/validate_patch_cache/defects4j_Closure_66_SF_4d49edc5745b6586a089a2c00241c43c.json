{
    "patch": "public static double getTypedPercent(String[] log) {\n    int typed = 0;\n    int total = 0;\n    for (String entry : log) {\n        if (entry.startsWith(\"Typed:\")) {\n            typed += Integer.parseInt(entry.substring(6));\n        } else if (entry.startsWith(\"Total:\")) {\n            total += Integer.parseInt(entry.substring(6));\n        }\n    }\n    if (total == 0) {\n        return 0.0;\n    }\n    return 100.0 * typed / total;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a39b6231 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String[] log) {\n+    int typed = 0;\n+    int total = 0;\n+    for (String entry : log) {\n+        if (entry.startsWith(\"Typed:\")) {\n+            typed += Integer.parseInt(entry.substring(6));\n+        } else if (entry.startsWith(\"Total:\")) {\n+            total += Integer.parseInt(entry.substring(6));\n+        }\n+    }\n+    if (total == 0) {\n+        return 0.0;\n+    }\n+    return 100.0 * typed / total;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}