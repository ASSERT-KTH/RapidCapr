{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n\n    str = str.trim(); // Remove leading/trailing whitespace.\n\n    if (str.startsWith(\"_\")) {\n        if (str.length() < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int i = str.lastIndexOf(\"_\");\n        if (i >= 2) {\n            String language = str.substring(0, 2);\n            String country = str.substring(1, i);\n            String variant = str.substring(i + 1);\n            if (variant.startsWith(\"RO\")) {\n                variant = variant.substring(2);\n            }\n            return new Locale(language, country, variant);\n        } else if (i == 1) {\n            String language = str.substring(0, 1);\n            String variant = str.substring(i + 1);\n            if (variant.startsWith(\"RO\")) {\n                variant = variant.substring(2);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(language, \"\", variant);\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n\n    String[] parts = str.split(\"_\", -1);\n\n    if (parts.length == 0) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (parts.length == 1) {\n        return new Locale(parts[0]);\n    } else if (parts.length == 2) {\n        return new Locale(parts[0], parts[1]);\n    } else if (parts.length == 3) {\n        String countryCode = parts[1];\n        String variantCode = parts[2];\n        if (variantCode.startsWith(\"RO\")) {\n            variantCode = variantCode.substring(2);\n        }\n        return new Locale(parts[0], countryCode, variantCode);\n    } else {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..b0c0deb8 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,61 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n+public static Locale toLocale(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+\n+    str = str.trim(); // Remove leading/trailing whitespace.\n+\n+    if (str.startsWith(\"_\")) {\n+        if (str.length() < 3) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n+        int i = str.lastIndexOf(\"_\");\n+        if (i >= 2) {\n+            String language = str.substring(0, 2);\n+            String country = str.substring(1, i);\n+            String variant = str.substring(i + 1);\n+            if (variant.startsWith(\"RO\")) {\n+                variant = variant.substring(2);\n             }\n-            if (len < 5) {\n+            return new Locale(language, country, variant);\n+        } else if (i == 1) {\n+            String language = str.substring(0, 1);\n+            String variant = str.substring(i + 1);\n+            if (variant.startsWith(\"RO\")) {\n+                variant = variant.substring(2);\n+            } else {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            return new Locale(language, \"\", variant);\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    }\n+\n+    String[] parts = str.split(\"_\", -1);\n+\n+    if (parts.length == 0) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (parts.length == 1) {\n+        return new Locale(parts[0]);\n+    } else if (parts.length == 2) {\n+        return new Locale(parts[0], parts[1]);\n+    } else if (parts.length == 3) {\n+        String countryCode = parts[1];\n+        String variantCode = parts[2];\n+        if (variantCode.startsWith(\"RO\")) {\n+            variantCode = variantCode.substring(2);\n+        }\n+        return new Locale(parts[0], countryCode, variantCode);\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: _GB",
    "test_result": "FAIL"
}