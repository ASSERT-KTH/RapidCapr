{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException();\n    }\n    if (x < a + 1) {\n        double term = a;\n        double sum = term;\n        int j = 1;\n        while (Math.abs(term) > RELATIVE_ERROR_TOLERANCE * Math.abs(sum)) {\n            term *= x / (a + j);\n            sum += term;\n            j++;\n        }\n        return Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a)) * sum / a;\n    } else {\n        double term = 1;\n        double sum = term;\n        int j = 1;\n        while (Math.abs(term) > RELATIVE_ERROR_TOLERANCE * Math.abs(sum)) {\n            term *= (a - j + 1) / x;\n            sum += term;\n            j++;\n        }\n        return 1 - Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a)) * sum / a;\n    }\n}\n\nprivate static final double RELATIVE_ERROR_TOLERANCE = 1e-12;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..9fef20681 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,34 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException();\n+    }\n+    if (x < a + 1) {\n+        double term = a;\n+        double sum = term;\n+        int j = 1;\n+        while (Math.abs(term) > RELATIVE_ERROR_TOLERANCE * Math.abs(sum)) {\n+            term *= x / (a + j);\n+            sum += term;\n+            j++;\n+        }\n+        return Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a)) * sum / a;\n+    } else {\n+        double term = 1;\n+        double sum = term;\n+        int j = 1;\n+        while (Math.abs(term) > RELATIVE_ERROR_TOLERANCE * Math.abs(sum)) {\n+            term *= (a - j + 1) / x;\n+            sum += term;\n+            j++;\n+        }\n+        return 1 - Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a)) * sum / a;\n+    }\n+}\n+\n+private static final double RELATIVE_ERROR_TOLERANCE = 1e-12;\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}