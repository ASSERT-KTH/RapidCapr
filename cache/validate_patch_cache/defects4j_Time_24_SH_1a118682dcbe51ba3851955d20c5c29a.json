{
    "patch": "        if (millis < 0 && millis + 24 * 60 * 60 * 1000 >= 0) {\n            // handle single negative day due to daylight savings time jump\n            millis += 24 * 60 * 60 * 1000;\n            millis = iChrono.dayOfYear().set(millis, 1);\n            millis = iChrono.year().add(millis, 1);\n        }\n\n        if (iZone == null) {\n            millis -= iOffset;\n        } else {\n            int offset = iZone.getOffsetFromLocal(millis);\n            millis -= offset;\n            if (offset != iZone.getOffset(millis)) {\n                String message =\n                        \"Illegal instant due to time zone offset transition (\" + iZone + ')';",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..79e8c943 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,21 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        if (millis < 0 && millis + 24 * 60 * 60 * 1000 >= 0) {\n+            // handle single negative day due to daylight savings time jump\n+            millis += 24 * 60 * 60 * 1000;\n+            millis = iChrono.dayOfYear().set(millis, 1);\n+            millis = iChrono.year().add(millis, 1);\n+        }\n+\n+        if (iZone == null) {\n+            millis -= iOffset;\n+        } else {\n+            int offset = iZone.getOffsetFromLocal(millis);\n+            millis -= offset;\n+            if (offset != iZone.getOffset(millis)) {\n+                String message =\n+                        \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}