{
    "patch": "    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    int numExpectedArgs = referenced.size();\n    int index = 0;\n\n    for (Node child : argList.children()) {\n      if (child.isName()) {\n        Var var = fnScope.getVar(child.getString());\n        if (referenced.contains(var)) {\n          index++;\n        } else if (index >= numExpectedArgs){\n          // Remove any unreferenced arguments after expected arguments.\n          argList.removeChild(child);\n          compiler.reportCodeChange();\n        }\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d40590cb 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,29 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    int numExpectedArgs = referenced.size();\n+    int index = 0;\n+\n+    for (Node child : argList.children()) {\n+      if (child.isName()) {\n+        Var var = fnScope.getVar(child.getString());\n+        if (referenced.contains(var)) {\n+          index++;\n+        } else if (index >= numExpectedArgs){\n+          // Remove any unreferenced arguments after expected arguments.\n+          argList.removeChild(child);\n+          compiler.reportCodeChange();\n+        }\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}