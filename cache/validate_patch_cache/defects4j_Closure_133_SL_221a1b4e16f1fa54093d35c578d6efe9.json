{
    "patch": "if (result == null || result.trim().startsWith(\"*\")) {\n    return null;\n} else if (result.contains(\"JSC_TYPE_PARSE_ERROR\")) {\n    throw new IllegalStateException(\"JSC_TYPE_PARSE_ERROR warning\");\n} else if (result.contains(\"Recorded bad position information\")) {\n    throw new IllegalStateException(\"Recorded bad position information\");\n} else {\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..7469e428 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,15 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+if (result == null || result.trim().startsWith(\"*\")) {\n+    return null;\n+} else if (result.contains(\"JSC_TYPE_PARSE_ERROR\")) {\n+    throw new IllegalStateException(\"JSC_TYPE_PARSE_ERROR warning\");\n+} else if (result.contains(\"Recorded bad position information\")) {\n+    throw new IllegalStateException(\"Recorded bad position information\");\n+} else {\n+    return result.trim();\n+}\n     return result;\n   }\n ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}