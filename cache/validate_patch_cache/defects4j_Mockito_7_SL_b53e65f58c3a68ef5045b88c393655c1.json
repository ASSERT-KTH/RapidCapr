{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif(actualTypeArgument instanceof ParameterizedType) {\n    registerTypeVariablesOn(actualTypeArgument);\n} else if ((actualTypeArgument instanceof TypeVariable && ((TypeVariable<?>)actualTypeArgument).getBounds().length == 0) || actualTypeArgument instanceof WildcardType) {\n    for (Type type : typeVariable.getBounds()) {\n        if (!type.equals(typeVariable)) {\n            registerTypeVariablesOn(type);\n        }\n    }\n} else {\n    registerTypeVariablesOn(actualTypeArgument);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..8d188bb9e 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,23 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if(actualTypeArgument instanceof ParameterizedType) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+} else if ((actualTypeArgument instanceof TypeVariable && ((TypeVariable<?>)actualTypeArgument).getBounds().length == 0) || actualTypeArgument instanceof WildcardType) {\n+    for (Type type : typeVariable.getBounds()) {\n+        if (!type.equals(typeVariable)) {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+} else {\n+    registerTypeVariablesOn(actualTypeArgument);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}