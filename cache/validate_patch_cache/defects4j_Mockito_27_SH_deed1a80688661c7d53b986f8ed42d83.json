{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockSettings settings = oldMockHandler.getMockSettings();\nMockHandler<T> newMockHandler = new MockHandler<T>(settings);\nProxyFactory proxyFactory = new ProxyFactory();\nproxyFactory.setSuperclass(mock.getClass());\nproxyFactory.setFilter(new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) settings));\nT newMock = mock;\ntry {\n    newMock = (T) proxyFactory.createClass().newInstance();\n} catch (Exception e) {\n    e.printStackTrace();\n}\ncopyInstanceFields(mock, newMock);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..f99367939 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,22 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockSettings settings = oldMockHandler.getMockSettings();\n+MockHandler<T> newMockHandler = new MockHandler<T>(settings);\n+ProxyFactory proxyFactory = new ProxyFactory();\n+proxyFactory.setSuperclass(mock.getClass());\n+proxyFactory.setFilter(new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) settings));\n+T newMock = mock;\n+try {\n+    newMock = (T) proxyFactory.createClass().newInstance();\n+} catch (Exception e) {\n+    e.printStackTrace();\n+}\n+copyInstanceFields(mock, newMock);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}