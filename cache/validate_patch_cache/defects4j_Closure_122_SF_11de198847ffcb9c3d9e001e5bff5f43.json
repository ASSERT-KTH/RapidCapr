{
    "patch": "private void handleBlockComment(Comment comment) {\n  String commentValue = comment.getValue();\n  int start = commentValue.indexOf(\"/* @\");\n  int end = commentValue.indexOf(\" \", start);\n  if (start != -1 && end != -1) {\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..24486acc 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,17 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n-    }\n+private void handleBlockComment(Comment comment) {\n+  String commentValue = comment.getValue();\n+  int start = commentValue.indexOf(\"/* @\");\n+  int end = commentValue.indexOf(\" \", start);\n+  if (start != -1 && end != -1) {\n+    errorReporter.warning(\n+        SUSPICIOUS_COMMENT_WARNING,\n+        sourceName,\n+        comment.getLineno(), \"\", 0);\n   }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}