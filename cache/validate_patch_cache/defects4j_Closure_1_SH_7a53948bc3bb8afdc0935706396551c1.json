{
    "patch": "    // Find all unreferenced parameters\n    Set<String> unreferencedParams = new HashSet<>();\n    NodeUtil.visitPreOrder(argList, (node) -> {\n      if (node.isName()) {\n        Var var = fnScope.getVar(node.getString());\n        if (!referenced.contains(var)) {\n          unreferencedParams.add(node.getString());\n        }\n      }\n    });\n\n    // Remove unreferenced parameters from the argument list\n    for (String param : unreferencedParams) {\n      Node paramNode = NodeUtil.getLValueNode(param, argList);\n      argList.removeChild(paramNode);\n      compiler.reportCodeChange();\n    }\n\n    if (modifyCallers) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0aaad542 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,25 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Find all unreferenced parameters\n+    Set<String> unreferencedParams = new HashSet<>();\n+    NodeUtil.visitPreOrder(argList, (node) -> {\n+      if (node.isName()) {\n+        Var var = fnScope.getVar(node.getString());\n+        if (!referenced.contains(var)) {\n+          unreferencedParams.add(node.getString());\n+        }\n+      }\n+    });\n+\n+    // Remove unreferenced parameters from the argument list\n+    for (String param : unreferencedParams) {\n+      Node paramNode = NodeUtil.getLValueNode(param, argList);\n+      argList.removeChild(paramNode);\n+      compiler.reportCodeChange();\n+    }\n+\n+    if (modifyCallers) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}