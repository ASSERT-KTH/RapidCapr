{
    "patch": "private void readTypeVariables() {\n    if (typeVariable == null) {\n        return;\n    }\n\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n    \n    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n    while (actualTypeArgument == null && typeVariable.getGenericDeclaration() instanceof Class\n            && ((Class<?>) typeVariable.getGenericDeclaration()).isArray()) {\n        typeVariable = ((Class<?>) typeVariable.getGenericDeclaration()).getComponentType();\n        actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n    }\n    \n    if (actualTypeArgument != null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..c1df2c443 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,27 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    if (typeVariable == null) {\n+        return;\n+    }\n+\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+    \n+    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+    while (actualTypeArgument == null && typeVariable.getGenericDeclaration() instanceof Class\n+            && ((Class<?>) typeVariable.getGenericDeclaration()).isArray()) {\n+        typeVariable = ((Class<?>) typeVariable.getGenericDeclaration()).getComponentType();\n+        actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+    }\n+    \n+    if (actualTypeArgument != null) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: cannot assign a value to final variable typeVariable",
    "test_result": "ERROR"
}