{
    "patch": "public static double regularizedGammaQ(double a, double x) {\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException();\n    }\n    if (x == 0) {\n        return 1;\n    }\n    final double LOG_ROOT_TWO_PI = 0.5 * Math.log(2 * Math.PI);\n    double b = x + (a * Math.log(a) - a);\n    double xp = a * Math.log(x) - x - logGamma(a);\n    if (b < 1) {\n        return Math.exp(xp) / a * regularizedGammaQ(a + 1, x);\n    } else {\n        double z = xp + LOG_ROOT_TWO_PI;\n        double w = 1 / b;\n        double y = w * z;\n        double ret = w;\n        double sum = y;\n        for (int i = 2; i < 100 && Math.abs(y) > 10e-15; i++) {\n            w *= (i - 1) * b;\n            y = (xp + Math.log(w)) / (i * i);\n            sum += y;\n        }\n        return 1 - (Math.exp(z) * sum / a);\n    }\n}\n\npublic static double logGamma(double x) {\n    if (x <= 0) {\n        throw new IllegalArgumentException(\"x must be positive\");\n    }\n    double sum = lg[0];\n    for (int i = 1; i < lg.length; i++) {\n        sum += lg[i] / (x + i - 1);\n    }\n    double tmp = x + g + .5;\n    return .5 * Math.log(2 * Math.PI)\n            + (x + .5) * Math.log(tmp)\n            - tmp\n            + Math.log(sum);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..f128861ae 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,47 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaQ(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException();\n+    }\n+    if (x == 0) {\n+        return 1;\n+    }\n+    final double LOG_ROOT_TWO_PI = 0.5 * Math.log(2 * Math.PI);\n+    double b = x + (a * Math.log(a) - a);\n+    double xp = a * Math.log(x) - x - logGamma(a);\n+    if (b < 1) {\n+        return Math.exp(xp) / a * regularizedGammaQ(a + 1, x);\n+    } else {\n+        double z = xp + LOG_ROOT_TWO_PI;\n+        double w = 1 / b;\n+        double y = w * z;\n+        double ret = w;\n+        double sum = y;\n+        for (int i = 2; i < 100 && Math.abs(y) > 10e-15; i++) {\n+            w *= (i - 1) * b;\n+            y = (xp + Math.log(w)) / (i * i);\n+            sum += y;\n+        }\n+        return 1 - (Math.exp(z) * sum / a);\n+    }\n+}\n+\n+public static double logGamma(double x) {\n+    if (x <= 0) {\n+        throw new IllegalArgumentException(\"x must be positive\");\n+    }\n+    double sum = lg[0];\n+    for (int i = 1; i < lg.length; i++) {\n+        sum += lg[i] / (x + i - 1);\n+    }\n+    double tmp = x + g + .5;\n+    return .5 * Math.log(2 * Math.PI)\n+            + (x + .5) * Math.log(tmp)\n+            - tmp\n+            + Math.log(sum);\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}