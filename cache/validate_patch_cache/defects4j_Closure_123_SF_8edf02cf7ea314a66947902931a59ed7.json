{
    "patch": "public String fixCode(String code) {\n    int index = code.indexOf(':');\n    if(index==-1) {\n        return code;\n    }\n    String operator = \"\";\n    if(index+1<code.length() && code.charAt(index+1)=='<') {\n        operator = \"<\";\n    } else if(index+1<code.length() && code.charAt(index+1)=='>') {\n        operator = \">\";\n    } else {\n        return code;\n    }\n    \n    String variable = \"\";\n    for(int i=index-1; i>=0; i--) {\n        char c = code.charAt(i);\n        if(c==' ' || c=='\\n' || c=='\\t') {\n            continue;\n        }\n        if(Character.isLetter(c)) {\n            variable = c + variable;\n        } else if(variable.length() > 0){\n            break;\n        }\n    }\n    \n    String constant = \"\";\n    for(int i=index+2; i<code.length(); i++) {\n        char c = code.charAt(i);\n        if(c==' ' || c=='\\n' || c=='\\t') {\n            continue;\n        }\n        if(Character.isDigit(c) || Character.isLetter(c)) {\n            constant += c;\n        } else if(constant.length() > 0) {\n            break;\n        }\n    }\n    \n    if(variable.isEmpty() || constant.isEmpty()) {\n        return code; // unable to identify variable or constant\n    }\n    \n    String replacement = \"for(\" + variable + \"=\" + constant + operator + \"0; ;)\";\n    return code.replaceFirst(\"for\\\\s*\\\\(\\\\s*\" + variable + \"\\\\s*=\\\\s*[^,;]+\\\\s*\" + operator + \"\\\\s*[^,;]+\\\\s*[,;]\", replacement);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..b0c13c74 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,53 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    int index = code.indexOf(':');\n+    if(index==-1) {\n+        return code;\n+    }\n+    String operator = \"\";\n+    if(index+1<code.length() && code.charAt(index+1)=='<') {\n+        operator = \"<\";\n+    } else if(index+1<code.length() && code.charAt(index+1)=='>') {\n+        operator = \">\";\n+    } else {\n+        return code;\n+    }\n+    \n+    String variable = \"\";\n+    for(int i=index-1; i>=0; i--) {\n+        char c = code.charAt(i);\n+        if(c==' ' || c=='\\n' || c=='\\t') {\n+            continue;\n+        }\n+        if(Character.isLetter(c)) {\n+            variable = c + variable;\n+        } else if(variable.length() > 0){\n+            break;\n+        }\n+    }\n+    \n+    String constant = \"\";\n+    for(int i=index+2; i<code.length(); i++) {\n+        char c = code.charAt(i);\n+        if(c==' ' || c=='\\n' || c=='\\t') {\n+            continue;\n+        }\n+        if(Character.isDigit(c) || Character.isLetter(c)) {\n+            constant += c;\n+        } else if(constant.length() > 0) {\n+            break;\n+        }\n+    }\n+    \n+    if(variable.isEmpty() || constant.isEmpty()) {\n+        return code; // unable to identify variable or constant\n+    }\n+    \n+    String replacement = \"for(\" + variable + \"=\" + constant + operator + \"0; ;)\";\n+    return code.replaceFirst(\"for\\\\s*\\\\(\\\\s*\" + variable + \"\\\\s*=\\\\s*[^,;]+\\\\s*\" + operator + \"\\\\s*[^,;]+\\\\s*[,;]\", replacement);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}