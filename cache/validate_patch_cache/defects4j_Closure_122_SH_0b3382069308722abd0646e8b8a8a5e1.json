{
    "patch": "if (comment != null && comment.getValue() != null && (comment.getValue().contains(\"@\") || comment.getValue().contains(\"* @\"))\n    && (comment.getValue().startsWith(\"/*\") && comment.getValue().endsWith(\"*/\"))) {\n    errorReporter.warning(SUSPICIOUS_COMMENT_WARNING, sourceName, comment.getLineno(), \"\", 0);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..1c02d55e 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -249,7 +249,10 @@ class IRFactory {\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n   private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n+if (comment != null && comment.getValue() != null && (comment.getValue().contains(\"@\") || comment.getValue().contains(\"* @\"))\n+    && (comment.getValue().startsWith(\"/*\") && comment.getValue().endsWith(\"*/\"))) {\n+    errorReporter.warning(SUSPICIOUS_COMMENT_WARNING, sourceName, comment.getLineno(), \"\", 0);\n+}\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n           sourceName,",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}