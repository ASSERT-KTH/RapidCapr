{
    "patch": "if (c == '\\\\' && i < n) {\n    char nextChar = str.charAt(i);\n    switch(nextChar) {\n        case '\"':\n        case '/':\n        case '\\\\':\n            out.append(nextChar);\n            i++;\n            break;\n        case 'b':\n            out.append('\\b');\n            i++;\n            break;\n        case 'f':\n            out.append('\\f');\n            i++;\n            break;\n        case 'n':\n            out.append('\\n');\n            i++;\n            break;\n        case 'r':\n            out.append('\\r');\n            i++;\n            break;\n        case 't':\n            out.append('\\t');\n            i++;\n            break;\n        case 'u':\n            if (i >= n - 5) {\n                success = false;\n                i = n; // to break out of the enclosing loop\n                out.append(c);\n                break;\n            }\n            int codePoint = Integer.parseInt(str.substring(i+1,i+5),16);\n            out.append(Character.toChars(codePoint));\n            i += 5;\n            break;\n        default:\n            success = false;\n            i = n; // to break out of the enclosing loop\n            out.append(c);\n            break;\n     }\n } else {\n     out.append(c);\n }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}