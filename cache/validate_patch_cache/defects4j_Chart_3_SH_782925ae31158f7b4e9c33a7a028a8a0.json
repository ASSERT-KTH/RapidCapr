{
    "patch": "    copy.data = new java.util.ArrayList<>();\n    if (this.data.size() > 0) {\n        // Find the indexes of the start and end items\n        int startIndex = Math.max(0, getIndex(this.getDataItem(start).getPeriod()));\n        int endIndex = Math.min(this.data.size() - 1, getIndex(this.getDataItem(end).getPeriod()));\n        // Copy the items in the specified range to the new time series\n        for (int i = startIndex; i <= endIndex; i++) {\n            try {\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) this.data.get(i).clone();\n                copy.add(clone);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..75e20c0 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,21 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+    copy.data = new java.util.ArrayList<>();\n+    if (this.data.size() > 0) {\n+        // Find the indexes of the start and end items\n+        int startIndex = Math.max(0, getIndex(this.getDataItem(start).getPeriod()));\n+        int endIndex = Math.min(this.data.size() - 1, getIndex(this.getDataItem(end).getPeriod()));\n+        // Copy the items in the specified range to the new time series\n+        for (int i = startIndex; i <= endIndex; i++) {\n+            try {\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) this.data.get(i).clone();\n+                copy.add(clone);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}