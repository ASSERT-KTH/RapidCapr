{
    "patch": "public Object execute(Object[] args) throws Exception {\n    if (args == null || args.length < 2) {\n        throw new IllegalArgumentException(\"Two arrays of String required\");\n    }\n\n    String[] keys = (String[]) args[0];\n    String[] values = (String[]) args[1];\n\n    if (keys.length != values.length) {\n        throw new IllegalArgumentException(\"Arrays must be of equal length\");\n    }\n\n    Map<String, String> map = new HashMap<>();\n\n    for (int i = 0; i < keys.length; i++) {\n        map.put(keys[i], values[i]);\n    }\n\n    return map;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}