{
    "patch": "for (int pt = 0; pt < consumed; pt++) {\n    char c = input.charAt(pos + pt);\n    if (c == '\\\\') {\n        // Handle escape character\n        if (pt + 1 < consumed) {\n            char next = input.charAt(pos + pt + 1);\n            switch (next) {\n                case 't':\n                    out.write('\\t');\n                    break;\n                case 'n':\n                    out.write('\\n');\n                    break;\n                case 'r':\n                    out.write('\\r');\n                    break;\n                case 'b':\n                    out.write('\\b');\n                    break;\n                default:\n                    out.write('\\\\');\n                    out.write(next);\n                    break;\n            }\n            pt++; // Skip next character\n        } else {\n            out.write('\\\\');\n        }\n    } else {\n        out.write(c);\n    }\n}\npos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..be08ef52 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,39 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+for (int pt = 0; pt < consumed; pt++) {\n+    char c = input.charAt(pos + pt);\n+    if (c == '\\\\') {\n+        // Handle escape character\n+        if (pt + 1 < consumed) {\n+            char next = input.charAt(pos + pt + 1);\n+            switch (next) {\n+                case 't':\n+                    out.write('\\t');\n+                    break;\n+                case 'n':\n+                    out.write('\\n');\n+                    break;\n+                case 'r':\n+                    out.write('\\r');\n+                    break;\n+                case 'b':\n+                    out.write('\\b');\n+                    break;\n+                default:\n+                    out.write('\\\\');\n+                    out.write(next);\n+                    break;\n+            }\n+            pt++; // Skip next character\n+        } else {\n+            out.write('\\\\');\n+        }\n+    } else {\n+        out.write(c);\n+    }\n+}\n+pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}