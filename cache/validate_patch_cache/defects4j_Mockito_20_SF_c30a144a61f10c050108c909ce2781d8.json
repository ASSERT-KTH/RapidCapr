{
    "patch": "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n        T mockInstance = null;\n        try {\n            mockInstance = classInstantiator.instantiate(mockedProxyType);\n\n            // Set enclosing instance for inner classes\n            if (mockedProxyType.isMemberClass()) {\n                Class<?> enclosingClass = mockedProxyType.getEnclosingClass();\n                Object enclosingInstance = enclosingClass.newInstance();\n                Field outerField = mockedProxyType.getDeclaredField(\"this$0\");\n                outerField.setAccessible(true);\n                outerField.set(mockInstance, enclosingInstance);\n            }\n\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockInstance),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        } catch (Exception e) {\n            throw new MockitoException(\"Unable to set enclosing instance for inner class '\" + mockedProxyType.getSimpleName() + \"'\", e);\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\nindex 9dc44e663..33fb9ff2b 100644\n--- a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n+++ b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n@@ -32,6 +32,16 @@ public class ByteBuddyMockMaker implements MockMaker {\n         T mockInstance = null;\n         try {\n             mockInstance = classInstantiator.instantiate(mockedProxyType);\n+\n+            // Set enclosing instance for inner classes\n+            if (mockedProxyType.isMemberClass()) {\n+                Class<?> enclosingClass = mockedProxyType.getEnclosingClass();\n+                Object enclosingInstance = enclosingClass.newInstance();\n+                Field outerField = mockedProxyType.getDeclaredField(\"this$0\");\n+                outerField.setAccessible(true);\n+                outerField.set(mockInstance, enclosingInstance);\n+            }\n+\n             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n \n@@ -49,6 +59,8 @@ public class ByteBuddyMockMaker implements MockMaker {\n             ),cce);\n         } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n             throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n+        } catch (Exception e) {\n+            throw new MockitoException(\"Unable to set enclosing instance for inner class '\" + mockedProxyType.getSimpleName() + \"'\", e);\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}