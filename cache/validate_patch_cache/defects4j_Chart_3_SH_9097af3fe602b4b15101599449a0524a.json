{
    "patch": "copy.data = new java.util.ArrayList();\nSet<RegularTimePeriod> periods = new HashSet<>();\nif (this.data.size() > 0) {\n    for (int index = start; index <= end && index < this.data.size(); index++) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n        RegularTimePeriod period = item.getPeriod();\n        if (!periods.contains(period)) {\n            copy.add((TimeSeriesDataItem) item.clone());\n            periods.add(period);\n        }\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..d1218d6 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,18 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+Set<RegularTimePeriod> periods = new HashSet<>();\n+if (this.data.size() > 0) {\n+    for (int index = start; index <= end && index < this.data.size(); index++) {\n+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+        RegularTimePeriod period = item.getPeriod();\n+        if (!periods.contains(period)) {\n+            copy.add((TimeSeriesDataItem) item.clone());\n+            periods.add(period);\n+        }\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}