{
    "patch": "                    // If we just return offsetAdjusted then the time is pushed\n                    // back before the transition, whereas it should be\n                    // on or after the transition\n                    final long diff = instantAdjusted + offsetLocal - nextAdjusted;\n                    return getOffset(diff);\n                }\n            } else if ((offsetLocal - offsetAdjusted) > 0) {\n                final long diff = instantLocal - offsetAdjusted;\n                if (diff < 0) {\n                    return offsetLocal;\n                }\n                final long prev = previousTransition(diff);\n                if ((prev + offsetLocal) >= instantAdjusted) {\n                    return offsetLocal;\n                }\n                return getOffset(prev);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..f7e71787 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,22 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    // If we just return offsetAdjusted then the time is pushed\n+                    // back before the transition, whereas it should be\n+                    // on or after the transition\n+                    final long diff = instantAdjusted + offsetLocal - nextAdjusted;\n+                    return getOffset(diff);\n+                }\n+            } else if ((offsetLocal - offsetAdjusted) > 0) {\n+                final long diff = instantLocal - offsetAdjusted;\n+                if (diff < 0) {\n+                    return offsetLocal;\n+                }\n+                final long prev = previousTransition(diff);\n+                if ((prev + offsetLocal) >= instantAdjusted) {\n+                    return offsetLocal;\n+                }\n+                return getOffset(prev);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}