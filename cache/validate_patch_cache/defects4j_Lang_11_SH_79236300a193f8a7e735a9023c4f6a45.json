{
    "patch": "        if(start == end) {\n            if(chars != null) {\n                return new String(chars);\n            }\n            if(numbers && !letters) {\n                return random(count, 48, 58, false, true, null, random);\n            }\n            if(!numbers && letters) {\n                return random(count, 97, 123, true, false, null, random);\n            }\n            return random(count, 0, 123, true, true, null, random);\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..04e202f0 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,18 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+        if(start == end) {\n+            if(chars != null) {\n+                return new String(chars);\n+            }\n+            if(numbers && !letters) {\n+                return random(count, 48, 58, false, true, null, random);\n+            }\n+            if(!numbers && letters) {\n+                return random(count, 97, 123, true, false, null, random);\n+            }\n+            return random(count, 0, 123, true, true, null, random);\n+        }\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "junit.framework.AssertionFailedError: Message (bound must be positive) must contain 'start'",
    "test_result": "FAIL"
}