{
    "patch": "        if (guess == null || guess.length == 0) {\n            throw new IllegalArgumentException(\"Invalid guess length.\");\n        }\n        try {\n            final Gaussian.Parametric model = new Gaussian.Parametric();\n            final double[] result = fit(model, guess);\n            if (result[0] <= 0) {\n                throw new NotStrictlyPositiveException(result[0]);\n            } else {\n                return result;\n            }\n        } catch (NotStrictlyPositiveException e) {\n            return new double[] {0.0, 0.0, 0.0};\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..86e92b70c 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,20 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        if (guess == null || guess.length == 0) {\n+            throw new IllegalArgumentException(\"Invalid guess length.\");\n+        }\n+        try {\n+            final Gaussian.Parametric model = new Gaussian.Parametric();\n+            final double[] result = fit(model, guess);\n+            if (result[0] <= 0) {\n+                throw new NotStrictlyPositiveException(result[0]);\n+            } else {\n+                return result;\n+            }\n+        } catch (NotStrictlyPositiveException e) {\n+            return new double[] {0.0, 0.0, 0.0};\n+        }\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<53.1572792> but was:<0.0>",
    "test_result": "FAIL"
}