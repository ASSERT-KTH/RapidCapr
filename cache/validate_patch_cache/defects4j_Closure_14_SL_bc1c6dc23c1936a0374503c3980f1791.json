{
    "patch": "if (finallyNode != null) {\n    cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n} else {\n    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(node.getParent(), node.getParent(), cfa));\n}\nreturn null;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..787378b4 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,12 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (finallyNode != null) {\n+    cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+} else {\n+    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(node.getParent(), node.getParent(), cfa));\n+}\n+return null;\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_MISSING_RETURN_STATEMENT. Missing return statement. Function expected to return number. at testcode line 1 : 24 expected:<0> but was:<1>",
    "test_result": "FAIL"
}