{
    "patch": "            for (int i = 0; i < count; i++) {\n                SavedField savedField = savedFields[i];\n                DateTimeField field = savedField.iField;\n                int old = millis;\n                try {\n                    millis = savedField.set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    int conflict = e.getIllegalFieldValue();\n                    if (field != null && field.getRangeDurationField().getType() == DurationFieldType.months()) {\n                        DateTimeField yearField = DateTimeFieldType.year().getField(iChrono);\n                        int year = yearField.get(old);\n                        int month = field.get(old);\n                        int day = DateTimeFieldType.dayOfMonth().getField(iChrono).get(old);\n                        while (month < 1) {\n                            month += 12;\n                            year--;\n                        }\n                        while (month > 12) {\n                            month -= 12;\n                            year++;\n                        }\n                        long instant = iChrono.getDateTimeMillis(year, month, day, 0);\n                        savedField.set(instant, resetFields);\n                        millis = savedField.set(millis, resetFields);\n                    } else {\n                        if (text != null) {\n                            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                        }\n                        throw e;\n                    }\n                }\n                if (field != null && field.getType() == DateTimeFieldType.year() && millis < 0) {\n                    try {\n                        DateTimeField dayOfYearField = DateTimeFieldType.dayOfYear().getField(iChrono);\n                        int dayOfYear = dayOfYearField.get(old);\n                        millis = dayOfYearField.add(millis, 1);\n                    } catch (IllegalFieldValueException e) {}\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..81fe1246 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,45 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            for (int i = 0; i < count; i++) {\n+                SavedField savedField = savedFields[i];\n+                DateTimeField field = savedField.iField;\n+                int old = millis;\n+                try {\n+                    millis = savedField.set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    int conflict = e.getIllegalFieldValue();\n+                    if (field != null && field.getRangeDurationField().getType() == DurationFieldType.months()) {\n+                        DateTimeField yearField = DateTimeFieldType.year().getField(iChrono);\n+                        int year = yearField.get(old);\n+                        int month = field.get(old);\n+                        int day = DateTimeFieldType.dayOfMonth().getField(iChrono).get(old);\n+                        while (month < 1) {\n+                            month += 12;\n+                            year--;\n+                        }\n+                        while (month > 12) {\n+                            month -= 12;\n+                            year++;\n+                        }\n+                        long instant = iChrono.getDateTimeMillis(year, month, day, 0);\n+                        savedField.set(instant, resetFields);\n+                        millis = savedField.set(millis, resetFields);\n+                    } else {\n+                        if (text != null) {\n+                            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                        }\n+                        throw e;\n+                    }\n+                }\n+                if (field != null && field.getType() == DateTimeFieldType.year() && millis < 0) {\n+                    try {\n+                        DateTimeField dayOfYearField = DateTimeFieldType.dayOfYear().getField(iChrono);\n+                        int dayOfYear = dayOfYearField.get(old);\n+                        millis = dayOfYearField.add(millis, 1);\n+                    } catch (IllegalFieldValueException e) {}\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}