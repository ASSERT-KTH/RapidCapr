{
    "patch": "public void testGetprop4() {\n    String key = \"key4\";\n    String value = \"value4\";\n    String defaultValue = \"defaultvalue\";\n    String[] args = { \"-D\" + key + \"=\" + value };\n    String[] warnings = SystemProperties.getProp(args, defaultValue);\n    assertNotNull(\"warnings array is null\", warnings);\n    assertTrue(\"expected a warning\", warnings.length > 0);\n    assertEquals(\"returned value is not correct\", value, System.getProperty(key, defaultValue));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..4db4db86 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() {\n+    String key = \"key4\";\n+    String value = \"value4\";\n+    String defaultValue = \"defaultvalue\";\n+    String[] args = { \"-D\" + key + \"=\" + value };\n+    String[] warnings = SystemProperties.getProp(args, defaultValue);\n+    assertNotNull(\"warnings array is null\", warnings);\n+    assertTrue(\"expected a warning\", warnings.length > 0);\n+    assertEquals(\"returned value is not correct\", value, System.getProperty(key, defaultValue));\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}