{
    "patch": "                        && (numeric.charAt(0) == '-' || numeric.charAt(0) == '+' || Character.isDigit(numeric.charAt(0)))\n                        && isDigits(numeric.substring(numeric.charAt(0) == '-' || numeric.charAt(0) == '+' ? 1 : 0).replaceAll(\"^0+[1-9]*\", \"\"))) {",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..03194a1b 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,8 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+                        && (numeric.charAt(0) == '-' || numeric.charAt(0) == '+' || Character.isDigit(numeric.charAt(0)))\n+                        && isDigits(numeric.substring(numeric.charAt(0) == '-' || numeric.charAt(0) == '+' ? 1 : 0).replaceAll(\"^0+[1-9]*\", \"\"))) {\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "java.lang.NumberFormatException: 01l is not a valid number.",
    "test_result": "FAIL"
}