{
    "patch": "      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION_NAME:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          defineDeclaredFunction(n, parent);\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..0d61c222 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1450,7 +1450,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       attachLiteralTypes(n);\n       switch (n.getType()) {\n-        case Token.FUNCTION:\n+        case Token.FUNCTION_NAME:\n           if (parent.getType() == Token.NAME) {\n             return;\n           }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}