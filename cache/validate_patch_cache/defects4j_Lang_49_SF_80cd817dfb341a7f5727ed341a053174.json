{
    "patch": "public Fraction reduce() {\n    int num = numerator;\n    int den = denominator;\n    if (num == 0) {\n        return new Fraction(0, 1);\n    }\n    int sign = 1;\n    if (num < 0) {\n        sign = -1;\n        num = -num;\n    }\n    if (den < 0) {\n        sign = -sign;\n        den = -den; \n    }\n    int gcd = gcd(num, den);\n    num = sign * num / gcd;\n    den /= gcd;\n    return new Fraction(num, den);\n}\n\nprivate int gcd(int a, int b) {\n    while (b != 0) {\n        int t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..bdb02df3 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,13 +462,35 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+public Fraction reduce() {\n+    int num = numerator;\n+    int den = denominator;\n+    if (num == 0) {\n+        return new Fraction(0, 1);\n+    }\n+    int sign = 1;\n+    if (num < 0) {\n+        sign = -1;\n+        num = -num;\n+    }\n+    if (den < 0) {\n+        sign = -sign;\n+        den = -den; \n+    }\n+    int gcd = gcd(num, den);\n+    num = sign * num / gcd;\n+    den /= gcd;\n+    return new Fraction(num, den);\n+}\n+\n+private int gcd(int a, int b) {\n+    while (b != 0) {\n+        int t = b;\n+        b = a % b;\n+        a = t;\n     }\n+    return a;\n+}\n \n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<-2/3> was not:<-2/3>",
    "test_result": "FAIL"
}