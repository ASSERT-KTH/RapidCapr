{
    "patch": "public static String unescape(String s) {\n    StringBuffer sb = new StringBuffer(s.length());\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        switch (c) {\n            case '\\\\':\n                i++;\n                if (i >= s.length()) {\n                    throw new IllegalArgumentException(\"Invalid escape sequence: \" + s.substring(i-1));\n                }\n                c = s.charAt(i);\n                switch (c) {\n                    case 'n': sb.append('\\n'); break;\n                    case 'r': sb.append('\\r'); break;\n                    case 't': sb.append('\\t'); break;\n                    case 'f': sb.append('\\f'); break;\n                    case '\\'': sb.append('\\''); break;\n                    case '\\\"': sb.append('\\\"'); break;\n                    case '\\\\': sb.append('\\\\'); break;\n                    case 'u':\n                        if (i+4 >= s.length()) {\n                            throw new IllegalArgumentException(\"Invalid unicode escape sequence: \"+s.substring(i));\n                        }\n                        int code = Integer.parseInt(s.substring(i+1, i+5), 16);\n                        sb.append((char)code);\n                        i += 4;\n                        break;\n                    case '0': case '1': case '2': case '3':\n                    case '4': case '5': case '6': case '7':\n                        int code = c - '0';\n                        if (i+1 < s.length() && s.charAt(i+1)>='0' && s.charAt(i+1)<='7') {\n                            code = code*8 + s.charAt(i+1) - '0';\n                            i++;\n                            if (i+1 < s.length() && s.charAt(i+1)>='0' && s.charAt(i+1)<='7') {\n                                code = code*8 + s.charAt(i+1) - '0';\n                                i++;\n                            }\n                        }\n                        sb.append((char)code);\n                        break;\n                    default:\n                        throw new IllegalArgumentException(\"Invalid escape character in string: \\\\\"+c);\n                }\n                break;\n            default:\n                sb.append(c);\n        }\n\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}