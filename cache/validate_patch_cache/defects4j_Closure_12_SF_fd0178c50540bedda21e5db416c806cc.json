{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode == null || cfgNode.isScript()) {\n        return false;\n    }\n    while (true) {\n        if (cfgNode.isTry()) {\n            return true;\n        }\n        if (cfgNode.isBlock()) {\n            boolean hasHandler = false;\n            for (Node child : cfgNode.children()) {\n                if (hasExceptionHandler(child)) {\n                    hasHandler = true;\n                    break;\n                }\n            }\n            if (hasHandler) {\n                return true;\n            }\n        }\n        cfgNode = cfgNode.getParent();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..b0657751 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,29 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode == null || cfgNode.isScript()) {\n+        return false;\n+    }\n+    while (true) {\n+        if (cfgNode.isTry()) {\n+            return true;\n+        }\n+        if (cfgNode.isBlock()) {\n+            boolean hasHandler = false;\n+            for (Node child : cfgNode.children()) {\n+                if (hasExceptionHandler(child)) {\n+                    hasHandler = true;\n+                    break;\n+                }\n+            }\n+            if (hasHandler) {\n+                return true;\n+            }\n+        }\n+        cfgNode = cfgNode.getParent();\n+    }\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}