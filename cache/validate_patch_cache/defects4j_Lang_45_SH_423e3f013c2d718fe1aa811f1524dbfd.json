{
    "patch": "// if the lower value is greater than or equal to the length of the string, return the string\nif (lower >= str.length()) {\n    return str;\n}\n\n// if the upper value is -1 (i.e. no limit) or is greater\n// than the length of the string, set to the length of the string\nif (upper == -1 || upper > str.length()) {\n    upper = str.length();\n}\n\n// if upper is less than or equal to lower, set upper to the index of the next space after lower or upper to the end of the string, whichever comes first\nif (upper <= lower) {\n    int indexOfSpace = str.indexOf(\" \", lower + 1);\n    if (indexOfSpace == -1 || indexOfSpace > upper) {\n        upper = str.length();\n    } else {\n        upper = indexOfSpace;\n    }\n}\n\nString result = str.substring(lower, upper);\nif (appendToEnd != null && upper != str.length() && !result.endsWith(appendToEnd)) {\n    result += appendToEnd;\n}\n\nreturn result;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..9c7c466b 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,33 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// if the lower value is greater than or equal to the length of the string, return the string\n+if (lower >= str.length()) {\n+    return str;\n+}\n+\n+// if the upper value is -1 (i.e. no limit) or is greater\n+// than the length of the string, set to the length of the string\n+if (upper == -1 || upper > str.length()) {\n+    upper = str.length();\n+}\n+\n+// if upper is less than or equal to lower, set upper to the index of the next space after lower or upper to the end of the string, whichever comes first\n+if (upper <= lower) {\n+    int indexOfSpace = str.indexOf(\" \", lower + 1);\n+    if (indexOfSpace == -1 || indexOfSpace > upper) {\n+        upper = str.length();\n+    } else {\n+        upper = indexOfSpace;\n+    }\n+}\n+\n+String result = str.substring(lower, upper);\n+if (appendToEnd != null && upper != str.length() && !result.endsWith(appendToEnd)) {\n+    result += appendToEnd;\n+}\n+\n+return result;\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable result is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}