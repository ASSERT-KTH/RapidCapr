{
    "patch": "public static boolean is_nested(String brackets) {\n    int opening_brackets = 0;\n    int closing_brackets = 0;\n    int cnt = 0;\n    for (int i = 0; i < brackets.length(); i++) {\n        if (brackets.charAt(i) == '[') {\n            opening_brackets++;\n        } else {\n            closing_brackets++;\n        }\n        if (closing_brackets > opening_brackets) {\n            return false;\n        }\n        if (closing_brackets == opening_brackets && closing_brackets > 0) {\n            cnt++;\n        }\n    }\n    return cnt >= 2;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_NESTED.java b/src/main/java/humaneval/buggy/IS_NESTED.java\nindex 28b9704..8ccbebe 100644\n--- a/src/main/java/humaneval/buggy/IS_NESTED.java\n+++ b/src/main/java/humaneval/buggy/IS_NESTED.java\n@@ -18,21 +18,23 @@ import java.util.Collections;\n  */\n \n public class IS_NESTED {\n-    public static boolean is_nested(String brackets) {\n-        ArrayList<Integer> opening_brackets = new ArrayList<>();\n-        ArrayList<Integer> closing_brackets = new ArrayList<>();\n-        for(int i = 0; i < brackets.length(); i++) {\n-            if(brackets.charAt(i) == '[') opening_brackets.add(i);\n-            else closing_brackets.add(i);\n+public static boolean is_nested(String brackets) {\n+    int opening_brackets = 0;\n+    int closing_brackets = 0;\n+    int cnt = 0;\n+    for (int i = 0; i < brackets.length(); i++) {\n+        if (brackets.charAt(i) == '[') {\n+            opening_brackets++;\n+        } else {\n+            closing_brackets++;\n         }\n-        Collections.reverse(opening_brackets);\n-        int cnt = 0, i = 0, l = opening_brackets.size();\n-        for(int idx : closing_brackets) {\n-            if(i < l || idx >= opening_brackets.get(i)) {\n-                i++;\n-                cnt++;\n-            }\n+        if (closing_brackets > opening_brackets) {\n+            return false;\n+        }\n+        if (closing_brackets == opening_brackets && closing_brackets > 0) {\n+            cnt++;\n         }\n-        return cnt >= 2;\n     }\n+    return cnt >= 2;\n+}\n }",
    "result_reason": "   TEST_IS_NESTED.test_0:6 expected:<true> but was:<false>",
    "test_result": "FAIL"
}