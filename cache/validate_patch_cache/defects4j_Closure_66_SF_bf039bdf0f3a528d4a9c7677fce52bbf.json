{
    "patch": "import com.google.gson.Gson;\nimport java.util.List;\nimport java.util.Map;\n\npublic class JsonParser {\n\n    public static double getTypedPercent(String json) {\n        Gson gson = new Gson();\n        Map<String, Object> map = gson.fromJson(json, Map.class);\n        double total = ((Number) map.get(\"total\")).doubleValue(); // Getting the total number as a double\n        List<Map<String, String>> list = (List<Map<String, String>>) map.get(\"list\");\n        double count = 0;\n        for (Map<String, String> item : list) {\n            String type = item.get(\"type\");\n            if (\"T\".equals(type)) {\n                count++;\n            }\n        }\n        return (count / total) * 100.0;\n    }\n\n    public static void main(String[] args) {\n        String json = \"{\\\"total\\\": 800, \\\"list\\\": [{\\\"type\\\": \\\"T\\\"}, {\\\"type\\\": \\\"T\\\"}, \" +\n                \"{\\\"type\\\": \\\"A\\\"}, {\\\"type\\\": \\\"T\\\"}, {\\\"type\\\": \\\"A\\\"}]}\";\n        System.out.println(getTypedPercent(json));\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..03062aba 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,33 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import com.google.gson.Gson;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class JsonParser {\n+\n+    public static double getTypedPercent(String json) {\n+        Gson gson = new Gson();\n+        Map<String, Object> map = gson.fromJson(json, Map.class);\n+        double total = ((Number) map.get(\"total\")).doubleValue(); // Getting the total number as a double\n+        List<Map<String, String>> list = (List<Map<String, String>>) map.get(\"list\");\n+        double count = 0;\n+        for (Map<String, String> item : list) {\n+            String type = item.get(\"type\");\n+            if (\"T\".equals(type)) {\n+                count++;\n+            }\n+        }\n+        return (count / total) * 100.0;\n+    }\n+\n+    public static void main(String[] args) {\n+        String json = \"{\\\"total\\\": 800, \\\"list\\\": [{\\\"type\\\": \\\"T\\\"}, {\\\"type\\\": \\\"T\\\"}, \" +\n+                \"{\\\"type\\\": \\\"A\\\"}, {\\\"type\\\": \\\"T\\\"}, {\\\"type\\\": \\\"A\\\"}]}\";\n+        System.out.println(getTypedPercent(json));\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}