{
    "patch": "public String[] getprop(String prop) {\n    String[] cmd = { \"/system/bin/getprop\", prop };\n    try {\n        Process p = Runtime.getRuntime().exec(cmd);\n        BufferedReader stdin = new BufferedReader(new InputStreamReader(p.getInputStream()));\n        List<String> output = new ArrayList<String>();\n        String line;\n        while ((line = stdin.readLine()) != null) {\n            output.add(line);\n        }\n        return output.toArray(new String[output.size()]);\n    } catch (IOException e) {\n        // Add exception handling code here.\n        return new String[0];\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..decc032a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String[] getprop(String prop) {\n+    String[] cmd = { \"/system/bin/getprop\", prop };\n+    try {\n+        Process p = Runtime.getRuntime().exec(cmd);\n+        BufferedReader stdin = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+        List<String> output = new ArrayList<String>();\n+        String line;\n+        while ((line = stdin.readLine()) != null) {\n+            output.add(line);\n+        }\n+        return output.toArray(new String[output.size()]);\n+    } catch (IOException e) {\n+        // Add exception handling code here.\n+        return new String[0];\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}