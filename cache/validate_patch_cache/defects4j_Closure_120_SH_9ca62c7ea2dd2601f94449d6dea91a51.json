{
    "patch": "            if (maybeInit.getBasicBlock() == maybeDecl.getBasicBlock()) {\n              return true;\n            }\n            boolean isDeclaredInFunction = maybeDecl.getBasicBlock().getFunction() != null;\n            // ensure that there are no other assignments in between the\n            // declaration and initialization\n            for (int i = 0; i < index - 1; i++) {\n              Reference prev = references.get(i);\n              if (prev.isAssignmentTo(maybeDecl.getName())\n                  && (isDeclaredInFunction || prev.getBasicBlock() == maybeDecl.getBasicBlock())) {\n                return false;\n              }\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..e865f4db 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,19 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+            if (maybeInit.getBasicBlock() == maybeDecl.getBasicBlock()) {\n+              return true;\n+            }\n+            boolean isDeclaredInFunction = maybeDecl.getBasicBlock().getFunction() != null;\n+            // ensure that there are no other assignments in between the\n+            // declaration and initialization\n+            for (int i = 0; i < index - 1; i++) {\n+              Reference prev = references.get(i);\n+              if (prev.isAssignmentTo(maybeDecl.getName())\n+                  && (isDeclaredInFunction || prev.getBasicBlock() == maybeDecl.getBasicBlock())) {\n+                return false;\n+              }\n+            }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}