{
    "patch": "      if (NodeUtil.isName(first) && first.getString().equals(\"eval\")) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n        n.putBooleanProp(Node.FREE_CALL, true);\n      } else if (!NodeUtil.isGet(first)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..ec1c4d9e 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,10 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      if (NodeUtil.isName(first) && first.getString().equals(\"eval\")) {\n+        first.putBooleanProp(Node.DIRECT_EVAL, true);\n+        n.putBooleanProp(Node.FREE_CALL, true);\n+      } else if (!NodeUtil.isGet(first)) {\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}