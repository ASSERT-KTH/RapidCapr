{
    "patch": "    public static String make_palindrome(String str) {\n        if (str.isEmpty()) {\n            return \"\";\n        }\n\n        int mid = str.length() / 2;\n        int i = mid - 1;\n        int j = (str.length() % 2 == 0) ? mid : mid + 1;\n\n        while (i >= 0 && j < str.length()) {\n            if (str.charAt(i) == str.charAt(j)) {\n                i--;\n                j++;\n            } else {\n                i = mid - 1;\n                j = (str.length() % 2 == 0) ? mid : mid + 1;\n                mid--;\n            }\n        }\n\n        String result = str.substring(0, mid);\n\n        StringBuilder sb = new StringBuilder(result);\n        return result + sb.reverse().toString();\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAKE_PALINDROME.java b/src/main/java/humaneval/buggy/MAKE_PALINDROME.java\nindex 05f44d8..44d854a 100644\n--- a/src/main/java/humaneval/buggy/MAKE_PALINDROME.java\n+++ b/src/main/java/humaneval/buggy/MAKE_PALINDROME.java\n@@ -9,17 +9,29 @@ public class MAKE_PALINDROME {\n         return true;\n     }\n \n-    public static String make_palindrome(String str){\n-        if (str.length() == 0)\n+    public static String make_palindrome(String str) {\n+        if (str.isEmpty()) {\n             return \"\";\n+        }\n+\n+        int mid = str.length() / 2;\n+        int i = mid - 1;\n+        int j = (str.length() % 2 == 0) ? mid : mid + 1;\n \n-        int beginning_of_suffix = 0;\n-        while (! is_palindrome(str.substring(beginning_of_suffix))){\n-            beginning_of_suffix += 1;\n+        while (i >= 0 && j < str.length()) {\n+            if (str.charAt(i) == str.charAt(j)) {\n+                i--;\n+                j++;\n+            } else {\n+                i = mid - 1;\n+                j = (str.length() % 2 == 0) ? mid : mid + 1;\n+                mid--;\n+            }\n         }\n-        \n-        String result = str;\n-        result += str.substring(0, beginning_of_suffix);\n-        return result;\n+\n+        String result = str.substring(0, mid);\n+\n+        StringBuilder sb = new StringBuilder(result);\n+        return result + sb.reverse().toString();\n     }\n }",
    "result_reason": "   TEST_MAKE_PALINDROME.test_1:15 expected:<[]> but was:<[x]>",
    "test_result": "FAIL"
}