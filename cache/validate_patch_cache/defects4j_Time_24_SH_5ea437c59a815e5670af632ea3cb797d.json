{
    "patch": "            } catch (IllegalArgumentException e) {\n                if (text != null) {\n                    String message;\n                    if (e.getMessage().contains(savedFields[i].getName())) {\n                        message = \"Cannot parse \\\"\" + text + \"\\\": conflict in \" + savedFields[i].getName();\n                    } else {\n                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage();\n                    }\n                    throw new IllegalArgumentException(message, e);\n                } else {\n                    throw e;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f62dd4bb 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalArgumentException e) {\n+                if (text != null) {\n+                    String message;\n+                    if (e.getMessage().contains(savedFields[i].getName())) {\n+                        message = \"Cannot parse \\\"\" + text + \"\\\": conflict in \" + savedFields[i].getName();\n+                    } else {\n+                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage();\n+                    }\n+                    throw new IllegalArgumentException(message, e);\n+                } else {\n+                    throw e;\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}