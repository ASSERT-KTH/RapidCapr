{
    "patch": "        protected JSType caseTopType(JSType topType) {\n          if (topType.equals(getRegistry().getNativeType(JSTypeNative.ARRAY_TYPE))) {\n              return topType;\n          } else {\n              return null;\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..48bd20a8 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,13 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+        protected JSType caseTopType(JSType topType) {\n+          if (topType.equals(getRegistry().getNativeType(JSTypeNative.ARRAY_TYPE))) {\n+              return topType;\n+          } else {\n+              return null;\n+          }\n+        }\n         }\n \n         @Override",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}