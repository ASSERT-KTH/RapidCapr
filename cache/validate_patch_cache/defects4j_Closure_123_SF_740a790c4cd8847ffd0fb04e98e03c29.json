{
    "patch": "public static String fixForLoop(String input) {\n    String[] tokens = input.split(\"\\\\s+\");\n    for (int i = 0; i < tokens.length; i++) {\n        if (tokens[i].equals(\"for\")) {\n            int openParenIndex = input.indexOf(\"(\", i);\n            int closeParenIndex = input.indexOf(\")\", openParenIndex);\n            String forLoopCondition = input.substring(openParenIndex + 1, closeParenIndex);\n            String[] conditionTokens = forLoopCondition.split(\"\\\\s+\");\n            for (int j = 0; j < conditionTokens.length; j++) {\n                if (conditionTokens[j].equals(\"in\")) {\n                    String collectionName = conditionTokens[j + 1];\n                    String newCondition = \"inArray(\" + collectionName + \", \" + conditionTokens[j - 1] + \")\";\n                    input = input.replace(forLoopCondition, newCondition);\n                    break;\n                }\n            }\n        }\n    }\n    return input;\n}\n\npublic static boolean inArray(Object[] array, Object item) {\n    for (Object element : array) {\n        if (element.equals(item)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..ba5826d5 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,35 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixForLoop(String input) {\n+    String[] tokens = input.split(\"\\\\s+\");\n+    for (int i = 0; i < tokens.length; i++) {\n+        if (tokens[i].equals(\"for\")) {\n+            int openParenIndex = input.indexOf(\"(\", i);\n+            int closeParenIndex = input.indexOf(\")\", openParenIndex);\n+            String forLoopCondition = input.substring(openParenIndex + 1, closeParenIndex);\n+            String[] conditionTokens = forLoopCondition.split(\"\\\\s+\");\n+            for (int j = 0; j < conditionTokens.length; j++) {\n+                if (conditionTokens[j].equals(\"in\")) {\n+                    String collectionName = conditionTokens[j + 1];\n+                    String newCondition = \"inArray(\" + collectionName + \", \" + conditionTokens[j - 1] + \")\";\n+                    input = input.replace(forLoopCondition, newCondition);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+    return input;\n+}\n+\n+public static boolean inArray(Object[] array, Object item) {\n+    for (Object element : array) {\n+        if (element.equals(item)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}