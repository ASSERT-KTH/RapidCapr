{
    "patch": "void add(String newcode) {\n  maybeEndStatement();\n\n  if (newcode.length() == 0) {\n    return;\n  }\n\n  char c = newcode.charAt(0);\n  if ((isWordChar(c) || c == '\\\\') && isWordChar(getLastChar())) {\n    // Need space t",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..b8e93279 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,29 +178,17 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n-    maybeEndStatement();\n-\n-    if (newcode.length() == 0) {\n-      return;\n-    }\n+void add(String newcode) {\n+  maybeEndStatement();\n \n-    char c = newcode.charAt(0);\n-    if ((isWordChar(c) || c == '\\\\') &&\n-        isWordChar(getLastChar())) {\n-      // need space to separate. This is not pretty printing.\n-      // For example: \"return foo;\"\n-      append(\" \");\n-      // Do not allow a forward slash to appear after a DIV.\n-      // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n-    }\n-\n-    append(newcode);\n+  if (newcode.length() == 0) {\n+    return;\n   }\n \n+  char c = newcode.charAt(0);\n+  if ((isWordChar(c) || c == '\\\\') && isWordChar(getLastChar())) {\n+    // Need space t\n+\n   void appendOp(String op, boolean binOp) {\n     append(op);\n   }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}