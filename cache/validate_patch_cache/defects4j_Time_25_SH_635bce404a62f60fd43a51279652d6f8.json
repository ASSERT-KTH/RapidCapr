{
    "patch": "                // if the offsets differ and we are not near a DST transition, return the previous offset\n                long prevTransition = previousTransition(instantLocal);\n                long nextTransition = nextTransition(instantLocal);\n                if ((prevTransition == nextTransition) || ((instantLocal - prevTransition) > MILLIS_IN_DAY) || ((nextTransition - instantLocal) > MILLIS_IN_DAY)) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1ce2c733 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,10 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // if the offsets differ and we are not near a DST transition, return the previous offset\n+                long prevTransition = previousTransition(instantLocal);\n+                long nextTransition = nextTransition(instantLocal);\n+                if ((prevTransition == nextTransition) || ((instantLocal - prevTransition) > MILLIS_IN_DAY) || ((nextTransition - instantLocal) > MILLIS_IN_DAY)) {\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}