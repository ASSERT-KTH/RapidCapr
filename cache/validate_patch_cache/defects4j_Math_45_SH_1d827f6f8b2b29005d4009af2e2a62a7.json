{
    "patch": "        if (rowDimension <= 0 || columnDimension <= 0 ||\n                ((long) rowDimension * columnDimension) > Integer.MAX_VALUE) {\n            throw new NumberIsTooLargeException(rowDimension, columnDimension, 0L, true);\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..21a7708c3 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,10 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+        if (rowDimension <= 0 || columnDimension <= 0 ||\n+                ((long) rowDimension * columnDimension) > Integer.MAX_VALUE) {\n+            throw new NumberIsTooLargeException(rowDimension, columnDimension, 0L, true);\n+        }\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: no suitable constructor found for NumberIsTooLargeException(int,int,long,boolean)",
    "test_result": "ERROR"
}