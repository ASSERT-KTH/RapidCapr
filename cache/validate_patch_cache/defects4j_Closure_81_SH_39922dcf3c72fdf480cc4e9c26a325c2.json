{
    "patch": "    Name name = functionNode.getFunctionName();\n    boolean isUnnamedFunction = false;\n    if (name == null || name.getIdentifier().isEmpty()) {\n        name = new Name(functionNode.getLineno(), \"\");\n        isUnnamedFunction = true;\n    }\n    Node node = newNode(Token.FUNCTION);\n    Node newName = transform(name);\n    if (isUnnamedFunction) {\n        // Old Rhino tagged the empty name node with the line number of the\n        // declaration.\n        newName.setLineno(functionNode.getLineno());\n        int lpColumn = functionNode.getBody().getAbsolutePosition();\n        newName.setCharno(position2charno(lpColumn));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..5a06aa2e 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,20 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+    Name name = functionNode.getFunctionName();\n+    boolean isUnnamedFunction = false;\n+    if (name == null || name.getIdentifier().isEmpty()) {\n+        name = new Name(functionNode.getLineno(), \"\");\n+        isUnnamedFunction = true;\n+    }\n+    Node node = newNode(Token.FUNCTION);\n+    Node newName = transform(name);\n+    if (isUnnamedFunction) {\n+        // Old Rhino tagged the empty name node with the line number of the\n+        // declaration.\n+        newName.setLineno(functionNode.getLineno());\n+        int lpColumn = functionNode.getBody().getAbsolutePosition();\n+        newName.setCharno(position2charno(lpColumn));\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}