{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n                if (i == 0 && savedFields[i].iFieldType == DateTimeFieldType.weekyear() && \n                        savedFields[i].iField.get(millis) <= 0) {\n                    throw new IllegalArgumentException(\"Invalid Year of Weekyear date: \" + savedFields[i].iField.get(millis));\n                }\n            }\n        } catch (IllegalFieldValueException e) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..6e9609b1 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].set(millis, resetFields);\n+                if (i == 0 && savedFields[i].iFieldType == DateTimeFieldType.weekyear() && \n+                        savedFields[i].iField.get(millis) <= 0) {\n+                    throw new IllegalArgumentException(\"Invalid Year of Weekyear date: \" + savedFields[i].iField.get(millis));\n+                }\n+            }\n+        } catch (IllegalFieldValueException e) {\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'try' without 'catch' or 'finally'",
    "test_result": "ERROR"
}