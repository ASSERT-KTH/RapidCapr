{
    "patch": "int fromIndex = 0;\nboolean success = true;\nwhile (fromIndex <= original.length() - 1) {\n    int escapeIndex = original.indexOf(\"&#\", fromIndex);\n    if (escapeIndex == -1){\n        sb.append(original.substring(fromIndex));\n        break;\n    }\n    sb.append(original.substring(fromIndex, escapeIndex));\n    int semiColonIndex = original.indexOf(\";\", escapeIndex);\n    if (semiColonIndex == -1) {\n        success = false;\n        sb.append(original.substring(escapeIndex));\n        break;\n    }\n    String entityToken = original.substring(escapeIndex + 2, semiColonIndex); // was \"+1\" in the original code (incorrect)\n    try {\n        int entity = Integer.parseInt(entityToken);\n        sb.append((char) entity);\n    } catch (NumberFormatException e) {\n        success = false;\n        sb.append(original.substring(escapeIndex, semiColonIndex + 1));\n    }\n    fromIndex = semiColonIndex + 1;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}