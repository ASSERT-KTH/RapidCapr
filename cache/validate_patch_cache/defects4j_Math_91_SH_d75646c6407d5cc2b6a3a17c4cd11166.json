{
    "patch": "// Compute the common denominator\nlong commonDenominator = lcm(denominator, object.denominator);\n\n// Convert the numerators to a common scale\nlong nOd = numerator * (commonDenominator / denominator);\nlong dOn = object.numerator * (commonDenominator / object.denominator);\n\nreturn (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..b6d102c88 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,14 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+// Compute the common denominator\n+long commonDenominator = lcm(denominator, object.denominator);\n+\n+// Convert the numerators to a common scale\n+long nOd = numerator * (commonDenominator / denominator);\n+long dOn = object.numerator * (commonDenominator / object.denominator);\n+\n+return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}