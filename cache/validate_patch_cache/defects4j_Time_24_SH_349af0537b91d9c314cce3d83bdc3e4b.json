{
    "patch": "        } catch (IllegalFieldValueException e) {\n            DurationField field = e.getField();\n            int index = -1;\n            for (int i = 0; i < count; i++) {\n                if (savedFields[i].matchesField(field)) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index >= 0) {\n                for (int i = index + 1; i < count; i++) {\n                    savedFields[i].reset();\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n                savedFields[index].set(millis, savedFields[index].getDifference());\n                savedFields[index].save();\n                millis = savedFields[0].set(millis, resetFields);\n            } else {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..19104582 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,30 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            DurationField field = e.getField();\n+            int index = -1;\n+            for (int i = 0; i < count; i++) {\n+                if (savedFields[i].matchesField(field)) {\n+                    index = i;\n+                    break;\n+                }\n+            }\n+            if (index >= 0) {\n+                for (int i = index + 1; i < count; i++) {\n+                    savedFields[i].reset();\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+                savedFields[index].set(millis, savedFields[index].getDifference());\n+                savedFields[index].save();\n+                millis = savedFields[0].set(millis, resetFields);\n+            } else {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}