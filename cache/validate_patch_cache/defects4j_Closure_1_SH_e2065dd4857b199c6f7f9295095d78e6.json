{
    "patch": "    int removedCount = 0;\n    for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n      if (arg.isUnusedParameter()) {\n        argList.removeChild(arg);\n        removedCount++;\n      }\n    }\n    if (removedCount > 0) {\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..ad69c364 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,15 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    int removedCount = 0;\n+    for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n+      if (arg.isUnusedParameter()) {\n+        argList.removeChild(arg);\n+        removedCount++;\n+      }\n+    }\n+    if (removedCount > 0) {\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}