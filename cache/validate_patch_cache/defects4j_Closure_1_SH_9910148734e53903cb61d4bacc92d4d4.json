{
    "patch": "Node function = fnScope.getRootNode();\n\nPreconditions.checkState(function.isFunction());\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n    // The parameters object literal setters can not be removed.\n    return;\n}\n\nNode argList = getFunctionArgList(function);\nboolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n\n// Collect unused parameters.\nSet<Node> unusedParams = new HashSet<>();\nNode parameter = argList.getFirstChild();\nwhile (parameter != null) {\n    Var parameterVar = fnScope.getVar(parameter.getString());\n    if (!referenced.contains(parameterVar)) {\n        unusedParams.add(parameter);\n    }\n    parameter = parameter.getNext();\n}\n\nif (!modifyCallers) {\n    // Strip unused parameters from the parameter list.\n    for (Node unusedParam: unusedParams) {\n        argList.removeChild(unusedParam);\n        compiler.reportCodeChange();\n    }\n} else {\n    callSiteOptimizer.optimize(fnScope, referenced);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0f35055f 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,38 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+\n+Preconditions.checkState(function.isFunction());\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+    // The parameters object literal setters can not be removed.\n+    return;\n+}\n+\n+Node argList = getFunctionArgList(function);\n+boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+\n+// Collect unused parameters.\n+Set<Node> unusedParams = new HashSet<>();\n+Node parameter = argList.getFirstChild();\n+while (parameter != null) {\n+    Var parameterVar = fnScope.getVar(parameter.getString());\n+    if (!referenced.contains(parameterVar)) {\n+        unusedParams.add(parameter);\n+    }\n+    parameter = parameter.getNext();\n+}\n+\n+if (!modifyCallers) {\n+    // Strip unused parameters from the parameter list.\n+    for (Node unusedParam: unusedParams) {\n+        argList.removeChild(unusedParam);\n+        compiler.reportCodeChange();\n+    }\n+} else {\n+    callSiteOptimizer.optimize(fnScope, referenced);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}