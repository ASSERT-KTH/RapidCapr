{
    "patch": "case REGULA_FALSI:\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    if (FastMath.abs(x1 - x0) < atol) {\n        throw new ConvergenceException(LocalizedFormats.CONVERGENCE_FAILED,\n                getMaxIterations(), \"algorithm stuck\");\n    } else {\n        // update the function value of x0\n        f0 = computeObjectiveValue(x0);\n    }\n    break;\ncase ILLINOIS:\n    f0 *= 0.5;\n    break;\ncase PEGASUS:\n    f0 *= f1 / (f1 + fx);\n    break;\ndefault:\n    // Should never happen.\n    throw new MathInternalError();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\nindex 8a667dad3..d2eeadbb3 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n@@ -186,6 +186,26 @@ public abstract class BaseSecantSolver\n                 case REGULA_FALSI:\n                     // Detect early that algorithm is stuck, instead of waiting\n                     // for the maximum number of iterations to be exceeded.\n+case REGULA_FALSI:\n+    // Detect early that algorithm is stuck, instead of waiting\n+    // for the maximum number of iterations to be exceeded.\n+    if (FastMath.abs(x1 - x0) < atol) {\n+        throw new ConvergenceException(LocalizedFormats.CONVERGENCE_FAILED,\n+                getMaxIterations(), \"algorithm stuck\");\n+    } else {\n+        // update the function value of x0\n+        f0 = computeObjectiveValue(x0);\n+    }\n+    break;\n+case ILLINOIS:\n+    f0 *= 0.5;\n+    break;\n+case PEGASUS:\n+    f0 *= f1 / (f1 + fx);\n+    break;\n+default:\n+    // Should never happen.\n+    throw new MathInternalError();\n                     break;\n                 default:\n                     // Should never happen.",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}