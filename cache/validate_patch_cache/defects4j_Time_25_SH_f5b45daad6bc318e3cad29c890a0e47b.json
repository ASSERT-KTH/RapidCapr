{
    "patch": "            // check if moving the instant back one millisecond hits the same offset\n            // if it does, we need to move back until we hit the next earliest transition\n            long prevLocal = previousTransition(instantLocal - offsetLocal);\n            long prevAdjusted = previousTransition(instantAdjusted);\n            if (prevLocal != prevAdjusted && offsetAdjusted == getOffset(prevAdjusted)) {\n                return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..600053a1 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,12 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            // check if moving the instant back one millisecond hits the same offset\n+            // if it does, we need to move back until we hit the next earliest transition\n+            long prevLocal = previousTransition(instantLocal - offsetLocal);\n+            long prevAdjusted = previousTransition(instantAdjusted);\n+            if (prevLocal != prevAdjusted && offsetAdjusted == getOffset(prevAdjusted)) {\n+                return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}