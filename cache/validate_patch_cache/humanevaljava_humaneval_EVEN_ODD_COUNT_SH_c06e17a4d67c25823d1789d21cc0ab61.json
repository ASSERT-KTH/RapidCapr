{
    "patch": "    public static int[] even_odd_count(int num) {\n        int even_count = 0;\n        int odd_count = 0;\n>>>     while (num > 0) {\n>>>         int rem = num % 10;\n>>>         if (rem % 2 == 0)\n>>>             even_count++;\n>>>         else\n>>>             odd_count++;\n>>>         num /= 10;\n>>>     }\n        return new int[] {even_count, odd_count};\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/EVEN_ODD_COUNT.java b/src/main/java/humaneval/buggy/EVEN_ODD_COUNT.java\nindex c396d73..1df93a9 100644\n--- a/src/main/java/humaneval/buggy/EVEN_ODD_COUNT.java\n+++ b/src/main/java/humaneval/buggy/EVEN_ODD_COUNT.java\n@@ -11,9 +11,19 @@ public class EVEN_ODD_COUNT {\n         int even_count = 0;\n         int odd_count = 0;\n \n-        for (char c : (num + \"\").toCharArray()) {\n-            if ((int)c % 2 == 0) even_count += 1;\n-            if ((int)c % 2 == 1) odd_count += 1;\n+    public static int[] even_odd_count(int num) {\n+        int even_count = 0;\n+        int odd_count = 0;\n+>>>     while (num > 0) {\n+>>>         int rem = num % 10;\n+>>>         if (rem % 2 == 0)\n+>>>             even_count++;\n+>>>         else\n+>>>             odd_count++;\n+>>>         num /= 10;\n+>>>     }\n+        return new int[] {even_count, odd_count};\n+    }\n         }\n         return new int[] {even_count, odd_count};\n     }",
    "result_reason": " /tmp/humaneval-EVEN_ODD_COUNT/src/main/java/humaneval/buggy/EVEN_ODD_COUNT.java:[14,5] illegal start of expression",
    "test_result": "ERROR"
}