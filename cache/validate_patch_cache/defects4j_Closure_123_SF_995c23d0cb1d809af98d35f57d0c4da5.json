{
    "patch": "public static String fixCode(String code) {\n    String result = code.replaceAll(\"\\\\[(.*)\\\\s+in\\\\s+(.*)\\\\](.*)\",\n                               \"($2.hasOwnProperty($1)$3 ? $2[$1] : false)$3\");\n    result = result.replaceAll(\"for\\\\((.*);(.*)in\\\\s+(.*);(.*)\\\\)\",\n                      \"for($1;$2<$3.length;$2++)\");\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..14b037e2 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,13 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String result = code.replaceAll(\"\\\\[(.*)\\\\s+in\\\\s+(.*)\\\\](.*)\",\n+                               \"($2.hasOwnProperty($1)$3 ? $2[$1] : false)$3\");\n+    result = result.replaceAll(\"for\\\\((.*);(.*)in\\\\s+(.*);(.*)\\\\)\",\n+                      \"for($1;$2<$3.length;$2++)\");\n+    return result;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}