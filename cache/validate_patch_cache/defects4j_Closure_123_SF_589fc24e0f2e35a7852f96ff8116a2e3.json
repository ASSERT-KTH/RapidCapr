{
    "patch": "public class CodeSnippet {\n    public static String fixCodeSnippet(String code) {\n        String fixedCode = code;\n        fixedCode = fixedCode.replace(\"(0 in d)\", \"d.contains(0)\");\n\n        // add missing braces to the ternary expression\n        int i = fixedCode.indexOf(\"?\") + 1;\n        while (Character.isWhitespace(fixedCode.charAt(i))) {\n            i++;\n        }\n        fixedCode = fixedCode.substring(0, i) + \"(\" + fixedCode.substring(i);\n        i = fixedCode.lastIndexOf(\":\") - 1;\n        while (Character.isWhitespace(fixedCode.charAt(i))) {\n            i--;\n        }\n        fixedCode = fixedCode.substring(0, i + 1) + \")\" + fixedCode.substring(i + 1);\n\n        return fixedCode;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..56d88641 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,26 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class CodeSnippet {\n+    public static String fixCodeSnippet(String code) {\n+        String fixedCode = code;\n+        fixedCode = fixedCode.replace(\"(0 in d)\", \"d.contains(0)\");\n+\n+        // add missing braces to the ternary expression\n+        int i = fixedCode.indexOf(\"?\") + 1;\n+        while (Character.isWhitespace(fixedCode.charAt(i))) {\n+            i++;\n+        }\n+        fixedCode = fixedCode.substring(0, i) + \"(\" + fixedCode.substring(i);\n+        i = fixedCode.lastIndexOf(\":\") - 1;\n+        while (Character.isWhitespace(fixedCode.charAt(i))) {\n+            i--;\n+        }\n+        fixedCode = fixedCode.substring(0, i + 1) + \")\" + fixedCode.substring(i + 1);\n+\n+        return fixedCode;\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}