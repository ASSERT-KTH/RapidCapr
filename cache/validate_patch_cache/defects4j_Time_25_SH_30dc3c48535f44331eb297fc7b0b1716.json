{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long prev = previousTransition(instantAdjusted);\n                int offsetPrev = getOffset(prev);\n                if (offsetPrev != offsetAdjusted && offsetPrev == offsetLocal) {\n                    return offsetLocal;\n                }\n                long next = nextTransition(instantAdjusted);\n                int offsetNext = getOffset(next);\n                if (offsetNext != offsetAdjusted && offsetNext == offsetLocal) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..dcb6ab11 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long prev = previousTransition(instantAdjusted);\n+                int offsetPrev = getOffset(prev);\n+                if (offsetPrev != offsetAdjusted && offsetPrev == offsetLocal) {\n+                    return offsetLocal;\n+                }\n+                long next = nextTransition(instantAdjusted);\n+                int offsetNext = getOffset(next);\n+                if (offsetNext != offsetAdjusted && offsetNext == offsetLocal) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}