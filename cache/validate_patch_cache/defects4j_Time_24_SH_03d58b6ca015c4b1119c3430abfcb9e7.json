{
    "patch": "        boolean parseFailure = false;\n        boolean weekyearSet = false;\n        for (int i = 0; i < count; i++) {\n            SavedField svfd = savedFields[i];\n            if (svfd.iField.getType() == DateTimeFieldType.weekyear()) {\n                weekyearSet = true;\n                break;\n            }\n            try {\n                millis = svfd.set(millis, resetFields);\n            } catch (IllegalArgumentException e) {\n                parseFailure = true;\n                if (text != null) {\n                    StringBuilder buf = new StringBuilder();\n                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n                    buf.append(e.getMessage());\n                    throw new IllegalArgumentException(buf.toString(), e);\n                }\n                throw e;\n            } catch (RuntimeException e) {\n                parseFailure = true;\n                if (!resetFields || !(e instanceof IllegalArgumentException)) {\n                    if (text != null) {\n                        throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": Invalid format\", e);\n                    } else {\n                        throw new IllegalArgumentException(\"Invalid format\", e);\n                    }\n                }\n                // ignore IllegalArgumentException during reset\n            }\n        }\n\n        if (weekyearSet) {\n            if (text != null) {\n                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": Weekyears can not be set\");\n            }\n            throw new IllegalArgumentException(\"Weekyears can not be set\");\n        }\n\n        if (parseFailure && resetFields) {\n            // reset fields and try again\n            iSavedFields = null;\n            iSavedFieldsShared = false;\n            iSavedFieldsCount = 0;\n            return computeMillis(true, text);\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d253f460 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,52 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        boolean parseFailure = false;\n+        boolean weekyearSet = false;\n+        for (int i = 0; i < count; i++) {\n+            SavedField svfd = savedFields[i];\n+            if (svfd.iField.getType() == DateTimeFieldType.weekyear()) {\n+                weekyearSet = true;\n+                break;\n+            }\n+            try {\n+                millis = svfd.set(millis, resetFields);\n+            } catch (IllegalArgumentException e) {\n+                parseFailure = true;\n+                if (text != null) {\n+                    StringBuilder buf = new StringBuilder();\n+                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n+                    buf.append(e.getMessage());\n+                    throw new IllegalArgumentException(buf.toString(), e);\n+                }\n+                throw e;\n+            } catch (RuntimeException e) {\n+                parseFailure = true;\n+                if (!resetFields || !(e instanceof IllegalArgumentException)) {\n+                    if (text != null) {\n+                        throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": Invalid format\", e);\n+                    } else {\n+                        throw new IllegalArgumentException(\"Invalid format\", e);\n+                    }\n+                }\n+                // ignore IllegalArgumentException during reset\n+            }\n+        }\n+\n+        if (weekyearSet) {\n+            if (text != null) {\n+                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": Weekyears can not be set\");\n+            }\n+            throw new IllegalArgumentException(\"Weekyears can not be set\");\n+        }\n+\n+        if (parseFailure && resetFields) {\n+            // reset fields and try again\n+            iSavedFields = null;\n+            iSavedFieldsShared = false;\n+            iSavedFieldsCount = 0;\n+            return computeMillis(true, text);\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Cannot parse \"1582-W01-1\": Weekyears can not be set",
    "test_result": "FAIL"
}