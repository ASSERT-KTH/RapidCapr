{
    "patch": "public static double gamma(double x) {\n    if (x == 0) {\n        return Double.POSITIVE_INFINITY;\n    } else if (x < 0.5) {\n        return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n    } else {\n        return (x - 1) * gamma(x - 1);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..589e1050f 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,15 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double gamma(double x) {\n+    if (x == 0) {\n+        return Double.POSITIVE_INFINITY;\n+    } else if (x < 0.5) {\n+        return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n+    } else {\n+        return (x - 1) * gamma(x - 1);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}