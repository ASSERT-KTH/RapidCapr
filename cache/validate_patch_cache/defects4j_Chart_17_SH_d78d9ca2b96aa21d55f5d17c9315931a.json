{
    "patch": "        TimeSeries clone;\n        try {\n            clone=(TimeSeries) super.clone();\n            data=new ArrayList(getItemCount());\n            for (int i=0;i<getItemCount();i++) {\n                TimeSeriesDataItem item=(TimeSeriesDataItem) data.get(i);\n                TimeSeriesDataItem cloneItem=(TimeSeriesDataItem) item.clone();\n                try {\n                    clone.addOrUpdate(cloneItem);\n                }\n                catch (SeriesException e) { // shouldn't happen\n                    e.printStackTrace();\n                }\n            }\n        }\n        catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..3ffc7ac 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        TimeSeries clone;\n+        try {\n+            clone=(TimeSeries) super.clone();\n+            data=new ArrayList(getItemCount());\n+            for (int i=0;i<getItemCount();i++) {\n+                TimeSeriesDataItem item=(TimeSeriesDataItem) data.get(i);\n+                TimeSeriesDataItem cloneItem=(TimeSeriesDataItem) item.clone();\n+                try {\n+                    clone.addOrUpdate(cloneItem);\n+                }\n+                catch (SeriesException e) { // shouldn't happen\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+        catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e);\n+        }\n         return clone;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}