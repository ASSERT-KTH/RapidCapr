{
    "patch": "public static double getTypedPercent(String json) {\n    try {\n        JSONObject obj = new JSONObject(json);\n        double typedCount = obj.getDouble(\"typed_count\");\n        double totalCount = obj.getDouble(\"total_count\");\n        double percent = (typedCount / totalCount) * 100;\n        return percent;\n    } catch (JSONException e) {\n        return -1.0; // or another appropriate error value\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..613c155e 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    try {\n+        JSONObject obj = new JSONObject(json);\n+        double typedCount = obj.getDouble(\"typed_count\");\n+        double totalCount = obj.getDouble(\"total_count\");\n+        double percent = (typedCount / totalCount) * 100;\n+        return percent;\n+    } catch (JSONException e) {\n+        return -1.0; // or another appropriate error value\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}