{
    "patch": "        Matcher patternMatcher= formatPattern.matcher(pattern);\n        if(!patternMatcher.lookingAt()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n\n        currentFormatField= patternMatcher.group();\n        nextStrategy = null;\n        Strategy currentStrategy= getStrategy(currentFormatField);\n        List<Strategy> collector = new ArrayList<Strategy>();\n        StringBuilder regex= new StringBuilder();\n        int patternMatcherEnd,currentPatternMatcherEnd;\n        for(patternMatcherEnd=patternMatcher.end(),currentPatternMatcherEnd=patternMatcherEnd; nextStrategy != null || patternMatcherEnd <= pattern.length();) {\n            \n            if(patternMatcherEnd <= pattern.length()) {\n                currentFormatField= nextStrategy != null ? patternMatcher.group() : currentFormatField;\n                currentStrategy= nextStrategy != null ? getStrategy(currentFormatField) : currentStrategy;\n                patternMatcher.region(patternMatcherEnd, pattern.length());\n                if(!patternMatcher.lookingAt()) {\n                    nextStrategy = null;\n                }else {\n                    nextStrategy = getStrategy(patternMatcher.group());\n                }\n            }\n\n            currentPatternMatcherEnd= nextStrategy != null ? patternMatcher.start() : patternMatcherEnd;\n            if(currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n            }\n            patternMatcherEnd= currentPatternMatcherEnd;\n        }\n        strategies= collector.toArray(new Strategy[collector.size()]);\n        parsePattern= Pattern.compile(regex.toString());\n        currentFormatField= null;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..329d458a 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,39 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        Matcher patternMatcher= formatPattern.matcher(pattern);\n+        if(!patternMatcher.lookingAt()) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+\n+        currentFormatField= patternMatcher.group();\n+        nextStrategy = null;\n+        Strategy currentStrategy= getStrategy(currentFormatField);\n+        List<Strategy> collector = new ArrayList<Strategy>();\n+        StringBuilder regex= new StringBuilder();\n+        int patternMatcherEnd,currentPatternMatcherEnd;\n+        for(patternMatcherEnd=patternMatcher.end(),currentPatternMatcherEnd=patternMatcherEnd; nextStrategy != null || patternMatcherEnd <= pattern.length();) {\n+            \n+            if(patternMatcherEnd <= pattern.length()) {\n+                currentFormatField= nextStrategy != null ? patternMatcher.group() : currentFormatField;\n+                currentStrategy= nextStrategy != null ? getStrategy(currentFormatField) : currentStrategy;\n+                patternMatcher.region(patternMatcherEnd, pattern.length());\n+                if(!patternMatcher.lookingAt()) {\n+                    nextStrategy = null;\n+                }else {\n+                    nextStrategy = getStrategy(patternMatcher.group());\n+                }\n+            }\n+\n+            currentPatternMatcherEnd= nextStrategy != null ? patternMatcher.start() : patternMatcherEnd;\n+            if(currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+            }\n+            patternMatcherEnd= currentPatternMatcherEnd;\n+        }\n+        strategies= collector.toArray(new Strategy[collector.size()]);\n+        parsePattern= Pattern.compile(regex.toString());\n+        currentFormatField= null;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: variable patternMatcher is already defined in method init()",
    "test_result": "ERROR"
}