{
    "patch": "char c = in.charAt(i);\nif (c == '\\\\') {\n    // Handle the escape character.\n    if (++i >= inLen) {\n        break;          // ERROR: No character to escape!\n    }\n    c = in.charAt(i);\n    switch (c) {\n        case '\"':\n            outBuffer.append('\"');\n            continue;\n        case '\\\\':\n            outBuffer.append('\\\\');\n            continue;\n        case '/':\n            outBuffer.append('/');\n            continue;\n        case 'b':\n            outBuffer.append('\\b');\n            continue;\n        case 'f':\n            outBuffer.append('\\f');\n            continue;\n        case 'n':\n            outBuffer.append('\\n');\n            continue;\n        case 'r':\n            outBuffer.append('\\r');\n            continue;\n        case 't':\n            outBuffer.append('\\t');\n            continue;\n        case 'u':\n            if (!parseUnicodeEscape(in, outBuffer, i+1)) {\n                // parseUnicodeEscape() will have emitted an error message.\n                break;\n            }\n            i += 4;\n            continue;\n        default:\n            outBuffer.append('\\\\');\n            outBuffer.append(c);\n            continue;\n        }\n} else if (c < 0x20) {",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}