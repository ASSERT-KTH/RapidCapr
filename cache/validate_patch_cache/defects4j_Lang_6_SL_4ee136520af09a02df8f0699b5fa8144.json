{
    "patch": "int codePoint = Character.codePointAt(input, pos);\nint consumed = translate(Character.toChars(codePoint), 0, out);\nif (consumed == 0) {\n    out.write(input.charAt(pos));\n    consumed = 1;\n}\npos += Character.charCount(codePoint);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..94eaf673 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,13 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+int codePoint = Character.codePointAt(input, pos);\n+int consumed = translate(Character.toChars(codePoint), 0, out);\n+if (consumed == 0) {\n+    out.write(input.charAt(pos));\n+    consumed = 1;\n+}\n+pos += Character.charCount(codePoint);\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}