{
    "patch": "TypeVariable<?>[] typeVariables = enclosingClass.getDeclaredTypeParameters();\nfor (TypeVariable<?> tv : typeVariables) {\n    Type[] bounds = tv.getBounds();\n    for (Type bound : bounds) {\n        if (bound instanceof TypeVariable<?>) {\n            TypeVariable<?> typeVariable = (TypeVariable<?>) bound;\n            Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n            if (actualTypeArgument != null) {\n                registerTypeVariablesOn(actualTypeArgument);\n            }\n        } else {\n            registerTypeVariablesOn(bound);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..fec7df120 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,26 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+TypeVariable<?>[] typeVariables = enclosingClass.getDeclaredTypeParameters();\n+for (TypeVariable<?> tv : typeVariables) {\n+    Type[] bounds = tv.getBounds();\n+    for (Type bound : bounds) {\n+        if (bound instanceof TypeVariable<?>) {\n+            TypeVariable<?> typeVariable = (TypeVariable<?>) bound;\n+            Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+            if (actualTypeArgument != null) {\n+                registerTypeVariablesOn(actualTypeArgument);\n+            }\n+        } else {\n+            registerTypeVariablesOn(bound);\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}