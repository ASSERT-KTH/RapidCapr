{
    "patch": "      ObjectType thisType = null;\n      if (functionType.getTypeOfThis() != null\n          && functionType.getTypeOfThis() instanceof ObjectType) {\n        thisType = (ObjectType) functionType.getTypeOfThis();\n\n        if (!NodeUtil.isGetOrSetKey(child, n)) {\n          report(\n              t,\n              child,\n              MUST_BE_GET_OR_SET,\n              \"'this' before calling a function with @this\");\n        } else {\n          // If `thisType` is non-null, it is guaranteed that `child` is a GETPROP or GETELEM.\n          Node getPropOrGetElem = child;\n          while (getPropOrGetElem.isGetElem() || getPropOrGetElem.isGetProp()) {\n            getPropOrGetElem = getPropOrGetElem.getFirstChild();\n          }\n          JSType getOrSetType = getJSType(getPropOrGetElem);\n          if (getOrSetType != null) {\n            if (!getOrSetType.isSubtypeOf(thisType)) {\n              warnings.add(\n                  JSError.make(\n                      THIS_TYPE_MISMATCH,\n                      t.getSourceName(),\n                      t.getLineNumber(getPropOrGetElem),\n                      t.getCharno(getPropOrGetElem)));\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..54c548b8 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,36 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      ObjectType thisType = null;\n+      if (functionType.getTypeOfThis() != null\n+          && functionType.getTypeOfThis() instanceof ObjectType) {\n+        thisType = (ObjectType) functionType.getTypeOfThis();\n+\n+        if (!NodeUtil.isGetOrSetKey(child, n)) {\n+          report(\n+              t,\n+              child,\n+              MUST_BE_GET_OR_SET,\n+              \"'this' before calling a function with @this\");\n+        } else {\n+          // If `thisType` is non-null, it is guaranteed that `child` is a GETPROP or GETELEM.\n+          Node getPropOrGetElem = child;\n+          while (getPropOrGetElem.isGetElem() || getPropOrGetElem.isGetProp()) {\n+            getPropOrGetElem = getPropOrGetElem.getFirstChild();\n+          }\n+          JSType getOrSetType = getJSType(getPropOrGetElem);\n+          if (getOrSetType != null) {\n+            if (!getOrSetType.isSubtypeOf(thisType)) {\n+              warnings.add(\n+                  JSError.make(\n+                      THIS_TYPE_MISMATCH,\n+                      t.getSourceName(),\n+                      t.getLineNumber(getPropOrGetElem),\n+                      t.getCharno(getPropOrGetElem)));\n+            }\n+          }\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: method isGetOrSetKey in class NodeUtil cannot be applied to given types;",
    "test_result": "ERROR"
}