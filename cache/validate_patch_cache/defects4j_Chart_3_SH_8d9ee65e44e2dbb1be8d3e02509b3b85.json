{
    "patch": "    public void addAndOrUpdate(List<TimeSeriesDataItem> dataItems) {\n        for (TimeSeriesDataItem dataItem : dataItems) {\n            if (data.contains(dataItem)) {\n                int index = data.indexOf(dataItem);\n                data.update(index, dataItem);\n            } else {\n                data.add(dataItem);\n            }\n        }\n        updateBounds();\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..7c5bd6e 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+    public void addAndOrUpdate(List<TimeSeriesDataItem> dataItems) {\n+        for (TimeSeriesDataItem dataItem : dataItems) {\n+            if (data.contains(dataItem)) {\n+                int index = data.indexOf(dataItem);\n+                data.update(index, dataItem);\n+            } else {\n+                data.add(dataItem);\n+            }\n+        }\n+        updateBounds();\n+    }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}