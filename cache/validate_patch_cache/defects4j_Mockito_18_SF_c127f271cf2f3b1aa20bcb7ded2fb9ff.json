{
    "patch": "public static List<Integer> removeDuplicates(List<Integer> nums) {\n    if (nums == null || nums.isEmpty()) {\n        return Collections.emptyList();\n    }\n    Set<Integer> set = new HashSet<>();\n    Iterator<Integer> iterator = nums.iterator();\n    while (iterator.hasNext()) {\n        Integer num = iterator.next();\n        if (!set.add(num)) {\n            iterator.remove();\n        }\n    }\n    return nums;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..3dde77cf9 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,20 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static List<Integer> removeDuplicates(List<Integer> nums) {\n+    if (nums == null || nums.isEmpty()) {\n+        return Collections.emptyList();\n+    }\n+    Set<Integer> set = new HashSet<>();\n+    Iterator<Integer> iterator = nums.iterator();\n+    while (iterator.hasNext()) {\n+        Integer num = iterator.next();\n+        if (!set.add(num)) {\n+            iterator.remove();\n+        }\n+    }\n+    return nums;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}