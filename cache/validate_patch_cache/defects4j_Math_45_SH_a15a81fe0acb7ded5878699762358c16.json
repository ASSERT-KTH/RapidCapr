{
    "patch": "if (rowDimension <= 0 || columnDimension <= 0) {\n    throw new IllegalArgumentException(\"Invalid matrix dimensions: \" + rowDimension + \" x \" + columnDimension);\n}\nif ((double) rowDimension * (double) columnDimension > Integer.MAX_VALUE) {\n    throw new NumberIsTooLargeException(\n            \"Matrix dimensions are too large: \" + rowDimension + \" x \" + columnDimension);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..500c21f05 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,13 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+if (rowDimension <= 0 || columnDimension <= 0) {\n+    throw new IllegalArgumentException(\"Invalid matrix dimensions: \" + rowDimension + \" x \" + columnDimension);\n+}\n+if ((double) rowDimension * (double) columnDimension > Integer.MAX_VALUE) {\n+    throw new NumberIsTooLargeException(\n+            \"Matrix dimensions are too large: \" + rowDimension + \" x \" + columnDimension);\n+}\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: no suitable constructor found for NumberIsTooLargeException(String)",
    "test_result": "ERROR"
}