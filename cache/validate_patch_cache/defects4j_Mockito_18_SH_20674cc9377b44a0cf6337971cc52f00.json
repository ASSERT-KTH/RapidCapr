{
    "patch": "public ReturnValue execute(Context context, Object[] args) {\n    // assume first argument is an Iterable\n    Iterable iterable = (Iterable) args[0];\n    Double sum = 0.0;\n    int count = 0;\n    for (Object obj : iterable) {\n        if (obj instanceof Number) {\n            Number num = (Number) obj;\n            sum += num.doubleValue();\n            count++;\n        }\n    }\n    if (count == 0) {\n        return new ReturnValue(sum);\n    } else {\n        return new ReturnValue(sum / count);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}