{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.MathUtils;\nimport org.apache.commons.math3.util.Precision;\nimport org.apache.commons.math3.stat.inference.TestUtils;\n\n\npublic class GammaFunction {\n\n   public static double regularizedGamma(double a, double x)\n   {\n      if (a <= 0.0 || x < 0.0) {\n         throw new IllegalArgumentException();\n      }\n\n      final double epsilon = 10e-15;\n      double term = 1 / a;\n      double sum = term;\n\n      while (Precision.compareTo(term, epsilon, 0) > 0) {\n         term *= x / (a + sum);\n         sum += term;\n      }\n\n      return Math.exp(-x + (a * Math.log(x)) - org.apache.commons.math3.special.Gamma.logGamma(a)) * sum;\n   }\n\n   public static void main(String[] args) {\n      double expected = 0.632120558828558;\n      double a = 1.0;\n      double x = 1.0;\n      double actualP = regularizedGamma(a, x);\n      TestUtils.assertEquals(expected, actualP, 10e-15);\n   }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..3ed4862b0 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,40 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.MathUtils;\n+import org.apache.commons.math3.util.Precision;\n+import org.apache.commons.math3.stat.inference.TestUtils;\n+\n+\n+public class GammaFunction {\n+\n+   public static double regularizedGamma(double a, double x)\n+   {\n+      if (a <= 0.0 || x < 0.0) {\n+         throw new IllegalArgumentException();\n+      }\n+\n+      final double epsilon = 10e-15;\n+      double term = 1 / a;\n+      double sum = term;\n+\n+      while (Precision.compareTo(term, epsilon, 0) > 0) {\n+         term *= x / (a + sum);\n+         sum += term;\n+      }\n+\n+      return Math.exp(-x + (a * Math.log(x)) - org.apache.commons.math3.special.Gamma.logGamma(a)) * sum;\n+   }\n+\n+   public static void main(String[] args) {\n+      double expected = 0.632120558828558;\n+      double a = 1.0;\n+      double x = 1.0;\n+      double actualP = regularizedGamma(a, x);\n+      TestUtils.assertEquals(expected, actualP, 10e-15);\n+   }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}