{
    "patch": "                    depth += 1;\n                    max_depth = Math.max(depth, max_depth);\n                } else if (c == ')') {\n                    depth -= 1;\n                    if (depth < 0) {\n                        return Collections.emptyList(); // invalid string\n                    }\n                }\n            }\n            if (depth != 0) {\n              return Collections.emptyList(); // missing a closing bracket\n            }\n            result.add(max_depth);\n        }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\nindex 6bc914f..0a4256f 100644\n--- a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n+++ b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n@@ -15,6 +15,20 @@ public class PARSE_NESTED_PARENS {\n                 if (c == '('){\n                     depth += 1;\n                     max_depth = Math.max(depth, max_depth);\n+                    depth += 1;\n+                    max_depth = Math.max(depth, max_depth);\n+                } else if (c == ')') {\n+                    depth -= 1;\n+                    if (depth < 0) {\n+                        return Collections.emptyList(); // invalid string\n+                    }\n+                }\n+            }\n+            if (depth != 0) {\n+              return Collections.emptyList(); // missing a closing bracket\n+            }\n+            result.add(max_depth);\n+        }\n                 }\n             }\n             result.add(max_depth);",
    "result_reason": " /tmp/humaneval-PARSE_NESTED_PARENS/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java:[34,13] class, interface, or enum expected",
    "test_result": "ERROR"
}