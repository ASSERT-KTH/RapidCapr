{
    "patch": "int indexOfDot = namespace.lastIndexOf('.');\nif (indexOfDot != -1) {\n  // Found a dot in the namespace\n  if (indexOfDot == namespace.length() - 1) {\n    // The dot is the last character in the namespace\n    // Remove it and search again\n    namespace = namespace.substring(0, indexOfDot);\n    indexOfDot = namespace.lastIndexOf('.');\n  }\n} else {\n  // If no dot is found, set the index to -1\n  indexOfDot = -1;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..21794fc0 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -786,7 +786,19 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+int indexOfDot = namespace.lastIndexOf('.');\n+if (indexOfDot != -1) {\n+  // Found a dot in the namespace\n+  if (indexOfDot == namespace.length() - 1) {\n+    // The dot is the last character in the namespace\n+    // Remove it and search again\n+    namespace = namespace.substring(0, indexOfDot);\n+    indexOfDot = namespace.lastIndexOf('.');\n+  }\n+} else {\n+  // If no dot is found, set the index to -1\n+  indexOfDot = -1;\n+}\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)",
    "result_reason": "error: cannot assign a value to final variable namespace",
    "test_result": "ERROR"
}