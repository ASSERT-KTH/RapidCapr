{
    "patch": "// check if input character is an escaped character\nif (input.charAt(pos) == '\\\\') {\n    if (pos + 1 >= len) {\n        throw new IllegalArgumentException(\"Invalid unicode input: \" + input.subSequence(pos, len));\n    }\n    char escapedChar = input.charAt(pos + 1);\n    out.write(escapedChar);\n    pos += 2;\n    continue;\n}\npos++;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..c9791321 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,17 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+// check if input character is an escaped character\n+if (input.charAt(pos) == '\\\\') {\n+    if (pos + 1 >= len) {\n+        throw new IllegalArgumentException(\"Invalid unicode input: \" + input.subSequence(pos, len));\n+    }\n+    char escapedChar = input.charAt(pos + 1);\n+    out.write(escapedChar);\n+    pos += 2;\n+    continue;\n+}\n+pos++;\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: 8",
    "test_result": "FAIL"
}