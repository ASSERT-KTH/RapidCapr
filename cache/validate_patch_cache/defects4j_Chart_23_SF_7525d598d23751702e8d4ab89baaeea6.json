{
    "patch": "public class RectangleTest {\n    public static void main(String[] args) {\n        Rectangle r1 = new Rectangle(2, 3);\n        Rectangle r2 = new Rectangle(4, 5);\n\n        // test equals method\n        assertFalse(r1.equals(r2));\n        assertTrue(r1.equals(new Rectangle(2, 3)));\n        assertTrue(r2.equals(new Rectangle(4, 5)));\n        assertFalse(r1.equals(null));\n        assertFalse(r1.equals(\"rectangle\"));\n\n        // test hashCode method\n        assertTrue(r1.hashCode() == new Rectangle(2, 3).hashCode());\n        assertTrue(r2.hashCode() == new Rectangle(4, 5).hashCode());\n    }\n}\n\nclass Rectangle {\n    private int width;\n    private int height;\n\n    public Rectangle(int width, int height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (o == this) {\n            return true;\n        }\n\n        if (!(o instanceof Rectangle)) {\n            return false;\n        }\n\n        Rectangle r = (Rectangle) o;\n        return r.width == this.width && r.height == this.height;\n    }\n\n    @Override\n    public int hashCode() {\n        return 31 * this.width + this.height;\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\nindex bbd5ddb..f3c636f 100644\n--- a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n@@ -327,7 +327,52 @@ public class MinMaxCategoryRenderer extends AbstractCategoryItemRenderer {\n      * @param column  the column index (zero-based).\n      * @param pass  the pass index.\n      */\n-    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n+public class RectangleTest {\n+    public static void main(String[] args) {\n+        Rectangle r1 = new Rectangle(2, 3);\n+        Rectangle r2 = new Rectangle(4, 5);\n+\n+        // test equals method\n+        assertFalse(r1.equals(r2));\n+        assertTrue(r1.equals(new Rectangle(2, 3)));\n+        assertTrue(r2.equals(new Rectangle(4, 5)));\n+        assertFalse(r1.equals(null));\n+        assertFalse(r1.equals(\"rectangle\"));\n+\n+        // test hashCode method\n+        assertTrue(r1.hashCode() == new Rectangle(2, 3).hashCode());\n+        assertTrue(r2.hashCode() == new Rectangle(4, 5).hashCode());\n+    }\n+}\n+\n+class Rectangle {\n+    private int width;\n+    private int height;\n+\n+    public Rectangle(int width, int height) {\n+        this.width = width;\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (o == this) {\n+            return true;\n+        }\n+\n+        if (!(o instanceof Rectangle)) {\n+            return false;\n+        }\n+\n+        Rectangle r = (Rectangle) o;\n+        return r.width == this.width && r.height == this.height;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31 * this.width + this.height;\n+    }\n+}\n             Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n             ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n             int pass) {",
    "result_reason": "error: annotations are not supported in -source 1.4",
    "test_result": "ERROR"
}