{
    "patch": "private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n    final double n1Double = (double) n1;\n    final double n2Double = (double) n2;\n    final double n1n2 = n1Double * n2Double;\n\n    // Calculate the mean and variance\n    final double mean = n1n2 / 2.0;\n    final double variance = (n1n2 / 12.0) * ((n1 + n2 + 1.0) - (((n1 + n2) * (n1 + n2 - 1.0)) / (n1n2)));\n\n    // Calculate the standard deviation\n    final double standardDeviation = Math.sqrt(variance);\n\n    // Calculate the z-score\n    final double z = (Umin - mean) / standardDeviation;\n\n    // Use the normal distribution to calculate the p-value\n    final NormalDistribution standardNormal = new NormalDistribution();\n    final double pValue = 2 * standardNormal.cumulativeProbability(-Math.abs(z));\n\n    return pValue;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\nindex ce694ce8f..c1f6357f7 100644\n--- a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\n+++ b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\n@@ -165,23 +165,29 @@ public class MannWhitneyUTest {\n      * @throws MaxCountExceededException if the maximum number of\n      * iterations is exceeded\n      */\n-    private double calculateAsymptoticPValue(final double Umin,\n-                                             final int n1,\n-                                             final int n2)\n+private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2)\n         throws ConvergenceException, MaxCountExceededException {\n \n-        final int n1n2prod = n1 * n2;\n+    final double n1Double = (double) n1;\n+    final double n2Double = (double) n2;\n+    final double n1n2 = n1Double * n2Double;\n \n-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n-        final double EU = n1n2prod / 2.0;\n-        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n+    // Calculate the mean and variance\n+    final double mean = n1n2 / 2.0;\n+    final double variance = (n1n2 / 12.0) * ((n1 + n2 + 1.0) - (((n1 + n2) * (n1 + n2 - 1.0)) / (n1n2)));\n \n-        final double z = (Umin - EU) / FastMath.sqrt(VarU);\n+    // Calculate the standard deviation\n+    final double standardDeviation = Math.sqrt(variance);\n \n-        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n+    // Calculate the z-score\n+    final double z = (Umin - mean) / standardDeviation;\n \n-        return 2 * standardNormal.cumulativeProbability(z);\n-    }\n+    // Use the normal distribution to calculate the p-value\n+    final NormalDistribution standardNormal = new NormalDistribution();\n+    final double pValue = 2 * standardNormal.cumulativeProbability(-Math.abs(z));\n+\n+    return pValue;\n+}\n \n     /**\n      * Returns the asymptotic <i>observed significance level</i>, or <a href=",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.08641> but was:<0.0320887339782312>",
    "test_result": "FAIL"
}