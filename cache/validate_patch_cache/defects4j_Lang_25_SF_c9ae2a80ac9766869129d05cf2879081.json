{
    "patch": "public static String unescape(final String str) {\n    int start = 0;\n    int end = str.length();\n    StringBuilder result = new StringBuilder(end - start);\n    for (int i = start; i < end; i++) {\n        final char curChar = str.charAt(i);\n        if (curChar == '\\\\') {\n            if (i + 1 < end) {\n                final char nextChar = str.charAt(++i);\n                switch (nextChar) {\n                    case '\\\\':\n                        result.append('\\\\');\n                        break;\n                    case 'r':\n                        result.append('\\r');\n                        break;\n                    case 'f':\n                        result.append('\\f');\n                        break;\n                    case 't':\n                        result.append('\\t');\n                        break;\n                    case 'n':\n                        result.append('\\n');\n                        break;\n                    case '\\\"':\n                        result.append('\\\"');\n                        break;\n                    case '\\'':\n                        result.append('\\'');\n                        break;\n                    case 'u':\n                        if (i + 4 < end) {\n                            char uniChar = (char) Integer.parseInt(str.substring(i + 1, i + 5), 16);\n                            result.append(uniChar);\n                            i += 4;\n                            break;\n                        }\n                    default:\n                        result.append(nextChar);\n                }\n            }\n        } else {\n            result.append(curChar);\n        }\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..a6a28678 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,54 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(final String str) {\n+    int start = 0;\n+    int end = str.length();\n+    StringBuilder result = new StringBuilder(end - start);\n+    for (int i = start; i < end; i++) {\n+        final char curChar = str.charAt(i);\n+        if (curChar == '\\\\') {\n+            if (i + 1 < end) {\n+                final char nextChar = str.charAt(++i);\n+                switch (nextChar) {\n+                    case '\\\\':\n+                        result.append('\\\\');\n+                        break;\n+                    case 'r':\n+                        result.append('\\r');\n+                        break;\n+                    case 'f':\n+                        result.append('\\f');\n+                        break;\n+                    case 't':\n+                        result.append('\\t');\n+                        break;\n+                    case 'n':\n+                        result.append('\\n');\n+                        break;\n+                    case '\\\"':\n+                        result.append('\\\"');\n+                        break;\n+                    case '\\'':\n+                        result.append('\\'');\n+                        break;\n+                    case 'u':\n+                        if (i + 4 < end) {\n+                            char uniChar = (char) Integer.parseInt(str.substring(i + 1, i + 5), 16);\n+                            result.append(uniChar);\n+                            i += 4;\n+                            break;\n+                        }\n+                    default:\n+                        result.append(nextChar);\n+                }\n+            }\n+        } else {\n+            result.append(curChar);\n+        }\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}