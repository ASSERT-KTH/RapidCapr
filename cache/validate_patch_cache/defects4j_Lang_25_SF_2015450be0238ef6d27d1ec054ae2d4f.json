{
    "patch": "public String escape(String input) {\n    if(input == null) {\n        return null;\n    }\n    String output = \"\";\n    for(int i=0; i<input.length(); i++) {\n        char c = input.charAt(i);\n        if((int)c > 127) {\n            output += \"\\\\u\" + String.format(\"%04x\", (int)c);\n        } else {\n            switch(c) {\n                case '\\n':\n                    output += \"\\\\n\";\n                    break;\n                case '\\r':\n                    output += \"\\\\r\";\n                    break;\n                case '\\t':\n                    output += \"\\\\t\";\n                    break;\n                default:\n                    output += c;\n                    break;\n            }\n        }\n    }\n    return output;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..a64e320d 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,34 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String escape(String input) {\n+    if(input == null) {\n+        return null;\n+    }\n+    String output = \"\";\n+    for(int i=0; i<input.length(); i++) {\n+        char c = input.charAt(i);\n+        if((int)c > 127) {\n+            output += \"\\\\u\" + String.format(\"%04x\", (int)c);\n+        } else {\n+            switch(c) {\n+                case '\\n':\n+                    output += \"\\\\n\";\n+                    break;\n+                case '\\r':\n+                    output += \"\\\\r\";\n+                    break;\n+                case '\\t':\n+                    output += \"\\\\t\";\n+                    break;\n+                default:\n+                    output += c;\n+                    break;\n+            }\n+        }\n+    }\n+    return output;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}