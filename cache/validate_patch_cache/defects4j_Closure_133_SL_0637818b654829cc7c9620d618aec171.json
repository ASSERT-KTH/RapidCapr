{
    "patch": "private String getRemainingJSDocLine() throws IllegalStateException, RuntimeException {\n    try {\n        String line = stream.getRemainingJSDocLine();\n        while (line != null && line.trim().startsWith(\"*\")) {\n            line = stream.getRemainingJSDocLine();\n        }\n        if (line == null) {\n            return null;\n        }\n        if (line.trim().startsWith(\"@\")) {\n            return \"\";\n        }\n        return line.trim();\n    } catch (IOException e) {\n        throw new IllegalStateException(\"Recorded bad position information\", e);\n    } catch (StringIndexOutOfBoundsException | NullPointerException e) {\n        throw new RuntimeException(e);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..269fe020 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,24 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() throws IllegalStateException, RuntimeException {\n+    try {\n+        String line = stream.getRemainingJSDocLine();\n+        while (line != null && line.trim().startsWith(\"*\")) {\n+            line = stream.getRemainingJSDocLine();\n+        }\n+        if (line == null) {\n+            return null;\n+        }\n+        if (line.trim().startsWith(\"@\")) {\n+            return \"\";\n+        }\n+        return line.trim();\n+    } catch (IOException e) {\n+        throw new IllegalStateException(\"Recorded bad position information\", e);\n+    } catch (StringIndexOutOfBoundsException | NullPointerException e) {\n+        throw new RuntimeException(e);\n+    }\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}