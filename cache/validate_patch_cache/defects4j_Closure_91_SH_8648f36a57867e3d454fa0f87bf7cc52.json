{
    "patch": "      if (parent != null && NodeUtil.isGet(parent)) {\n        Node rootNode = NodeUtil.getRootOfQualifiedName(parent);\n        if (rootNode != null) {\n          Node grandparent = rootNode.getParent();\n          if (grandparent != null && grandparent.getType() == Token.ASSIGN) {\n            Node ancestor = grandparent.getParent();\n            if (ancestor != null &&\n                NodeUtil.isExprAssign(ancestor) &&\n                ancestor.getFirstChild() != null &&\n                ancestor.getFirstChild().getType() == Token.GETPROP &&\n                ancestor.getFirstChild().getLastChild().getString().equals(\"prototype\")) {\n              return false;\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..11d225c8 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,20 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && NodeUtil.isGet(parent)) {\n+        Node rootNode = NodeUtil.getRootOfQualifiedName(parent);\n+        if (rootNode != null) {\n+          Node grandparent = rootNode.getParent();\n+          if (grandparent != null && grandparent.getType() == Token.ASSIGN) {\n+            Node ancestor = grandparent.getParent();\n+            if (ancestor != null &&\n+                NodeUtil.isExprAssign(ancestor) &&\n+                ancestor.getFirstChild() != null &&\n+                ancestor.getFirstChild().getType() == Token.GETPROP &&\n+                ancestor.getFirstChild().getLastChild().getString().equals(\"prototype\")) {\n+              return false;\n+            }\n+          }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}