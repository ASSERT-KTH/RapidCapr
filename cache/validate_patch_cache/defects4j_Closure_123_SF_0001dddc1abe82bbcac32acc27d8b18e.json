{
    "patch": "public static String fixCode(String code) {\n    String[] lines = code.split(\"\\\\r?\\\\n\");\n    String newCode = \"\";\n    for (String line : lines) {\n        if (line.contains(\"for\")) {\n            String[] words = line.split(\"\\\\s+\");\n            for (int i = 0; i < words.length; i++) {\n                if (words[i].equals(\"in\")) {\n                    String[] inSplit = line.split(\"\\\\s+in\\\\s+\");\n                    String inClause = inSplit[1];\n                    if (inClause.startsWith(\"[\")) {\n                        String fixedInClause = inClause.replace(\"[\", \"\");\n                        fixedInClause = fixedInClause.replace(\"]\", \"\");\n                        line = line.replace(inClause, fixedInClause);\n                    }\n                }\n            }\n        }\n        newCode += line + \"\\n\";\n    }\n    return newCode.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..3bac52a2 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,28 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String[] lines = code.split(\"\\\\r?\\\\n\");\n+    String newCode = \"\";\n+    for (String line : lines) {\n+        if (line.contains(\"for\")) {\n+            String[] words = line.split(\"\\\\s+\");\n+            for (int i = 0; i < words.length; i++) {\n+                if (words[i].equals(\"in\")) {\n+                    String[] inSplit = line.split(\"\\\\s+in\\\\s+\");\n+                    String inClause = inSplit[1];\n+                    if (inClause.startsWith(\"[\")) {\n+                        String fixedInClause = inClause.replace(\"[\", \"\");\n+                        fixedInClause = fixedInClause.replace(\"]\", \"\");\n+                        line = line.replace(inClause, fixedInClause);\n+                    }\n+                }\n+            }\n+        }\n+        newCode += line + \"\\n\";\n+    }\n+    return newCode.trim();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}