{
    "patch": "            final RealMatrix squareRoot = dec.getSquareRoot();\n            // truncate very small values to zero to avoid numeric issues\n            final double smallValue = /* set a threshold value */;\n            for (int i = 0; i < squareRoot.getRowDimension(); i++) {\n                for (int j = 0; j < squareRoot.getColumnDimension(); j++) {\n                    if (squareRoot.getEntry(i, j) < smallValue) {\n                        squareRoot.setEntry(i, j, 0);\n                    }\n                }\n            }\n            return squareRoot;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..b6a89ecfe 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,15 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+            final RealMatrix squareRoot = dec.getSquareRoot();\n+            // truncate very small values to zero to avoid numeric issues\n+            final double smallValue = /* set a threshold value */;\n+            for (int i = 0; i < squareRoot.getRowDimension(); i++) {\n+                for (int j = 0; j < squareRoot.getColumnDimension(); j++) {\n+                    if (squareRoot.getEntry(i, j) < smallValue) {\n+                        squareRoot.setEntry(i, j, 0);\n+                    }\n+                }\n+            }\n+            return squareRoot;\n }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}