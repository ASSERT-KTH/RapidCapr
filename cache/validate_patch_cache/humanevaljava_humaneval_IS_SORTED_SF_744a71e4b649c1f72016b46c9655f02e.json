{
    "patch": "public static boolean is_sorted(int[] lst) {\n    if(lst == null || lst.length <= 1) {\n        return true;\n    }\n    HashSet<Integer> numSet = new HashSet<>();\n    int prev = lst[0];\n    numSet.add(prev);\n    for(int i = 1; i < lst.length; i++) {\n        int curr = lst[i];\n        if(curr < prev) {\n            return false;\n        } else if(numSet.contains(curr) && curr == prev) {\n            return false;\n        } else {\n            numSet.add(curr);\n            if(numSet.contains(curr) && numSet.contains(prev) && curr != prev) {\n                return false;\n            }\n        }\n        prev = curr;\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..4844bbe 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,27 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n-        }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n-        }\n+public static boolean is_sorted(int[] lst) {\n+    if(lst == null || lst.length <= 1) {\n         return true;\n     }\n+    HashSet<Integer> numSet = new HashSet<>();\n+    int prev = lst[0];\n+    numSet.add(prev);\n+    for(int i = 1; i < lst.length; i++) {\n+        int curr = lst[i];\n+        if(curr < prev) {\n+            return false;\n+        } else if(numSet.contains(curr) && curr == prev) {\n+            return false;\n+        } else {\n+            numSet.add(curr);\n+            if(numSet.contains(curr) && numSet.contains(prev) && curr != prev) {\n+                return false;\n+            }\n+        }\n+        prev = curr;\n+    }\n+    return true;\n+}\n }",
    "result_reason": " /tmp/humaneval-IS_SORTED/src/main/java/humaneval/buggy/IS_SORTED.java:[26,5] cannot find symbol",
    "test_result": "ERROR"
}