{
    "patch": "        } catch (IllegalFieldValueException e) {\n            if (e.getFieldName() != null) {\n                int failedFieldIndex = findFieldIndex(savedFields, count, e.getFieldName());\n                if (failedFieldIndex >= 0) {\n                    for (int i = failedFieldIndex + 1; i < count; i++) {\n                        try {\n                            millis = savedFields[i].set(millis, resetFields);\n                        } catch (IllegalFieldValueException e2) {\n                            // ignore and carry on\n                        }\n                    }\n                    StringBuilder buf = new StringBuilder();\n                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n                    buf.append(e.getMessage());\n                    throw new IllegalArgumentException(buf.toString(), e);\n                }\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a418ae56 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            if (e.getFieldName() != null) {\n+                int failedFieldIndex = findFieldIndex(savedFields, count, e.getFieldName());\n+                if (failedFieldIndex >= 0) {\n+                    for (int i = failedFieldIndex + 1; i < count; i++) {\n+                        try {\n+                            millis = savedFields[i].set(millis, resetFields);\n+                        } catch (IllegalFieldValueException e2) {\n+                            // ignore and carry on\n+                        }\n+                    }\n+                    StringBuilder buf = new StringBuilder();\n+                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n+                    buf.append(e.getMessage());\n+                    throw new IllegalArgumentException(buf.toString(), e);\n+                }\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}