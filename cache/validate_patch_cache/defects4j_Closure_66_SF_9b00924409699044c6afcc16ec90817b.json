{
    "patch": "public static double getTypedPercent(String json) {\n    JsonParser parser = new JsonParser();\n    JsonObject obj = parser.parse(json).getAsJsonObject();\n    \n    double numerator = obj.get(\"typed\").getAsDouble();\n    double denominator = numerator + obj.get(\"untyped\").getAsDouble();\n    \n    return (numerator / denominator) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..00130fa9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    JsonParser parser = new JsonParser();\n+    JsonObject obj = parser.parse(json).getAsJsonObject();\n+    \n+    double numerator = obj.get(\"typed\").getAsDouble();\n+    double denominator = numerator + obj.get(\"untyped\").getAsDouble();\n+    \n+    return (numerator / denominator) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}