{
    "patch": "        int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n        if (gcd == 1) {\n            return this;\n        }\n        int newNumerator = numerator / gcd;\n        int newDenominator = denominator / gcd;\n        if (newDenominator < 0) {\n            newNumerator *= -1;\n            newDenominator *= -1;\n        }\n        return new Fraction(newNumerator, newDenominator);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..58cd364b 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,17 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n+        if (gcd == 1) {\n+            return this;\n+        }\n+        int newNumerator = numerator / gcd;\n+        int newDenominator = denominator / gcd;\n+        if (newDenominator < 0) {\n+            newNumerator *= -1;\n+            newDenominator *= -1;\n+        }\n+        return new Fraction(newNumerator, newDenominator);\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: variable gcd is already defined in method reduce()",
    "test_result": "ERROR"
}