{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    if (x < 0.0 || a <= 0.0) {\n        throw new IllegalArgumentException(\"Invalid arguments for gamma function.\");\n    } \n\n    double igammaValue = RegularizedGammaQ.regularizedGammaQ(a, x);\n\n    // Complement the result if x is greater than a+1.\n    if (x > a + 1.0) {\n        igammaValue = 1.0 - igammaValue;\n    }\n\n    return igammaValue;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..23f5afaed 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,20 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    if (x < 0.0 || a <= 0.0) {\n+        throw new IllegalArgumentException(\"Invalid arguments for gamma function.\");\n+    } \n+\n+    double igammaValue = RegularizedGammaQ.regularizedGammaQ(a, x);\n+\n+    // Complement the result if x is greater than a+1.\n+    if (x > a + 1.0) {\n+        igammaValue = 1.0 - igammaValue;\n+    }\n+\n+    return igammaValue;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}