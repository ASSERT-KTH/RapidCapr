{
    "patch": "            if (millis < iMillis || millis > iMaxMillis) {\n                throw new IllegalFieldValueException\n                    (DateTimeFieldType.millis(), new Long(millis),\n                     \"Value \" + millis + \" for \" + DateTimeFieldType.millis()\n                     + \" is not supported: \" + \"min allowed value \" + iMillis\n                     + \" max allowed value \" + iMaxMillis);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..85a3130e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (millis < iMillis || millis > iMaxMillis) {\n+                throw new IllegalFieldValueException\n+                    (DateTimeFieldType.millis(), new Long(millis),\n+                     \"Value \" + millis + \" for \" + DateTimeFieldType.millis()\n+                     + \" is not supported: \" + \"min allowed value \" + iMillis\n+                     + \" max allowed value \" + iMaxMillis);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}