{
    "patch": "if (options.checkGlobalThisLevel != null) {\n    options.setWarningLevel(\n        DiagnosticGroups.GLOBAL_THIS,\n        options.checkGlobalThisLevel);\n} else {\n    // If options.checkGlobalThisLevel is not set, disable GLOBAL_THIS warnings by default\n    options.setWarningLevel(\n        DiagnosticGroups.GLOBAL_THIS,\n        CheckLevel.OFF);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..0ed1fe50 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,16 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+    options.setWarningLevel(\n+        DiagnosticGroups.GLOBAL_THIS,\n+        options.checkGlobalThisLevel);\n+} else {\n+    // If options.checkGlobalThisLevel is not set, disable GLOBAL_THIS warnings by default\n+    options.setWarningLevel(\n+        DiagnosticGroups.GLOBAL_THIS,\n+        CheckLevel.OFF);\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}