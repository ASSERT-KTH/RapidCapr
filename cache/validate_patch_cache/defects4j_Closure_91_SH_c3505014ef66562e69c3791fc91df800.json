{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      boolean isLentFunction = NodeUtil.isGet(parent) && parent.getParent().getType() == Token.EXPRESSION_STATEMENT &&\n          parent.getParent().getParent() != null && parent.getParent().getParent().getType() == Token.EXPR_RESULT;\n      if (isLentFunction) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..b778dff8 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,12 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      boolean isLentFunction = NodeUtil.isGet(parent) && parent.getParent().getType() == Token.EXPRESSION_STATEMENT &&\n+          parent.getParent().getParent() != null && parent.getParent().getParent().getType() == Token.EXPR_RESULT;\n+      if (isLentFunction) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}