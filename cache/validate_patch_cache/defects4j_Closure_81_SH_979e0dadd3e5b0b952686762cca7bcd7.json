{
    "patch": "name = functionNode.getName();\nBoolean isUnnamedFunction = false;\nif (name == null || name.isEmpty()) {\n  name = new Name();\n  name.setIdentifier(\"\");\n  isUnnamedFunction = true;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..3085654e 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,13 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+name = functionNode.getName();\n+Boolean isUnnamedFunction = false;\n+if (name == null || name.isEmpty()) {\n+  name = new Name();\n+  name.setIdentifier(\"\");\n+  isUnnamedFunction = true;\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}