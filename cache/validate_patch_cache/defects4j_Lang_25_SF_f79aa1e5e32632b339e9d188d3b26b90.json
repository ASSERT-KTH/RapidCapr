{
    "patch": "public static String unescapeJava(String str) {\n    StringWriter writer = new StringWriter(str.length());\n    int sz = str.length();\n    boolean unicode = false;\n    for (int i = 0; i < sz; i++) {\n        int ch = str.charAt(i);\n        if (unicode) {\n            // if expecting unicode hex sequence\n            if (ch == '{') {\n                writer.write((char) Integer.parseInt(str.substring(i + 1, i + 5), 16));\n                i += 4;\n            } else {\n                writer.write(\"\\\\u\");\n                unicode = false;\n            }\n        } else if (ch == '\\\\') {\n            unicode = true;\n        } else {\n            writer.write(ch);\n        }\n    }\n    return writer.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..0adaa46e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,29 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescapeJava(String str) {\n+    StringWriter writer = new StringWriter(str.length());\n+    int sz = str.length();\n+    boolean unicode = false;\n+    for (int i = 0; i < sz; i++) {\n+        int ch = str.charAt(i);\n+        if (unicode) {\n+            // if expecting unicode hex sequence\n+            if (ch == '{') {\n+                writer.write((char) Integer.parseInt(str.substring(i + 1, i + 5), 16));\n+                i += 4;\n+            } else {\n+                writer.write(\"\\\\u\");\n+                unicode = false;\n+            }\n+        } else if (ch == '\\\\') {\n+            unicode = true;\n+        } else {\n+            writer.write(ch);\n+        }\n+    }\n+    return writer.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}