{
    "patch": "public ReturnValue execute(Class<?> returnType, Object... args) {\n    ReturnValue values = new ReturnValue(returnType);\n\n    if (returnType.equals(ArrayList.class)) {\n        ArrayList<String> data = new ArrayList<>();\n        data.add(\"value1\");\n        data.add(\"value2\");\n\n        values.setReturnValue(data);\n    } else if (returnType.equals(Iterable.class)) {\n        ArrayList<String> data = new ArrayList<>();\n        values.setReturnValue(data);\n    } else {\n        values.setReturnValue(null);\n    }\n\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}