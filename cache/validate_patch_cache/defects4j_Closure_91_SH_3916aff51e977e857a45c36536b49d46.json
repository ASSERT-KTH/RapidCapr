{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      Node maybeStripped = n;\n      while (NodeUtil.isName(maybeStripped)) {\n        if (NodeUtil.isLValue(maybeStripped) || maybeStripped.isFunction()) {\n          break;\n        }\n        maybeStripped = maybeStripped.getFirstChild();\n      }\n      if (NodeUtil.isGet(parent) && NodeUtil.isGet(maybeStripped)) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..96dc0a9f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      Node maybeStripped = n;\n+      while (NodeUtil.isName(maybeStripped)) {\n+        if (NodeUtil.isLValue(maybeStripped) || maybeStripped.isFunction()) {\n+          break;\n+        }\n+        maybeStripped = maybeStripped.getFirstChild();\n+      }\n+      if (NodeUtil.isGet(parent) && NodeUtil.isGet(maybeStripped)) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}