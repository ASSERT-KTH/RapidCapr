{
    "patch": "        // if none of the endpoints bracket the root and min is not less than max, reverses arguments\n        if (yMin * yMax >= 0) {\n            if (yMin == yMax && yMin == 0) {\n                setResult(min, 0);\n                return result;\n            } else {\n                throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");\n            }\n        }\n\n        // full Brent algorithm starting with provided initial guess\n        return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..402c0c407 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,18 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // if none of the endpoints bracket the root and min is not less than max, reverses arguments\n+        if (yMin * yMax >= 0) {\n+            if (yMin == yMax && yMin == 0) {\n+                setResult(min, 0);\n+                return result;\n+            } else {\n+                throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\");\n+            }\n+        }\n+\n+        // full Brent algorithm starting with provided initial guess\n+        return solve(f, min, yMin, max, yMax, initial, yInitial);\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}