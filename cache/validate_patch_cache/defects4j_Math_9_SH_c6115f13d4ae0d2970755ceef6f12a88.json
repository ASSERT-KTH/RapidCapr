{
    "patch": "        Vector3D zero = Vector3D.ZERO;\n        \n        Vector3D revertedDirection = direction.negate().normalize();\n        if (revertedDirection.equals(Vector3D.ZERO)) {\n            revertedDirection = direction.negate();\n        }\n        \n        Line reverted = new Line(zero, revertedDirection);\n        ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..00d850556 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,15 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+        Vector3D zero = Vector3D.ZERO;\n+        \n+        Vector3D revertedDirection = direction.negate().normalize();\n+        if (revertedDirection.equals(Vector3D.ZERO)) {\n+            revertedDirection = direction.negate();\n+        }\n+        \n+        Line reverted = new Line(zero, revertedDirection);\n+        \n         return reverted;\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError: arrays first differed at element [0]; expected:<0.028581782127907646> but was:<0.028581782127907653>",
    "test_result": "FAIL"
}