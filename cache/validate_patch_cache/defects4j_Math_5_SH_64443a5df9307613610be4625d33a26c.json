{
    "patch": "return isNaN() ? NaN : (real == 0.0 && imaginary == 0.0 ? INF : \n    (isInfinite() ? ZERO : (FastMath.abs(real) < FastMath.abs(imaginary) ?\n        createComplex(scale * q, -scale) : createComplex(scale, -scale * q))));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/complex/Complex.java b/src/main/java/org/apache/commons/math3/complex/Complex.java\nindex 22b23f24e..f5f314f24 100644\n--- a/src/main/java/org/apache/commons/math3/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math3/complex/Complex.java\n@@ -302,7 +302,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n         }\n \n         if (real == 0.0 && imaginary == 0.0) {\n-            return NaN;\n+return isNaN() ? NaN : (real == 0.0 && imaginary == 0.0 ? INF : \n+    (isInfinite() ? ZERO : (FastMath.abs(real) < FastMath.abs(imaginary) ?\n+        createComplex(scale * q, -scale) : createComplex(scale, -scale * q))));\n         }\n \n         if (isInfinite) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}