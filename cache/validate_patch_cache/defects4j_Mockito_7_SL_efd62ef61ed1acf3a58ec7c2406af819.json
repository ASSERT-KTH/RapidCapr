{
    "patch": "Type[] actualTypeArguments = ((ParameterizedType) typeVariable.getAnnotatedBounds()[0].getType()).getActualTypeArguments();\nif (actualTypeArguments.length > 0) {\n    for (Type argument : actualTypeArguments) {\n        registerTypeVariablesOn(argument);\n    }\n} else {\n    registerTypeVariablesOn(typeVariable.getBounds()[0]);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..f2cfc04ed 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] actualTypeArguments = ((ParameterizedType) typeVariable.getAnnotatedBounds()[0].getType()).getActualTypeArguments();\n+if (actualTypeArguments.length > 0) {\n+    for (Type argument : actualTypeArguments) {\n+        registerTypeVariablesOn(argument);\n+    }\n+} else {\n+    registerTypeVariablesOn(typeVariable.getBounds()[0]);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "java.lang.ClassCastException: java.lang.Class cannot be cast to java.lang.reflect.ParameterizedType",
    "test_result": "FAIL"
}