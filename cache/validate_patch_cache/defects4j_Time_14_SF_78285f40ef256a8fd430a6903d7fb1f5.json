{
    "patch": "public int[] add(ReadablePartial partial, int[] values, int fieldIndex, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n\n    Chronology chrono = partial.getChronology();\n\n    // month is largest field and being added to, such as month-day\n    if (fieldIndex == chrono.monthOfYear().getFieldIndex()) {\n        int month = values[fieldIndex];\n        int year = chrono.year().get(values[0]);\n        int dayOfMonth = Math.min(chrono.dayOfMonth().getMaximumValue(year, month), values[chrono.dayOfMonth().getFieldIndex()]);\n        int newMonth = chrono.monthOfYear().add(month, valueToAdd);\n        int newYear = year + chrono.year().add(newMonth / 12, 0);\n\n        if (newMonth < 1) {\n            newYear--;\n            newMonth += 12;\n        } else if (newMonth > 12) {\n            newYear++;\n            newMonth -=12;\n        }\n        int newDayOfMonth = Math.min(chrono.dayOfMonth().getMaximumValue(newYear, newMonth), dayOfMonth);\n\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            if (i == fieldIndex) {\n                instant = chrono.monthOfYear().set(instant, newMonth);\n            } else if (i == chrono.year().getFieldIndex()) {\n                instant = chrono.year().set(instant, newYear);\n            } else if (i == chrono.dayOfMonth().getFieldIndex()) {\n                instant = chrono.dayOfMonth().set(instant, newDayOfMonth);\n            } else {\n                instant = partial.getFieldType(i).getField(chrono).set(instant, values[i]);\n            }\n        }\n        return chrono.get(partial, instant);\n    } else {\n        return super.add(partial, values, fieldIndex, valueToAdd);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java\nindex afca44e6..6d2e0693 100644\n--- a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java\n+++ b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java\n@@ -200,24 +200,47 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {\n     }\n \n     //-----------------------------------------------------------------------\n-    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n-        // overridden as superclass algorithm can't handle\n-        // 2004-02-29 + 48 months -> 2008-02-29 type dates\n-        if (valueToAdd == 0) {\n-            return values;\n+public int[] add(ReadablePartial partial, int[] values, int fieldIndex, int valueToAdd) {\n+    if (valueToAdd == 0) {\n+        return values;\n+    }\n+\n+    Chronology chrono = partial.getChronology();\n+\n+    // month is largest field and being added to, such as month-day\n+    if (fieldIndex == chrono.monthOfYear().getFieldIndex()) {\n+        int month = values[fieldIndex];\n+        int year = chrono.year().get(values[0]);\n+        int dayOfMonth = Math.min(chrono.dayOfMonth().getMaximumValue(year, month), values[chrono.dayOfMonth().getFieldIndex()]);\n+        int newMonth = chrono.monthOfYear().add(month, valueToAdd);\n+        int newYear = year + chrono.year().add(newMonth / 12, 0);\n+\n+        if (newMonth < 1) {\n+            newYear--;\n+            newMonth += 12;\n+        } else if (newMonth > 12) {\n+            newYear++;\n+            newMonth -=12;\n         }\n-            // month is largest field and being added to, such as month-day\n-        if (DateTimeUtils.isContiguous(partial)) {\n-            long instant = 0L;\n-            for (int i = 0, isize = partial.size(); i < isize; i++) {\n-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n+        int newDayOfMonth = Math.min(chrono.dayOfMonth().getMaximumValue(newYear, newMonth), dayOfMonth);\n+\n+        long instant = 0L;\n+        for (int i = 0, isize = partial.size(); i < isize; i++) {\n+            if (i == fieldIndex) {\n+                instant = chrono.monthOfYear().set(instant, newMonth);\n+            } else if (i == chrono.year().getFieldIndex()) {\n+                instant = chrono.year().set(instant, newYear);\n+            } else if (i == chrono.dayOfMonth().getFieldIndex()) {\n+                instant = chrono.dayOfMonth().set(instant, newDayOfMonth);\n+            } else {\n+                instant = partial.getFieldType(i).getField(chrono).set(instant, values[i]);\n             }\n-            instant = add(instant, valueToAdd);\n-            return iChronology.get(partial, instant);\n-        } else {\n-            return super.add(partial, fieldIndex, values, valueToAdd);\n         }\n+        return chrono.get(partial, instant);\n+    } else {\n+        return super.add(partial, values, fieldIndex, valueToAdd);\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}