{
    "patch": "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n    if (cal1 == null || cal2 == null) {\n        throw new IllegalArgumentException(\"The calendars must not be null\");\n    }\n\n    // Set both calendars to the same time zone\n    TimeZone timeZone1 = cal1.getTimeZone();\n    TimeZone timeZone2 = cal2.getTimeZone();\n    if (!timeZone1.equals(timeZone2)) {\n        cal2.setTimeZone(timeZone1);\n    }\n\n    // Compare the fields\n    int[] fields = {Calendar.MILLISECOND, Calendar.SECOND, Calendar.MINUTE, Calendar.HOUR_OF_DAY, Calenda",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java\nindex 9a24c00f..cde7aad1 100644\n--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java\n@@ -255,20 +255,21 @@ public class DateUtils {\n      * @throws IllegalArgumentException if either date is <code>null</code>\n      * @since 2.1\n      */\n-    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n-        if (cal1 == null || cal2 == null) {\n-            throw new IllegalArgumentException(\"The date must not be null\");\n-        }\n-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&\n-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&\n-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&\n-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&\n-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&\n-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&\n-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&\n-                cal1.getClass() == cal2.getClass());\n+public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n+    if (cal1 == null || cal2 == null) {\n+        throw new IllegalArgumentException(\"The calendars must not be null\");\n     }\n \n+    // Set both calendars to the same time zone\n+    TimeZone timeZone1 = cal1.getTimeZone();\n+    TimeZone timeZone2 = cal2.getTimeZone();\n+    if (!timeZone1.equals(timeZone2)) {\n+        cal2.setTimeZone(timeZone1);\n+    }\n+\n+    // Compare the fields\n+    int[] fields = {Calendar.MILLISECOND, Calendar.SECOND, Calendar.MINUTE, Calendar.HOUR_OF_DAY, Calenda\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Parses a string representing a date by trying a variety of different parsers.</p>",
    "result_reason": "error: '}' expected",
    "test_result": "ERROR"
}