{
    "patch": "      if (NodeUtil.hasCatchBlock(n)) {\n        Preconditions.checkState(NodeUtil.getCatchBlock(n).hasOneChild());\n        Node catchNode = NodeUtil.getCatchBlock(n).getFirstChild();\n        Node catchCodeBlock = catchNode.getLastChild();\n        tryMinimizeExits(catchCodeBlock, exitType, labelName);\n      }\n      if (NodeUtil.hasFinally(n)) {\n        Node finallyBlock = n.getLastChild();\n        tryMinimizeExits(finallyBlock, exitType, labelName);\n      }\n      return;\n    }\n\n    // Just a 'label'.\n    if (n.isLabel()) {\n      Node labelBlock = n.getLastChild();\n      tryMinimizeExits(labelBlock, exitType, labelName);\n    }\n\n    // TODO(johnlenz): The last case of SWITCH statement?\n\n    // The rest assumes a block with at least one child, bail on anything else.\n    if (!n.isBlock() || n.getLastChild() == null) {\n      return;\n    }\n\n    Node nextNode = n.getNext();\n    if (nextNode != null && !NodeUtil.hasFinally(n)) {\n      tryMinimizeExits(nextNode, exitType, labelName);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..f91225ca 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,10 +138,35 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n+      if (NodeUtil.hasCatchBlock(n)) {\n+        Preconditions.checkState(NodeUtil.getCatchBlock(n).hasOneChild());\n+        Node catchNode = NodeUtil.getCatchBlock(n).getFirstChild();\n+        Node catchCodeBlock = catchNode.getLastChild();\n+        tryMinimizeExits(catchCodeBlock, exitType, labelName);\n+      }\n       if (NodeUtil.hasFinally(n)) {\n         Node finallyBlock = n.getLastChild();\n         tryMinimizeExits(finallyBlock, exitType, labelName);\n       }\n+      return;\n+    }\n+\n+    // Just a 'label'.\n+    if (n.isLabel()) {\n+      Node labelBlock = n.getLastChild();\n+      tryMinimizeExits(labelBlock, exitType, labelName);\n+    }\n+\n+    // TODO(johnlenz): The last case of SWITCH statement?\n+\n+    // The rest assumes a block with at least one child, bail on anything else.\n+    if (!n.isBlock() || n.getLastChild() == null) {\n+      return;\n+    }\n+\n+    Node nextNode = n.getNext();\n+    if (nextNode != null && !NodeUtil.hasFinally(n)) {\n+      tryMinimizeExits(nextNode, exitType, labelName);\n     }\n \n     // Just a 'label'.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}