{
    "patch": "copy.data = new java.util.ArrayList();\nif (this.data.size() > 0) {\n    int count = 0;\n    for (int index = 0; index < this.data.size(); index++) {\n        if (count >= start && count <= end) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            }\n            catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n        count++;\n    }\n}\ncopy.setDomainDescription((String) null);\ncopy.setRangeDescription((String) null);",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..9e43056 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,25 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+copy.data = new java.util.ArrayList();\n+if (this.data.size() > 0) {\n+    int count = 0;\n+    for (int index = 0; index < this.data.size(); index++) {\n+        if (count >= start && count <= end) {\n+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+            try {\n+                copy.add(clone);\n+            }\n+            catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        count++;\n+    }\n+}\n+copy.setDomainDescription((String) null);\n+copy.setRangeDescription((String) null);\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}