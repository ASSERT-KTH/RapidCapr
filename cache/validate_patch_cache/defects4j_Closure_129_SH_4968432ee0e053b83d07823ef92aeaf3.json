{
    "patch": "      Node getPropChild = first.getNext();\n      if (getPropChild != null && getPropChild.isString() && \"prototype\".equals(getPropChild.getString())) {\n        Node target = n.getFirstChild().getFirstChild();\n        if (!target.isName() || !\"Object\".equals(target.getString())) {\n          n.putBooleanProp(Node.FREE_CALL, true);\n        }\n      } else if (!NodeUtil.isGet(first)) {\n        n.putBooleanProp(Node.FREE_CALL, true);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..2dd01923 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,15 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      Node getPropChild = first.getNext();\n+      if (getPropChild != null && getPropChild.isString() && \"prototype\".equals(getPropChild.getString())) {\n+        Node target = n.getFirstChild().getFirstChild();\n+        if (!target.isName() || !\"Object\".equals(target.getString())) {\n+          n.putBooleanProp(Node.FREE_CALL, true);\n+        }\n+      } else if (!NodeUtil.isGet(first)) {\n+        n.putBooleanProp(Node.FREE_CALL, true);\n+      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}