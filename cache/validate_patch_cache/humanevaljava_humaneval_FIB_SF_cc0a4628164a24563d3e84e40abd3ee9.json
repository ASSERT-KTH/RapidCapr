{
    "patch": "public static int fib(int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"n cannot be negative.\");\n    } else if (n <= 1) {\n        return n;\n    } else {\n        int a = 0, b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c = a + b;\n            a = b;\n            b = c;\n            if (b < a) {\n                throw new IllegalArgumentException(\"fib(\" + n + \") is too large to fit in an in",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB.java b/src/main/java/humaneval/buggy/FIB.java\nindex fdc9c32..51c79af 100644\n--- a/src/main/java/humaneval/buggy/FIB.java\n+++ b/src/main/java/humaneval/buggy/FIB.java\n@@ -9,7 +9,17 @@ package humaneval.buggy;\n 21 */\n \n public class FIB {\n-    public static int fib(int n) {\n-        return fib(n - 1) + fib(n - 2);\n-    }\n+public static int fib(int n) {\n+    if (n < 0) {\n+        throw new IllegalArgumentException(\"n cannot be negative.\");\n+    } else if (n <= 1) {\n+        return n;\n+    } else {\n+        int a = 0, b = 1;\n+        for (int i = 2; i <= n; i++) {\n+            int c = a + b;\n+            a = b;\n+            b = c;\n+            if (b < a) {\n+                throw new IllegalArgumentException(\"fib(\" + n + \") is too large to fit in an in\n }",
    "result_reason": " /tmp/humaneval-FIB/src/main/java/humaneval/buggy/FIB.java:[24,65] unclosed string literal",
    "test_result": "ERROR"
}