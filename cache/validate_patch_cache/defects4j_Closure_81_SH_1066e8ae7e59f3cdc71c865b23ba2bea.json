{
    "patch": "      if (fnName != null) {\n        lp.setLineno(fnName.getLineno());\n        int lparenCharno = fnName.getEndLineno() + 2;\n        lp.setCharno(position2charno(lparenCharno));\n      } else {\n        lp.setLineno(functionNode.getLineno());\n        int lparenCharno = functionNode.getAbsolutePosition() + 8;\n        lp.setCharno(position2charno(lparenCharno));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..241973ae 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,14 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      if (fnName != null) {\n+        lp.setLineno(fnName.getLineno());\n+        int lparenCharno = fnName.getEndLineno() + 2;\n+        lp.setCharno(position2charno(lparenCharno));\n+      } else {\n+        lp.setLineno(functionNode.getLineno());\n+        int lparenCharno = functionNode.getAbsolutePosition() + 8;\n+        lp.setCharno(position2charno(lparenCharno));\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}