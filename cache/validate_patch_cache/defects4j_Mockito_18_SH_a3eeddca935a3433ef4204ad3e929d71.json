{
    "patch": "   /**\n    * This method returns an empty list because it has no valid inputs.\n    * The returnTypeFor() method allows us to return the expected\n    * output type to the caller.\n    */\n   public Object buggyMethod(){\n-      return null;\n+      return Collections.emptyList();\n   }\n\n   @Test\n   public void should_return_empty_iterable(){\n      MethodCall methodCall = new MethodCall(\"buggyMethod\");\n\n      ObjectExecution execution = new ObjectExecution(getCaller(), methodCall, new ArrayList<>());\n\n-      Object returnValue = execution.execute();\n+      ReturnValue values = execution.execute();\n\n-      Assert.assertEquals(Iterable.class, returnValue.getClass());\n+      Assert.assertEquals(Iterable.class, values.getReturnType());\n\n-      assertFalse(((Iterable)returnValue).iterator().hasNext());\n+      assertFalse(((Iterable)values.returnValueFor(Iterable.class)).iterator().hasNext());\n   }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}