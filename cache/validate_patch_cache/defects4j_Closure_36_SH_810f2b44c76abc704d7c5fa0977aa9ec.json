{
    "patch": "if (value.isFunction() &&\n    (callNode.getParent().isGetElem() ||\n     (callNode.getParent().isCall() &&\n      !(callNode.getParent().getFirstChild().isGetProp() &&\n        callNode==callNode.getParent().getFirstChild().getLastChild())))) {\n  return false;\n}\n\nif (callNode.getParent().isExprResult()\n    && callNode.hasOneChild()\n    && callNode.getFirstChild().isAssign()) {\n  Node assignment = callNode.getFirstChild();\n  if (assignment.hasOneChild()\n      && assignment.getFirstChild().isGetProp()) {\n    Node function = NodeUtil.getRValueOfLValue(assignment.getFirstChild());\n    checkForClassRemovalConfusion(function, callNode);\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..8d2c2aea 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,24 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction() &&\n+    (callNode.getParent().isGetElem() ||\n+     (callNode.getParent().isCall() &&\n+      !(callNode.getParent().getFirstChild().isGetProp() &&\n+        callNode==callNode.getParent().getFirstChild().getLastChild())))) {\n+  return false;\n+}\n+\n+if (callNode.getParent().isExprResult()\n+    && callNode.hasOneChild()\n+    && callNode.getFirstChild().isAssign()) {\n+  Node assignment = callNode.getFirstChild();\n+  if (assignment.hasOneChild()\n+      && assignment.getFirstChild().isGetProp()) {\n+    Node function = NodeUtil.getRValueOfLValue(assignment.getFirstChild());\n+    checkForClassRemovalConfusion(function, callNode);\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}