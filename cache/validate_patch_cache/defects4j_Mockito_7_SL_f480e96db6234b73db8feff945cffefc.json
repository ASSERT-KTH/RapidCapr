{
    "patch": "Type[] bounds = typeVariable.getBounds();\nif (bounds.length > 0) {\n   for (Type type : bounds) {\n       registerTypeVariablesOn(type);\n   }\n} else if (typeVariable.getGenericDeclaration() instanceof Class) {\n       registerTypeVariablesOn(typeVariable.getGenericDeclaration());\n} else {\n       Type actualType = getActualTypeArgumentFor(typeVariable);\n       registerTypeVariablesOn(actualType);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..a5704c706 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,22 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] bounds = typeVariable.getBounds();\n+if (bounds.length > 0) {\n+   for (Type type : bounds) {\n+       registerTypeVariablesOn(type);\n+   }\n+} else if (typeVariable.getGenericDeclaration() instanceof Class) {\n+       registerTypeVariablesOn(typeVariable.getGenericDeclaration());\n+} else {\n+       Type actualType = getActualTypeArgumentFor(typeVariable);\n+       registerTypeVariablesOn(actualType);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: incompatible types: GenericDeclaration cannot be converted to Type",
    "test_result": "ERROR"
}