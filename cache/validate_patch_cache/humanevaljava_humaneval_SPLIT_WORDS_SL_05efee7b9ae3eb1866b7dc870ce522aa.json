{
    "patch": "public static String[] split_words(String txt) {\n    if(txt.contains(\" \")) {\n        return txt.split(\" \");\n    } else if(txt.contains(\",\")) {\n        return txt.split(\",\");\n    } else {\n        String[] result = new String[txt.length()];\n        for(int i = 0; i < txt.length(); i++) {\n            char curr = txt.charAt(i);\n            result[i] = String.valueOf(curr);\n        }\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SPLIT_WORDS.java b/src/main/java/humaneval/buggy/SPLIT_WORDS.java\nindex 780a4b4..2f9ceff 100644\n--- a/src/main/java/humaneval/buggy/SPLIT_WORDS.java\n+++ b/src/main/java/humaneval/buggy/SPLIT_WORDS.java\n@@ -20,7 +20,20 @@ public class SPLIT_WORDS {\n             int count = 0;\n             for(int i = 0; i < txt.length(); i++) {\n                 char curr = txt.charAt(i);\n-                if(Character.isUpperCase(curr) && ((curr - 'a') % 2) == 0) count++;\n+public static String[] split_words(String txt) {\n+    if(txt.contains(\" \")) {\n+        return txt.split(\" \");\n+    } else if(txt.contains(\",\")) {\n+        return txt.split(\",\");\n+    } else {\n+        String[] result = new String[txt.length()];\n+        for(int i = 0; i < txt.length(); i++) {\n+            char curr = txt.charAt(i);\n+            result[i] = String.valueOf(curr);\n+        }\n+        return result;\n+    }\n+}\n             }\n             String[] result = {Integer.toString(count)};\n             return result;",
    "result_reason": " /tmp/humaneval-SPLIT_WORDS/src/main/java/humaneval/buggy/SPLIT_WORDS.java:[23,1] illegal start of expression",
    "test_result": "ERROR"
}