{
    "patch": "    public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n        if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        final int strSize = sequence.length();\n        final int searchLen = searchChars.length;\n        final int maxCodePoint = Character.MAX_CODE_POINT;\n        final BitSet bitSet = new BitSet(maxCodePoint);\n        for (int i = 0; i < strSize; i++) {\n            final int codePoint = Character.codePointAt(sequence, i);\n            bitSet.set(codePoint);\n        }\n        for (int i = 0; i < searchLen; i++) {\n            final int codePoint = searchChars[i];\n            if (bitSet.get(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..82a898e3 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,26 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+    public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+        if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+            return false;\n+        }\n+        final int strSize = sequence.length();\n+        final int searchLen = searchChars.length;\n+        final int maxCodePoint = Character.MAX_CODE_POINT;\n+        final BitSet bitSet = new BitSet(maxCodePoint);\n+        for (int i = 0; i < strSize; i++) {\n+            final int codePoint = Character.codePointAt(sequence, i);\n+            bitSet.set(codePoint);\n+        }\n+        for (int i = 0; i < searchLen; i++) {\n+            final int codePoint = searchChars[i];\n+            if (bitSet.get(codePoint)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}