{
    "patch": "                // Extra check specifically for weekyear, which can be affected by Julian-Gregorian cutover in some chronologies\n                if (iChrono.weekyear().getFieldType() == savedFields[i].iField.getType() && savedFields[i].iField instanceof SkipDateTimeField) {\n                    DurationField years = DurationFieldType.years().getField(iChrono);\n                    int oldYear = iChrono.weekyear().get(millis);\n                    int year = years.add(oldYear, 1);\n                    if (year <= iChrono.weekyear().getMinimumValue()) {\n                        year = years.add(oldYear, 2);\n                    } else {\n                        DurationField durationField = new SkipDateTimeField(DurationFieldType.weekyears(), years);\n                        int weeks = durationField.getDurationField().add(durationField.get(millis), -1);\n                        if (weeks < durationField.getMinimumValue()) {\n                            year = years.add(oldYear, 1);\n                        }\n                    }\n                    millis = iChrono.weekyear().set(millis, year);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d3532eb8 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,21 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                // Extra check specifically for weekyear, which can be affected by Julian-Gregorian cutover in some chronologies\n+                if (iChrono.weekyear().getFieldType() == savedFields[i].iField.getType() && savedFields[i].iField instanceof SkipDateTimeField) {\n+                    DurationField years = DurationFieldType.years().getField(iChrono);\n+                    int oldYear = iChrono.weekyear().get(millis);\n+                    int year = years.add(oldYear, 1);\n+                    if (year <= iChrono.weekyear().getMinimumValue()) {\n+                        year = years.add(oldYear, 2);\n+                    } else {\n+                        DurationField durationField = new SkipDateTimeField(DurationFieldType.weekyears(), years);\n+                        int weeks = durationField.getDurationField().add(durationField.get(millis), -1);\n+                        if (weeks < durationField.getMinimumValue()) {\n+                            year = years.add(oldYear, 1);\n+                        }\n+                    }\n+                    millis = iChrono.weekyear().set(millis, year);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}