{
    "patch": "    public static boolean isAvailableLocale(Locale locale) {\n>>> [ INFILL ] <<<\n        if (cAvailableLocaleSet == null) {\n            cAvailableLocaleSet = new HashSet<>();\n            for (String lang : AVAILABLE_LANGUAGES) {\n                for (String country : AVAILABLE_COUNTRIES) {\n                    Locale l = new Locale(lang, country);\n                    cAvailableLocaleSet.add(l);\n                }\n            }\n        }\n\n        return cAvailableLocaleSet.contains(locale);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex ceb886e8..ff1a7bdb 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -220,8 +220,21 @@ public class LocaleUtils {\n      * @return true if the locale is a known locale\n      */\n     public static boolean isAvailableLocale(Locale locale) {\n+    public static boolean isAvailableLocale(Locale locale) {\n+>>> [ INFILL ] <<<\n+        if (cAvailableLocaleSet == null) {\n+            cAvailableLocaleSet = new HashSet<>();\n+            for (String lang : AVAILABLE_LANGUAGES) {\n+                for (String country : AVAILABLE_COUNTRIES) {\n+                    Locale l = new Locale(lang, country);\n+                    cAvailableLocaleSet.add(l);\n+                }\n+            }\n+        }\n+\n         return cAvailableLocaleSet.contains(locale);\n     }\n+    }\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}