{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    try {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        return dec.getSquareRoot();\n    } catch (OutOfMemoryError e) {\n        // if EigenDecomposition runs out of memory, try another method\n        final DecompositionSolver solver = new LUDecomposition(m).getSolver();\n        final RealMatrix factor = solver.getInverse().multiply(m);\n        final RealMatrix sqrt = new CholeskyDecomposition(factor).getSolver().getInverse();\n        return sqrt.transpose().multiply(sqrt);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..4e165be65 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,16 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    try {\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        return dec.getSquareRoot();\n+    } catch (OutOfMemoryError e) {\n+        // if EigenDecomposition runs out of memory, try another method\n+        final DecompositionSolver solver = new LUDecomposition(m).getSolver();\n+        final RealMatrix factor = solver.getInverse().multiply(m);\n+        final RealMatrix sqrt = new CholeskyDecomposition(factor).getSolver().getInverse();\n+        return sqrt.transpose().multiply(sqrt);\n     }\n }\n+}",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}