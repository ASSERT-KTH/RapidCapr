{
    "patch": "import org.apache.commons.math3.special.Gamma;\n\npublic class MyClass {\n    public static double regularizedGamma(double x, double a, double eps, int maxIter) {\n        int n = 1;\n        double an = a;\n        double sum = an/a;\n        do {\n            an = an * (-x / (n + a));\n            sum += an;\n            n++;\n        } while (Math.abs(an) > eps && n < maxIter);\n        return Math.pow(x, a) * Math.exp(-x) * sum / Gamma.gamma(a);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..5a21507c7 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,21 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+\n+public class MyClass {\n+    public static double regularizedGamma(double x, double a, double eps, int maxIter) {\n+        int n = 1;\n+        double an = a;\n+        double sum = an/a;\n+        do {\n+            an = an * (-x / (n + a));\n+            sum += an;\n+            n++;\n+        } while (Math.abs(an) > eps && n < maxIter);\n+        return Math.pow(x, a) * Math.exp(-x) * sum / Gamma.gamma(a);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}