{
    "patch": "public static double getTypedPercent(String json) {\n    JSONObject obj = new JSONObject(json);\n    JSONArray results = obj.getJSONArray(\"results\");\n    int count = results.length();\n    int typedCount = 0;\n    for (int i = 0; i < count; i++) {\n        JSONObject result = results.getJSONObject(i);\n        if (result.has(\"typed\")) {\n            typedCount++;\n        }\n    }\n    return (typedCount * 100.0) / count;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..ddb33fe0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    JSONObject obj = new JSONObject(json);\n+    JSONArray results = obj.getJSONArray(\"results\");\n+    int count = results.length();\n+    int typedCount = 0;\n+    for (int i = 0; i < count; i++) {\n+        JSONObject result = results.getJSONObject(i);\n+        if (result.has(\"typed\")) {\n+            typedCount++;\n+        }\n+    }\n+    return (typedCount * 100.0) / count;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}