{
    "patch": "public static boolean will_it_fly(int[] q, int w) {\n    int sum = 0;\n    for (int i = 0; i < q.length; i++) {\n        sum += q[i];\n    }\n    \n    if (sum > w) {\n        return false;\n    }\n    \n  ",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/WILL_IT_FLY.java b/src/main/java/humaneval/buggy/WILL_IT_FLY.java\nindex 03026a4..0a2dd77 100644\n--- a/src/main/java/humaneval/buggy/WILL_IT_FLY.java\n+++ b/src/main/java/humaneval/buggy/WILL_IT_FLY.java\n@@ -17,19 +17,15 @@ will_it_fly([3], 5) \u279e True\n # 3 is less than the maximum possible weight, and it's balanced. */\n \n public class WILL_IT_FLY {\n-    public static boolean will_it_fly(int[] q, int w) {\n-        int sum = 0;\n-        for (int i = 0; i < q.length; i += 1)\n-            sum += q[i];\n-        \n-        if (sum > w)\n-            return false;\n-        \n-        int i = 0;\n-        int j = q.length - 1;\n-        while (i < j) {\n-            if (q[i] != q[j])   return false;\n-        }\n-        return true;\n+public static boolean will_it_fly(int[] q, int w) {\n+    int sum = 0;\n+    for (int i = 0; i < q.length; i++) {\n+        sum += q[i];\n     }\n+    \n+    if (sum > w) {\n+        return false;\n+    }\n+    \n+  \n }",
    "result_reason": " /tmp/humaneval-WILL_IT_FLY/src/main/java/humaneval/buggy/WILL_IT_FLY.java:[31,2] reached end of file while parsing",
    "test_result": "ERROR"
}