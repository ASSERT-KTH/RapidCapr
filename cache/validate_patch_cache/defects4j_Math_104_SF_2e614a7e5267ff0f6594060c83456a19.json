{
    "patch": "public static double regularizedGamma(double a, double x) {\n    final double epsilon = 1e-9;\n    double gammaA = Gamma.gamma(a);\n    double term = Math.pow(x, a) * Math.exp(-x) / gammaA;\n    double sum = term;\n    int i = 1;\n    do {\n        term *= x / (a + i);\n        sum += term;\n        i++;\n    } while (Math.abs(term) > epsilon && i < 1000);\n    return sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..72ce23f29 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,19 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    final double epsilon = 1e-9;\n+    double gammaA = Gamma.gamma(a);\n+    double term = Math.pow(x, a) * Math.exp(-x) / gammaA;\n+    double sum = term;\n+    int i = 1;\n+    do {\n+        term *= x / (a + i);\n+        sum += term;\n+        i++;\n+    } while (Math.abs(term) > epsilon && i < 1000);\n+    return sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}