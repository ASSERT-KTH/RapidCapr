{
    "patch": "public static double getTypedPercent(String jsonString) {\n    ObjectMapper mapper = new ObjectMapper();\n    double count = 0;\n    double total = 0;\n    try {\n        JsonNode actualObj = mapper.readTree(jsonString);\n        Iterator<Entry<String, JsonNode>> fieldsIterator = actualObj.fields();\n        while (fieldsIterator.hasNext()) {\n            Entry<String, JsonNode> field = fieldsIterator.next();\n            int i = field.getValue().asInt();\n            total += i;\n            count++;\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    if (total == 0) {\n        return 0;\n    }\n    return ((count - 1) / count) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..5467d22b 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonString) {\n+    ObjectMapper mapper = new ObjectMapper();\n+    double count = 0;\n+    double total = 0;\n+    try {\n+        JsonNode actualObj = mapper.readTree(jsonString);\n+        Iterator<Entry<String, JsonNode>> fieldsIterator = actualObj.fields();\n+        while (fieldsIterator.hasNext()) {\n+            Entry<String, JsonNode> field = fieldsIterator.next();\n+            int i = field.getValue().asInt();\n+            total += i;\n+            count++;\n+        }\n+    } catch (Exception e) {\n+        e.printStackTrace();\n+    }\n+    if (total == 0) {\n+        return 0;\n+    }\n+    return ((count - 1) / count) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}