{
    "patch": "private void readTypeVariables() {\n    for (Type type : typeVariable.getBounds()) {\n        Class<?> boundClass = (Class<?>) type;\n        registerTypeVariablesOn(boundClass);\n        Type actualType = getActualTypeArgumentFor(boundClass);\n        if (actualType != null) {\n            registerTypeVariablesOn(actualType);\n        }\n    }\n    Class<?> declaringClass = (Class<?>) typeVariable.getGenericDeclaration();\n    Type actualType = getActualTypeArgumentFor(declaringClass);\n    if (actualType != null) {\n        registerTypeVariablesOn(actualType);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..1867dfa54 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,22 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    for (Type type : typeVariable.getBounds()) {\n+        Class<?> boundClass = (Class<?>) type;\n+        registerTypeVariablesOn(boundClass);\n+        Type actualType = getActualTypeArgumentFor(boundClass);\n+        if (actualType != null) {\n+            registerTypeVariablesOn(actualType);\n+        }\n+    }\n+    Class<?> declaringClass = (Class<?>) typeVariable.getGenericDeclaration();\n+    Type actualType = getActualTypeArgumentFor(declaringClass);\n+    if (actualType != null) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: incompatible types: Class<CAP#1> cannot be converted to TypeVariable",
    "test_result": "ERROR"
}