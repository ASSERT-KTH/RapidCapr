{
    "patch": "StringBuilder out = new StringBuilder(in.length());\nfor (int i = 0; i < in.length(); ) {\n    char c = in.charAt(i);\n    if (c == '\\\\' && i + 7 < in.length() && in.charAt(i + 1) == 'u') {\n        char parsedChar = (char) Integer.parseInt(in.substring(i + 2, i + 6), 16);\n        out.append(parsedChar);\n        i += 6;\n    } else if (c == '\\\\') {\n        if (in.charAt(i + 1) == 't') {\n            out.append('\\t');\n        } else if (in.charAt(i + 1) == 'r') {\n            out.append('\\r');\n        } else if (in.charAt(i + 1) == 'n') {\n            out.append('\\n');\n        } else if (in.charAt(i + 1) == 'f') {\n            out.append('\\f');\n        } else if (in.charAt(i + 1) == '\\\\') {\n            out.append('\\\\');\n        }\n        i += 2;\n    } else {\n        out.append(c);\n        i++;\n    }\n}\nString result = out.toString();\nassertEquals(expectedResult, result); // new assertion",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}