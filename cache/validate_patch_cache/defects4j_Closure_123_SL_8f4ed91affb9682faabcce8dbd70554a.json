{
    "patch": "public class MyClass {\n   enum Context {FILE, OTHER};\n   \n   public static void main(String args[]) {\n      new MyClass().execute();\n   }\n\n   public void execute() {\n       boolean c = true;\n       boolean[] d = new boolean[0];\n       Context rhsContext;\n       rhsContext = Context.FILE;\n       for (int a = (c ? 0 : getVal(d));;) foo();\n   }\n\n   public int getVal(boolean[] arr) {\n      return arr.length;\n   }\n\n   public void foo() {\n      return;\n   }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}