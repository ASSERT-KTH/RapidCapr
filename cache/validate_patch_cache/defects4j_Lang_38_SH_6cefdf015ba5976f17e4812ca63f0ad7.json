{
    "patch": "        if (mTimeZoneForced) {\n            GregorianCalendar forcedCalendar = new GregorianCalendar(mTimeZone);\n            forcedCalendar.set(calendar.get(Calendar.ERA),\n                               calendar.get(Calendar.YEAR),\n                               calendar.get(Calendar.MONTH),\n                               calendar.get(Calendar.DATE),\n                               calendar.get(Calendar.HOUR_OF_DAY),\n                               calendar.get(Calendar.MINUTE),\n                               calendar.get(Calendar.SECOND));\n            calendar = forcedCalendar;\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..d4194490 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,17 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        if (mTimeZoneForced) {\n+            GregorianCalendar forcedCalendar = new GregorianCalendar(mTimeZone);\n+            forcedCalendar.set(calendar.get(Calendar.ERA),\n+                               calendar.get(Calendar.YEAR),\n+                               calendar.get(Calendar.MONTH),\n+                               calendar.get(Calendar.DATE),\n+                               calendar.get(Calendar.HOUR_OF_DAY),\n+                               calendar.get(Calendar.MINUTE),\n+                               calendar.get(Calendar.SECOND));\n+            calendar = forcedCalendar;\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: no suitable method found for set(int,int,int,int,int,int,int)",
    "test_result": "ERROR"
}