{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (isEmpty(str) || searchChars == null || searchChars.length == 0) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int min = Integer.MAX_VALUE;\n    int max = Integer.MIN_VALUE;\n    for (int i = 0; i < searchLen; i++) {\n        int ch = searchChars[i];\n        if (min > ch) {\n            min = ch;\n        }\n        if (max < ch) {\n            max = ch;\n        }\n    }\n    if (max <= Character.MAX_VALUE && min >= Character.MIN_VALUE) {\n        for (int i = 0; i < strLen; i++) {\n            char ch = str.charAt(i);\n            if (ch >= min && ch <= max && ArrayUtils.contains(searchChars, ch)) {\n                return true;\n            }\n        }\n    } else if (strLen < searchLen) {\n        return false;\n    } else {\n        for (int i = 0; i < strLen; i++) {\n            char ch = str.charAt(i);\n            if (ArrayUtils.contains(searchChars, ch)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isEmpty(CharSequence cs) {\n    return cs == null || cs.length() == 0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..c89899a9 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,46 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (isEmpty(str) || searchChars == null || searchChars.length == 0) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int min = Integer.MAX_VALUE;\n+    int max = Integer.MIN_VALUE;\n+    for (int i = 0; i < searchLen; i++) {\n+        int ch = searchChars[i];\n+        if (min > ch) {\n+            min = ch;\n+        }\n+        if (max < ch) {\n+            max = ch;\n+        }\n+    }\n+    if (max <= Character.MAX_VALUE && min >= Character.MIN_VALUE) {\n+        for (int i = 0; i < strLen; i++) {\n+            char ch = str.charAt(i);\n+            if (ch >= min && ch <= max && ArrayUtils.contains(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+    } else if (strLen < searchLen) {\n+        return false;\n+    } else {\n+        for (int i = 0; i < strLen; i++) {\n+            char ch = str.charAt(i);\n+            if (ArrayUtils.contains(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isEmpty(CharSequence cs) {\n+    return cs == null || cs.length() == 0;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}