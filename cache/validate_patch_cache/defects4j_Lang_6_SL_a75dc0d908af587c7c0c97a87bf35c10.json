{
    "patch": "pos += consumed == 1 || (consumed == 2 && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) \n             ? Character.charCount(Character.codePointAt(input, pos)) : consumed;\nif (consumed == 0) {\n    pos += 1;\n}\nif (Character.isHighSurrogate(input.charAt(Math.max(pos - consumed, 0))) && pos < len &&\n        Character.isLowSurrogate(input.charAt(pos))) {\n    out.write(input.charAt(Math.max(pos - consumed, 0)));\n    out.write(input.charAt(pos));\n    pos += 1;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..77f0e3e8 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,17 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+pos += consumed == 1 || (consumed == 2 && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) \n+             ? Character.charCount(Character.codePointAt(input, pos)) : consumed;\n+if (consumed == 0) {\n+    pos += 1;\n+}\n+if (Character.isHighSurrogate(input.charAt(Math.max(pos - consumed, 0))) && pos < len &&\n+        Character.isLowSurrogate(input.charAt(pos))) {\n+    out.write(input.charAt(Math.max(pos - consumed, 0)));\n+    out.write(input.charAt(pos));\n+    pos += 1;\n+}\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: 8",
    "test_result": "FAIL"
}