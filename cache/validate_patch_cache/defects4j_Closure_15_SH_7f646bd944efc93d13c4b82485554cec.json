{
    "patch": "      // Traverse into the try-catch-finally blocks.\n      if (n.isTry()) {\n        if (apply(n.getFirstChild())) {\n          return true;\n        }\n        for (Node c = n.getFirstChild().getNext(); c != null; c = c.getNext()) {\n          if (apply(c)) {\n            return true;\n          }\n        }\n        if (n.getLastChild() != null && apply(n.getLastChild())) {\n          return true;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..5b941abb 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,20 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+      // Traverse into the try-catch-finally blocks.\n+      if (n.isTry()) {\n+        if (apply(n.getFirstChild())) {\n+          return true;\n+        }\n+        for (Node c = n.getFirstChild().getNext(); c != null; c = c.getNext()) {\n+          if (apply(c)) {\n+            return true;\n+          }\n+        }\n+        if (n.getLastChild() != null && apply(n.getLastChild())) {\n+          return true;\n+        }\n+      }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}