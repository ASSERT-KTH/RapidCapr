{
    "patch": "public static boolean containsAny(final CharSequence string, final char[] searchChars) {\n   if (isEmpty(string) || ArrayUtils.isEmpty(searchChars)) {\n      return false;\n   }\n   final int len = string.length();\n   final int searchLength = searchChars.length;\n   final int stop = len - searchLength;\n   for (int i = 0; i <= stop; i++) {\n      for (int j = 0; j < searchLength; j++) {\n         if (Character.codePointAt(string, i) == Character.codePointAt(searchChars, j)) {\n            return true;\n         }\n      }\n   }\n   return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..e6fd56a1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,22 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence string, final char[] searchChars) {\n+   if (isEmpty(string) || ArrayUtils.isEmpty(searchChars)) {\n+      return false;\n+   }\n+   final int len = string.length();\n+   final int searchLength = searchChars.length;\n+   final int stop = len - searchLength;\n+   for (int i = 0; i <= stop; i++) {\n+      for (int j = 0; j < searchLength; j++) {\n+         if (Character.codePointAt(string, i) == Character.codePointAt(searchChars, j)) {\n+            return true;\n+         }\n+      }\n+   }\n+   return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}