{
    "patch": "public ReturnValue execute(Context ctx) throws Throwable {\n    if (item == null) {\n        return ReturnValue.getVoid();\n    }\n    Object value = getValue();\n    if (value instanceof Iterable) {\n        Iterable iterable = (Iterable) value;\n        Iterator itr = iterable.iterator();\n        if (itr.hasNext()) {\n            Object next = itr.next();\n            if (item.equals(next)) {\n                return ReturnValue.getVoid();\n            }\n        }\n    }\n    return new ReturnValue(ReturnValue.Type.VALUE, value);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}