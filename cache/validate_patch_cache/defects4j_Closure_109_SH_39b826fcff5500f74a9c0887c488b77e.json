{
    "patch": "// First, try to parse as a type expression\nNode typeExpression = parseTypeExpression(token);\n\n// If that fails, parse as a type name \nif (typeExpression == null) {\n  typeExpression = parseTypeName(token);\n}\n\nreturn typeExpression;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..0716fbc7 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,15 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+// First, try to parse as a type expression\n+Node typeExpression = parseTypeExpression(token);\n+\n+// If that fails, parse as a type name \n+if (typeExpression == null) {\n+  typeExpression = parseTypeName(token);\n+}\n+\n+return typeExpression;\n   }\n \n   /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}