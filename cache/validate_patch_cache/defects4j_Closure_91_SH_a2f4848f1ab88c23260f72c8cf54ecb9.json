{
    "patch": "      if (NodeUtil.isObjectLitKey(parent, n) && NodeUtil.isObjectLit(parent.getParent())) {\n        String keyName = NodeUtil.getObjectLitKeyName(n);\n        if (keyName != null && keyName.endsWith(\"_proto\")) {\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..377e1757 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,11 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isObjectLitKey(parent, n) && NodeUtil.isObjectLit(parent.getParent())) {\n+        String keyName = NodeUtil.getObjectLitKeyName(n);\n+        if (keyName != null && keyName.endsWith(\"_proto\")) {\n+          return false;\n+        }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}