{
    "patch": "      if (nameNode.getType() == Token.GETPROP && \"Math\".equals(nameNode.getFirstChild().getString())) {\n        String methodName = nameNode.getLastChild().getString();\n        if (OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(methodName)) {\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..a1d4c6c6 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,11 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+      if (nameNode.getType() == Token.GETPROP && \"Math\".equals(nameNode.getFirstChild().getString())) {\n+        String methodName = nameNode.getLastChild().getString();\n+        if (OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(methodName)) {\n+          return false;\n+        }\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}