{
    "patch": "if (invocation.getMethod().getDeclaringClass().equals(Comparable.class)) {\n    throw new AssertionError(\"compareTo() method not properly overridden\");\n} else if (invocation.getArguments()[0] == invocation.getMock()) {\n    return 0;\n} else {\n    return 1;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 4c00f50b1..fbf8cd7df 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -73,7 +73,13 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             //see issue 184.\n             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).\n             //Only for compareTo() method by the Comparable interface\n-            return 1;\n+if (invocation.getMethod().getDeclaringClass().equals(Comparable.class)) {\n+    throw new AssertionError(\"compareTo() method not properly overridden\");\n+} else if (invocation.getArguments()[0] == invocation.getMock()) {\n+    return 0;\n+} else {\n+    return 1;\n+}\n         }\n         \n         Class<?> returnType = invocation.getMethod().getReturnType();\n@@ -120,4 +126,4 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n         return null;\n     }\n \n-}\n\\ No newline at end of file\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}