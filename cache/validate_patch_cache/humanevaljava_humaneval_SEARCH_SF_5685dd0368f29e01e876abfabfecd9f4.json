{
    "patch": "    public static int search(int[] lst) {\n        int n = lst.length;\n        int[] count = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            if (lst[i] >= 0 && lst[i] <= n) {\n                count[lst[i]]++;\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            if (count[i] == 0) {\n                return i;\n            }\n        }\n        return n + 1;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SEARCH.java b/src/main/java/humaneval/buggy/SEARCH.java\nindex 285deda..e04ec54 100644\n--- a/src/main/java/humaneval/buggy/SEARCH.java\n+++ b/src/main/java/humaneval/buggy/SEARCH.java\n@@ -11,17 +11,18 @@ Examples:\n \n public class SEARCH {\n     public static int search(int[] lst) {\n-        int max = -1;\n-        for (Integer i : lst) {\n-            if (i > max)\n-                max = i;\n+        int n = lst.length;\n+        int[] count = new int[n + 1];\n+        for (int i = 0; i < n; i++) {\n+            if (lst[i] >= 0 && lst[i] <= n) {\n+                count[lst[i]]++;\n+            }\n         }\n-\n-        int result = -1;\n-        int[] frq = new int[max];\n-        for (int i = 0; i < lst.length; i += 1)  frq[i] += 1;\n-        for (int i = 0; i < frq.length; i += 1) if (frq[i] >= i) result = i;\n-        \n-        return result;\n+        for (int i = 1; i <= n; i++) {\n+            if (count[i] == 0) {\n+                return i;\n+            }\n+        }\n+        return n + 1;\n     }\n }",
    "result_reason": "   TEST_SEARCH.test_0:9 expected:<2> but was:<1>",
    "test_result": "FAIL"
}