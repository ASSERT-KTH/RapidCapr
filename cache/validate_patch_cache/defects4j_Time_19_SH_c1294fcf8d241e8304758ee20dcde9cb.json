{
    "patch": "        //... previous code ...\n        } else if (offsetLocal >= 0 && offsetAdjusted >= 0 || (offsetLocal < 0 && offsetAdjusted < 0 && nextTransition(instantAdjusted) != instantLocal - offsetLocal)) {\n            // we need to ensure that time is always after the DST gap\n            // this happens naturally for positive offsets, but not for negative\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long prev = previousTransition(nextLocal + OFFSET_THRESHOLD);\n                if (prev < instantAdjusted) {\n                    return getOffset(prev);\n                } else {\n                    return offsetLocal;\n                }\n            } else {\n                // one of the transitions was wrongly calculated\n                return offsetLocal;\n            }\n        }\n        //... remaining code ...",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..7dcb87d3 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,28 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+        //... previous code ...\n+        } else if (offsetLocal >= 0 && offsetAdjusted >= 0 || (offsetLocal < 0 && offsetAdjusted < 0 && nextTransition(instantAdjusted) != instantLocal - offsetLocal)) {\n+            // we need to ensure that time is always after the DST gap\n+            // this happens naturally for positive offsets, but not for negative\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextLocal != nextAdjusted) {\n+                // if we just return offsetAdjusted then the time is pushed\n+                // back before the transition, whereas it should be\n+                // on or after the transition\n+                long prev = previousTransition(nextLocal + OFFSET_THRESHOLD);\n+                if (prev < instantAdjusted) {\n+                    return getOffset(prev);\n+                } else {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                // one of the transitions was wrongly calculated\n+                return offsetLocal;\n+            }\n+        }\n+        //... remaining code ...\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}