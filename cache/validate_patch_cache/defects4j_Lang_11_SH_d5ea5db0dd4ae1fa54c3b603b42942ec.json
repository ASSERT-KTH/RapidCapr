{
    "patch": "if (start == 0 && end == 0 && (chars == null || chars.length == 0)) {\n    if (!letters && !numbers) {\n        end = Integer.MAX_VALUE;\n    } else {\n        end = 'z' + 1;\n        start = ' ';                \n    }\n} else {\n    if (start > end) {\n        int temp = end;\n        end = start;\n        start = temp;\n    }\n    if (chars != null && chars.length > 0) {\n        end = chars.length;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..8649efb4 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,23 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+if (start == 0 && end == 0 && (chars == null || chars.length == 0)) {\n+    if (!letters && !numbers) {\n+        end = Integer.MAX_VALUE;\n+    } else {\n+        end = 'z' + 1;\n+        start = ' ';                \n+    }\n+} else {\n+    if (start > end) {\n+        int temp = end;\n+        end = start;\n+        start = temp;\n+    }\n+    if (chars != null && chars.length > 0) {\n+        end = chars.length;\n+    }\n+}\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "junit.framework.AssertionFailedError: Message (bound must be positive) must contain 'start'",
    "test_result": "FAIL"
}