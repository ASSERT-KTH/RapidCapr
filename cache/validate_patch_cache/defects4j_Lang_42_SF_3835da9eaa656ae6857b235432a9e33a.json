{
    "patch": "public void escape(Writer writer, String str) throws IOException {\n    int len = str.length();\n    int i = 0; // current position\n    while (i < len) {\n        char c = str.charAt(i);\n        String entityName = this.entityName(c);\n        if (entityName == null) {\n            if (Character.isHighSurrogate(c)) {\n                if (i+1 < len && Character.isLowSurrogate(str.charAt(i+1))) {\n                    // handle surrogate pair\n                    int codePoint = Character.toCodePoint(c, str.charAt(i+1));\n                    writer.write(\"&#\");\n                    writer.write(Integer.toString(codePoint, 10));\n                    writer.write(';');\n                    i += 2;\n                    continue;\n                } else {\n                    // invalid surrogate pair, treat as regular char\n                    writer.write(c);\n                }\n            } else {\n                // regular char\n                if (c > 0x7F) {\n                    writer.write(\"&#\");\n                    writer.write(Integer.toString(c, 10));\n                    writer.write(';');\n                } else {\n                    writer.write(c);\n                }\n            }\n        } else {\n            // entity name\n            writer.write('&');\n            writer.write(entityName);\n            writer.write(';');\n        }\n        i++; // move to next char\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java\nindex 900e1a89..24429919 100644\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n@@ -822,12 +822,28 @@ class Entities {\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void escape(Writer writer, String str) throws IOException {\n-        int len = str.length();\n-        for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n-            String entityName = this.entityName(c);\n-            if (entityName == null) {\n+public void escape(Writer writer, String str) throws IOException {\n+    int len = str.length();\n+    int i = 0; // current position\n+    while (i < len) {\n+        char c = str.charAt(i);\n+        String entityName = this.entityName(c);\n+        if (entityName == null) {\n+            if (Character.isHighSurrogate(c)) {\n+                if (i+1 < len && Character.isLowSurrogate(str.charAt(i+1))) {\n+                    // handle surrogate pair\n+                    int codePoint = Character.toCodePoint(c, str.charAt(i+1));\n+                    writer.write(\"&#\");\n+                    writer.write(Integer.toString(codePoint, 10));\n+                    writer.write(';');\n+                    i += 2;\n+                    continue;\n+                } else {\n+                    // invalid surrogate pair, treat as regular char\n+                    writer.write(c);\n+                }\n+            } else {\n+                // regular char\n                 if (c > 0x7F) {\n                     writer.write(\"&#\");\n                     writer.write(Integer.toString(c, 10));\n@@ -835,13 +851,16 @@ class Entities {\n                 } else {\n                     writer.write(c);\n                 }\n-            } else {\n-                writer.write('&');\n-                writer.write(entityName);\n-                writer.write(';');\n             }\n+        } else {\n+            // entity name\n+            writer.write('&');\n+            writer.write(entityName);\n+            writer.write(';');\n         }\n+        i++; // move to next char\n     }\n+}\n \n     /**\n      * <p>",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}