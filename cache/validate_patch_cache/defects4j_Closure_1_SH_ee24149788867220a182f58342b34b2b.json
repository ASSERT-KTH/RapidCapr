{
    "patch": "    \n    // Collect referenced function parameters in the Set.\n    Set<Var> referencedArgs = new HashSet<>();\n    NodeUtil.visitPreOrder(function.getLastChild(),\n        new NodeUtil.Visitor() {\n          @Override\n          public void visit(Node node) {\n            if (node.isName() || node.isStringKey() && node.getParent().isObjectPattern()) {\n              Var var = fnScope.getVar(node.getString());\n              if (var != null && var.getParentNode() == argList) {\n                referencedArgs.add(var);\n              }\n            }\n          }\n        });\n\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n      Node lastArg;\n      while ((lastArg = argList.getLastChild()) != null) {\n        Var var = fnScope.getVar(lastArg.getString());\n        if (!referencedArgs.contains(var)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d0b03872 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,30 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    \n+    // Collect referenced function parameters in the Set.\n+    Set<Var> referencedArgs = new HashSet<>();\n+    NodeUtil.visitPreOrder(function.getLastChild(),\n+        new NodeUtil.Visitor() {\n+          @Override\n+          public void visit(Node node) {\n+            if (node.isName() || node.isStringKey() && node.getParent().isObjectPattern()) {\n+              Var var = fnScope.getVar(node.getString());\n+              if (var != null && var.getParentNode() == argList) {\n+                referencedArgs.add(var);\n+              }\n+            }\n+          }\n+        });\n+\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+      Node lastArg;\n+      while ((lastArg = argList.getLastChild()) != null) {\n+        Var var = fnScope.getVar(lastArg.getString());\n+        if (!referencedArgs.contains(var)) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}