{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.getEnclosingFunction(n.getParent()) != null) {\n        Node enclosingFunction = NodeUtil.getEnclosingFunction(n.getParent());\n        if (isLvalueEnclosingSomePrototypeChain(\n                enclosingFunction.getFirstChild(), 0, NodeUtil.getFunctionBody(enclosingFunction),\n                parent, NodeUtil.getEnclosingStatement(parent))) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..1283f4f5 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,15 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.getEnclosingFunction(n.getParent()) != null) {\n+        Node enclosingFunction = NodeUtil.getEnclosingFunction(n.getParent());\n+        if (isLvalueEnclosingSomePrototypeChain(\n+                enclosingFunction.getFirstChild(), 0, NodeUtil.getFunctionBody(enclosingFunction),\n+                parent, NodeUtil.getEnclosingStatement(parent))) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}