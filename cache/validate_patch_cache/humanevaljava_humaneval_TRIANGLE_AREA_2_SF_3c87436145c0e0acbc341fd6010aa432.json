{
    "patch": "public static double triangle_area_2(double a, double b, double c) {\n    double result;\n\n    if (a <= 0 || b <= 0 || c <= 0     // check for non-positive inputs\n        || a + b <= c || a + c <= b || b + c <= a) {\n        // triangle inequality is violated or input is invalid\n        result = -1;\n    } else {\n        double s = (a + b + c) / 2.;\n        result = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        result = Math.round(result * 100.0) / 100.0; // round to two decimal places\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java b/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\nindex 484c02b..1e6ea71 100644\n--- a/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\n+++ b/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\n@@ -13,15 +13,19 @@ triangle_area(3, 4, 5) == 6.00\n triangle_area(1, 2, 10) == -1 */\n \n public class TRIANGLE_AREA_2 {\n-    public static double triangle_area_2(double a, double b, double c) {\n-        if (a + b <= c || a + c <= b || b + c <= a)\n-            return -1;\n-        \n+public static double triangle_area_2(double a, double b, double c) {\n+    double result;\n+\n+    if (a <= 0 || b <= 0 || c <= 0     // check for non-positive inputs\n+        || a + b <= c || a + c <= b || b + c <= a) {\n+        // triangle inequality is violated or input is invalid\n+        result = -1;\n+    } else {\n         double s = (a + b + c) / 2.;\n-        double result = Math.pow(s, 0.5);\n-        \n-        BigDecimal bd = BigDecimal.valueOf(result);\n-        bd = bd.setScale(2, RoundingMode.HALF_UP);\n-        return bd.doubleValue();\n+        result = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n+        result = Math.round(result * 100.0) / 100.0; // round to two decimal places\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}