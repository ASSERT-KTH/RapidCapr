{
    "patch": "    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        final Gaussian.Parametric function = new Gaussian.Parametric();\n        final double[] lowerBound = {0, 0, 0};\n        final double[] upperBound = {Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY};\n        return fit(function, guess, lowerBound, upperBound, getWeights(), getObservations());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..97fda6797 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,10 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final Gaussian.Parametric function = new Gaussian.Parametric();\n+        final double[] lowerBound = {0, 0, 0};\n+        final double[] upperBound = {Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY};\n+        return fit(function, guess, lowerBound, upperBound, getWeights(), getObservations());\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}