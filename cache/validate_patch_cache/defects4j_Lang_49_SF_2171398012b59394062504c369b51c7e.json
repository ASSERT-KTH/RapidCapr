{
    "patch": "        int num = numerator;\n        int den = denominator;\n        int gcdValue = greatestCommonDivisor(Math.abs(num), den);\n        if (gcdValue == 1) {\n            return this;\n        }\n        num /= gcdValue;\n        den /= gcdValue;\n        return new Fraction(num, den);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..9cedce8b 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,13 +462,15 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n+        int num = numerator;\n+        int den = denominator;\n+        int gcdValue = greatestCommonDivisor(Math.abs(num), den);\n+        if (gcdValue == 1) {\n             return this;\n         }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n-    }\n+        num /= gcdValue;\n+        den /= gcdValue;\n+        return new Fraction(num, den);\n \n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}