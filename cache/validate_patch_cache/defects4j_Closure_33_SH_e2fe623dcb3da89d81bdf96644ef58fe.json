{
    "patch": "\n    // We only want to match constraints on anonymous types or function types.\n    if (!this.isNominalConstructor() && !(this instanceof FunctionType)) {\n      return;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..32b7154b 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -555,6 +555,11 @@ class PrototypeObjectType extends ObjectType {\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n \n+    // We only want to match constraints on anonymous types or function types.\n+    if (!this.isNominalConstructor() && !(this instanceof FunctionType)) {\n+      return;\n+    }\n+\n     // Handle the case where the constraint object is a record type.\n     //\n     // param constraintObj {{prop: (number|undefined)}}",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...arameter",
    "test_result": "FAIL"
}