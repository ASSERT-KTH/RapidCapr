{
    "patch": "public static boolean is_sorted(int[] lst) {\n    if(lst == null || lst.length <= 1) {\n        return true;\n    }\n    int maxCount = 2;\n    HashMap<Integer, Integer> countMap = new HashMap<>();\n    for(int i = 0; i < lst.length; i++) {\n        int count = countMap.getOrDefault(lst[i], 0) + 1;\n        if(count > maxCount) {\n            return false;\n        }\n        countMap.put(lst[i], count);\n    }\n    for(int i = 1; i < lst.length; i++) {\n        if(lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..94064ae 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,24 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n+public static boolean is_sorted(int[] lst) {\n+    if(lst == null || lst.length <= 1) {\n+        return true;\n+    }\n+    int maxCount = 2;\n+    HashMap<Integer, Integer> countMap = new HashMap<>();\n+    for(int i = 0; i < lst.length; i++) {\n+        int count = countMap.getOrDefault(lst[i], 0) + 1;\n+        if(count > maxCount) {\n+            return false;\n         }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n+        countMap.put(lst[i], count);\n+    }\n+    for(int i = 1; i < lst.length; i++) {\n+        if(lst[i] < lst[i - 1]) {\n+            return false;\n         }\n-        return true;\n     }\n+    return true;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}