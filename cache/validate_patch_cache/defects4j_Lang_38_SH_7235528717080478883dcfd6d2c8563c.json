{
    "patch": "if (mTimeZoneForced) {\n    DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");\n    format.setTimeZone(mTimeZone);\n    long timeInMillis = calendar.getTimeInMillis();\n    long offsetInMillis = mTimeZone.getOffset(timeInMillis);\n    timeInMillis -= offsetInMillis;\n    calendar.setTimeInMillis(timeInMillis);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..182448da 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,14 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");\n+    format.setTimeZone(mTimeZone);\n+    long timeInMillis = calendar.getTimeInMillis();\n+    long offsetInMillis = mTimeZone.getOffset(timeInMillis);\n+    timeInMillis -= offsetInMillis;\n+    calendar.setTimeInMillis(timeInMillis);\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}