{
    "patch": "public class Distribution {\n    private final double[] probabilities; // probability density function\n    private final Random random; // random number generator\n\n    public Distribution(double[] probabilities) {\n        this.probabilities = probabilities;\n        this.random = new Random();\n    }\n\n    public double next() {\n        double rand = this.random.nextDouble();\n        double cumulativeProbability = 0.0;\n        int i;\n        for (i = 0; i < probabilities.length; i++) {\n            cumulativeProbability += probabilities[i];\n            if (rand <= cumulativeProbability) {\n                return (double) i;\n            }\n        }\n        return (double) (i - 1);\n    }\n\n    public double[] sample(int n) {\n        double[] samples = new double[n];\n        for (int i = 0; i < n; i++) {\n            samples[i] = this.next();\n        }\n        return samples;\n    }\n\n    public double mean(double[] samples) {\n        double sum = 0.0;\n        for (double sample : samples) {\n            sum += sample;\n        }\n        return sum / samples.length;\n    }\n\n    public double variance(double[] samples) {\n        double sum = 0.0;\n        double mean = this.mean(samples);\n        for (double sample : samples) {\n            sum += Math.pow(sample - mean, 2);\n        }\n        return sum / (samples.length - 1);\n    }\n\n    public double[] distribution() {\n        double[] distribution = new double[probabilities.length];\n        double cumulativeProbability = 0.0;\n        for (int i = 0; i < probabilities.length; i++) {\n            cumulativeProbability += probabilities[i];\n            distribution[i] = cumulativeProbability;\n        }\n        return distribution;\n    }\n\n    public static double[] normalize(double[] a) {\n        double total = 0.0;\n        for (double v : a) {\n            total += v;\n        }\n        double[] b = new double[a.length];\n        for (int i = 0; i < a.length; i++) {\n            b[i] = a[i] / total;\n        }\n        return b;\n    }\n\n    public static void main(String[] args) {\n        double[] probabilities = {0.2, 0.3, 0.5};\n        int n = 500000;\n\n        // initialize distribution\n        Distribution dist = new Distribution(normalize(probabilities));\n\n        // generate n samples\n        double[] samples = dist.sample(n);\n\n        // estimate mean and variance from samples\n        double sampleMean = dist.mean(samples);\n        double sampleVariance = dist.variance(samples);\n        System.out.println(\"Sample mean: \" + sampleMean);\n        System.out.println(\"Sample variance: \" + sampleVariance);\n\n        // test sampling distribution\n        double[] distribution = dist.distribution();\n        double[] frequencies = new double[probabilities.length];\n        for (int i = 0; i < n; i++) {\n            double sample = samples[i];\n            for (int j = 0; j < probabilities.length; j++) {\n                if (sample < distribution[j]) {\n                    frequencies[j]++;\n                    break;\n                }\n            }\n        }\n        for (int i = 0; i < frequencies.length; i++) {\n            double expected = probabilities[i] * n;\n            double actual = frequencies[i];\n            double error = Math.abs(expected - actual) / expected;\n            System.out.printf(\"Category %d: expected=%f, actual=%f, error=%f%%\\n\", i, expected, actual, error*100);\n        }\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}