{
    "patch": "public class RegularizedGammaFunction {\n\n    public static double regularizedGamma(double a, double x, double epsilon) {\n        double term = 1 / a;\n        double sum = term;\n        int i = 1;\n        while (term / sum > epsilon) {\n            term *= x / (a + i);\n            sum += term;\n            i++;\n        }\n        return Math.exp(-x + Math.log(x) * a - MathUtils.lnGamma(a)) * sum;\n    }\n    \n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..8fa56522e 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,21 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public class RegularizedGammaFunction {\n+\n+    public static double regularizedGamma(double a, double x, double epsilon) {\n+        double term = 1 / a;\n+        double sum = term;\n+        int i = 1;\n+        while (term / sum > epsilon) {\n+            term *= x / (a + i);\n+            sum += term;\n+            i++;\n+        }\n+        return Math.exp(-x + Math.log(x) * a - MathUtils.lnGamma(a)) * sum;\n+    }\n+    \n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}