{
    "patch": "            TimeSeriesDataItem lastItemBeforeStart = null;\n            for (int index = 0; index < this.data.size(); index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                if (item.getPeriod().compareTo(startPeriod) >= 0) {\n                    break;\n                }\n                lastItemBeforeStart = (TimeSeriesDataItem) item.clone();\n            }\n            boolean foundStart = false;\n            for (int index = 0; index < this.data.size(); index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                if (item.getPeriod().equals(startPeriod)) {\n                    foundStart = true;\n                }\n                if (foundStart && index <= endIndex) {\n                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                    copy.add(clone);\n                } else if (index > endIndex) {\n                    break;\n                }\n            }\n            if (copy.getItemCount() == 0 && lastItemBeforeStart != null) {\n                // if no element is added to the new time series, add the last element\n                // before the start period.\n                copy.add((TimeSeriesDataItem) lastItemBeforeStart.clone());",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..8850a6e 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,31 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+            TimeSeriesDataItem lastItemBeforeStart = null;\n+            for (int index = 0; index < this.data.size(); index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                if (item.getPeriod().compareTo(startPeriod) >= 0) {\n+                    break;\n+                }\n+                lastItemBeforeStart = (TimeSeriesDataItem) item.clone();\n+            }\n+            boolean foundStart = false;\n+            for (int index = 0; index < this.data.size(); index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                if (item.getPeriod().equals(startPeriod)) {\n+                    foundStart = true;\n+                }\n+                if (foundStart && index <= endIndex) {\n+                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                    copy.add(clone);\n+                } else if (index > endIndex) {\n+                    break;\n+                }\n+            }\n+            if (copy.getItemCount() == 0 && lastItemBeforeStart != null) {\n+                // if no element is added to the new time series, add the last element\n+                // before the start period.\n+                copy.add((TimeSeriesDataItem) lastItemBeforeStart.clone());\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}