{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (n.getParent() != null && n.getParent().getType() == Token.ASSIGN) {\n        Node rhs = n.getParent().getLastChild();\n        if (rhs != null &&\n            (rhs.getType() == Token.FUNCTION ||\n             rhs.getType() == Token.NEW ||\n             rhs.getType() == Token.OBJECTLIT)) {\n          Node maybeCallOrLend = n.getParent().getParent();\n          boolean isPropertyLend =\n              maybeCallOrLend != null &&\n              NodeUtil.isCallOrNew(maybeCallOrLend) &&\n              NodeUtil.isGet(maybeCallOrLend.getFirstChild());\n          if (!isPropertyLend) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..668638fb 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,23 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (n.getParent() != null && n.getParent().getType() == Token.ASSIGN) {\n+        Node rhs = n.getParent().getLastChild();\n+        if (rhs != null &&\n+            (rhs.getType() == Token.FUNCTION ||\n+             rhs.getType() == Token.NEW ||\n+             rhs.getType() == Token.OBJECTLIT)) {\n+          Node maybeCallOrLend = n.getParent().getParent();\n+          boolean isPropertyLend =\n+              maybeCallOrLend != null &&\n+              NodeUtil.isCallOrNew(maybeCallOrLend) &&\n+              NodeUtil.isGet(maybeCallOrLend.getFirstChild());\n+          if (!isPropertyLend) {\n+            return false;\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}