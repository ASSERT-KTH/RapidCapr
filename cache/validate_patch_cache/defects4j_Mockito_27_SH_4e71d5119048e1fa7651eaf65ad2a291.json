{
    "patch": "        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MockSettingsImpl mockSettings = (MockSettingsImpl) Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS).name(mock.getClass().getSimpleName() + \"_SPY\");\n        Object newProxy = mock.getClass().isInterface() ? mockSettings.extraInterfaces(mock.getClass()).build().getMock() : mockSettings.spiedInstance(mock).build().getMock();\n        ((Factory) newProxy).setCallbacks(new Callback[] { newFilter });\n        setMockHandler(newProxy, newMockHandler);\n        resetMock((T) newProxy);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..990b8d452 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,15 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MockSettingsImpl mockSettings = (MockSettingsImpl) Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS).name(mock.getClass().getSimpleName() + \"_SPY\");\n+        Object newProxy = mock.getClass().isInterface() ? mockSettings.extraInterfaces(mock.getClass()).build().getMock() : mockSettings.spiedInstance(mock).build().getMock();\n+        ((Factory) newProxy).setCallbacks(new Callback[] { newFilter });\n+        setMockHandler(newProxy, newMockHandler);\n+        resetMock((T) newProxy);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}