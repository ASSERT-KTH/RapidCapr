{
    "patch": "copy.data = new java.util.ArrayList();\nint count = 0;\nfor (int i = 0; i < data.size(); i++) {\n    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n    if ((count >= start) && (count <= end)) {\n        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n        try {\n            copy.add(clone);\n        } catch (SeriesException e) {\n            System.err.println(\"Failed to add cloned item to TimeSeries\");\n            e.printStackTrace();\n        }\n    } else if (count > end) {\n        break;\n    }\n    count++;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..10c1907 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,23 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+int count = 0;\n+for (int i = 0; i < data.size(); i++) {\n+    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n+    if ((count >= start) && (count <= end)) {\n+        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+        try {\n+            copy.add(clone);\n+        } catch (SeriesException e) {\n+            System.err.println(\"Failed to add cloned item to TimeSeries\");\n+            e.printStackTrace();\n+        }\n+    } else if (count > end) {\n+        break;\n+    }\n+    count++;\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>",
    "test_result": "FAIL"
}