{
    "patch": "private String getRemainingJSDocLine() {\n    String result = null;\n    try {\n        result = stream.getRemainingJSDocLine().trim();\n    } catch (Exception e) {\n        // Catch NullPointerExceptions and return null.\n        if (e instanceof NullPointerException) {\n            result = null;\n        } else {\n            throw e;\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..bba86fd8 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,20 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = null;\n+    try {\n+        result = stream.getRemainingJSDocLine().trim();\n+    } catch (Exception e) {\n+        // Catch NullPointerExceptions and return null.\n+        if (e instanceof NullPointerException) {\n+            result = null;\n+        } else {\n+            throw e;\n+        }\n+    }\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: unreported exception Exception; must be caught or declared to be thrown",
    "test_result": "ERROR"
}