{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n  if (cfgNode == null || !cfgNode.hasChildren()) {\n    return false;\n  }\n\n  Node lastChild = cfgNode.getLastChild();\n  if (lastChild.isTry()) {\n    Node catchNode = lastChild.getFirstChild().getNext();\n    return catchNode != null && catchNode.hasChildren();\n  }\n\n  if (lastChild.isBlock()) {\n    for (Node child = lastChild.getFirstChild(); child != null; child = child.getNext()) {\n      if (hasExceptionHandler(child)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..5f7e1221 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,10 +156,28 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+  if (cfgNode == null || !cfgNode.hasChildren()) {\n     return false;\n   }\n \n+  Node lastChild = cfgNode.getLastChild();\n+  if (lastChild.isTry()) {\n+    Node catchNode = lastChild.getFirstChild().getNext();\n+    return catchNode != null && catchNode.hasChildren();\n+  }\n+\n+  if (lastChild.isBlock()) {\n+    for (Node child = lastChild.getFirstChild(); child != null; child = child.getNext()) {\n+      if (hasExceptionHandler(child)) {\n+        return true;\n+      }\n+    }\n+  }\n+\n+  return false;\n+}\n+\n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {\n     switch (n.getType()) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}