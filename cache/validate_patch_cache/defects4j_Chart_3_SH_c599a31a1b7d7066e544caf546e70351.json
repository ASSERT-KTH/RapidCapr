{
    "patch": "copy = (TimeSeries) super.clone();\ncopy.data = new java.util.ArrayList(this.getItemCount());\nfor (int index = start; index <= end; index++) {\n    TimeSeriesDataItem item = this.getDataItem(index);\n    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n    try {\n        copy.add(clone);\n    } catch (SeriesException e) {\n        e.printStackTrace();\n    }\n}\ncopy.setRangeDescription(null);\ncopy.setDomainDescription(null);",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..ba4322a 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList(this.getItemCount());\n+for (int index = start; index <= end; index++) {\n+    TimeSeriesDataItem item = this.getDataItem(index);\n+    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+    try {\n+        copy.add(clone);\n+    } catch (SeriesException e) {\n+        e.printStackTrace();\n+    }\n+}\n+copy.setRangeDescription(null);\n+copy.setDomainDescription(null);\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "java.lang.IndexOutOfBoundsException: Index: 99, Size: 0",
    "test_result": "FAIL"
}