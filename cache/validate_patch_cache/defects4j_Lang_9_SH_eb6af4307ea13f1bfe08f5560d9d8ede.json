{
    "patch": "if (currentStrategy == null) {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}\nif(currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\nwhile (nextStrategy != null) {\n    currentFormatField= nextFormatField;\n    currentStrategy= nextStrategy;\n    nextStrategy= null;\n    patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n    if(patternMatcher.lookingAt()) {\n        nextFormatField= patternMatcher.group();\n        nextStrategy = getStrategy(nextFormatField);\n    }\n    if(currentStrategy.addRegex(this, regex)) {\n        collector.add(currentStrategy);\n    }\n}\ncurrentFormatField= null;\nstrategies= collector.toArray(new Strategy[collector.size()]);\nparsePattern= Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..930896f3 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,28 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if (currentStrategy == null) {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n+if(currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+while (nextStrategy != null) {\n+    currentFormatField= nextFormatField;\n+    currentStrategy= nextStrategy;\n+    nextStrategy= null;\n+    patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n+    if(patternMatcher.lookingAt()) {\n+        nextFormatField= patternMatcher.group();\n+        nextStrategy = getStrategy(nextFormatField);\n+    }\n+    if(currentStrategy.addRegex(this, regex)) {\n+        collector.add(currentStrategy);\n+    }\n+}\n+currentFormatField= null;\n+strategies= collector.toArray(new Strategy[collector.size()]);\n+parsePattern= Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}