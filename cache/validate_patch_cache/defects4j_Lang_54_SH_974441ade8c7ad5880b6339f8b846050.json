{
    "patch": "if (len < 2 || len > 10) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (!Character.isLowerCase(str.charAt(0)) || !Character.isLowerCase(str.charAt(1))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len == 3 || len == 6 || len > 7) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len == 7 && (!\"_POSIX\".equals(str.substring(2)))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len > 3 && str.charAt(2) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len > 5 && str.charAt(5) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len > 4 && !Character.isUpperCase(str.charAt(3))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else if (len == 4 || len == 5) {\n    return new Locale(str);\n} else if (len == 7) {\n    return new Locale(str.substring(0, 2), \"\", str.substring(3));\n} else if (len == 10) {\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n} else if (str.charAt(6) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else {\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(7));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..93f31c08 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,31 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len < 2 || len > 10) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (!Character.isLowerCase(str.charAt(0)) || !Character.isLowerCase(str.charAt(1))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len == 3 || len == 6 || len > 7) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len == 7 && (!\"_POSIX\".equals(str.substring(2)))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len > 3 && str.charAt(2) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len > 5 && str.charAt(5) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len > 4 && !Character.isUpperCase(str.charAt(3))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else if (len == 4 || len == 5) {\n+    return new Locale(str);\n+} else if (len == 7) {\n+    return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+} else if (len == 10) {\n+    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+} else if (str.charAt(6) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else {\n+    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(7));\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}