{
    "patch": "while (number > 0) {\n    if (i < 0) {\n        throw new IllegalArgumentException(\"Number cannot be represented in mini roman numerals.\");\n    }\n    if (number >= num[i]) {\n        result += sym[i];\n        number -= num[i];\n    } else {\n        i--;\n    }\n}\nif (number < 0) {\n    throw new IllegalArgumentException(\"Negative numbers cannot be represented in mini roman numerals.\");\n} else if (number > 0",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\nindex 0f3c881..7dc0562 100644\n--- a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n+++ b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n@@ -19,7 +19,20 @@ public class INT_TO_MINI_ROMAN {\n         int i = 12;\n         String result = \"\";\n         while (number > 0) {\n-            result += sym[i];\n+while (number > 0) {\n+    if (i < 0) {\n+        throw new IllegalArgumentException(\"Number cannot be represented in mini roman numerals.\");\n+    }\n+    if (number >= num[i]) {\n+        result += sym[i];\n+        number -= num[i];\n+    } else {\n+        i--;\n+    }\n+}\n+if (number < 0) {\n+    throw new IllegalArgumentException(\"Negative numbers cannot be represented in mini roman numerals.\");\n+} else if (number > 0\n             number %= num[i];\n             i -= 1;\n         }",
    "result_reason": " /tmp/humaneval-INT_TO_MINI_ROMAN/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java:[35,22] ')' expected",
    "test_result": "ERROR"
}