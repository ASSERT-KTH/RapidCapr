{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    RealMatrix result;\n    try {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        result = dec.getSquareRoot();\n    } finally {\n        dec = null; // set EigenDecomposition object to null to allow GC to collect memory\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..f2aa235ee 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,14 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    RealMatrix result;\n+    try {\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        result = dec.getSquareRoot();\n+    } finally {\n+        dec = null; // set EigenDecomposition object to null to allow GC to collect memory\n     }\n+    return result;\n+}\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}