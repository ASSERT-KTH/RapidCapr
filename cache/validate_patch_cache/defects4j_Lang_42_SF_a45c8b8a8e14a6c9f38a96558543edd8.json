{
    "patch": "public void escape(Writer writer, String str) throws IOException {\n    for (int i = 0; i < str.length(); i++) {\n        char c = str.charAt(i);\n        if (c <= 0x7F) {\n            switch (c) {\n                case '<':\n                    writer.write(\"&lt;\");\n                    break;\n                case '>':\n                    writer.write(\"&gt;\");\n                    break;\n                case '&':\n                    writer.write(\"&amp;\");\n                    break;\n                case '\"':\n                    writer.write(\"&quot;\");\n                    break;\n                case '\\'':\n                    writer.write(\"&#39;\");\n                    break;\n                default:\n                    writer.write(c);\n            }\n        } else if (c <= 0xD7FF || c >= 0xE000 && c <= 0xFFFF) {\n            writer.write(\"&#\");\n            writer.write(Integer.toString(c, 10));\n            writer.write(';');\n      ",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java\nindex 900e1a89..149b837e 100644\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n@@ -822,26 +822,34 @@ class Entities {\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void escape(Writer writer, String str) throws IOException {\n-        int len = str.length();\n-        for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n-            String entityName = this.entityName(c);\n-            if (entityName == null) {\n-                if (c > 0x7F) {\n-                    writer.write(\"&#\");\n-                    writer.write(Integer.toString(c, 10));\n-                    writer.write(';');\n-                } else {\n+public void escape(Writer writer, String str) throws IOException {\n+    for (int i = 0; i < str.length(); i++) {\n+        char c = str.charAt(i);\n+        if (c <= 0x7F) {\n+            switch (c) {\n+                case '<':\n+                    writer.write(\"&lt;\");\n+                    break;\n+                case '>':\n+                    writer.write(\"&gt;\");\n+                    break;\n+                case '&':\n+                    writer.write(\"&amp;\");\n+                    break;\n+                case '\"':\n+                    writer.write(\"&quot;\");\n+                    break;\n+                case '\\'':\n+                    writer.write(\"&#39;\");\n+                    break;\n+                default:\n                     writer.write(c);\n-                }\n-            } else {\n-                writer.write('&');\n-                writer.write(entityName);\n-                writer.write(';');\n             }\n-        }\n-    }\n+        } else if (c <= 0xD7FF || c >= 0xE000 && c <= 0xFFFF) {\n+            writer.write(\"&#\");\n+            writer.write(Integer.toString(c, 10));\n+            writer.write(';');\n+      \n \n     /**\n      * <p>",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}