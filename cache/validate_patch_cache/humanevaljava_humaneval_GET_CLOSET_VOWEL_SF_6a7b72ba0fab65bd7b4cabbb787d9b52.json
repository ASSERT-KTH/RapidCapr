{
    "patch": "    public static String get_closest_vowel(String word) {\n        if(word.length() < 3) return \"\";\n        ArrayList<Character> vowels = new ArrayList<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));\n        int middle = word.length() / 2;\n        if(word.length() % 2 == 0) { // even length word\n            int left = middle - 1;\n            int right = middle;\n            while(left >= 0 && right < word.length()) {\n                if(vowels.contains(word.charAt(left))) {\n                    return word.substring(left, left + 1);\n                }\n                if(vowels.contains(word.charAt(right))) {\n                    return word.substring(right, right + 1);\n                }\n                left--;\n                right++;\n            }\n        } else { // odd length word\n            int left = middle - 1;\n            int right = middle + 1;\n            while(left >= 0 && right < word.length()) {\n                if(vowels.contains(word.charAt(left))) {\n                    return word.substring(left, left + 1);\n                }\n                if(vowels.contains(word.charAt(right))) {\n                    return word.substring(right, right + 1);\n                }\n                left--;\n                right++;\n            }\n            if(vowels.contains(word.charAt(middle))) {\n                return word.substring(middle, middle + 1);\n            }\n        }\n        return \"\";\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\nindex 885eb35..1d708bf 100644\n--- a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n+++ b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n@@ -20,14 +20,38 @@ import java.util.Arrays;\n  */\n \n public class GET_CLOSET_VOWEL {\n-    public static String get_closet_vowel(String word) {\n+    public static String get_closest_vowel(String word) {\n         if(word.length() < 3) return \"\";\n         ArrayList<Character> vowels = new ArrayList<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));\n-        for(int i = word.length() - 2; i >= 0; i--) {\n-            if(vowels.contains(word.charAt(i))) {\n-                if(!vowels.contains(word.charAt(i + 1)) && !vowels.contains(word.charAt(i - 1))) {\n-                    return word.substring(i, i + 1);\n+        int middle = word.length() / 2;\n+        if(word.length() % 2 == 0) { // even length word\n+            int left = middle - 1;\n+            int right = middle;\n+            while(left >= 0 && right < word.length()) {\n+                if(vowels.contains(word.charAt(left))) {\n+                    return word.substring(left, left + 1);\n                 }\n+                if(vowels.contains(word.charAt(right))) {\n+                    return word.substring(right, right + 1);\n+                }\n+                left--;\n+                right++;\n+            }\n+        } else { // odd length word\n+            int left = middle - 1;\n+            int right = middle + 1;\n+            while(left >= 0 && right < word.length()) {\n+                if(vowels.contains(word.charAt(left))) {\n+                    return word.substring(left, left + 1);\n+                }\n+                if(vowels.contains(word.charAt(right))) {\n+                    return word.substring(right, right + 1);\n+                }\n+                left--;\n+                right++;\n+            }\n+            if(vowels.contains(word.charAt(middle))) {\n+                return word.substring(middle, middle + 1);\n             }\n         }\n         return \"\";",
    "result_reason": " /tmp/humaneval-GET_CLOSET_VOWEL/src/test/java/humaneval/TEST_GET_CLOSET_VOWEL.java:[6,57] cannot find symbol",
    "test_result": "ERROR"
}