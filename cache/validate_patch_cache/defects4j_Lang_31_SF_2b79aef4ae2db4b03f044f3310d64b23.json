{
    "patch": "public static boolean containsAny(final char[] str, final char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    for (int i = 0; i < str.length; i++) {\n        final int high = Character.isHighSurrogate(str[i]) ? str[i] : 0;\n        if (searchCharsContains(str[i], high, searchChars)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate static boolean searchCharsContains(final char ch, final int high, final char[] searchChars) {\n    for (int i = 0; i < searchChars.length; i++) {\n        if (searchChars[i] == ch) {\n            return true;\n        } else if (high != 0 && i < searchChars.length - 1 && searchChars[i] == high && searchChars[i+1] == ch) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..b9d7e2d8 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final char[] str, final char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    for (int i = 0; i < str.length; i++) {\n+        final int high = Character.isHighSurrogate(str[i]) ? str[i] : 0;\n+        if (searchCharsContains(str[i], high, searchChars)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean searchCharsContains(final char ch, final int high, final char[] searchChars) {\n+    for (int i = 0; i < searchChars.length; i++) {\n+        if (searchChars[i] == ch) {\n+            return true;\n+        } else if (high != 0 && i < searchChars.length - 1 && searchChars[i] == high && searchChars[i+1] == ch) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}