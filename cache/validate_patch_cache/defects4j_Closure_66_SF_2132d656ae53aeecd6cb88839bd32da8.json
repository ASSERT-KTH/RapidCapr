{
    "patch": "public static double getTypedPercent(String js) {\n    int count = 0;\n    int typedCount = 0;\n    for (String line : js.split(\"\\n\")) {\n        String trimmedLine = line.trim();\n        if (trimmedLine.startsWith(\"//\")) continue;\n        if (trimmedLine.isEmpty()) continue;\n        count += 1;\n        if (trimmedLine.endsWith(\";\")) {\n            typedCount += 1;\n        }\n    }\n    return ((double) typedCount / count) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..2499c926 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int count = 0;\n+    int typedCount = 0;\n+    for (String line : js.split(\"\\n\")) {\n+        String trimmedLine = line.trim();\n+        if (trimmedLine.startsWith(\"//\")) continue;\n+        if (trimmedLine.isEmpty()) continue;\n+        count += 1;\n+        if (trimmedLine.endsWith(\";\")) {\n+            typedCount += 1;\n+        }\n+    }\n+    return ((double) typedCount / count) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}