{
    "patch": "```\nfor (int i = 0; i < s.length(); i += 3) {\n    groups.add(i + 3 <= s.length() ? s.substring(i, i + 3) : s.substring(i));\n}\n``` \n\nThis fixes the issue by ensuring that the substring is only taken if it can be of length 3. If it is not of length 3 then remaining segment is added as a substring.",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..c2b39af 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -8,7 +8,13 @@ public class DECODE_CYCLIC {\n             String encode_cyclic(String s) {\n                 ArrayList<String> groups = new ArrayList<String>();\n \n-                for (int i = 0; i < s.length(); i += 3){\n+```\n+for (int i = 0; i < s.length(); i += 3) {\n+    groups.add(i + 3 <= s.length() ? s.substring(i, i + 3) : s.substring(i));\n+}\n+``` \n+\n+This fixes the issue by ensuring that the substring is only taken if it can be of length 3. If it is not of length 3 then remaining segment is added as a substring.\n                     groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n                 }\n                 int remain = s.length() % 3;",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[11,1] illegal character: '`'",
    "test_result": "ERROR"
}