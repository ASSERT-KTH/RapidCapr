{
    "patch": "            DateTimeFormatter fmt = DateTimeFormat.forPattern(\"YYYYMMDD\").withChronology(iChronology);\n            LocalDateTime localDateTime = LocalDateTime.parse(\"20000101\", fmt);\n            Partial newPartial = newPartial.withChronology(localDateTime.getChronology());\n            newPartial = new Partial(newTypes, newValues, newPartial.getChronology());",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..3c33f9f9 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,10 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            DateTimeFormatter fmt = DateTimeFormat.forPattern(\"YYYYMMDD\").withChronology(iChronology);\n+            LocalDateTime localDateTime = LocalDateTime.parse(\"20000101\", fmt);\n+            Partial newPartial = newPartial.withChronology(localDateTime.getChronology());\n+            newPartial = new Partial(newTypes, newValues, newPartial.getChronology());\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}