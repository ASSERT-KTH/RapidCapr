{
    "patch": "protected BasePeriod(long duration) {\n    long _duration = duration;\n    // Calculate the number of years\n    if (_duration >= JodaConstants.MILLIS_PER_YEAR) {\n        years = (int) (_duration / JodaConstants.MILLIS_PER_YEAR);\n        _duration = _duration - (years * JodaConstants.MILLIS_PER_YEAR);\n    }\n\n    // Calculate the number of months\n    if (_duration >= JodaConstants.MILLIS_PER_MONTH) {\n        months = (int) (_duration / JodaConstants.MILLIS_PER_MONTH);\n        _duration = _duration - (months * JodaConstants.MILLIS_PER_MONTH);\n    }\n\n    // Calculate the number of weeks\n    if (_duration >= JodaConstants.MILLIS_PER_WEEK) {\n        weeks = (int) (_duration / JodaConstants.MILLIS_PER_WEEK);\n        _duration = _duration - (weeks * JodaConstants.MILLIS_PER_WEEK);\n    }\n\n    // Calculate the number of days\n    if (_duration >= JodaConstants.MILLIS_PER_DAY) {\n        days = (int) (_duration / JodaConstants.MILLIS_PER_DAY);\n        _duration = _duration - (days * JodaConstants.MILLIS_PER_DAY);\n    }\n\n    // Calculate the number of hours\n    if (_duration >= JodaConstants.MILLIS_PER_HOUR) {\n        hours = (int) (_duration / JodaConstants.MILLIS_PER_HOUR);\n        _duration = _duration - (hours * JodaConstants.MILLIS_PER_HOUR);\n    }\n\n    // Calculate the number of minutes\n    if (_duration >= JodaConstants.MILLIS_PER_MINUTE) {\n        minutes = (int) (_duration / JodaConstants.MILLIS_PER_MINUTE);\n        _duration = _duration - (minutes * JodaConstants.MILLIS_PER_MINUTE);\n    }\n\n    // Calculate the number of seconds\n    if (_duration >= JodaConstants.MILLIS_PER_SECOND) {\n        seconds = (int) (_duration / JodaConstants.MILLIS_PER_SECOND);\n        _duration = _duration - (seconds * JodaConstants.MILLIS_PER_SECOND);\n    }\n\n    // Set the remaining duration as milliseconds\n    millis = (int) _duration;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..e9d82058 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,11 +218,54 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    long _duration = duration;\n+    // Calculate the number of years\n+    if (_duration >= JodaConstants.MILLIS_PER_YEAR) {\n+        years = (int) (_duration / JodaConstants.MILLIS_PER_YEAR);\n+        _duration = _duration - (years * JodaConstants.MILLIS_PER_YEAR);\n     }\n \n+    // Calculate the number of months\n+    if (_duration >= JodaConstants.MILLIS_PER_MONTH) {\n+        months = (int) (_duration / JodaConstants.MILLIS_PER_MONTH);\n+        _duration = _duration - (months * JodaConstants.MILLIS_PER_MONTH);\n+    }\n+\n+    // Calculate the number of weeks\n+    if (_duration >= JodaConstants.MILLIS_PER_WEEK) {\n+        weeks = (int) (_duration / JodaConstants.MILLIS_PER_WEEK);\n+        _duration = _duration - (weeks * JodaConstants.MILLIS_PER_WEEK);\n+    }\n+\n+    // Calculate the number of days\n+    if (_duration >= JodaConstants.MILLIS_PER_DAY) {\n+        days = (int) (_duration / JodaConstants.MILLIS_PER_DAY);\n+        _duration = _duration - (days * JodaConstants.MILLIS_PER_DAY);\n+    }\n+\n+    // Calculate the number of hours\n+    if (_duration >= JodaConstants.MILLIS_PER_HOUR) {\n+        hours = (int) (_duration / JodaConstants.MILLIS_PER_HOUR);\n+        _duration = _duration - (hours * JodaConstants.MILLIS_PER_HOUR);\n+    }\n+\n+    // Calculate the number of minutes\n+    if (_duration >= JodaConstants.MILLIS_PER_MINUTE) {\n+        minutes = (int) (_duration / JodaConstants.MILLIS_PER_MINUTE);\n+        _duration = _duration - (minutes * JodaConstants.MILLIS_PER_MINUTE);\n+    }\n+\n+    // Calculate the number of seconds\n+    if (_duration >= JodaConstants.MILLIS_PER_SECOND) {\n+        seconds = (int) (_duration / JodaConstants.MILLIS_PER_SECOND);\n+        _duration = _duration - (seconds * JodaConstants.MILLIS_PER_SECOND);\n+    }\n+\n+    // Set the remaining duration as milliseconds\n+    millis = (int) _duration;\n+}\n+\n     /**\n      * Creates a period from the given millisecond duration, which is only really\n      * suitable for durations less than one day.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}