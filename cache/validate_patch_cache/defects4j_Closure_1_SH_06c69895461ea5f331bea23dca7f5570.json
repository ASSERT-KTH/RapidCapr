{
    "patch": "      // check for rest param (that may be required)\n      if (lastArg != null && lastArg.isRest()) {\n        Node secondLastArg = lastArg.getPrevious();\n        if (secondLastArg != null && !referenced.contains(fnScope.getVar(secondLastArg.getString()))) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..76627e5f 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,10 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // check for rest param (that may be required)\n+      if (lastArg != null && lastArg.isRest()) {\n+        Node secondLastArg = lastArg.getPrevious();\n+        if (secondLastArg != null && !referenced.contains(fnScope.getVar(secondLastArg.getString()))) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}