{
    "patch": "if (cfa != null) {\n  for (Node finallyNode : cfa.finallyMap.get(parent)) {\n    Edge.Builder builder = Edge.newBuilder().setSource(fromNode);\n    builder.setDestination(finallyNode);\n    builder.setBranch(cfa.unwindTargets.get(finallyNode));\n    cfa.addEdge(builder.build());\n\n    if (finallyNode.isBlock()) {\n      Node followNode = finallyNode.getLastChild();\n      if (followNode == null) {\n        followNode = computeFollowNode(finallyNode, finallyNode, cfa);\n      }\n      builder.clear();\n      builder.setSource(finallyNode);\n      builder.setDestination(followNode);\n      builder.setBranch(Branch.UNCOND);\n      cfa.addEdge(builder.build());\n    } else {\n      builder.clear();\n      builder.setSource(finallyNode);\n      builder.setDestination(computeFollowNode(finallyNode, finallyNode.getNext(), cfa));\n      builder.setBranch(Branch.UNCOND);\n      cfa.addEdge(builder.build());\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..dcd96769 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,32 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (cfa != null) {\n+  for (Node finallyNode : cfa.finallyMap.get(parent)) {\n+    Edge.Builder builder = Edge.newBuilder().setSource(fromNode);\n+    builder.setDestination(finallyNode);\n+    builder.setBranch(cfa.unwindTargets.get(finallyNode));\n+    cfa.addEdge(builder.build());\n+\n+    if (finallyNode.isBlock()) {\n+      Node followNode = finallyNode.getLastChild();\n+      if (followNode == null) {\n+        followNode = computeFollowNode(finallyNode, finallyNode, cfa);\n+      }\n+      builder.clear();\n+      builder.setSource(finallyNode);\n+      builder.setDestination(followNode);\n+      builder.setBranch(Branch.UNCOND);\n+      cfa.addEdge(builder.build());\n+    } else {\n+      builder.clear();\n+      builder.setSource(finallyNode);\n+      builder.setDestination(computeFollowNode(finallyNode, finallyNode.getNext(), cfa));\n+      builder.setBranch(Branch.UNCOND);\n+      cfa.addEdge(builder.build());\n+    }\n+  }\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "error: variable finallyNode is already defined in method computeFollowNode(Node,Node,ControlFlowAnalysis)",
    "test_result": "ERROR"
}