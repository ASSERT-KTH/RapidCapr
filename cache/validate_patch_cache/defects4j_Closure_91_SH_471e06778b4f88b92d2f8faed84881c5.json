{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (isLValueTarget(n)) {\n        if (NodeUtil.isGet(parent) && NodeUtil.isGet(parent.getFirstChild())) {\n          Node getpropFirstChild = parent.getFirstChild();\n          return getpropFirstChild.isName() || getpropFirstChild.isThis() || getpropFirstChild.isSuper();\n        } else {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..cca16a0b 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,15 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (isLValueTarget(n)) {\n+        if (NodeUtil.isGet(parent) && NodeUtil.isGet(parent.getFirstChild())) {\n+          Node getpropFirstChild = parent.getFirstChild();\n+          return getpropFirstChild.isName() || getpropFirstChild.isThis() || getpropFirstChild.isSuper();\n+        } else {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}