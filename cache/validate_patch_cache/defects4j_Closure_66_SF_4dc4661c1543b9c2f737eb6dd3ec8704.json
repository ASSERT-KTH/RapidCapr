{
    "patch": "public double getTypedPercent(String input) {\n    double count = 0.0;\n    for(int i = 0; i < input.length()-1; i++) {\n        if(input.charAt(i) == '\\'' && Character.isLetter(input.charAt(i+1))){\n            count++;\n        }\n    }\n    return (count/input.length())*100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..1847e7e7 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String input) {\n+    double count = 0.0;\n+    for(int i = 0; i < input.length()-1; i++) {\n+        if(input.charAt(i) == '\\'' && Character.isLetter(input.charAt(i+1))){\n+            count++;\n+        }\n+    }\n+    return (count/input.length())*100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}