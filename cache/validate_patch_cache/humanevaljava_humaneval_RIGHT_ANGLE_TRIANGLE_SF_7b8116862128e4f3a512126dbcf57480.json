{
    "patch": "public static boolean right_angle_triangle(int a, int b, int c) {\n    if (a <= 0 || b <= 0 || c <= 0) { // Check if any side is less than or equal to zero\n        return false;\n    }\n    // Sort the sides in descending order\n    int[] sides = {a, b, c};\n    Arrays.sort(sides);\n    a = sides[2];\n    b = sides[1];\n    c = sides[0];\n    \n    // Check if sum of any two sides is less than or equal to the third side\n    if (a + b <= c) {\n        return false;\n    }\n    // Check if the sum of the squared values of the smaller sides equals the square of the larger side\n    return a * a == b * b + c * c;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..c9824e6 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -9,7 +9,22 @@ package humaneval.buggy;\n // right_angle_triangle(1, 2, 3) == False\n \n public class RIGHT_ANGLE_TRIANGLE {\n-    public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+public static boolean right_angle_triangle(int a, int b, int c) {\n+    if (a <= 0 || b <= 0 || c <= 0) { // Check if any side is less than or equal to zero\n+        return false;\n     }\n+    // Sort the sides in descending order\n+    int[] sides = {a, b, c};\n+    Arrays.sort(sides);\n+    a = sides[2];\n+    b = sides[1];\n+    c = sides[0];\n+    \n+    // Check if sum of any two sides is less than or equal to the third side\n+    if (a + b <= c) {\n+        return false;\n+    }\n+    // Check if the sum of the squared values of the smaller sides equals the square of the larger side\n+    return a * a == b * b + c * c;\n+}\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[18,5] cannot find symbol",
    "test_result": "ERROR"
}