{
    "patch": "if (cfa != null && finallyNode != null) {\n  Node followNode = computeFollowNode(finallyNode, finallyNode.getParent(), cfa);\n  if (followNode != null) {\n    cfa.createEdge(finallyNode, Branch.UNCOND, followNode);\n    return followNode;\n  }\n}\nreturn computeFollowNode(fromNode, parent, cfa);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..6ab1318e 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,14 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (cfa != null && finallyNode != null) {\n+  Node followNode = computeFollowNode(finallyNode, finallyNode.getParent(), cfa);\n+  if (followNode != null) {\n+    cfa.createEdge(finallyNode, Branch.UNCOND, followNode);\n+    return followNode;\n+  }\n+}\n+return computeFollowNode(fromNode, parent, cfa);\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "junit.framework.AssertionFailedError: No cross edges found",
    "test_result": "FAIL"
}