{
    "patch": "public final boolean isEmptyType() {\n    /*\n     * Type is empty if we have no useful information about it.\n     * That is, if it is a no-type, no-object-type, no-resolved-type,\n     * void-type, or null-type.\n     */\n    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isNullType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..c46b630e 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,14 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    /*\n+     * Type is empty if we have no useful information about it.\n+     * That is, if it is a no-type, no-object-type, no-resolved-type,\n+     * void-type, or null-type.\n+     */\n+    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isNullType();\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}