{
    "patch": "      if (!NodeUtil.isGet(first)) {\n        n.putBooleanProp(Node.FREE_CALL, true);\n      } else {\n        Node functionParentNode = first.getFirstChild();\n        if (functionParentNode != null && functionParentNode.isFunction() &&\n            functionParentNode.hasOneChild() && !functionParentNode.getFirstChild().isThis()) {\n          n.putBooleanProp(Node.FREE_CALL, true);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..08616364 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,15 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      if (!NodeUtil.isGet(first)) {\n+        n.putBooleanProp(Node.FREE_CALL, true);\n+      } else {\n+        Node functionParentNode = first.getFirstChild();\n+        if (functionParentNode != null && functionParentNode.isFunction() &&\n+            functionParentNode.hasOneChild() && !functionParentNode.getFirstChild().isThis()) {\n+          n.putBooleanProp(Node.FREE_CALL, true);\n+        }\n+      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}