{
    "patch": "Node grandparent = parent.getParent();\nif (grandparent != null) { \n  if (grandparent.getType() == Token.EXPR_RESULT ||\n      (grandparent.getType() == Token.VAR &&\n      grandparent.getParent() != null &&\n      grandparent.getParent().getType() == Token.SCRIPT)) {\n    return false;\n  }\n  if (NodeUtil.isCallTo(grandparent, \"bind\") ||\n      NodeUtil.isCallTo(grandparent, \"apply\") ||\n      NodeUtil.isCallTo(grandparent, \"call\")) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..6f4000cc 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,20 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+Node grandparent = parent.getParent();\n+if (grandparent != null) { \n+  if (grandparent.getType() == Token.EXPR_RESULT ||\n+      (grandparent.getType() == Token.VAR &&\n+      grandparent.getParent() != null &&\n+      grandparent.getParent().getType() == Token.SCRIPT)) {\n+    return false;\n+  }\n+  if (NodeUtil.isCallTo(grandparent, \"bind\") ||\n+      NodeUtil.isCallTo(grandparent, \"apply\") ||\n+      NodeUtil.isCallTo(grandparent, \"call\")) {\n+    return false;\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}