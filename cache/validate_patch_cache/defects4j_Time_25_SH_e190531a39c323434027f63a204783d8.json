{
    "patch": "                if (offsetLocal <= offsetAdjusted) {\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    }\n                } else {\n                    long nextLocal = previousTransition(instantAdjusted);\n                    long nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return (getOffset(nextAdjusted) != offsetAdjusted ? offsetLocal : offsetAdjusted);\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..795a8883 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if (offsetLocal <= offsetAdjusted) {\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                } else {\n+                    long nextLocal = previousTransition(instantAdjusted);\n+                    long nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return (getOffset(nextAdjusted) != offsetAdjusted ? offsetLocal : offsetAdjusted);\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-31T23:30:00.000+02:00 expected:<2007-0[4-01T01:30:00.000+03]:00> but was:<2007-0[3-31T23:30:00.000+02]:00>",
    "test_result": "FAIL"
}