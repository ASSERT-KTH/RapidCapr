{
    "patch": "            int errorIndex = e.getErrorIndex();\n            int parsedChars = savedFields[errorIndex].iSavedFieldsParsed.length();\n>>> [ INFILL ] <<<\n            e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \" +\n                    savedFields[errorIndex].iField.getType() +\n                    \" (\" + savedFields[errorIndex].iField.getName() + \") has invalid value \" +\n                    savedFields[errorIndex].iSavedFieldsParsed.substring(0, parsedChars));",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..eb61f041 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            int errorIndex = e.getErrorIndex();\n+            int parsedChars = savedFields[errorIndex].iSavedFieldsParsed.length();\n+>>> [ INFILL ] <<<\n+            e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \" +\n+                    savedFields[errorIndex].iField.getType() +\n+                    \" (\" + savedFields[errorIndex].iField.getName() + \") has invalid value \" +\n+                    savedFields[errorIndex].iSavedFieldsParsed.substring(0, parsedChars));\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}