{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    double gln = gammaln(a);\n    if (x < 0.0 || a <= 0.0) {\n        throw new IllegalArgumentException(\"Invalid input arguments in regularizedGammaP\");\n    } else if (x == 0.0) {\n        return 0.0;\n    } else if (x >= a + 1.0) {\n        return 1.0 - regularizedGammaQ(a, x);\n    } else {\n        double ap = a;\n        double del = 1.0 / a;\n        double sum = del;\n        for (int n = 1; n <= 100; n++) {\n            ++ap;\n            del *= x / ap;\n            sum += del;\n            if (Math.abs(del) < Math.abs(sum) * 10e-15) {\n                return Math.exp(-x + a * Math.log(x) - gln) * sum;\n            }\n        }\n        throw new IllegalArgumentException(\"Ran out of iterations in regularizedGammaP\");\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..c918ae5b5 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    double gln = gammaln(a);\n+    if (x < 0.0 || a <= 0.0) {\n+        throw new IllegalArgumentException(\"Invalid input arguments in regularizedGammaP\");\n+    } else if (x == 0.0) {\n+        return 0.0;\n+    } else if (x >= a + 1.0) {\n+        return 1.0 - regularizedGammaQ(a, x);\n+    } else {\n+        double ap = a;\n+        double del = 1.0 / a;\n+        double sum = del;\n+        for (int n = 1; n <= 100; n++) {\n+            ++ap;\n+            del *= x / ap;\n+            sum += del;\n+            if (Math.abs(del) < Math.abs(sum) * 10e-15) {\n+                return Math.exp(-x + a * Math.log(x) - gln) * sum;\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Ran out of iterations in regularizedGammaP\");\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}