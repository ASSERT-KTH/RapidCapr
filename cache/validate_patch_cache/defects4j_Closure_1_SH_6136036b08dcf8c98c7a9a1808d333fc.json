{
    "patch": "      Node lastArg = null;\n      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n        Var var = fnScope.getVar(arg.getString());\n        if (referenced.contains(var)) {\n          lastArg = arg;\n        } else {\n          arg.detach();\n        }\n      }\n      // Disconnect any JSDoc from removed parameters.\n      if (lastArg != null && lastArg.getNext() != null) {\n        lastArg.getNext().removeChildren();\n      }\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..a4cee18f 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,20 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      Node lastArg = null;\n+      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n+        Var var = fnScope.getVar(arg.getString());\n+        if (referenced.contains(var)) {\n+          lastArg = arg;\n+        } else {\n+          arg.detach();\n+        }\n+      }\n+      // Disconnect any JSDoc from removed parameters.\n+      if (lastArg != null && lastArg.getNext() != null) {\n+        lastArg.getNext().removeChildren();\n+      }\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}