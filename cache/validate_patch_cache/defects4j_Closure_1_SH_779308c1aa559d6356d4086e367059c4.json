{
    "patch": "Node function = fnScope.getRootNode();\nPreconditions.checkState(function.isFunction());\n\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n  // The parameters object literal setters can not be removed.\n  return;\n}\n\nNode argList = getFunctionArgList(function);\n\nboolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n\nif (!modifyCallers) {\n  Node lastArg = argList.getLastChild();\n  while (lastArg != null && !referenced.contains(fnScope.getVar(lastArg.getString()))) {\n      argList.removeChild(lastArg);\n      compiler.reportCodeChange();\n      lastArg = argList.getLastChild();\n  }\n} else {\n  callSiteOptimizer.optimize(fnScope, referenced);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..9db9af84 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,29 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+Preconditions.checkState(function.isFunction());\n+\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+  // The parameters object literal setters can not be removed.\n+  return;\n+}\n+\n+Node argList = getFunctionArgList(function);\n+\n+boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+\n+if (!modifyCallers) {\n+  Node lastArg = argList.getLastChild();\n+  while (lastArg != null && !referenced.contains(fnScope.getVar(lastArg.getString()))) {\n+      argList.removeChild(lastArg);\n+      compiler.reportCodeChange();\n+      lastArg = argList.getLastChild();\n+  }\n+} else {\n+  callSiteOptimizer.optimize(fnScope, referenced);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}