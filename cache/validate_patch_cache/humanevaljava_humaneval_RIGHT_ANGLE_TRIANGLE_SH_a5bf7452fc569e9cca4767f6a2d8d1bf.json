{
    "patch": "if (a <= 0 || b <= 0 || c <= 0) {\n    return false;\n} else if (a + b <= c || b + c <= a || c + a <= b) {\n    return false;\n} else {\n    List<Integer> sides = new ArrayList<>(Arrays.asList(a, b, c));\n    Collections.sort(sides);\n    double hypotenuse = Math.pow(sides.get(2), 2);\n    double otherSides = Math.pow(sides.get(0), 2) + Math.pow(sides.get(1), 2);\n    if (hypotenuse == otherSides) {\n        return true;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..fc944c4 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,19 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+if (a <= 0 || b <= 0 || c <= 0) {\n+    return false;\n+} else if (a + b <= c || b + c <= a || c + a <= b) {\n+    return false;\n+} else {\n+    List<Integer> sides = new ArrayList<>(Arrays.asList(a, b, c));\n+    Collections.sort(sides);\n+    double hypotenuse = Math.pow(sides.get(2), 2);\n+    double otherSides = Math.pow(sides.get(0), 2) + Math.pow(sides.get(1), 2);\n+    if (hypotenuse == otherSides) {\n+        return true;\n+    }\n+    return false;\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[18,5] cannot find symbol",
    "test_result": "ERROR"
}