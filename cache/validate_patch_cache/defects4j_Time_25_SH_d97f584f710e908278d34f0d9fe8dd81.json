{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n\n    // if there is a gap and we return offsetAdjusted, the time is pushed\n    // back before the transition, whereas it should be on or after the transition\n    // find the next transition and make sure the time is after it\n    long nextTransition = nextTransition(instantAdjusted);\n    if (nextTransition == instantAdjusted) {\n        // there is no transition point between instantLocal and nextLocal\n        // the instantLocal is invalid\n        return offsetLocal;\n    }\n    long nextLocal = getOffset(nextTransition);\n    if (nextLocal == offsetLocal) {\n        // the next transition point doesn't change the offset\n        return offsetLocal;\n    }\n    if (nextLocal < offsetLocal) {\n        return nextLocal;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1852c939 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,26 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+\n+    // if there is a gap and we return offsetAdjusted, the time is pushed\n+    // back before the transition, whereas it should be on or after the transition\n+    // find the next transition and make sure the time is after it\n+    long nextTransition = nextTransition(instantAdjusted);\n+    if (nextTransition == instantAdjusted) {\n+        // there is no transition point between instantLocal and nextLocal\n+        // the instantLocal is invalid\n+        return offsetLocal;\n+    }\n+    long nextLocal = getOffset(nextTransition);\n+    if (nextLocal == offsetLocal) {\n+        // the next transition point doesn't change the offset\n+        return offsetLocal;\n+    }\n+    if (nextLocal < offsetLocal) {\n+        return nextLocal;\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}