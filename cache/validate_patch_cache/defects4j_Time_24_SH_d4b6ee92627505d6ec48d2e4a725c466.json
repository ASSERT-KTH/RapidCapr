{
    "patch": "            boolean isRethrow = true;\n            // always catch and handle these exceptions\n            if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n                int newYear = iYearOfEra + 1;\n                if (newYear <= 0) {\n                    newYear = 1 - newYear;\n                }\n                saveField(DateTimeFieldType.year(), newYear);\n                isRethrow = false;\n            } else if (e.getDateTimeFieldType() == DateTimeFieldType.weekyear()) {\n                int newYear = iWeekyear + 1;\n                if (newYear <= 0) {\n                    newYear = 1 - newYear;\n                }\n                saveField(DateTimeFieldType.weekyear(), newYear);\n                isRethrow = false;\n            }\n            if (isRethrow) {\n                throw e;\n            } else {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..84758028 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            boolean isRethrow = true;\n+            // always catch and handle these exceptions\n+            if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n+                int newYear = iYearOfEra + 1;\n+                if (newYear <= 0) {\n+                    newYear = 1 - newYear;\n+                }\n+                saveField(DateTimeFieldType.year(), newYear);\n+                isRethrow = false;\n+            } else if (e.getDateTimeFieldType() == DateTimeFieldType.weekyear()) {\n+                int newYear = iWeekyear + 1;\n+                if (newYear <= 0) {\n+                    newYear = 1 - newYear;\n+                }\n+                saveField(DateTimeFieldType.weekyear(), newYear);\n+                isRethrow = false;\n+            }\n+            if (isRethrow) {\n+                throw e;\n+            } else {\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}