{
    "patch": "public static List<Integer> strange_sort_list(List<Integer> lst) {\n    List<Integer> result = new ArrayList<Integer>();\n\n    Collections.sort(lst);\n    int left = 0, right = lst.size() - 1;\n    boolean smallest = true;\n    while (left <= right) {\n        if (smallest) {\n            result.add(lst.get(left));\n            left++;\n        } else {\n            result.add(lst.get(right));\n            right--;\n        }\n        smallest = !smallest;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\nindex 094f5de..80678d4 100644\n--- a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n+++ b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n@@ -24,6 +24,24 @@ public class STRANGE_SORT_LIST {\n             } else {\n                 result.add(Collections.max(lst));\n             }\n+public static List<Integer> strange_sort_list(List<Integer> lst) {\n+    List<Integer> result = new ArrayList<Integer>();\n+\n+    Collections.sort(lst);\n+    int left = 0, right = lst.size() - 1;\n+    boolean smallest = true;\n+    while (left <= right) {\n+        if (smallest) {\n+            result.add(lst.get(left));\n+            left++;\n+        } else {\n+            result.add(lst.get(right));\n+            right--;\n+        }\n+        smallest = !smallest;\n+    }\n+    return result;\n+}\n         }\n         return result;\n     }",
    "result_reason": " /tmp/humaneval-STRANGE_SORT_LIST/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java:[27,1] illegal start of expression",
    "test_result": "ERROR"
}