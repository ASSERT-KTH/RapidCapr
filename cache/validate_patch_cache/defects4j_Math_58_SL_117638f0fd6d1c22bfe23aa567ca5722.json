{
    "patch": "    Observation[] observations = getObservations();\n    for (int i = 0; i < observations.length; i++) {\n        Observation obs = observations[i];\n        if (obs.getValue() < 0) {\n            observations[i] = new Observation(obs.getTime(), Math.abs(obs.getValue()));\n        }\n    }\n    final double[] guess = (new ParameterGuesser(observations)).guess();\n    return fit(new Gaussian.Parametric(), guess);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..acdf78697 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,15 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+    Observation[] observations = getObservations();\n+    for (int i = 0; i < observations.length; i++) {\n+        Observation obs = observations[i];\n+        if (obs.getValue() < 0) {\n+            observations[i] = new Observation(obs.getTime(), Math.abs(obs.getValue()));\n+        }\n+    }\n+    final double[] guess = (new ParameterGuesser(observations)).guess();\n+    return fit(new Gaussian.Parametric(), guess);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}