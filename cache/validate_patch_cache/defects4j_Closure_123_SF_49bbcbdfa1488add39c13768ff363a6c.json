{
    "patch": "// Assuming the original code is something like this:\npublic void printInOperatorInForLoop(int c, boolean d){\n    String expected = \"for(a=c?0:[(0 in d)];;)foo()\";\n    String actual = \"for(a=c?0:[0 in d];;)foo()\";\n    assertEquals(expected, actual);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..c2ff38ce 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,12 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+// Assuming the original code is something like this:\n+public void printInOperatorInForLoop(int c, boolean d){\n+    String expected = \"for(a=c?0:[(0 in d)];;)foo()\";\n+    String actual = \"for(a=c?0:[0 in d];;)foo()\";\n+    assertEquals(expected, actual);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}