{
    "patch": "                    if (x == x1) {\n                        // Line search has failed to find a better solution.\n                        if (FastMath.abs(f0) < FastMath.abs(f1)) {\n                            // Attempt to continue solution on the left.\n                            x1 = x0;\n                            f1 = f0;\n                        }\n                        x0 = x1 - FastMath.max(rtol * FastMath.abs(x1), atol);\n                        f0 = computeObjectiveValue(x0);\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\nindex e47d98204..d53829d3f 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n@@ -185,7 +185,13 @@ public abstract class BaseSecantSolver\n                 case REGULA_FALSI:\n                     // Nothing.\n                     if (x == x1) {\n-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));\n+                        // Line search has failed to find a better solution.\n+                        if (FastMath.abs(f0) < FastMath.abs(f1)) {\n+                            // Attempt to continue solution on the left.\n+                            x1 = x0;\n+                            f1 = f0;\n+                        }\n+                        x0 = x1 - FastMath.max(rtol * FastMath.abs(x1), atol);\n                         f0 = computeObjectiveValue(x0);\n                     }\n                     break;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}