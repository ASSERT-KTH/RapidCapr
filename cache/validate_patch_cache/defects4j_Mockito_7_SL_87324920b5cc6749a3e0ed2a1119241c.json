{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument != null) {\n    registerTypeVariablesOn(actualTypeArgument);\n} else {\n    Type[] bounds = typeVariable.getBounds();\n    // Handle the case where there is only 1 bound\n    if (bounds.length == 1) {\n        registerTypeVariablesOn(bounds[0]);\n    } else {\n        for (Type type : bounds) {\n            if (!(type instanceof TypeVariable)) {\n                registerTypeVariablesOn(type);\n                return;\n            }\n        }\n        // If all bounds are TypeVariables, use the first one\n        registerTypeVariablesOn(bounds[0]);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..ffc8b9363 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,30 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument != null) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+} else {\n+    Type[] bounds = typeVariable.getBounds();\n+    // Handle the case where there is only 1 bound\n+    if (bounds.length == 1) {\n+        registerTypeVariablesOn(bounds[0]);\n+    } else {\n+        for (Type type : bounds) {\n+            if (!(type instanceof TypeVariable)) {\n+                registerTypeVariablesOn(type);\n+                return;\n+            }\n+        }\n+        // If all bounds are TypeVariables, use the first one\n+        registerTypeVariablesOn(bounds[0]);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}