{
    "patch": "        Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n        if (actualTypeArgument != null) {\n            if (actualTypeArgument instanceof TypeVariable) {\n                registerTypeVariablesOn(typeVariable);\n            } else {\n                registerTypeVariablesOn(actualTypeArgument);\n            }\n        } else {",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b8dd2c25f 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+        Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+        if (actualTypeArgument != null) {\n+            if (actualTypeArgument instanceof TypeVariable) {\n+                registerTypeVariablesOn(typeVariable);\n+            } else {\n+                registerTypeVariablesOn(actualTypeArgument);\n+            }\n+        } else {\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}