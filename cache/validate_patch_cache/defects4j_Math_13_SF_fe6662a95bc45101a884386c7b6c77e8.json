{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        // Perform Cholesky decomposition on the input matrix\n        CholeskyDecomposition dec = new CholeskyDecomposition(m);\n\n        // Get the lower-triangular Cholesky matrix\n        RealMatrix l = dec.getL();\n\n        // Construct the square root of the matrix using the Cholesky matrix\n        RealMatrix lInv = new LUDecomposition(l).getSolver().getInverse();\n\n        return l.multiply(lInv);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..4b40b2e87 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,15 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        // Perform Cholesky decomposition on the input matrix\n+        CholeskyDecomposition dec = new CholeskyDecomposition(m);\n+\n+        // Get the lower-triangular Cholesky matrix\n+        RealMatrix l = dec.getL();\n+\n+        // Construct the square root of the matrix using the Cholesky matrix\n+        RealMatrix lInv = new LUDecomposition(l).getSolver().getInverse();\n+\n+        return l.multiply(lInv);\n     }\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}