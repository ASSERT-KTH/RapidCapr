{
    "patch": "public static String unescapeJava(String str) {\n    StringBuilder out = new StringBuilder();\n    int sz = str.length();\n    for (int i = 0; i < sz; i++) {\n        char ch = str.charAt(i);\n        if (ch == '\\\\') {\n            i++;\n            if (i >= sz) {\n                throw new IllegalArgumentException(\"Invalid unicode character\");\n            }\n            ch = str.charAt(i);\n            if (ch == 'u') {\n                int value = 0;\n                for (int j = 0; j < 4; j++) {\n                    i++;\n                    if (i >= sz) {\n                        throw new IllegalArgumentException(\"Invalid unicode character\");\n                    }\n                    ch = str.charAt(i);\n                    switch (ch) {\n                        case '0':\n                        case '1':\n                        case '2':\n                        case '3':\n                        case '4':\n                        case '5':\n                        case '6':\n                        case '7':\n                        case '8':\n                        case '9':\n                            value = (value << 4) + ch - '0';\n                            break;\n                        case 'a':\n                        case 'b':\n                        case 'c':\n                        case 'd':\n                        case 'e':\n                        case 'f':\n                            value = (value << 4) + 10 + ch - 'a';\n                            break;\n                        case 'A':\n                        case 'B':\n                        case 'C':\n                        case 'D':\n                        case 'E':\n                        case 'F':\n                            value = (value << 4) + 10 + ch - 'A';\n                            break;\n                        default:\n                            throw new IllegalArgumentException(\"Invalid unicode character\");\n                    }\n                }\n                out.append((char) value);\n            } else {\n                if (ch == 't') {\n                    out.append('\\t');\n                } else if (ch == 'r') {\n                    out.append('\\r');\n                } else if (ch == 'n') {\n                    out.append('\\n');\n                } else if (ch == 'f') {\n                    out.append('\\f');\n                } else if (ch == 'b') {\n                    out.append('\\b');\n                } else if (ch == '\"' || ch == '\\'' || ch == '\\\\') {\n                    out.append(ch);\n                } else {\n                    throw new IllegalArgumentException(\"Invalid escape character\");\n                }\n            }\n        } else {\n            out.append(ch);\n        }\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..b783cf5e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,82 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescapeJava(String str) {\n+    StringBuilder out = new StringBuilder();\n+    int sz = str.length();\n+    for (int i = 0; i < sz; i++) {\n+        char ch = str.charAt(i);\n+        if (ch == '\\\\') {\n+            i++;\n+            if (i >= sz) {\n+                throw new IllegalArgumentException(\"Invalid unicode character\");\n+            }\n+            ch = str.charAt(i);\n+            if (ch == 'u') {\n+                int value = 0;\n+                for (int j = 0; j < 4; j++) {\n+                    i++;\n+                    if (i >= sz) {\n+                        throw new IllegalArgumentException(\"Invalid unicode character\");\n+                    }\n+                    ch = str.charAt(i);\n+                    switch (ch) {\n+                        case '0':\n+                        case '1':\n+                        case '2':\n+                        case '3':\n+                        case '4':\n+                        case '5':\n+                        case '6':\n+                        case '7':\n+                        case '8':\n+                        case '9':\n+                            value = (value << 4) + ch - '0';\n+                            break;\n+                        case 'a':\n+                        case 'b':\n+                        case 'c':\n+                        case 'd':\n+                        case 'e':\n+                        case 'f':\n+                            value = (value << 4) + 10 + ch - 'a';\n+                            break;\n+                        case 'A':\n+                        case 'B':\n+                        case 'C':\n+                        case 'D':\n+                        case 'E':\n+                        case 'F':\n+                            value = (value << 4) + 10 + ch - 'A';\n+                            break;\n+                        default:\n+                            throw new IllegalArgumentException(\"Invalid unicode character\");\n+                    }\n+                }\n+                out.append((char) value);\n+            } else {\n+                if (ch == 't') {\n+                    out.append('\\t');\n+                } else if (ch == 'r') {\n+                    out.append('\\r');\n+                } else if (ch == 'n') {\n+                    out.append('\\n');\n+                } else if (ch == 'f') {\n+                    out.append('\\f');\n+                } else if (ch == 'b') {\n+                    out.append('\\b');\n+                } else if (ch == '\"' || ch == '\\'' || ch == '\\\\') {\n+                    out.append(ch);\n+                } else {\n+                    throw new IllegalArgumentException(\"Invalid escape character\");\n+                }\n+            }\n+        } else {\n+            out.append(ch);\n+        }\n+    }\n+    return out.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}