{
    "patch": "if (len >= 7 && str.charAt(5) == '_') {\n    int index = str.indexOf('_', 6);\n    if (index == -1) {\n        if (len == 7) {\n            return new Locale(str.substring(0, 2), \"\", str.substring(6));\n        } else if (len == 8) {\n            if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7))) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else {\n               throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len >= 9) {\n            if (str.charAt(6) == '_' || str.charAt(7) == '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    } else {\n        int index2 = str.indexOf('_', index + 1);\n        if (index2 == -1 || len <= index2 + 1) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else {\n            String lang = str.substring(0, 2);\n            String country = \"\";\n            String variant = \"\";\n            langloop:\n            for (int i = 3; i < index; i++) {\n                char c = str.charAt(i);\n                if (c == '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                } else if (c == '-') {\n                    lang = str.substring(0, i);\n                    if (lang.length() != 2) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    break langloop;\n                }\n            }\n            countryloop:\n            for (int i = index + 1; i < index2; i++) {\n                char c = str.charAt(i);\n                if (c == '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                } else if (c == '-') {\n                    country = str.substring(index + 1, i);\n                    if (country.length() != 2) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    break countryloop;\n                }\n            }\n            variantloop:\n            for (int i = index2 + 1; i < len; i++) {\n                char c = str.charAt(i);\n                if (c == '_' || c == '-') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n            variant = str.substring(index2 + 1);\n            return new Locale(lang, country, variant);\n        }\n    }\n} else {\n    return new Locale.Builder().setLanguageTag(str).build();\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..3d1a2030 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,74 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len >= 7 && str.charAt(5) == '_') {\n+    int index = str.indexOf('_', 6);\n+    if (index == -1) {\n+        if (len == 7) {\n+            return new Locale(str.substring(0, 2), \"\", str.substring(6));\n+        } else if (len == 8) {\n+            if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7))) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else {\n+               throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else if (len >= 9) {\n+            if (str.charAt(6) == '_' || str.charAt(7) == '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            }\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    } else {\n+        int index2 = str.indexOf('_', index + 1);\n+        if (index2 == -1 || len <= index2 + 1) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else {\n+            String lang = str.substring(0, 2);\n+            String country = \"\";\n+            String variant = \"\";\n+            langloop:\n+            for (int i = 3; i < index; i++) {\n+                char c = str.charAt(i);\n+                if (c == '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                } else if (c == '-') {\n+                    lang = str.substring(0, i);\n+                    if (lang.length() != 2) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    break langloop;\n+                }\n+            }\n+            countryloop:\n+            for (int i = index + 1; i < index2; i++) {\n+                char c = str.charAt(i);\n+                if (c == '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                } else if (c == '-') {\n+                    country = str.substring(index + 1, i);\n+                    if (country.length() != 2) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    break countryloop;\n+                }\n+            }\n+            variantloop:\n+            for (int i = index2 + 1; i < len; i++) {\n+                char c = str.charAt(i);\n+                if (c == '_' || c == '-') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+            }\n+            variant = str.substring(index2 + 1);\n+            return new Locale(lang, country, variant);\n+        }\n+    }\n+} else {\n+    return new Locale.Builder().setLanguageTag(str).build();\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}