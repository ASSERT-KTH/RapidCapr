{
    "patch": "public static int multiply(int a, int b) {\n   int mul = 0;\n   int sign = 1;\n   if (a < 0) {\n      a = -a;\n      sign = -sign;\n   }\n   if (b < 0) {\n      b = -b;\n      sign = -sign;\n   }\n   while (b > 0) {\n      if ((b & 1) != 0) {\n         mul = add(mul, a);\n      }\n      a = a << 1;\n      b = b >> 1;\n   }\n   return mul * sign;\n}\n\nprivate static int add(int x, int y) {\n   return x + y;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MULTIPLY.java b/src/main/java/humaneval/buggy/MULTIPLY.java\nindex 7ea427a..b7ed69a 100644\n--- a/src/main/java/humaneval/buggy/MULTIPLY.java\n+++ b/src/main/java/humaneval/buggy/MULTIPLY.java\n@@ -11,6 +11,29 @@ package humaneval.buggy;\n \n public class MULTIPLY {\n     public static int multiply(int a, int b) {\n-        return (a % 10) * (b % 10);\n+public static int multiply(int a, int b) {\n+   int mul = 0;\n+   int sign = 1;\n+   if (a < 0) {\n+      a = -a;\n+      sign = -sign;\n+   }\n+   if (b < 0) {\n+      b = -b;\n+      sign = -sign;\n+   }\n+   while (b > 0) {\n+      if ((b & 1) != 0) {\n+         mul = add(mul, a);\n+      }\n+      a = a << 1;\n+      b = b >> 1;\n+   }\n+   return mul * sign;\n+}\n+\n+private static int add(int x, int y) {\n+   return x + y;\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-MULTIPLY/src/main/java/humaneval/buggy/MULTIPLY.java:[14,1] illegal start of expression",
    "test_result": "ERROR"
}