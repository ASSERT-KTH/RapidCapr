{
    "patch": "public static Iterable<Character> filterVowels(char[] charArray) {\n    List<Character> vowelList = new ArrayList<>();\n    for (char c : charArray) {\n        if (isVowel(c)) {\n            vowelList.add(c);\n        }\n    }\n    return vowelList;\n}\n\npublic static boolean isVowel(char c) {\n    switch(c) {\n        case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n            return true;\n        default:\n            return false;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..8925f443b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,28 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static Iterable<Character> filterVowels(char[] charArray) {\n+    List<Character> vowelList = new ArrayList<>();\n+    for (char c : charArray) {\n+        if (isVowel(c)) {\n+            vowelList.add(c);\n+        }\n+    }\n+    return vowelList;\n+}\n+\n+public static boolean isVowel(char c) {\n+    switch(c) {\n+        case 'a':\n+        case 'e':\n+        case 'i':\n+        case 'o':\n+        case 'u':\n+            return true;\n+        default:\n+            return false;\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}