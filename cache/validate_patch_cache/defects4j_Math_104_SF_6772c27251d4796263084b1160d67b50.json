{
    "patch": "public static double regularizedGammaPSeries(double a, double x, double epsilon, int maxIterations) {\n    double n = 1.0;\n    double an = a;\n    double sum = an;\n\n    while (Math.abs(an/sum) > epsilon && n <= maxIterations) {\n        n+=1.0;\n        an *= x/n;\n        sum += an;\n    }\n\n    return Math.exp(-x + (a*Math.log(x)) - MathUtils.logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..d5e25c294 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,19 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaPSeries(double a, double x, double epsilon, int maxIterations) {\n+    double n = 1.0;\n+    double an = a;\n+    double sum = an;\n+\n+    while (Math.abs(an/sum) > epsilon && n <= maxIterations) {\n+        n+=1.0;\n+        an *= x/n;\n+        sum += an;\n+    }\n+\n+    return Math.exp(-x + (a*Math.log(x)) - MathUtils.logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}