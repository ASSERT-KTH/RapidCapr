{
    "patch": "public static long min_subarray_sum(ArrayList<Long> nums) {\n    long curr_sum = 0;\n    long min_sum = nums.get(0);\n    for(int i=0; i<nums.size(); i++) {\n      curr_sum += nums.get(i);\n      min_sum = Math.min(min_sum, curr_sum);\n      if(curr_sum > 0)\n         curr_sum = 0;\n    }\n    return Math.abs(min_sum);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java b/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\nindex 36e383f..67c7173 100644\n--- a/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\n+++ b/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java\n@@ -15,7 +15,17 @@ public class MIN_SUBARRAY_SUM {\n         long max_sum = 0;\n         long s = 0;\n         for(long num : nums) {\n-            s += num;\n+public static long min_subarray_sum(ArrayList<Long> nums) {\n+    long curr_sum = 0;\n+    long min_sum = nums.get(0);\n+    for(int i=0; i<nums.size(); i++) {\n+      curr_sum += nums.get(i);\n+      min_sum = Math.min(min_sum, curr_sum);\n+      if(curr_sum > 0)\n+         curr_sum = 0;\n+    }\n+    return Math.abs(min_sum);\n+}\n             if(s < 0) {\n                 s = 0;\n             }",
    "result_reason": " /tmp/humaneval-MIN_SUBARRAY_SUM/src/main/java/humaneval/buggy/MIN_SUBARRAY_SUM.java:[18,1] illegal start of expression",
    "test_result": "ERROR"
}