{
    "patch": "StringBuilder out = new StringBuilder(Math.max(str.length(), 16));\nfor (char c : str.toCharArray()) {\n    if (c == '&') {\n        int semi = str.indexOf(';', i);\n        if (semi == -1) {\n            out.append(c);\n            continue;\n        }\n        String entity = str.substring(i + 1, semi);\n        i = semi;\n        char replacement;\n        if (entity.startsWith(\"#\")) {\n            int cp;\n            if (entity.startsWith(\"#x\")) {\n                cp = Integer.parseInt(entity.substring(2), 16);\n            } else {\n                cp = Integer.parseInt(entity.substring(1));\n            }\n            replacement = (char) cp;\n        } else {\n            // Do not unescape unknown xhtml entities\n            if (xhtmlEscapeMap.containsKey(entity)) {\n                replacement = xhtmlEscapeMap.get(entity);\n            } else {\n                replacement = '=';\n            }\n        }\n        out.append(replacement);\n    } else {\n        out.append(c);\n    }\n}\nString result = out.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}