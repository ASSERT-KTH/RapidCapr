{
    "patch": "      JSDocInfo info = NodeUtil.getBestJSDocInfo(child);\n      JSType thisType = null;\n      if (info != null && info.getTypeTransformations() != null) {\n        thisType = info.getTypeTransformations().getThisType();\n      }\n      if (thisType != null) {\n        Node parent = n.getParent();\n        if (!NodeUtil.isGet(parent) && !NodeUtil.isGetElem(parent)) {\n          report(t, n, THIS_TYPE_CONSTRUCTOR_NOT_CALLABLE);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..edae8c98 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      JSDocInfo info = NodeUtil.getBestJSDocInfo(child);\n+      JSType thisType = null;\n+      if (info != null && info.getTypeTransformations() != null) {\n+        thisType = info.getTypeTransformations().getThisType();\n+      }\n+      if (thisType != null) {\n+        Node parent = n.getParent();\n+        if (!NodeUtil.isGet(parent) && !NodeUtil.isGetElem(parent)) {\n+          report(t, n, THIS_TYPE_CONSTRUCTOR_NOT_CALLABLE);\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}