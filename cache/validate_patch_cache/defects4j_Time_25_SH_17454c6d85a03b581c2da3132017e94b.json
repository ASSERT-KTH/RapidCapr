{
    "patch": "                if (offsetAdjusted > offsetLocal) {\n                    // we are in a \"gap\"\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    }\n                } else if (offsetAdjusted < offsetLocal) {\n                    // we are in an \"overlap\"\n                    long nextLocal = nextTransition(instantLocal - offsetLocal);\n                    long overlap = nextLocal - instantAdjusted;\n                    int offset = getOffset(nextLocal);\n                    if (offsetAdjusted < offset) {\n                        // current offset is too early because we are in overlap period\n                        nextLocal = nextTransition(nextLocal);\n                        overlap = nextLocal - instantAdjusted;\n                        offset = getOffset(nextLocal);\n                    }\n                    return offset;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..12cd1864 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if (offsetAdjusted > offsetLocal) {\n+                    // we are in a \"gap\"\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                } else if (offsetAdjusted < offsetLocal) {\n+                    // we are in an \"overlap\"\n+                    long nextLocal = nextTransition(instantLocal - offsetLocal);\n+                    long overlap = nextLocal - instantAdjusted;\n+                    int offset = getOffset(nextLocal);\n+                    if (offsetAdjusted < offset) {\n+                        // current offset is too early because we are in overlap period\n+                        nextLocal = nextTransition(nextLocal);\n+                        overlap = nextLocal - instantAdjusted;\n+                        offset = getOffset(nextLocal);\n+                    }\n+                    return offset;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}