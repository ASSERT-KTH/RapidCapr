{
    "patch": "        if (bucket.getOffsetInteger() != null) {\n            instantLocal -= bucket.getOffsetInteger();\n        }\n        instant.setMillis(bucket.computeMillis(false, text));\n        if (bucket.getOffsetInteger() != null) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..49d3e75d 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,11 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+        if (bucket.getOffsetInteger() != null) {\n+            instantLocal -= bucket.getOffsetInteger();\n+        }\n+        instant.setMillis(bucket.computeMillis(false, text));\n+        if (bucket.getOffsetInteger() != null) {\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}