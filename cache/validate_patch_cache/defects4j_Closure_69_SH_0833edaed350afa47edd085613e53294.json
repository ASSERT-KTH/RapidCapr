{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n      if (functionType.requiresThisContext()\n          && n.getParent().isNotGetProp()\n          && n.getParent().isNotGetElem()) {\n        report(t, n, FI_ARGUMENT_NOT_COMPATIBLE_WITH_THIS, \"Function\");",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..0a790bc4 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,11 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP or GETELEM.\n+      if (functionType.requiresThisContext()\n+          && n.getParent().isNotGetProp()\n+          && n.getParent().isNotGetElem()) {\n+        report(t, n, FI_ARGUMENT_NOT_COMPATIBLE_WITH_THIS, \"Function\");\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}