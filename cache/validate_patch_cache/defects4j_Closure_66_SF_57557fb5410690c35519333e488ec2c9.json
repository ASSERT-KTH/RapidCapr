{
    "patch": "import org.json.*;\n\npublic static double getTypedPercent(String jsonStr) throws JSONException {\n\n\tJSONObject json = new JSONObject(jsonStr);\n\tJSONArray data = json.getJSONArray(\"data\");\n\n\tdouble total = 0.0;\n\tdouble typed = 0.0;\n\n\tfor (int i = 0; i < data.length(); i++) {\n\t\tJSONObject item = data.getJSONObject(i);\n\t\tif (item.has(\"total\") && item.has(\"typed\")) {\n\t\t\ttotal += item.getDouble(\"total\");\n\t\t\ttyped += item.getDouble(\"typed\");\n\t\t}\n\t}\n\n\tif (total == 0.0) {\n\t\treturn 0.0;\n\t}\n\n\treturn (typed / total) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..13c75424 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,30 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import org.json.*;\n+\n+public static double getTypedPercent(String jsonStr) throws JSONException {\n+\n+\tJSONObject json = new JSONObject(jsonStr);\n+\tJSONArray data = json.getJSONArray(\"data\");\n+\n+\tdouble total = 0.0;\n+\tdouble typed = 0.0;\n+\n+\tfor (int i = 0; i < data.length(); i++) {\n+\t\tJSONObject item = data.getJSONObject(i);\n+\t\tif (item.has(\"total\") && item.has(\"typed\")) {\n+\t\t\ttotal += item.getDouble(\"total\");\n+\t\t\ttyped += item.getDouble(\"typed\");\n+\t\t}\n+\t}\n+\n+\tif (total == 0.0) {\n+\t\treturn 0.0;\n+\t}\n+\n+\treturn (typed / total) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}