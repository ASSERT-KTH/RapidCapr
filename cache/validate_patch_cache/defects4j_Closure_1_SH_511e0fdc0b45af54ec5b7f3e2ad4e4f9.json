{
    "patch": "    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      Node args = argList.getFirstChild();\n      // Handle the head of the list separately so we can remove the first element\n      // if it's unused.\n      Var var = fnScope.getVar(args.getString());\n      if (var == null || !referenced.contains(var)) {\n        argList.removeChild(args);\n        compiler.reportCodeChange();\n      }\n      while (args.getNext() != null) {\n        var = fnScope.getVar(args.getNext().getString());\n        if (var == null || !referenced.contains(var)) {\n          argList.removeChild(args.getNext());\n          compiler.reportCodeChange();\n        } else {\n          args = args.getNext();\n        }\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..cf674eec 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,35 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      Node args = argList.getFirstChild();\n+      // Handle the head of the list separately so we can remove the first element\n+      // if it's unused.\n+      Var var = fnScope.getVar(args.getString());\n+      if (var == null || !referenced.contains(var)) {\n+        argList.removeChild(args);\n+        compiler.reportCodeChange();\n+      }\n+      while (args.getNext() != null) {\n+        var = fnScope.getVar(args.getNext().getString());\n+        if (var == null || !referenced.contains(var)) {\n+          argList.removeChild(args.getNext());\n+          compiler.reportCodeChange();\n+        } else {\n+          args = args.getNext();\n+        }\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}