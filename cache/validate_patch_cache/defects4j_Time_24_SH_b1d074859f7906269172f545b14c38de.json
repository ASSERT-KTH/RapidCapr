{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        long newMillis = savedFields[i].set(millis, resetFields);\n        if (millis < 0 ^ newMillis < 0) {\n            throw new IllegalArgumentException(\"The instant is too \" + (millis < 0 ? \"early\" : \"late\"));\n        }\n        millis = newMillis;\n    }\n    if (millis < 0) {\n        throw new IllegalArgumentException(\"The instant is too early\");\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b40162c8 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        long newMillis = savedFields[i].set(millis, resetFields);\n+        if (millis < 0 ^ newMillis < 0) {\n+            throw new IllegalArgumentException(\"The instant is too \" + (millis < 0 ? \"early\" : \"late\"));\n+        }\n+        millis = newMillis;\n+    }\n+    if (millis < 0) {\n+        throw new IllegalArgumentException(\"The instant is too early\");\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: MONTHM1b expected:<-1> but was:<0>",
    "test_result": "FAIL"
}