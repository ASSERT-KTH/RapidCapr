{
    "patch": "        boolean overflow = false;\n        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            try {\n                millis = savedField.set(millis, resetFields);\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            } catch (RuntimeException e) {\n                if (e instanceof ArithmeticException || e instanceof IllegalArgumentException) {\n                    if (text != null) {\n                        throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage(), e);\n                    }\n                    throw e;\n                }\n                overflow = true;\n            }\n        }\n        if (overflow) {\n            throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..0acbeff2 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,29 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        boolean overflow = false;\n+        for (int i = 0; i < count; i++) {\n+            SavedField savedField = savedFields[i];\n+            try {\n+                millis = savedField.set(millis, resetFields);\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            } catch (RuntimeException e) {\n+                if (e instanceof ArithmeticException || e instanceof IllegalArgumentException) {\n+                    if (text != null) {\n+                        throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage(), e);\n+                    }\n+                    throw e;\n+                }\n+                overflow = true;\n+            }\n+        }\n+        if (overflow) {\n+            throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}