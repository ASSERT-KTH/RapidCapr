{
    "patch": "          if (ref.isParameter()) { \n            break;\n          }\n          return true;\n        } else if (block.isLoop) {\n          return false;\n        }\n      }\n\n      return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..f4128b2f 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          if (ref.isParameter()) { \n+            break;\n+          }\n+          return true;\n+        } else if (block.isLoop) {\n+          return false;\n+        }\n+      }\n+\n+      return false;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}