{
    "patch": "while (number > 0 && i >= 0) {\n    if (number >= num[i]) {\n        result += sym[i];\n        number -= num[i];\n    } else {\n        i--;\n    }\n}\n\nif (number == 0) {\n    return result.toLowerCase();\n} else {\n    throw new IllegalArgumentException(\"Number cannot be represented in mini roman numerals\");\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\nindex 0f3c881..98d68fb 100644\n--- a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n+++ b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n@@ -19,7 +19,20 @@ public class INT_TO_MINI_ROMAN {\n         int i = 12;\n         String result = \"\";\n         while (number > 0) {\n-            result += sym[i];\n+while (number > 0 && i >= 0) {\n+    if (number >= num[i]) {\n+        result += sym[i];\n+        number -= num[i];\n+    } else {\n+        i--;\n+    }\n+}\n+\n+if (number == 0) {\n+    return result.toLowerCase();\n+} else {\n+    throw new IllegalArgumentException(\"Number cannot be represented in mini roman numerals\");\n+}\n             number %= num[i];\n             i -= 1;\n         }",
    "result_reason": " /tmp/humaneval-INT_TO_MINI_ROMAN/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java:[36,13] unreachable statement",
    "test_result": "ERROR"
}