{
    "patch": "public static int[] common(int[] l1, int[] l2) {\n    ArrayList<Integer> common = new ArrayList<Integer>();\n    for (int i = 0; i < l1.length; i += 1){\n        for (int j = 0; j < l2.length; j += 1){\n            if (l1[i] == l2[j])\n                common.add(l1[i]);\n            }\n        }\n    int[] result = new int[common.size()];\n    for (int i = 0; i < common.size(); i++) {\n        result[i] = common.get(i);\n    }\n    Arrays.sort(result);\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMMON.java b/src/main/java/humaneval/buggy/COMMON.java\nindex f818c29..eccc3d2 100644\n--- a/src/main/java/humaneval/buggy/COMMON.java\n+++ b/src/main/java/humaneval/buggy/COMMON.java\n@@ -10,7 +10,21 @@ import java.util.*;\n \n public class COMMON {\n     public static int[] common(int[] l1, int[] l2) {\n-        ArrayList<Integer> common = new ArrayList<Integer>();\n+public static int[] common(int[] l1, int[] l2) {\n+    ArrayList<Integer> common = new ArrayList<Integer>();\n+    for (int i = 0; i < l1.length; i += 1){\n+        for (int j = 0; j < l2.length; j += 1){\n+            if (l1[i] == l2[j])\n+                common.add(l1[i]);\n+            }\n+        }\n+    int[] result = new int[common.size()];\n+    for (int i = 0; i < common.size(); i++) {\n+        result[i] = common.get(i);\n+    }\n+    Arrays.sort(result);\n+    return result;\n+}\n         \n         for (int i = 0; i < l1.length; i += 1){\n             for (int j = 0; j < l2.length; j += 1){",
    "result_reason": " /tmp/humaneval-COMMON/src/main/java/humaneval/buggy/COMMON.java:[13,1] illegal start of expression",
    "test_result": "ERROR"
}