{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if ((ch0 < 'a' || ch0 > 'z') || (ch1 < 'a' || ch1 > 'z')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch2 = str.charAt(3);\n        if ((ch2 < 'A' || ch2 > 'Z') && (ch2 != '_')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int index = str.indexOf('_', 4);\n        if (index == -1) {\n            if (len - 4 != 2 && len - 4 != 5) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len - 4 == 2) {\n                return new Locale(str.substring(0, 2), str.substring(3));\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            String country = str.substring(3, index);\n            if (country.length() != 2) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (index + 1 == len) {\n                return new Locale(str.substring(0, 2), country);\n            } else {\n                if (len - (index + 1) != 2 && len - (index + 1) != 4) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                String variant = str.substring(index + 1);\n                if (len - (index + 1) == 4 && !variant.equals(\"POSIX\")) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), country, variant);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..4fe4decb 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,58 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if ((ch0 < 'a' || ch0 > 'z') || (ch1 < 'a' || ch1 > 'z')) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    } else {\n+        if (str.charAt(2) != '_') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        char ch2 = str.charAt(3);\n+        if ((ch2 < 'A' || ch2 > 'Z') && (ch2 != '_')) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n+        int index = str.indexOf('_', 4);\n+        if (index == -1) {\n+            if (len - 4 != 2 && len - 4 != 5) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+            if (len - 4 == 2) {\n+                return new Locale(str.substring(0, 2), str.substring(3));\n+            }\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        } else {\n+            String country = str.substring(3, index);\n+            if (country.length() != 2) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            if (index + 1 == len) {\n+                return new Locale(str.substring(0, 2), country);\n             } else {\n-                if (str.charAt(5) != '_') {\n+                if (len - (index + 1) != 2 && len - (index + 1) != 4) {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                String variant = str.substring(index + 1);\n+                if (len - (index + 1) == 4 && !variant.equals(\"POSIX\")) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                return new Locale(str.substring(0, 2), country, variant);\n             }\n         }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<[]> but was:<[_P]>",
    "test_result": "FAIL"
}