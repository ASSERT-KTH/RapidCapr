{
    "patch": "private byte[] encode1024() {\n   ByteArrayOutputStream baos = new ByteArrayOutputStream();\n   for (int i = 0; i < 1024; i++) {\n      baos.write((byte) i);\n   }\n   return baos.toByteArray();\n}\n\n@Test\npublic void testISO8859_1_ESCAPE() {\n   String input = new String(encode1024());\n   String expected = escape(input);\n   String actual = StringEscapeUtils.escapeJava(input);\n   boolean success = expected.equals(actual); // use equals() instead of =\n   assertTrue(\"One or more errors detected\", success);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}