{
    "patch": "            DateTimeField field = savedFields[i].iField;\n            int value = savedFields[i].iValue;\n            try {\n                millis = field.set(millis, value);\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                if (field.getType() == DateTimeFieldType.year() && \n                        savedFields[i].isSavedField == false) {\n                    throw e;\n                } else if (field.getType() == DateTimeFieldType.year() &&\n                        value+1 == 1) { // Handle year zero\n                    millis = field.set(millis, value+1);\n                    millis = field.add(millis, -1);\n                } else if (value == 0 && \n                        (field.getType() == DateTimeFieldType.monthOfYear()\n                        || field.getType() == DateTimeFieldType.dayOfMonth())) {\n                    millis = field.set(millis, 1);\n                    millis = field.add(millis, -1);\n                } else {\n                    throw e;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b44a0080 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,30 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            DateTimeField field = savedFields[i].iField;\n+            int value = savedFields[i].iValue;\n+            try {\n+                millis = field.set(millis, value);\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                if (field.getType() == DateTimeFieldType.year() && \n+                        savedFields[i].isSavedField == false) {\n+                    throw e;\n+                } else if (field.getType() == DateTimeFieldType.year() &&\n+                        value+1 == 1) { // Handle year zero\n+                    millis = field.set(millis, value+1);\n+                    millis = field.add(millis, -1);\n+                } else if (value == 0 && \n+                        (field.getType() == DateTimeFieldType.monthOfYear()\n+                        || field.getType() == DateTimeFieldType.dayOfMonth())) {\n+                    millis = field.set(millis, 1);\n+                    millis = field.add(millis, -1);\n+                } else {\n+                    throw e;\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}