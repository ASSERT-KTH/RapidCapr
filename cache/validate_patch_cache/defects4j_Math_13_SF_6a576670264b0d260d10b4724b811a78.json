{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    final RealMatrix v = dec.getV();\n    final RealMatrix d = dec.getD();\n    \n    final double eps = 1e-12;\n    for (int i = 0; i < d.getRowDimension(); i++) {\n        if (d.getEntry(i, i) < -eps) {\n            throw new IllegalArgumentException(\"Matrix must be positive definite\");\n        }\n        if (d.getEntry(i, i) < eps) {\n            d.setEntry(i, i, 0);\n        }\n        else {\n            d.setEntry(i, i, Math.sqrt(d.getEntry(i, i)));\n        }            \n    }\n    \n    final RealMatrix dSqrt = d.scalarMultiply(Math.sqrt(eps));\n    \n    final RealMatrix vTimesD = v.multiply(dSqrt);\n    final RealMatrix dSqrtTimesVInverse = dSqrt.multiply(v.transpose());\n    return vTimesD.multiply(dSqrtTimesVInverse);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..e5e524e0b 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,28 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final EigenDecomposition dec = new EigenDecomposition(m);\n+    final RealMatrix v = dec.getV();\n+    final RealMatrix d = dec.getD();\n+    \n+    final double eps = 1e-12;\n+    for (int i = 0; i < d.getRowDimension(); i++) {\n+        if (d.getEntry(i, i) < -eps) {\n+            throw new IllegalArgumentException(\"Matrix must be positive definite\");\n+        }\n+        if (d.getEntry(i, i) < eps) {\n+            d.setEntry(i, i, 0);\n+        }\n+        else {\n+            d.setEntry(i, i, Math.sqrt(d.getEntry(i, i)));\n+        }            \n     }\n+    \n+    final RealMatrix dSqrt = d.scalarMultiply(Math.sqrt(eps));\n+    \n+    final RealMatrix vTimesD = v.multiply(dSqrt);\n+    final RealMatrix dSqrtTimesVInverse = dSqrt.multiply(v.transpose());\n+    return vTimesD.multiply(dSqrtTimesVInverse);\n+}\n }",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}