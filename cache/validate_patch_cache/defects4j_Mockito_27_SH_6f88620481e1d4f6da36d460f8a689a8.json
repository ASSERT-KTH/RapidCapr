{
    "patch": "        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n        MockitoSession mockitoSession = null;\n\n        if (mock instanceof TypeMarker) {\n            try {\n                mockitoSession = Mockito.mockitoSession()\n                        .initMocks(mock)\n                        .startMocking();\n            } catch (MockitoException e) {\n                // DO NOTHING, CONTINUE WITH OLD MOCK HANDLER\n            }\n        }\n\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().spiedInstance(mock).defaultAnswer(org.mockito.Mockito.CALLS_REAL_METHODS));\n        if (mock instanceof Factory) {\n            ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..75c5ccd34 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,27 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+        MockitoSession mockitoSession = null;\n+\n+        if (mock instanceof TypeMarker) {\n+            try {\n+                mockitoSession = Mockito.mockitoSession()\n+                        .initMocks(mock)\n+                        .startMocking();\n+            } catch (MockitoException e) {\n+                // DO NOTHING, CONTINUE WITH OLD MOCK HANDLER\n+            }\n+        }\n+\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().spiedInstance(mock).defaultAnswer(org.mockito.Mockito.CALLS_REAL_METHODS));\n+        if (mock instanceof Factory) {\n+            ((Factory) mock).setCallbacks(new Callback[]{newFilter});\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}