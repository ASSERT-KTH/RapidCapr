{
    "patch": "Node first = n.getFirstChild();\nNode current = first;\nwhile (current != null && current.isCast()) {\n  current = current.getFirstChild();\n}\nfirst = current != null ? current : first;\n\nif (first != null && !NodeUtil.isGet(first)) {\n  n.putBooleanProp(Node.FREE_CALL, true);\n\n  if (first.isName() && \"eval\".equals(first.getString())) {\n    first.putBooleanProp(Node.DIRECT_EVAL, true);\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..e79b2588 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,20 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+Node first = n.getFirstChild();\n+Node current = first;\n+while (current != null && current.isCast()) {\n+  current = current.getFirstChild();\n+}\n+first = current != null ? current : first;\n+\n+if (first != null && !NodeUtil.isGet(first)) {\n+  n.putBooleanProp(Node.FREE_CALL, true);\n+\n+  if (first.isName() && \"eval\".equals(first.getString())) {\n+    first.putBooleanProp(Node.DIRECT_EVAL, true);\n+  }\n+}\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}