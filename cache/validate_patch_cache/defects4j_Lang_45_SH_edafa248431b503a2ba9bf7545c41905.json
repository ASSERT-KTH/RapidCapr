{
    "patch": "        int stringLength = str.length();\n        int upperBound = Math.min(stringLength, Math.max(lower, upper));\n        if(lower>upperBound) return appendToEnd == null ? StringUtils.EMPTY : appendToEnd;\n        String abbreviatedString = StringUtils.substring(str, lower, upperBound);\n        return StringUtils.defaultString(abbreviatedString) + StringUtils.defaultString(appendToEnd);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..38bbe519 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,12 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+        int stringLength = str.length();\n+        int upperBound = Math.min(stringLength, Math.max(lower, upper));\n+        if(lower>upperBound) return appendToEnd == null ? StringUtils.EMPTY : appendToEnd;\n+        String abbreviatedString = StringUtils.substring(str, lower, upperBound);\n+        return StringUtils.defaultString(abbreviatedString) + StringUtils.defaultString(appendToEnd);\n+    }\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}