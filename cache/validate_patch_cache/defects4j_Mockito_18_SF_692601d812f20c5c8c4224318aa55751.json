{
    "patch": "public static String[] reverseArray(String[] arr) {\n    int len = arr.length;\n    String[] reversedArr = new String[len];\n    for (int i = 0; i < len; i++) {\n        reversedArr[len - i - 1] = arr[i];\n    }\n    return reversedArr;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..a78bb67d2 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,14 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static String[] reverseArray(String[] arr) {\n+    int len = arr.length;\n+    String[] reversedArr = new String[len];\n+    for (int i = 0; i < len; i++) {\n+        reversedArr[len - i - 1] = arr[i];\n+    }\n+    return reversedArr;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}