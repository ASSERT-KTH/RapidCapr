{
    "patch": "private Type getActualTypeArgumentFor(TypeVariable<?> typeVariable, Map<TypeVariable<?>, Type> typeArguments) {\n    Type typeArgument = typeArguments.get(typeVariable);\n    if (typeArgument == null) {\n        throw new MockitoException(\"Raw extraction not supported for : '\" + typeVariable + \"'\");\n    }\n    return typeArgument;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..74b6ae8b5 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,18 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+private Type getActualTypeArgumentFor(TypeVariable<?> typeVariable, Map<TypeVariable<?>, Type> typeArguments) {\n+    Type typeArgument = typeArguments.get(typeVariable);\n+    if (typeArgument == null) {\n+        throw new MockitoException(\"Raw extraction not supported for : '\" + typeVariable + \"'\");\n+    }\n+    return typeArgument;\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}