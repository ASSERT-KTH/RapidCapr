{
    "patch": "List<Strategy> collector = new ArrayList<Strategy>();\n\nMatcher patternMatcher = formatPattern.matcher(pattern);\nString currentFormatField = \"\";\nStrategy currentStrategy;\n\nif (patternMatcher.lookingAt()) {\n    currentFormatField = patternMatcher.group();\n    currentStrategy = getStrategy(currentFormatField);\n} else {\n    currentStrategy = new CopyQuotedStrategy();\n}\n\nwhile (patternMatcher.find()) {\n    String nextFormatField = patternMatcher.group();\n    Strategy nextStrategy = getStrategy(nextFormatField);\n    if (currentStrategy.addRegex(this, regex)) {\n        collector.add(currentStrategy);\n    }\n    currentStrategy = nextStrategy;\n    currentFormatField = nextFormatField;\n}\n\nif (currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\n\nif (patternMatcher.regionStart() == patternMatcher.regionEnd()) {\n    strategies = collector.toArray(new Strategy[0]);\n    currentFormatField = null;\n} else {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}\n\nparsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..e874ae33 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,41 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+List<Strategy> collector = new ArrayList<Strategy>();\n+\n+Matcher patternMatcher = formatPattern.matcher(pattern);\n+String currentFormatField = \"\";\n+Strategy currentStrategy;\n+\n+if (patternMatcher.lookingAt()) {\n+    currentFormatField = patternMatcher.group();\n+    currentStrategy = getStrategy(currentFormatField);\n+} else {\n+    currentStrategy = new CopyQuotedStrategy();\n+}\n+\n+while (patternMatcher.find()) {\n+    String nextFormatField = patternMatcher.group();\n+    Strategy nextStrategy = getStrategy(nextFormatField);\n+    if (currentStrategy.addRegex(this, regex)) {\n+        collector.add(currentStrategy);\n+    }\n+    currentStrategy = nextStrategy;\n+    currentFormatField = nextFormatField;\n+}\n+\n+if (currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+\n+if (patternMatcher.regionStart() == patternMatcher.regionEnd()) {\n+    strategies = collector.toArray(new Strategy[0]);\n+    currentFormatField = null;\n+} else {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n+\n+parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: variable collector is already defined in method init()",
    "test_result": "ERROR"
}