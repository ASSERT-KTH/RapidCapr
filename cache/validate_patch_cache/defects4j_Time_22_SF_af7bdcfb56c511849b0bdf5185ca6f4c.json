{
    "patch": "public final class PeriodDays extends BasePeriod {\n\n    public static PeriodDays days(int days) {\n        return new PeriodDays(days);\n    }\n\n    protected PeriodDays(int days) {\n        super(days * DateTimeConstants.MILLIS_PER_DAY);\n    }\n\n    public int getDays() {\n        return (int) (getMillis() / DateTimeConstants.MILLIS_PER_DAY);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..829d3111 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,11 +218,21 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+public final class PeriodDays extends BasePeriod {\n+\n+    public static PeriodDays days(int days) {\n+        return new PeriodDays(days);\n+    }\n+\n+    protected PeriodDays(int days) {\n+        super(days * DateTimeConstants.MILLIS_PER_DAY);\n     }\n \n+    public int getDays() {\n+        return (int) (getMillis() / DateTimeConstants.MILLIS_PER_DAY);\n+    }\n+}\n+\n     /**\n      * Creates a period from the given millisecond duration, which is only really\n      * suitable for durations less than one day.",
    "result_reason": "error: non-static variable this cannot be referenced from a static context",
    "test_result": "ERROR"
}