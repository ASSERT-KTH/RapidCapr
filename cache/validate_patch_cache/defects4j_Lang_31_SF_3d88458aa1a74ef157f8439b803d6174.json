{
    "patch": "public static boolean containsAny(final char[] arr1, final char[] arr2) {\n    if (arr1 == null || arr2 == null) {\n        return false;\n    }\n    Set<Integer> set = new HashSet<>();\n    for (char c : arr1) {\n        set.add((int)c);\n    }\n    for (char c : arr2) {\n        if (set.contains((int)c) || isSurrogatePair(c, set)) {\n            return true;\n        }\n    }\n    return false;\n}\n\npublic static boolean isSurrogatePair(char ch, Set<Integer> set) {\n    if (Character.isHighSurrogate(ch) && set.contains((int) Character.toCodePoint(ch, getNextChar()))) {\n        return true;\n    } else if (Character.isLowSurrogate(ch) && set.contains((int) Character.toCodePoint(getPreviousChar(), ch))) {\n        return true;\n    }\n    return false;\n}\n\npublic static char getNextChar() {\n    // TODO: implement this method to get the next character from arr2\n    return '\\uFFFF'; // return a default value if the method is not fully implemented\n}\n\npublic static char getPreviousChar() {\n    // TODO: implement this method to get the previous character from arr2\n    return '\\uFFFF'; // return a default value if the method is not fully implemented\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..57fab487 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,40 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final char[] arr1, final char[] arr2) {\n+    if (arr1 == null || arr2 == null) {\n+        return false;\n+    }\n+    Set<Integer> set = new HashSet<>();\n+    for (char c : arr1) {\n+        set.add((int)c);\n+    }\n+    for (char c : arr2) {\n+        if (set.contains((int)c) || isSurrogatePair(c, set)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+public static boolean isSurrogatePair(char ch, Set<Integer> set) {\n+    if (Character.isHighSurrogate(ch) && set.contains((int) Character.toCodePoint(ch, getNextChar()))) {\n+        return true;\n+    } else if (Character.isLowSurrogate(ch) && set.contains((int) Character.toCodePoint(getPreviousChar(), ch))) {\n+        return true;\n+    }\n+    return false;\n+}\n+\n+public static char getNextChar() {\n+    // TODO: implement this method to get the next character from arr2\n+    return '\\uFFFF'; // return a default value if the method is not fully implemented\n+}\n+\n+public static char getPreviousChar() {\n+    // TODO: implement this method to get the previous character from arr2\n+    return '\\uFFFF'; // return a default value if the method is not fully implemented\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}