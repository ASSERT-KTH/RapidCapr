{
    "patch": "private static String unescape(String str) {\n    Matcher matcher = UNICODE_PATTERN.matcher(str);\n    StringBuffer buf = new StringBuffer(str.length());\n    boolean success = matcher.find();\n    while (success) {\n        String match = matcher.group(1);\n        char unicodeChar = (char) Integer.parseInt(match, 16);\n        success = false;\n        matcher.appendReplacement(buf, \"\");\n        buf.append(unicodeChar);\n        success = matcher.find();\n    }\n    matcher.appendTail(buf);\n    return buf.toString().replaceAll(\"\\\\\\\\(.)\", \"$1\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}