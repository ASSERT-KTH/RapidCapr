{
    "patch": "        TimeSeries clone;\n        try {\n            clone = (TimeSeries) super.clone();\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }\n        synchronized (clone) {\n            clone.data = (ArrayList) data.clone();\n        }\n        clone.domainIsPointsInTime = domainIsPointsInTime;\n        clone.rangeDescription = (AttributedString) rangeDescription.clone();\n        clone.startIndex = 0;\n        clone.endIndex = getItemCount() - 1;\n        clone.timePeriodClass = this.timePeriodClass;\n        if (this.timePeriods != null) {\n            clone.timePeriods\n                    = (TimePeriodValues) this.timePeriods.clone();\n        }\n        clone.yData = createCopy(getMinY(), getMaxY());\n        return clone;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..5389b5b 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,26 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        TimeSeries clone;\n+        try {\n+            clone = (TimeSeries) super.clone();\n+        } catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e);\n+        }\n+        synchronized (clone) {\n+            clone.data = (ArrayList) data.clone();\n+        }\n+        clone.domainIsPointsInTime = domainIsPointsInTime;\n+        clone.rangeDescription = (AttributedString) rangeDescription.clone();\n+        clone.startIndex = 0;\n+        clone.endIndex = getItemCount() - 1;\n+        clone.timePeriodClass = this.timePeriodClass;\n+        if (this.timePeriods != null) {\n+            clone.timePeriods\n+                    = (TimePeriodValues) this.timePeriods.clone();\n+        }\n+        clone.yData = createCopy(getMinY(), getMaxY());\n+        return clone;\n         return clone;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}