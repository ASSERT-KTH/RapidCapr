{
    "patch": "public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations) {\n    if (Double.isNaN(a) || Double.isNaN(x)) {\n        return Double.NaN;\n    }\n\n    if (a <= 0.0 || x < 0.0) {\n        return 0.0;\n    }\n\n    if (x == 0.0) {\n        return 0.0;\n    }\n\n    if (x >= a + 1.0) {\n        return 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);\n    }\n\n    double n = 0.0;\n    double an = 1.0 / a;\n    double sum = an;\n\n    while (Math.abs(an / sum) > epsilon && n < maxIterations) {\n        n += 1.0;\n        an *= x / (a + n);\n        sum += an;\n    }\n\n    return Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum / a;\n}\n\npublic static double regularizedGammaP(double a, double x) {\n    return regularizedGammaP(a, x, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..78ed70a17 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,39 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations) {\n+    if (Double.isNaN(a) || Double.isNaN(x)) {\n+        return Double.NaN;\n+    }\n+\n+    if (a <= 0.0 || x < 0.0) {\n+        return 0.0;\n+    }\n+\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+\n+    if (x >= a + 1.0) {\n+        return 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);\n+    }\n+\n+    double n = 0.0;\n+    double an = 1.0 / a;\n+    double sum = an;\n+\n+    while (Math.abs(an / sum) > epsilon && n < maxIterations) {\n+        n += 1.0;\n+        an *= x / (a + n);\n+        sum += an;\n+    }\n+\n+    return Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum / a;\n+}\n+\n+public static double regularizedGammaP(double a, double x) {\n+    return regularizedGammaP(a, x, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS);\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}