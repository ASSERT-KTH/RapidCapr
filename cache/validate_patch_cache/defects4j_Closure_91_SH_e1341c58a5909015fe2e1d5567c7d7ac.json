{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isGet(parent) &&\n          parent.getNext().getType() == Token.ASSIGN &&\n          NodeUtil.isGet(parent.getNext().getFirstChild()) &&\n          parent.getNext().getFirstChild().getType() == Token.GETPROP &&\n          \"prototype\".equals(parent.getNext().getFirstChild().getLastChild().getString())) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..c99cda0f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,14 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent) &&\n+          parent.getNext().getType() == Token.ASSIGN &&\n+          NodeUtil.isGet(parent.getNext().getFirstChild()) &&\n+          parent.getNext().getFirstChild().getType() == Token.GETPROP &&\n+          \"prototype\".equals(parent.getNext().getFirstChild().getLastChild().getString())) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}