{
    "patch": "public <T> void resetMock(T mock) {\n    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n    MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\n    List<MockitoInvocationHandler> invocationHandlers = new ArrayList<>(\n            ((MockitoObject) mock).getHandlerChain());\n    MockitoMethodProxy methodProxy = new CglibMockitoMethodProxy();\n    MockitoInvocationHandler newInvocationHandler = new CglibMockHandlerAdapter(newMockHandler,\n            methodProxy);\n    invocationHandlers.set(0, newInvocationHandler);\n    MockitoObject mockitoObject = new DirectMockitoObject(mock, invocationHandlers);\n    ((MockitoObject) mock).setMockitoObject(mockitoObject);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..f0b84b561 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+    MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\n+    List<MockitoInvocationHandler> invocationHandlers = new ArrayList<>(\n+            ((MockitoObject) mock).getHandlerChain());\n+    MockitoMethodProxy methodProxy = new CglibMockitoMethodProxy();\n+    MockitoInvocationHandler newInvocationHandler = new CglibMockHandlerAdapter(newMockHandler,\n+            methodProxy);\n+    invocationHandlers.set(0, newInvocationHandler);\n+    MockitoObject mockitoObject = new DirectMockitoObject(mock, invocationHandlers);\n+    ((MockitoObject) mock).setMockitoObject(mockitoObject);\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}