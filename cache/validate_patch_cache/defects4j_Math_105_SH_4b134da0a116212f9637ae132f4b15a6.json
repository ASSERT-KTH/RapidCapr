{
    "patch": "        if (Double.isNaN(sumYY) || Double.isNaN(sumXX) || Double.isNaN(sumXY)) {\n            return 0.0;\n        }\n        if (Double.isInfinite(sumYY) || Double.isInfinite(sumXX) || Double.isInfinite(sumXY)) {\n            return 0.0;\n        }\n        double result = sumYY - sumXY * sumXY / sumXX;\n        if (Double.isNaN(result)) {\n            return 0.0;\n        }\n        return result >= 0.0 ? result : 0.0;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\nindex dcf512b72..ed93a4d6a 100644\n--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n@@ -261,7 +261,17 @@ public class SimpleRegression implements Serializable {\n      * @return sum of squared errors associated with the regression model\n      */\n     public double getSumSquaredErrors() {\n-        return sumYY - sumXY * sumXY / sumXX;\n+        if (Double.isNaN(sumYY) || Double.isNaN(sumXX) || Double.isNaN(sumXY)) {\n+            return 0.0;\n+        }\n+        if (Double.isInfinite(sumYY) || Double.isInfinite(sumXX) || Double.isInfinite(sumXY)) {\n+            return 0.0;\n+        }\n+        double result = sumYY - sumXY * sumXY / sumXX;\n+        if (Double.isNaN(result)) {\n+            return 0.0;\n+        }\n+        return result >= 0.0 ? result : 0.0;\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: SSE not NaN",
    "test_result": "FAIL"
}