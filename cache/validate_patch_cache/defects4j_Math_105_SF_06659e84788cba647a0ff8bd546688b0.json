{
    "patch": "public double getSumSquaredErrors() {\n    double numerator = sumYY * sumXX - sumXY * sumXY;\n    double denominator = sumXX;\n    if (Double.isNaN(numerator) || Double.isNaN(denominator) || denominator == 0.0) {\n        return Double.NaN;\n    } else {\n        return Math.max(numerator / denominator, 0.0);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\nindex dcf512b72..353f24652 100644\n--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n@@ -260,9 +260,15 @@ public class SimpleRegression implements Serializable {\n      *\n      * @return sum of squared errors associated with the regression model\n      */\n-    public double getSumSquaredErrors() {\n-        return sumYY - sumXY * sumXY / sumXX;\n+public double getSumSquaredErrors() {\n+    double numerator = sumYY * sumXX - sumXY * sumXY;\n+    double denominator = sumXX;\n+    if (Double.isNaN(numerator) || Double.isNaN(denominator) || denominator == 0.0) {\n+        return Double.NaN;\n+    } else {\n+        return Math.max(numerator / denominator, 0.0);\n     }\n+}\n \n     /**\n      * Returns the sum of squared deviations of the y values about their mean.",
    "result_reason": "junit.framework.AssertionFailedError: std err intercept expected:<0.232818234301152> but was:<0.23281823428996867>",
    "test_result": "FAIL"
}