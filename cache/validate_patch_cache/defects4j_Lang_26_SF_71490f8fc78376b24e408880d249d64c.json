{
    "patch": "public String format(Date date) {\n    Calendar c = new GregorianCalendar(mTimeZone);\n    c.setFirstDayOfWeek(Calendar.MONDAY);\n    c.setMinimalDaysInFirstWeek(4);\n    c.setTime(date);\n\n    // Ensure that the calendar is set to the beginning of the day\n    c.set(Calendar.HOUR_OF_DAY, 0);\n    c.set(Calendar.MINUTE, 0);\n    c.set(Calendar.SECOND, 0);\n    c.set(Calendar.MILLISECOND, 0);\n\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..07f3373d 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -816,11 +816,20 @@ public class FastDateFormat extends Format {\n      * @param date  the date to format\n      * @return the formatted string\n      */\n-    public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n-        c.setTime(date);\n-        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n-    }\n+public String format(Date date) {\n+    Calendar c = new GregorianCalendar(mTimeZone);\n+    c.setFirstDayOfWeek(Calendar.MONDAY);\n+    c.setMinimalDaysInFirstWeek(4);\n+    c.setTime(date);\n+\n+    // Ensure that the calendar is set to the beginning of the day\n+    c.set(Calendar.HOUR_OF_DAY, 0);\n+    c.set(Calendar.MINUTE, 0);\n+    c.set(Calendar.SECOND, 0);\n+    c.set(Calendar.MILLISECOND, 0);\n+\n+    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+}\n \n     /**\n      * <p>Formats a <code>Calendar</code> object.</p>",
    "result_reason": "junit.framework.ComparisonFailure: expected:<2005-01-01T[12]:00:00> but was:<2005-01-01T[00]:00:00>",
    "test_result": "FAIL"
}