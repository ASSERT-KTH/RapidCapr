{
    "patch": "// Check if attribute is an instance of BoundaryAttribute, and if so, get its plus outside node\nif (tree.getAttribute() instanceof BoundaryAttribute<?> && ((BoundaryAttribute<?>) tree.getAttribute()).getPlusOutside() == null) {\n    // the instance covers the whole space\n    setSize(Double.POSITIVE_INFINITY);\n    setBarycenter(Vector2D.NaN);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\nindex c6e7cf18c..318e9dfcf 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\n@@ -133,7 +133,12 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {\n \n         if (v.length == 0) {\n             final BSPTree<Euclidean2D> tree = getTree(false);\n-            if ((Boolean) tree.getAttribute()) {\n+// Check if attribute is an instance of BoundaryAttribute, and if so, get its plus outside node\n+if (tree.getAttribute() instanceof BoundaryAttribute<?> && ((BoundaryAttribute<?>) tree.getAttribute()).getPlusOutside() == null) {\n+    // the instance covers the whole space\n+    setSize(Double.POSITIVE_INFINITY);\n+    setBarycenter(Vector2D.NaN);\n+}\n                 // the instance covers the whole space\n                 setSize(Double.POSITIVE_INFINITY);\n                 setBarycenter(Vector2D.NaN);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}