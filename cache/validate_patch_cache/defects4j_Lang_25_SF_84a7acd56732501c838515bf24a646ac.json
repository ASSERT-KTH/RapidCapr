{
    "patch": "public static String unescape(String s) {\n    StringBuffer sbuf = new StringBuffer ();\n    int i = 0;\n    while (i < s.length()) {\n        char c = s.charAt(i);\n        switch (c) {\n            case '+':\n                sbuf.append(' ');\n                break;\n            case '%':\n                try {\n                    sbuf.append((char) Integer.parseInt(s.substring(i + 1, i + 3), 16));\n                    i += 2;\n                } catch (NumberFormatException e) {\n                    throw new IllegalArgumentException();\n                } catch (StringIndexOutOfBoundsException e) {\n                    throw new IllegalArgumentException();\n                }\n                break;\n            default:\n                sbuf.append(c);\n                break;\n        }\n        i++;\n    }\n    return sbuf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..3f0ac02d 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,33 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    StringBuffer sbuf = new StringBuffer ();\n+    int i = 0;\n+    while (i < s.length()) {\n+        char c = s.charAt(i);\n+        switch (c) {\n+            case '+':\n+                sbuf.append(' ');\n+                break;\n+            case '%':\n+                try {\n+                    sbuf.append((char) Integer.parseInt(s.substring(i + 1, i + 3), 16));\n+                    i += 2;\n+                } catch (NumberFormatException e) {\n+                    throw new IllegalArgumentException();\n+                } catch (StringIndexOutOfBoundsException e) {\n+                    throw new IllegalArgumentException();\n+                }\n+                break;\n+            default:\n+                sbuf.append(c);\n+                break;\n+        }\n+        i++;\n+    }\n+    return sbuf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}