{
    "patch": "if (options.checkGlobalThisLevel != null) {\n  CheckLevel globalThisLevel = options.checkGlobalThisLevel;\n  if (globalThisLevel == CheckLevel.OFF) {\n    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n  } else {\n    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, globalThisLevel);\n  }\n} else {\n  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..0f8fb7d0 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,16 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+  CheckLevel globalThisLevel = options.checkGlobalThisLevel;\n+  if (globalThisLevel == CheckLevel.OFF) {\n+    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+  } else {\n+    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, globalThisLevel);\n+  }\n+} else {\n+  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}