{
    "patch": "import java.util.Arrays;\n\npublic class MyStringUtils {\n  \n    public static String escapeString(String input, String characters, String replace) {\n        if (input == null || characters == null || replace == null) {\n            return input;\n        }\n      \n        String[] charArray = characters.split(\"\");\n        Arrays.sort(charArray);\n        String sortedChars = String.join(\"\", charArray);\n      \n        StringBuilder result = new StringBuilder();\n        for (char c : input.toCharArray()) {\n            String str = Character.toString(c);\n            if (sortedChars.contains(str)) {\n                result.append(replace);\n            } else {\n                result.append(c);\n            }\n        }\n        return result.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..348aaf46 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,31 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.util.Arrays;\n+\n+public class MyStringUtils {\n+  \n+    public static String escapeString(String input, String characters, String replace) {\n+        if (input == null || characters == null || replace == null) {\n+            return input;\n+        }\n+      \n+        String[] charArray = characters.split(\"\");\n+        Arrays.sort(charArray);\n+        String sortedChars = String.join(\"\", charArray);\n+      \n+        StringBuilder result = new StringBuilder();\n+        for (char c : input.toCharArray()) {\n+            String str = Character.toString(c);\n+            if (sortedChars.contains(str)) {\n+                result.append(replace);\n+            } else {\n+                result.append(c);\n+            }\n+        }\n+        return result.toString();\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}