{
    "patch": "        int gcd = BigInteger.valueOf(numerator).gcd(BigInteger.valueOf(denom)).intValue(); // greatest common divisor\n        numerator /= gcd; // simplify numerator\n        denom /= gcd; // simplify denominator\n\n        if (denom < 0) { // make sure denominator is positive\n            numerator = -numerator;\n            denom = -denom;\n        }\n\n        if (denom == 1) { // if denominator is now 1, return the numerator as a string\n            System.out.println(numerator);\n            return true;\n        }\n\n        return false;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SIMPLIFY.java b/src/main/java/humaneval/buggy/SIMPLIFY.java\nindex a55ee2e..e9b5683 100644\n--- a/src/main/java/humaneval/buggy/SIMPLIFY.java\n+++ b/src/main/java/humaneval/buggy/SIMPLIFY.java\n@@ -20,7 +20,21 @@ public class SIMPLIFY {\n \n         int numerator = a * c;\n         int denom = b * d;\n-        if (numerator / denom == (int) (numerator / denom))\n+        int gcd = BigInteger.valueOf(numerator).gcd(BigInteger.valueOf(denom)).intValue(); // greatest common divisor\n+        numerator /= gcd; // simplify numerator\n+        denom /= gcd; // simplify denominator\n+\n+        if (denom < 0) { // make sure denominator is positive\n+            numerator = -numerator;\n+            denom = -denom;\n+        }\n+\n+        if (denom == 1) { // if denominator is now 1, return the numerator as a string\n+            System.out.println(numerator);\n+            return true;\n+        }\n+\n+        return false;\n             return true;\n         return false;\n     }",
    "result_reason": " /tmp/humaneval-SIMPLIFY/src/main/java/humaneval/buggy/SIMPLIFY.java:[23,53] cannot find symbol",
    "test_result": "ERROR"
}