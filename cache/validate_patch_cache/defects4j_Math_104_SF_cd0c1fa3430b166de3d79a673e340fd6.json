{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double sum = 0;\n    double term = 1;\n    int n = 0;\n    while (Math.abs(term) > 1e-15 && n < 1000) {\n        term = (Math.pow(x, n) * Math.exp(-x)) / GammaFunction.gammaFunction(n + a);\n        sum += term;\n        n++;\n    }\n    double gamma = GammaFunction.gammaFunction(a);\n    return sum / gamma;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..c6f8b3f95 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,18 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double sum = 0;\n+    double term = 1;\n+    int n = 0;\n+    while (Math.abs(term) > 1e-15 && n < 1000) {\n+        term = (Math.pow(x, n) * Math.exp(-x)) / GammaFunction.gammaFunction(n + a);\n+        sum += term;\n+        n++;\n+    }\n+    double gamma = GammaFunction.gammaFunction(a);\n+    return sum / gamma;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}