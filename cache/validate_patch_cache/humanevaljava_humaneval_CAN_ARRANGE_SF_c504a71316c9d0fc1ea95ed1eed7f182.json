{
    "patch": "    public static int can_arrange(int[] arr) {\n        int n = arr.length;\n        boolean[] visited = new boolean[n + 1];\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 1 || arr[i] > n) {\n                continue;\n            }\n            visited[arr[i]] = true;\n        }\n        int i = 1;\n        while (i <= n && visited[i]) {\n            i++;\n        }\n        return i;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CAN_ARRANGE.java b/src/main/java/humaneval/buggy/CAN_ARRANGE.java\nindex 8bb1b11..922cc77 100644\n--- a/src/main/java/humaneval/buggy/CAN_ARRANGE.java\n+++ b/src/main/java/humaneval/buggy/CAN_ARRANGE.java\n@@ -14,10 +14,18 @@ package humaneval.buggy;\n \n public class CAN_ARRANGE {\n     public static int can_arrange(int[] arr) {\n-        int ind = 1;\n-        for(int i = 0; i < arr.length - 1; i++) {\n-            if(arr[i] < arr[i + 1]) ind = i + 1;\n+        int n = arr.length;\n+        boolean[] visited = new boolean[n + 1];\n+        for (int i = 0; i < n; i++) {\n+            if (arr[i] < 1 || arr[i] > n) {\n+                continue;\n+            }\n+            visited[arr[i]] = true;\n         }\n-        return ind;\n+        int i = 1;\n+        while (i <= n && visited[i]) {\n+            i++;\n+        }\n+        return i;\n     }\n }",
    "result_reason": "   TEST_CAN_ARRANGE.test_0:7 expected:<3> but was:<6>",
    "test_result": "FAIL"
}