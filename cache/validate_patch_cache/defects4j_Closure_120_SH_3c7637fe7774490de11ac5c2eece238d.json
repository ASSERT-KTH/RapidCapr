{
    "patch": "        if (ref.isPropertySet() || ref.isIncDec()) {\n          return false;\n        }\n      }\n      if (ref.isVarDeclaration()) {\n        for (int i = 1; i < references.size(); i++) {\n          if (references.get(i).isAssignmentToSameName()) {\n            return false;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..7670e6e5 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,15 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        if (ref.isPropertySet() || ref.isIncDec()) {\n+          return false;\n+        }\n+      }\n+      if (ref.isVarDeclaration()) {\n+        for (int i = 1; i < references.size(); i++) {\n+          if (references.get(i).isAssignmentToSameName()) {\n+            return false;\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}