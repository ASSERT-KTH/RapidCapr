{
    "patch": "public double getTypedPercent(String json) {\n    try {\n        JSONObject jsonObject = new JSONObject(json);\n        int typedCount = jsonObject.getInt(\"typed\");\n        int totalCount = jsonObject.getInt(\"totalCount\");\n        double typedPercent = ((double) typedCount / totalCount) * 100;\n        return typedPercent;\n    } catch (JSONException e) {\n        e.printStackTrace();\n        return 0.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..e6e56f08 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String json) {\n+    try {\n+        JSONObject jsonObject = new JSONObject(json);\n+        int typedCount = jsonObject.getInt(\"typed\");\n+        int totalCount = jsonObject.getInt(\"totalCount\");\n+        double typedPercent = ((double) typedCount / totalCount) * 100;\n+        return typedPercent;\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+        return 0.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}