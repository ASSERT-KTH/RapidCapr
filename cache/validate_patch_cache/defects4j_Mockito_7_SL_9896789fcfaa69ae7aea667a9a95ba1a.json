{
    "patch": "if (typeVariable.getGenericDeclaration() instanceof Class) {\n    Type type = ((Class) typeVariable.getGenericDeclaration()).getTypeParameters()[0].getBounds()[0];\n    if (type instanceof TypeVariable) {\n        registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) type));\n    } else {\n        registerTypeVariablesOn(type);\n    }\n} else {\n    Type actualType = getActualTypeArgumentFor(typeVariable);\n    if (actualType != null) {\n        registerTypeVariablesOn(actualType);\n    } else {\n        for (Type type : typeVariable.getBounds()) {\n            if (type instanceof TypeVariable) {\n                registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) type));\n            } else {\n                registerTypeVariablesOn(type);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..beb9a7ece 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,32 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if (typeVariable.getGenericDeclaration() instanceof Class) {\n+    Type type = ((Class) typeVariable.getGenericDeclaration()).getTypeParameters()[0].getBounds()[0];\n+    if (type instanceof TypeVariable) {\n+        registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) type));\n+    } else {\n+        registerTypeVariablesOn(type);\n+    }\n+} else {\n+    Type actualType = getActualTypeArgumentFor(typeVariable);\n+    if (actualType != null) {\n+        registerTypeVariablesOn(actualType);\n+    } else {\n+        for (Type type : typeVariable.getBounds()) {\n+            if (type instanceof TypeVariable) {\n+                registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) type));\n+            } else {\n+                registerTypeVariablesOn(type);\n+            }\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}