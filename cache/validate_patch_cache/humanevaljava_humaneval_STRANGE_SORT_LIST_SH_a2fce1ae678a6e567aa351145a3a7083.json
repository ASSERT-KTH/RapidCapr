{
    "patch": " if (lst.size() < 2) {\n            result.addAll(lst);\n        } else {\n            int mid = lst.size() / 2;\n            List<Integer> left = strange_sort_list(lst.subList(0, mid));\n            List<Integer> right = strange_sort_list(lst.subList(mid, lst.size()));\n            if (switched) {\n                result.addAll(left);\n                result.addAll(right);\n            } else {\n                result.addAll(right);\n                result.addAll(left);\n            }\n        }\n        switched = !switched;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\nindex 094f5de..c265ae1 100644\n--- a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n+++ b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n@@ -24,6 +24,21 @@ public class STRANGE_SORT_LIST {\n             } else {\n                 result.add(Collections.max(lst));\n             }\n+ if (lst.size() < 2) {\n+            result.addAll(lst);\n+        } else {\n+            int mid = lst.size() / 2;\n+            List<Integer> left = strange_sort_list(lst.subList(0, mid));\n+            List<Integer> right = strange_sort_list(lst.subList(mid, lst.size()));\n+            if (switched) {\n+                result.addAll(left);\n+                result.addAll(right);\n+            } else {\n+                result.addAll(right);\n+                result.addAll(left);\n+            }\n+        }\n+        switched = !switched;\n         }\n         return result;\n     }",
    "result_reason": "",
    "test_result": "FAIL"
}