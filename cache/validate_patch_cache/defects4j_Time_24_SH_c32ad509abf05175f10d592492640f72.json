{
    "patch": "            // be more specific about which field failed\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n            }\n            throw e;\n        } catch (RuntimeException e) {\n            // improve the exception message\n            String message = \"Unexpected exception\";\n            if (text != null) {\n                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n            }\n            throw new IllegalArgumentException(message, e);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d0d01902 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,18 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            // be more specific about which field failed\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n+            }\n+            throw e;\n+        } catch (RuntimeException e) {\n+            // improve the exception message\n+            String message = \"Unexpected exception\";\n+            if (text != null) {\n+                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n+            }\n+            throw new IllegalArgumentException(message, e);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}