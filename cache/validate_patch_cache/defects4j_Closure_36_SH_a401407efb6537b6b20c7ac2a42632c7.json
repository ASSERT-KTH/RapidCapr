{
    "patch": "          // Issue 668: Don't inline singleton getter methods calls\n          // as this confused class removing logic.\n          if (isSingletonGetterMethodCall(convention, callNode)) {\n            return false;\n          }\n        }\n      }\n\n      return canMoveAggressively(value) ||\n          canMoveModerately(initialization, reference);\n    }\n    \n    private boolean isSingletonGetterMethodCall(CodingConvention convention, Node callNode) {\n      String methodName = convention.getSingletonGetterClassName(callNode);\n      if (methodName == null) {\n        return false;\n      }\n\n      Node callee = callNode.getFirstChild();\n      if (!callee.isGetProp() || !callee.getLastChild().getString().equals(methodName)) {\n        return false;\n      }\n\n      return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..007088fe 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,30 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          // Issue 668: Don't inline singleton getter methods calls\n+          // as this confused class removing logic.\n+          if (isSingletonGetterMethodCall(convention, callNode)) {\n+            return false;\n+          }\n+        }\n+      }\n+\n+      return canMoveAggressively(value) ||\n+          canMoveModerately(initialization, reference);\n+    }\n+    \n+    private boolean isSingletonGetterMethodCall(CodingConvention convention, Node callNode) {\n+      String methodName = convention.getSingletonGetterClassName(callNode);\n+      if (methodName == null) {\n+        return false;\n+      }\n+\n+      Node callee = callNode.getFirstChild();\n+      if (!callee.isGetProp() || !callee.getLastChild().getString().equals(methodName)) {\n+        return false;\n+      }\n+\n+      return true;\n         }\n       }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}