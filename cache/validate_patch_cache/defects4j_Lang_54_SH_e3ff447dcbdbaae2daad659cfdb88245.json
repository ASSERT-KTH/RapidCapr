{
    "patch": "        if (len >= 7 && str.charAt(2) == '_' && !Character.isUpperCase(ch3)) {\n           throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len >= 7 && str.charAt(5) == '_' && !Character.isUpperCase(str.charAt(6))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len > 7 && str.indexOf('_', 7) != -1) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 7 && str.charAt(5) == '_') {\n            char ch6 = str.charAt(6);\n            if (Character.isDigit(ch6)) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len >= 7 && str.charAt(2) == '_' && str.charAt(5) == '_') {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            char ch6 = str.charAt(6);\n            if (Character.isUpperCase(ch3) && Character.isUpperCase(ch4) && Character.isDigit(ch6)) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len == 5) {\n            return new Locale(str, \"\");\n        } else if (len == 2) {\n            return new Locale(str);\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..0599949e 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,38 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        if (len >= 7 && str.charAt(2) == '_' && !Character.isUpperCase(ch3)) {\n+           throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len >= 7 && str.charAt(5) == '_' && !Character.isUpperCase(str.charAt(6))) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len > 7 && str.indexOf('_', 7) != -1) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 7 && str.charAt(5) == '_') {\n+            char ch6 = str.charAt(6);\n+            if (Character.isDigit(ch6)) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else if (len >= 7 && str.charAt(2) == '_' && str.charAt(5) == '_') {\n+            char ch3 = str.charAt(3);\n+            char ch4 = str.charAt(4);\n+            char ch6 = str.charAt(6);\n+            if (Character.isUpperCase(ch3) && Character.isUpperCase(ch4) && Character.isDigit(ch6)) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else if (len == 5) {\n+            return new Locale(str, \"\");\n+        } else if (len == 2) {\n+            return new Locale(str);\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: variable ch3 is already defined in method toLocale(String)",
    "test_result": "ERROR"
}