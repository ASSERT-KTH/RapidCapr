{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n\n    int strLength = str.length();\n    int searchLength = searchChars.length;\n\n    Set<Integer> set = new HashSet<Integer>();\n    for (char c : searchChars) {\n        if (Character.isHighSurrogate(c)) {\n            int codePoint = Character.codePointAt(searchChars, set.size());\n            set.add(codePoint);\n            set.add(Character.toChars(codePoint)[1]);\n        } else {\n            set.add((int) c);\n        }\n    }\n    \n    for (int i = 0; i < strLength; ) {\n        int codePoint = str.codePointAt(i);\n        i += Character.charCount(codePoint);\n        if (set.contains(codePoint)) {\n            return true;\n        }\n    }\n\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..b092abaf 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+\n+    int strLength = str.length();\n+    int searchLength = searchChars.length;\n+\n+    Set<Integer> set = new HashSet<Integer>();\n+    for (char c : searchChars) {\n+        if (Character.isHighSurrogate(c)) {\n+            int codePoint = Character.codePointAt(searchChars, set.size());\n+            set.add(codePoint);\n+            set.add(Character.toChars(codePoint)[1]);\n+        } else {\n+            set.add((int) c);\n+        }\n+    }\n+    \n+    for (int i = 0; i < strLength; ) {\n+        int codePoint = str.codePointAt(i);\n+        i += Character.charCount(codePoint);\n+        if (set.contains(codePoint)) {\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}