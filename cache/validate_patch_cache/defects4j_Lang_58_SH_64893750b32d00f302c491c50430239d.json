{
    "patch": "if (lastChar == 'l' || lastChar == 'L') {\n    if (dec == null && exp == null && ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1)))\n            || Character.isDigit(numeric.charAt(0)))) {\n        try {\n            return createLong(numeric);\n        } catch (NumberFormatException nfe) {\n            // Too big for a long\n        }\n        return createBigInteger(numeric);\n    }\n    throw new NumberFormatException(str + \" is not a valid number.\");\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..e66212a4 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,18 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+if (lastChar == 'l' || lastChar == 'L') {\n+    if (dec == null && exp == null && ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1)))\n+            || Character.isDigit(numeric.charAt(0)))) {\n+        try {\n+            return createLong(numeric);\n+        } catch (NumberFormatException nfe) {\n+            // Too big for a long\n+        }\n+        return createBigInteger(numeric);\n+    }\n+    throw new NumberFormatException(str + \" is not a valid number.\");\n+}\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}