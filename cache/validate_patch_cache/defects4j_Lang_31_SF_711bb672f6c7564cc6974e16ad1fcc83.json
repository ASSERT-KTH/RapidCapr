{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strSize = str.length();\n    int searchSize = searchChars.length;\n    int i = 0;\n    int j;\n    char[] chs = str.toCharArray();\n    while (i < strSize) {\n        char ch = chs[i];\n        if (searchChars[0] == ch) { // Only perform search if first char matches\n            j = 1;\n            while (j < searchSize && (i + j) < strSize) {\n                if (searchChars[j] != chs[i+j]) {\n                    break;\n                }\n                j++;\n            }\n            if (j == searchSize) {\n                return true;\n            }\n        }\n        i += Character.charCount(ch);\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..d498845b 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strSize = str.length();\n+    int searchSize = searchChars.length;\n+    int i = 0;\n+    int j;\n+    char[] chs = str.toCharArray();\n+    while (i < strSize) {\n+        char ch = chs[i];\n+        if (searchChars[0] == ch) { // Only perform search if first char matches\n+            j = 1;\n+            while (j < searchSize && (i + j) < strSize) {\n+                if (searchChars[j] != chs[i+j]) {\n+                    break;\n+                }\n+                j++;\n+            }\n+            if (j == searchSize) {\n+                return true;\n+            }\n+        }\n+        i += Character.charCount(ch);\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}