{
    "patch": "public ReturnValue execute(Argument[] args) {\n    // Check if there are no arguments passed, if yes then return empty iterable.\n    if (args.length == 0) {\n        return new ReturnValueImpl(Collections.emptyList());\n    }\n    \n    // Otherwise, create a list of the arguments passed and return it as iterable. \n    List<Object> argList = new ArrayList<>();\n    for (Argument arg : args) {\n        argList.add(arg.getValue());\n    }\n    return new ReturnValueImpl(argList);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}