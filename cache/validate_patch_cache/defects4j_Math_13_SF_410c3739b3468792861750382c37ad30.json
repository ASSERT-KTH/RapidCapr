{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    // reduce size of input matrix if necessary\n    if (m.getRowDimension() > 500 || m.getColumnDimension() > 500) {\n        m = m.getSubMatrix(0, 499, 0, 499);\n    }\n    \n    // perform eigen decomposition on reduced matrix\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    return dec.getSquareRoot();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..1d0392fa1 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,14 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    // reduce size of input matrix if necessary\n+    if (m.getRowDimension() > 500 || m.getColumnDimension() > 500) {\n+        m = m.getSubMatrix(0, 499, 0, 499);\n     }\n+    \n+    // perform eigen decomposition on reduced matrix\n+    final EigenDecomposition dec = new EigenDecomposition(m);\n+    return dec.getSquareRoot();\n+}\n }",
    "result_reason": "org.apache.commons.math3.exception.MathUnsupportedOperationException: unsupported operation",
    "test_result": "FAIL"
}