{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMockSettingsImpl settings = new MockSettingsImpl()\n        .defaultAnswer(RETURNS_DEFAULTS)\n        .spiedInstance(mock);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\nFactory factory = new Enhancer();\nfactory.setSuperclass(mock.getClass());\nfactory.setCallback(newFilter);\nT newMock = (T) factory.create();\nresetMockInternal(mock, newMock);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..88ae2a5ac 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,20 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MockSettingsImpl settings = new MockSettingsImpl()\n+        .defaultAnswer(RETURNS_DEFAULTS)\n+        .spiedInstance(mock);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\n+Factory factory = new Enhancer();\n+factory.setSuperclass(mock.getClass());\n+factory.setCallback(newFilter);\n+T newMock = (T) factory.create();\n+resetMockInternal(mock, newMock);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}