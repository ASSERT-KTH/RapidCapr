{
    "patch": "public static String string_xor(String a, String b) {\n    StringBuilder result = new StringBuilder();\n    int length = Math.max(a.length(), b.length()); // take maximum length of strings\n    for (int i = 0; i < length; i++) {\n        char charA = (i >= a.length()) ? '0' : a.charAt(i); // assume missing characters are '0'\n        char charB = (i >= b.length()) ? '0' : b.charAt(i);\n        result.append((charA == charB) ? \"0\" : \"1\");\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRING_XOR.java b/src/main/java/humaneval/buggy/STRING_XOR.java\nindex a57100f..d83f437 100644\n--- a/src/main/java/humaneval/buggy/STRING_XOR.java\n+++ b/src/main/java/humaneval/buggy/STRING_XOR.java\n@@ -1,13 +1,14 @@\n package humaneval.buggy;\n \n public class STRING_XOR {\n-    public static String string_xor(String a, String b){\n-        String result = \"\";\n-        for (int i = 0; i < a.length(); i += 1){\n-            if (a.charAt(i) == b.charAt(i)){\n-                result += \"0\";\n-            }\n-        }\n-        return result;\n+public static String string_xor(String a, String b) {\n+    StringBuilder result = new StringBuilder();\n+    int length = Math.max(a.length(), b.length()); // take maximum length of strings\n+    for (int i = 0; i < length; i++) {\n+        char charA = (i >= a.length()) ? '0' : a.charAt(i); // assume missing characters are '0'\n+        char charB = (i >= b.length()) ? '0' : b.charAt(i);\n+        result.append((charA == charB) ? \"0\" : \"1\");\n     }\n+    return result.toString();\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}