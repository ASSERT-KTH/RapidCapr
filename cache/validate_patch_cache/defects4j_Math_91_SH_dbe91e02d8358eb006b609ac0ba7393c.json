{
    "patch": "public int compareTo(Fraction object) {\n    // Step 1: find the difference between the two fractions\n    long diffNum = (long) numerator * object.denominator - (long) object.numerator * denominator;\n\n    // Step 2: check the sign of the difference\n    if (diffNum < 0) {\n        return -1; // first fraction is less than the second\n    } else if (diffNum > 0) {\n        return 1; // first fraction is greater than the second\n    } else {\n        return 0; // the two fractions are equal\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..c3df5eb2c 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,19 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+public int compareTo(Fraction object) {\n+    // Step 1: find the difference between the two fractions\n+    long diffNum = (long) numerator * object.denominator - (long) object.numerator * denominator;\n+\n+    // Step 2: check the sign of the difference\n+    if (diffNum < 0) {\n+        return -1; // first fraction is less than the second\n+    } else if (diffNum > 0) {\n+        return 1; // first fraction is greater than the second\n+    } else {\n+        return 0; // the two fractions are equal\n+    }\n+}\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}