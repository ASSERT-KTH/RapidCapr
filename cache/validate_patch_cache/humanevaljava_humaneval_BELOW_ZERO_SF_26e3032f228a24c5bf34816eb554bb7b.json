{
    "patch": "public static boolean below_zero(List<Integer> operations) {\n    int balance = 0;\n    Iterator<Integer> iter = operations.iterator();\n    do {\n        balance += iter.next();\n    } while (iter.hasNext() && balance >= 0);\n    return balance < 0;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/BELOW_ZERO.java b/src/main/java/humaneval/buggy/BELOW_ZERO.java\nindex 556ea41..f1d022b 100644\n--- a/src/main/java/humaneval/buggy/BELOW_ZERO.java\n+++ b/src/main/java/humaneval/buggy/BELOW_ZERO.java\n@@ -3,14 +3,12 @@ package humaneval.buggy;\n import java.util.List;\n \n public class BELOW_ZERO {\n-    public static boolean below_zero(List<Integer> operations) {\n-        int balance = 0;\n-        for (Integer op : operations){\n-            balance += op;\n-            if (balance > 0){\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n+public static boolean below_zero(List<Integer> operations) {\n+    int balance = 0;\n+    Iterator<Integer> iter = operations.iterator();\n+    do {\n+        balance += iter.next();\n+    } while (iter.hasNext() && balance >= 0);\n+    return balance < 0;\n+}\n }",
    "result_reason": " /tmp/humaneval-BELOW_ZERO/src/main/java/humaneval/buggy/BELOW_ZERO.java:[8,5] cannot find symbol",
    "test_result": "ERROR"
}