{
    "patch": "\n            if (!word.isEmpty() && ((word.length() == 2) || (!isComposite(word.length())))) {\n                result += word + \" \";\n            }\n        }\n        return result.trim();\n    }\n\n    public static boolean isComposite(int n) {\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java b/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java\nindex 2907f3f..8bcd6ef 100644\n--- a/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java\n+++ b/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java\n@@ -24,6 +24,22 @@ public class WORDS_IN_SENTENCE {\n \n         for (String word : sentence.split(\" \")) {\n             int flag = 0;\n+\n+            if (!word.isEmpty() && ((word.length() == 2) || (!isComposite(word.length())))) {\n+                result += word + \" \";\n+            }\n+        }\n+        return result.trim();\n+    }\n+\n+    public static boolean isComposite(int n) {\n+        for (int i = 2; i <= Math.sqrt(n); i++) {\n+            if (n % i == 0) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n             for (int i = 2; i < word.length(); i += 1){\n                 if (word.length() % i == 0) flag = 1;\n             }",
    "result_reason": " /tmp/humaneval-WORDS_IN_SENTENCE/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java:[43,13] illegal start of type",
    "test_result": "ERROR"
}