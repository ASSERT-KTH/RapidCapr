{
    "patch": "@Override\npublic ReturnValue execute(ParamWrapper<Iterable<Number>> paramValues) {\n   if (paramValues == null || paramValues.getValue() == null) {\n      return new ReturnValueImpl<>(new ArrayList<>());\n   }\n   Iterator<Number> it = paramValues.getValue().iterator();\n   List<Number> result = new ArrayList<>();\n   while (it.hasNext()) {\n      Number num = it.next();\n      if (num != null && num.intValue() >= 0) {\n         result.add(num);\n      }\n   }\n   return new ReturnValueImpl<>(result);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}