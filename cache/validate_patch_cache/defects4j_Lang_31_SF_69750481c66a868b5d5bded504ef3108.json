{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int len = sequence.length();\n    final int searchLen = searchChars.length;\n    final int[] chars = new int[Character.MAX_VALUE + 1];\n    for (int i = 0; i < len; i++) {\n        final char ch = sequence.charAt(i);\n        if (ch < chars.length) {\n            chars[ch]++;\n        }\n    }\n    for (int i = 0; i < searchLen; i++) {\n        final int ch = searchChars[i];\n        if (ch < chars.length && chars[ch] > 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\npublic static boolean isEmpty(final CharSequence cs) {\n    return cs == null || cs.length() == 0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..1b86680d 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int len = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int[] chars = new int[Character.MAX_VALUE + 1];\n+    for (int i = 0; i < len; i++) {\n+        final char ch = sequence.charAt(i);\n+        if (ch < chars.length) {\n+            chars[ch]++;\n+        }\n+    }\n+    for (int i = 0; i < searchLen; i++) {\n+        final int ch = searchChars[i];\n+        if (ch < chars.length && chars[ch] > 0) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+public static boolean isEmpty(final CharSequence cs) {\n+    return cs == null || cs.length() == 0;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}