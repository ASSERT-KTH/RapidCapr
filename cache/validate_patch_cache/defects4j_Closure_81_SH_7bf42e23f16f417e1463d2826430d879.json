{
    "patch": "Name name = functionNode.getFunctionName();\nNode node;\nif (name == null) {\n  node = newNode(Token.FUNCTION);\n} else {\n  node = newNode(Token.FUNCTION, transform(name));\n}\nNode lp = newNode(Token.LP);\nlp.setLineno(functionNode.getLineno());\nlp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLp()));\nfor (AstNode param : functionNode.getParams()) {\n  lp.addChildToBack(transform(param));\n}\nnode.addChildToBack(lp);\nNode bodyNode = transform(functionNode.getBody());\nparseDirectives(bodyNode);\nnode.addChildToBack(bodyNode);\nreturn node;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..190a9334 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,24 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+Node node;\n+if (name == null) {\n+  node = newNode(Token.FUNCTION);\n+} else {\n+  node = newNode(Token.FUNCTION, transform(name));\n+}\n+Node lp = newNode(Token.LP);\n+lp.setLineno(functionNode.getLineno());\n+lp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLp()));\n+for (AstNode param : functionNode.getParams()) {\n+  lp.addChildToBack(transform(param));\n+}\n+node.addChildToBack(lp);\n+Node bodyNode = transform(functionNode.getBody());\n+parseDirectives(bodyNode);\n+node.addChildToBack(bodyNode);\n+return node;\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}