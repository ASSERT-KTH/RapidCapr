{
    "patch": "import java.util.*;\n\npublic class IS_NESTED {\n    public static boolean is_nested(String brackets) {\n        Stack<Integer> opening_brackets = new Stack<>();\n        int cnt = 0, l = brackets.length();\n\n        for (int i = 0; i < l; i++) {\n            char c = brackets.charAt(i);\n            if (c == '[') {\n                opening_brackets.push(i);\n            } else if (c == ']') {\n                int idx = opening_brackets.pop();\n                cnt += i - idx - 1;\n                if (cnt >= 2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_NESTED.java b/src/main/java/humaneval/buggy/IS_NESTED.java\nindex 28b9704..79f8e1c 100644\n--- a/src/main/java/humaneval/buggy/IS_NESTED.java\n+++ b/src/main/java/humaneval/buggy/IS_NESTED.java\n@@ -17,22 +17,27 @@ import java.util.Collections;\n \n  */\n \n+public class IS_NESTED {\n+import java.util.*;\n+\n public class IS_NESTED {\n     public static boolean is_nested(String brackets) {\n-        ArrayList<Integer> opening_brackets = new ArrayList<>();\n-        ArrayList<Integer> closing_brackets = new ArrayList<>();\n-        for(int i = 0; i < brackets.length(); i++) {\n-            if(brackets.charAt(i) == '[') opening_brackets.add(i);\n-            else closing_brackets.add(i);\n-        }\n-        Collections.reverse(opening_brackets);\n-        int cnt = 0, i = 0, l = opening_brackets.size();\n-        for(int idx : closing_brackets) {\n-            if(i < l || idx >= opening_brackets.get(i)) {\n-                i++;\n-                cnt++;\n+        Stack<Integer> opening_brackets = new Stack<>();\n+        int cnt = 0, l = brackets.length();\n+\n+        for (int i = 0; i < l; i++) {\n+            char c = brackets.charAt(i);\n+            if (c == '[') {\n+                opening_brackets.push(i);\n+            } else if (c == ']') {\n+                int idx = opening_brackets.pop();\n+                cnt += i - idx - 1;\n+                if (cnt >= 2) {\n+                    return true;\n+                }\n             }\n         }\n-        return cnt >= 2;\n+        return false;\n     }\n }\n+}",
    "result_reason": " /tmp/humaneval-IS_NESTED/src/main/java/humaneval/buggy/IS_NESTED.java:[21,1] illegal start of type",
    "test_result": "ERROR"
}