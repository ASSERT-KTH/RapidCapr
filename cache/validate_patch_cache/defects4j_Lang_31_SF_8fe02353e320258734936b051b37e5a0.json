{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int strLen = str.length();\n    final int strEnd = strLen - 1;\n    final int searchLen = searchChars.length;\n    final int searchEnd = searchLen - 1;\n    for (int i = 0; i < strLen; i++) {\n        final char ch = str.charAt(i);\n        if (isHighSurrogate(ch)) {\n            if (i < strEnd) {\n                i++;\n                final char ch2 = str.charAt(i);\n                if (isLowSurrogate(ch2)) {\n                    if (contains(searchChars, Character.toCodePoint(ch, ch2))) {\n                        return true;\n                    }\n                }\n            }\n        } else if (contains(searchChars, ch)) {\n            return true;\n        }\n    }\n    return false;\n}\n\npublic static boolean isHighSurrogate(char ch) {\n    return (ch >= MIN_HIGH_SURROGATE) && (ch <= MAX_HIGH_SURROGATE);\n}\n\npublic static boolean isLowSurrogate(char ch) {\n    return (ch >= MIN_LOW_SURROGATE) && (ch <= MAX_LOW_SURROGATE);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..4da88c9e 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,40 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int strLen = str.length();\n+    final int strEnd = strLen - 1;\n+    final int searchLen = searchChars.length;\n+    final int searchEnd = searchLen - 1;\n+    for (int i = 0; i < strLen; i++) {\n+        final char ch = str.charAt(i);\n+        if (isHighSurrogate(ch)) {\n+            if (i < strEnd) {\n+                i++;\n+                final char ch2 = str.charAt(i);\n+                if (isLowSurrogate(ch2)) {\n+                    if (contains(searchChars, Character.toCodePoint(ch, ch2))) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        } else if (contains(searchChars, ch)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+public static boolean isHighSurrogate(char ch) {\n+    return (ch >= MIN_HIGH_SURROGATE) && (ch <= MAX_HIGH_SURROGATE);\n+}\n+\n+public static boolean isLowSurrogate(char ch) {\n+    return (ch >= MIN_LOW_SURROGATE) && (ch <= MAX_LOW_SURROGATE);\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}