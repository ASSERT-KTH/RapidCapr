{
    "patch": "if (value.isFunction()) {\n  Node callNode = reference.getParent();\n  if (callNode.isCall()) {\n    if (callNode.getParent().isExprResult()\n        && callNode.getParent().hasOneChild()\n        && callNode.getParent().getFirstChild().isAssign()) {\n      Node assignmentValue = callNode.getFirstChild().getLastChild();\n      if (assignmentValue == value) {\n        // Don't inline singleton getter methods calls as this confused class removing logic.\n        return false;\n      }\n    } else {\n      // Don't inline functions into other function calls, as it could affect the function's scope.\n      return false;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..ec4f3bbe 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,23 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction()) {\n+  Node callNode = reference.getParent();\n+  if (callNode.isCall()) {\n+    if (callNode.getParent().isExprResult()\n+        && callNode.getParent().hasOneChild()\n+        && callNode.getParent().getFirstChild().isAssign()) {\n+      Node assignmentValue = callNode.getFirstChild().getLastChild();\n+      if (assignmentValue == value) {\n+        // Don't inline singleton getter methods calls as this confused class removing logic.\n+        return false;\n+      }\n+    } else {\n+      // Don't inline functions into other function calls, as it could affect the function's scope.\n+      return false;\n+    }\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: variable callNode is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}