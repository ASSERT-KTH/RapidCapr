{
    "patch": "      // Gather arg nodes from the arg list\n      List<Node> args = new ArrayList<>();\n      int i = 0;\n      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext(), ++i) {\n        args.add(arg);\n      }\n\n      // Strip unreferenced args off the end of the function declaration.\n      for (i = args.size() - 1; i >= 0; --i) {\n        Node arg = args.get(i);\n        Var var = fnScope.getVar(arg.getString());\n        if (!referenced.contains(var)) {\n          argList.removeChild(arg);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..87c7bded 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,19 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // Gather arg nodes from the arg list\n+      List<Node> args = new ArrayList<>();\n+      int i = 0;\n+      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext(), ++i) {\n+        args.add(arg);\n+      }\n+\n+      // Strip unreferenced args off the end of the function declaration.\n+      for (i = args.size() - 1; i >= 0; --i) {\n+        Node arg = args.get(i);\n+        Var var = fnScope.getVar(arg.getString());\n+        if (!referenced.contains(var)) {\n+          argList.removeChild(arg);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}