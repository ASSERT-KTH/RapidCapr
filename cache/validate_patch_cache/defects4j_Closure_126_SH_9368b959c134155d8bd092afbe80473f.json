{
    "patch": "    // Just a 'try/catch'.\n    if (n.isTry()) {\n      Node tryBlock = n.getFirstChild();\n      tryMinimizeExits(tryBlock, exitType, labelName);\n      \n      Node catchBlock = tryBlock.getNext();\n      if (catchBlock != null) {\n        // Look for children of the catch block.\n        Node catchCodeBlock = catchBlock.getFirstChild().getNext();\n        tryMinimizeExits(catchCodeBlock, exitType, labelName);\n      }\n      \n      return;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..b16ea5f7 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,10 +138,20 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n+    // Just a 'try/catch'.\n+    if (n.isTry()) {\n+      Node tryBlock = n.getFirstChild();\n+      tryMinimizeExits(tryBlock, exitType, labelName);\n+      \n+      Node catchBlock = tryBlock.getNext();\n+      if (catchBlock != null) {\n+        // Look for children of the catch block.\n+        Node catchCodeBlock = catchBlock.getFirstChild().getNext();\n+        tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n+      \n+      return;\n+    }\n     }\n \n     // Just a 'label'.",
    "result_reason": "error: variable tryBlock is already defined in method tryMinimizeExits(Node,int,String)",
    "test_result": "ERROR"
}