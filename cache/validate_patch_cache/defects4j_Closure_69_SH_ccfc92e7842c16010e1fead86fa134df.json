{
    "patch": "      JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n\n      if (functionJSDocInfo != null && functionJSDocInfo.hasThisType()) {\n        Node parent = n.getParent();\n        if (NodeUtil.isNormalGet(parent) || NodeUtil.isNormalGetElem(parent)) {\n          Node left = parent.getFirstChild();\n          JSType leftType = getJSType(left);\n          if (!leftType.isNullType() && !leftType.isVoidType() && !leftType.isUnknownType()\n              && !leftType.equals(getNativeType(OBJECT_TYPE))) {\n            report(t, n, WRONG_THIS, childType.toString());\n          }\n        } else {\n          report(t, n, INVALID_THIS, childType.toString());\n        }\n      }\n\n      visitParameterList(t, n, functionType);\n      ensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..f9afaa76 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n+\n+      if (functionJSDocInfo != null && functionJSDocInfo.hasThisType()) {\n+        Node parent = n.getParent();\n+        if (NodeUtil.isNormalGet(parent) || NodeUtil.isNormalGetElem(parent)) {\n+          Node left = parent.getFirstChild();\n+          JSType leftType = getJSType(left);\n+          if (!leftType.isNullType() && !leftType.isVoidType() && !leftType.isUnknownType()\n+              && !leftType.equals(getNativeType(OBJECT_TYPE))) {\n+            report(t, n, WRONG_THIS, childType.toString());\n+          }\n+        } else {\n+          report(t, n, INVALID_THIS, childType.toString());\n+        }\n+      }\n+\n+      visitParameterList(t, n, functionType);\n+      ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: variable functionJSDocInfo is already defined in method visitCall(NodeTraversal,Node)",
    "test_result": "ERROR"
}