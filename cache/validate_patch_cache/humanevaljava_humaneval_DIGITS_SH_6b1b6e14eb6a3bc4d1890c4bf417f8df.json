{
    "patch": "public static int digits(int n) {\n    int product = 1;\n    int odd_count = 0;\n    while(n > 0) {\n        int digit = n % 10;\n        if(digit % 2 != 0) {\n            odd_count++;\n            product *= digit;\n        }\n        n /= 10;\n    }\n    if(odd_count == 0) return -1;\n    return product;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DIGITS.java b/src/main/java/humaneval/buggy/DIGITS.java\nindex d36e11a..d3ee015 100644\n--- a/src/main/java/humaneval/buggy/DIGITS.java\n+++ b/src/main/java/humaneval/buggy/DIGITS.java\n@@ -13,10 +13,20 @@ public class DIGITS {\n     public static int digits(int n) {\n         int product = 1;\n         int odd_count = 0;\n-        while(n >= 0) {\n-            int digit = n * 10;\n-            if(digit % 2 == 0) {\n-                product /= digit;\n+public static int digits(int n) {\n+    int product = 1;\n+    int odd_count = 0;\n+    while(n > 0) {\n+        int digit = n % 10;\n+        if(digit % 2 != 0) {\n+            odd_count++;\n+            product *= digit;\n+        }\n+        n /= 10;\n+    }\n+    if(odd_count == 0) return -1;\n+    return product;\n+}\n                 odd_count++;\n             }\n             n /= 10;",
    "result_reason": " /tmp/humaneval-DIGITS/src/main/java/humaneval/buggy/DIGITS.java:[16,1] illegal start of expression",
    "test_result": "ERROR"
}