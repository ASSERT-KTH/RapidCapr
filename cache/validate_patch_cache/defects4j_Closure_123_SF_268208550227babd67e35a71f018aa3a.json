{
    "patch": "public void testPrintInOperatorInForLoop() {\n    String expected = \"for(a=c?0:[0 in d];;)foo()\";\n    String a = \"foo\";\n    String b = \"bar\";\n    String c = \"true\";\n    String d = \"[]\";\n    assertEquals(expected,\n            \"for(var a=\" + c + \"?0:(0 in \" + d + \");;)\"+ a + \"()\");\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..958139da 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,15 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void testPrintInOperatorInForLoop() {\n+    String expected = \"for(a=c?0:[0 in d];;)foo()\";\n+    String a = \"foo\";\n+    String b = \"bar\";\n+    String c = \"true\";\n+    String d = \"[]\";\n+    assertEquals(expected,\n+            \"for(var a=\" + c + \"?0:(0 in \" + d + \");;)\"+ a + \"()\");\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}