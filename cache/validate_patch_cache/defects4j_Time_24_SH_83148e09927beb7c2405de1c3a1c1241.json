{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                int year = savedFields[i].iValue;\n                int weeksInYear = iChrono.weeksInYear(year);\n                if (savedFields[i].iDurationFieldValue >= weeksInYear + 1 || savedFields[i].iDurationFieldValue < 1) {\n                    throw new IllegalFieldValueException(\n                            savedFields[i].iField.getType(), savedFields[i].iDurationFieldValue, 1, weeksInYear);\n                }\n                LocalDate date = iChrono.weekyearWeekOfWeekyear().set(year, savedFields[i].iDurationFieldValue, iChrono.getWeekOfWeekyear(date()));\n                return date.getLocalMillis();",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fe7e43fe 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                int year = savedFields[i].iValue;\n+                int weeksInYear = iChrono.weeksInYear(year);\n+                if (savedFields[i].iDurationFieldValue >= weeksInYear + 1 || savedFields[i].iDurationFieldValue < 1) {\n+                    throw new IllegalFieldValueException(\n+                            savedFields[i].iField.getType(), savedFields[i].iDurationFieldValue, 1, weeksInYear);\n+                }\n+                LocalDate date = iChrono.weekyearWeekOfWeekyear().set(year, savedFields[i].iDurationFieldValue, iChrono.getWeekOfWeekyear(date()));\n+                return date.getLocalMillis();\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}