{
    "patch": "        if (v instanceof Comparable) {\n            return getCumPct((Comparable<?>) v);\n        } else if (v == null) {\n            return 0.0;\n        } else {\n            return 0.0;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..02c270894 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,13 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n-    public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n-    }\n+        if (v instanceof Comparable) {\n+            return getCumPct((Comparable<?>) v);\n+        } else if (v == null) {\n+            return 0.0;\n+        } else {\n+            return 0.0;\n+        }\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}