{
    "patch": "if (name.globalSets == 1 && (name.localSets + name.aliasingGets) == 0 && (name.props == null || name.props.stream().allMatch(prop -> (prop.globalSets == 0 || (prop.localSets + prop.aliasingGets) > 0)) && !name.props.isEmpty()) &&",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..35b8085e 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,7 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+if (name.globalSets == 1 && (name.localSets + name.aliasingGets) == 0 && (name.props == null || name.props.stream().allMatch(prop -> (prop.globalSets == 0 || (prop.localSets + prop.aliasingGets) > 0)) && !name.props.isEmpty()) &&\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}