{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.FastMath;\n\npublic class GammaFunction {\n\n    public static double regularizedGamma(double a, double x) {\n        int maxIterations = 1000;\n        double eps = 10e-15;\n        double sum = 0;\n        double term = 1;\n        double n = 0;\n\n        while (FastMath.abs(term / sum) > eps && n < maxIterations) {\n            term *= x / (a + n);\n            sum += term;\n            n++;\n        }\n\n        double gamma = Gamma.gamma(a);\n        double regularizedGamma = sum * FastMath.exp(-x) * FastMath.pow(x, a) / gamma;\n\n        return regularizedGamma;\n    }\n\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..552183f0a 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,31 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.FastMath;\n+\n+public class GammaFunction {\n+\n+    public static double regularizedGamma(double a, double x) {\n+        int maxIterations = 1000;\n+        double eps = 10e-15;\n+        double sum = 0;\n+        double term = 1;\n+        double n = 0;\n+\n+        while (FastMath.abs(term / sum) > eps && n < maxIterations) {\n+            term *= x / (a + n);\n+            sum += term;\n+            n++;\n+        }\n+\n+        double gamma = Gamma.gamma(a);\n+        double regularizedGamma = sum * FastMath.exp(-x) * FastMath.pow(x, a) / gamma;\n+\n+        return regularizedGamma;\n+    }\n+\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}