{
    "patch": "            StringBuffer output = new StringBuffer();\n            boolean success=true;\n\n            output.append(encoder.encode(testLine));\n            output.append(\"\\n\");\n\n            try {\n                String result = decoder.decode(output.toString().getBytes(\"ISO-8859-1\"));\n                if (!result.equals(testLine)) {\n                    success=false;\n                    System.out.println(testName + \": Error in ISO-8859-1 round trip; expected \\\"\"+testLine+\"\\\", got \\\"\"+result+\"\\\"\");\n                }\n            } catch (Throwable t) {\n                success=false;\n                t.printStackTrace();\n                System.out.println(testName + \": Exception caught during ISO-8859-1 round trip test\");\n                System.out.println(t.toString());\n            }\n\n            try {\n                String result = decoder.decode(output.toString());\n                if (!result.equals(testLine)) {\n                    success=false;\n                    System.out.println(testName + \": Error in unicode round trip; expected \\\"\"+testLine+\"\\\", got \\\"\"+result+\"\\\"\");\n                }\n            } catch (Throwable t) {\n                success=false;\n                t.printStackTrace();\n                System.out.println(testName + \": Exception caught during unicode round trip test\");\n                System.out.println(t.toString());\n            }\n\n            assertTrue(\"One or more errors detected\", success);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}