{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int strLen = sequence.length();\n    final int searchLen = searchChars.length;\n    final int strLast = strLen - 1;\n    final int searchLast = searchLen - 1;\n    outer:\n    for (int i = 0; i < strLen; i++) {\n        final char ch = sequence.charAt(i);\n        if (Character.isHighSurrogate(ch) && i < strLast) {\n            final char ch2 = sequence.charAt(i + 1);\n            if (Character.isLowSurrogate(ch2)) {\n                final int codePoint = Character.toCodePoint(ch, ch2);\n                for (int j = 0; j < searchLen; j++) {\n                    if (searchChars[j] == ch || searchChars[j] == ch2) {\n                        return true;\n                    }\n                    if (j < searchLast) {\n                        final char ch3 = searchChars[j + 1];\n                        if (Character.isLowSurrogate(ch3)) {\n                            final int codePoint2 = Character.toCodePoint(searchChars[j], ch3);\n                            if (codePoint == codePoint2) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                i++;\n            } else {\n                for (int j = 0; j < searchLen; j++) {\n                    if (searchChars[j] == ch) {\n                        return true;\n                    }\n                }\n            }\n        } else {\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..4819779a 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,53 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int strLen = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int strLast = strLen - 1;\n+    final int searchLast = searchLen - 1;\n+    outer:\n+    for (int i = 0; i < strLen; i++) {\n+        final char ch = sequence.charAt(i);\n+        if (Character.isHighSurrogate(ch) && i < strLast) {\n+            final char ch2 = sequence.charAt(i + 1);\n+            if (Character.isLowSurrogate(ch2)) {\n+                final int codePoint = Character.toCodePoint(ch, ch2);\n+                for (int j = 0; j < searchLen; j++) {\n+                    if (searchChars[j] == ch || searchChars[j] == ch2) {\n+                        return true;\n+                    }\n+                    if (j < searchLast) {\n+                        final char ch3 = searchChars[j + 1];\n+                        if (Character.isLowSurrogate(ch3)) {\n+                            final int codePoint2 = Character.toCodePoint(searchChars[j], ch3);\n+                            if (codePoint == codePoint2) {\n+                                return true;\n+                            }\n+                        }\n+                    }\n+                }\n+                i++;\n+            } else {\n+                for (int j = 0; j < searchLen; j++) {\n+                    if (searchChars[j] == ch) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        } else {\n+            for (int j = 0; j < searchLen; j++) {\n+                if (searchChars[j] == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}