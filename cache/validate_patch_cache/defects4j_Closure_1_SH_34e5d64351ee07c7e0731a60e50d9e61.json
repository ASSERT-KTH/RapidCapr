{
    "patch": "      // Strip unused default values\n      Node param = argList.getFirstChild();\n      while (param != null) {\n        if (param.isDefaultValue() && !referenced.contains(fnScope.getVar(param.getFirstChild().getString()))) {\n          Node defaultValue = param.removeFirstChild();\n          NodeUtil.markFunctionsDeleted(defaultValue, compiler);\n          compiler.reportCodeChange();\n        }\n        param = param.getNext();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..eac604ed 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,15 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // Strip unused default values\n+      Node param = argList.getFirstChild();\n+      while (param != null) {\n+        if (param.isDefaultValue() && !referenced.contains(fnScope.getVar(param.getFirstChild().getString()))) {\n+          Node defaultValue = param.removeFirstChild();\n+          NodeUtil.markFunctionsDeleted(defaultValue, compiler);\n+          compiler.reportCodeChange();\n+        }\n+        param = param.getNext();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}