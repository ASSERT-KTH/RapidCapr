{
    "patch": "public static double getTypedPercent(JSONObject object) {\n    int stringCount = 0;\n    int totalCount = 0;\n\n    for (String key : object.keySet()) {\n        Object value = object.get(key);\n        if (value instanceof String) {\n            stringCount++;\n        }\n        totalCount++;\n    }\n\n    return (stringCount * 100.0) / totalCount;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..b1294b5a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject object) {\n+    int stringCount = 0;\n+    int totalCount = 0;\n+\n+    for (String key : object.keySet()) {\n+        Object value = object.get(key);\n+        if (value instanceof String) {\n+            stringCount++;\n+        }\n+        totalCount++;\n+    }\n+\n+    return (stringCount * 100.0) / totalCount;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}