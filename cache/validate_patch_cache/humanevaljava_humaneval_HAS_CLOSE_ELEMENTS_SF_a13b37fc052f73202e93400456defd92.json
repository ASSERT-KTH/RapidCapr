{
    "patch": "public static boolean has_close_elements(List<Double> numbers, double threshold) {\n    if (numbers == null || numbers.size() < 2) {\n        return false;\n    }\n    for (int i = 0; i < numbers.size() - 1; i++) {\n        for (int j = i + 1; j < numbers.size(); j++) {\n            double distance = numbers.get(i) - numbers.get(j);\n            if (Math.abs(distance) < threshold) { // use Math.abs instead of negating the distance\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\nindex b51eb14..79b45b2 100644\n--- a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n@@ -3,14 +3,18 @@ package humaneval.buggy;\n import java.util.List;\n \n public class HAS_CLOSE_ELEMENTS {\n-    public static boolean has_close_elements(List<Double> numbers, double threshold){\n-        for (int i = 0; i < numbers.size(); i += 1){\n-            for (int j = i + 1; j < numbers.size(); j += 1){\n-                double distance = numbers.get(i) - numbers.get(j);\n-                if (distance < threshold)\n-                    return true;\n+public static boolean has_close_elements(List<Double> numbers, double threshold) {\n+    if (numbers == null || numbers.size() < 2) {\n+        return false;\n+    }\n+    for (int i = 0; i < numbers.size() - 1; i++) {\n+        for (int j = i + 1; j < numbers.size(); j++) {\n+            double distance = numbers.get(i) - numbers.get(j);\n+            if (Math.abs(distance) < threshold) { // use Math.abs instead of negating the distance\n+                return true;\n             }\n         }\n-        return false;\n     }\n+    return false;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}