{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        int thisValue = savedFields[i].get(millis);\n        int newVal = savedFields[i].set(thisValue, resetFields);\n        millis = savedFields[i].getField().set(millis, newVal);\n        if ((millis < 0 && newVal > thisValue) || (millis > 0 && newVal < thisValue)) {\n            throw new IllegalStateException(\"One of the fields has rolled over too far\");\n        }\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..795020f1 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,21 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        int thisValue = savedFields[i].get(millis);\n+        int newVal = savedFields[i].set(thisValue, resetFields);\n+        millis = savedFields[i].getField().set(millis, newVal);\n+        if ((millis < 0 && newVal > thisValue) || (millis > 0 && newVal < thisValue)) {\n+            throw new IllegalStateException(\"One of the fields has rolled over too far\");\n+        }\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}