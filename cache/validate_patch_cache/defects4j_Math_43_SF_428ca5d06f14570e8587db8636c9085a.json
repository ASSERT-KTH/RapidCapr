{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    // If any of the statistics measures return NaN or infinite values, reset all measures\n    if (Double.isNaN(getMean()) || Double.isNaN(getVariance()) || Double.isNaN(getGeometricMean())\n            || Double.isInfinite(getMean()) || Double.isInfinite(getVariance()) || Double.isInfinite(getGeometricMean())) {\n\n        // Reset all statistical measures\n        sumImpl.clear();\n        sumsqImpl.clear();\n        minImpl.clear();\n        maxImpl.clear();\n        sumLogImpl.clear();\n        secondMoment.clear();\n\n        // Reset overridden measures only if they return NaN or infinite values\n        if (!(meanImpl instanceof Mean) && (Double.isNaN(meanImpl.getResult()) || Double.isInfinite(meanImpl.getResult()))) {\n            meanImpl.clear();\n        }\n        if (!(varianceImpl instanceof Variance) && (Double.isNaN(varianceImpl.getResult()) || Double.isInfinite(varianceImpl.getResult()))) {\n            varianceImpl.clear();\n        }\n        if (!(geoMeanImpl instanceof GeometricMean) && (Double.isNaN(geoMeanImpl.getResult()) || Double.isInfinite(geoMeanImpl.getResult()))) {\n            geoMeanImpl.clear();\n        }\n\n        n = 0;\n    } else {\n        // Increment overridden measures only if they are not Mean, Variance, or GeometricMean\n        if (!(meanImpl instanceof Mean)) {\n            meanImpl.increment(value);\n        }\n        if (!(varianceImpl instanceof Variance)) {\n            varianceImpl.increment(value);\n        }\n        if (!(geoMeanImpl instanceof GeometricMean)) {\n            geoMeanImpl.increment(value);\n        }\n        n++;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..a1bb974d0 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,15 +146,40 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    // If any of the statistics measures return NaN or infinite values, reset all measures\n+    if (Double.isNaN(getMean()) || Double.isNaN(getVariance()) || Double.isNaN(getGeometricMean())\n+            || Double.isInfinite(getMean()) || Double.isInfinite(getVariance()) || Double.isInfinite(getGeometricMean())) {\n+\n+        // Reset all statistical measures\n+        sumImpl.clear();\n+        sumsqImpl.clear();\n+        minImpl.clear();\n+        maxImpl.clear();\n+        sumLogImpl.clear();\n+        secondMoment.clear();\n+\n+        // Reset overridden measures only if they return NaN or infinite values\n+        if (!(meanImpl instanceof Mean) && (Double.isNaN(meanImpl.getResult()) || Double.isInfinite(meanImpl.getResult()))) {\n+            meanImpl.clear();\n+        }\n+        if (!(varianceImpl instanceof Variance) && (Double.isNaN(varianceImpl.getResult()) || Double.isInfinite(varianceImpl.getResult()))) {\n+            varianceImpl.clear();\n+        }\n+        if (!(geoMeanImpl instanceof GeometricMean) && (Double.isNaN(geoMeanImpl.getResult()) || Double.isInfinite(geoMeanImpl.getResult()))) {\n+            geoMeanImpl.clear();\n+        }\n+\n+        n = 0;\n+    } else {\n+        // Increment overridden measures only if they are not Mean, Variance, or GeometricMean\n         if (!(meanImpl instanceof Mean)) {\n             meanImpl.increment(value);\n         }\n@@ -166,6 +191,7 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         }\n         n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}