{
    "patch": "public class RationalNumber {\n    private int numerator;\n    private int denominator;\n\n    public RationalNumber(int numerator, int denominator) {\n        if (denominator == 0) {\n            throw new IllegalArgumentException(\"Denominator cannot be zero\");\n        }\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    public int getNumerator() {\n        return numerator;\n    }\n\n    public int getDenominator() {\n        return denominator;\n    }\n\n    public RationalNumber reciprocal() {\n        return new RationalNumber(denominator, numerator);\n    }\n\n    public RationalNumber add(RationalNumber num) {\n        int num1, num2;\n\n        num1 = numerator * num.denominator;\n        num2 = num.numerator * denominator;\n\n        return new RationalNumber(num1 + num2, denominator * num.denominator);\n    }\n\n    public RationalNumber subtract(RationalNumber num) {\n        int num1, num2;\n\n        num1 = numerator * num.denominator;\n        num2 = num.numerator * denominator;\n\n        return new RationalNumber(num1 - num2, denominator * num.denominator);\n    }\n\n    public RationalNumber multiply(RationalNumber num) {\n        return new RationalNumber(numerator * num.numerator, denominator * num.denominator);\n    }\n\n    public RationalNumber divide(RationalNumber num) {\n        return multiply(num.reciprocal());\n    }\n\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (!(obj instanceof RationalNumber))\n            return false;\n        RationalNumber other = (RationalNumber) obj;\n        return numerator * other.denominator == other.numerator * denominator;\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\nindex bbd5ddb..e5284fb 100644\n--- a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n@@ -327,7 +327,7 @@ public class MinMaxCategoryRenderer extends AbstractCategoryItemRenderer {\n      * @param column  the column index (zero-based).\n      * @param pass  the pass index.\n      */\n-    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n+\n             Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n             ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n             int pass) {",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}