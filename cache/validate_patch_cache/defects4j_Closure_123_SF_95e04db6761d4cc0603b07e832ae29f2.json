{
    "patch": "public String fixString(String str) {\n    StringBuilder sb = new StringBuilder();\n    boolean inSingleQuote = false;\n    boolean inDoubleQuote = false;\n    char[] chars = str.toCharArray();\n\n    for (int i = 0; i < chars.length; i++) {\n        char c = chars[i];\n\n        if (c == '\\'') {\n            if (!inDoubleQuote) {\n                inSingleQuote = !inSingleQuote;\n            }\n        } else if (c == '\\\"') {\n            if (!inSingleQuote) {\n                inDoubleQuote = !inDoubleQuote;\n            }\n        } else if (c == '\\\\') {\n            sb.append(c);\n\n            if (i < chars.length - 1) {\n                char nextChar = chars[++i];\n                sb.append(nextChar);\n            }\n        } else {\n            sb.append(c);\n        }\n    }\n\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..f1cbae2c 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,37 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixString(String str) {\n+    StringBuilder sb = new StringBuilder();\n+    boolean inSingleQuote = false;\n+    boolean inDoubleQuote = false;\n+    char[] chars = str.toCharArray();\n+\n+    for (int i = 0; i < chars.length; i++) {\n+        char c = chars[i];\n+\n+        if (c == '\\'') {\n+            if (!inDoubleQuote) {\n+                inSingleQuote = !inSingleQuote;\n+            }\n+        } else if (c == '\\\"') {\n+            if (!inSingleQuote) {\n+                inDoubleQuote = !inDoubleQuote;\n+            }\n+        } else if (c == '\\\\') {\n+            sb.append(c);\n+\n+            if (i < chars.length - 1) {\n+                char nextChar = chars[++i];\n+                sb.append(nextChar);\n+            }\n+        } else {\n+            sb.append(c);\n+        }\n+    }\n+\n+    return sb.toString();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}