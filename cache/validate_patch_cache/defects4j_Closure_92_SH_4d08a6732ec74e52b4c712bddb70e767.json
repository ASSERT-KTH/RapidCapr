{
    "patch": "int indexOfDot = namespace != null ? namespace.lastIndexOf('.') : -1;\nif (indexOfDot >= 0) {\n  // Handle the case where the dot is at the beginning or end of the namespace.\n  if (indexOfDot == 0 || indexOfDot == namespace.length() - 1) {\n    int secondIndexOfDot = namespace.indexOf('.', indexOfDot + 1);\n    if (secondIndexOfDot != -1) {\n      indexOfDot = secondIndexOfDot;\n    } else {\n      indexOfDot = -1;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..b90d57e5 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -786,7 +786,18 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+int indexOfDot = namespace != null ? namespace.lastIndexOf('.') : -1;\n+if (indexOfDot >= 0) {\n+  // Handle the case where the dot is at the beginning or end of the namespace.\n+  if (indexOfDot == 0 || indexOfDot == namespace.length() - 1) {\n+    int secondIndexOfDot = namespace.indexOf('.', indexOfDot + 1);\n+    if (secondIndexOfDot != -1) {\n+      indexOfDot = secondIndexOfDot;\n+    } else {\n+      indexOfDot = -1;\n+    }\n+  }\n+}\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}