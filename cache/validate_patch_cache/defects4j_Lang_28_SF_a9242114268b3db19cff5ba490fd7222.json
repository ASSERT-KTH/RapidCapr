{
    "patch": "            while(Character.isDigit(input.charAt(end)) || (isHex && (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') || (input.charAt(end) >= 'A' && input.charAt(end) <= 'F'))) {\n                end++;\n            }\n            if (end >= input.length()) {\n                return 0;\n            }\n            if (input.charAt(end) != ';') {\n                return 0;\n            }\n\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n\n            out.write(entityValue);\n            return end - index + 1;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java\nindex c3cb8695..2e82193a 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java\n@@ -32,22 +32,15 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {\n      * {@inheritDoc}\n      */\n     @Override\n-    public int translate(CharSequence input, int index, Writer out) throws IOException {\n-        // TODO: Protect from ArrayIndexOutOfBounds\n-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n-            int start = index + 2;\n-            boolean isHex = false;\n-\n-            char firstChar = input.charAt(start);\n-            if(firstChar == 'x' || firstChar == 'X') {\n-                start++;\n-                isHex = true;\n-            }\n-\n-            int end = start;\n-            while(input.charAt(end) != ';') {\n+            while(Character.isDigit(input.charAt(end)) || (isHex && (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') || (input.charAt(end) >= 'A' && input.charAt(end) <= 'F'))) {\n                 end++;\n             }\n+            if (end >= input.length()) {\n+                return 0;\n+            }\n+            if (input.charAt(end) != ';') {\n+                return 0;\n+            }\n \n             int entityValue;\n             try {\n@@ -60,9 +53,6 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {\n                 return 0;\n             }\n \n-                out.write(entityValue);\n-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n-        }\n-        return 0;\n-    }\n+            out.write(entityValue);\n+            return end - index + 1;\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}