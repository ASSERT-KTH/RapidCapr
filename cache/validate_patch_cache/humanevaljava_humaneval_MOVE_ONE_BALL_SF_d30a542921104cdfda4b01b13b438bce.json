{
    "patch": "    public static boolean move_one_ball(ArrayList<Integer> arr) {\n        if(arr.size() == 0) return true;\n        ArrayList<Integer> sorted_arr = new ArrayList<>(arr);\n        Collections.sort(sorted_arr);\n        int min_value = sorted_arr.get(0);\n        int min_index = arr.indexOf(min_value);\n        ArrayList<Integer> arr_after_move = new ArrayList<>(arr.subList(min_index, arr.size()));\n        arr_after_move.addAll(arr.subList(0, min_index));\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr_after_move.get(i).equals(sorted_arr.get(i))) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java b/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java\nindex ce2ea8a..70fca7b 100644\n--- a/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java\n+++ b/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java\n@@ -8,20 +8,12 @@ public class MOVE_ONE_BALL {\n         if(arr.size() == 0) return true;\n         ArrayList<Integer> sorted_arr = new ArrayList<>(arr);\n         Collections.sort(sorted_arr);\n-        int min_value = sorted_arr.get(sorted_arr.size() - 1);\n-        int min_index = 0;\n+        int min_value = sorted_arr.get(0);\n+        int min_index = arr.indexOf(min_value);\n+        ArrayList<Integer> arr_after_move = new ArrayList<>(arr.subList(min_index, arr.size()));\n+        arr_after_move.addAll(arr.subList(0, min_index));\n         for(int i = 0; i < arr.size(); i++) {\n-            if(arr.get(i) == min_value) min_index = i;\n-        }\n-        ArrayList<Integer> arr_after_move = new ArrayList<>();\n-        for(int i = min_index; i < arr.size(); i++) {\n-            arr_after_move.add(arr.get(i));\n-        }\n-        for(int i = 0; i < min_index; i++) {\n-            arr_after_move.add(arr.get(i));\n-        }\n-        for(int i = 0; i < arr.size(); i++) {\n-            if(arr_after_move.get(i) != sorted_arr.get(i)) {\n+            if(!arr_after_move.get(i).equals(sorted_arr.get(i))) {\n                 return false;\n             }\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}