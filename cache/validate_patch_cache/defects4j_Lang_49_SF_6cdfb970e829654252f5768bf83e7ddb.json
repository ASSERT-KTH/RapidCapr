{
    "patch": "   public Fraction reduce() {\n        int num, den, gcd;\n        num = numerator;\n        den = denominator;\n        gcd = greatestCommonDivisor(Math.abs(num), den);\n        if (gcd == 1) {\n            return this;\n        }\n        num /= gcd;\n        den /= gcd;\n        return new Fraction(num, den);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..74f9442a 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,12 +462,17 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n+   public Fraction reduce() {\n+        int num, den, gcd;\n+        num = numerator;\n+        den = denominator;\n+        gcd = greatestCommonDivisor(Math.abs(num), den);\n         if (gcd == 1) {\n             return this;\n         }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        num /= gcd;\n+        den /= gcd;\n+        return new Fraction(num, den);\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<1> but was:<100>",
    "test_result": "FAIL"
}