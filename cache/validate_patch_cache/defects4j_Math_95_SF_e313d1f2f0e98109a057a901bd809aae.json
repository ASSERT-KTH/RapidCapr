{
    "patch": "protected double getInitialDomain(double p) {\n    double ret = 0.0;\n    double d = getDenominatorDegreesOfFreedom();\n    try {\n        ret = d / (d - 2.0);\n    } catch (ArithmeticException e) {\n        // handle division by zero error by setting initial domain to a very large value\n        ret = Double.MAX_VALUE;\n    }\n    if (Double.isNaN(ret) || Double.isInfinite(ret)) {\n        // handle infinite or NaN results by setting initial domain to a large value\n        ret = Double.MAX_VALUE;\n    }\n    return ret;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\nindex e19e97aef..d6e4549b0 100644\n--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n@@ -140,13 +140,21 @@ public class FDistributionImpl\n      * @param p the desired probability for the critical value\n      * @return initial domain value\n      */\n-    protected double getInitialDomain(double p) {\n-        double ret;\n-        double d = getDenominatorDegreesOfFreedom();\n-            // use mean\n-            ret = d / (d - 2.0);\n-        return ret;\n+protected double getInitialDomain(double p) {\n+    double ret = 0.0;\n+    double d = getDenominatorDegreesOfFreedom();\n+    try {\n+        ret = d / (d - 2.0);\n+    } catch (ArithmeticException e) {\n+        // handle division by zero error by setting initial domain to a very large value\n+        ret = Double.MAX_VALUE;\n     }\n+    if (Double.isNaN(ret) || Double.isInfinite(ret)) {\n+        // handle infinite or NaN results by setting initial domain to a large value\n+        ret = Double.MAX_VALUE;\n+    }\n+    return ret;\n+}\n     \n     /**\n      * Modify the numerator degrees of freedom.",
    "result_reason": "java.lang.IllegalArgumentException: Invalid endpoint parameters: lowerBound=0.0 initial=-1.0 upperBound=1.7976931348623157E308",
    "test_result": "FAIL"
}