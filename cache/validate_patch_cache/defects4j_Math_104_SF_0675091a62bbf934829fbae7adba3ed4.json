{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double epsilon = 10e-9;\n    int maxIterations = 1000;\n    double logGamma = Gamma.logGamma(a);\n    double factor = Math.exp(a * Math.log(x) - x - logGamma) / a;\n    double continuedFraction = 1.0 / (1.0 + x / (a + 1.0));\n    double increment = continuedFraction;\n    for (int n = 1; n <= maxIterations; n++) {\n        double previousContinuedFraction = continuedFraction;\n        increment *= x / (a + n);\n        continuedFraction += increment;\n        if (Math.abs(continuedFraction - previousContinuedFraction) < epsilon * Math.abs(continuedFraction)) {\n            return factor * continuedFraction;\n        }\n    }\n    throw new ArithmeticException(\"Maximum number of iterations exceeded\");\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..91bb34395 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,23 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double epsilon = 10e-9;\n+    int maxIterations = 1000;\n+    double logGamma = Gamma.logGamma(a);\n+    double factor = Math.exp(a * Math.log(x) - x - logGamma) / a;\n+    double continuedFraction = 1.0 / (1.0 + x / (a + 1.0));\n+    double increment = continuedFraction;\n+    for (int n = 1; n <= maxIterations; n++) {\n+        double previousContinuedFraction = continuedFraction;\n+        increment *= x / (a + n);\n+        continuedFraction += increment;\n+        if (Math.abs(continuedFraction - previousContinuedFraction) < epsilon * Math.abs(continuedFraction)) {\n+            return factor * continuedFraction;\n+        }\n+    }\n+    throw new ArithmeticException(\"Maximum number of iterations exceeded\");\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}