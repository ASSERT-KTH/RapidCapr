{
    "patch": "public Fraction reduce() {\n    if (numerator == 0) { // if the numerator is 0, return 0/1\n        return new Fraction(0, 1);\n    }\n    int n = numerator;\n    int d = denominator;\n    if (d < 0) { // if the denominator is negative, flip the signs of both numerator and denominator\n        n *= -1;\n        d *= -1;\n    }\n    int gcd = greatestCommonDivisor(Math.abs(n), d);\n    if (gcd == 1) { // if the fraction is already reduced\n        return this;\n    } else { // reduce the fraction\n        return new Fraction(n / gcd, d / gcd);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..c4bc6fe4 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,13 +462,23 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+public Fraction reduce() {\n+    if (numerator == 0) { // if the numerator is 0, return 0/1\n+        return new Fraction(0, 1);\n+    }\n+    int n = numerator;\n+    int d = denominator;\n+    if (d < 0) { // if the denominator is negative, flip the signs of both numerator and denominator\n+        n *= -1;\n+        d *= -1;\n+    }\n+    int gcd = greatestCommonDivisor(Math.abs(n), d);\n+    if (gcd == 1) { // if the fraction is already reduced\n+        return this;\n+    } else { // reduce the fraction\n+        return new Fraction(n / gcd, d / gcd);\n     }\n+}\n \n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<0/1> was not:<0/1>",
    "test_result": "FAIL"
}