{
    "patch": "    List<Node> unusedArgs = new ArrayList<>();\n    for (Node arg : argList.children()) {\n      Var var = fnScope.getVar(arg.getString());\n      if (!referenced.contains(var)) {\n        unusedArgs.add(arg);\n      } else if (!unusedArgs.isEmpty()) {\n        // There exist unused args on the left side of this used arg,\n        // so we cannot remove them.\n        return;\n      }\n    }\n\n    for (Node unusedArg : unusedArgs) {\n      argList.removeChild(unusedArg);\n      compiler.reportCodeChange();\n    }\n\n    if (modifyCallSites) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..c7c90dc0 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,24 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> unusedArgs = new ArrayList<>();\n+    for (Node arg : argList.children()) {\n+      Var var = fnScope.getVar(arg.getString());\n+      if (!referenced.contains(var)) {\n+        unusedArgs.add(arg);\n+      } else if (!unusedArgs.isEmpty()) {\n+        // There exist unused args on the left side of this used arg,\n+        // so we cannot remove them.\n+        return;\n+      }\n+    }\n+\n+    for (Node unusedArg : unusedArgs) {\n+      argList.removeChild(unusedArg);\n+      compiler.reportCodeChange();\n+    }\n+\n+    if (modifyCallSites) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}