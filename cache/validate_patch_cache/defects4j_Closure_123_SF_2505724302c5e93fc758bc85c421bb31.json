{
    "patch": "public String fixCode(String input) {\n    // replace \"in\" keyword with \"!contains\"\n    input = input.replaceAll(\"([^=!<])in([^=])\", \"$1!$2.contains\");\n\n    // fix ternary operator by adding parantheses around \"0 in d\"\n    input = input.replaceAll(\":\\\\s*(\\\\[[^\\\\]]*in[^\\\\]]*\\\\])\", \": ($1)\");\n    \n    return input;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..13049f0b 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,15 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String input) {\n+    // replace \"in\" keyword with \"!contains\"\n+    input = input.replaceAll(\"([^=!<])in([^=])\", \"$1!$2.contains\");\n+\n+    // fix ternary operator by adding parantheses around \"0 in d\"\n+    input = input.replaceAll(\":\\\\s*(\\\\[[^\\\\]]*in[^\\\\]]*\\\\])\", \": ($1)\");\n+    \n+    return input;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}