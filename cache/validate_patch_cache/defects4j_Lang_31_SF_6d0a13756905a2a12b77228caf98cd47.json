{
    "patch": "public static boolean containsAny(CharSequence sequence, char[] searchChars) {\n    int strLen = sequence.length();\n    int searchLen = searchChars.length;\n    for (int i = 0; i < strLen; i++) {\n        char ch = sequence.charAt(i);\n        for (int j = 0; j < searchLen; j++) {\n            if (searchChars[j] == ch) {\n                if (Character.isHighSurrogate(ch)) {\n                    if (j == searchLen - 1) {\n                        return false;\n                    }\n                    char ch2 = sequence.charAt(i + 1);\n                    if (Character.isLowSurrogate(ch2)) {\n                        if (searchChars[j + 1] == ch2) {\n                            return true;\n                        }\n                    }\n                } else {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..df13c142 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence sequence, char[] searchChars) {\n+    int strLen = sequence.length();\n+    int searchLen = searchChars.length;\n+    for (int i = 0; i < strLen; i++) {\n+        char ch = sequence.charAt(i);\n+        for (int j = 0; j < searchLen; j++) {\n+            if (searchChars[j] == ch) {\n+                if (Character.isHighSurrogate(ch)) {\n+                    if (j == searchLen - 1) {\n+                        return false;\n+                    }\n+                    char ch2 = sequence.charAt(i + 1);\n+                    if (Character.isLowSurrogate(ch2)) {\n+                        if (searchChars[j + 1] == ch2) {\n+                            return true;\n+                        }\n+                    }\n+                } else {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}