{
    "patch": "        final Object attribute = tree.getAttribute();\n        if (attribute instanceof BoundaryAttribute && ((BoundaryAttribute) attribute).getSide() == BSPTreeLeaf.OUTSIDE) {\n            // the instance is completely outside\n            setSize(0);\n            setBarycenter(Vector2D.NaN);\n        } else {\n            if (v.length == 0) {\n                // the instance covers the whole space\n                setSize(Double.POSITIVE_INFINITY);\n                setBarycenter(Vector2D.NaN);\n            } else if (v[0][0] == null) {\n                // there is at least one open-loop: the polygon is infinite\n                setSize(Double.POSITIVE_INFINITY);\n                setBarycenter(Vector2D.NaN);\n            } else {\n                 // existing code block\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\nindex c6e7cf18c..cdfafa216 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\n@@ -133,7 +133,24 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {\n \n         if (v.length == 0) {\n             final BSPTree<Euclidean2D> tree = getTree(false);\n-            if ((Boolean) tree.getAttribute()) {\n+        final Object attribute = tree.getAttribute();\n+        if (attribute instanceof BoundaryAttribute && ((BoundaryAttribute) attribute).getSide() == BSPTreeLeaf.OUTSIDE) {\n+            // the instance is completely outside\n+            setSize(0);\n+            setBarycenter(Vector2D.NaN);\n+        } else {\n+            if (v.length == 0) {\n+                // the instance covers the whole space\n+                setSize(Double.POSITIVE_INFINITY);\n+                setBarycenter(Vector2D.NaN);\n+            } else if (v[0][0] == null) {\n+                // there is at least one open-loop: the polygon is infinite\n+                setSize(Double.POSITIVE_INFINITY);\n+                setBarycenter(Vector2D.NaN);\n+            } else {\n+                 // existing code block\n+            }\n+        }\n                 // the instance covers the whole space\n                 setSize(Double.POSITIVE_INFINITY);\n                 setBarycenter(Vector2D.NaN);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}