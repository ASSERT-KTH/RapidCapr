{
    "patch": "try {\n    boolean[] fieldSet = new boolean[count];\n    int successfulFields = 0;\n    for (int i = 0; i < count; i++) {\n        try {\n            millis = savedFields[i].set(millis, resetFields);\n            fieldSet[i] = true;\n            successfulFields++;\n        } catch (IllegalArgumentException e) {\n            if (text != null) {\n                e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n            }\n            throw e;\n        }\n    }\n    if (resetFields && successfulFields != count) {\n        for (int j = 0; j < count; j++) {\n            if (!fieldSet[j]) {\n                int i = j;\n                while (i > 0 && !fieldSet[i - 1]) {\n                    i--;\n                }\n                for (int k = i; k <= j; k++) {\n                    millis = savedFields[k].set(millis, true);\n                }\n                break;\n            }\n        }\n    }\n} catch (IllegalArgumentException e) {\n    if (text != null) {\n        e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c12e4769 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,41 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    boolean[] fieldSet = new boolean[count];\n+    int successfulFields = 0;\n+    for (int i = 0; i < count; i++) {\n+        try {\n+            millis = savedFields[i].set(millis, resetFields);\n+            fieldSet[i] = true;\n+            successfulFields++;\n+        } catch (IllegalArgumentException e) {\n+            if (text != null) {\n+                e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n+            }\n+            throw e;\n+        }\n+    }\n+    if (resetFields && successfulFields != count) {\n+        for (int j = 0; j < count; j++) {\n+            if (!fieldSet[j]) {\n+                int i = j;\n+                while (i > 0 && !fieldSet[i - 1]) {\n+                    i--;\n+                }\n+                for (int k = i; k <= j; k++) {\n+                    millis = savedFields[k].set(millis, true);\n+                }\n+                break;\n+            }\n+        }\n+    }\n+} catch (IllegalArgumentException e) {\n+    if (text != null) {\n+        e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}