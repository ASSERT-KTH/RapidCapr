{
    "patch": "public static String strongest_extension(String class_name, String[] extensions) {\n    String strongest = null;\n    int max_diff = Integer.MIN_VALUE;\n\n    if (extensions != null) {\n        for (String extension : extensions) {\n            int num_uppercase = 0;\n            int num_lowercase = 0;\n            for (int i = 0; i < extension.length(); i++) {\n                char c = extension.charAt(i);\n                if (Character.isUpperCase(c)) {\n                    num_uppercase++;\n                } else if (Character.isLowerCase(c)) {\n                    num_lowercase++;\n                }\n            }\n            int diff = num_uppercase - num_lowercase;\n            if (diff > max_diff) {\n                max_diff = diff;\n                strongest = extension;\n            }\n        }\n    }\n\n    return strongest != null ? class_name + \".\" + strongest : null;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\nindex 7ff1563..b92a8b9 100644\n--- a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n+++ b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n@@ -17,20 +17,30 @@ package humaneval.buggy;\n // for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n \n public class STRONGEST_EXTENSION {\n-    public static String strongest_extension(String class_name, String[] extensions) {\n-        String strong = null;\n-        int val = Integer.MIN_VALUE;\n+public static String strongest_extension(String class_name, String[] extensions) {\n+    String strongest = null;\n+    int max_diff = Integer.MIN_VALUE;\n \n-        for (String s : extensions) {\n-            int CAP = 0;\n-            int SM = 0;\n-            for (char c : s.toCharArray()) {\n-                if (Character.toUpperCase(c) == c) SM += 1;\n-                if (Character.toLowerCase(c) == c) CAP += 1;\n+    if (extensions != null) {\n+        for (String extension : extensions) {\n+            int num_uppercase = 0;\n+            int num_lowercase = 0;\n+            for (int i = 0; i < extension.length(); i++) {\n+                char c = extension.charAt(i);\n+                if (Character.isUpperCase(c)) {\n+                    num_uppercase++;\n+                } else if (Character.isLowerCase(c)) {\n+                    num_lowercase++;\n+                }\n+            }\n+            int diff = num_uppercase - num_lowercase;\n+            if (diff > max_diff) {\n+                max_diff = diff;\n+                strongest = extension;\n             }\n-            val = CAP - SM;\n-            strong = s;\n         }\n-        return class_name + \".\" + strong;\n     }\n+\n+    return strongest != null ? class_name + \".\" + strongest : null;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}