{
    "patch": "public static boolean containsAny(CharSequence sequence, char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLength = sequence.length();\n    int searchLength = searchChars.length;\n    int strIndex = 0;\n    while (strIndex < strLength) {\n        int high = Character.codePointAt(sequence, strIndex);\n        if (Character.isSupplementaryCodePoint(high)) {\n            strIndex += 2;\n        } else {\n            strIndex++;\n        }\n        for (int i = 0; i < searchLength; i++) {\n            char ch = searchChars[i];\n            if (ch == high || (Character.isSupplementaryCodePoint(ch) && Character.charCount(ch) == 2 && i < searchLength - 1 && searchChars[i + 1] == high)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..411c5fc1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence sequence, char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLength = sequence.length();\n+    int searchLength = searchChars.length;\n+    int strIndex = 0;\n+    while (strIndex < strLength) {\n+        int high = Character.codePointAt(sequence, strIndex);\n+        if (Character.isSupplementaryCodePoint(high)) {\n+            strIndex += 2;\n+        } else {\n+            strIndex++;\n+        }\n+        for (int i = 0; i < searchLength; i++) {\n+            char ch = searchChars[i];\n+            if (ch == high || (Character.isSupplementaryCodePoint(ch) && Character.charCount(ch) == 2 && i < searchLength - 1 && searchChars[i + 1] == high)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}