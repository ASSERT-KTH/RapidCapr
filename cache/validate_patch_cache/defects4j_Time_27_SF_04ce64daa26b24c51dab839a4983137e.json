{
    "patch": "private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n    if (notPrinter && notParser) {\n        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n    }\n\n    Object[] comp = createComposite(elementPairs);\n\n    if (!notPrinter && comp[0] == null) {\n        Object candidate = getDefaultPrinter(elementPairs);\n\n        if (candidate instanceof PeriodPrinter) {\n            comp[0] = candidate;\n        } else {\n            throw new IllegalArgumentException(\"Pattern must not be empty or null\");\n        }\n    }\n\n    if (!notParser && comp[1] == null) {\n        Object candidate = getDefaultParser(elementPairs);\n\n        if (candidate instanceof PeriodParser) {\n            comp[1] = candidate;\n        } else {\n            throw new IllegalArgumentException(\"Pattern must not be empty or null\");\n        }\n    }\n\n    if (notPrinter) {\n        return new PeriodFormatter(null, (PeriodParser) comp[1]);\n    } else if (notParser) {\n        return new PeriodFormatter((PeriodPrinter) comp[0], null);\n    } else {\n        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n    }\n}\n\nprivate static Object getDefaultParser(List<Object> elementPairs) {\n    int i = 0;\n    int size = elementPairs.size();\n    boolean lastSeparator = false;\n\n    while (i < size) {\n        Object[] tempComp = createComposite(elementPairs.subList(i, size));\n\n        if (!lastSeparator && tempComp[1] == null) {\n            return null;\n        }\n\n        if (tempComp[1] instanceof PeriodParser) {\n            return tempComp[1];\n        }\n\n        lastSeparator = tempComp[0] instanceof Separator;\n        i++;\n    }\n\n    return null;\n}\n\nprivate static Object getDefaultPrinter(List<Object> elementPairs) {\n    int i = 0;\n    int size = elementPairs.size();\n    boolean lastSeparator = false;\n\n    while (i < size) {\n        Object[] tempComp = createComposite(elementPairs.subList(i, size));\n\n        if (!lastSeparator && tempComp[0] == null) {\n            return null;\n        }\n\n        if (tempComp[0] instanceof PeriodPrinter) {\n            return tempComp[0];\n        }\n\n        lastSeparator = tempComp[0] instanceof Separator;\n        i++;\n    }\n\n    return null;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..f98f61dc 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -791,27 +791,88 @@ public class PeriodFormatterBuilder {\n     }\n \n     //-----------------------------------------------------------------------\n-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n-        if (notPrinter && notParser) {\n-            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n-        }\n-        int size = elementPairs.size();\n-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n-            Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n-        }\n-        Object[] comp = createComposite(elementPairs);\n-        if (notPrinter) {\n-            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n-        } else if (notParser) {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n+private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n+    if (notPrinter && notParser) {\n+        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n+    }\n+\n+    Object[] comp = createComposite(elementPairs);\n+\n+    if (!notPrinter && comp[0] == null) {\n+        Object candidate = getDefaultPrinter(elementPairs);\n+\n+        if (candidate instanceof PeriodPrinter) {\n+            comp[0] = candidate;\n+        } else {\n+            throw new IllegalArgumentException(\"Pattern must not be empty or null\");\n+        }\n+    }\n+\n+    if (!notParser && comp[1] == null) {\n+        Object candidate = getDefaultParser(elementPairs);\n+\n+        if (candidate instanceof PeriodParser) {\n+            comp[1] = candidate;\n         } else {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+            throw new IllegalArgumentException(\"Pattern must not be empty or null\");\n+        }\n+    }\n+\n+    if (notPrinter) {\n+        return new PeriodFormatter(null, (PeriodParser) comp[1]);\n+    } else if (notParser) {\n+        return new PeriodFormatter((PeriodPrinter) comp[0], null);\n+    } else {\n+        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+    }\n+}\n+\n+private static Object getDefaultParser(List<Object> elementPairs) {\n+    int i = 0;\n+    int size = elementPairs.size();\n+    boolean lastSeparator = false;\n+\n+    while (i < size) {\n+        Object[] tempComp = createComposite(elementPairs.subList(i, size));\n+\n+        if (!lastSeparator && tempComp[1] == null) {\n+            return null;\n+        }\n+\n+        if (tempComp[1] instanceof PeriodParser) {\n+            return tempComp[1];\n         }\n+\n+        lastSeparator = tempComp[0] instanceof Separator;\n+        i++;\n     }\n \n+    return null;\n+}\n+\n+private static Object getDefaultPrinter(List<Object> elementPairs) {\n+    int i = 0;\n+    int size = elementPairs.size();\n+    boolean lastSeparator = false;\n+\n+    while (i < size) {\n+        Object[] tempComp = createComposite(elementPairs.subList(i, size));\n+\n+        if (!lastSeparator && tempComp[0] == null) {\n+            return null;\n+        }\n+\n+        if (tempComp[0] instanceof PeriodPrinter) {\n+            return tempComp[0];\n+        }\n+\n+        lastSeparator = tempComp[0] instanceof Separator;\n+        i++;\n+    }\n+\n+    return null;\n+}\n+\n     private static Object[] createComposite(List<Object> elementPairs) {\n         switch (elementPairs.size()) {\n             case 0:",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}