{
    "patch": "      if (parent != null && (parent.getType() == Token.GETPROP || parent.getType() == Token.CALL)) {\n        Node firstChild = parent.getFirstChild();\n        if (firstChild.getType() == Token.NAME && externs.containsName(firstChild.getString())) {\n          return false;\n        }\n      }\n\n      return true;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..18ffbbde 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,15 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && (parent.getType() == Token.GETPROP || parent.getType() == Token.CALL)) {\n+        Node firstChild = parent.getFirstChild();\n+        if (firstChild.getType() == Token.NAME && externs.containsName(firstChild.getString())) {\n+          return false;\n+        }\n+      }\n+\n+      return true;\n+    }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}