{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null || result.isEmpty()) {\n        return null;\n    }\n    int index = 0;\n    while (index < result.length() && Character.isWhitespace(result.charAt(index))) {\n        index++;\n    }\n    if (index >= result.length() || result.charAt(index) != '@') {\n        return result.trim();\n    } else {\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..0e14611b 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,21 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    if (result == null || result.isEmpty()) {\n+        return null;\n+    }\n+    int index = 0;\n+    while (index < result.length() && Character.isWhitespace(result.charAt(index))) {\n+        index++;\n+    }\n+    if (index >= result.length() || result.charAt(index) != '@') {\n+        return result.trim();\n+    } else {\n+        return null;\n+    }\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}