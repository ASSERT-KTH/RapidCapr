{
    "patch": "// get the filename from the path\nString filename = path.replaceFirst(\".*/\", \"\");\n\n// get the file extension\nString extension = \"\";\nint i = filename.lastIndexOf('.');\nif (i > 0) {\n    extension = filename.substring(i + 1);\n}\n\n// read the file contents and convert to the desired encoding\nString content = null;\ntry (InputStream input = new FileInputStream(path)) {\n    byte[] buffer = input.readAllBytes();\n    if (encoding.equalsIgnoreCase(\"ISO-8859-1\")) {\n        content = new String(buffer, StandardCharsets.ISO_8859_1);\n    } else if (encoding.equalsIgnoreCase(\"UTF-8\")) {\n        content = new String(buffer, StandardCharsets.UTF_8);\n    } else {\n        // unsupported encoding\n        throw new IllegalArgumentException(\"Unsupported encoding: \" + encoding);\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\n\n// write the file contents to the new path with the desired encoding\ntry (Writer writer = new OutputStreamWriter(new FileOutputStream(newPath), encoding)) {\n    writer.write(content);\n} catch (IOException e) {\n    e.printStackTrace();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}