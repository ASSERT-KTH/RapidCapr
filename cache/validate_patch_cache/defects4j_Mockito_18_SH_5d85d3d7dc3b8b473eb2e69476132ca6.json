{
    "patch": "public Object handleResult(Method method, Object[] args, Object target, Throwable throwable) throws Throwable {\n    if (throwable != null) {\n        throw throwable;\n    }\n    if (method.getReturnType().equals(Integer.class)) {\n        return -1;\n    }\n    if (method.getReturnType().equals(Long.class)) {\n        return -1L;\n    }\n    if (method.getReturnType().equals(Double.class)) {\n        return -1.0;\n    }\n    if (method.getReturnType().equals(Float.class)) {\n        return -1.0f;\n    }\n    if (method.getReturnType().equals(Boolean.class)) {\n        return false;\n    }\n    if (method.getReturnType().equals(Character.class)) {\n        return '\\u0000';\n    }\n    if (method.getReturnType().equals(Byte.class)) {\n        return (byte) 0;\n    }\n    if (method.getReturnType().equals(Short.class)) {\n        return (short) 0;\n    }\n    if (method.getReturnType().isAssignableFrom(List.class)) {\n        return Collections.emptyList();\n    }\n    if (method.getReturnType().isAssignableFrom(Set.class)) {\n        return Collections.emptySet();\n    }\n    if (method.getReturnType().equals(String.class)) {\n        return \"\";\n    }\n    if (method.getReturnType().isAssignableFrom(Iterable.class)) {\n        return Collections.emptyList(); // correction made here\n    }\n    return null;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}