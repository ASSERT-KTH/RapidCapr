{
    "patch": "public class StringUtils {\n    public static boolean containsAny(char[] str, char[] searchChars) {\n        if (searchChars == null || str == null) {\n            return false;\n        }\n\n        int strLength = str.length;\n        int searchLength = searchChars.length;\n        int max = -1;\n\n        if (searchLength == 1) {\n            for (int i = 0; i < strLength; i++) {\n                if (searchChars[0] == str[i]) {\n                    return true;\n                }\n            }\n        }\n\n        if (searchLength == 2) {\n            char searchChar0 = searchChars[0];\n            char searchChar1 = searchChars[1];\n            for (int i = 0; i < strLength; i++) {\n                char ch = str[i];\n                if (ch == searchChar0 || ch == searchChar1)  {\n                    return true;\n                }\n            }\n        }\n\n        if (searchLength > 2) {\n            if (searchLength > strLength) {\n                return false;\n            }\n            for (int i = 0; i < searchLength; i++) {\n                if (searchChars[i] > max) {\n                    max = searchChars[i];\n                }\n            }\n            int[] table = new int[max + 1];\n            for (int i = 0; i < strLength; i++) {\n                char ch = str[i];\n                if (ch >= table.length) {\n                    continue;\n                }\n                table[ch] = i + 1;\n            }\n\n            for (int i = 0; i < searchLength; i++) {\n                char ch = searchChars[i];\n                if (ch >= table.length || table[ch] == 0) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..ef802c4b 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,66 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+    public static boolean containsAny(char[] str, char[] searchChars) {\n+        if (searchChars == null || str == null) {\n+            return false;\n+        }\n+\n+        int strLength = str.length;\n+        int searchLength = searchChars.length;\n+        int max = -1;\n+\n+        if (searchLength == 1) {\n+            for (int i = 0; i < strLength; i++) {\n+                if (searchChars[0] == str[i]) {\n+                    return true;\n+                }\n+            }\n+        }\n+\n+        if (searchLength == 2) {\n+            char searchChar0 = searchChars[0];\n+            char searchChar1 = searchChars[1];\n+            for (int i = 0; i < strLength; i++) {\n+                char ch = str[i];\n+                if (ch == searchChar0 || ch == searchChar1)  {\n+                    return true;\n+                }\n+            }\n+        }\n+\n+        if (searchLength > 2) {\n+            if (searchLength > strLength) {\n+                return false;\n+            }\n+            for (int i = 0; i < searchLength; i++) {\n+                if (searchChars[i] > max) {\n+                    max = searchChars[i];\n+                }\n+            }\n+            int[] table = new int[max + 1];\n+            for (int i = 0; i < strLength; i++) {\n+                char ch = str[i];\n+                if (ch >= table.length) {\n+                    continue;\n+                }\n+                table[ch] = i + 1;\n+            }\n+\n+            for (int i = 0; i < searchLength; i++) {\n+                char ch = searchChars[i];\n+                if (ch >= table.length || table[ch] == 0) {\n+                    return false;\n+                }\n+            }\n+\n+            return true;\n+        }\n+\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}