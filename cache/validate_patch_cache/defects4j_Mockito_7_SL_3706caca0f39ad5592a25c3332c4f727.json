{
    "patch": "        for (Type type : typeVariable.getBounds()) {\n            registerTypeVariablesOn(type);\n        }\n        if (typeVariable.getGenericDeclaration() instanceof Class\n                && ((Class<?>) typeVariable.getGenericDeclaration()).getEnclosingClass() != null) {\n            registerTypeVariablesOn(\n                    getActualTypeArgumentFor((TypeVariable<?>) ((Class<?>) typeVariable.getGenericDeclaration())\n                            .getTypeParameters()[0]));",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..07ad378a1 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+        for (Type type : typeVariable.getBounds()) {\n+            registerTypeVariablesOn(type);\n+        }\n+        if (typeVariable.getGenericDeclaration() instanceof Class\n+                && ((Class<?>) typeVariable.getGenericDeclaration()).getEnclosingClass() != null) {\n+            registerTypeVariablesOn(\n+                    getActualTypeArgumentFor((TypeVariable<?>) ((Class<?>) typeVariable.getGenericDeclaration())\n+                            .getTypeParameters()[0]));\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}