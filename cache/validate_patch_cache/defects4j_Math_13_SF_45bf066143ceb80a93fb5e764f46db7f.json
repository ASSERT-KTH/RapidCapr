{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    final RealMatrix sqrt = dec.getSquareRoot();\n    final double[] eigenValues = dec.getRealEigenvalues();\n    for (int i = 0; i < eigenValues.length; i++) {\n        eigenValues[i] = Math.sqrt(Math.abs(eigenValues[i]));\n    }\n    final RealMatrix d = MatrixUtils.createRealDiagonalMatrix(eigenValues);\n    final RealMatrix sqrtm = dec.getV().multiply(d).multiply(dec.getVT());\n    return sqrtm.scalarMultiply(FastMath.sqrt(m.getRowDimension()));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..5fc1cf506 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,15 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final EigenDecomposition dec = new EigenDecomposition(m);\n+    final RealMatrix sqrt = dec.getSquareRoot();\n+    final double[] eigenValues = dec.getRealEigenvalues();\n+    for (int i = 0; i < eigenValues.length; i++) {\n+        eigenValues[i] = Math.sqrt(Math.abs(eigenValues[i]));\n     }\n+    final RealMatrix d = MatrixUtils.createRealDiagonalMatrix(eigenValues);\n+    final RealMatrix sqrtm = dec.getV().multiply(d).multiply(dec.getVT());\n+    return sqrtm.scalarMultiply(FastMath.sqrt(m.getRowDimension()));\n+}\n }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<233003.2967252038> but was:<233003.39074326018>",
    "test_result": "FAIL"
}