{
    "patch": "public static double median(int[] list) {\n    double median = 0;\n\n    if (list == null || list.length == 0) {\n        throw new IllegalArgumentException(\"List cannot be null or empty\");\n    } else if (list.length == 1) {\n        median = list[0];\n    } else {\n        int center = list.length / 2;\n        Arrays.sort(list);\n        if (list.length % 2 == 0) {\n            median = ((double) list[center] + (double) list[center - 1]) / 2.0;\n        } else {\n            median = list[center];\n        }\n    }\n\n    return median;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MEDIAN.java b/src/main/java/humaneval/buggy/MEDIAN.java\nindex 6ba9604..33bafd0 100644\n--- a/src/main/java/humaneval/buggy/MEDIAN.java\n+++ b/src/main/java/humaneval/buggy/MEDIAN.java\n@@ -9,13 +9,23 @@ import java.util.Arrays;\n 15.0 */\n \n public class MEDIAN {\n-    public static double median(int[] list) {\n-        Arrays.sort(list);\n+public static double median(int[] list) {\n+    double median = 0;\n \n-        if (list.length % 2 == 1) {\n-            return list[(int) (list.length / 2)];\n+    if (list == null || list.length == 0) {\n+        throw new IllegalArgumentException(\"List cannot be null or empty\");\n+    } else if (list.length == 1) {\n+        median = list[0];\n+    } else {\n+        int center = list.length / 2;\n+        Arrays.sort(list);\n+        if (list.length % 2 == 0) {\n+            median = ((double) list[center] + (double) list[center - 1]) / 2.0;\n         } else {\n-            return list[(int) (list.length / 2)] + list[(int) (list.length / 2) + 1] / 2;\n+            median = list[center];\n         }\n     }\n+\n+    return median;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}