{
    "patch": "StringBuilder escaped = new StringBuilder();\nfor (int i = 0; i < text.length(); i++) {\n    char c = text.charAt(i);\n    switch(c) {\n        case '<':\n            escaped.append(\"&lt;\");\n            break;\n        case '>':\n            escaped.append(\"&gt;\");\n            break;\n        case '&': //added missing case\n            escaped.append(\"&amp;\");\n            break;\n        case '\\\"': //added missing case\n            escaped.append(\"&quot;\");\n            break;\n        default:\n            escaped.append(c);\n            break;\n    }\n}\nreturn escaped.toString().replaceAll(\"ISO8859_1\", \"ISO-8859-1\");",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}