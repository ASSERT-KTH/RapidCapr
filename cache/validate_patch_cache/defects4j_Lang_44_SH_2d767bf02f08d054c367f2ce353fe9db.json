{
    "patch": "        if (val.charAt(val.length() - 1) == 'F' || val.charAt(val.length() - 1) == 'f') {\n            return createFloat(val);\n        }\n        if (val.charAt(val.length() - 1) == 'D' || val.charAt(val.length() - 1) == 'd') {\n            return createDouble(val);\n        }\n        if (val.charAt(val.length() - 1) == 'L' || val.charAt(val.length() - 1) == 'l') {\n            return createLong(val);\n        }\n        try {\n            return createInteger(val);\n        } catch (NumberFormatException nfe) {}\n        try {\n            return createLong(val);\n        } catch (NumberFormatException nfe) {}\n        return createBigDecimal(val);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..e7455aae 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,22 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.charAt(val.length() - 1) == 'F' || val.charAt(val.length() - 1) == 'f') {\n+            return createFloat(val);\n+        }\n+        if (val.charAt(val.length() - 1) == 'D' || val.charAt(val.length() - 1) == 'd') {\n+            return createDouble(val);\n+        }\n+        if (val.charAt(val.length() - 1) == 'L' || val.charAt(val.length() - 1) == 'l') {\n+            return createLong(val);\n+        }\n+        try {\n+            return createInteger(val);\n+        } catch (NumberFormatException nfe) {}\n+        try {\n+            return createLong(val);\n+        } catch (NumberFormatException nfe) {}\n+        return createBigDecimal(val);\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}