{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    while (cfgNode != null && !cfgNode.isScript()) {\n        if (cfgNode.isTry() || cfgNode.isCatch()) {\n            return true;\n        }\n        // only traverse up the parent chain if this is not a function node\n        if (cfgNode.isFunction()) {\n            return false;\n        }\n        cfgNode = cfgNode.getParent();  \n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..a077782a 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,19 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    while (cfgNode != null && !cfgNode.isScript()) {\n+        if (cfgNode.isTry() || cfgNode.isCatch()) {\n+            return true;\n+        }\n+        // only traverse up the parent chain if this is not a function node\n+        if (cfgNode.isFunction()) {\n+            return false;\n+        }\n+        cfgNode = cfgNode.getParent();  \n+    }\n     return false;\n-  }\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}