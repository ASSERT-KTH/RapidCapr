{
    "patch": "public String getProp(String propName) {\n    try {\n        InputStream input = getClass().getClassLoader().getResourceAsStream(\"app.properties\");\n        Properties prop = new Properties();\n        prop.load(input);\n        String value = prop.getProperty(propName);\n        if (value == null || value.equals(\"\")) {\n            throw new IllegalArgumentException(\"missing value for property: \" + propName);\n        }\n        return value;\n    } catch (Exception ex) {\n        System.err.println(\"failed to read property \" + propName + \": \" + ex.getMessage());\n        return \"\";\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..64103a2d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getProp(String propName) {\n+    try {\n+        InputStream input = getClass().getClassLoader().getResourceAsStream(\"app.properties\");\n+        Properties prop = new Properties();\n+        prop.load(input);\n+        String value = prop.getProperty(propName);\n+        if (value == null || value.equals(\"\")) {\n+            throw new IllegalArgumentException(\"missing value for property: \" + propName);\n+        }\n+        return value;\n+    } catch (Exception ex) {\n+        System.err.println(\"failed to read property \" + propName + \": \" + ex.getMessage());\n+        return \"\";\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}