{
    "patch": "  private Set<String> analyzeTheming(List<String> rules,\n      Set<String> fontNamesAndSizes, Set<String> colors) {\n    List<String> matches = new ArrayList<>();\n\n    // Check for font names and sizes.\n    if (fontNamesAndSizes != null && !fontNamesAndSizes.isEmpty()) {\n      matches.addAll(this.matchRegex(regexFontNamesAndSizes, rules));\n    }\n\n    Set<String> missing = new HashSet<>(fontNamesAndSizes);\n    missing.removeAll(matches);\n    \n    // Check for colors.\n    if (colors != null && !colors.isEmpty()) {\n      matches.addAll(this.matchRegex(regexColors, rules));\n    }\n    \n    missing.addAll(colors);\n    missing.removeAll(matches);\n  \n    return missing;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..78f2ac0d 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,28 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+  private Set<String> analyzeTheming(List<String> rules,\n+      Set<String> fontNamesAndSizes, Set<String> colors) {\n+    List<String> matches = new ArrayList<>();\n+\n+    // Check for font names and sizes.\n+    if (fontNamesAndSizes != null && !fontNamesAndSizes.isEmpty()) {\n+      matches.addAll(this.matchRegex(regexFontNamesAndSizes, rules));\n+    }\n+\n+    Set<String> missing = new HashSet<>(fontNamesAndSizes);\n+    missing.removeAll(matches);\n+    \n+    // Check for colors.\n+    if (colors != null && !colors.isEmpty()) {\n+      matches.addAll(this.matchRegex(regexColors, rules));\n+    }\n+    \n+    missing.addAll(colors);\n+    missing.removeAll(matches);\n+  \n+    return missing;\n+  }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}