{
    "patch": "    public static boolean is_nested(String brackets) {\n        int cnt = 0;\n        int max_cnt = 0;\n        for(int i = 0; i < brackets.length(); i++) {\n            if(brackets.charAt(i) == '[') {\n                cnt++;\n                max_cnt = Math.max(max_cnt, cnt);\n            }\n            else if(brackets.charAt(i) == ']') {\n                cnt--;\n                if(cnt < 0) return false;\n            }\n        }\n        return max_cnt >= 2 && cnt == 0;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_NESTED.java b/src/main/java/humaneval/buggy/IS_NESTED.java\nindex 28b9704..e40f798 100644\n--- a/src/main/java/humaneval/buggy/IS_NESTED.java\n+++ b/src/main/java/humaneval/buggy/IS_NESTED.java\n@@ -19,20 +19,18 @@ import java.util.Collections;\n \n public class IS_NESTED {\n     public static boolean is_nested(String brackets) {\n-        ArrayList<Integer> opening_brackets = new ArrayList<>();\n-        ArrayList<Integer> closing_brackets = new ArrayList<>();\n+        int cnt = 0;\n+        int max_cnt = 0;\n         for(int i = 0; i < brackets.length(); i++) {\n-            if(brackets.charAt(i) == '[') opening_brackets.add(i);\n-            else closing_brackets.add(i);\n-        }\n-        Collections.reverse(opening_brackets);\n-        int cnt = 0, i = 0, l = opening_brackets.size();\n-        for(int idx : closing_brackets) {\n-            if(i < l || idx >= opening_brackets.get(i)) {\n-                i++;\n+            if(brackets.charAt(i) == '[') {\n                 cnt++;\n+                max_cnt = Math.max(max_cnt, cnt);\n+            }\n+            else if(brackets.charAt(i) == ']') {\n+                cnt--;\n+                if(cnt < 0) return false;\n             }\n         }\n-        return cnt >= 2;\n+        return max_cnt >= 2 && cnt == 0;\n     }\n }",
    "result_reason": "   TEST_IS_NESTED.test_9:42 expected:<true> but was:<false>",
    "test_result": "FAIL"
}