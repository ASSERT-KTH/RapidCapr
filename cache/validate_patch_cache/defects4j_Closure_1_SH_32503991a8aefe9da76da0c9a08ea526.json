{
    "patch": "    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n    \n    Node argList = getFunctionArgList(function);\n    ArrayList<Node> argsToRemove = new ArrayList<>();\n    int refArgCount = 0;\n    for (Node arg : argList.children()) {\n      Var var = fnScope.getVar(arg.getString());\n      if (referenced.contains(var)) {\n        refArgCount++;\n      } else {\n        argsToRemove.add(arg);\n      }\n    }\n\n    if (refArgCount == 0) {\n      // no parameters are referenced, remove all parameters\n      for (Node arg : argList.children()) {\n        arg.detach();\n      }\n    } else if (argsToRemove.size() > 0) {\n      // only some parameters are unreferenced, remove the unreferenced ones\n      for (Node arg : argsToRemove) {\n        arg.detach();\n      }\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..e2f41985 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,38 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+    \n+    Node argList = getFunctionArgList(function);\n+    ArrayList<Node> argsToRemove = new ArrayList<>();\n+    int refArgCount = 0;\n+    for (Node arg : argList.children()) {\n+      Var var = fnScope.getVar(arg.getString());\n+      if (referenced.contains(var)) {\n+        refArgCount++;\n+      } else {\n+        argsToRemove.add(arg);\n+      }\n+    }\n+\n+    if (refArgCount == 0) {\n+      // no parameters are referenced, remove all parameters\n+      for (Node arg : argList.children()) {\n+        arg.detach();\n+      }\n+    } else if (argsToRemove.size() > 0) {\n+      // only some parameters are unreferenced, remove the unreferenced ones\n+      for (Node arg : argsToRemove) {\n+        arg.detach();\n+      }\n+      compiler.reportCodeChange();\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}