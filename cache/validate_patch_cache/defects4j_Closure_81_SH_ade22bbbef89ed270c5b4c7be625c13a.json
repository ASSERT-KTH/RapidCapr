{
    "patch": "        Name functionName = functionNode.getFunctionName();\n        if (functionName == null) {\n            functionName = new Name();\n            functionName.setIdentifier(\"\");\n        }\n        Node node = newNode(Token.FUNCTION, transform(functionName));\n\n        Node lp = newNode(Token.LP);\n        lp.setLineno(functionNode.getLineno());\n        lp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLp()));\n        for (AstNode param : functionNode.getParams()) {\n            lp.addChildToBack(transform(param));\n        }\n        node.addChildToBack(lp);\n\n        Node bodyNode = transform(functionNode.getBody());\n        parseDirectives(bodyNode);\n        node.addChildToBack(bodyNode);\n\n        return node;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..b8f3fe78 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,26 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+        Name functionName = functionNode.getFunctionName();\n+        if (functionName == null) {\n+            functionName = new Name();\n+            functionName.setIdentifier(\"\");\n+        }\n+        Node node = newNode(Token.FUNCTION, transform(functionName));\n+\n+        Node lp = newNode(Token.LP);\n+        lp.setLineno(functionNode.getLineno());\n+        lp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLp()));\n+        for (AstNode param : functionNode.getParams()) {\n+            lp.addChildToBack(transform(param));\n+        }\n+        node.addChildToBack(lp);\n+\n+        Node bodyNode = transform(functionNode.getBody());\n+        parseDirectives(bodyNode);\n+        node.addChildToBack(bodyNode);\n+\n+        return node;\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}