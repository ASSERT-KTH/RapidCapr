{
    "patch": "        super();\n        iPeriod = new int[TYPE_PERIOD];\n        setPeriod(DurationFieldType.MILLIS, duration);\n        setPeriod(DurationFieldType.SECONDS, duration / DateTimeConstants.MILLIS_PER_SECOND);\n        setPeriod(DurationFieldType.MINUTES, duration / DateTimeConstants.MILLIS_PER_MINUTE);\n        setPeriod(DurationFieldType.HOURS, duration / DateTimeConstants.MILLIS_PER_HOUR);\n        setPeriod(DurationFieldType.DAYS, duration / DateTimeConstants.MILLIS_PER_DAY);\n        setPeriod(DurationFieldType.WEEKS, duration / DateTimeConstants.MILLIS_PER_WEEK);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..d6dc0015 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,14 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        super();\n+        iPeriod = new int[TYPE_PERIOD];\n+        setPeriod(DurationFieldType.MILLIS, duration);\n+        setPeriod(DurationFieldType.SECONDS, duration / DateTimeConstants.MILLIS_PER_SECOND);\n+        setPeriod(DurationFieldType.MINUTES, duration / DateTimeConstants.MILLIS_PER_MINUTE);\n+        setPeriod(DurationFieldType.HOURS, duration / DateTimeConstants.MILLIS_PER_HOUR);\n+        setPeriod(DurationFieldType.DAYS, duration / DateTimeConstants.MILLIS_PER_DAY);\n+        setPeriod(DurationFieldType.WEEKS, duration / DateTimeConstants.MILLIS_PER_WEEK);\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}