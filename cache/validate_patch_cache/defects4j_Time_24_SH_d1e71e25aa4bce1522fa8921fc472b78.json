{
    "patch": "                long value;\n                try {\n                    value = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException ex) {\n                    if (text == null) {\n                        throw ex;\n                    } else {\n                        StringBuilder buf = new StringBuilder(text);\n                        int errorPos = savedFields[i].getStartPosition();\n                        while (buf.length() < errorPos) {\n                            buf.append(' ');\n                        }\n                        buf.append('^');\n                        ex.prependMessage(\"Cannot parse \\\"\" + buf + \"\\\": \");\n                        throw ex;\n                    }\n                }\n                if (value != millis) {\n                    throw new IllegalArgumentException\n                        (\"Duration field larger than supported range\");\n                }\n                millis = value;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..aac3a8f5 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,28 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                long value;\n+                try {\n+                    value = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException ex) {\n+                    if (text == null) {\n+                        throw ex;\n+                    } else {\n+                        StringBuilder buf = new StringBuilder(text);\n+                        int errorPos = savedFields[i].getStartPosition();\n+                        while (buf.length() < errorPos) {\n+                            buf.append(' ');\n+                        }\n+                        buf.append('^');\n+                        ex.prependMessage(\"Cannot parse \\\"\" + buf + \"\\\": \");\n+                        throw ex;\n+                    }\n+                }\n+                if (value != millis) {\n+                    throw new IllegalArgumentException\n+                        (\"Duration field larger than supported range\");\n+                }\n+                millis = value;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}