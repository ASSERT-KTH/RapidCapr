{
    "patch": "            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted) {\n                // we have a DST boundary; choose the earlier offset\n                int[] offsets = getOffset(nextLocal);\n                if (offsets[0] == offsetAdjusted || offsets[1] == offsetAdjusted) {\n                    return offsetAdjusted;\n                }\n                for (int offset : offsets) {\n                    if (offset == offsetAdjusted) {\n                        return offsetAdjusted;\n                    }\n                }\n                return offsets[0]; // arbitrarily return the earlier offset",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..802ba0cd 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextLocal != nextAdjusted) {\n+                // we have a DST boundary; choose the earlier offset\n+                int[] offsets = getOffset(nextLocal);\n+                if (offsets[0] == offsetAdjusted || offsets[1] == offsetAdjusted) {\n+                    return offsetAdjusted;\n+                }\n+                for (int offset : offsets) {\n+                    if (offset == offsetAdjusted) {\n+                        return offsetAdjusted;\n+                    }\n+                }\n+                return offsets[0]; // arbitrarily return the earlier offset\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}