{
    "patch": "      if ((name.localSets == 0 && name.globalSets == 1\n          && !name.isBleedingFunction()\n          && name.getDeclaration() != null)\n          || (name.aliasingGets > 0)) {\n        // {@code name} meets condition (b).\n        List<Ref> refs = Lists.newArrayList(name.getRefs());\n        for (Ref ref : refs) {\n          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal() && ref.node != name.getDeclaration()) {\n            // {@code name} meets condition (c).",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..041dae6e 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,15 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if ((name.localSets == 0 && name.globalSets == 1\n+          && !name.isBleedingFunction()\n+          && name.getDeclaration() != null)\n+          || (name.aliasingGets > 0)) {\n+        // {@code name} meets condition (b).\n+        List<Ref> refs = Lists.newArrayList(name.getRefs());\n+        for (Ref ref : refs) {\n+          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal() && ref.node != name.getDeclaration()) {\n+            // {@code name} meets condition (c).\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}