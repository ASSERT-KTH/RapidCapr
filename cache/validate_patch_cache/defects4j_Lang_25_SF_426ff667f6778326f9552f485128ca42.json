{
    "patch": "public static String unescape(String s) {\n\n    StringBuffer sbuf = new StringBuffer ();\n    int i = 0;\n    while (i < s.length()) {\n        char ch = s.charAt(i);\n        if (ch == '\\\\') {\n            if (i + 1 < s.length() && s.charAt(i+1) == 'n') {\n                sbuf.append('\\n');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == 't') {\n                sbuf.append('\\t');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == 'r') {\n                sbuf.append('\\r');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == 'f') {\n                sbuf.append('\\f');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == '\\b') {\n                sbuf.append('\\b');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == '\\\\') {\n                sbuf.append('\\\\');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == '\\\"') {\n                sbuf.append('\\\"');\n                i += 2;\n            }\n            else if (i + 1 < s.length() && s.charAt(i+1) == '\\'') {\n                sbuf.append('\\'');\n                i += 2;\n            }\n            else if (i + 3 < s.length() && s.charAt(i+1) == 'u') {\n                char hex1 = s.charAt(i+2);\n                char hex2 = s.charAt(i+3);\n                char unicodeChar = (char) Integer.parseInt(\"\"+hex1+hex2, 16);\n                sbuf.append(unicodeChar);\n                i += 4;\n            }\n            else {\n                //no special character\n                sbuf.append(ch);\n                i++;\n            }\n        }\n        else {\n            sbuf.append(ch);\n            i++;\n        }\n    }\n    return sbuf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..90702f2e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,65 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+\n+    StringBuffer sbuf = new StringBuffer ();\n+    int i = 0;\n+    while (i < s.length()) {\n+        char ch = s.charAt(i);\n+        if (ch == '\\\\') {\n+            if (i + 1 < s.length() && s.charAt(i+1) == 'n') {\n+                sbuf.append('\\n');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == 't') {\n+                sbuf.append('\\t');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == 'r') {\n+                sbuf.append('\\r');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == 'f') {\n+                sbuf.append('\\f');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == '\\b') {\n+                sbuf.append('\\b');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == '\\\\') {\n+                sbuf.append('\\\\');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == '\\\"') {\n+                sbuf.append('\\\"');\n+                i += 2;\n+            }\n+            else if (i + 1 < s.length() && s.charAt(i+1) == '\\'') {\n+                sbuf.append('\\'');\n+                i += 2;\n+            }\n+            else if (i + 3 < s.length() && s.charAt(i+1) == 'u') {\n+                char hex1 = s.charAt(i+2);\n+                char hex2 = s.charAt(i+3);\n+                char unicodeChar = (char) Integer.parseInt(\"\"+hex1+hex2, 16);\n+                sbuf.append(unicodeChar);\n+                i += 4;\n+            }\n+            else {\n+                //no special character\n+                sbuf.append(ch);\n+                i++;\n+            }\n+        }\n+        else {\n+            sbuf.append(ch);\n+            i++;\n+        }\n+    }\n+    return sbuf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}