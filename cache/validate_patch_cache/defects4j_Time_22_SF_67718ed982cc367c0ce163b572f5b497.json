{
    "patch": "protected BasePeriod(long duration) {\n    BigInteger bigDuration = BigInteger.valueOf(duration);\n    BigInteger bigMillisPerDay = BigInteger.valueOf(86400000);\n    BigInteger[] divisionResult = bigDuration.divideAndRemainder(bigMillisPerDay);\n    long days = divisionResult[0].longValue();\n    long millis = divisionResult[1].longValue();\n    this(new Period().withDays((int)days).withMillis((int)millis), null, null);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..10cef6bf 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,14 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    BigInteger bigDuration = BigInteger.valueOf(duration);\n+    BigInteger bigMillisPerDay = BigInteger.valueOf(86400000);\n+    BigInteger[] divisionResult = bigDuration.divideAndRemainder(bigMillisPerDay);\n+    long days = divisionResult[0].longValue();\n+    long millis = divisionResult[1].longValue();\n+    this(new Period().withDays((int)days).withMillis((int)millis), null, null);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}