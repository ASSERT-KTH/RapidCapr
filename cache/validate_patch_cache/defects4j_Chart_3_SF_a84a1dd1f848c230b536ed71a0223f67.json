{
    "patch": "public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.clear();\n        if (this.data.size() > 0) {\n            int i = 0;\n            int count = 0;\n            while (i < this.data.size() && count <= end) {\n                if (i >= start) {\n                    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                    try {\n                        copy.add(clone);\n                    }\n                    catch (SeriesException e) {\n                        throw new RuntimeException(\"Failed to add a cloned data item to the series\", e);\n                    }\n                    count++;\n                }\n                i++;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..70d9310 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,32 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+public TimeSeries createCopy(int start, int end)\n+            throws CloneNotSupportedException {\n+        if (start < 0) {\n+            throw new IllegalArgumentException(\"Requires start >= 0.\");\n+        }\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.clear();\n+        if (this.data.size() > 0) {\n+            int i = 0;\n+            int count = 0;\n+            while (i < this.data.size() && count <= end) {\n+                if (i >= start) {\n+                    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n+                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                    try {\n+                        copy.add(clone);\n+                    }\n+                    catch (SeriesException e) {\n+                        throw new RuntimeException(\"Failed to add a cloned data item to the series\", e);\n+                    }\n+                    count++;\n+                }\n+                i++;\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}