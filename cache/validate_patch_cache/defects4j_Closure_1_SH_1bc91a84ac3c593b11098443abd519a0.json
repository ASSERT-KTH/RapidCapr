{
    "patch": "      for (lastArg = argList.getLastChild(); \n           lastArg != null;\n           lastArg = lastArg.getPrevious()) {\n        Var var = fnScope.getVar(lastArg.getString());\n        if (referenced.contains(var)) {\n          break;\n        }\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();\n      }\n      referenced.removeAll(fnScope.getArgumentsReferenced());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d8e2ffc7 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,17 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      for (lastArg = argList.getLastChild(); \n+           lastArg != null;\n+           lastArg = lastArg.getPrevious()) {\n+        Var var = fnScope.getVar(lastArg.getString());\n+        if (referenced.contains(var)) {\n+          break;\n+        }\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n+      }\n+      referenced.removeAll(fnScope.getArgumentsReferenced());\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}