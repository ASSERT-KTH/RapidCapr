{
    "patch": "        LinkedList<BasicBlock> worklist = new LinkedList<>(cfg.getBlocks());\n        while (!worklist.isEmpty()) {\n            BasicBlock current = worklist.removeFirst();\n            if (current.getExceptionHandler() != null && current != cfgNode) {\n                return true;\n            }\n            worklist.addAll(cfg.getSuccessors(current));\n        }\n        return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..bcb46c6e 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,15 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        LinkedList<BasicBlock> worklist = new LinkedList<>(cfg.getBlocks());\n+        while (!worklist.isEmpty()) {\n+            BasicBlock current = worklist.removeFirst();\n+            if (current.getExceptionHandler() != null && current != cfgNode) {\n+                return true;\n+            }\n+            worklist.addAll(cfg.getSuccessors(current));\n+        }\n+        return false;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}