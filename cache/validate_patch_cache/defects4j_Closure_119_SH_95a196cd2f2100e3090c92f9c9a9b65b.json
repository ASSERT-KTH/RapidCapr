{
    "patch": "      boolean isUnary = parent.isUnary() && (n == parent.getFirstChild());\n      if (isUnary && (parent.getType() == Token.TYPEOF)) {\n        handleDelete(module, scope, n.getNext(), parent, name);\n        return;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..7ada4778 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,11 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+      boolean isUnary = parent.isUnary() && (n == parent.getFirstChild());\n+      if (isUnary && (parent.getType() == Token.TYPEOF)) {\n+        handleDelete(module, scope, n.getNext(), parent, name);\n+        return;\n+      }\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}