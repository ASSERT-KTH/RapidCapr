{
    "patch": "public static String printInOperatorInForLoop(Context context, boolean c, Object[] d, String expected) {\n    boolean isIn = (d != null) && Arrays.asList(d).contains(0);\n    String loopVar = c ? \"a\" : \"(0 in d)\";\n\n    return \"for(\" + loopVar + \"=\" + (c ? \"0\" : \"[0]\") + \"; \" +\n            (isIn ? loopVar : \"\") +\n            (context == Context.MATH ? \"<\" : \" in \") +\n            (c ? \"d\" : loopVar) +\n            (context == Context.MATH ? \";++\" + loopVar+\")\" : \")\") +\n            \"{\" +\n            \"foo()\" +\n            \"}\" + \"\\n\";\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}