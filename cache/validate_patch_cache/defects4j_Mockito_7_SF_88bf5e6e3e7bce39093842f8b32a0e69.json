{
    "patch": "private void readTypeVariables() {\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n\n    try {\n        Type actualTypeArg = getActualTypeArgumentFor(typeVariable);\n        if (actualTypeArg != null) {\n            registerTypeVariablesOn(actualTypeArg);\n        } else {\n            registerTypeVariablesOn(typeVariable);\n        }\n    } catch (MockitoException | NullPointerException e) {\n        registerTypeVariablesOn(typeVariable);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..40829a62a 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,23 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+\n+    try {\n+        Type actualTypeArg = getActualTypeArgumentFor(typeVariable);\n+        if (actualTypeArg != null) {\n+            registerTypeVariablesOn(actualTypeArg);\n+        } else {\n+            registerTypeVariablesOn(typeVariable);\n+        }\n+    } catch (MockitoException | NullPointerException e) {\n+        registerTypeVariablesOn(typeVariable);\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: multi-catch statement is not supported in -source 1.5",
    "test_result": "ERROR"
}