{
    "patch": "public class Line {\n    private final Vector zero;\n    private final Vector direction;\n\n    public Line(Vector point1, Vector point2) {\n        this.zero = point1;\n        this.direction = point2.subtract(point1).normalize();\n    }\n\n    public Line revert() {\n        final Line reverted = new Line(zero.subtract(direction), zero);\n        return reverted;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..afcda2c6f 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -83,10 +83,20 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n     /** Get a line with reversed direction.\n      * @return a new instance, with reversed direction\n      */\n+public class Line {\n+    private final Vector zero;\n+    private final Vector direction;\n+\n+    public Line(Vector point1, Vector point2) {\n+        this.zero = point1;\n+        this.direction = point2.subtract(point1).normalize();\n+    }\n+\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+        final Line reverted = new Line(zero.subtract(direction), zero);\n         return reverted;\n     }\n+}\n \n     /** Get the normalized direction vector.\n      * @return normalized direction vector",
    "result_reason": "error: class Line is already defined in package org.apache.commons.math3.geometry.euclidean.threed",
    "test_result": "ERROR"
}