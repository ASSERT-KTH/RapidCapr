{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    // if we just return offsetAdjusted then the time is pushed\n    // back before the transition, whereas it should be\n    // on or after the transition\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal != nextAdjusted) {\n        if (offsetLocal > offsetAdjusted) {\n            // we crossed the transition, add one hour (if DST)\n            int offsetNext = getOffset(nextAdjusted);\n            int offsetDiff = offsetAdjusted - offsetNext;\n            if (offsetDiff > 0) {\n                return offsetNext;\n            }\n        } else {\n            // we are about to reach the transition, subtract one hour (if DST)\n            int offsetPrev = getOffset(nextAdjusted - 1);\n            int offsetDiff = offsetPrev - offsetAdjusted;\n            if (offsetDiff > 0) {\n                return offsetPrev;\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d60c9bc3 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,30 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    // if we just return offsetAdjusted then the time is pushed\n+    // back before the transition, whereas it should be\n+    // on or after the transition\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal != nextAdjusted) {\n+        if (offsetLocal > offsetAdjusted) {\n+            // we crossed the transition, add one hour (if DST)\n+            int offsetNext = getOffset(nextAdjusted);\n+            int offsetDiff = offsetAdjusted - offsetNext;\n+            if (offsetDiff > 0) {\n+                return offsetNext;\n+            }\n+        } else {\n+            // we are about to reach the transition, subtract one hour (if DST)\n+            int offsetPrev = getOffset(nextAdjusted - 1);\n+            int offsetDiff = offsetPrev - offsetAdjusted;\n+            if (offsetDiff > 0) {\n+                return offsetPrev;\n+            }\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}