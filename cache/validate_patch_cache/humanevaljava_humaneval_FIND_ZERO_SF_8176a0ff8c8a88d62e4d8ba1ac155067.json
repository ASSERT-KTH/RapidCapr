{
    "patch": "    public static double find_zero(List<Double> xs){\n        double begin = -1.;\n        double end = 1.;\n        double tol = 1e-10;\n\n        if(poly(xs, begin) == 0.0){\n            return begin;\n        }\n        else if(poly(xs, end) == 0.0){\n            return end;\n        }\n\n        double mid = 0.0;\n        while (Math.abs(end - begin) > tol) {\n            mid = (begin + end) / 2.0;\n            double f_mid = poly(xs, mid);\n\n            if (f_mid == 0.0) {\n                return mid;\n            }\n\n            if (poly(xs, begin) * f_mid < 0) {\n                end = mid;\n            } else {\n                begin = mid;\n            }\n        }\n\n        return mid;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..4a31ed6 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -14,20 +14,31 @@ public class FIND_ZERO {\n     public static double find_zero(List<Double> xs){\n         double begin = -1.;\n         double end = 1.;\n+        double tol = 1e-10;\n \n-        while (poly(xs, begin) * poly(xs, end) > 0) {\n-            begin *= 2.;\n-            end *= 2.;\n+        if(poly(xs, begin) == 0.0){\n+            return begin;\n         }\n-        while (end - begin > 1e-10) {\n-            double center = (begin + end) / 2.;\n-            \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n-                begin = center;\n+        else if(poly(xs, end) == 0.0){\n+            return end;\n+        }\n+\n+        double mid = 0.0;\n+        while (Math.abs(end - begin) > tol) {\n+            mid = (begin + end) / 2.0;\n+            double f_mid = poly(xs, mid);\n+\n+            if (f_mid == 0.0) {\n+                return mid;\n+            }\n+\n+            if (poly(xs, begin) * f_mid < 0) {\n+                end = mid;\n             } else {\n-                end = center;\n+                begin = mid;\n             }\n         }\n-        return begin;\n+\n+        return mid;\n     }\n }",
    "result_reason": "   TEST_FIND_ZERO.test_3:39",
    "test_result": "FAIL"
}