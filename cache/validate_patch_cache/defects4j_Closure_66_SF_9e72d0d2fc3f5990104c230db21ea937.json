{
    "patch": "public static double getTypedPercent(String json) {\n    try {\n        JSONObject obj = new JSONObject(json);\n        double total = obj.getDouble(\"total\");\n        double typed = obj.getJSONObject(\"stats\").getDouble(\"typed\");\n        return typed / total * 100.0;\n    } catch (JSONException e) {\n        e.printStackTrace();\n        return -1;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..0e9158ac 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    try {\n+        JSONObject obj = new JSONObject(json);\n+        double total = obj.getDouble(\"total\");\n+        double typed = obj.getJSONObject(\"stats\").getDouble(\"typed\");\n+        return typed / total * 100.0;\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+        return -1;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}