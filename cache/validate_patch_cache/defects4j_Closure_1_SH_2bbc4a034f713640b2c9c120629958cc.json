{
    "patch": "    Node functionNode = fnScope.getRootNode();\n    Preconditions.checkState(functionNode.isFunction());\n    if (NodeUtil.isGetOrSetKey(functionNode.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n    Node body = functionNode.getLastChild();\n    Node argList = getFunctionArgList(functionNode);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(functionNode);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n      Node lastArg = argList.getLastChild();\n      while (lastArg != null) {\n        if (!referenced.contains(fnScope.getVar(lastArg.getString()))) {\n          argList.removeChild(lastArg);\n          body.removeChild(lastArg.getNext());\n          lastArg = argList.getLastChild();\n        } else {\n          break;\n        }\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0851e7c5 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,31 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node functionNode = fnScope.getRootNode();\n+    Preconditions.checkState(functionNode.isFunction());\n+    if (NodeUtil.isGetOrSetKey(functionNode.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+    Node body = functionNode.getLastChild();\n+    Node argList = getFunctionArgList(functionNode);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(functionNode);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+      Node lastArg = argList.getLastChild();\n+      while (lastArg != null) {\n+        if (!referenced.contains(fnScope.getVar(lastArg.getString()))) {\n+          argList.removeChild(lastArg);\n+          body.removeChild(lastArg.getNext());\n+          lastArg = argList.getLastChild();\n+        } else {\n+          break;\n+        }\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable argList is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}