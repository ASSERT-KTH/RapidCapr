{
    "patch": "if (max - min <= 0.1) {\n    return new BisectionSolver().solve(f, min, max);\n} else if (max - min <= 2) {\n    return new BrentSolver().solve(f, min, max, initial);\n} else {\n    return new RiddersSolver().solve(f, min, max, initial);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..c107bd1cf 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,13 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+if (max - min <= 0.1) {\n+    return new BisectionSolver().solve(f, min, max);\n+} else if (max - min <= 2) {\n+    return new BrentSolver().solve(f, min, max, initial);\n+} else {\n+    return new RiddersSolver().solve(f, min, max, initial);\n+}\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}