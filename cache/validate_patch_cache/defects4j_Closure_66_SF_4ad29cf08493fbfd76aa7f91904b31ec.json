{
    "patch": "public static double getTypedPercent(String json) throws JSONException {\n    JSONObject obj = new JSONObject(json);\n    int total = obj.getInt(\"total\");\n    JSONArray values = obj.getJSONArray(\"values\");\n    int typed = 0;\n    for (int i = 0; i < values.length(); i++) {\n        typed += values.getJSONObject(i).getInt(\"typed\");\n    }\n    return (double)typed / total * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..fb302174 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) throws JSONException {\n+    JSONObject obj = new JSONObject(json);\n+    int total = obj.getInt(\"total\");\n+    JSONArray values = obj.getJSONArray(\"values\");\n+    int typed = 0;\n+    for (int i = 0; i < values.length(); i++) {\n+        typed += values.getJSONObject(i).getInt(\"typed\");\n+    }\n+    return (double)typed / total * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}