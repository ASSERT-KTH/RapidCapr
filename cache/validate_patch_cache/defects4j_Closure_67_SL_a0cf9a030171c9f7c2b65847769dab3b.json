{
    "patch": "          && !(n.getChildCount() == 2 && Token.STRING == n.getLastChild().getType() &&\n               \"prototype\".equals(n.getLastChild().getString()))) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\nindex 30b19e0b..45810b5f 100644\n--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n@@ -315,7 +315,8 @@ class AnalyzePrototypeProperties implements CompilerPass {\n       Node n = assign.getFirstChild();\n       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n           && n.getType() == Token.GETPROP\n-          ) {\n+          && !(n.getChildCount() == 2 && Token.STRING == n.getLastChild().getType() &&\n+               \"prototype\".equals(n.getLastChild().getString()))) {\n         // We want to exclude the assignment itself from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType() == Token.GETPROP;",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}