{
    "patch": "            int errorIndex = e.getIllegalValue();\n            int savedFieldIndex = (errorIndex - 1) / 2;\n            if (savedFieldIndex >= 0 && savedFieldIndex < count) {\n                String errorValue = Integer.toString(e.getIllegalValue());\n                DateTimeField field = savedFields[savedFieldIndex].getField();\n                String fieldName = field != null ? field.getType().getName() : \"?\";\n                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": Value \" + errorValue + \" for \" + fieldName + \" is not supported\");\n            } else {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..9b8a3ed4 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            int errorIndex = e.getIllegalValue();\n+            int savedFieldIndex = (errorIndex - 1) / 2;\n+            if (savedFieldIndex >= 0 && savedFieldIndex < count) {\n+                String errorValue = Integer.toString(e.getIllegalValue());\n+                DateTimeField field = savedFields[savedFieldIndex].getField();\n+                String fieldName = field != null ? field.getType().getName() : \"?\";\n+                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": Value \" + errorValue + \" for \" + fieldName + \" is not supported\");\n+            } else {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}