{
    "patch": "public static String fixCode(String code) {\n    String[] lines = code.split(\"\\\\r?\\\\n\");\n\n    for(int i=0; i<lines.length; i++) {\n        String line = lines[i];\n\n        if(line.contains(\"for(\") && line.contains(\"in\")) {\n            int index = line.indexOf(\"in\");\n            if (line.charAt(index - 1) != ' ' || line.charAt(index + 2) != ' ') {\n                lines[i] = line.substring(0, index) + \" \" + line.substring(index, line.length());\n            }\n        }\n    }\n\n    return String.join(System.lineSeparator(), lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..2e94e7be 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,22 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String[] lines = code.split(\"\\\\r?\\\\n\");\n+\n+    for(int i=0; i<lines.length; i++) {\n+        String line = lines[i];\n+\n+        if(line.contains(\"for(\") && line.contains(\"in\")) {\n+            int index = line.indexOf(\"in\");\n+            if (line.charAt(index - 1) != ' ' || line.charAt(index + 2) != ' ') {\n+                lines[i] = line.substring(0, index) + \" \" + line.substring(index, line.length());\n+            }\n+        }\n+    }\n+\n+    return String.join(System.lineSeparator(), lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}