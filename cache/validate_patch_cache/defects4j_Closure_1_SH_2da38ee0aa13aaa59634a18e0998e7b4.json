{
    "patch": "      for (Node currentActualParam : argList.children()) {\n        String currentActualParamName = currentActualParam.getString();\n        if (!referenced.contains(fnScope.getVar(currentActualParamName))) {\n          for (Node currentParam : function.getFirstChild().children()) {\n            String currentParamName = currentParam.getString();\n            if (currentParamName.equals(currentActualParamName)) {\n              function.getFirstChild().removeChild(currentParam);\n              Node newValue = IR.name(BLOCK_MARKER);\n              newValue.makeNonIndexable();\n              // NodeUtil.markFunctionsDeleted may not remove the parameter list.\n              currentParam.getParent().replaceWith(\n                  newValue.useSourceInfoIfMissingFrom(currentParam));\n              currentParam.setOriginalName(null);\n              compiler.reportCodeChange();\n              break;\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5b7e4f71 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,23 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      for (Node currentActualParam : argList.children()) {\n+        String currentActualParamName = currentActualParam.getString();\n+        if (!referenced.contains(fnScope.getVar(currentActualParamName))) {\n+          for (Node currentParam : function.getFirstChild().children()) {\n+            String currentParamName = currentParam.getString();\n+            if (currentParamName.equals(currentActualParamName)) {\n+              function.getFirstChild().removeChild(currentParam);\n+              Node newValue = IR.name(BLOCK_MARKER);\n+              newValue.makeNonIndexable();\n+              // NodeUtil.markFunctionsDeleted may not remove the parameter list.\n+              currentParam.getParent().replaceWith(\n+                  newValue.useSourceInfoIfMissingFrom(currentParam));\n+              currentParam.setOriginalName(null);\n+              compiler.reportCodeChange();\n+              break;\n+            }\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}