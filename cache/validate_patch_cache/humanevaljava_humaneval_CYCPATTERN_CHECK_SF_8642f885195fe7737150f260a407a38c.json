{
    "patch": "public static boolean cycpattern_check(String a, String b) {\n    int n = a.length();\n    int m = b.length();\n    if (n < m) {\n        return false;\n    }\n    String aDouble = a + a;\n    return aDouble.contains(b) || isCyclicPermutation(a, b);\n}\n\nprivate static boolean isCyclicPermutation(String a, String b) {\n    int n = a.length();\n    int m = b.length();\n    int j = 0; \n    for (int i = 0; i < n; i++) {\n        if (a.charAt(i) == b.charAt(j)) {\n            j++;\n            if (j == m) {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..c530b9a 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -9,14 +9,30 @@ package humaneval.buggy;\n // cycpattern_check(\"himenss\",\"simen\") => True\n \n public class CYCPATTERN_CHECK {\n-    public static boolean cycpattern_check(String a, String b) {\n-        int l = b.length();\n-        String pat = b;\n-        for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n-                if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n+public static boolean cycpattern_check(String a, String b) {\n+    int n = a.length();\n+    int m = b.length();\n+    if (n < m) {\n+        return false;\n+    }\n+    String aDouble = a + a;\n+    return aDouble.contains(b) || isCyclicPermutation(a, b);\n+}\n+\n+private static boolean isCyclicPermutation(String a, String b) {\n+    int n = a.length();\n+    int m = b.length();\n+    int j = 0; \n+    for (int i = 0; i < n; i++) {\n+        if (a.charAt(i) == b.charAt(j)) {\n+            j++;\n+            if (j == m) {\n+                return true;\n             }\n+        } else {\n+            j = 0;\n         }\n-        return false;\n     }\n+    return false;\n+}\n }",
    "result_reason": "   TEST_CYCPATTERN_CHECK.test_3:31 expected:<false> but was:<true>",
    "test_result": "FAIL"
}