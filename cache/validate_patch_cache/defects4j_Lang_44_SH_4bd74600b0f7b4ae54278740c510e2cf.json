{
    "patch": "        if (\"-0x\".equals(val)) {\n            return null;\n        }\n        try {\n            if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n                return createInteger(val);\n            }\n            if (val.startsWith(\"+\")) {\n                // Can't have sign with '+' char\n                return null;\n            }\n            if (val.startsWith(\"--\") || val.startsWith(\"++\")) {\n                // illegal start characters\n                return null;\n            }\n            if (val.startsWith(\"-\")) {\n                if (val.substring(1).startsWith(\"0\")) {\n                    // negative zero is not allowed\n                    return null;\n                }\n            }\n            final int indexOfPT = val.indexOf('.');\n            final int indexOfExponent = val.indexOf('e') + val.indexOf('E') + 1;\n\n            if (indexOfPT == -1 && indexOfExponent == -1) {\n                return createBigInteger(val);\n            }\n            if (indexOfPT > -1 && indexOfExponent == -1) {\n                if (val.indexOf('.') == val.lastIndexOf('.')) {\n                    return createBigDecimal(val);\n                }\n                // multiple points\n                return null;\n            }\n            if (indexOfExponent > -1 && indexOfExponent < indexOfPT) {\n                return null;\n            }\n            if (indexOfExponent == -1) {\n                return createBigDecimal(val);\n            }\n            // exponent is present\n            if (val.indexOf('e') == val.lastIndexOf('e') && val.indexOf('E') == val.lastIndexOf('E')) {\n                return createBigDecimal(val);\n            }\n            // multiple exponential symbols\n            return null;\n        } catch (NumberFormatException e) {\n            return null;\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..9cd63500 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,55 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (\"-0x\".equals(val)) {\n+            return null;\n+        }\n+        try {\n+            if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n+                return createInteger(val);\n+            }\n+            if (val.startsWith(\"+\")) {\n+                // Can't have sign with '+' char\n+                return null;\n+            }\n+            if (val.startsWith(\"--\") || val.startsWith(\"++\")) {\n+                // illegal start characters\n+                return null;\n+            }\n+            if (val.startsWith(\"-\")) {\n+                if (val.substring(1).startsWith(\"0\")) {\n+                    // negative zero is not allowed\n+                    return null;\n+                }\n+            }\n+            final int indexOfPT = val.indexOf('.');\n+            final int indexOfExponent = val.indexOf('e') + val.indexOf('E') + 1;\n+\n+            if (indexOfPT == -1 && indexOfExponent == -1) {\n+                return createBigInteger(val);\n+            }\n+            if (indexOfPT > -1 && indexOfExponent == -1) {\n+                if (val.indexOf('.') == val.lastIndexOf('.')) {\n+                    return createBigDecimal(val);\n+                }\n+                // multiple points\n+                return null;\n+            }\n+            if (indexOfExponent > -1 && indexOfExponent < indexOfPT) {\n+                return null;\n+            }\n+            if (indexOfExponent == -1) {\n+                return createBigDecimal(val);\n+            }\n+            // exponent is present\n+            if (val.indexOf('e') == val.lastIndexOf('e') && val.indexOf('E') == val.lastIndexOf('E')) {\n+                return createBigDecimal(val);\n+            }\n+            // multiple exponential symbols\n+            return null;\n+        } catch (NumberFormatException e) {\n+            return null;\n+        }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}