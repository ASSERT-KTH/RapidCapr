{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP\n// or GETELEM.\nJSType thisType = functionType.getTypeOfThis();\nif (thisType.isSubtypeOf(getNativeType(OBJECT_TYPE)) &&\n    !NodeUtil.isGet(functionType.getPropertyNode(), REGULAR_EXPRESSION)) {\n  report(t, n, THIS_IS_GLOBAL);\n}\n\nvisitParameterList(t, n, functionType);\nensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..e4072943 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP\n+// or GETELEM.\n+JSType thisType = functionType.getTypeOfThis();\n+if (thisType.isSubtypeOf(getNativeType(OBJECT_TYPE)) &&\n+    !NodeUtil.isGet(functionType.getPropertyNode(), REGULAR_EXPRESSION)) {\n+  report(t, n, THIS_IS_GLOBAL);\n+}\n+\n+visitParameterList(t, n, functionType);\n+ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}