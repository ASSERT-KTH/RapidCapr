{
    "patch": "public static boolean cycpattern_check(String a, String b) {\n    int lenA = a.length();\n    int lenB = b.length();\n    \n    if (lenA != lenB) {\n        return false;\n    }\n    \n    b += b; // repeat pattern to cover all possible circular shifts\n    \n    for (int shift = 0; shift < lenA; shift++) {\n        boolean match = true;\n        for (int i = 0; i < lenA; i++) {\n            if (a.charAt(i) != b.charAt(i + shift)) {\n                match = false;\n                break;\n            }\n        }\n        if (match) {\n            return true; // pattern found\n        }\n    }\n    \n    return false; // pattern not found\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..fdc06db 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -9,14 +9,29 @@ package humaneval.buggy;\n // cycpattern_check(\"himenss\",\"simen\") => True\n \n public class CYCPATTERN_CHECK {\n-    public static boolean cycpattern_check(String a, String b) {\n-        int l = b.length();\n-        String pat = b;\n-        for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n-                if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n+public static boolean cycpattern_check(String a, String b) {\n+    int lenA = a.length();\n+    int lenB = b.length();\n+    \n+    if (lenA != lenB) {\n+        return false;\n+    }\n+    \n+    b += b; // repeat pattern to cover all possible circular shifts\n+    \n+    for (int shift = 0; shift < lenA; shift++) {\n+        boolean match = true;\n+        for (int i = 0; i < lenA; i++) {\n+            if (a.charAt(i) != b.charAt(i + shift)) {\n+                match = false;\n+                break;\n             }\n         }\n-        return false;\n+        if (match) {\n+            return true; // pattern found\n+        }\n     }\n+    \n+    return false; // pattern not found\n+}\n }",
    "result_reason": "   TEST_CYCPATTERN_CHECK.test_1:15 expected:<false> but was:<true>",
    "test_result": "FAIL"
}