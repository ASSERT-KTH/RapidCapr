{
    "patch": "public double getPct(Object v) {\n    if (contains(v)) {\n        int count = 0;\n        for (int i = 0; i < data.length; i++) {\n            if (data[i].equals(v)) {\n                count++;\n            }\n        }\n        return count / (double) data.length;\n    } else {\n        return 0;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..30ff64ee9 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,19 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public double getPct(Object v) {\n+    if (contains(v)) {\n+        int count = 0;\n+        for (int i = 0; i < data.length; i++) {\n+            if (data[i].equals(v)) {\n+                count++;\n+            }\n+        }\n+        return count / (double) data.length;\n+    } else {\n+        return 0;\n+    }\n+}\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}