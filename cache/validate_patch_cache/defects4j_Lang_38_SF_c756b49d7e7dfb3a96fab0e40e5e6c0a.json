{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        applyRules(calendar, buf);\n        if (mTimeZoneForced) {\n            TimeZone tz = calendar.getTimeZone();\n            int offsetInMillis = tz.getOffset(calendar.getTimeInMillis());\n            if (offsetInMillis == 0) {\n                buf.append('Z');\n            } else {\n                int offsetInMinutes = offsetInMillis / (60 * 1000);\n\n                int hours = Math.abs(offsetInMinutes / 60);\n                int minutes = Math.abs(offsetInMinutes % 60);\n                buf.append(offsetInMinutes < 0 ? \"-\" : \"+\")\n                   .append(hours < 10 ? \"0\" : \"\")\n                   .append(hours)\n                   .append(minutes < 10 ? \"0\" : \"\")\n                   .append(minutes);\n            }\n        } else {\n            buf.append('Z');\n        }\n        return buf;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..b663dd12 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -872,7 +872,27 @@ public class FastDateFormat extends Format {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }\n-        return applyRules(calendar, buf);\n+        applyRules(calendar, buf);\n+        if (mTimeZoneForced) {\n+            TimeZone tz = calendar.getTimeZone();\n+            int offsetInMillis = tz.getOffset(calendar.getTimeInMillis());\n+            if (offsetInMillis == 0) {\n+                buf.append('Z');\n+            } else {\n+                int offsetInMinutes = offsetInMillis / (60 * 1000);\n+\n+                int hours = Math.abs(offsetInMinutes / 60);\n+                int minutes = Math.abs(offsetInMinutes % 60);\n+                buf.append(offsetInMinutes < 0 ? \"-\" : \"+\")\n+                   .append(hours < 10 ? \"0\" : \"\")\n+                   .append(hours)\n+                   .append(minutes < 10 ? \"0\" : \"\")\n+                   .append(minutes);\n+            }\n+        } else {\n+            buf.append('Z');\n+        }\n+        return buf;\n     }\n \n     /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<T10:11:12[]> but was:<T10:11:12[Z]>",
    "test_result": "FAIL"
}