{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode == null || !cfgNode.hasChildren()) {\n        return false;\n    }\n\n    Node lastChild = cfgNode.getLastChild();\n    return lastChild.isTry() && lastChild.hasChildren() && lastChild.getLastChild().isCatch();\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..537ffb01 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,7 +157,12 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n+    if (cfgNode == null || !cfgNode.hasChildren()) {\n+        return false;\n+    }\n+\n+    Node lastChild = cfgNode.getLastChild();\n+    return lastChild.isTry() && lastChild.hasChildren() && lastChild.getLastChild().isCatch();\n   }\n \n   private void computeMayUse(",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}