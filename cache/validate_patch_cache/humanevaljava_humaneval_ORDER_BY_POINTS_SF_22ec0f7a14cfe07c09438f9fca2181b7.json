{
    "patch": "public static Integer[] order_by_points(Integer[] nums) {\n    ArrayList<Integer> result = new ArrayList<>();\n    TreeMap<Integer, List<Integer>> map = new TreeMap<>();\n    for (int num : nums) {\n        int sum = 0;\n        int n = num;\n        if (n < 0) {\n            n = -n;\n        }\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        if (!map.containsKey(sum)) {\n            map.put(sum, new ArrayList<>());\n        }\n        map.get(sum).add(num);\n    }\n    for (List<Integer> list : map.values()) {\n        Collections.sort(list);\n        result.addAll(list);\n    }\n    return result.toArray(new Integer[] {});\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\nindex 4e6cd94..4b5f6fc 100644\n--- a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n+++ b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n@@ -14,32 +14,28 @@ For example:\n >>> order_by_points([]) == [] */\n \n public class ORDER_BY_POINTS {\n-    public static Integer[] order_by_points(Integer[] nums) {\n-        ArrayList<Integer> digits = new ArrayList<Integer>();\n-        HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n-\n-        for (int i = 0; i < nums.length; i += 1){\n-            int neg = 1;\n-            int n = nums[i];\n-            if (n < 0) {\n-                n = -1 * n;\n-                neg = -1;\n-            }\n-            int digit = 0;\n-            for (int j = 0; j < (n + \"\").toCharArray().length; j += 1){\n-                digit += ((n + \"\").toCharArray()[j] - '0') * neg;\n-            }\n-            digits.add(digit);\n-            if (! digits_number.containsKey(digit))\n-                digits_number.put(digit, new ArrayList<Integer>());\n-            digits_number.get(digit).add(nums[i]);\n+public static Integer[] order_by_points(Integer[] nums) {\n+    ArrayList<Integer> result = new ArrayList<>();\n+    TreeMap<Integer, List<Integer>> map = new TreeMap<>();\n+    for (int num : nums) {\n+        int sum = 0;\n+        int n = num;\n+        if (n < 0) {\n+            n = -n;\n+        }\n+        while (n > 0) {\n+            sum += n % 10;\n+            n /= 10;\n         }\n-        Collections.sort(digits);\n-        \n-        ArrayList<Integer> result = new ArrayList<Integer>();\n-        for (int i = 0; i < digits.size(); i += 1) {\n-            result.addAll(digits_number.get(digits.get(i)));\n+        if (!map.containsKey(sum)) {\n+            map.put(sum, new ArrayList<>());\n         }\n-        return result.toArray(new Integer[] {});\n+        map.get(sum).add(num);\n     }\n+    for (List<Integer> list : map.values()) {\n+        Collections.sort(list);\n+        result.addAll(list);\n+    }\n+    return result.toArray(new Integer[] {});\n+}\n }",
    "result_reason": " /tmp/humaneval-ORDER_BY_POINTS/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java:[19,5] cannot find symbol",
    "test_result": "ERROR"
}