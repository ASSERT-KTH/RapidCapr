{
    "patch": "if (grid[i][j] != val) {\n    int temp = val;\n    if (i != 0) val = Math.min(val, grid[i - 1][j]);\n    if (j != 0) val = Math.min(val, grid[i][j - 1]);\n    if (i != n - 1) val = Math.min(val, grid[i + 1][j]);\n    if (j != n - 1) val = Math.min(val, grid[i][j + 1]);\n    if (val < temp) {\n        i = -1; // reset loop index to restart the loop\n        continue;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MIN_PATH.java b/src/main/java/humaneval/buggy/MIN_PATH.java\nindex c19fee5..0b0e2dc 100644\n--- a/src/main/java/humaneval/buggy/MIN_PATH.java\n+++ b/src/main/java/humaneval/buggy/MIN_PATH.java\n@@ -38,10 +38,17 @@ public class MIN_PATH {\n         for(int i = 0; i < n; i++) {\n             for(int j = 0; j < n; j++) {\n                 if(grid[i][j] == 1) {\n-                    if(i != 0) val = Math.max(val, grid[i][j + 1]);\n-                    if(j != 0) val = Math.min(val, grid[i - 1][j]);\n-                    if(i != n - 1) val = Math.min(val, grid[i - 1][j]);\n-                    if(j != n + 1) val = Math.max(val, grid[i][j - 1]);\n+if (grid[i][j] != val) {\n+    int temp = val;\n+    if (i != 0) val = Math.min(val, grid[i - 1][j]);\n+    if (j != 0) val = Math.min(val, grid[i][j - 1]);\n+    if (i != n - 1) val = Math.min(val, grid[i + 1][j]);\n+    if (j != n - 1) val = Math.min(val, grid[i][j + 1]);\n+    if (val < temp) {\n+        i = -1; // reset loop index to restart the loop\n+        continue;\n+    }\n+}\n                 }\n             }\n         }",
    "result_reason": "",
    "test_result": "FAIL"
}