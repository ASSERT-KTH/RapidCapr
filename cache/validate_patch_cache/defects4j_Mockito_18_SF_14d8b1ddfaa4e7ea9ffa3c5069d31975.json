{
    "patch": "public static ReturnValues getValues() {\n    ReturnValues values = new ReturnValues();\n    values.setReturnValueFor(Integer.class, 42);\n    values.setReturnValueFor(String.class, \"hello\");\n    values.setReturnValueFor(List.class, Arrays.asList(1, 2, 3));\n    values.setReturnValueFor(Iterable.class, Collections.emptyList());// fixed line\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..d2f20bf5f 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,14 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static ReturnValues getValues() {\n+    ReturnValues values = new ReturnValues();\n+    values.setReturnValueFor(Integer.class, 42);\n+    values.setReturnValueFor(String.class, \"hello\");\n+    values.setReturnValueFor(List.class, Arrays.asList(1, 2, 3));\n+    values.setReturnValueFor(Iterable.class, Collections.emptyList());// fixed line\n+    return values;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}