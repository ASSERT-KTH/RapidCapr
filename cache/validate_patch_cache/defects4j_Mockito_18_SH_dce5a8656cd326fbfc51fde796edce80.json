{
    "patch": "public static ReturnValueWithModelDoa addFriend(final String username, final String friendUsername) {\n    final User user = UsersModel.instance.getUser(username);\n    if (user == null) {\n        return new ReturnValueWithModelDoa(usersModel);\n    }\n\n    final User friend = UsersModel.instance.getUser(friendUsername);\n    if (friend == null) {\n        return new ReturnValueWithModelDoa(usersModel);\n    }\n\n    user.addFriend(friend);\n\n    return new ReturnValueWithModelDoa(Iterable.class, user.getFriends());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}