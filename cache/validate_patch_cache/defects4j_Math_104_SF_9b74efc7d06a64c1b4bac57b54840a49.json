{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n        return Double.NaN;\n    }\n    if (x == 0.0) {\n        return 0.0;\n    }\n    double d = 1.0 / (a + 1e-6);\n    double c = x * d;\n    double s = c;\n    double n = 1.0;\n    double an;\n    while (Math.abs(c) > Math.abs(s) * 1e-15) {\n        an = n / (a + 1e-6);\n        s += (c *= an);\n        n += 1.0;\n    }\n    return Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * s;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..70e93056a 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,25 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    if (Double.isNaN(a) || Double.isNaN(x) || a <= 0.0 || x < 0.0) {\n+        return Double.NaN;\n+    }\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+    double d = 1.0 / (a + 1e-6);\n+    double c = x * d;\n+    double s = c;\n+    double n = 1.0;\n+    double an;\n+    while (Math.abs(c) > Math.abs(s) * 1e-15) {\n+        an = n / (a + 1e-6);\n+        s += (c *= an);\n+        n += 1.0;\n+    }\n+    return Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * s;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}