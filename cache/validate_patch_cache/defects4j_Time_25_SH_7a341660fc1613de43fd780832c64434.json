{
    "patch": "            long prev = previousTransition(instantAdjusted);\n            if (prev == instantAdjusted - offsetLocal) {\n                // we're inside a DST gap, move to the other side\n                prev = previousTransition(prev - 1);\n            }\n            long next = nextTransition(instantAdjusted);\n            if (next == instantAdjusted - offsetLocal) {\n                // we're inside a DST gap, move to the other side\n                next = nextTransition(next + 1);\n            }\n            if (next != prev) {\n                return offsetLocal;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..63be4350 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            long prev = previousTransition(instantAdjusted);\n+            if (prev == instantAdjusted - offsetLocal) {\n+                // we're inside a DST gap, move to the other side\n+                prev = previousTransition(prev - 1);\n+            }\n+            long next = nextTransition(instantAdjusted);\n+            if (next == instantAdjusted - offsetLocal) {\n+                // we're inside a DST gap, move to the other side\n+                next = nextTransition(next + 1);\n+            }\n+            if (next != prev) {\n+                return offsetLocal;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}