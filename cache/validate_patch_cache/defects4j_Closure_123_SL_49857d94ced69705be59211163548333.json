{
    "patch": "public static String infill(String input) {\n    try {\n        Object[] obj = new Object[4];\n        obj[0] = true;\n        obj[1] = new int[] {1, 2, 3};\n        obj[2] = null;\n        obj[3] = new byte[] {0x30, 0x31};\n        Object[] arr = new Object[] {obj};\n\n        // infill location\n        Object[] d = (Object[])(((Object[])arr[0])[1]);\n        boolean containsZero = (d.length >= 0) && (0 < d.length) && (d[0] instanceof Integer || d[0] instanceof Byte || d[0] instanceof Short);\n\n        String out = \"for(int a = 0; a < 1\" + (containsZero ? \":\" + \"((0 in d)? 1:0)\") + \"; a++)foo()\";\n        return out;\n    } catch(Exception e) {\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}