{
    "patch": "if (fnName != null) {\n    lp.setLineno(fnName.getLineno());\n    int lparenCharno = fnName.getEndLineno() + 1 \n        + functionNode.getBody().getLineno() - functionNode.getLineno();\n    lp.setCharno(position2charno(lparenCharno));\n} else {\n    lp.setLineno(functionNode.getLineno());\n    int lparenCharno = functionNode.getAbsolutePosition() \n        + functionNode.getLp();\n    lp.setCharno(position2charno(lparenCharno));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..9185289f 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,17 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+if (fnName != null) {\n+    lp.setLineno(fnName.getLineno());\n+    int lparenCharno = fnName.getEndLineno() + 1 \n+        + functionNode.getBody().getLineno() - functionNode.getLineno();\n+    lp.setCharno(position2charno(lparenCharno));\n+} else {\n+    lp.setLineno(functionNode.getLineno());\n+    int lparenCharno = functionNode.getAbsolutePosition() \n+        + functionNode.getLp();\n+    lp.setCharno(position2charno(lparenCharno));\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}