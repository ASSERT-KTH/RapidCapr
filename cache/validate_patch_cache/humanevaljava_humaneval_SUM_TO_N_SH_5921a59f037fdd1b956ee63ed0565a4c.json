{
    "patch": "if (n < 1) {\n    return 0;\n} else if (n == 1) {\n    return 1;\n} else {\n    int sum = 0;\n    try {\n        sum = Math.multiplyExact(n, n+1);\n        sum = Math.floorDiv(sum, 2);\n    } catch (ArithmeticException e) {\n        throw new IllegalArgumentException(\"Integer overflow for large n\");\n    }\n    return sum;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SUM_TO_N.java b/src/main/java/humaneval/buggy/SUM_TO_N.java\nindex 319b248..6ab83a0 100644\n--- a/src/main/java/humaneval/buggy/SUM_TO_N.java\n+++ b/src/main/java/humaneval/buggy/SUM_TO_N.java\n@@ -14,6 +14,19 @@ package humaneval.buggy;\n \n public class SUM_TO_N {\n     public static int sum_to_n(int n) {\n-        return (n + 1) * (n / 2);\n+if (n < 1) {\n+    return 0;\n+} else if (n == 1) {\n+    return 1;\n+} else {\n+    int sum = 0;\n+    try {\n+        sum = Math.multiplyExact(n, n+1);\n+        sum = Math.floorDiv(sum, 2);\n+    } catch (ArithmeticException e) {\n+        throw new IllegalArgumentException(\"Integer overflow for large n\");\n+    }\n+    return sum;\n+}\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}