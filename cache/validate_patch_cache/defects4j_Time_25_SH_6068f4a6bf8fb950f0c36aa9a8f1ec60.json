{
    "patch": "            if (offsetLocal < offsetAdjusted) {\n                // we need to check if we are just over a DST gap\n                // find when the new offset comes into effect\n                long transition = previousTransition(instantAdjusted);\n                if ((instantAdjusted - transition) < (offsetAdjusted - offsetLocal)) {\n                    // new offset has come into effect and is less than old offset\n                    // this means we are just over the DST gap\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3fcc68ac 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal < offsetAdjusted) {\n+                // we need to check if we are just over a DST gap\n+                // find when the new offset comes into effect\n+                long transition = previousTransition(instantAdjusted);\n+                if ((instantAdjusted - transition) < (offsetAdjusted - offsetLocal)) {\n+                    // new offset has come into effect and is less than old offset\n+                    // this means we are just over the DST gap\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}