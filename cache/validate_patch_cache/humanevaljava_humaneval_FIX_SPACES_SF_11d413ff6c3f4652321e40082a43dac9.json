{
    "patch": "public static String fix_spaces(String text) {\n    String new_text = \"\";\n    int i = 0;\n    int start = 0;\n    int end = 0;\n    while (i < text.length()) {\n        if (text.charAt(i) == ' ') {\n            end += 1;\n        } else {\n            if (end - start > 2) {\n                new_text = addDashText(new_text, text.substring(i, i + 1));\n            } else if (end - start > 0) {\n                new_text = addUnderscoreText(new_text, start, end, text.substring(i, i + 1));\n            } else {\n                new_text += text.substring(i, i + 1);\n            }\n            start = i + 1;\n            end = i + 1;\n        }\n        i += 1;\n    }\n\n    // Handle last word if it has spaces\n    if (end - start > 2) {\n        new_text = addDashText(new_text, text.substring(start));\n    } else if (end - start > 0) {\n        new_text = addUnderscoreText(new_text, start, end, text.substring(start));\n    } else {\n        new_text += text.substring(start);\n    }\n\n    return new_text;\n}\n\nprivate static String addDashText(String text, String word) {\n    if (!text.isEmpty()) {\n        text += \"-\";\n    }\n    text += word;\n    return text;\n}\n\nprivate static String addUnderscoreText(String text, int start, int end, String word) {\n    for (int j = start; j < end; j++) {\n        text += \"_\";\n    }\n    text += word;\n    return text;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..87fda7c 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -10,29 +10,53 @@ fix_spaces(\" Example 2\") == \"_Example_2\"\n fix_spaces(\" Example   3\") == \"_Example-3\" */\n \n public class FIX_SPACES {\n-    public static String fix_spaces(String text) {\n-        String new_text = \"\";\n-        int i = 0;\n-        int start = 0;\n-        int end = 0;\n-        while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n-                    }\n-                    new_text += text.substring(i, i + 1);\n-                } else {\n-                    new_text += text.substring(i, i + 1);\n-                }\n-                start = i + 1;\n-                end = i + 1;\n+public static String fix_spaces(String text) {\n+    String new_text = \"\";\n+    int i = 0;\n+    int start = 0;\n+    int end = 0;\n+    while (i < text.length()) {\n+        if (text.charAt(i) == ' ') {\n+            end += 1;\n+        } else {\n+            if (end - start > 2) {\n+                new_text = addDashText(new_text, text.substring(i, i + 1));\n+            } else if (end - start > 0) {\n+                new_text = addUnderscoreText(new_text, start, end, text.substring(i, i + 1));\n+            } else {\n+                new_text += text.substring(i, i + 1);\n             }\n-            i += 1;\n+            start = i + 1;\n+            end = i + 1;\n         }\n+        i += 1;\n+    }\n+\n+    // Handle last word if it has spaces\n+    if (end - start > 2) {\n+        new_text = addDashText(new_text, text.substring(start));\n+    } else if (end - start > 0) {\n+        new_text = addUnderscoreText(new_text, start, end, text.substring(start));\n+    } else {\n+        new_text += text.substring(start);\n+    }\n+\n+    return new_text;\n+}\n \n-        return new_text;\n+private static String addDashText(String text, String word) {\n+    if (!text.isEmpty()) {\n+        text += \"-\";\n     }\n+    text += word;\n+    return text;\n+}\n+\n+private static String addUnderscoreText(String text, int start, int end, String word) {\n+    for (int j = start; j < end; j++) {\n+        text += \"_\";\n+    }\n+    text += word;\n+    return text;\n+}\n }",
    "result_reason": "   TEST_FIX_SPACES.test_1:19 expected:<Mudasir_Hanif_[ ]> but was:<Mudasir_Hanif_[]>",
    "test_result": "FAIL"
}