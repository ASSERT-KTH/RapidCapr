{
    "patch": "            millis = savedFields[i].set(millis, resetFields);\n            if (resetFields && millis < iMillis) {\n                // Clear all fields above this one, and reset to this and recompute\n                for (int j = 0; j < i && millis < iMillis; j++) {\n                    millis = savedFields[j].set(millis, false);\n                }\n                millis = savedFields[i].set(millis, true);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..59eb808a 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            millis = savedFields[i].set(millis, resetFields);\n+            if (resetFields && millis < iMillis) {\n+                // Clear all fields above this one, and reset to this and recompute\n+                for (int j = 0; j < i && millis < iMillis; j++) {\n+                    millis = savedFields[j].set(millis, false);\n+                }\n+                millis = savedFields[i].set(millis, true);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}