{
    "patch": "public static String fixCode(String code) {\n    String fixedCode = code.replace(\"for(var \", \"for(int \");\n    fixedCode = fixedCode.replace(\" in \", \" : \");\n    fixedCode = fixedCode.replace(\"){\", \")\\n{\");\n    fixedCode = fixedCode.replace(\"{var \", \"{int \");\n    fixedCode = fixedCode.replace(\"var \", \"int \");\n    fixedCode = fixedCode.replace(\"?0:[\", \"? new int[]{\");\n    fixedCode = fixedCode.replace(\"]}\", \"}[0]\");\n    return fixedCode;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..5edf9b17 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,16 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String fixedCode = code.replace(\"for(var \", \"for(int \");\n+    fixedCode = fixedCode.replace(\" in \", \" : \");\n+    fixedCode = fixedCode.replace(\"){\", \")\\n{\");\n+    fixedCode = fixedCode.replace(\"{var \", \"{int \");\n+    fixedCode = fixedCode.replace(\"var \", \"int \");\n+    fixedCode = fixedCode.replace(\"?0:[\", \"? new int[]{\");\n+    fixedCode = fixedCode.replace(\"]}\", \"}[0]\");\n+    return fixedCode;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}