{
    "patch": "            } else if (Double.MAX_VALUE / (getMaxEvaluations() * 2) < getStartObjectValue()) {\n                // If the normalization will overflow (cf. \"encode\" method), abort early.\n                throw new NumberIsTooLargeException(Double.MAX_VALUE / (getMaxEvaluations() * 2), getStartObjectValue(), false);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 51d1c6428..f3130207f 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -537,6 +537,9 @@ public class CMAESOptimizer\n                 boundaries[1] = uB;\n \n                 // Abort early if the normalization will overflow (cf. \"encode\" method).\n+            } else if (Double.MAX_VALUE / (getMaxEvaluations() * 2) < getStartObjectValue()) {\n+                // If the normalization will overflow (cf. \"encode\" method), abort early.\n+                throw new NumberIsTooLargeException(Double.MAX_VALUE / (getMaxEvaluations() * 2), getStartObjectValue(), false);\n             }\n         } else {\n             // Convert API to internal handling of boundaries.",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}