{
    "patch": "public int compareTo(Fraction other) {\n    if (this == other) {\n        return 0;\n    }\n    \n    long num1 = (long) this.numerator * other.denominator;\n    long num2 = (long) other.numerator * this.denominator;\n\n    if (num1 < num2) {\n        return -1;\n    } else if (nu",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..701993317 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -255,12 +255,18 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n-    public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n+public int compareTo(Fraction other) {\n+    if (this == other) {\n+        return 0;\n     }\n     \n+    long num1 = (long) this.numerator * other.denominator;\n+    long num2 = (long) other.numerator * this.denominator;\n+\n+    if (num1 < num2) {\n+        return -1;\n+    } else if (nu\n+    \n     /**\n      * Gets the fraction as a <tt>double</tt>. This calculates the fraction as\n      * the numerator divided by denominator.",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}