{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double gammaValue = Gamma.gamma(a);\n    ContinuedFraction cf = new ContinuedFraction() {\n        @Override\n        protected double getA(int n, double x) {\n            if (n == 0) {\n                return 1;\n            } else if (n % 2 != 0) {\n                int m = (n + 1) / 2;\n                return -(a + m - 1) * (a + x + m - 1);\n            } else {\n                int m = n / 2;\n                return m * (x - m);\n            }\n        }\n        \n        @Override\n        protected double getB(int n, double x) {\n            return n + a - 1;\n        }\n    };\n    double r = cf.evaluate(x / a, 1.0e-15, Integer.MAX_VALUE);\n    return r * Math.exp(-x + a * Math.log(x) - gammaValue) / a;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..6a3e8bceb 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,30 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double gammaValue = Gamma.gamma(a);\n+    ContinuedFraction cf = new ContinuedFraction() {\n+        @Override\n+        protected double getA(int n, double x) {\n+            if (n == 0) {\n+                return 1;\n+            } else if (n % 2 != 0) {\n+                int m = (n + 1) / 2;\n+                return -(a + m - 1) * (a + x + m - 1);\n+            } else {\n+                int m = n / 2;\n+                return m * (x - m);\n+            }\n+        }\n+        \n+        @Override\n+        protected double getB(int n, double x) {\n+            return n + a - 1;\n+        }\n+    };\n+    double r = cf.evaluate(x / a, 1.0e-15, Integer.MAX_VALUE);\n+    return r * Math.exp(-x + a * Math.log(x) - gammaValue) / a;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}