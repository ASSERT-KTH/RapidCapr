{
    "patch": "        } catch (ClassNotFoundException ex) {\n            throw new UnknownClassException(ex.getMessage(), ex.getCause());\n        } catch (LinkageError ex) {\n            throw new UnknownClassException(ex.getMessage(), ex.getCause());\n        }\n    }\n>>> [ INFILL ] <<<\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..c4d0c94c0 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,14 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+        } catch (ClassNotFoundException ex) {\n+            throw new UnknownClassException(ex.getMessage(), ex.getCause());\n+        } catch (LinkageError ex) {\n+            throw new UnknownClassException(ex.getMessage(), ex.getCause());\n+        }\n+    }\n+>>> [ INFILL ] <<<\n+}\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}