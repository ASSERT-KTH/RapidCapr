{
    "patch": "    class Cyclic {\n        String encode_cyclic(String s) {\n            ArrayList<String> groups = new ArrayList<String>();\n\n            for (int i = 0; i < s.length(); i += 3){\n                groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n            }\n\n            String result = \"\";\n            for (String group : groups){\n                result += group.substring(1) + group.substring(0, 1);\n            }\n\n            return s.length() + \":\" + result;\n        }\n\n        String decode_cyclic(String s) {\n            int colonIndex = s.indexOf(\":\");\n            int originalLength = Integer.parseInt(s.substring(0, colonIndex));\n            String encodedString = s.substring(colonIndex + 1);\n\n            String result = \"\";\n            for(int i = 0;i < encodedString.length();i+=2) {\n                result += encodedString.charAt(i+1);\n                result += encodedString.charAt(i);\n            }\n\n            return result.substring(0, originalLength);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..6080197 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -4,27 +4,36 @@ import java.util.ArrayList;\n \n public class DECODE_CYCLIC {\n     public static String decode_cyclic(String str) {\n-        class Cyclic {\n-            String encode_cyclic(String s) {\n-                ArrayList<String> groups = new ArrayList<String>();\n-\n-                for (int i = 0; i < s.length(); i += 3){\n-                    groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n-                }\n-                int remain = s.length() % 3;\n-                \n-                String result = \"\";\n-                for (String group : groups){\n-                    result += group.substring(1) + group.substring(0, 1);\n-                }\n-\n-                if (remain > 0){\n-                    result += s.substring(s.length() - remain);\n-                }\n-\n-                return result;\n+    class Cyclic {\n+        String encode_cyclic(String s) {\n+            ArrayList<String> groups = new ArrayList<String>();\n+\n+            for (int i = 0; i < s.length(); i += 3){\n+                groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n+            }\n+\n+            String result = \"\";\n+            for (String group : groups){\n+                result += group.substring(1) + group.substring(0, 1);\n+            }\n+\n+            return s.length() + \":\" + result;\n+        }\n+\n+        String decode_cyclic(String s) {\n+            int colonIndex = s.indexOf(\":\");\n+            int originalLength = Integer.parseInt(s.substring(0, colonIndex));\n+            String encodedString = s.substring(colonIndex + 1);\n+\n+            String result = \"\";\n+            for(int i = 0;i < encodedString.length();i+=2) {\n+                result += encodedString.charAt(i+1);\n+                result += encodedString.charAt(i);\n             }\n+\n+            return result.substring(0, originalLength);\n         }\n+    }\n         \n         final Cyclic cyclic = new Cyclic();\n         return cyclic.encode_cyclic(cyclic.encode_cyclic(str));",
    "result_reason": "   TEST_DECODE_CYCLIC.test_0:7 expected:<[9::c7bfaegd]> but was:<[abcdefg]>",
    "test_result": "FAIL"
}