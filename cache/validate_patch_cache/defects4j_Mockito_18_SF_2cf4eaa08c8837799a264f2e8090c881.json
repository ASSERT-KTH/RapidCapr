{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (m == null && arg == null) {\n        return true;\n    }\n    if (m == null || arg == null) {\n        return false;\n    }\n    return StringDescription.toString(m).equals(arg.toString());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..9f3a0ae9e 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,15 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (m == null && arg == null) {\n+        return true;\n+    }\n+    if (m == null || arg == null) {\n+        return false;\n+    }\n+    return StringDescription.toString(m).equals(arg.toString());\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}