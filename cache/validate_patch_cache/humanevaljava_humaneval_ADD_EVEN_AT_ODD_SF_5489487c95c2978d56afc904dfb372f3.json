{
    "patch": "public static int add_even_at_odd(int[] lst) {\n    int sum = 0;\n    int oddIndex = 1;\n    int evenIndex = 0;\n    while (oddIndex < lst.length && evenIndex < lst.length) {\n        while (oddIndex < lst.length && lst[oddIndex] % 2 == 0) {\n            oddIndex += 2;\n        }\n        while (evenIndex < lst.length && lst[evenIndex] % 2 != 0) {\n            evenIndex += 2;\n        }\n        if (oddIndex < lst.length && evenIndex < lst.length) {\n            sum += lst[evenIndex];\n            sum += lst[oddIndex];\n            oddIndex += 2;\n            evenIndex += 2;\n        }\n    }\n    return sum;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ADD_EVEN_AT_ODD.java b/src/main/java/humaneval/buggy/ADD_EVEN_AT_ODD.java\nindex 9d1cbb8..b5a4f59 100644\n--- a/src/main/java/humaneval/buggy/ADD_EVEN_AT_ODD.java\n+++ b/src/main/java/humaneval/buggy/ADD_EVEN_AT_ODD.java\n@@ -5,12 +5,24 @@ Examples:\n     add([4, 2, 6, 7]) ==> 2 */\n \n public class ADD_EVEN_AT_ODD {\n-    public static int add_even_at_odd(int[] lst) {\n-        int sum = 0;\n-        for (int i = 0; i < lst.length; i += 1) {\n-            if (lst[i] % 2 == 0)\n-                sum += lst[i];\n+public static int add_even_at_odd(int[] lst) {\n+    int sum = 0;\n+    int oddIndex = 1;\n+    int evenIndex = 0;\n+    while (oddIndex < lst.length && evenIndex < lst.length) {\n+        while (oddIndex < lst.length && lst[oddIndex] % 2 == 0) {\n+            oddIndex += 2;\n+        }\n+        while (evenIndex < lst.length && lst[evenIndex] % 2 != 0) {\n+            evenIndex += 2;\n+        }\n+        if (oddIndex < lst.length && evenIndex < lst.length) {\n+            sum += lst[evenIndex];\n+            sum += lst[oddIndex];\n+            oddIndex += 2;\n+            evenIndex += 2;\n         }\n-        return sum;\n     }\n+    return sum;\n+}\n }",
    "result_reason": "   TEST_ADD_EVEN_AT_ODD.test_0:7 expected:<0> but was:<88>",
    "test_result": "FAIL"
}