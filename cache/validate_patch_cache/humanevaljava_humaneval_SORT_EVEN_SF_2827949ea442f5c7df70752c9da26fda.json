{
    "patch": "public static int[] sort_even(int[] l) {\n    int[] result = new int[l.length];\n    int[][] evenIndices = new int[l.length / 2][2]; // 2D array to store even numbers and their indices\n\n    int evenCount = 0;\n    for (int i = 0; i < l.length; i++) {\n        if (l[i] % 2 == 0) {\n            evenIndices[evenCount][0] = l[i];\n            evenIndices[evenCount][1] = i;\n            evenCount++;\n        }\n    }\n\n    // Sort array based on even numbers\n    Arrays.sort(evenIndices, 0, evenCount, (a, b) -> Integer.compare(a[0], b[0]));\n\n    // Copy over sorted even numbers into result array using their indices\n    int j = 0;\n    for (int i = 0; i < l.length; i++) {\n        if (l[i] % 2 == 0) {\n            result[i] = evenIndices[j][0];\n            j++;\n        } else {\n            result[i] = l[i];\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SORT_EVEN.java b/src/main/java/humaneval/buggy/SORT_EVEN.java\nindex cce3d2a..ea9090f 100644\n--- a/src/main/java/humaneval/buggy/SORT_EVEN.java\n+++ b/src/main/java/humaneval/buggy/SORT_EVEN.java\n@@ -3,21 +3,32 @@ package humaneval.buggy;\n import java.util.Arrays;\n \n public class SORT_EVEN {\n-    public static int[] sort_even(int[] l) {\n-        int[] result = new int[l.length];\n+public static int[] sort_even(int[] l) {\n+    int[] result = new int[l.length];\n+    int[][] evenIndices = new int[l.length / 2][2]; // 2D array to store even numbers and their indices\n \n-        int[] evens = new int[1 + (int) (l.length / 2.)];\n-        for (int i = 0; i < l.length; i += 2) {\n-            evens[(int) i / 2] = l[i];\n+    int evenCount = 0;\n+    for (int i = 0; i < l.length; i++) {\n+        if (l[i] % 2 == 0) {\n+            evenIndices[evenCount][0] = l[i];\n+            evenIndices[evenCount][1] = i;\n+            evenCount++;\n         }\n-        Arrays.sort(evens);\n-        for (int i = 0; i < l.length; i += 1) {\n-            if (i % 2 == 0){\n-                result[i] = evens[(int) i / 2];\n-            } else{\n-                result[i] = l[i];\n-            }\n+    }\n+\n+    // Sort array based on even numbers\n+    Arrays.sort(evenIndices, 0, evenCount, (a, b) -> Integer.compare(a[0], b[0]));\n+\n+    // Copy over sorted even numbers into result array using their indices\n+    int j = 0;\n+    for (int i = 0; i < l.length; i++) {\n+        if (l[i] % 2 == 0) {\n+            result[i] = evenIndices[j][0];\n+            j++;\n+        } else {\n+            result[i] = l[i];\n         }\n-        return result;\n     }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_SORT_EVEN.test_1:21",
    "test_result": "FAIL"
}