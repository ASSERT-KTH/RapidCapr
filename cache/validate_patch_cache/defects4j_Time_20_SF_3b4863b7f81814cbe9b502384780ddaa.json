{
    "patch": "public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n    String str = text.substring(position);\n    for (String id : ALL_IDS) {\n        int idIndex = str.indexOf(id);\n        if (idIndex == 0 && (str.length() == id.length() || \n                             str.charAt(id.length()) == '/' || \n                             Character.isWhitespace(str.charAt(id.length())))) {\n            bucket.setZone(DateTimeZone.forID(id));\n            return position + id.length();\n        }\n    }\n    return ~position;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex 558a5864..0a1559b0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2537,16 +2537,19 @@ public class DateTimeFormatterBuilder {\n             return MAX_LENGTH;\n         }\n \n-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n-            String str = text.substring(position);\n-            for (String id : ALL_IDS) {\n-                if (str.startsWith(id)) {\n-                    bucket.setZone(DateTimeZone.forID(id));\n-                    return position + id.length();\n-                }\n-            }\n-            return ~position;\n-        }\n+public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n+    String str = text.substring(position);\n+    for (String id : ALL_IDS) {\n+        int idIndex = str.indexOf(id);\n+        if (idIndex == 0 && (str.length() == id.length() || \n+                             str.charAt(id.length()) == '/' || \n+                             Character.isWhitespace(str.charAt(id.length())))) {\n+            bucket.setZone(DateTimeZone.forID(id));\n+            return position + id.length();\n+        }\n+    }\n+    return ~position;\n+}\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}