{
    "patch": "char[] csrc = sval.toCharArray();\nchar[] cdest = new char[csrc.length];\nint j = 0;\nfor(int i=0;i<csrc.length;++i) {\n    if(csrc[i]=='+') {\n        cdest[j++] = ' ';\n    } else if(csrc[i]=='%') {\n        cdest[j++] = (char)(Integer.parseInt(sval.substring(i+1,i+3),16));\n        i += 2;\n    } else {\n        cdest[j++] = csrc[i];\n    }\n}\nsval = new String(cdest,0,j); // Corrected line",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}