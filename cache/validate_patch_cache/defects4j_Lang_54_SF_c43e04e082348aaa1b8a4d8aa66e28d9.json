{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    int len = str.length();\n\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n\n    if (!isAlpha(ch0) || !isAlpha(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 2) {\n        return new Locale(str);\n    } else if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    } else {\n        if (len == 3) {\n            return new Locale(str.substring(0, 2));\n        } else if (len < 5 || str.charAt(3) == '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n\n            if (!isAlpha(ch3) || !isAlpha(ch4)) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3));\n            } else if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else {\n                int idx = 6;\n\n                while (idx < len) {\n                    if (str.charAt(idx) == '_') {\n                        idx++;\n                        break;\n                    }\n\n                    if (!isAlphaNumeric(str.charAt(idx))) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n\n                    idx++;\n                }\n\n                if (idx == len && str.charAt(len-1) == '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(idx));\n            }\n        }\n    }\n}\n\nprivate static boolean isAlpha(char ch) {\n    return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n}\n\nprivate static boolean isAlphaNumeric(char ch) {\n    return isAlpha(ch) || (ch >= '0' && ch <= '9');\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..8e0da9fd 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,78 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    int len = str.length();\n+\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+\n+    if (!isAlpha(ch0) || !isAlpha(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 2) {\n+        return new Locale(str);\n+    } else if (str.charAt(2) != '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    } else {\n+        if (len == 3) {\n+            return new Locale(str.substring(0, 2));\n+        } else if (len < 5 || str.charAt(3) == '_') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n         } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n             char ch3 = str.charAt(3);\n             char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+\n+            if (!isAlpha(ch3) || !isAlpha(ch4)) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n+\n             if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+                return new Locale(str.substring(0, 2), str.substring(3));\n+            } else if (str.charAt(5) != '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             } else {\n-                if (str.charAt(5) != '_') {\n+                int idx = 6;\n+\n+                while (idx < len) {\n+                    if (str.charAt(idx) == '_') {\n+                        idx++;\n+                        break;\n+                    }\n+\n+                    if (!isAlphaNumeric(str.charAt(idx))) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+\n+                    idx++;\n+                }\n+\n+                if (idx == len && str.charAt(len-1) == '_') {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(idx));\n             }\n         }\n     }\n+}\n+\n+private static boolean isAlpha(char ch) {\n+    return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n+}\n+\n+private static boolean isAlphaNumeric(char ch) {\n+    return isAlpha(ch) || (ch >= '0' && ch <= '9');\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}