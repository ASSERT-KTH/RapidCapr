{
    "patch": "// Replace this:\ncurChar = java.nio.charset.Charset.forName(\"ISO-8859-1\").decode(java.nio.ByteBuffer.wrap(new byte[]{(byte)(curChar & 0xff)})).charAt(0);\n// With this:\nCharsetDecoder decoder = Charset.forName(\"ISO-8859-1\").newDecoder();\ndecoder.onMalformedInput(CodingErrorAction.REPLACE);\ndecoder.onUnmappableCharacter(CodingErrorAction.REPLACE);\nString str = decoder.decode(ByteBuffer.wrap(new byte[]{(byte)(curChar & 0xff)})).toString();\nif(str.length() == 0){\n    success = false;\n    break;\n}\ncurChar = str.charAt(0);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}