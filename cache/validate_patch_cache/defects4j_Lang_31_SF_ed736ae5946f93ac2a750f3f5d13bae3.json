{
    "patch": "public static boolean containsAny(final CharSequence string, final char[] searchChars) {\n    final int strLength = string.length();\n    final int searchLength = searchChars.length;\n    final boolean[] matched = new boolean[Character.MAX_VALUE + 1];\n    int strIndex = -1;\n    \n    // Loops through the searchChars array, and sets the matched array's indices that match the\n    // searchChars array to true\n    for (int i = 0; i < searchLength; i++) {\n        final char ch = searchChars[i];\n        if (matched[ch]) {\n            continue;\n        }\n        if (string.indexOf(ch) >= 0) {\n            matched[ch] = true;\n        }\n    }\n    \n    // Loops through the string, and returns true if a character is found in the matched array\n    while (++strIndex < strLength) {\n        if (matched[string.charAt(strIndex)]) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..107ac34f 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,32 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence string, final char[] searchChars) {\n+    final int strLength = string.length();\n+    final int searchLength = searchChars.length;\n+    final boolean[] matched = new boolean[Character.MAX_VALUE + 1];\n+    int strIndex = -1;\n+    \n+    // Loops through the searchChars array, and sets the matched array's indices that match the\n+    // searchChars array to true\n+    for (int i = 0; i < searchLength; i++) {\n+        final char ch = searchChars[i];\n+        if (matched[ch]) {\n+            continue;\n+        }\n+        if (string.indexOf(ch) >= 0) {\n+            matched[ch] = true;\n+        }\n+    }\n+    \n+    // Loops through the string, and returns true if a character is found in the matched array\n+    while (++strIndex < strLength) {\n+        if (matched[string.charAt(strIndex)]) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}