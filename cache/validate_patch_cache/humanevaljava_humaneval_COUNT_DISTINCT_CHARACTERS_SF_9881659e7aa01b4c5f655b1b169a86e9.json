{
    "patch": "import java.util.TreeMap;\n\npublic static int count_distinct_characters(String string) {\n    TreeMap<Character, Integer> distinct = new TreeMap<Character, Integer>();\n\n    for (char c : string.toCharArray()) {\n        c = Character.toLowerCase(c);\n        if (!distinct.containsKey(c)) {\n            distinct.put(c, 1);\n        } else {\n            distinct.put(c, distinct.get(c) + 1);\n        }\n    }\n    return distinct.size();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COUNT_DISTINCT_CHARACTERS.java b/src/main/java/humaneval/buggy/COUNT_DISTINCT_CHARACTERS.java\nindex 75ad8e5..da92943 100644\n--- a/src/main/java/humaneval/buggy/COUNT_DISTINCT_CHARACTERS.java\n+++ b/src/main/java/humaneval/buggy/COUNT_DISTINCT_CHARACTERS.java\n@@ -3,13 +3,19 @@ package humaneval.buggy;\n import java.util.HashSet;\n \n public class COUNT_DISTINCT_CHARACTERS {\n-    public static int count_distinct_characters(String string) {\n-        HashSet<Character> distinct = new HashSet<Character>();\n+import java.util.TreeMap;\n \n-        for (char c : string.toCharArray()) {\n-            if (! distinct.contains(Character.toLowerCase(c)))\n-                distinct.add(c);\n+public static int count_distinct_characters(String string) {\n+    TreeMap<Character, Integer> distinct = new TreeMap<Character, Integer>();\n+\n+    for (char c : string.toCharArray()) {\n+        c = Character.toLowerCase(c);\n+        if (!distinct.containsKey(c)) {\n+            distinct.put(c, 1);\n+        } else {\n+            distinct.put(c, distinct.get(c) + 1);\n         }\n-        return distinct.size();\n     }\n+    return distinct.size();\n+}\n }",
    "result_reason": " /tmp/humaneval-COUNT_DISTINCT_CHARACTERS/src/main/java/humaneval/buggy/COUNT_DISTINCT_CHARACTERS.java:[6,1] illegal start of type",
    "test_result": "ERROR"
}