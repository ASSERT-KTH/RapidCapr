{
    "patch": "switch (child.getToken()) {\n    case STRING:\n        // handle string node\n        break;\n    case GETPROP:\n        // handle GET node\n        break;\n    case SETPROP:\n        // handle SET node\n        break;\n    default:\n        throw new IllegalStateException(\"Unexpected node type: \" + child.getToken());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..0977247d 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,19 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+switch (child.getToken()) {\n+    case STRING:\n+        // handle string node\n+        break;\n+    case GETPROP:\n+        // handle GET node\n+        break;\n+    case SETPROP:\n+        // handle SET node\n+        break;\n+    default:\n+        throw new IllegalStateException(\"Unexpected node type: \" + child.getToken());\n+}\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}