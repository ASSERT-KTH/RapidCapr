{
    "patch": "if (obj == null || !(obj instanceof ShapeList)) {\n    return false;\n} else {\n    ShapeList other = (ShapeList) obj;\n    if (this.size() != other.size()) {\n        return false;\n    }\n    for (int i = 0; i < this.size(); i++) {\n        Object thisObject = this.get(i);\n        Object otherObject = other.get(i);\n        if (thisObject == null && otherObject == null) {\n            continue;\n        } else if (thisObject == null || otherObject == null) {\n            return false;\n        } else if (!thisObject.equals(otherObject)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..404940e 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,26 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+if (obj == null || !(obj instanceof ShapeList)) {\n+    return false;\n+} else {\n+    ShapeList other = (ShapeList) obj;\n+    if (this.size() != other.size()) {\n+        return false;\n+    }\n+    for (int i = 0; i < this.size(); i++) {\n+        Object thisObject = this.get(i);\n+        Object otherObject = other.get(i);\n+        if (thisObject == null && otherObject == null) {\n+            continue;\n+        } else if (thisObject == null || otherObject == null) {\n+            return false;\n+        } else if (!thisObject.equals(otherObject)) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n \n     }\n \n@@ -169,4 +188,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "junit.framework.AssertionFailedError: expected:<org.jfree.chart.util.ShapeList@ad219c70> but was:<org.jfree.chart.util.ShapeList@fb80602d>",
    "test_result": "FAIL"
}