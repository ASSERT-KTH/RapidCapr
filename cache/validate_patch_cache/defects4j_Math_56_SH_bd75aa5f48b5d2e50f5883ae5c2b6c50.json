{
    "patch": "int count = uniCounter[last - 1];\nfor (int i = last - 2; i >= 0; i--) {\n    count *= uniCounter[i];\n    count += uniCounter[i];\n}\ncount -= totalSize - index - 1;\n\nfor (int i = last - 1; i >= 0; i--) {\n    final int uniCount = uniCounter[i];\n    final int idx = count % uniCount;\n    count /= uniCount;\n    indices[i] = idx;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..24a532471 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,19 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n-        }\n-        --idx;\n-        indices[last] = idx;\n+int count = uniCounter[last - 1];\n+for (int i = last - 2; i >= 0; i--) {\n+    count *= uniCounter[i];\n+    count += uniCounter[i];\n+}\n+count -= totalSize - index - 1;\n+\n+for (int i = last - 1; i >= 0; i--) {\n+    final int uniCount = uniCounter[i];\n+    final int idx = count % uniCount;\n+    count /= uniCount;\n+    indices[i] = idx;\n+}\n \n         return indices;\n     }",
    "result_reason": "error: variable count is already defined in method getCounts(int)",
    "test_result": "ERROR"
}