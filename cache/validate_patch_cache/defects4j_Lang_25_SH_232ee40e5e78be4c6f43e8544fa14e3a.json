{
    "patch": "private static String escapeISO8859_1(String str) {\n    StringBuilder out = new StringBuilder();\n    ByteBuffer bb = Charset.forName(\"ISO-8859-1\").encode(str);\n    CharBuffer cb = Charset.forName(\"ISO-8859-1\").decode(bb);\n    for (int i = 0; i < cb.length(); i++) {\n        char ch = cb.charAt(i);\n        if (ch <= 127) {\n            out.append(ch);\n        } else {\n            out.append(\"\\\\u\");\n            out.append(String.format(\"%04X\", (int) ch)); // Use format instead of assignment\n        }\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}