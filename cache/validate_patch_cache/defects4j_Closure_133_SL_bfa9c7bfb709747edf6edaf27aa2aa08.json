{
    "patch": " private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    while (result != null && result.trim().startsWith(\"*\")) {\n        result = stream.getRemainingJSDocLine();\n    }\n    if (result != null && result.trim().startsWith(\"@\")) {\n        // A JSDoc tag was split across lines\n        StringBuilder tagBuilder = new StringBuilder(result.trim());\n        String line = stream.getRemainingJSDocLine();\n        while (line != null && line.trim().startsWith(\"@\")) {\n            tagBuilder.append(\" \").append(line.trim());\n            line = stream.getRemainingJSDocLine();\n        }\n        if (line != null) {\n            stream.pushBack(1);\n        }\n        result = tagBuilder.toString();\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..8a904300 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,26 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+ private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    while (result != null && result.trim().startsWith(\"*\")) {\n+        result = stream.getRemainingJSDocLine();\n+    }\n+    if (result != null && result.trim().startsWith(\"@\")) {\n+        // A JSDoc tag was split across lines\n+        StringBuilder tagBuilder = new StringBuilder(result.trim());\n+        String line = stream.getRemainingJSDocLine();\n+        while (line != null && line.trim().startsWith(\"@\")) {\n+            tagBuilder.append(\" \").append(line.trim());\n+            line = stream.getRemainingJSDocLine();\n+        }\n+        if (line != null) {\n+            stream.pushBack(1);\n+        }\n+        result = tagBuilder.toString();\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}