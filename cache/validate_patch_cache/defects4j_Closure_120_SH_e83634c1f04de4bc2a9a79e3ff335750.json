{
    "patch": "else if (isInitializingAssignmentAt(0)) {\n  // Use the assignment as the initializing reference, not the variable declaration.\n  // var a = 1;;b=a; is actually a usage of a.\n  return references.get(0);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..b52e3e70 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,11 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+else if (isInitializingAssignmentAt(0)) {\n+  // Use the assignment as the initializing reference, not the variable declaration.\n+  // var a = 1;;b=a; is actually a usage of a.\n+  return references.get(0);\n+}\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}