{
    "patch": "public double getNumericalMean() {\n    int sampleSize = getSampleSize();\n    if (sampleSize <= 0) {\n        return Double.NaN;\n    }\n    return (double) (getNumberOfSuccesses() * getPopulationSize()) / (double) sampleSize;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..44d463910 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -265,7 +265,13 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+public double getNumericalMean() {\n+    int sampleSize = getSampleSize();\n+    if (sampleSize <= 0) {\n+        return Double.NaN;\n+    }\n+    return (double) (getNumberOfSuccesses() * getPopulationSize()) / (double) sampleSize;\n+}\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}