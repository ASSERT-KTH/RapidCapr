{
    "patch": "// Verify that ISO-8859-1 escape works\n@Test\npublic void testISO8859_1_ESCAPE() throws Exception {\n    char[] ch = {'\\u00A2'};\n    String expected = \"&cent;\";\n    String result = encode(ch, 0, ch.length, true);\n    assertEquals(\"Encoding result incorrect\", expected, result);\n    char[] expCh = {'\\u00A2'};\n    String decodeResult = decode(expected);\n    boolean success = Arrays.equals(ch, expCh);\n    assertEquals(\"Decoding result incorrect\", decodeResult, new String(ch));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}