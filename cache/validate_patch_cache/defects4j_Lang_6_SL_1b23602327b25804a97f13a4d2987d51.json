{
    "patch": "for (int pt = 0; pt < consumed; pt++) {\n    // handle surrogate pairs\n    int codePoint = Character.codePointAt(input, pos);\n    int charCount = Character.charCount(codePoint);\n    if (charCount > 1) {\n        char[] surrPair = Character.toChars(codePoint);\n        out.write(translate(new String(surrPair)));\n        pos += surrPair.length;\n    } else {\n        out.write(translate(Character.toString((char) codePoint)));\n        pos += 1;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..bfcfd35e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,19 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+for (int pt = 0; pt < consumed; pt++) {\n+    // handle surrogate pairs\n+    int codePoint = Character.codePointAt(input, pos);\n+    int charCount = Character.charCount(codePoint);\n+    if (charCount > 1) {\n+        char[] surrPair = Character.toChars(codePoint);\n+        out.write(translate(new String(surrPair)));\n+        pos += surrPair.length;\n+    } else {\n+        out.write(translate(Character.toString((char) codePoint)));\n+        pos += 1;\n+    }\n+}\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}