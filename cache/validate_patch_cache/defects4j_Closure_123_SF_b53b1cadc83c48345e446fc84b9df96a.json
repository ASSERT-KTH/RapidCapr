{
    "patch": "public static String fixCode(String code) {\n    // use a ternary operator to determine the initial value of a\n    String fixedCode = code.replace(\"for (a = 0; 0 in d;) \", \"for (a = c ? 0 : (0 in d); \");\n    // add a semicolon to the end of the loop body\n    fixedCode = fixedCode.replace(\"{ foo() }\", \"{ foo(); }\");\n    return fixedCode;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..5e3d5552 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,13 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    // use a ternary operator to determine the initial value of a\n+    String fixedCode = code.replace(\"for (a = 0; 0 in d;) \", \"for (a = c ? 0 : (0 in d); \");\n+    // add a semicolon to the end of the loop body\n+    fixedCode = fixedCode.replace(\"{ foo() }\", \"{ foo(); }\");\n+    return fixedCode;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}