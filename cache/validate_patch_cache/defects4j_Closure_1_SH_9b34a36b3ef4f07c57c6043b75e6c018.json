{
    "patch": "      int numArgsToRemove = 0;\n      Node lastArg = argList.getLastChild();\n      while (lastArg != null) {\n        Var var = fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n          numArgsToRemove++;\n          lastArg = lastArg.getPrevious();\n        } else {\n          break;\n        }\n      }\n\n      if (numArgsToRemove > 0) {\n        // Remove the arguments from the AST.\n        int argCount = argList.getChildCount();\n        for (int i = argCount - numArgsToRemove; i < argCount; i++) {\n          Node argToRemove = argList.getLastChild();\n          argList.removeChild(argToRemove);\n        }\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..9a453ff8 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,26 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      int numArgsToRemove = 0;\n+      Node lastArg = argList.getLastChild();\n+      while (lastArg != null) {\n+        Var var = fnScope.getVar(lastArg.getString());\n+        if (!referenced.contains(var)) {\n+          numArgsToRemove++;\n+          lastArg = lastArg.getPrevious();\n+        } else {\n+          break;\n+        }\n+      }\n+\n+      if (numArgsToRemove > 0) {\n+        // Remove the arguments from the AST.\n+        int argCount = argList.getChildCount();\n+        for (int i = argCount - numArgsToRemove; i < argCount; i++) {\n+          Node argToRemove = argList.getLastChild();\n+          argList.removeChild(argToRemove);\n+        }\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}