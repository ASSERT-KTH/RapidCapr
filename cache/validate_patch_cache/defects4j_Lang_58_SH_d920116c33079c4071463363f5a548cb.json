{
    "patch": "                        && StringUtils.isNumeric(numeric.replace(\".\", \"\").replace(\"e\", \"\").replace(\"E\", \"\"))\n                        && !(numeric.contains(\".\") && (numeric.endsWith(\"f\") || numeric.endsWith(\"F\") || numeric.endsWith(\"d\") || numeric.endsWith(\"D\")))\n                        && !(numeric.contains(\"e\") || numeric.contains(\"E\"))) {",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..e68f0624 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,9 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+                        && StringUtils.isNumeric(numeric.replace(\".\", \"\").replace(\"e\", \"\").replace(\"E\", \"\"))\n+                        && !(numeric.contains(\".\") && (numeric.endsWith(\"f\") || numeric.endsWith(\"F\") || numeric.endsWith(\"d\") || numeric.endsWith(\"D\")))\n+                        && !(numeric.contains(\"e\") || numeric.contains(\"E\"))) {\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "java.lang.NumberFormatException: -1l is not a valid number.",
    "test_result": "FAIL"
}