{
    "patch": "public Object run(Method method, Object[] parameters, Callable<?> callable) throws Throwable {\n    try {\n        Object result = callable.call();\n        if (method.getReturnType() == void.class) {\n            return null;\n        } else {\n            return result;\n        }\n    } catch (Throwable throwable) {\n        for (Class<?> exceptionType : method.getExceptionTypes()) {\n            if (exceptionType.isAssignableFrom(throwable.getClass())) {\n                return values.returnValueFor(method.getReturnType());\n            }\n        }\n        throw throwable;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}