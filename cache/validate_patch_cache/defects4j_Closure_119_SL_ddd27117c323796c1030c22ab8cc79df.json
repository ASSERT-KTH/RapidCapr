{
    "patch": "            if (isGlobalScope(scope)) {\n              Var var = scope.getVar(name);\n              if (var == null || var.isExtern()) {\n                warning(\n                    n,\n                    variableNotDeclaredOrExtern(name, n.getParent().getType() == Token.CATCH));\n              }\n              handleSetFromGlobal(module, scope, n, parent, name, isPropAssign, type);\n            } else {\n              handleSetFromLocal(module, scope, n, parent, name);\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..d0ab81d2 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,17 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+            if (isGlobalScope(scope)) {\n+              Var var = scope.getVar(name);\n+              if (var == null || var.isExtern()) {\n+                warning(\n+                    n,\n+                    variableNotDeclaredOrExtern(name, n.getParent().getType() == Token.CATCH));\n+              }\n+              handleSetFromGlobal(module, scope, n, parent, name, isPropAssign, type);\n+            } else {\n+              handleSetFromLocal(module, scope, n, parent, name);\n+            }\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}