{
    "patch": "    case '1': // ISO-8859-1 escape\n        if (index + 2 >= length) {\n            throw new IllegalArgumentException(\n                    \"string is too short to unescape: \" + input.substring(index));\n        }\n        try {\n            char escaped = (char) Integer.parseInt(input.substring(index + 1, index + 3), 16);\n            out.append(escaped);\n            index += 3;\n        } catch (NumberFormatException e) {\n            throw new IllegalArgumentException(\"invalid Unicode escape: \" + input.substring(index), e);\n        }\n        break;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}