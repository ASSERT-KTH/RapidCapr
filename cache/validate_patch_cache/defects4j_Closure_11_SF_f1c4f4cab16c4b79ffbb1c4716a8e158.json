{
    "patch": "public static String getProperty(String key, String defaultValue) {\n    if (prop == null) {\n        prop = new Properties();\n        try {\n            FileInputStream in = new FileInputStream(\"config.properties\");\n            prop.load(in);\n            in.close();\n        } catch (IOException e) {\n            // handle the exception\n        }\n    }\n    String value = prop.getProperty(key, defaultValue);\n    if (value.charAt(0) == '\\'' && value.charAt(value.length() - 1) == '\\'') {\n        // Remove quotes if value is surrounded by single quotes\n        value = value.substring(1, value.length() - 1);\n    }\n    return value;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..430197da 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getProperty(String key, String defaultValue) {\n+    if (prop == null) {\n+        prop = new Properties();\n+        try {\n+            FileInputStream in = new FileInputStream(\"config.properties\");\n+            prop.load(in);\n+            in.close();\n+        } catch (IOException e) {\n+            // handle the exception\n+        }\n+    }\n+    String value = prop.getProperty(key, defaultValue);\n+    if (value.charAt(0) == '\\'' && value.charAt(value.length() - 1) == '\\'') {\n+        // Remove quotes if value is surrounded by single quotes\n+        value = value.substring(1, value.length() - 1);\n+    }\n+    return value;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}