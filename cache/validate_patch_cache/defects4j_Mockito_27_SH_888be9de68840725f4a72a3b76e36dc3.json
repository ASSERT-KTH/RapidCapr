{
    "patch": "MockSettings settings = withSettings().defaultAnswer(RETURNS_DEFAULTS);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMockito.withSettings().setInvocationListeners(new FilterManager());\nMockito.framework().addListener(new InvocationListener() {\n    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n        Invocation invocation = methodInvocationReport.getInvocation();\n        if (invocation instanceof MethodInvocation) {\n            Object mock = invocation.getMock();\n            if (mock instanceof Factory) {\n                ((Factory) mock).setCallback(0, newFilter);\n            }\n        }\n    }\n});",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..78fe08aff 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,23 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockSettings settings = withSettings().defaultAnswer(RETURNS_DEFAULTS);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+Mockito.withSettings().setInvocationListeners(new FilterManager());\n+Mockito.framework().addListener(new InvocationListener() {\n+    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n+        Invocation invocation = methodInvocationReport.getInvocation();\n+        if (invocation instanceof MethodInvocation) {\n+            Object mock = invocation.getMock();\n+            if (mock instanceof Factory) {\n+                ((Factory) mock).setCallback(0, newFilter);\n+            }\n+        }\n+    }\n+});\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}