{
    "patch": "// The rhs of the assignment is the caller, so it's used by the\n// context. Don't associate it w/ the lhs.\nif ((parent.isCall() || parent.isNew()) && parent.getFirstChild() == n) {\n  recordDepScope(recordNode.getLastChild(), ns);\n} else if (NodeUtil.isCallOrNew(recordNode.getNext())) {\n  recordDepScope(recordNode.getNext(), ns);\n} else {\n  recordDepScope(recordNode, ns);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..aad1a26a 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,15 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+// The rhs of the assignment is the caller, so it's used by the\n+// context. Don't associate it w/ the lhs.\n+if ((parent.isCall() || parent.isNew()) && parent.getFirstChild() == n) {\n+  recordDepScope(recordNode.getLastChild(), ns);\n+} else if (NodeUtil.isCallOrNew(recordNode.getNext())) {\n+  recordDepScope(recordNode.getNext(), ns);\n+} else {\n+  recordDepScope(recordNode, ns);\n+}\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}