{
    "patch": "public String fixCode(String code) {\n    int index = code.indexOf(\"in\");\n    if (index < 0) {\n        return code;\n    }\n    StringBuilder sb = new StringBuilder();\n    sb.append(code.substring(0, index));\n    sb.append(\"contains\");\n    sb.append(code.substring(index + 2));\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..35603303 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,17 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    int index = code.indexOf(\"in\");\n+    if (index < 0) {\n+        return code;\n+    }\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(code.substring(0, index));\n+    sb.append(\"contains\");\n+    sb.append(code.substring(index + 2));\n+    return sb.toString();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}