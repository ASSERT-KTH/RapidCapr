{
    "patch": "if (name.aliasingGets > 0) {\n  // {@code name} meets condition (b).\n  // Try to inline all its local aliases.\n  List<Ref> refs = Lists.newArrayList(name.getRefs());\n  for (Ref ref : refs) {\n    if (ref.type == Type.ALIASING_GET && ref.scope.isLocal() && inlineAliasIfPossible(ref, namespace)) {\n      // Try to inline the alias.\n      name.removeRef(ref);\n    }\n  }\n} ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..394d38b0 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,17 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+if (name.aliasingGets > 0) {\n+  // {@code name} meets condition (b).\n+  // Try to inline all its local aliases.\n+  List<Ref> refs = Lists.newArrayList(name.getRefs());\n+  for (Ref ref : refs) {\n+    if (ref.type == Type.ALIASING_GET && ref.scope.isLocal() && inlineAliasIfPossible(ref, namespace)) {\n+      // Try to inline the alias.\n+      name.removeRef(ref);\n+    }\n+  }\n+} \n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}