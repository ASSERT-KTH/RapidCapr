{
    "patch": "    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n        boolean wasWhite= false;\n        for(int i= 0; i<value.length(); ++i) {\n            char c= value.charAt(i);\n            if(Character.isWhitespace(c)) {\n                if(!wasWhite) {\n                    wasWhite= true;\n                    regex.append(\"\\\\s*+\");\n                }\n                continue;\n            }\n            wasWhite= false;\n            switch(c) {\n            case '\\'':\n                if(unquote) {\n                    if(++i==value.length()) {\n                        return regex;\n                    }\n                    c= value.charAt(i);\n                }\n                break;\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n                regex.append('\\\\');\n            }\n            regex.append(c);\n        }\n        return regex;\n    }\n\n    public static DateFormat buildDateFormat(String pattern, TimeZone timeZone) {\n        pattern= pattern.replaceAll(UNSUPPORTED_REGEX_CHARS, \"\\\\\\\\$1\");\n        StringBuilder regex= new StringBuilder(\"^.*$\");\n        escapeRegex(regex, pattern, true).insert(0, '^').append('$');\n        SimpleDateFormat format= new SimpleDateFormat(pattern, DateFormatSymbols.getInstance(Locale.ENGLISH));\n        format.setTimeZone(timeZone);\n        return format;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..0ba3d1fe 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -342,6 +342,15 @@ public class FastDateParser implements DateParser, Serializable {\n         return regex;\n     }\n \n+    public static DateFormat buildDateFormat(String pattern, TimeZone timeZone) {\n+        pattern= pattern.replaceAll(UNSUPPORTED_REGEX_CHARS, \"\\\\\\\\$1\");\n+        StringBuilder regex= new StringBuilder(\"^.*$\");\n+        escapeRegex(regex, pattern, true).insert(0, '^').append('$');\n+        SimpleDateFormat format= new SimpleDateFormat(pattern, DateFormatSymbols.getInstance(Locale.ENGLISH));\n+        format.setTimeZone(timeZone);\n+        return format;\n+    }\n+\n     /**\n      * A class to store Key / Value pairs\n      */",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}