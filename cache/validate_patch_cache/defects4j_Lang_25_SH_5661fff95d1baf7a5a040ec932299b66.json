{
    "patch": "private static String escapeISO8859_1(String str) {\n    int sz = str.length();\n    StringBuilder out = new StringBuilder(sz);\n    for (int i = 0; i < sz; ) {\n        char ch = str.charAt(i);\n        if (ch == '\\\\') {\n            out.append('\\\\').append('\\\\');\n            i++;\n            continue;\n        }\n        if (ch >= 0x0020 && ch <= 0x007e) {\n            out.append(ch);\n            i++;\n            continue;\n        }\n        out.append('\\\\');\n        out.append('u');\n        out.append(ISO8859_1_ESCAPE[ch & 0xFF]); // Original Bug is fixed here\n        i++;\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}