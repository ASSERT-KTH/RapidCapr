{
    "patch": "        } catch (IllegalFieldValueException e) {\n            // added code\n            int savedFieldsCount = 0;\n            for (int i = 0; i < count; i++) {\n                try {\n                   savedFields[i].set(0L, false);\n                   savedFieldsCount++;\n                } catch (IllegalFieldValueException ignore) {}\n            }\n            if (savedFieldsCount > 0) {\n                throw e;\n            }\n            // end of added code\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..6ae34eb3 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            // added code\n+            int savedFieldsCount = 0;\n+            for (int i = 0; i < count; i++) {\n+                try {\n+                   savedFields[i].set(0L, false);\n+                   savedFieldsCount++;\n+                } catch (IllegalFieldValueException ignore) {}\n+            }\n+            if (savedFieldsCount > 0) {\n+                throw e;\n+            }\n+            // end of added code\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}