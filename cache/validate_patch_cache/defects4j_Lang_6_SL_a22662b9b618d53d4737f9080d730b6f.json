{
    "patch": "// contract with translators is that they have to understand codepoints \n// and they just took care of a surrogate pair\nfor (int pt = 0; pt < consumed; pt++) {\n    if (Character.isHighSurrogate(input.charAt(pos)) && (pos+1 < len) && Character.isLowSurrogate(input.charAt(pos+1))) {\n        out.write(input, pos, 2);\n        pos += 2;\n    } else {\n        char[] c = Character.toChars(Character.codePointAt(input, pos));\n        out.write(c);\n        pos += c.length;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..fda199bf 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,18 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+// contract with translators is that they have to understand codepoints \n+// and they just took care of a surrogate pair\n+for (int pt = 0; pt < consumed; pt++) {\n+    if (Character.isHighSurrogate(input.charAt(pos)) && (pos+1 < len) && Character.isLowSurrogate(input.charAt(pos+1))) {\n+        out.write(input, pos, 2);\n+        pos += 2;\n+    } else {\n+        char[] c = Character.toChars(Character.codePointAt(input, pos));\n+        out.write(c);\n+        pos += c.length;\n+    }\n+}\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}