{
    "patch": "if (s.isEmpty() || shift == 0) {\n    return s;\n}\n\nint effectiveShift = Math.floorMod(shift, s.length());\n\nif (effectiveShift == 0) {\n    return s;\n}\n\nif (effectiveShift > s.length() / 2) {\n    effectiveShift = s.length() - effectiveShift;\n    StringBuilder sb = new StringBuilder();\n    sb.append(s.substring(effectiveShift, s.length()));\n    sb.append(s.substring(0, effectiveShift));\n    return sb.toString();\n} else {\n    StringBuilder sb = new StringBuilder();\n    sb.append(s.substring(s.length() - effectiveShift, s.length()));\n    sb.append(s.substring(0, s.length() - effectiveShift));\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\nindex 9131a1c..d126647 100644\n--- a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n@@ -18,7 +18,28 @@ public class CIRCULAR_SHIFT {\n                 sb.append(s.charAt(i));\n             return sb.toString();\n         } else {\n-            return s.substring(s.length() - shift + 1) + s.substring(0, s.length() - shift - 1);\n+if (s.isEmpty() || shift == 0) {\n+    return s;\n+}\n+\n+int effectiveShift = Math.floorMod(shift, s.length());\n+\n+if (effectiveShift == 0) {\n+    return s;\n+}\n+\n+if (effectiveShift > s.length() / 2) {\n+    effectiveShift = s.length() - effectiveShift;\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(s.substring(effectiveShift, s.length()));\n+    sb.append(s.substring(0, effectiveShift));\n+    return sb.toString();\n+} else {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(s.substring(s.length() - effectiveShift, s.length()));\n+    sb.append(s.substring(0, s.length() - effectiveShift));\n+    return sb.toString();\n+}\n         }\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}