{
    "patch": "    if (name == null) {\n        name = new Name();\n        name.setIdentifier(\"\");\n        isUnnamedFunction = true;\n        // if the function is unnamed and immediately executed \n        // (e.g. `(function(){...})()`), then we need to set the \n        // position of the function to match the position of the \n        // enclosing expression to correctly handle directives.\n        final int lp = functionNode.getLp();\n        final int rp = functionNode.getRp() == -1 ? lp + 1 : functionNode.getRp();\n        final int absLeft = functionNode.getAbsolutePosition() + lp;\n        final int absRight = absLeft + (rp - lp) - 1;\n        name.setLength(absRight - absLeft + 1);\n        name.setLineno(functionNode.getLineno());\n        name.setCharno(position2charno(absLeft));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..7dea965c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,21 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+    if (name == null) {\n+        name = new Name();\n+        name.setIdentifier(\"\");\n+        isUnnamedFunction = true;\n+        // if the function is unnamed and immediately executed \n+        // (e.g. `(function(){...})()`), then we need to set the \n+        // position of the function to match the position of the \n+        // enclosing expression to correctly handle directives.\n+        final int lp = functionNode.getLp();\n+        final int rp = functionNode.getRp() == -1 ? lp + 1 : functionNode.getRp();\n+        final int absLeft = functionNode.getAbsolutePosition() + lp;\n+        final int absRight = absLeft + (rp - lp) - 1;\n+        name.setLength(absRight - absLeft + 1);\n+        name.setLineno(functionNode.getLineno());\n+        name.setCharno(position2charno(absLeft));\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}