{
    "patch": "public static double[] bracket(UnivariateRealFunction function,\n                double initial, double lowerBound, double upperBound, \n                int maximumIterations) throws ConvergenceException, \n                FunctionEvaluationException {\n        \n        if (function == null) {\n            throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n        }\n        if (maximumIterations <= 0)  {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"bad value for maximum iterations number: {0}\", maximumIterations);\n        }\n        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                  lowerBound, initial, upperBound);\n        }\n        double a = initial;\n        double b = initial;\n        double fa;\n        double fb;\n        int numIterations = 0 ;\n    \n        do {\n            fa = function.value(a);\n            fb = function.value(b);\n            if(numIterations >= maximumIterations) {\n                throw new ConvergenceException(\"Failed to bracket the minimum after \" + maximumIterations + \" iterations. \" +\n                                                \"a: \" + a + \", b: \" + b + \", lowerBound: \" + lowerBound + \", upperBound: \" + upperBound);\n            }\n            numIterations++ ;\n            double mid = 0.5 * (a + b);\n            double fMid = function.value(mid);\n            if((fa * fMid) < 0) {\n                b = mid;\n            } else if((fb * fMid) < 0) {\n                a = mid;\n            } else {\n                if(a == lowerBound) {\n                    b = Math.max(b - 1.0, upperBound);\n                } else if(b == upperBound) {\n                    a = Math.min(a + 1.0, lowerBound);\n                } else if(Math.abs(fa) < Math.abs(fb)) {\n                    b = Math.min(b + 1.0, upperBound);\n                } else {\n                    a = Math.max(a - 1.0, lowerBound);\n                }\n            }\n        } while ((fa * fb > 0.0) && ((a > lowerBound) || (b < upperBound)));\n   \n        if (fa * fb >= 0.0 ) {\n            throw new ConvergenceException(\n                      \"number of iterations={0}, maximum iterations={1}, \" +\n                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n                      numIterations, maximumIterations, initial,\n                      lowerBound, upperBound, a, b, fa, fb);\n        }\n        \n        return new double[]{a, b};\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\nindex bf3e4bf53..3527772ad 100644\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n@@ -162,10 +162,10 @@ public class UnivariateRealSolverUtils {\n      * @throws IllegalArgumentException if function is null, maximumIterations\n      * is not positive, or initial is not between lowerBound and upperBound\n      */\n-    public static double[] bracket(UnivariateRealFunction function,\n-            double initial, double lowerBound, double upperBound, \n-            int maximumIterations) throws ConvergenceException, \n-            FunctionEvaluationException {\n+public static double[] bracket(UnivariateRealFunction function,\n+                double initial, double lowerBound, double upperBound, \n+                int maximumIterations) throws ConvergenceException, \n+                FunctionEvaluationException {\n         \n         if (function == null) {\n             throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n@@ -186,14 +186,31 @@ public class UnivariateRealSolverUtils {\n         int numIterations = 0 ;\n     \n         do {\n-            a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n-            \n             fb = function.value(b);\n+            if(numIterations >= maximumIterations) {\n+                throw new ConvergenceException(\"Failed to bracket the minimum after \" + maximumIterations + \" iterations. \" +\n+                                                \"a: \" + a + \", b: \" + b + \", lowerBound: \" + lowerBound + \", upperBound: \" + upperBound);\n+            }\n             numIterations++ ;\n-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n-                ((a > lowerBound) || (b < upperBound)));\n+            double mid = 0.5 * (a + b);\n+            double fMid = function.value(mid);\n+            if((fa * fMid) < 0) {\n+                b = mid;\n+            } else if((fb * fMid) < 0) {\n+                a = mid;\n+            } else {\n+                if(a == lowerBound) {\n+                    b = Math.max(b - 1.0, upperBound);\n+                } else if(b == upperBound) {\n+                    a = Math.min(a + 1.0, lowerBound);\n+                } else if(Math.abs(fa) < Math.abs(fb)) {\n+                    b = Math.min(b + 1.0, upperBound);\n+                } else {\n+                    a = Math.max(a - 1.0, lowerBound);\n+                }\n+            }\n+        } while ((fa * fb > 0.0) && ((a > lowerBound) || (b < upperBound)));\n    \n         if (fa * fb >= 0.0 ) {\n             throw new ConvergenceException(",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}