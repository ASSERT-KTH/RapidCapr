{
    "patch": "public static int modp(int n, int p) {\n    if (n < 0 || p <= 0) {\n        throw new IllegalArgumentException(\"n must be non-negative and p must be greater than 0\");\n    }\n    if (n == 0) {\n        return 1 % p;\n    }\n    int temp = modp(n / 2, p);\n    int result = (temp * temp) % p;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MODP.java b/src/main/java/humaneval/buggy/MODP.java\nindex a8f7394..6a67f13 100644\n--- a/src/main/java/humaneval/buggy/MODP.java\n+++ b/src/main/java/humaneval/buggy/MODP.java\n@@ -13,11 +13,13 @@ package humaneval.buggy;\n 1 */\n \n public class MODP {\n-    public static int modp(int n, int p) {\n-        int result = 1;\n-        for (int i = 0; i < n; i += 1){\n-            result = 2 * result;\n-        }\n-        return result % p;\n+public static int modp(int n, int p) {\n+    if (n < 0 || p <= 0) {\n+        throw new IllegalArgumentException(\"n must be non-negative and p must be greater than 0\");\n     }\n+    if (n == 0) {\n+        return 1 % p;\n+    }\n+    int temp = modp(n / 2, p);\n+    int result = (temp * temp) % p;\n }",
    "result_reason": " /tmp/humaneval-MODP/src/main/java/humaneval/buggy/MODP.java:[25,2] reached end of file while parsing",
    "test_result": "ERROR"
}