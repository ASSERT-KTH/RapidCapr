{
    "patch": "    return NodeUtil.isFunctionExpression(n) && NodeUtil.getFunctionName(n) != null &&\n        (n.getParent().getType() == Token.EXPR_RESULT || n.getParent().getType() == Token.RETURN);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..1bad9ccd 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,8 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    return NodeUtil.isFunctionExpression(n) && NodeUtil.getFunctionName(n) != null &&\n+        (n.getParent().getType() == Token.EXPR_RESULT || n.getParent().getType() == Token.RETURN);\n   }\n \n   /**",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}