{
    "patch": "      /** [BEGIN INFILL] **/\n      if (argList.hasOneChild() && !function.getFirstChild().isName()) {\n        // Function has only one argument and it is not assigned to a name\n        // so it is safe to remove its name.\n        NodeUtil.deleteNode(function.getFirstChild(), compiler);\n        compiler.reportCodeChange();\n      }\n      /** [END INFILL] **/",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..09706740 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,14 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      /** [BEGIN INFILL] **/\n+      if (argList.hasOneChild() && !function.getFirstChild().isName()) {\n+        // Function has only one argument and it is not assigned to a name\n+        // so it is safe to remove its name.\n+        NodeUtil.deleteNode(function.getFirstChild(), compiler);\n+        compiler.reportCodeChange();\n+      }\n+      /** [END INFILL] **/\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}