{
    "patch": "      Node maybeProperty = n.getParent();\n      while (maybeProperty != null &&\n             (maybeProperty.getType() == Token.GETPROP ||\n              maybeProperty.getType() == Token.GETELEM)) {\n        maybeProperty = maybeProperty.getParent();\n      }\n      if (maybeProperty != null &&\n          maybeProperty.getType() == Token.ASSIGN &&\n          maybeProperty.getFirstChild().isGetProp() &&\n          maybeProperty.getFirstFirstChild().isName() &&\n          maybeProperty.getFirstFirstChild().getString().equals(\"prototype\")) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..f6ab972a 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node maybeProperty = n.getParent();\n+      while (maybeProperty != null &&\n+             (maybeProperty.getType() == Token.GETPROP ||\n+              maybeProperty.getType() == Token.GETELEM)) {\n+        maybeProperty = maybeProperty.getParent();\n+      }\n+      if (maybeProperty != null &&\n+          maybeProperty.getType() == Token.ASSIGN &&\n+          maybeProperty.getFirstChild().isGetProp() &&\n+          maybeProperty.getFirstFirstChild().isName() &&\n+          maybeProperty.getFirstFirstChild().getString().equals(\"prototype\")) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}