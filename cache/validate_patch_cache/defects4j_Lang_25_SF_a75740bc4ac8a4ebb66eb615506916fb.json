{
    "patch": "public String escape(String str) {\n    StringBuilder out = new StringBuilder();\n\n    for (int i = 0; i < str.length(); i++) {\n        char c = str.charAt(i);\n        if (\"~=()[]|+\".indexOf(c) >= 0) {\n            out.append(\"\\\\\" + c);\n        } else if (Character.isISOControl(c) || c > 127) {\n            out.append(\"\\\\u\" + String.format(\"%04x\", (int) c));\n        } else {\n            out.append(c);\n        }\n    }\n\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..df1f9313 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,22 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String escape(String str) {\n+    StringBuilder out = new StringBuilder();\n+\n+    for (int i = 0; i < str.length(); i++) {\n+        char c = str.charAt(i);\n+        if (\"~=()[]|+\".indexOf(c) >= 0) {\n+            out.append(\"\\\\\" + c);\n+        } else if (Character.isISOControl(c) || c > 127) {\n+            out.append(\"\\\\u\" + String.format(\"%04x\", (int) c));\n+        } else {\n+            out.append(c);\n+        }\n+    }\n+\n+    return out.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}