{
    "patch": "Type[] boundTypes = typeVariable.getBounds();\nif (boundTypes.length == 0) {\n    Type actualType = getActualTypeArgumentFor(typeVariable);\n    if (actualType != null && !actualType.equals(Object.class)) {\n        registerTypeVariablesOn(actualType);\n    } else {\n        registerTypeVariablesOn(typeVariable);\n    }\n} else {\n    for (Type type : boundTypes) {\n        if (!type.equals(Object.class)) {\n            registerTypeVariablesOn(type);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..f7e4c7118 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,26 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] boundTypes = typeVariable.getBounds();\n+if (boundTypes.length == 0) {\n+    Type actualType = getActualTypeArgumentFor(typeVariable);\n+    if (actualType != null && !actualType.equals(Object.class)) {\n+        registerTypeVariablesOn(actualType);\n+    } else {\n+        registerTypeVariablesOn(typeVariable);\n+    }\n+} else {\n+    for (Type type : boundTypes) {\n+        if (!type.equals(Object.class)) {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}