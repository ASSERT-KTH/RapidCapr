{
    "patch": "if (options.checkGlobalThisLevel != null) {\n    if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n        options.setWarningLevel(\n                DiagnosticGroups.GLOBAL_THIS,\n                options.checkGlobalThisLevel);\n    } else {\n        options.setWarningLevel(\n                DiagnosticGroups.GLOBAL_THIS,\n                CheckLevel.OFF);\n    }\n} else {\n    // Set the default warning level for GLOBAL_THIS.\n    options.setWarningLevel(\n            DiagnosticGroups.GLOBAL_THIS,\n            CheckLevel.WARNING);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..fa41f95b 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,22 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+    if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n+        options.setWarningLevel(\n+                DiagnosticGroups.GLOBAL_THIS,\n+                options.checkGlobalThisLevel);\n+    } else {\n+        options.setWarningLevel(\n+                DiagnosticGroups.GLOBAL_THIS,\n+                CheckLevel.OFF);\n+    }\n+} else {\n+    // Set the default warning level for GLOBAL_THIS.\n+    options.setWarningLevel(\n+            DiagnosticGroups.GLOBAL_THIS,\n+            CheckLevel.WARNING);\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}