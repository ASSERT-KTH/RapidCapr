{
    "patch": "            double value = ((tmp2[0] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[0];\n            if(Double.isNaN(value)){\n                if(y[yOffset] > 0){\n                    result[resultOffset] = FastMath.PI/2;\n                }else if(y[yOffset] == 0){\n                    if(x[xOffset] > 0){\n                        result[resultOffset] = 0;\n                    }else if(x[xOffset] < 0){\n                        result[resultOffset] = FastMath.PI;\n                    }else{\n                        result[resultOffset] = Double.NaN;\n                    }\n                }else{\n                    result[resultOffset] = -FastMath.PI/2;\n                }\n            }else{\n                result[resultOffset] = value;\n            }\n            ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\nindex bf6dd65d5..ea0973693 100644\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n@@ -1416,6 +1416,25 @@ public class DSCompiler {\n         }\n \n         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n+            double value = ((tmp2[0] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[0];\n+            if(Double.isNaN(value)){\n+                if(y[yOffset] > 0){\n+                    result[resultOffset] = FastMath.PI/2;\n+                }else if(y[yOffset] == 0){\n+                    if(x[xOffset] > 0){\n+                        result[resultOffset] = 0;\n+                    }else if(x[xOffset] < 0){\n+                        result[resultOffset] = FastMath.PI;\n+                    }else{\n+                        result[resultOffset] = Double.NaN;\n+                    }\n+                }else{\n+                    result[resultOffset] = -FastMath.PI/2;\n+                }\n+            }else{\n+                result[resultOffset] = value;\n+            }\n+            \n \n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.0> but was:<NaN>",
    "test_result": "FAIL"
}