{
    "patch": "    public void stop() {\n        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n            throw new IllegalStateException(\"Stopwatch is not running. \");\n        } else {\n            stopTime = System.currentTimeMillis();\n            this.runningState = STATE_STOPPED;\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/time/StopWatch.java b/src/java/org/apache/commons/lang/time/StopWatch.java\nindex 8f394217..b079b709 100644\n--- a/src/java/org/apache/commons/lang/time/StopWatch.java\n+++ b/src/java/org/apache/commons/lang/time/StopWatch.java\n@@ -114,9 +114,10 @@ public class StopWatch {\n     public void stop() {\n         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n             throw new IllegalStateException(\"Stopwatch is not running. \");\n-        }\n+        } else {\n             stopTime = System.currentTimeMillis();\n-        this.runningState = STATE_STOPPED;\n+            this.runningState = STATE_STOPPED;\n+        }\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}