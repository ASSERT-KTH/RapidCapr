{
    "patch": "String temp = stream.getRemainingJSDocLine().trim().replaceAll(\"\\\\b(T|[a-z_]+\\\\.T|[A-Z][a-zA-Z0-9_]*\\\\.T)\\\\b\", \"?\");\nwhile (temp.contains(\"JSC_TYPE_PARSE_ERROR\")) {\n    temp = temp.replaceAll(\"JSC_TYPE_PARSE_ERROR.+\", \"\");\n}\nif (temp.contains(\"T\")) {\n    throw new IllegalStateException(\"Bad type annotation. Unknown type T\");\n}\nresult = temp;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..2be04781 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,14 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+String temp = stream.getRemainingJSDocLine().trim().replaceAll(\"\\\\b(T|[a-z_]+\\\\.T|[A-Z][a-zA-Z0-9_]*\\\\.T)\\\\b\", \"?\");\n+while (temp.contains(\"JSC_TYPE_PARSE_ERROR\")) {\n+    temp = temp.replaceAll(\"JSC_TYPE_PARSE_ERROR.+\", \"\");\n+}\n+if (temp.contains(\"T\")) {\n+    throw new IllegalStateException(\"Bad type annotation. Unknown type T\");\n+}\n+result = temp;\n     return result;\n   }\n ",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_TYPE_PARSE_ERROR. Bad type annotation. Unknown type T at externs line 11 : 14",
    "test_result": "FAIL"
}