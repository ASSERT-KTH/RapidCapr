{
    "patch": "                if (savedFields[i].iField.getType() == DateTimeFieldType.year()) {\n                    // compute century if year is missing\n                    int value = savedFields[i].iValue;\n                    if (iLenientParse && savedFields[i].iValue > 0 && value < 100) {\n                        value = value < 70 ? value + 2000 : value + 1900;\n                    }\n                    int pivot = getTwoDigitYearPivot();\n                    millis = savedFields[i].iField.set(millis, value >= pivot ? value : value + 100);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c6d82c91 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (savedFields[i].iField.getType() == DateTimeFieldType.year()) {\n+                    // compute century if year is missing\n+                    int value = savedFields[i].iValue;\n+                    if (iLenientParse && savedFields[i].iValue > 0 && value < 100) {\n+                        value = value < 70 ? value + 2000 : value + 1900;\n+                    }\n+                    int pivot = getTwoDigitYearPivot();\n+                    millis = savedFields[i].iField.set(millis, value >= pivot ? value : value + 100);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}