{
    "patch": "        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n\n        Factory factory = (Factory) mock;\n        int callbackIndex = -1;\n        for (int i = 0; i < factory.getCallbacks().length; i++) {\n            if (factory.getCallbacks()[i] instanceof MockTools.MockHandlerInterceptor) {\n                callbackIndex = i;\n                break;\n            }\n        }\n        if (callbackIndex != -1) {\n            Callback[] callbacks = factory.getCallbacks();\n            callbacks[callbackIndex] = newFilter;\n            factory.setCallbacks(callbacks);\n        } else {\n            factory.setCallback(0, newFilter);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..e6c778d0d 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,29 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+\n+        Factory factory = (Factory) mock;\n+        int callbackIndex = -1;\n+        for (int i = 0; i < factory.getCallbacks().length; i++) {\n+            if (factory.getCallbacks()[i] instanceof MockTools.MockHandlerInterceptor) {\n+                callbackIndex = i;\n+                break;\n+            }\n+        }\n+        if (callbackIndex != -1) {\n+            Callback[] callbacks = factory.getCallbacks();\n+            callbacks[callbackIndex] = newFilter;\n+            factory.setCallbacks(callbacks);\n+        } else {\n+            factory.setCallback(0, newFilter);\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}