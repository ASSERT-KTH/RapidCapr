{
    "patch": "            if (offsetLocal < 0 && offsetAdjusted == 0) {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n                int offsetPrevLocal = getOffset(prevLocal);\n                int offsetPrevAdjusted = getOffset(prevAdjusted);\n                if (offsetPrevLocal < offsetPrevAdjusted) {\n                    return offsetPrevLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d3506f5a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal < 0 && offsetAdjusted == 0) {\n+                long prevLocal = previousTransition(instantAdjusted);\n+                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+                int offsetPrevLocal = getOffset(prevLocal);\n+                int offsetPrevAdjusted = getOffset(prevAdjusted);\n+                if (offsetPrevLocal < offsetPrevAdjusted) {\n+                    return offsetPrevLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}