{
    "patch": "                // if offsetLocal is positive and less than offsetAdjusted, or\n                // if offsetLocal is negative and greater than or equal to offsetAdjusted\n                if ((offsetLocal >= 0 && offsetLocal < offsetAdjusted) || (offsetLocal < 0 && offsetLocal >= offsetAdjusted)) {\n                    long prevLocal = previousTransition(instantAdjusted);\n                    long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n                    if (prevLocal != prevAdjusted) {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a081f5d4 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // if offsetLocal is positive and less than offsetAdjusted, or\n+                // if offsetLocal is negative and greater than or equal to offsetAdjusted\n+                if ((offsetLocal >= 0 && offsetLocal < offsetAdjusted) || (offsetLocal < 0 && offsetLocal >= offsetAdjusted)) {\n+                    long prevLocal = previousTransition(instantAdjusted);\n+                    long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+                    if (prevLocal != prevAdjusted) {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}