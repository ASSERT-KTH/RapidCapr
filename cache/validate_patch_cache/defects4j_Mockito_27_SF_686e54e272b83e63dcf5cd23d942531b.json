{
    "patch": "public <T> void resetMock(T mock) {\n    try {\n        Object oldInterceptor = MockUtil.getInterceptor(mock);\n        if (oldInterceptor instanceof MethodInterceptorFilter) {\n            MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) oldInterceptor;\n            MockHandlerInterface<?> oldHandler = oldFilter.getMockHandler();\n            MockHandler<T> newHandler = new MockHandler<T>(oldHandler);\n            MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newHandler, oldFilter.getMockSettings());\n            Factory factory = (Factory) mock;\n            factory.setCallback(0, newFilter);\n        }\n    } catch (NoSuchFieldException e) {\n        // do nothing\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..bb87217e5 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,22 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    try {\n+        Object oldInterceptor = MockUtil.getInterceptor(mock);\n+        if (oldInterceptor instanceof MethodInterceptorFilter) {\n+            MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) oldInterceptor;\n+            MockHandlerInterface<?> oldHandler = oldFilter.getMockHandler();\n+            MockHandler<T> newHandler = new MockHandler<T>(oldHandler);\n+            MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newHandler, oldFilter.getMockSettings());\n+            Factory factory = (Factory) mock;\n+            factory.setCallback(0, newFilter);\n+        }\n+    } catch (NoSuchFieldException e) {\n+        // do nothing\n+    }\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: non-static method <T>getInterceptor(T) cannot be referenced from a static context",
    "test_result": "ERROR"
}