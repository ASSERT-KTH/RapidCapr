{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<Integer>();\n    Integer runningMax = numbers.size() > 0 ? numbers.get(0) : null;\n\n    for (int i = 0; i < numbers.size(); i++) {\n        Integer n = numbers.get(i);\n        \n        if (n == null) {\n            result.add(runningMax);\n            continue;\n        }\n        \n        if (n > runningMax) {\n            runningMax = n;\n        }\n        \n        result.add(runningMax);\n    }\n    \n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..caf94ac 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,25 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<Integer>();\n+    Integer runningMax = numbers.size() > 0 ? numbers.get(0) : null;\n \n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n+    for (int i = 0; i < numbers.size(); i++) {\n+        Integer n = numbers.get(i);\n+        \n+        if (n == null) {\n+            result.add(runningMax);\n+            continue;\n         }\n-        return result;\n+        \n+        if (n > runningMax) {\n+            runningMax = n;\n+        }\n+        \n+        result.add(runningMax);\n     }\n+    \n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}