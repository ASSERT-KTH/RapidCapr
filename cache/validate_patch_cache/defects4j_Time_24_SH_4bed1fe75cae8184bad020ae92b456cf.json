{
    "patch": "                if (i == 0 && savedFields[i].iField.getType() == DateTimeFieldType.weekyear() \n                            && savedFields[i].get() <= savedFields[i].iField.getMaximumValue() \n                            && savedFields[i].get() >= savedFields[i].iField.getMinimumValue()) { \n                    // the weekyear is within the valid range, but the computed year may be incorrect\n                    int days = iChrono.getDaysInYearWeek(savedFields[i].get(), \n                                                           savedFields[i + 1].get());\n                    if (days > savedFields[i].iField.getMaximumValue()) {\n                        int years = savedFields[i].iField.getRange().getMaximum() + 1;\n                        millis = savedFields[i].addWrapField(millis, -years);\n                    } else if (days < savedFields[i].iField.getMinimumValue()) {\n                        int years = savedFields[i].iField.getRange().getMaximum() + 1;\n                        millis = savedFields[i].addWrapField(millis, years);\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..8438dbbf 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (i == 0 && savedFields[i].iField.getType() == DateTimeFieldType.weekyear() \n+                            && savedFields[i].get() <= savedFields[i].iField.getMaximumValue() \n+                            && savedFields[i].get() >= savedFields[i].iField.getMinimumValue()) { \n+                    // the weekyear is within the valid range, but the computed year may be incorrect\n+                    int days = iChrono.getDaysInYearWeek(savedFields[i].get(), \n+                                                           savedFields[i + 1].get());\n+                    if (days > savedFields[i].iField.getMaximumValue()) {\n+                        int years = savedFields[i].iField.getRange().getMaximum() + 1;\n+                        millis = savedFields[i].addWrapField(millis, -years);\n+                    } else if (days < savedFields[i].iField.getMinimumValue()) {\n+                        int years = savedFields[i].iField.getRange().getMaximum() + 1;\n+                        millis = savedFields[i].addWrapField(millis, years);\n+                    }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}