{
    "patch": "public static boolean containsAny(CharSequence str, char... searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    int len = str.length();\n    if (len == 0) {\n        return false;\n    }\n    int searchLen = searchChars.length;\n    if (searchLen == 0) {\n        return false;\n    }\n    int strIndex = 0;\n    while (strIndex < len) {\n        int strCodePoint = Character.codePointAt(str, strIndex);\n        if (searchLen == 1) {\n            if (searchChars[0] == strCodePoint) {\n                return true;\n            }\n        } else {\n            for (int i = 0; i < searchLen; i++) {\n                int searchCodePoint = searchChars[i];\n                if (searchCodePoint == strCodePoint) {\n                    return true;\n                }\n            }\n        }\n        strIndex += Character.charCount(strCodePoint);\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..7cb43cfe 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,37 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char... searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    int len = str.length();\n+    if (len == 0) {\n+        return false;\n+    }\n+    int searchLen = searchChars.length;\n+    if (searchLen == 0) {\n+        return false;\n+    }\n+    int strIndex = 0;\n+    while (strIndex < len) {\n+        int strCodePoint = Character.codePointAt(str, strIndex);\n+        if (searchLen == 1) {\n+            if (searchChars[0] == strCodePoint) {\n+                return true;\n+            }\n+        } else {\n+            for (int i = 0; i < searchLen; i++) {\n+                int searchCodePoint = searchChars[i];\n+                if (searchCodePoint == strCodePoint) {\n+                    return true;\n+                }\n+            }\n+        }\n+        strIndex += Character.charCount(strCodePoint);\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}