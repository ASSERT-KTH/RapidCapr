{
    "patch": "  public static String escape(String orig) {\n    StringBuilder result = new StringBuilder();\n    for (int i=0; i<orig.length(); i++) {\n      char ch=orig.charAt(i);\n      switch (ch) {\n      case '<' :\n        result.append(\"&lt;\");\n        break;\n      case '>' :\n        result.append(\"&gt;\");\n        break;\n      case '&' :\n        result.append(\"&amp;\");\n        break;\n      case '\"' :\n        result.append(\"&quot;\");\n        break;\n      case '\\'' :\n        result.append(\"&apos;\");\n        break;\n      case '\\n' :\n        result.append(\"\\\\n\");\n        break;\n      case '\\r' :\n        result.append(\"\\\\r\");\n        break;\n      case '\\t' :\n        result.append(\"\\\\t\");\n        break;\n      case 0x85:\n        result.append(\"&#133;\"); // next line (NEL)\n        break;\n      case 0x2028:\n        result.append(\"\\\\u2028\"); // line separator\n        break;\n      case 0x2029:\n        result.append(\"\\\\u2029\"); // paragraph separator\n        break;\n      case 0x0b: // http://en.wikipedia.org/wiki/Vertical_Tab\n        result.append(\"&#xB\"); // e.g. grep uses this in output for some weird reason\n        break;\n      case '\\'':\n        result.append(\"\\\\'\");\n        break;\n      case '\\\\':\n        result.append(\"\\\\\\\\\");\n        break;\n      default :\n        if (ch < 128) {\n          if (ch < 32) {\n            result.append(\"&#\"+((int)ch)+\";\");\n          } else {\n            result.append(ch);\n          }\n        }\n        // result.append(ch); JDK 1.4!\n        else {\n          result.append(\"&#\"+((int)ch)+\";\");\n        }\n      }\n    }\n    return result.toString();\n  }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}