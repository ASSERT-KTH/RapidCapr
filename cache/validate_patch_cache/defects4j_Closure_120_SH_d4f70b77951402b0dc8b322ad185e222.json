{
    "patch": "        while (block.getParent() != null) {\n          if (block.getParent().isFunction && block != ref.getBasicBlock()) {\n            return false;\n          }\n\n          block = block.getParent();\n\n          if (block != null && block.isLoop) {\n            return false;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..5ff021f1 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        while (block.getParent() != null) {\n+          if (block.getParent().isFunction && block != ref.getBasicBlock()) {\n+            return false;\n+          }\n+\n+          block = block.getParent();\n+\n+          if (block != null && block.isLoop) {\n+            return false;\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}