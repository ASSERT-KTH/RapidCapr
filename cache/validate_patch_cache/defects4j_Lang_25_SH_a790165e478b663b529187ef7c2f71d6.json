{
    "patch": "StringBuilder outBuffer = new StringBuilder(in.length());\nBufferedWriter convert = new BufferedWriter(new OutputStreamWriter(\n        new ByteArrayOutputStream(), \"ISO8859_1\"));\ntry {\n    int length = in.length();\n    for (int i = 0; i < length; i++) {\n        char aChar = in.charAt(i);\n        if (aChar == '\\\\') {\n            outBuffer.append(\"\\\\\\\\\");\n            success = false;\n            continue;\n        }\n        if (aChar > 0x7f) {\n            convert.write(aChar);\n            success = false;\n            continue;\n        }\n        if (!Character.isISOControl(aChar)) {\n            outBuffer.append(aChar);\n            continue;\n        }\n        if (aChar == '\\n') {\n            outBuffer.append(\"\\\\n\");\n            continue;\n        }\n        if (aChar == '\\r') {\n            outBuffer.append(\"\\\\r\");\n            continue;\n        }\n        success = false;\n        outBuffer.append(aChar);\n    }\n    convert.flush();\n    outBuffer.append(convert.toString());\n} catch (IOException ex) {\n    // assert false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}