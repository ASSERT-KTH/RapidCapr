{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (str.contains(\"__\")) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    int i = 0;\n    StringBuilder language = new StringBuilder();\n    while (i < len && str.charAt(i) != '_' && i < 2) {\n        if (!Character.isLowerCase(str.charAt(i))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        language.append(str.charAt(i));\n        i++;\n    }\n\n    if (language.length() == 0) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    String country = \"\";\n    if (i + 1 < len && str.charAt(i) == '_') {\n        i++;\n        int start = i;\n        while (i < len && str.charAt(i) != '_' && i - start < 2) {\n            if (!Character.isUpperCase(str.charAt(i))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            i++;\n        }\n        country = str.substring(start, i);\n    }\n\n    String variant = \"\";\n    if (i + 1 < len && str.charAt(i) == '_') {\n        i++;\n        variant = str.substring(i);\n        if (variant.length() == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n\n    if (i < len) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    return new Locale(language.toString(), country, variant);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..1c566af5 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,41 +91,63 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (str.contains(\"__\")) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    int i = 0;\n+    StringBuilder language = new StringBuilder();\n+    while (i < len && str.charAt(i) != '_' && i < 2) {\n+        if (!Character.isLowerCase(str.charAt(i))) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+        language.append(str.charAt(i));\n+        i++;\n+    }\n+\n+    if (language.length() == 0) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    String country = \"\";\n+    if (i + 1 < len && str.charAt(i) == '_') {\n+        i++;\n+        int start = i;\n+        while (i < len && str.charAt(i) != '_' && i - start < 2) {\n+            if (!Character.isUpperCase(str.charAt(i))) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+            i++;\n         }\n+        country = str.substring(start, i);\n     }\n \n+    String variant = \"\";\n+    if (i + 1 < len && str.charAt(i) == '_') {\n+        i++;\n+        variant = str.substring(i);\n+        if (variant.length() == 0) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    }\n+\n+    if (i < len) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    return new Locale(language.toString(), country, variant);\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}