{
    "patch": "public static int[] min_path(int[][] grid, int k) {\n    int n = grid.length;\n    int val = Integer.MAX_VALUE;\n    boolean foundVal = false;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(grid[i][j] == 1) {\n                int tmpVal = Integer.MAX_VALUE;\n                if(i > 0) tmpVal = Math.min(tmpVal, grid[i-1][j]);\n                if(j > 0) tmpVal = Math.min(tmpVal, grid[i][j-1]);\n                if(i < n-1) tmpVal = Math.min(tmpVal, grid[i+1][j]);\n                if(j < n-1) tmpVal = Math.min(tmpVal, grid[i][j+1]);\n                if(tmpVal != Integer.MAX_VALUE) {\n                    val = Math.min(tmpVal, val);\n                    foundVal = true;\n                }\n            }\n        }\n    }\n    int[] ans = new int[k];\n    for(int i = 0; i < k; i++) {\n        if(i%2 == 0)\n            ans[i] = 1;\n        else\n            ans[i] = foundVal ? val : -1;\n    }\n    return ans;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MIN_PATH.java b/src/main/java/humaneval/buggy/MIN_PATH.java\nindex c19fee5..ab8c1d5 100644\n--- a/src/main/java/humaneval/buggy/MIN_PATH.java\n+++ b/src/main/java/humaneval/buggy/MIN_PATH.java\n@@ -32,24 +32,32 @@ package humaneval.buggy;\n  */\n \n public class MIN_PATH {\n-    public static int[] min_path(int[][] grid, int k) {\n-        int n = grid.length;\n-        int val = n * n + 1;\n-        for(int i = 0; i < n; i++) {\n-            for(int j = 0; j < n; j++) {\n-                if(grid[i][j] == 1) {\n-                    if(i != 0) val = Math.max(val, grid[i][j + 1]);\n-                    if(j != 0) val = Math.min(val, grid[i - 1][j]);\n-                    if(i != n - 1) val = Math.min(val, grid[i - 1][j]);\n-                    if(j != n + 1) val = Math.max(val, grid[i][j - 1]);\n+public static int[] min_path(int[][] grid, int k) {\n+    int n = grid.length;\n+    int val = Integer.MAX_VALUE;\n+    boolean foundVal = false;\n+    for(int i = 0; i < n; i++) {\n+        for(int j = 0; j < n; j++) {\n+            if(grid[i][j] == 1) {\n+                int tmpVal = Integer.MAX_VALUE;\n+                if(i > 0) tmpVal = Math.min(tmpVal, grid[i-1][j]);\n+                if(j > 0) tmpVal = Math.min(tmpVal, grid[i][j-1]);\n+                if(i < n-1) tmpVal = Math.min(tmpVal, grid[i+1][j]);\n+                if(j < n-1) tmpVal = Math.min(tmpVal, grid[i][j+1]);\n+                if(tmpVal != Integer.MAX_VALUE) {\n+                    val = Math.min(tmpVal, val);\n+                    foundVal = true;\n                 }\n             }\n         }\n-        int[] ans = new int[k];\n-        for(int i = 0; i < k; i++) {\n-            if((i % 2) == 0) ans[i] = 1;\n-            else ans[i] = val;\n-        }\n-        return ans;\n     }\n+    int[] ans = new int[k];\n+    for(int i = 0; i < k; i++) {\n+        if(i%2 == 0)\n+            ans[i] = 1;\n+        else\n+            ans[i] = foundVal ? val : -1;\n+    }\n+    return ans;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}