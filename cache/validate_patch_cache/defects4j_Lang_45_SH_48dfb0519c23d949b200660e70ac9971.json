{
    "patch": "// sanitize input parameters\nlower = Math.max(lower, 0);\nif (upper == -1) {\n    upper = str.length();\n} else {\n    upper = Math.min(upper, str.length());\n}\nif (lower > upper) {\n    lower = upper;\n}\n\nStringBuffer result = new StringBuffer();\nint index = StringUtils.indexOf(str, \" \", lower);\nif (index == -1) {\n    result.append(str.substring(lower, upper));\n    if (upper < str.length()) {\n        result.append(StringUtils.defaultString(appendToEnd));\n    }\n} else if (index <= upper) {\n    result.append(str.substring(lower, index));\n    result.append(StringUtils.defaultString(appendToEnd));\n} else {\n    result.append(str.substring(lower, upper));\n    result.append(StringUtils.defaultString(appendToEnd));\n}\nreturn result.toString();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..e72049ed 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,32 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// sanitize input parameters\n+lower = Math.max(lower, 0);\n+if (upper == -1) {\n+    upper = str.length();\n+} else {\n+    upper = Math.min(upper, str.length());\n+}\n+if (lower > upper) {\n+    lower = upper;\n+}\n+\n+StringBuffer result = new StringBuffer();\n+int index = StringUtils.indexOf(str, \" \", lower);\n+if (index == -1) {\n+    result.append(str.substring(lower, upper));\n+    if (upper < str.length()) {\n+        result.append(StringUtils.defaultString(appendToEnd));\n+    }\n+} else if (index <= upper) {\n+    result.append(str.substring(lower, index));\n+    result.append(StringUtils.defaultString(appendToEnd));\n+} else {\n+    result.append(str.substring(lower, upper));\n+    result.append(StringUtils.defaultString(appendToEnd));\n+}\n+return result.toString();\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable result is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}