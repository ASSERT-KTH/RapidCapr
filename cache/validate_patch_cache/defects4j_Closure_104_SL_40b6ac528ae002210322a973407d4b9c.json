{
    "patch": "      JSType result = null;\n      for (JSType otherAlternate : ((UnionType) that).alternates) {\n        if (otherAlternate.isSubtype(this)) {\n          if (result == null) {\n            result = otherAlternate;\n          } else {\n            result = getGreatestSubtype(result, otherAlternate);\n          }\n        }\n      }\n      if (result != null) {\n        builder.addAlternate(result);\n      } else if (this.isObject() && that.isObject()) {\n        return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n      } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n      }\n    }\n    JSType result = builder.build();\n    return result;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/UnionType.java b/src/com/google/javascript/rhino/jstype/UnionType.java\nindex a9c9a0ae..c2ad1621 100644\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n@@ -288,7 +288,27 @@ public class UnionType extends JSType {\n       builder.addAlternate(that);\n     }\n     JSType result = builder.build();\n-    if (result != null) {\n+      JSType result = null;\n+      for (JSType otherAlternate : ((UnionType) that).alternates) {\n+        if (otherAlternate.isSubtype(this)) {\n+          if (result == null) {\n+            result = otherAlternate;\n+          } else {\n+            result = getGreatestSubtype(result, otherAlternate);\n+          }\n+        }\n+      }\n+      if (result != null) {\n+        builder.addAlternate(result);\n+      } else if (this.isObject() && that.isObject()) {\n+        return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n+      } else {\n+        return getNativeType(JSTypeNative.NO_TYPE);\n+      }\n+    }\n+    JSType result = builder.build();\n+    return result;\n+  }\n       return result;\n     } else if (this.isObject() && that.isObject()) {\n       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}