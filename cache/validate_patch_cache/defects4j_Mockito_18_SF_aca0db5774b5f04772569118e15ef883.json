{
    "patch": "public class MyClass {\n    private int[] array;\n\n    public MyClass(int[] array) {\n        this.array = array;\n    }\n\n    public Iterable<Integer> getEvenNumbers() {\n        List<Integer> evenNumbers = new ArrayList<Integer>();\n        for (int i : array) {\n            if (i % 2 == 0) {\n                evenNumbers.add(i);\n            }\n        }\n        return evenNumbers;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..c91ca96e4 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,23 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public class MyClass {\n+    private int[] array;\n+\n+    public MyClass(int[] array) {\n+        this.array = array;\n+    }\n+\n+    public Iterable<Integer> getEvenNumbers() {\n+        List<Integer> evenNumbers = new ArrayList<Integer>();\n+        for (int i : array) {\n+            if (i % 2 == 0) {\n+                evenNumbers.add(i);\n+            }\n+        }\n+        return evenNumbers;\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}