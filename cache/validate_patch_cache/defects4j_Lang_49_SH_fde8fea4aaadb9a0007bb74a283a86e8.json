{
    "patch": "    /**\n     * Calculates the greatest common divisor of two integers.\n     *\n     * @param a the first integer\n     * @param b the second integer\n     * @return the greatest common divisor\n     */\n    private int greatestCommonDivisor(int a, int b) {\n        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b, a % b);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..8fb9450f 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,19 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+    /**\n+     * Calculates the greatest common divisor of two integers.\n+     *\n+     * @param a the first integer\n+     * @param b the second integer\n+     * @return the greatest common divisor\n+     */\n+    private int greatestCommonDivisor(int a, int b) {\n+        if (b == 0) {\n+            return a;\n+        }\n+        return greatestCommonDivisor(b, a % b);\n+    }\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}