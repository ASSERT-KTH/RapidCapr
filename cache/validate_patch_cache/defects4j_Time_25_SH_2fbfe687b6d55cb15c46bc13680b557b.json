{
    "patch": "        if ((offsetLocal - offsetAdjusted) < 0) {\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted) {\n                int targetOffset = getOffset(nextLocal);\n                if ((offsetLocal - targetOffset) < 0) {\n                    return offsetLocal;\n                }\n                return targetOffset;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..c6296e6e 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if ((offsetLocal - offsetAdjusted) < 0) {\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextLocal != nextAdjusted) {\n+                int targetOffset = getOffset(nextLocal);\n+                if ((offsetLocal - targetOffset) < 0) {\n+                    return offsetLocal;\n+                }\n+                return targetOffset;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}