{
    "patch": "            if (e.getIllegalField() != null) {\n                if (e.getIllegalFieldValue() == DateTimeConstants.MAX_YEAR + 1L ||\n                    e.getIllegalFieldValue() == DateTimeConstants.MIN_YEAR - 1L) {\n                    return computeMillis(resetFields, text);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..0abe9d5c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,11 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (e.getIllegalField() != null) {\n+                if (e.getIllegalFieldValue() == DateTimeConstants.MAX_YEAR + 1L ||\n+                    e.getIllegalFieldValue() == DateTimeConstants.MIN_YEAR - 1L) {\n+                    return computeMillis(resetFields, text);\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}