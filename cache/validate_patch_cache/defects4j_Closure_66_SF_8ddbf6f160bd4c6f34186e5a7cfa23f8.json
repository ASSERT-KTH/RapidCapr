{
    "patch": "public double getTypedPercent(String js) {\n    double typed = 0.0;\n    double total = 0.0;\n    for (String line : js.split(\"\\\\r?\\\\n\")) {\n        line = line.trim();\n        if (!line.startsWith(\"//\")) {\n            total += 1.0;\n            if (line.matches(\".*[a-zA-Z]+.*\")) {\n                typed += 1.0;\n            }\n        }\n    }\n    if (total == 0) {\n        return 100.0;\n    } else {\n        return 100.0 * (typed / total);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..0993cfc9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    double typed = 0.0;\n+    double total = 0.0;\n+    for (String line : js.split(\"\\\\r?\\\\n\")) {\n+        line = line.trim();\n+        if (!line.startsWith(\"//\")) {\n+            total += 1.0;\n+            if (line.matches(\".*[a-zA-Z]+.*\")) {\n+                typed += 1.0;\n+            }\n+        }\n+    }\n+    if (total == 0) {\n+        return 100.0;\n+    } else {\n+        return 100.0 * (typed / total);\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}