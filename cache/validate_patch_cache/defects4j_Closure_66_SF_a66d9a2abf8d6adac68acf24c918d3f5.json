{
    "patch": "public static double getTypedPercent(JsonStructure js) {\n    double count = 0.0;\n    double typedCount = 0.0;\n    \n    if (js.getValueType() == ValueType.ARRAY) {\n        JsonArray array = (JsonArray) js;\n        for (JsonValue value : array) {\n            count++;\n            if (value.getValueType() != ValueType.NULL) {\n                typedCount++;\n            }\n        }\n    }\n    \n    return (typedCount / count) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..545615e7 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JsonStructure js) {\n+    double count = 0.0;\n+    double typedCount = 0.0;\n+    \n+    if (js.getValueType() == ValueType.ARRAY) {\n+        JsonArray array = (JsonArray) js;\n+        for (JsonValue value : array) {\n+            count++;\n+            if (value.getValueType() != ValueType.NULL) {\n+                typedCount++;\n+            }\n+        }\n+    }\n+    \n+    return (typedCount / count) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}