{
    "patch": "      if (name == null) {\n        name = new Name();\n        name.setIdentifier(\"\");\n        isUnnamedFunction = true;\n        // TODO(b/18730893): We can't set a line number to an\n        // unnamed function, because we can't get at the actual\n        // function node that we created.  We just have to leave\n        // the line number blank, which means the line number of the\n        // paren will be used.\n        newName.setLineno(Node.NOLINENO);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..5971bea3 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,17 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      if (name == null) {\n+        name = new Name();\n+        name.setIdentifier(\"\");\n+        isUnnamedFunction = true;\n+        // TODO(b/18730893): We can't set a line number to an\n+        // unnamed function, because we can't get at the actual\n+        // function node that we created.  We just have to leave\n+        // the line number blank, which means the line number of the\n+        // paren will be used.\n+        newName.setLineno(Node.NOLINENO);\n+      }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}