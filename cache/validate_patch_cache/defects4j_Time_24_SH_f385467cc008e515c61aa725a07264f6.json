{
    "patch": "            if (savedFields[i].iChanged && Arrays.binarySearch(STRICT_VALUES, savedFields[i].iField.getType()) >= 0 &&\n                    (i < 1 || savedFields[i - 1].iField.getType() != DateTimeFieldType.dayOfWeek())) {\n                throw new IllegalFieldValueException(\n                        savedFields[i].iField.getType(),\n                        savedFields[i].getSaveText(),\n                        \"Strict mode was specified but no date was supplied for '\" + savedFields[i].iField.getName() + '\\'');",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..6cd48ff1 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iChanged && Arrays.binarySearch(STRICT_VALUES, savedFields[i].iField.getType()) >= 0 &&\n+                    (i < 1 || savedFields[i - 1].iField.getType() != DateTimeFieldType.dayOfWeek())) {\n+                throw new IllegalFieldValueException(\n+                        savedFields[i].iField.getType(),\n+                        savedFields[i].getSaveText(),\n+                        \"Strict mode was specified but no date was supplied for '\" + savedFields[i].iField.getName() + '\\'');\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}