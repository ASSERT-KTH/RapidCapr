{
    "patch": "@Override\npublic ReturnValue execute(ClassLoader classLoader, List<String> params) {\n    ReturnValue values = null;\n\n    try {\n        Class<?> exClass = classLoader.loadClass(params.get(0));\n        Method exMethod = exClass.getDeclaredMethod(params.get(1));\n        Object exObj = exClass.getDeclaredConstructor().newInstance();\n\n        values = new ReturnValue(exMethod.invoke(exObj), exMethod.getReturnType());\n    } \n    catch(NoSuchMethodException | ClassNotFoundException | InvocationTargetException | InstantiationException | IllegalAccessException e) {\n        values = new ReturnValue(e, e.getClass());\n    }\n\n    if (values.getReturnType().equals(Iterable.class)) {\n        Iterable iterable = (Iterable) values.getValue();\n        Iterator iterator = iterable.iterator();\n        if (iterator.hasNext()) {\n            return new ReturnValue(iterable, iterable.getClass());\n        }\n    }\n    return new ReturnValue(null, void.class);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}