{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                // Compute the weekyear to avoid overflow when computing millis\n                millis = savedFields[i].set(millis, true);\n                long currentWeekyear = savedFields[i].iField.get(millis);\n                if (currentWeekyear < 1 || currentWeekyear > 9999) {\n                    throw new IllegalFieldValueException(\n                            \"Invalid year of weekyear: \" + currentWeekyear, savedFields[i].iField);\n                }\n                long targetMillis = 0;\n                for (int j = 0; j < count; j++) {\n                    if (j != i) {\n                        targetMillis = savedFields[j].set(targetMillis, false);\n                    }\n                }\n                // Set the millis from a known date to ensure the weekyear doesn't change the millis value\n                targetMillis = setYear(targetMillis, currentWeekyear);\n                if (targetMillis <= millis) {\n                    throw new IllegalFieldValueException(\n                            \"Strict mode rejected resolved DateTime as it is in the future\", savedFields[i].iField);\n                }\n                millis = targetMillis;\n            } else {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..ab663d40 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,28 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                // Compute the weekyear to avoid overflow when computing millis\n+                millis = savedFields[i].set(millis, true);\n+                long currentWeekyear = savedFields[i].iField.get(millis);\n+                if (currentWeekyear < 1 || currentWeekyear > 9999) {\n+                    throw new IllegalFieldValueException(\n+                            \"Invalid year of weekyear: \" + currentWeekyear, savedFields[i].iField);\n+                }\n+                long targetMillis = 0;\n+                for (int j = 0; j < count; j++) {\n+                    if (j != i) {\n+                        targetMillis = savedFields[j].set(targetMillis, false);\n+                    }\n+                }\n+                // Set the millis from a known date to ensure the weekyear doesn't change the millis value\n+                targetMillis = setYear(targetMillis, currentWeekyear);\n+                if (targetMillis <= millis) {\n+                    throw new IllegalFieldValueException(\n+                            \"Strict mode rejected resolved DateTime as it is in the future\", savedFields[i].iField);\n+                }\n+                millis = targetMillis;\n+            } else {\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}