{
    "patch": "private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n    if (notPrinter && notParser) {\n        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n    }\n\n    Object[] comp = createComposite(elementPairs);\n\n    if (comp[0] == null && notPrinter) {\n        return null;\n    }\n\n    if (comp[1] == null && notParser) {\n        return null;\n    }\n\n    PeriodPrinter printer = (PeriodPrinter) comp[0];\n    PeriodParser parser = (PeriodParser) comp[1];\n\n    if (printer == null) {\n        printer = ISOPeriodFormat.standard().getPrinter();\n    }\n\n    if (parser == null) {\n        parser = ISOPeriodFormat.standard().getParser();\n    }\n\n    int size = elementPairs.size();\n\n    if (size >= 2 && elementPairs.get(size - 2) instanceof Separator) {\n        Separator sep = (Separator) elementPairs.get(size - 2);\n        List<Object> subList = elementPairs.subList(0, size - 2);\n        PeriodFormatter innerFormatter = toFormatter(subList, false, false);\n\n        if (innerFormatter == null) {\n            return new PeriodFormatter(sep.finish(printer, parser), sep.finish(printer, parser));\n        }\n\n        PeriodPrinter innerPrinter = innerFormatter.getPrinter() != null ? innerFormatter.getPrinter() : ISOPeriodFormat.standard().getPrinter();\n        PeriodParser innerParser = innerFormatter.getParser() != null ? innerFormatter.getParser() : ISOPeriodFormat.standard().getParser();\n\n        return new PeriodFormatter(sep.finish(innerPrinter, innerParser), sep.finish(innerPrinter, innerParser));\n    } else {\n        return new PeriodFormatter(printer, parser);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..4d269b47 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -791,26 +791,51 @@ public class PeriodFormatterBuilder {\n     }\n \n     //-----------------------------------------------------------------------\n-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n-        if (notPrinter && notParser) {\n-            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n-        }\n-        int size = elementPairs.size();\n-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n-            Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n-        }\n-        Object[] comp = createComposite(elementPairs);\n-        if (notPrinter) {\n-            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n-        } else if (notParser) {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n-        } else {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n+    if (notPrinter && notParser) {\n+        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n+    }\n+\n+    Object[] comp = createComposite(elementPairs);\n+\n+    if (comp[0] == null && notPrinter) {\n+        return null;\n+    }\n+\n+    if (comp[1] == null && notParser) {\n+        return null;\n+    }\n+\n+    PeriodPrinter printer = (PeriodPrinter) comp[0];\n+    PeriodParser parser = (PeriodParser) comp[1];\n+\n+    if (printer == null) {\n+        printer = ISOPeriodFormat.standard().getPrinter();\n+    }\n+\n+    if (parser == null) {\n+        parser = ISOPeriodFormat.standard().getParser();\n+    }\n+\n+    int size = elementPairs.size();\n+\n+    if (size >= 2 && elementPairs.get(size - 2) instanceof Separator) {\n+        Separator sep = (Separator) elementPairs.get(size - 2);\n+        List<Object> subList = elementPairs.subList(0, size - 2);\n+        PeriodFormatter innerFormatter = toFormatter(subList, false, false);\n+\n+        if (innerFormatter == null) {\n+            return new PeriodFormatter(sep.finish(printer, parser), sep.finish(printer, parser));\n         }\n+\n+        PeriodPrinter innerPrinter = innerFormatter.getPrinter() != null ? innerFormatter.getPrinter() : ISOPeriodFormat.standard().getPrinter();\n+        PeriodParser innerParser = innerFormatter.getParser() != null ? innerFormatter.getParser() : ISOPeriodFormat.standard().getParser();\n+\n+        return new PeriodFormatter(sep.finish(innerPrinter, innerParser), sep.finish(innerPrinter, innerParser));\n+    } else {\n+        return new PeriodFormatter(printer, parser);\n     }\n+}\n \n     private static Object[] createComposite(List<Object> elementPairs) {\n         switch (elementPairs.size()) {",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}