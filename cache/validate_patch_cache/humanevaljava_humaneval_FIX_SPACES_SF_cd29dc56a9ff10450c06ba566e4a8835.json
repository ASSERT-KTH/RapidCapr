{
    "patch": "    public static String fix_spaces(String text) {\n        String new_text = \"\";\n        int i = 0;\n        int start = -1;\n        int end = -1;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                if (start == -1) {\n                    new_text += text.charAt(i);\n                } else {\n                    end += 1;\n                }\n            } else {\n                if (start == -1) {\n                    start = i;\n                    end = i;\n                } else {\n                    if (end - start >= 2) {\n                        new_text += \"-\" + text.substring(i, i + 1);\n                    } else {\n                        for (int j = start; j <= end; j += 1) {\n                            new_text += \"_\";\n                        }\n                        new_text += text.substring(i, i + 1);\n                    }\n                    start = i;\n                    end = i;\n                }\n            }\n            i += 1;\n        }\n\n        if (start != -1 && end - start >= 2) {\n            new_text += \"-\" + text.substring(i);\n        } else if (start != -1 && end - start >= 0) {\n            for (int j = start; j <= end; j += 1) {\n                new_text += \"_\";\n            }\n            new_text += text.substring(i);\n        } else if (start == -1 && end == -1) {\n            new_text += text;\n        }\n\n        return new_text;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..2e2c0b7 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -13,26 +13,46 @@ public class FIX_SPACES {\n     public static String fix_spaces(String text) {\n         String new_text = \"\";\n         int i = 0;\n-        int start = 0;\n-        int end = 0;\n+        int start = -1;\n+        int end = -1;\n         while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n-                    }\n-                    new_text += text.substring(i, i + 1);\n+            if (text.charAt(i) == ' ') {\n+                if (start == -1) {\n+                    new_text += text.charAt(i);\n+                } else {\n+                    end += 1;\n+                }\n+            } else {\n+                if (start == -1) {\n+                    start = i;\n+                    end = i;\n                 } else {\n-                    new_text += text.substring(i, i + 1);\n+                    if (end - start >= 2) {\n+                        new_text += \"-\" + text.substring(i, i + 1);\n+                    } else {\n+                        for (int j = start; j <= end; j += 1) {\n+                            new_text += \"_\";\n+                        }\n+                        new_text += text.substring(i, i + 1);\n+                    }\n+                    start = i;\n+                    end = i;\n                 }\n-                start = i + 1;\n-                end = i + 1;\n             }\n             i += 1;\n         }\n \n+        if (start != -1 && end - start >= 2) {\n+            new_text += \"-\" + text.substring(i);\n+        } else if (start != -1 && end - start >= 0) {\n+            for (int j = start; j <= end; j += 1) {\n+                new_text += \"_\";\n+            }\n+            new_text += text.substring(i);\n+        } else if (start == -1 && end == -1) {\n+            new_text += text;\n+        }\n+\n         return new_text;\n     }\n }",
    "result_reason": "   TEST_FIX_SPACES.test_0:9 expected:<[_x_a_m_p_l_e_]> but was:<[Example]>",
    "test_result": "FAIL"
}