{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n        final int n = m.getColumnDimension();\n        final EigenDecomposition dec = new EigenDecomposition(m, EigenDecomposition.DEFAULT_EPSILON, n * n);\n        final RealMatrix sqrtD = new DiagonalMatrix(dec.getRealEigenvalues().stream()\n                                                        .map(val -> val > 0 ? FastMath.sqrt(val) : 0)\n                                                        .toArray());\n        final RealMatrix v = dec.getV();\n        return v.multiply(sqrtD).multiply(v.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..7b1b051b9 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,13 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+private RealMatrix squareRoot(RealMatrix m) {\n+        final int n = m.getColumnDimension();\n+        final EigenDecomposition dec = new EigenDecomposition(m, EigenDecomposition.DEFAULT_EPSILON, n * n);\n+        final RealMatrix sqrtD = new DiagonalMatrix(dec.getRealEigenvalues().stream()\n+                                                        .map(val -> val > 0 ? FastMath.sqrt(val) : 0)\n+                                                        .toArray());\n+        final RealMatrix v = dec.getV();\n+        return v.multiply(sqrtD).multiply(v.transpose());\n+}\n }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}