{
    "patch": "private Integer getBasicRow(final int col) {\n    Integer basicRow = null;\n    try {\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            final double entry = getEntry(i, col);\n            if (MathUtils.equals(entry, 1.0, epsilon)) {\n                if (basicRow == null) {\n                    basicRow = i;\n                } else {\n                    throw new IllegalStateException(\"More than one basic variable found in column \" + col);\n                }\n            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {\n                return null;\n            }\n        }\n    } catch (IllegalStateException e) {\n        System.err.println(e.getMessage());\n        return null;\n    }\n    return basicRow;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex 0ab790cd6..89b537068 100644\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -269,19 +269,27 @@ class SimplexTableau implements Serializable {\n      * @param col index of the column to check\n      * @return the row that the variable is basic in.  null if the column is not basic\n      */\n-    private Integer getBasicRow(final int col) {\n-        Integer row = null;\n+private Integer getBasicRow(final int col) {\n+    Integer basicRow = null;\n+    try {\n         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-                if (row == null) {\n-                row = i;\n+            final double entry = getEntry(i, col);\n+            if (MathUtils.equals(entry, 1.0, epsilon)) {\n+                if (basicRow == null) {\n+                    basicRow = i;\n                 } else {\n-                return null;\n+                    throw new IllegalStateException(\"More than one basic variable found in column \" + col);\n                 }\n+            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {\n+                return null;\n             }\n         }\n-        return row;\n+    } catch (IllegalStateException e) {\n+        System.err.println(e.getMessage());\n+        return null;\n     }\n+    return basicRow;\n+}\n \n     /**\n      * Removes the phase 1 objective function and artificial variables from this tableau.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}