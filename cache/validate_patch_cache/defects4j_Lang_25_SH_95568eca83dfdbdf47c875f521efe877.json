{
    "patch": "public static String unescape(String str) {\n    if (str == null) {\n        return null;\n    }\n    StringWriter writer = new StringWriter(str.length());\n    int sz = str.length();\n    for (int i = 0; i < sz; i++) {\n        char ch = str.charAt(i);\n        if (ch == '\\\\') {\n            if (++i >= sz) {\n                throw new IllegalArgumentException(\n                    \"Invalid escape sequence at end of string\");\n            }\n            char escape = str.charAt(i);\n            switch (escape) {\n                case 'b':\n                    writer.write('\\b');\n                    break;\n                case 't':\n                    writer.write('\\t');\n                    break;\n                case 'n':\n                    writer.write('\\n');\n                    break;\n                case 'f':\n                    writer.write('\\f');\n                    break;\n                case 'r':\n                    writer.write('\\r');\n                    break;\n                case '\\\\':\n                    writer.write('\\\\');\n                    break;\n                case '\\'':\n                    writer.write('\\'');\n                    break;\n                case '\\\"':\n                    writer.write('\"');\n                    break;\n                case 'g':  // added this case\n                    writer.write('\\u00AB');\n                    break;\n            }\n        } else {\n            writer.write(ch);\n        }\n    }\n    return writer.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}