{
    "patch": "\tprotected Size2D arrangeFF(BlockContainer container, Graphics2D g2, RectangleConstraint constraint) {\n\t\tdouble[] w = new double[5];\n\t\tdouble[] h = new double[5];\n\t\tw[0] = constraint.getWidth();\n\t\tif (this.topBlock != null) {\n\t\t\tRectangleConstraint c1 = new RectangleConstraint(w[0], null, LengthConstraintType.FIXED, 0.0,\n\t\t\t\t\tnew Range(0.0, constraint.getHeight()), LengthConstraintType.RANGE);\n\t\t\tSize2D size = this.topBlock.arrange(g2, c1);\n\t\t\th[0] = size.height;\n\t\t}\n\t\tw[1] = w[0];\n\t\tif (this.bottomBlock != null) {\n\t\t\tRectangleConstraint c2 = new RectangleConstraint(w[0], null, LengthConstraintType.FIXED, 0.0,\n\t\t\t\t\tnew Range(0.0, constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\t\t\tSize2D size = this.bottomBlock.arrange(g2, c2);\n\t\t\th[1] = size.height;\n\t\t}\n\t\th[2] = constraint.getHeight() - h[1] - h[0];\n\t\tif (h[2] < 0) {\n\t\t\th[2] = 0;\n\t\t}\n\t\tif (this.leftBlock != null) {\n\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth()),\n\t\t\t\t\tLengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n\t\t\tSize2D size = this.leftBlock.arrange(g2, c3);\n\t\t\tw[2] = size.width;\n\t\t}\n\t\th[3] = h[2];\n\t\tif (this.rightBlock != null) {\n\t\t\tRectangleConstraint c4 = new RectangleConstraint(0.0,\n\t\t\t\t\tnew Range(0.0, constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null,\n\t\t\t\t\tLengthConstraintType.FIXED);\n\t\t\tSize2D size = this.rightBlock.arrange(g2, c4);\n\t\t\tw[3] = size.width;\n\t\t}\n\t\th[4] = h[2];\n\t\tw[4] = constraint.getWidth() - w[3] - w[2];\n\t\tif (w[4] < 0) {\n\t\t\tw[4] = 0;\n\t\t}\n\t\tRectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n\t\tif (this.centerBlock != null) {\n\t\t\tthis.centerBlock.arrange(g2, c5);\n\t\t}\n\n\t\tif (this.topBlock != null) {\n\t\t\tthis.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0], h[0]));\n\t\t}\n\t\tif (this.bottomBlock != null) {\n\n\t\t\tthis.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2], w[1], h[1]));\n\t\t}\n\t\tif (this.leftBlock != null) {\n\t\t\tthis.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2], h[2]));\n\t\t}\n\t\tif (this.rightBlock != null) {\n\t\t\tthis.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0], w[3], h[3]));\n\t\t}\n\t\tif (this.centerBlock != null) {\n\t\t\tthis.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4], h[4]));\n\t\t}\n\t\treturn new Size2D(constraint.getWidth(), constraint.getHeight());\n\t}",
    "patch_diff": "diff --git a/source/org/jfree/chart/block/BorderArrangement.java b/source/org/jfree/chart/block/BorderArrangement.java\nindex 730aeb3..f959304 100644\n--- a/source/org/jfree/chart/block/BorderArrangement.java\n+++ b/source/org/jfree/chart/block/BorderArrangement.java\n@@ -419,74 +419,69 @@ public class BorderArrangement implements Arrangement, Serializable {\n      *\n      * @return The container size after the arrangement.\n      */\n-    protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n-                               RectangleConstraint constraint) {\n-        double[] w = new double[5];\n-        double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n-        w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n-        if (this.leftBlock != null) {\n-            RectangleConstraint c3 = new RectangleConstraint(0.0,\n-                    new Range(0.0, constraint.getWidth()),\n-                    LengthConstraintType.RANGE, h[2], null,\n-                    LengthConstraintType.FIXED);\n-            Size2D size = this.leftBlock.arrange(g2, c3);\n-            w[2] = size.width;\n-        }\n-        h[3] = h[2];\n-        if (this.rightBlock != null) {\n-            RectangleConstraint c4 = new RectangleConstraint(0.0,\n-                    new Range(0.0, constraint.getWidth() - w[2]),\n-                    LengthConstraintType.RANGE, h[2], null,\n-                    LengthConstraintType.FIXED);\n-            Size2D size = this.rightBlock.arrange(g2, c4);\n-            w[3] = size.width;\n-        }\n-        h[4] = h[2];\n-        w[4] = constraint.getWidth() - w[3] - w[2];\n-        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n-        if (this.centerBlock != null) {\n-            this.centerBlock.arrange(g2, c5);\n-        }\n-\n-        if (this.topBlock != null) {\n-            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n-                    h[0]));\n-        }\n-        if (this.bottomBlock != null) {\n-            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],\n-                    w[1], h[1]));\n-        }\n-        if (this.leftBlock != null) {\n-            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],\n-                    h[2]));\n-        }\n-        if (this.rightBlock != null) {\n-            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],\n-                    w[3], h[3]));\n-        }\n-        if (this.centerBlock != null) {\n-            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],\n-                    h[4]));\n-        }\n-        return new Size2D(constraint.getWidth(), constraint.getHeight());\n-    }\n+\tprotected Size2D arrangeFF(BlockContainer container, Graphics2D g2, RectangleConstraint constraint) {\n+\t\tdouble[] w = new double[5];\n+\t\tdouble[] h = new double[5];\n+\t\tw[0] = constraint.getWidth();\n+\t\tif (this.topBlock != null) {\n+\t\t\tRectangleConstraint c1 = new RectangleConstraint(w[0], null, LengthConstraintType.FIXED, 0.0,\n+\t\t\t\t\tnew Range(0.0, constraint.getHeight()), LengthConstraintType.RANGE);\n+\t\t\tSize2D size = this.topBlock.arrange(g2, c1);\n+\t\t\th[0] = size.height;\n+\t\t}\n+\t\tw[1] = w[0];\n+\t\tif (this.bottomBlock != null) {\n+\t\t\tRectangleConstraint c2 = new RectangleConstraint(w[0], null, LengthConstraintType.FIXED, 0.0,\n+\t\t\t\t\tnew Range(0.0, constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n+\t\t\tSize2D size = this.bottomBlock.arrange(g2, c2);\n+\t\t\th[1] = size.height;\n+\t\t}\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n+\t\tif (h[2] < 0) {\n+\t\t\th[2] = 0;\n+\t\t}\n+\t\tif (this.leftBlock != null) {\n+\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth()),\n+\t\t\t\t\tLengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c3);\n+\t\t\tw[2] = size.width;\n+\t\t}\n+\t\th[3] = h[2];\n+\t\tif (this.rightBlock != null) {\n+\t\t\tRectangleConstraint c4 = new RectangleConstraint(0.0,\n+\t\t\t\t\tnew Range(0.0, constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null,\n+\t\t\t\t\tLengthConstraintType.FIXED);\n+\t\t\tSize2D size = this.rightBlock.arrange(g2, c4);\n+\t\t\tw[3] = size.width;\n+\t\t}\n+\t\th[4] = h[2];\n+\t\tw[4] = constraint.getWidth() - w[3] - w[2];\n+\t\tif (w[4] < 0) {\n+\t\t\tw[4] = 0;\n+\t\t}\n+\t\tRectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n+\t\tif (this.centerBlock != null) {\n+\t\t\tthis.centerBlock.arrange(g2, c5);\n+\t\t}\n+\n+\t\tif (this.topBlock != null) {\n+\t\t\tthis.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0], h[0]));\n+\t\t}\n+\t\tif (this.bottomBlock != null) {\n+\n+\t\t\tthis.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2], w[1], h[1]));\n+\t\t}\n+\t\tif (this.leftBlock != null) {\n+\t\t\tthis.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2], h[2]));\n+\t\t}\n+\t\tif (this.rightBlock != null) {\n+\t\t\tthis.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0], w[3], h[3]));\n+\t\t}\n+\t\tif (this.centerBlock != null) {\n+\t\t\tthis.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4], h[4]));\n+\t\t}\n+\t\treturn new Size2D(constraint.getWidth(), constraint.getHeight());\n+\t}\n \n     /**\n      * Clears the layout.",
    "result_reason": "java.lang.IllegalArgumentException: Range(double, double): require lower (0.0) <= upper (-2.3000000000000007).",
    "test_result": "FAIL"
}