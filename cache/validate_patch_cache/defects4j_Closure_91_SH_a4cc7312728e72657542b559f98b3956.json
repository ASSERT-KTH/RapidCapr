{
    "patch": "      if (parent.getParent().getType() == Token.EXPR_RESULT) {\n        // Don't traverse functions that are getting lent to a prototype.\n        Node exprResult = parent.getParent();\n        Node callee = parent.getFirstChild();\n        if (callee != null && callee.getType() == Token.GETPROP) {\n          Node obj = callee.getFirstChild();\n          Node prop = obj.getNext();\n          if (prop.getString().equals(\"prototype\")) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..c79c900f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,18 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent.getParent().getType() == Token.EXPR_RESULT) {\n+        // Don't traverse functions that are getting lent to a prototype.\n+        Node exprResult = parent.getParent();\n+        Node callee = parent.getFirstChild();\n+        if (callee != null && callee.getType() == Token.GETPROP) {\n+          Node obj = callee.getFirstChild();\n+          Node prop = obj.getNext();\n+          if (prop.getString().equals(\"prototype\")) {\n+            return false;\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}