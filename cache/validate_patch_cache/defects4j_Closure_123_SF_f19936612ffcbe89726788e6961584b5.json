{
    "patch": "public String fixCode(String input) {\n    if (input.contains(\"for(\") && input.contains(\"in \")) {\n        String[] lines = input.split(\"\\\\r?\\\\n\");\n        for (int i = 0; i < lines.length; i++) {\n            String line = lines[i].trim();\n            if (line.startsWith(\"for(\") && line.contains(\"in \")) {\n                String[] tokens = line.split(\"in \");\n                String variable = tokens[0].trim().split(\"\\\\s+\")[1]; // extract variable name from for-loop\n                String collection = tokens[1].trim().replace(\")\", \"\");\n                \n                // if collection is an array, wrap it in Arrays.asList(...)\n                if (collection.contains(\"[\") && collection.contains(\"]\")) {\n                    collection = \"Arrays.asList\" + collection;\n                }\n                \n                lines[i] = \"for (\" + variable + \" : \" + collection + \") {\"; // add curly braces and fix syntax\n            }\n        }\n        return String.join(\"\\n\", lines);\n    }\n    return input;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..34097bb8 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,28 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String input) {\n+    if (input.contains(\"for(\") && input.contains(\"in \")) {\n+        String[] lines = input.split(\"\\\\r?\\\\n\");\n+        for (int i = 0; i < lines.length; i++) {\n+            String line = lines[i].trim();\n+            if (line.startsWith(\"for(\") && line.contains(\"in \")) {\n+                String[] tokens = line.split(\"in \");\n+                String variable = tokens[0].trim().split(\"\\\\s+\")[1]; // extract variable name from for-loop\n+                String collection = tokens[1].trim().replace(\")\", \"\");\n+                \n+                // if collection is an array, wrap it in Arrays.asList(...)\n+                if (collection.contains(\"[\") && collection.contains(\"]\")) {\n+                    collection = \"Arrays.asList\" + collection;\n+                }\n+                \n+                lines[i] = \"for (\" + variable + \" : \" + collection + \") {\"; // add curly braces and fix syntax\n+            }\n+        }\n+        return String.join(\"\\n\", lines);\n+    }\n+    return input;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}