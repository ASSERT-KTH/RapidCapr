{
    "patch": "// Functions with explcit 'this' types must be called in a GETPROP or GETELEM.\nif (functionType.hasThisType()) {\n  Node parent = n.getParent();\n  if (!NodeUtil.isGet(parent)) {\n    report(t, n, EXPECTED_THIS_TYPE, childType.toString());\n    ensureTyped(t, n);\n    return;\n  }\n}\n\nvisitParameterList(t, n, functionType);\nensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..0ca465fb 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explcit 'this' types must be called in a GETPROP or GETELEM.\n+if (functionType.hasThisType()) {\n+  Node parent = n.getParent();\n+  if (!NodeUtil.isGet(parent)) {\n+    report(t, n, EXPECTED_THIS_TYPE, childType.toString());\n+    ensureTyped(t, n);\n+    return;\n+  }\n+}\n+\n+visitParameterList(t, n, functionType);\n+ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}