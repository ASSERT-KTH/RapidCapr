{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (n.getParent().getType() == Token.GETPROP) {\n        Node varOrFun = n.getParent().getFirstChild();\n        if (NodeUtil.isGet(varOrFun)) {\n          JSDocInfo jsDoc = getJSDocInfo(varOrFun);\n          if (jsDoc != null && jsDoc.isConstructor()) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..12d2e87c 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,16 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (n.getParent().getType() == Token.GETPROP) {\n+        Node varOrFun = n.getParent().getFirstChild();\n+        if (NodeUtil.isGet(varOrFun)) {\n+          JSDocInfo jsDoc = getJSDocInfo(varOrFun);\n+          if (jsDoc != null && jsDoc.isConstructor()) {\n+            return false;\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: variable jsDoc is already defined in method shouldTraverse(NodeTraversal,Node,Node)",
    "test_result": "ERROR"
}