{
    "patch": "// This function name will be empty for unnamed functions, and will have a non-empty string\n// representation for named functions.\nString functionName = \"\";\nname = functionNode.getFunctionName();\nif (name != null) {\n  functionName = name.getIdentifier();\n}\nname = new Name();\nname.setIdentifier(functionName);\nNode newName = transform(name);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..419a4d2c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,16 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+// This function name will be empty for unnamed functions, and will have a non-empty string\n+// representation for named functions.\n+String functionName = \"\";\n+name = functionNode.getFunctionName();\n+if (name != null) {\n+  functionName = name.getIdentifier();\n+}\n+name = new Name();\n+name.setIdentifier(functionName);\n+Node newName = transform(name);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}