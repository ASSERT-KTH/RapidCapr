{
    "patch": "public ReturnValueForValues(final Object running, final Statement statement, final Description description) {\n    this.running = running;\n    this.statement = statement;\n    this.description = description;\n    this.values = new Values();\n    try {\n        this.statement.evaluate();\n    } catch (final Throwable e) {\n        this.exception = e;\n    }\n    this.values.discardUnassigned();\n    if (this.values.list.isEmpty()) {\n        values.assignDefaultValue(returnTypeFor(description.getAnnotation(Test.class)));\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}