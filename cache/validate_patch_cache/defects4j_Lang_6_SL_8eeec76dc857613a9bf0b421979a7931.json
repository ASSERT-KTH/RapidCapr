{
    "patch": "if (consumed == 0 || (consumed == 1 && Character.isHighSurrogate(input.charAt(pos)))) {\n    String currChar = input.subSequence(pos, pos + Character.charCount(Character.codePointAt(input, pos))).toString();\n    if (currChar.equals(\"\\\\b\")) {\n        out.write(\"\\\\b\");\n        pos += 2;\n    } else {\n        out.write(currChar);\n        pos += Character.charCount(Character.codePointAt(input, pos));\n    }\n} else {\n    pos += consumed;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..a39b0ddb 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,18 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+if (consumed == 0 || (consumed == 1 && Character.isHighSurrogate(input.charAt(pos)))) {\n+    String currChar = input.subSequence(pos, pos + Character.charCount(Character.codePointAt(input, pos))).toString();\n+    if (currChar.equals(\"\\\\b\")) {\n+        out.write(\"\\\\b\");\n+        pos += 2;\n+    } else {\n+        out.write(currChar);\n+        pos += Character.charCount(Character.codePointAt(input, pos));\n+    }\n+} else {\n+    pos += consumed;\n+}\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: unescape(String) failed: expected '\\ntest\\b' actual '\\nst\\b' expected:<",
    "test_result": "FAIL"
}