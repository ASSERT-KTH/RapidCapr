{
    "patch": "    JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);\n    if (!(resolvedTypeOfThis instanceof ObjectType)) {\n      t.report(JSError.make(n, TypeCheck.WRONG_PARAMETER_TYPE,\n              \"typeOfThis must resolve to an object type\"));\n    }\n    typeOfThis = (ObjectType) resolvedTypeOfThis;",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex fc2578d8..b6ad19fe 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -868,7 +868,12 @@ public class FunctionType extends PrototypeObjectType {\n     // Warning about typeOfThis if it doesn't resolve to an ObjectType\n     // is handled further upstream.\n     // TODO(nicksantos): Handle this correctly if we have a UnionType.\n-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);\n+    JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);\n+    if (!(resolvedTypeOfThis instanceof ObjectType)) {\n+      t.report(JSError.make(n, TypeCheck.WRONG_PARAMETER_TYPE,\n+              \"typeOfThis must resolve to an object type\"));\n+    }\n+    typeOfThis = (ObjectType) resolvedTypeOfThis;\n \n     boolean changed = false;\n     ImmutableList.Builder<ObjectType> resolvedInterfaces =",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}