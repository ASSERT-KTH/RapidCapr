{
    "patch": "    if (token.getType() == JsDocToken.Type.NAME) {\n      return parseTypeName(token);\n    }\n    if (token.getType() == JsDocToken.Type.LC) {\n      return parseFunctionType(token);\n    }\n    throw new IllegalArgumentException(\"Unexpected token type: \" + token.getType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..e55554e7 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,13 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+    if (token.getType() == JsDocToken.Type.NAME) {\n+      return parseTypeName(token);\n+    }\n+    if (token.getType() == JsDocToken.Type.LC) {\n+      return parseFunctionType(token);\n+    }\n+    throw new IllegalArgumentException(\"Unexpected token type: \" + token.getType());\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}