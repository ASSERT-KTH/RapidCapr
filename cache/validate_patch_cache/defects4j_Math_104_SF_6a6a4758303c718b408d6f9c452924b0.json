{
    "patch": "public static double regularizedGammaLowerIncomplete(double a, double x) {\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException(\"Invalid arguments for the regularized gamma function.\");\n    }\n\n    final double epsilon = 10E-15;\n    double term = 1 / a;\n    double sum = term;\n\n    while (Math.abs(term) > epsilon * Math.abs(sum)) {\n        term *= x / (a + sum + 1);\n        sum += term;\n    }\n\n    double result = Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n    return result;\n}\n\npublic static double logGamma(double x) {\n    double cof[] = {\n        76.18009172947146, -86.50532032941677,\n        24.01409824083091, -1.231739572450155,\n        0.001208650973866179,-0.000005395239384953\n    };\n    double y = x;\n    double tmp = x + 5.5;\n    tmp -= (x + 0.5) * Math.log(tmp);\n    double ser = 1.000000000190015;\n    for (int i = 0; i < 6; ++i) {\n        ser += cof[i] / ++y;\n    }\n    return -tmp + Math.log(2.5066282746310005 * ser / x);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..8e0ffcb34 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,39 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaLowerIncomplete(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException(\"Invalid arguments for the regularized gamma function.\");\n+    }\n+\n+    final double epsilon = 10E-15;\n+    double term = 1 / a;\n+    double sum = term;\n+\n+    while (Math.abs(term) > epsilon * Math.abs(sum)) {\n+        term *= x / (a + sum + 1);\n+        sum += term;\n+    }\n+\n+    double result = Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+    return result;\n+}\n+\n+public static double logGamma(double x) {\n+    double cof[] = {\n+        76.18009172947146, -86.50532032941677,\n+        24.01409824083091, -1.231739572450155,\n+        0.001208650973866179,-0.000005395239384953\n+    };\n+    double y = x;\n+    double tmp = x + 5.5;\n+    tmp -= (x + 0.5) * Math.log(tmp);\n+    double ser = 1.000000000190015;\n+    for (int i = 0; i < 6; ++i) {\n+        ser += cof[i] / ++y;\n+    }\n+    return -tmp + Math.log(2.5066282746310005 * ser / x);\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}