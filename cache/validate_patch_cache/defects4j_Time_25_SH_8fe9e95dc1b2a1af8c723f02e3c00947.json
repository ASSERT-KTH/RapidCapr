{
    "patch": "                    // we need to ensure that time is always after the DST gap\n                    // this happens naturally for positive offsets, but not for negative\n                    long nextAdjustedLocal = nextTransition(nextAdjusted + 1);\n                    if (nextAdjustedLocal == nextLocal) {\n                        nextAdjusted = nextAdjustedLocal;\n                    }\n                }\n                int diff = getOffset(nextAdjusted) - offsetAdjusted;\n                return (diff >= 0 ? offsetAdjusted : offsetLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..89cb1250 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    // we need to ensure that time is always after the DST gap\n+                    // this happens naturally for positive offsets, but not for negative\n+                    long nextAdjustedLocal = nextTransition(nextAdjusted + 1);\n+                    if (nextAdjustedLocal == nextLocal) {\n+                        nextAdjusted = nextAdjustedLocal;\n+                    }\n+                }\n+                int diff = getOffset(nextAdjusted) - offsetAdjusted;\n+                return (diff >= 0 ? offsetAdjusted : offsetLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}