{
    "patch": "      Node grandparent = parent.getParent();\n      if (grandparent != null && grandparent.getType() == Token.ASSIGN) {\n        Node gLhs = grandparent.getFirstChild();\n        if (gLhs != null && gLhs.getType() == Token.GETPROP) {\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..1a3bd22c 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,12 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = parent.getParent();\n+      if (grandparent != null && grandparent.getType() == Token.ASSIGN) {\n+        Node gLhs = grandparent.getFirstChild();\n+        if (gLhs != null && gLhs.getType() == Token.GETPROP) {\n+          return false;\n+        }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}