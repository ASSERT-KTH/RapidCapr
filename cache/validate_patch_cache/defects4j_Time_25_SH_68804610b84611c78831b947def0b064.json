{
    "patch": "            if (offsetLocal > offsetAdjusted) {\n                long prevAdj = previousTransition(instantAdjusted);\n                if ((prevAdj - offsetLocal) < instantLocal) {\n                    return offsetLocal;\n                }\n            } else {\n                long nextAdj = nextTransition(instantAdjusted);\n                if ((nextAdj - offsetLocal) <= instantLocal) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..759a90f9 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal > offsetAdjusted) {\n+                long prevAdj = previousTransition(instantAdjusted);\n+                if ((prevAdj - offsetLocal) < instantLocal) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long nextAdj = nextTransition(instantAdjusted);\n+                if ((nextAdj - offsetLocal) <= instantLocal) {\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}