{
    "patch": "    return NodeUtil.isFunctionExpression(n) && \n           (n.getParent().getType() == Token.EXPR_RESULT ||\n            n.getParent().getType() == Token.ASSIGN ||\n            n.getParent().getType() == Token.VAR);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..8ee54475 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,10 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    return NodeUtil.isFunctionExpression(n) && \n+           (n.getParent().getType() == Token.EXPR_RESULT ||\n+            n.getParent().getType() == Token.ASSIGN ||\n+            n.getParent().getType() == Token.VAR);\n   }\n \n   /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}