{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument != null) {\n    registerTypeVariablesOn(actualTypeArgument);\n} else {\n    Type superclass = ((Class<?>) typeVariable.getGenericDeclaration()).getSuperclass();\n    actualTypeArgument = getActualTypeArgumentFor((TypeVariable<?>) superclass.getTypeParameters()[0]);\n    if (actualTypeArgument != null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    } else {\n        throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..5b521774a 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,23 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument != null) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+} else {\n+    Type superclass = ((Class<?>) typeVariable.getGenericDeclaration()).getSuperclass();\n+    actualTypeArgument = getActualTypeArgumentFor((TypeVariable<?>) superclass.getTypeParameters()[0]);\n+    if (actualTypeArgument != null) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    } else {\n+        throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}