{
    "patch": "        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n\n        ShapeList other = (ShapeList) obj;\n\n        if (this.size() != other.size()) {\n            return false;\n        }\n\n        for (int i = 0; i < this.size(); i++) {\n            Shape thisShape = this.get(i);\n            Shape otherShape = other.get(i);\n\n            if (thisShape == null) {\n                if (otherShape != null) {\n                    return false;\n                }\n            } else if (!thisShape.equals(otherShape)) {\n                return false;\n            }\n        }\n\n        return true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..e0228b5 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,30 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+        if (!(obj instanceof ShapeList)) {\n+            return false;\n+        }\n+\n+        ShapeList other = (ShapeList) obj;\n+\n+        if (this.size() != other.size()) {\n+            return false;\n+        }\n+\n+        for (int i = 0; i < this.size(); i++) {\n+            Shape thisShape = this.get(i);\n+            Shape otherShape = other.get(i);\n+\n+            if (thisShape == null) {\n+                if (otherShape != null) {\n+                    return false;\n+                }\n+            } else if (!thisShape.equals(otherShape)) {\n+                return false;\n+            }\n+        }\n+\n+        return true;\n \n     }\n \n@@ -169,4 +192,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}