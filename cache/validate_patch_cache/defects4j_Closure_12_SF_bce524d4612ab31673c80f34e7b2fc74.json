{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode == null) {\n        return false;\n    }\n    List<Node> exceptions = cfgNode.getExceptions();\n    if (exceptions == null) {\n        return false;\n    }\n    return !exceptions.isEmpty();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..db2404a2 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,16 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode == null) {\n+        return false;\n+    }\n+    List<Node> exceptions = cfgNode.getExceptions();\n+    if (exceptions == null) {\n+        return false;\n+    }\n+    return !exceptions.isEmpty();\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}