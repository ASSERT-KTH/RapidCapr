{
    "patch": "Partial newPartial = new Partial(iChronology);\nfor (int j = 0; j < newTypes.length; j++) {\n    newPartial = newPartial.with(newTypes[j], newValues[j]);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..e2a90dd9 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,10 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+Partial newPartial = new Partial(iChronology);\n+for (int j = 0; j < newTypes.length; j++) {\n+    newPartial = newPartial.with(newTypes[j], newValues[j]);\n+}\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "java.lang.StackOverflowError",
    "test_result": "FAIL"
}