{
    "patch": "    public static String decode_shift(String string) {\n        if (string == null || string.isEmpty()) {\n            return string;\n        }\n        StringBuilder sb = new StringBuilder();\n        int alphabetSize = 26;\n        for (char c : string.toCharArray()) {\n            if (Character.isLetter(c)) {\n                int shifted = (((int) c - 5) % alphabetSize) + (c >= 'a' ? 'a' : 'A');\n                sb.append((char) shifted);\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_SHIFT.java b/src/main/java/humaneval/buggy/DECODE_SHIFT.java\nindex c8aba74..318d0e3 100644\n--- a/src/main/java/humaneval/buggy/DECODE_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/DECODE_SHIFT.java\n@@ -14,10 +14,18 @@ public class DECODE_SHIFT {\n     }\n \n     public static String decode_shift(String string) {\n+        if (string == null || string.isEmpty()) {\n+            return string;\n+        }\n         StringBuilder sb = new StringBuilder();\n+        int alphabetSize = 26;\n         for (char c : string.toCharArray()) {\n-            c = (char)((((int) c - 5 - (int)('a')) % 26) + (int)('a'));\n-            sb.append(c);\n+            if (Character.isLetter(c)) {\n+                int shifted = (((int) c - 5) % alphabetSize) + (c >= 'a' ? 'a' : 'A');\n+                sb.append((char) shifted);\n+            } else {\n+                sb.append(c);\n+            }\n         }\n         return sb.toString();\n     }",
    "result_reason": "   TEST_DECODE_SHIFT.test_0:10 expected:<[tlwcdao]> but was:<[asdjkhv]>",
    "test_result": "FAIL"
}