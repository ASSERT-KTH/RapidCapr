{
    "patch": "            Optional<Object> filteredCandidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            filteredCandidate.ifPresent(candidate -> {\n                injector.injectInto(candidate, fieldInstance);\n                mocks.remove(candidate);\n            });",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..ba1924d50 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,14 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            Optional<Object> filteredCandidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            filteredCandidate.ifPresent(candidate -> {\n+                injector.injectInto(candidate, fieldInstance);\n+                mocks.remove(candidate);\n+            });\n         }\n     }\n ",
    "result_reason": "error: lambda expressions are not supported in -source 1.5",
    "test_result": "ERROR"
}