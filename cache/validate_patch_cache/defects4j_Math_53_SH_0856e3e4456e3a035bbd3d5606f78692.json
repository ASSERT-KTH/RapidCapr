{
    "patch": "    if(Double.isNaN(this.getReal()) || Double.isNaN(this.getImaginary())){\n        return createComplex(Double.NaN, Double.NaN);\n    }\n    if (Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n        return createComplex(Double.NaN, Double.NaN);\n    }\n    ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..d72bf5705 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,6 +150,13 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+    if(Double.isNaN(this.getReal()) || Double.isNaN(this.getImaginary())){\n+        return createComplex(Double.NaN, Double.NaN);\n+    }\n+    if (Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n+        return createComplex(Double.NaN, Double.NaN);\n+    }\n+    \n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}