{
    "patch": "                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n                int newOffsetAdjusted = getOffset(nextAdjusted);\n                if (offsetLocal - newOffsetAdjusted < 0) {\n                    return offsetLocal;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..6839bf1c 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,12 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+                int newOffsetAdjusted = getOffset(nextAdjusted);\n+                if (offsetLocal - newOffsetAdjusted < 0) {\n+                    return offsetLocal;\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-04-01T02:00:00.000-04:00 expected:<2007-04-01T0[1]:00:00.000-04:00> but was:<2007-04-01T0[2]:00:00.000-04:00>",
    "test_result": "FAIL"
}