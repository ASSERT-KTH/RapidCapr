{
    "patch": "        if (m == null && arg == null) {\n            return true;\n        } else if (m == null || arg == null) {\n            return false;\n        }\n        try {\n            return StringDescription.toString(m).equals(arg.toString());\n        } catch (NullPointerException e) {\n            return m.matches(\"\\\\Q\" + arg.toString() + \"\\\\E\");\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..b57ac5cd0 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,17 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n+\n     private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n+        if (m == null && arg == null) {\n+            return true;\n+        } else if (m == null || arg == null) {\n+            return false;\n+        }\n+        try {\n+            return StringDescription.toString(m).equals(arg.toString());\n+        } catch (NullPointerException e) {\n+            return m.matches(\"\\\\Q\" + arg.toString() + \"\\\\E\");\n+        }\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}