{
    "patch": "        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            DurationField field = savedField.iField.getDurationField();\n            long value = savedField.iValue;\n\n            // This block has been added to fix Buggy Hunk #3\n            if (i == count - 1 && savedField.iField.getType() == DateTimeFieldType.weekyear()) {\n                value = savedField.iChrono.weekyear().set(savedField.iDefault, savedField.iValue);\n                field = savedField.iChrono.weekyears();\n            }\n\n            // This block has been *modified* to fix Buggy Hunk #2\n            if (value != 0 || (i == count - 1 && resetFields)) {\n                millis = field.add(millis, value);\n                if (millis == Long.MIN_VALUE || millis == Long.MAX_VALUE) {\n                    throw new IllegalArgumentException(\"Illegal instant due to calculation overflow\");\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..9390c9a5 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        for (int i = 0; i < count; i++) {\n+            SavedField savedField = savedFields[i];\n+            DurationField field = savedField.iField.getDurationField();\n+            long value = savedField.iValue;\n+\n+            // This block has been added to fix Buggy Hunk #3\n+            if (i == count - 1 && savedField.iField.getType() == DateTimeFieldType.weekyear()) {\n+                value = savedField.iChrono.weekyear().set(savedField.iDefault, savedField.iValue);\n+                field = savedField.iChrono.weekyears();\n+            }\n+\n+            // This block has been *modified* to fix Buggy Hunk #2\n+            if (value != 0 || (i == count - 1 && resetFields)) {\n+                millis = field.add(millis, value);\n+                if (millis == Long.MIN_VALUE || millis == Long.MAX_VALUE) {\n+                    throw new IllegalArgumentException(\"Illegal instant due to calculation overflow\");\n+                }\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}