{
    "patch": "        long newMillis = 0L;\n        try {\n            for (int i = 0; i < count; i++) {\n                newMillis = savedFields[i].set(newMillis, resetFields);\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }\n        if (resetFields || newMillis != iMillis) {\n            // Only change instant if any (new) fields have actually been setted.\n            // This prevents simultaneous parsing of month/day fields from\n            // altering the year value.\n            iMillis = newMillis;\n            iChrono = selectChronology(chrono);\n        }           ",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..57aabea2 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        long newMillis = 0L;\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                newMillis = savedFields[i].set(newMillis, resetFields);\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n+        if (resetFields || newMillis != iMillis) {\n+            // Only change instant if any (new) fields have actually been setted.\n+            // This prevents simultaneous parsing of month/day fields from\n+            // altering the year value.\n+            iMillis = newMillis;\n+            iChrono = selectChronology(chrono);\n+        }           \n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot assign a value to final variable iMillis",
    "test_result": "ERROR"
}