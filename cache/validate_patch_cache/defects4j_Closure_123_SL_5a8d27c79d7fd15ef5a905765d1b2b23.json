{
    "patch": "public static String printInOperatorInForLoop(boolean c, Object[] d) {\n   Context lhsContext = Context.OTHER;\n   Context rhsContext = Context.OTHER;\n\n   boolean[] b = new boolean[d.length];\n   String r = \"for(a=\";\n   for (int i = 0; i < d.length; i++) {\n       try {\n           lhsContext.getSafe(new InOperator(lhsContext, d[i], Boolean.TRUE));\n           b[i] = true;\n       } catch (Error e) {\n           b[i] = false;\n       }\n   }\n   boolean t = false, f = false;\n   for (boolean x : b) {\n       if (x) t = true;\n       else f = true;\n   }\n   if (t && f) r += c ? \"0:[\"; else if (f) r+= \"![\"; else r += \"[\";\n   String a = \"\";\n   for (int i=0; i<b.length; i++) {\n       if (b[i] != f) a+=i+\",\";\n   }\n   if (!a.isEmpty()) a = a.substring(0, a.length()-1);\n   r += a + \"]\";\n   if (t && f) r += \"])\"; else if (f) r += \"].some(function(i){return !!i})\"; else r += \".length\";\n   r += \";\";\n   r += \";)foobar()\";\n   return r;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}