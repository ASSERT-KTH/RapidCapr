{
    "patch": "    public static boolean right_angle_triangle(int a, int b, int c) {\n        if (a <= 0 || b <= 0 || c <= 0)\n            return false;\n        // Sort values in increasing order \n        int[] sorted = {a, b, c};\n        Arrays.sort(sorted);\n        int smallest = sorted[0];\n        int mid = sorted[1];\n        int largest = sorted[2];\n        return largest < (smallest + mid) && (smallest*smallest + mid*mid == largest*largest);\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..fe2c4da 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,14 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+        if (a <= 0 || b <= 0 || c <= 0)\n+            return false;\n+        // Sort values in increasing order \n+        int[] sorted = {a, b, c};\n+        Arrays.sort(sorted);\n+        int smallest = sorted[0];\n+        int mid = sorted[1];\n+        int largest = sorted[2];\n+        return largest < (smallest + mid) && (smallest*smallest + mid*mid == largest*largest);\n     }\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[17,9] cannot find symbol",
    "test_result": "ERROR"
}