{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.MathUtils;\n\npublic class GammaFunction {\n    public static double regularizedGamma(double a, double x) {\n        if (a <= 0.0 || x < 0.0) {\n            throw new IllegalArgumentException();\n        }\n        double gammaValue = Gamma.regularizedGammaP(a, x);\n        return MathUtils.round(gammaValue, 15);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..e064ea32e 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,18 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.MathUtils;\n+\n+public class GammaFunction {\n+    public static double regularizedGamma(double a, double x) {\n+        if (a <= 0.0 || x < 0.0) {\n+            throw new IllegalArgumentException();\n+        }\n+        double gammaValue = Gamma.regularizedGammaP(a, x);\n+        return MathUtils.round(gammaValue, 15);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}