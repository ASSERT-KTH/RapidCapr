{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      Node grandParent = parent.getParent();\n      if (grandParent.getType() == Token.CALL) {\n        Node method = grandParent.getFirstChild();\n        if (method.getType() == Token.GETPROP &&\n            \"prototype\".equals(method.getLastChild().getString())) {\n          return false;\n        }\n      } else if (grandParent.getType() == Token.ASSIGN) {\n        Node rhs = grandParent.getLastChild();\n        if (rhs != n &&\n            rhs.getType() == Token.FUNCTION &&\n            rhs.getFirstChild() != null &&\n            rhs.getFirstChild().getType() == Token.STRING &&\n            \"@constructor\".equals(rhs.getFirstChild().getString())) {\n          return false;\n        }\n        Node lhs = grandParent.getFirstChild();\n        if (rhs == n &&\n            lhs.getType() == Token.GETPROP &&\n            \"prototype\".equals(lhs.getLastChild().getString())) {\n          return false;\n        }\n      } else if (grandParent.getType() == Token.OBJECTLIT) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..51f42949 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,32 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      Node grandParent = parent.getParent();\n+      if (grandParent.getType() == Token.CALL) {\n+        Node method = grandParent.getFirstChild();\n+        if (method.getType() == Token.GETPROP &&\n+            \"prototype\".equals(method.getLastChild().getString())) {\n+          return false;\n+        }\n+      } else if (grandParent.getType() == Token.ASSIGN) {\n+        Node rhs = grandParent.getLastChild();\n+        if (rhs != n &&\n+            rhs.getType() == Token.FUNCTION &&\n+            rhs.getFirstChild() != null &&\n+            rhs.getFirstChild().getType() == Token.STRING &&\n+            \"@constructor\".equals(rhs.getFirstChild().getString())) {\n+          return false;\n+        }\n+        Node lhs = grandParent.getFirstChild();\n+        if (rhs == n &&\n+            lhs.getType() == Token.GETPROP &&\n+            \"prototype\".equals(lhs.getLastChild().getString())) {\n+          return false;\n+        }\n+      } else if (grandParent.getType() == Token.OBJECTLIT) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: There should be one error. expected:<1> but was:<0>",
    "test_result": "FAIL"
}