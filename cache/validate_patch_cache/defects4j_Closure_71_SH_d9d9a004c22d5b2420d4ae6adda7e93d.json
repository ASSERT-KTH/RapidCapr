{
    "patch": "      boolean isOverride = t.inGlobalScope() &&\n          parent.getType() != Token.GETPROP &&\n          parent.getType() != Token.OBJECTLIT &&\n          parent.getType() != Token.CLASS_MEMBERS &&\n          parent.getType() != Token.EXTENDS &&\n          parent.getType() != Token.IMPLEMENTS;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..6ee10fbc 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -414,6 +414,11 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n       boolean isOverride = t.inGlobalScope() &&\n+          parent.getType() != Token.GETPROP &&\n+          parent.getType() != Token.OBJECTLIT &&\n+          parent.getType() != Token.CLASS_MEMBERS &&\n+          parent.getType() != Token.EXTENDS &&\n+          parent.getType() != Token.IMPLEMENTS;\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}