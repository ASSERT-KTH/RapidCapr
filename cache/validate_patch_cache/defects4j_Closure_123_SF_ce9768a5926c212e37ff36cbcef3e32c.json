{
    "patch": "public static String fixCode(String code) {\n    if (code.contains(\"for(\") && code.contains(\"in\")) {\n        int index = code.indexOf(\"for(\");\n        int end = code.indexOf(\")\", index);\n        String loop = code.substring(index, end+1);\n        String[] splitLoop = loop.split(\";\");\n        String init = splitLoop[0];\n        String condition = splitLoop[1];\n        String increment = splitLoop[2];\n        \n        if (condition.contains(\"in\")) {\n            String[] parts = condition.split(\" \");\n            String variable = parts[0];\n            String iterable = parts[parts.length - 1];\n\n            String newCondition = variable + \".length\" + condition.substring(condition.indexOf(\")\"));\n            String newInit = \"Object[] \" + variable + \" = \" + iterable + \";\";\n            code = code.replace(init, newInit).replace(condition, newCondition);\n        }\n    }\n    \n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..3b8f2f77 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,29 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    if (code.contains(\"for(\") && code.contains(\"in\")) {\n+        int index = code.indexOf(\"for(\");\n+        int end = code.indexOf(\")\", index);\n+        String loop = code.substring(index, end+1);\n+        String[] splitLoop = loop.split(\";\");\n+        String init = splitLoop[0];\n+        String condition = splitLoop[1];\n+        String increment = splitLoop[2];\n+        \n+        if (condition.contains(\"in\")) {\n+            String[] parts = condition.split(\" \");\n+            String variable = parts[0];\n+            String iterable = parts[parts.length - 1];\n+\n+            String newCondition = variable + \".length\" + condition.substring(condition.indexOf(\")\"));\n+            String newInit = \"Object[] \" + variable + \" = \" + iterable + \";\";\n+            code = code.replace(init, newInit).replace(condition, newCondition);\n+        }\n+    }\n+    \n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}