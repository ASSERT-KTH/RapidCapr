{
    "patch": "while (block != null) {\n  if (block.isLoop || block.isFunction) {\n    if (!block.isFunction || ref.getBasicBlock() != block) {\n      return false;\n    }\n    break;\n  }\n  block = block.getParent();\n}\nreturn true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..541b24e1 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+while (block != null) {\n+  if (block.isLoop || block.isFunction) {\n+    if (!block.isFunction || ref.getBasicBlock() != block) {\n+      return false;\n+    }\n+    break;\n+  }\n+  block = block.getParent();\n+}\n+return true;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}