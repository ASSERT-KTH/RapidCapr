{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    // adjust instantAdjusted using the new next time zone offset\n                    // and recalc the offset. Stop if there is a discontinuity.\n                    final int offsetNext = getOffset(nextAdjusted);\n                    if (offsetNext != offsetAdjusted) {\n                      return offsetNext;\n                    }\n                    instantAdjusted = nextAdjusted;\n                    offsetAdjusted = offsetNext;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..2008e4be 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,23 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                // if we just return offsetAdjusted then the time is pushed\n+                // back before the transition, whereas it should be\n+                // on or after the transition\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    // adjust instantAdjusted using the new next time zone offset\n+                    // and recalc the offset. Stop if there is a discontinuity.\n+                    final int offsetNext = getOffset(nextAdjusted);\n+                    if (offsetNext != offsetAdjusted) {\n+                      return offsetNext;\n+                    }\n+                    instantAdjusted = nextAdjusted;\n+                    offsetAdjusted = offsetNext;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable instantAdjusted",
    "test_result": "ERROR"
}