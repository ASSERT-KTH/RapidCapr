{
    "patch": "public static String unescapeString(String s) {\n    StringBuffer sb = new StringBuffer();\n    for(int i=0;i<s.length();) {\n        char ch = s.charAt(i);\n        if(ch == '\\\\') {\n            i++;\n            ch = s.charAt(i);\n            if(ch=='n')\n                sb.append('\\n');\n            else if(ch=='r')\n                sb.append('\\r');\n            else if(ch=='t')\n                sb.append('\\t');\n            else if(ch=='f')\n                sb.append('\\f');\n            else if(ch=='\\\\')\n                sb.append('\\\\');\n            else\n                sb.append(ch); // Invalid escape, simply output it. \n        } else\n            sb.append(ch);\n        i++;\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..4e33199b 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,31 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescapeString(String s) {\n+    StringBuffer sb = new StringBuffer();\n+    for(int i=0;i<s.length();) {\n+        char ch = s.charAt(i);\n+        if(ch == '\\\\') {\n+            i++;\n+            ch = s.charAt(i);\n+            if(ch=='n')\n+                sb.append('\\n');\n+            else if(ch=='r')\n+                sb.append('\\r');\n+            else if(ch=='t')\n+                sb.append('\\t');\n+            else if(ch=='f')\n+                sb.append('\\f');\n+            else if(ch=='\\\\')\n+                sb.append('\\\\');\n+            else\n+                sb.append(ch); // Invalid escape, simply output it. \n+        } else\n+            sb.append(ch);\n+        i++;\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}