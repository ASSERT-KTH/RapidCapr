{
    "patch": "    protected JSType caseTopType(JSType topType) {\n      if (topType.isUnknownType()) {\n        return getCommonTypes().getArrayType(JSType.UNDEFINED);\n      } else if (topType.isFunctionType()) {\n        return getNativeObjectType();\n      } else {\n        return getCommonTypes().getArrayType(topType);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..1c1bf9bf 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,15 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+    protected JSType caseTopType(JSType topType) {\n+      if (topType.isUnknownType()) {\n+        return getCommonTypes().getArrayType(JSType.UNDEFINED);\n+      } else if (topType.isFunctionType()) {\n+        return getNativeObjectType();\n+      } else {\n+        return getCommonTypes().getArrayType(topType);\n+      }\n+    }\n         }\n \n         @Override",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}