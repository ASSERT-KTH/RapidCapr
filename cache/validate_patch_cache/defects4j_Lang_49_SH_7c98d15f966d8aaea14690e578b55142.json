{
    "patch": "import org.apache.commons.lang3.math.NumberUtils;\n\n...\n\npublic Fraction reduce() {\n    int num = numerator;\n    int den = denominator;\n    if (num == 0) {\n        den = 1;\n    } else {\n        int g = NumberUtils.gcd(Math.abs(num), den);\n        num /= g;\n        den /= g;\n    }\n    if (numerator < 0) {\n        if (den < 0) {\n            num = Math.abs(num);\n            den = Math.abs(den);\n        } else {\n            num = -1 * num;\n            den = Math.abs(den);\n        }\n    } else {\n        if (den < 0) {\n            num = -1 * num;\n            den = Math.abs(den);\n        }\n    }\n    return getFraction(num, den);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..bd9e4657 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,36 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+import org.apache.commons.lang3.math.NumberUtils;\n+\n+...\n+\n+public Fraction reduce() {\n+    int num = numerator;\n+    int den = denominator;\n+    if (num == 0) {\n+        den = 1;\n+    } else {\n+        int g = NumberUtils.gcd(Math.abs(num), den);\n+        num /= g;\n+        den /= g;\n+    }\n+    if (numerator < 0) {\n+        if (den < 0) {\n+            num = Math.abs(num);\n+            den = Math.abs(den);\n+        } else {\n+            num = -1 * num;\n+            den = Math.abs(den);\n+        }\n+    } else {\n+        if (den < 0) {\n+            num = -1 * num;\n+            den = Math.abs(den);\n+        }\n+    }\n+    return getFraction(num, den);\n+}\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}