{
    "patch": "private void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n\n    boolean updateMinStartIndex = (this.minStartIndex == -1) || (start < getDataItem(this.minStartIndex).getPeriod().getStart().getTime());\n    boolean updateMaxStartIndex = (this.maxStartIndex == -1) || (start > getDataItem(this.maxStartIndex).getPeriod().getStart().getTime());\n    boolean updateMinMiddleIndex = (this.minMiddleIndex == -1) || (middle < findMiddle(getDataItem(this.minMiddleIndex).getPeriod()));\n    boolean updateMaxMiddleIndex = (this.maxMiddleIndex == -1) || (middle > findMiddle(getDataItem(this.maxMiddleIndex).getPeriod()));\n    boolean updateMinEndIndex = (this.minEndIndex == -1) || (end < getDataItem(this.minEndIndex).getPeriod().getEnd().getTime());\n    boolean updateMaxEndIndex = (this.maxEndIndex == -1) || (end > getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime());\n\n    if (updateMinStartIndex) {\n        this.minStartIndex = index;\n    }\n    if (updateMaxStartIndex) {\n        this.maxStartIndex = index;\n    }\n    if (updateMinMiddleIndex) {\n        this.minMiddleIndex = index;\n    }\n    if (updateMaxMiddleIndex) {\n        this.maxMiddleIndex = index;\n    }\n    if (updateMinEndIndex) {\n        this.minEndIndex = index;\n    }\n    if (updateMaxEndIndex) {\n        this.maxEndIndex = index;\n    }\n}\n\nprivate long findMiddle(TimePeriod period) {\n    long s = period.getStart().getTime();\n    long e = period.getEnd().getTime();\n    return s + ((e - s) / 2);\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimePeriodValues.java b/source/org/jfree/data/time/TimePeriodValues.java\nindex 0a3e7a1..0bb14f8 100644\n--- a/source/org/jfree/data/time/TimePeriodValues.java\n+++ b/source/org/jfree/data/time/TimePeriodValues.java\n@@ -254,85 +254,43 @@ public class TimePeriodValues extends Series implements Serializable {\n      * @param period  the time period.\n      * @param index  the index of the time period.\n      */\n-    private void updateBounds(TimePeriod period, int index) {\n-        \n-        long start = period.getStart().getTime();\n-        long end = period.getEnd().getTime();\n-        long middle = start + ((end - start) / 2);\n-\n-        if (this.minStartIndex >= 0) {\n-            long minStart = getDataItem(this.minStartIndex).getPeriod()\n-                .getStart().getTime();\n-            if (start < minStart) {\n-                this.minStartIndex = index;           \n-            }\n-        }\n-        else {\n-            this.minStartIndex = index;\n-        }\n-        \n-        if (this.maxStartIndex >= 0) {\n-            long maxStart = getDataItem(this.maxStartIndex).getPeriod()\n-                .getStart().getTime();\n-            if (start > maxStart) {\n-                this.maxStartIndex = index;           \n-            }\n-        }\n-        else {\n-            this.maxStartIndex = index;\n-        }\n-        \n-        if (this.minMiddleIndex >= 0) {\n-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()\n-                .getTime();\n-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()\n-                .getTime();\n-            long minMiddle = s + (e - s) / 2;\n-            if (middle < minMiddle) {\n-                this.minMiddleIndex = index;           \n-            }\n-        }\n-        else {\n-            this.minMiddleIndex = index;\n-        }\n-        \n-        if (this.maxMiddleIndex >= 0) {\n-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()\n-                .getTime();\n-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()\n-                .getTime();\n-            long maxMiddle = s + (e - s) / 2;\n-            if (middle > maxMiddle) {\n-                this.maxMiddleIndex = index;           \n-            }\n-        }\n-        else {\n-            this.maxMiddleIndex = index;\n-        }\n-        \n-        if (this.minEndIndex >= 0) {\n-            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()\n-                .getTime();\n-            if (end < minEnd) {\n-                this.minEndIndex = index;           \n-            }\n-        }\n-        else {\n-            this.minEndIndex = index;\n-        }\n-       \n-        if (this.maxEndIndex >= 0) {\n-            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()\n-                .getTime();\n-            if (end > maxEnd) {\n-                this.maxEndIndex = index;           \n-            }\n-        }\n-        else {\n-            this.maxEndIndex = index;\n-        }\n-        \n-    }\n+private void updateBounds(TimePeriod period, int index) {\n+    long start = period.getStart().getTime();\n+    long end = period.getEnd().getTime();\n+    long middle = start + ((end - start) / 2);\n+\n+    boolean updateMinStartIndex = (this.minStartIndex == -1) || (start < getDataItem(this.minStartIndex).getPeriod().getStart().getTime());\n+    boolean updateMaxStartIndex = (this.maxStartIndex == -1) || (start > getDataItem(this.maxStartIndex).getPeriod().getStart().getTime());\n+    boolean updateMinMiddleIndex = (this.minMiddleIndex == -1) || (middle < findMiddle(getDataItem(this.minMiddleIndex).getPeriod()));\n+    boolean updateMaxMiddleIndex = (this.maxMiddleIndex == -1) || (middle > findMiddle(getDataItem(this.maxMiddleIndex).getPeriod()));\n+    boolean updateMinEndIndex = (this.minEndIndex == -1) || (end < getDataItem(this.minEndIndex).getPeriod().getEnd().getTime());\n+    boolean updateMaxEndIndex = (this.maxEndIndex == -1) || (end > getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime());\n+\n+    if (updateMinStartIndex) {\n+        this.minStartIndex = index;\n+    }\n+    if (updateMaxStartIndex) {\n+        this.maxStartIndex = index;\n+    }\n+    if (updateMinMiddleIndex) {\n+        this.minMiddleIndex = index;\n+    }\n+    if (updateMaxMiddleIndex) {\n+        this.maxMiddleIndex = index;\n+    }\n+    if (updateMinEndIndex) {\n+        this.minEndIndex = index;\n+    }\n+    if (updateMaxEndIndex) {\n+        this.maxEndIndex = index;\n+    }\n+}\n+\n+private long findMiddle(TimePeriod period) {\n+    long s = period.getStart().getTime();\n+    long e = period.getEnd().getTime();\n+    return s + ((e - s) / 2);\n+}\n     \n     /**\n      * Recalculates the bounds for the collection of items.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}