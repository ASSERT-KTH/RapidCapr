{
    "patch": "        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        if (gcd == 1) {\n            return this;\n        }\n        int reducedNumerator = numerator / gcd;\n        int reducedDenominator = denominator / gcd;\n        if (this instanceof MixedFraction) {\n            MixedFraction mixedFraction = (MixedFraction) this;\n            int wholeNumber = mixedFraction.getWholeNumber();\n            reducedNumerator += Math.abs(wholeNumber) * reducedDenominator;\n            wholeNumber = wholeNumber < 0 ? -1 * reducedNumerator : reducedNumerator;\n            return MixedFraction.getFraction(wholeNumber, reducedNumerator % reducedDenominator, reducedDenominator);\n        }\n        return Fraction.getFraction(reducedNumerator, reducedDenominator);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..311c50ff 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,20 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n+        if (gcd == 1) {\n+            return this;\n+        }\n+        int reducedNumerator = numerator / gcd;\n+        int reducedDenominator = denominator / gcd;\n+        if (this instanceof MixedFraction) {\n+            MixedFraction mixedFraction = (MixedFraction) this;\n+            int wholeNumber = mixedFraction.getWholeNumber();\n+            reducedNumerator += Math.abs(wholeNumber) * reducedDenominator;\n+            wholeNumber = wholeNumber < 0 ? -1 * reducedNumerator : reducedNumerator;\n+            return MixedFraction.getFraction(wholeNumber, reducedNumerator % reducedDenominator, reducedDenominator);\n+        }\n+        return Fraction.getFraction(reducedNumerator, reducedDenominator);\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}