{
    "patch": "          if (NodeUtil.isAssignmentOp(n) && n.getFirstChild().isName()) {\n            recordDepScope(n.getFirstChild(), ns);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..3c57ce90 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,8 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+          if (NodeUtil.isAssignmentOp(n) && n.getFirstChild().isName()) {\n+            recordDepScope(n.getFirstChild(), ns);\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}