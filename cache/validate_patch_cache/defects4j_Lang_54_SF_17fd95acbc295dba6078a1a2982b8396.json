{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char sep = '_';\n    int firstSep = str.indexOf(sep);\n    int secondSep = str.indexOf(sep, firstSep + 1);\n    if (firstSep == -1) {\n        return new Locale(str);\n    } else {\n        if (secondSep == -1) {\n            if (len != 2 && len != 5) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2));\n        } else {\n            if (len < 5 || len > 10) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String language = str.substring(0, 2);\n            String country = str.substring(firstSep + 1, secondSep);\n            int thirdSep = str.indexOf(sep, secondSep + 1);\n            if (thirdSep == -1) {\n                return new Locale(language, country);\n            } else {\n                String variant = str.substring(thirdSep + 1);\n                return new Locale(language, country, variant);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..07c86281 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,41 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char sep = '_';\n+    int firstSep = str.indexOf(sep);\n+    int secondSep = str.indexOf(sep, firstSep + 1);\n+    if (firstSep == -1) {\n+        return new Locale(str);\n+    } else {\n+        if (secondSep == -1) {\n+            if (len != 2 && len != 5) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+            return new Locale(str.substring(0, 2));\n+        } else {\n+            if (len < 5 || len > 10) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            String language = str.substring(0, 2);\n+            String country = str.substring(firstSep + 1, secondSep);\n+            int thirdSep = str.indexOf(sep, secondSep + 1);\n+            if (thirdSep == -1) {\n+                return new Locale(language, country);\n             } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                String variant = str.substring(thirdSep + 1);\n+                return new Locale(language, country, variant);\n             }\n         }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<[POSIX]> but was:<[]>",
    "test_result": "FAIL"
}