{
    "patch": "private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n    if (notPrinter && notParser) {\n        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n    }\n    PeriodPrinter printer = null;\n    PeriodParser parser = null;\n    Separator lastSeparator = null;\n    for (Object elem : elementPairs) {\n        if (elem instanceof Separator) {\n            lastSeparator = (Separator) elem;\n        } else {\n            Object[] comp = createComposite(Collections.singletonList(elem));\n            if (notPrinter) {\n                parser = (PeriodParser) comp[1];\n                if (printer != null) {\n                    break;\n                }\n            } else if (notParser) {\n                printer = (PeriodPrinter) comp[0];\n                if (parser != null) {\n                    break;\n                }\n            } else {\n                printer = (PeriodPrinter) comp[0];\n                parser = (PeriodParser) comp[1];\n            }\n        }\n    }\n    if (!notPrinter && !notParser && (printer == null || parser == null)) {\n        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n    }\n    if (lastSeparator == null) {\n        return new PeriodFormatter(printer, parser);\n    } else {\n        lastSeparator = lastSeparator.finish(printer, parser);\n        return new PeriodFormatter(lastSeparator, lastSeparator);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..bac77901 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -791,26 +791,44 @@ public class PeriodFormatterBuilder {\n     }\n \n     //-----------------------------------------------------------------------\n-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n-        if (notPrinter && notParser) {\n-            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n-        }\n-        int size = elementPairs.size();\n-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n-            Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n-        }\n-        Object[] comp = createComposite(elementPairs);\n-        if (notPrinter) {\n-            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n-        } else if (notParser) {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n+private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n+    if (notPrinter && notParser) {\n+        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n+    }\n+    PeriodPrinter printer = null;\n+    PeriodParser parser = null;\n+    Separator lastSeparator = null;\n+    for (Object elem : elementPairs) {\n+        if (elem instanceof Separator) {\n+            lastSeparator = (Separator) elem;\n         } else {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+            Object[] comp = createComposite(Collections.singletonList(elem));\n+            if (notPrinter) {\n+                parser = (PeriodParser) comp[1];\n+                if (printer != null) {\n+                    break;\n+                }\n+            } else if (notParser) {\n+                printer = (PeriodPrinter) comp[0];\n+                if (parser != null) {\n+                    break;\n+                }\n+            } else {\n+                printer = (PeriodPrinter) comp[0];\n+                parser = (PeriodParser) comp[1];\n+            }\n         }\n     }\n+    if (!notPrinter && !notParser && (printer == null || parser == null)) {\n+        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n+    }\n+    if (lastSeparator == null) {\n+        return new PeriodFormatter(printer, parser);\n+    } else {\n+        lastSeparator = lastSeparator.finish(printer, parser);\n+        return new PeriodFormatter(lastSeparator, lastSeparator);\n+    }\n+}\n \n     private static Object[] createComposite(List<Object> elementPairs) {\n         switch (elementPairs.size()) {",
    "result_reason": "java.lang.IndexOutOfBoundsException: Index: 1, Size: 1",
    "test_result": "FAIL"
}