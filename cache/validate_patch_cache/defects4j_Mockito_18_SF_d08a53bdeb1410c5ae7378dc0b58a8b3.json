{
    "patch": "public static List<Character> reverse(List<Character> input) {\n    if (input == null) {\n        return null;\n    }\n    List<Character> reversed = new ArrayList<>();\n    for (int i = input.size() - 1; i >= 0; i--) {\n        reversed.add(input.get(i));\n    }\n    return reversed;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..864e8f47b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,16 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static List<Character> reverse(List<Character> input) {\n+    if (input == null) {\n+        return null;\n+    }\n+    List<Character> reversed = new ArrayList<>();\n+    for (int i = input.size() - 1; i >= 0; i--) {\n+        reversed.add(input.get(i));\n+    }\n+    return reversed;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}