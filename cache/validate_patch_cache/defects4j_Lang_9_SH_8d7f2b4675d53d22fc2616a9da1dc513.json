{
    "patch": "        if(currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n        if(currentStrategy !=null){\n            currentFormatField= currentStrategy.getFormatField();\n        }\n        currentStrategy= null;\n        nextStrategy = null;\n        strategies= collector.toArray(new Strategy[collector.size()]);\n        parsePattern= Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..61a2e0e5 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -144,6 +144,16 @@ public class FastDateParser implements DateParser, Serializable {\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }\n+        if(currentStrategy !=null){\n+            currentFormatField= currentStrategy.getFormatField();\n+        }\n+        currentStrategy= null;\n+        nextStrategy = null;\n+        strategies= collector.toArray(new Strategy[collector.size()]);\n+        parsePattern= Pattern.compile(regex.toString());\n+        if(currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        }\n         currentFormatField= null;\n         strategies= collector.toArray(new Strategy[collector.size()]);\n         parsePattern= Pattern.compile(regex.toString());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}