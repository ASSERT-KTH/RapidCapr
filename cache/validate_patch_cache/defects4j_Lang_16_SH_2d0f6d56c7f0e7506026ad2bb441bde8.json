{
    "patch": "if (str.matches(\"-?[0-9]+(\\\\.[0-9]+)?([eE][-+]?[0-9]+)?\")) {\n    //another number format\n    char lastChar = str.charAt(str.length() - 1);\n    // determine type\n    if (lastChar == 'f' || lastChar == 'F') {\n        Float f = Float.valueOf(str);\n        if (!f.isInfinite() && (f.floatValue() != 0.0f || !NumberUtils.isAllZeros(str))) {\n            return f;\n        }\n    } else if (lastChar == 'd' || lastChar == 'D') {\n        Double d = Double.valueOf(str);\n        if (!d.isInfinite() && (d.doubleValue() != 0.0d || !NumberUtils.isAllZeros(str))) {\n            return d;\n        }\n    } else {\n        if (lastChar == 'l' || lastChar == 'L') {\n            String str2 = str.substring(0, str.length() - 1);\n            return createLong(str2);\n        }\n        BigInteger bi = new BigInteger(str);\n        if (bi.bitLength() <= 31) {\n            return Integer.valueOf(bi.intValue());\n        } else if (bi.bitLength() <= 63) {\n            return Long.valueOf(bi.longValue());\n        } else {\n            return bi;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..986a22d4 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,35 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.matches(\"-?[0-9]+(\\\\.[0-9]+)?([eE][-+]?[0-9]+)?\")) {\n+    //another number format\n+    char lastChar = str.charAt(str.length() - 1);\n+    // determine type\n+    if (lastChar == 'f' || lastChar == 'F') {\n+        Float f = Float.valueOf(str);\n+        if (!f.isInfinite() && (f.floatValue() != 0.0f || !NumberUtils.isAllZeros(str))) {\n+            return f;\n+        }\n+    } else if (lastChar == 'd' || lastChar == 'D') {\n+        Double d = Double.valueOf(str);\n+        if (!d.isInfinite() && (d.doubleValue() != 0.0d || !NumberUtils.isAllZeros(str))) {\n+            return d;\n+        }\n+    } else {\n+        if (lastChar == 'l' || lastChar == 'L') {\n+            String str2 = str.substring(0, str.length() - 1);\n+            return createLong(str2);\n+        }\n+        BigInteger bi = new BigInteger(str);\n+        if (bi.bitLength() <= 31) {\n+            return Integer.valueOf(bi.intValue());\n+        } else if (bi.bitLength() <= 63) {\n+            return Long.valueOf(bi.longValue());\n+        } else {\n+            return bi;\n+        }\n+    }\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}