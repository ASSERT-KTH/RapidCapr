{
    "patch": "public static int smallest_change(int[] arr) {\n    int result = 0;\n    int left = 0, right = arr.length - 1;\n    while (left < right) {\n        if (arr[left] != arr[right]) {\n            result += 2;\n            left++;\n            right--;\n        } else {\n            left++;\n            right--;\n        }\n    }\n    if (arr.length % 2 != 0) {\n        result++;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java b/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java\nindex 4ab2c82..b186136 100644\n--- a/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java\n+++ b/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java\n@@ -10,13 +10,22 @@ package humaneval.buggy;\n // smallest_change([1, 2, 3, 2, 1]) == 0\n \n public class SMALLEST_CHANGE {\n-    public static int smallest_change(int[] arr) {\n-        int result = 0;\n-        for (int i = 0; i < arr.length; i += 1) {\n-            if (arr[i] != arr[arr.length - i])\n-                result += 1;\n+public static int smallest_change(int[] arr) {\n+    int result = 0;\n+    int left = 0, right = arr.length - 1;\n+    while (left < right) {\n+        if (arr[left] != arr[right]) {\n+            result += 2;\n+            left++;\n+            right--;\n+        } else {\n+            left++;\n+            right--;\n         }\n-\n-        return result;\n     }\n+    if (arr.length % 2 != 0) {\n+        result++;\n+    }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_SMALLEST_CHANGE.test_0:7 expected:<8> but was:<4>",
    "test_result": "FAIL"
}