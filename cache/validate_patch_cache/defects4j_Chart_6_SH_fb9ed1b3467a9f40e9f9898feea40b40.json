{
    "patch": "if (this == obj) {\n    return true;\n}\nif (obj == null || getClass() != obj.getClass()) {\n    return false;\n}\nShapeList other = (ShapeList) obj;\nif (size() != other.size()) {\n    return false;\n}\nfor (int i = 0; i < size(); i++) {\n    Shape thisShape = (Shape) get(i);\n    Shape otherShape = (Shape) other.get(i);\n    if (thisShape == null) {\n        if (otherShape != null) {\n            return false;\n        }\n    } else if (!ShapeUtilities.equal(thisShape, otherShape)) {\n            return false;\n        }\n}\nreturn true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..9e8a798 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,28 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+if (this == obj) {\n+    return true;\n+}\n+if (obj == null || getClass() != obj.getClass()) {\n+    return false;\n+}\n+ShapeList other = (ShapeList) obj;\n+if (size() != other.size()) {\n+    return false;\n+}\n+for (int i = 0; i < size(); i++) {\n+    Shape thisShape = (Shape) get(i);\n+    Shape otherShape = (Shape) other.get(i);\n+    if (thisShape == null) {\n+        if (otherShape != null) {\n+            return false;\n+        }\n+    } else if (!ShapeUtilities.equal(thisShape, otherShape)) {\n+            return false;\n+        }\n+}\n+return true;\n \n     }\n \n@@ -169,4 +190,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}