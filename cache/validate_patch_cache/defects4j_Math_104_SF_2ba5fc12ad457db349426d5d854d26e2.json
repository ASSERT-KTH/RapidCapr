{
    "patch": "public static double regularizedGamma(double a, double x) {\n    if (a <= 0.0 || x < 0.0) {\n        throw new IllegalArgumentException();\n    }\n    double gamser = 0.0;\n    double gln = Gamma.logGamma(a);\n    if (x > 0.0) {\n        double ap = a;\n        double sum = 1.0 / a;\n        double del = sum;\n        for (int n = 1; n <= 100; n++) {\n            ap += 1.0;\n            del *= x / ap;\n            sum += del;\n            if (Math.abs(del) < Math.abs(sum) * 2.2204460492503131E-16) {\n                gamser = sum * Math.exp(-x + a * Math.log(x) - gln);\n                return gamser;\n            }\n        }\n    }\n    double gammafrac = Gamma.gamma(a);\n    gamser = gammafrac * Math.exp(-x + a * Math.log(x) - gln) / a;\n    return gamser;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..37b80e668 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,30 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    if (a <= 0.0 || x < 0.0) {\n+        throw new IllegalArgumentException();\n+    }\n+    double gamser = 0.0;\n+    double gln = Gamma.logGamma(a);\n+    if (x > 0.0) {\n+        double ap = a;\n+        double sum = 1.0 / a;\n+        double del = sum;\n+        for (int n = 1; n <= 100; n++) {\n+            ap += 1.0;\n+            del *= x / ap;\n+            sum += del;\n+            if (Math.abs(del) < Math.abs(sum) * 2.2204460492503131E-16) {\n+                gamser = sum * Math.exp(-x + a * Math.log(x) - gln);\n+                return gamser;\n+            }\n+        }\n+    }\n+    double gammafrac = Gamma.gamma(a);\n+    gamser = gammafrac * Math.exp(-x + a * Math.log(x) - gln) / a;\n+    return gamser;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}