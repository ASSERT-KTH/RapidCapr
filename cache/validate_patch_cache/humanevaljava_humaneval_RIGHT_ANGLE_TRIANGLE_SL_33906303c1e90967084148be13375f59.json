{
    "patch": "if (a <= 0 || b <= 0 || c <= 0) {\n    return false;    \n} else if (a + b <= c || b + c <= a || a + c <= b) {\n    return false;\n} else {\n    int maxSide = Math.max(Math.max(a, b), c);\n    int sumOfSquares = 2 * (a*a + b*b + c*c) - 2 * (maxSide*maxSide);\n    return sumOfSquares == maxSide*maxSide;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..0055386 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,14 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+if (a <= 0 || b <= 0 || c <= 0) {\n+    return false;    \n+} else if (a + b <= c || b + c <= a || a + c <= b) {\n+    return false;\n+} else {\n+    int maxSide = Math.max(Math.max(a, b), c);\n+    int sumOfSquares = 2 * (a*a + b*b + c*c) - 2 * (maxSide*maxSide);\n+    return sumOfSquares == maxSide*maxSide;\n+}\n     }\n }",
    "result_reason": "   TEST_RIGHT_ANGLE_TRIANGLE.test_0:7 expected:<false> but was:<true>",
    "test_result": "FAIL"
}