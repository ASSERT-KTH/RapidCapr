{
    "patch": "                // check for gap at instantLocal\n                long nextLocalTransition = nextTransition(instantLocal);\n                if (offsetLocal < offsetAdjusted && instantLocal == nextLocalTransition - offsetLocal) {\n                    return offsetAdjusted;\n                }\n                \n                // check for overlap at instantLocal\n                long nextLocal = nextTransition(instantLocal - offsetLocal);\n                if (offsetLocal > offsetAdjusted && instantLocal >= nextLocal - offsetLocal) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..12c14706 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // check for gap at instantLocal\n+                long nextLocalTransition = nextTransition(instantLocal);\n+                if (offsetLocal < offsetAdjusted && instantLocal == nextLocalTransition - offsetLocal) {\n+                    return offsetAdjusted;\n+                }\n+                \n+                // check for overlap at instantLocal\n+                long nextLocal = nextTransition(instantLocal - offsetLocal);\n+                if (offsetLocal > offsetAdjusted && instantLocal >= nextLocal - offsetLocal) {\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}