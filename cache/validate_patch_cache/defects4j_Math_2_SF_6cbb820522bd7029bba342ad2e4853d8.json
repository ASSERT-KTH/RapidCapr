{
    "patch": "if(getPopulationSize()<0){\n     return 0.0;\n  }\n  return ((double) getNumberOfSuccesses()*getSampleSize())/(double)Math.max(getPopulationSize(), 1);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..e7bf054f4 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -264,9 +264,10 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * For population size {@code N}, number of successes {@code m}, and sample\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n-    public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n-    }\n+if(getPopulationSize()<0){\n+     return 0.0;\n+  }\n+  return ((double) getNumberOfSuccesses()*getSampleSize())/(double)Math.max(getPopulationSize(), 1);\n \n     /**\n      * {@inheritDoc}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}