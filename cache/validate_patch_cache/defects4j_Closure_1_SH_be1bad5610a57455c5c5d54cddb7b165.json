{
    "patch": "+    Set<Var> referenced = new HashSet<>();\n+    new GatherDeclaredOrInferredVars().process(fnScope.getRootNode(), referenced);\n+\n     Node function = fnScope.getRootNode();\n\n     Preconditions.checkState(function.isFunction());\n     if (NodeUtil.isGetOrSetKey(function.getParent())) {\n       // The parameters object literal setters can not be removed.\n       return;\n     }\n\n     Node argList = getFunctionArgList(function);\n     boolean modifyCallers = modifyCallSites\n         && callSiteOptimizer.canModifyCallers(function);\n     if (!modifyCallers) {\n       // Strip unreferenced args off the end of the function declaration.\n       Node lastArg;\n       while ((lastArg = argList.getLastChild()) != null) {\n         Var var = fnScope.getVar(lastArg.getString());\n+        if (referenced.contains(var)) {\n           break;\n+        }\n         argList.removeChild(lastArg);\n         compiler.reportCodeChange();\n       }\n     } else {\n       callSiteOptimizer.optimize(fnScope, referenced);\n     }\n   }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..e69f025c 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,35 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n++    Set<Var> referenced = new HashSet<>();\n++    new GatherDeclaredOrInferredVars().process(fnScope.getRootNode(), referenced);\n++\n+     Node function = fnScope.getRootNode();\n+\n+     Preconditions.checkState(function.isFunction());\n+     if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+       // The parameters object literal setters can not be removed.\n+       return;\n+     }\n+\n+     Node argList = getFunctionArgList(function);\n+     boolean modifyCallers = modifyCallSites\n+         && callSiteOptimizer.canModifyCallers(function);\n+     if (!modifyCallers) {\n+       // Strip unreferenced args off the end of the function declaration.\n+       Node lastArg;\n+       while ((lastArg = argList.getLastChild()) != null) {\n+         Var var = fnScope.getVar(lastArg.getString());\n++        if (referenced.contains(var)) {\n+           break;\n++        }\n+         argList.removeChild(lastArg);\n+         compiler.reportCodeChange();\n+       }\n+     } else {\n+       callSiteOptimizer.optimize(fnScope, referenced);\n+     }\n+   }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}