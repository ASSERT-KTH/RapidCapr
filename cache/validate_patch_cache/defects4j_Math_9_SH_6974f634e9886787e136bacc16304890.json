{
    "patch": "public Line revert() {\n    Vector revertedDir = new Vector(-direction.getX(), direction.getY());\n    Point revertedEnd = new Point(-end.getX() + revertedDir.getX(), -end.getY() + revertedDir.getY());\n    Line reverted = new Line(revertedEnd, revertedDir);\n    return reverted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..029da3a3c 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,12 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+public Line revert() {\n+    Vector revertedDir = new Vector(-direction.getX(), direction.getY());\n+    Point revertedEnd = new Point(-end.getX() + revertedDir.getX(), -end.getY() + revertedDir.getY());\n+    Line reverted = new Line(revertedEnd, revertedDir);\n+    return reverted;\n+}\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}