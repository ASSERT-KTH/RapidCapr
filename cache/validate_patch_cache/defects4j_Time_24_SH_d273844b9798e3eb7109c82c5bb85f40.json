{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                long fieldValue = savedFields[i].set(millis, resetFields);\n                if (millis != fieldValue && (i == 0 || !savedFields[i].iField.isLeap())) {\n                    // If we've only set the time fields and the date would otherwise\n                    // be bad due to the month or day of month being insufficient, don't reject it,\n                    // since the user may still want to input the missing fields interactively.\n                    if (!(resetFields && i == 0 && count <= 2)) {\n                        throw new IllegalFieldValueException(savedFields[i].iField.getType(), NumberUtils.createLong(fieldValue), savedFields[i].iField.getRangeDurationField().getType()); \n                    }\n                }\n                millis = fieldValue;\n            }\n        } catch (IllegalArgumentException e) {\n            if (text != null) {\n                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..312ffa90 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                long fieldValue = savedFields[i].set(millis, resetFields);\n+                if (millis != fieldValue && (i == 0 || !savedFields[i].iField.isLeap())) {\n+                    // If we've only set the time fields and the date would otherwise\n+                    // be bad due to the month or day of month being insufficient, don't reject it,\n+                    // since the user may still want to input the missing fields interactively.\n+                    if (!(resetFields && i == 0 && count <= 2)) {\n+                        throw new IllegalFieldValueException(savedFields[i].iField.getType(), NumberUtils.createLong(fieldValue), savedFields[i].iField.getRangeDurationField().getType()); \n+                    }\n+                }\n+                millis = fieldValue;\n+            }\n+        } catch (IllegalArgumentException e) {\n+            if (text != null) {\n+                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"', e);\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: method isLeap in class DateTimeField cannot be applied to given types;",
    "test_result": "ERROR"
}