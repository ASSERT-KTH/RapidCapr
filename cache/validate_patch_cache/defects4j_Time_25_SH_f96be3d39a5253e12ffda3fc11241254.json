{
    "patch": "            if (offsetLocal < offsetAdjusted) {\n                long prev = previousTransition(instantAdjusted);\n                if (prev == instantAdjusted) {\n                    return offsetLocal;\n                }\n                int offsetPrev = getOffset(prev);\n                if (offsetPrev == offsetLocal) {\n                    return offsetLocal;\n                }\n                if (offsetPrev > offsetLocal) {\n                    return offsetPrev;\n                }\n                // previous is still not in zone, traverse chronologically\n                long next = nextTransition(prev);\n                while (next != instantAdjusted) {\n                    int nextOffset = getOffset(next);\n                    if (nextOffset < offsetLocal) {\n                        return offsetPrev;\n                    } else if (nextOffset > offsetLocal) {\n                        return nextOffset;\n                    }\n                    offsetPrev = nextOffset;\n                    prev = next;\n                    next = nextTransition(prev);\n                }\n                return offsetPrev;\n            } else if (offsetLocal > offsetAdjusted) {\n                long next = nextTransition(instantAdjusted);\n                if (next == instantAdjusted) {\n                    return offsetLocal;\n                }\n                int offsetNext = getOffset(next);\n                if (offsetNext == offsetAdjusted) {\n                    return offsetLocal;\n                }\n                if (offsetNext > offsetLocal) {\n                    return offsetLocal;\n                }\n                // next is still not in zone, traverse chronologically\n                long nextNext = nextTransition(next);\n                while (nextNext != instantLocal) {\n                    int nextOffset = getOffset(next);\n                    if (nextOffset < offsetNext) {\n                        return offsetLocal;\n                    } else if (nextOffset > offsetNext) {\n                        return offsetNext;\n                    }\n                    offsetNext = nextOffset;\n                    next = nextNext;\n                    nextNext = nextTransition(next);\n                }\n                return offsetNext;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1f3135b6 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,58 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal < offsetAdjusted) {\n+                long prev = previousTransition(instantAdjusted);\n+                if (prev == instantAdjusted) {\n+                    return offsetLocal;\n+                }\n+                int offsetPrev = getOffset(prev);\n+                if (offsetPrev == offsetLocal) {\n+                    return offsetLocal;\n+                }\n+                if (offsetPrev > offsetLocal) {\n+                    return offsetPrev;\n+                }\n+                // previous is still not in zone, traverse chronologically\n+                long next = nextTransition(prev);\n+                while (next != instantAdjusted) {\n+                    int nextOffset = getOffset(next);\n+                    if (nextOffset < offsetLocal) {\n+                        return offsetPrev;\n+                    } else if (nextOffset > offsetLocal) {\n+                        return nextOffset;\n+                    }\n+                    offsetPrev = nextOffset;\n+                    prev = next;\n+                    next = nextTransition(prev);\n+                }\n+                return offsetPrev;\n+            } else if (offsetLocal > offsetAdjusted) {\n+                long next = nextTransition(instantAdjusted);\n+                if (next == instantAdjusted) {\n+                    return offsetLocal;\n+                }\n+                int offsetNext = getOffset(next);\n+                if (offsetNext == offsetAdjusted) {\n+                    return offsetLocal;\n+                }\n+                if (offsetNext > offsetLocal) {\n+                    return offsetLocal;\n+                }\n+                // next is still not in zone, traverse chronologically\n+                long nextNext = nextTransition(next);\n+                while (nextNext != instantLocal) {\n+                    int nextOffset = getOffset(next);\n+                    if (nextOffset < offsetNext) {\n+                        return offsetLocal;\n+                    } else if (nextOffset > offsetNext) {\n+                        return offsetNext;\n+                    }\n+                    offsetNext = nextOffset;\n+                    next = nextNext;\n+                    nextNext = nextTransition(next);\n+                }\n+                return offsetNext;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}