{
    "patch": "public static boolean containsAny(final CharSequence seq, final char[] searchChars) {\n    if (isEmpty(seq) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int strLen = seq.length();\n    final int searchLen = searchChars.length;\n    final int strLast = strLen - 1;\n    final int searchLast = searchLen - 1;\n\n    for (int i = 0; i < strLen; i++) {\n        final char ch = seq.charAt(i);\n\n        for (int j = 0; j < searchLen; j++) {\n            // Check for supplementary characters\n            if (searchChars[j] >= Character.MIN_HIGH_SURROGATE && searchChars[j] <= Character.MAX_LOW_SURROGATE) {\n                if (j == searchLast) {\n                    // missing low surrogate, fine, like String.indexOf(String)\n                    return false;\n                }\n                if (i < strLast && searchChars[j+1] == seq.charAt(i+1)) {\n                    return true;\n                }\n            } else if (ch == searchChars[j]) {\n                // ch is a unicode character\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..47ff9937 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,36 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence seq, final char[] searchChars) {\n+    if (isEmpty(seq) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int strLen = seq.length();\n+    final int searchLen = searchChars.length;\n+    final int strLast = strLen - 1;\n+    final int searchLast = searchLen - 1;\n+\n+    for (int i = 0; i < strLen; i++) {\n+        final char ch = seq.charAt(i);\n+\n+        for (int j = 0; j < searchLen; j++) {\n+            // Check for supplementary characters\n+            if (searchChars[j] >= Character.MIN_HIGH_SURROGATE && searchChars[j] <= Character.MAX_LOW_SURROGATE) {\n+                if (j == searchLast) {\n+                    // missing low surrogate, fine, like String.indexOf(String)\n+                    return false;\n+                }\n+                if (i < strLast && searchChars[j+1] == seq.charAt(i+1)) {\n+                    return true;\n+                }\n+            } else if (ch == searchChars[j]) {\n+                // ch is a unicode character\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}