{
    "patch": "    public boolean hasSameMethod(Invocation candidate) {\n        if(invocation == null || candidate == null) {\n            return false;\n        }\n\n        //not using method.equals() for 1 good reason:\n        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n        Method m1 = invocation.getMethod();\n        Method m2 = candidate.getMethod();\n\n        if(m1 == null || m2 == null) {\n            return false;\n        }\n\n        /* Avoid unnecessary cloning */\n        return m1.getName().equals(m2.getName()) && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex 203413fc9..219f360bf 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -89,14 +89,22 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n         return !overloadedButSameArgs;\n     }\n \n-    public boolean hasSameMethod(Invocation candidate) {        \n+    public boolean hasSameMethod(Invocation candidate) {\n+        if(invocation == null || candidate == null) {\n+            return false;\n+        }\n+\n         //not using method.equals() for 1 good reason:\n         //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n         Method m1 = invocation.getMethod();\n         Method m2 = candidate.getMethod();\n-        \n-        \t/* Avoid unnecessary cloning */\n-        return m1.equals(m2);\n+\n+        if(m1 == null || m2 == null) {\n+            return false;\n+        }\n+\n+        /* Avoid unnecessary cloning */\n+        return m1.getName().equals(m2.getName()) && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());\n     }\n     \n     public Location getLocation() {\n@@ -126,4 +134,4 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n \n         return out;\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}