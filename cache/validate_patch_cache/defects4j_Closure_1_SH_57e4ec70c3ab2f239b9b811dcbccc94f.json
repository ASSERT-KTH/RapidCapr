{
    "patch": "    List<Node> paramsToRemove = new ArrayList<>();\n    Node argList = NodeUtil.getFunctionParameters(fnScope.getRootNode());\n    boolean hasSetter = NodeUtil.isGetOrSetKey(fnScope.getRootNode().getParent());\n\n    // Find all the function params that are unreferenced.\n    for (Node param : argList.children()) {\n      String paramName = param.getString();\n      if (!hasSetter) {\n        Var var = fnScope.getVar(paramName);\n        if (!referenced.contains(var)) {\n          paramsToRemove.add(param);\n        }\n      }\n    }\n\n    // Remove all the unreferenced params\n    for (Node param : paramsToRemove) {\n      argList.removeChild(param);\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..70833a41 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,25 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> paramsToRemove = new ArrayList<>();\n+    Node argList = NodeUtil.getFunctionParameters(fnScope.getRootNode());\n+    boolean hasSetter = NodeUtil.isGetOrSetKey(fnScope.getRootNode().getParent());\n+\n+    // Find all the function params that are unreferenced.\n+    for (Node param : argList.children()) {\n+      String paramName = param.getString();\n+      if (!hasSetter) {\n+        Var var = fnScope.getVar(paramName);\n+        if (!referenced.contains(var)) {\n+          paramsToRemove.add(param);\n+        }\n+      }\n+    }\n+\n+    // Remove all the unreferenced params\n+    for (Node param : paramsToRemove) {\n+      argList.removeChild(param);\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}