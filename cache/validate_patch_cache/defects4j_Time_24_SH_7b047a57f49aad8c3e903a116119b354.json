{
    "patch": "        } catch (IllegalFieldValueException e) {\n            boolean done;\n            if (resetFields) {\n                for (int i = 0; i < count; i++) {\n                    SavedField savedField = savedFields[i];\n                    if (savedField.isSaved() == false) {\n                        DateTimeField field = savedField.iField;\n                        field.set(savedField.iValue, millis);\n                        millis = field.roundFloor(millis);\n                        savedField.setSaved(true);\n                        done = true;\n                        break;\n                    }\n                }\n            }\n            if (done == false) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c06de8d0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,28 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            boolean done;\n+            if (resetFields) {\n+                for (int i = 0; i < count; i++) {\n+                    SavedField savedField = savedFields[i];\n+                    if (savedField.isSaved() == false) {\n+                        DateTimeField field = savedField.iField;\n+                        field.set(savedField.iValue, millis);\n+                        millis = field.roundFloor(millis);\n+                        savedField.setSaved(true);\n+                        done = true;\n+                        break;\n+                    }\n+                }\n+            }\n+            if (done == false) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}