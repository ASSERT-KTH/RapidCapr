{
    "patch": "            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            if (candidate != null) {\n                field.setAccessible(true);\n                if (field.getType().isInstance(candidate)) {\n                    try {\n                        field.set(fieldInstance, field.getType().cast(candidate));\n                    } catch (IllegalAccessException e) {\n                        e.printStackTrace();\n                    }\n                } else {\n                    throw new IllegalArgumentException(\"Candidate type \" + candidate.getClass() + \n                                                       \" is not compatible with field type \" + field.getType());\n                }\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..5e4ee7b8c 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,23 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            if (candidate != null) {\n+                field.setAccessible(true);\n+                if (field.getType().isInstance(candidate)) {\n+                    try {\n+                        field.set(fieldInstance, field.getType().cast(candidate));\n+                    } catch (IllegalAccessException e) {\n+                        e.printStackTrace();\n+                    }\n+                } else {\n+                    throw new IllegalArgumentException(\"Candidate type \" + candidate.getClass() + \n+                                                       \" is not compatible with field type \" + field.getType());\n+                }\n+            }\n         }\n     }\n ",
    "result_reason": "java.lang.IllegalArgumentException: Candidate type class org.mockito.internal.configuration.injection.FinalMockCandidateFilter$1 is not compatible with field type class org.mockitousage.annotation.DeprecatedAnnotationEngineApiTest$Dependency",
    "test_result": "FAIL"
}