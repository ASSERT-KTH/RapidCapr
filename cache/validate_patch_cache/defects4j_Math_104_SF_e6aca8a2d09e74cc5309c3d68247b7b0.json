{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\n\npublic class RegularizedGammaFunction {\n\n    private static final double EPSILON = 10e-15;\n\n    public static double regularizedGamma(double a, double x) {\n        return Gamma.regularizedGammaP(a, x);\n    }\n\n    @Test\n    public void testRegularizedGammaPositivePositive() {\n        double expected = 0.632120558828558;\n        double actualP = regularizedGamma(0.5, 1.0);\n        double actualQ = Gamma.regularizedGammaQ(0.5, 1.0);\n        Assertions.assertEquals(expected, actualP, EPSILON);\n        Assertions.assertEquals(1 - expected, actualQ, EPSILON);\n    }\n\n    @Test\n    public void testRegularizedGammaPositiveException() {\n        Assertions.assertThrows(IllegalArgumentException.class, () -> regularizedGamma(0.0, 1.0));\n    }\n\n    @Test\n    public void testRegularizedGammaNegativeException() {\n        Assertions.assertThrows(IllegalArgumentException.class, () -> regularizedGamma(0.5, -1.0));\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..a10b7dfa5 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,37 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+public class RegularizedGammaFunction {\n+\n+    private static final double EPSILON = 10e-15;\n+\n+    public static double regularizedGamma(double a, double x) {\n+        return Gamma.regularizedGammaP(a, x);\n+    }\n+\n+    @Test\n+    public void testRegularizedGammaPositivePositive() {\n+        double expected = 0.632120558828558;\n+        double actualP = regularizedGamma(0.5, 1.0);\n+        double actualQ = Gamma.regularizedGammaQ(0.5, 1.0);\n+        Assertions.assertEquals(expected, actualP, EPSILON);\n+        Assertions.assertEquals(1 - expected, actualQ, EPSILON);\n+    }\n+\n+    @Test\n+    public void testRegularizedGammaPositiveException() {\n+        Assertions.assertThrows(IllegalArgumentException.class, () -> regularizedGamma(0.0, 1.0));\n+    }\n+\n+    @Test\n+    public void testRegularizedGammaNegativeException() {\n+        Assertions.assertThrows(IllegalArgumentException.class, () -> regularizedGamma(0.5, -1.0));\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}