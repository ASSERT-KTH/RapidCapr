{
    "patch": "        List<Integer> numbers = new ArrayList<>();\n        for (int n : lst) {\n            if (!numbers.contains(n)) {\n                numbers.add(n);\n            }\n        }\n        if (numbers.size() < 2) {\n            return null;\n        }\n        Collections.sort(numbers);\n        return numbers.get(1);",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\nindex 7791efd..accd4d3 100644\n--- a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\n+++ b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\n@@ -13,7 +13,17 @@ next_smallest([1, 1]) == None */\n \n public class NEXT_SMALLEST {\n     public static Integer next_smallest(int[] lst) {\n-        List<Integer> numbers = new ArrayList<Integer>();\n+        List<Integer> numbers = new ArrayList<>();\n+        for (int n : lst) {\n+            if (!numbers.contains(n)) {\n+                numbers.add(n);\n+            }\n+        }\n+        if (numbers.size() < 2) {\n+            return null;\n+        }\n+        Collections.sort(numbers);\n+        return numbers.get(1);\n         for (Integer n : lst)\n             numbers.add(n);\n         Integer[] no_duplicate = numbers.toArray(new Integer[] {});",
    "result_reason": " /tmp/humaneval-NEXT_SMALLEST/src/main/java/humaneval/buggy/NEXT_SMALLEST.java:[27,9] unreachable statement",
    "test_result": "ERROR"
}