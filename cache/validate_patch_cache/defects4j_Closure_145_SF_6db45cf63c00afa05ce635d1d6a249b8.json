{
    "patch": "  private boolean isOneExactlyFunctionOrDo(Node n) {\n    if (n.getType() == Token.LABEL) {\n      n = n.getFirstChild();\n      if (n.getType() == Token.EMPTY) {\n        n = n.getNext();\n      }\n    }\n    return n.getChildCount() == 1 &&\n        (n.getFirstChild().getType() == Token.FUNCTION ||\n        n.getFirstChild().getType() == Token.DO);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 42c9ab38..ff0f8a78 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -706,12 +706,15 @@ class CodeGenerator {\n    * labels).\n    */\n   private boolean isOneExactlyFunctionOrDo(Node n) {\n-        // For labels with block children, we need to ensure that a\n-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n-        // are skipped. \n-          // Either a empty statement or an block with more than one child,\n-          // way it isn't a FUNCTION or DO.\n-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);\n+    if (n.getType() == Token.LABEL) {\n+      n = n.getFirstChild();\n+      if (n.getType() == Token.EMPTY) {\n+        n = n.getNext();\n+      }\n+    }\n+    return n.getChildCount() == 1 &&\n+        (n.getFirstChild().getType() == Token.FUNCTION ||\n+        n.getFirstChild().getType() == Token.DO);\n   }\n \n   /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<function(){if(e1)[{function goo(){return true}]}else foo()}> but was:<function(){if(e1)[function goo(){return true]}else foo()}>",
    "test_result": "FAIL"
}