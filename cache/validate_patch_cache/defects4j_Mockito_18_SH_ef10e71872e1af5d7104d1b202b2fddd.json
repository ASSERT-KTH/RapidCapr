{
    "patch": "public ReturnValue execute(TestCase inputs) {\n    String methodName = \"getNumbers\";\n    try {\n        Method method = inputs.getInput(0);\n        Object instance = inputs.getInput(1);\n        Object[] args = inputs.getInput(2);\n\n        Iterable<Integer> result = (Iterable<Integer>) method.invoke(instance, args);\n          \n        return new ReturnValue(result);\n    } catch (IllegalAccessException | InvocationTargetException | ClassCastException | NullPointerException e) {\n        throw new IllegalArgumentException(\"Argument type mismatch\", e);\n    } \n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}