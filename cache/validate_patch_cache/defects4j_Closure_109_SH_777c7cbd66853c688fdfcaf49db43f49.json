{
    "patch": "          if (token.isType(TokenType.BANG)) {\n            token = lexer.nextToken();\n            return Types.addBang(parseContextTypeExpression(token));\n          }\n          return parseTypeName(token);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..0793a7e9 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,6 +1905,10 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n+          if (token.isType(TokenType.BANG)) {\n+            token = lexer.nextToken();\n+            return Types.addBang(parseContextTypeExpression(token));\n+          }\n           return parseTypeName(token);\n   }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}