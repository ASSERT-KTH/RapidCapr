{
    "patch": "public void testGetprop4() {\n   Properties props = new Properties();\n   InputStream is = null;\n   String propValue = null;\n\n   try {\n      is = getClass().getResourceAsStream(\"test.properties\");\n      props.load(is);\n\n      propValue = props.getProperty(\"key4\");\n      assertNotNull(propValue);\n      assertEquals(\"value4\", propValue);\n   } catch (IOException e) {\n      fail(\"Exception while trying to read property file\");\n   } finally {\n      if (is != null) {\n         try {\n            is.close();\n         } catch (IOException e) {\n            fail(\"Exception while trying to close input stream\");\n         }\n      }\n   }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..dc36c46b 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,30 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() {\n+   Properties props = new Properties();\n+   InputStream is = null;\n+   String propValue = null;\n+\n+   try {\n+      is = getClass().getResourceAsStream(\"test.properties\");\n+      props.load(is);\n+\n+      propValue = props.getProperty(\"key4\");\n+      assertNotNull(propValue);\n+      assertEquals(\"value4\", propValue);\n+   } catch (IOException e) {\n+      fail(\"Exception while trying to read property file\");\n+   } finally {\n+      if (is != null) {\n+         try {\n+            is.close();\n+         } catch (IOException e) {\n+            fail(\"Exception while trying to close input stream\");\n+         }\n+      }\n+   }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}