{
    "patch": "if (value.indexOf('.') > 0) {\n   // Handle numbers with decimals\n   double decimalNum = Double.parseDouble(value);\n   double numFloor = Math.floor(decimalNum);\n   double numCeiling = Math.ceil(decimalNum);\n   if ((decimalNum - numFloor) < (numCeiling - decimalNum)) {\n       result = (int)numFloor;\n   } else {\n       result = (int)numCeiling;\n   }\n} else if (value.length() > 0) {\n   // Handle numbers without decimals\n   int num = Integer.parseInt(value);\n   result = num;\n}\nreturn result;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..be7c193 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -25,8 +25,22 @@ public class CLOSEST_INTEGER {\n \n         double num = Double.parseDouble(value);\n         int result = 0;\n-        if (value.substring(value.length() - 2).equals(\".5\")) {\n-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n+if (value.indexOf('.') > 0) {\n+   // Handle numbers with decimals\n+   double decimalNum = Double.parseDouble(value);\n+   double numFloor = Math.floor(decimalNum);\n+   double numCeiling = Math.ceil(decimalNum);\n+   if ((decimalNum - numFloor) < (numCeiling - decimalNum)) {\n+       result = (int)numFloor;\n+   } else {\n+       result = (int)numCeiling;\n+   }\n+} else if (value.length() > 0) {\n+   // Handle numbers without decimals\n+   int num = Integer.parseInt(value);\n+   result = num;\n+}\n+return result;\n         } else if (value.length() > 0){\n             result = (int)Math.round(num);\n         }",
    "result_reason": " /tmp/humaneval-CLOSEST_INTEGER/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java:[44,11] illegal start of type",
    "test_result": "ERROR"
}