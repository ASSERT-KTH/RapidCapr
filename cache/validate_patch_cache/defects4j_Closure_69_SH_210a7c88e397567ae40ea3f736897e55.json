{
    "patch": "ObjectType thisType = (functionType.getTypeOfThis() != null && functionType.getTypeOfThis() instanceof ObjectType) ?\n                               (ObjectType)functionType.getTypeOfThis() : null;\nif (thisType != null) {\n    if (!NodeUtil.isGetOrSetKey(child, n)) {\n        report(t, child, MUST_BE_GET_OR_SET, \"'this' before calling a function with @this\");\n    } else {\n        Node getOrSetImplicitArgument = NodeUtil.getGetOrSetImplicitArgument(child);\n        if (getOrSetImplicitArgument != null) {\n            JSType getOrSetType = getJSType(getOrSetImplicitArgument);\n            if (getOrSetType != null && !getOrSetType.isSubtypeOf(thisType)) {\n                if (JSType.compare(getOrSetType, thisType, compiler.getCommonTypes()) > 0) {\n                    report(t, n, THIS_TYPE_MISMATCH);\n                }\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..d5ac63c0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+ObjectType thisType = (functionType.getTypeOfThis() != null && functionType.getTypeOfThis() instanceof ObjectType) ?\n+                               (ObjectType)functionType.getTypeOfThis() : null;\n+if (thisType != null) {\n+    if (!NodeUtil.isGetOrSetKey(child, n)) {\n+        report(t, child, MUST_BE_GET_OR_SET, \"'this' before calling a function with @this\");\n+    } else {\n+        Node getOrSetImplicitArgument = NodeUtil.getGetOrSetImplicitArgument(child);\n+        if (getOrSetImplicitArgument != null) {\n+            JSType getOrSetType = getJSType(getOrSetImplicitArgument);\n+            if (getOrSetType != null && !getOrSetType.isSubtypeOf(thisType)) {\n+                if (JSType.compare(getOrSetType, thisType, compiler.getCommonTypes()) > 0) {\n+                    report(t, n, THIS_TYPE_MISMATCH);\n+                }\n+            }\n+        }\n+    }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: method isGetOrSetKey in class NodeUtil cannot be applied to given types;",
    "test_result": "ERROR"
}