{
    "patch": "public String unescape(String orig) {\n    StringBuffer result = new StringBuffer();\n    for(int i=0;i<orig.length();i++) {\n        char ch=orig.charAt(i);\n        if(ch == '\\\\') {\n            i++;\n            ch=orig.charAt(i);\n            if(ch == 'n') {\n                ch='\\n';\n            } else if(ch == 'r') {\n                ch='\\r';\n            } else if(ch == 't') {\n                ch='\\t';\n            } else if(ch == 'f') {\n                ch='\\f';\n            } else if(ch == '\\b') {\n                ch='\\b';\n            } else if(ch == '\\\"') {\n                ch='\\\"';\n            } else if(ch == '\\'') {\n                ch='\\'';\n            } else if(ch == '\\\\') {\n                ch='\\\\';\n            } else if (ch == 'u') {\n                int value = Integer.parseInt(orig.substring(i+1, i+5), 16);\n                ch = (char)value;\n                i += 4;\n            }\n        }\n        result.append(ch);\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e7696354 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,39 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String unescape(String orig) {\n+    StringBuffer result = new StringBuffer();\n+    for(int i=0;i<orig.length();i++) {\n+        char ch=orig.charAt(i);\n+        if(ch == '\\\\') {\n+            i++;\n+            ch=orig.charAt(i);\n+            if(ch == 'n') {\n+                ch='\\n';\n+            } else if(ch == 'r') {\n+                ch='\\r';\n+            } else if(ch == 't') {\n+                ch='\\t';\n+            } else if(ch == 'f') {\n+                ch='\\f';\n+            } else if(ch == '\\b') {\n+                ch='\\b';\n+            } else if(ch == '\\\"') {\n+                ch='\\\"';\n+            } else if(ch == '\\'') {\n+                ch='\\'';\n+            } else if(ch == '\\\\') {\n+                ch='\\\\';\n+            } else if (ch == 'u') {\n+                int value = Integer.parseInt(orig.substring(i+1, i+5), 16);\n+                ch = (char)value;\n+                i += 4;\n+            }\n+        }\n+        result.append(ch);\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}