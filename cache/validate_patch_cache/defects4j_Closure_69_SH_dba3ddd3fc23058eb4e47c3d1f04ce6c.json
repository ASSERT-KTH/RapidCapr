{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP\n// or GETELEM.\nJSType typeOfThis = functionType.getTypeOfThis();\nif (typeOfThis != null) {\n  Node parent = n.getParent();\n  boolean isGetPropOrGetElem = (NodeUtil.isGet(parent) || NodeUtil.isGetElem(parent))\n      && parent.getFirstChild() == n;\n  // the function is called with a GETPROP or GETELEM\n  if (!isGetPropOrGetElem) {\n    report(t, n, EXPLICIT_THIS_PARAMETER_NOT_ALLOWED);\n    ensureTyped(t, n);\n    return;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..cbf2608b 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP\n+// or GETELEM.\n+JSType typeOfThis = functionType.getTypeOfThis();\n+if (typeOfThis != null) {\n+  Node parent = n.getParent();\n+  boolean isGetPropOrGetElem = (NodeUtil.isGet(parent) || NodeUtil.isGetElem(parent))\n+      && parent.getFirstChild() == n;\n+  // the function is called with a GETPROP or GETELEM\n+  if (!isGetPropOrGetElem) {\n+    report(t, n, EXPLICIT_THIS_PARAMETER_NOT_ALLOWED);\n+    ensureTyped(t, n);\n+    return;\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}