{
    "patch": "Type[] bounds = typeVariable.getBounds();\nif (bounds.length == 0) {\n    throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n}\nfor (Type boundType : bounds) {\n    if (boundType instanceof TypeVariable) {\n        TypeVariable<?> typeVar = (TypeVariable<?>) boundType;\n        Type[] typeVarBounds = typeVar.getBounds();\n        if (typeVarBounds.length > 0) {\n            boundType = typeVarBounds[0];\n        } else {\n            throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n        }\n    }\n    if (boundType instanceof ParameterizedType) {\n        ParameterizedType pType = (ParameterizedType) boundType;\n        for (Type arg : pType.getActualTypeArguments()) {\n            registerTypeVariablesOn(arg);\n        }\n    } else if (boundType instanceof Class) {\n        registerTypeVariablesOn(boundType);\n    } else {\n        throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..d31a1c36a 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,36 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] bounds = typeVariable.getBounds();\n+if (bounds.length == 0) {\n+    throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n+}\n+for (Type boundType : bounds) {\n+    if (boundType instanceof TypeVariable) {\n+        TypeVariable<?> typeVar = (TypeVariable<?>) boundType;\n+        Type[] typeVarBounds = typeVar.getBounds();\n+        if (typeVarBounds.length > 0) {\n+            boundType = typeVarBounds[0];\n+        } else {\n+            throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n+        }\n+    }\n+    if (boundType instanceof ParameterizedType) {\n+        ParameterizedType pType = (ParameterizedType) boundType;\n+        for (Type arg : pType.getActualTypeArguments()) {\n+            registerTypeVariablesOn(arg);\n+        }\n+    } else if (boundType instanceof Class) {\n+        registerTypeVariablesOn(boundType);\n+    } else {\n+        throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}