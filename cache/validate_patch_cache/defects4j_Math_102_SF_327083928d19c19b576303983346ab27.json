{
    "patch": "public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException {\n    if ((expected.length < 2) || (expected.length != observed.length)) {\n        throw new IllegalArgumentException(\"observed, expected array lengths incorrect\");\n    }\n    if (!isPositive(expected) || !isNonNegative(expected)) {\n        throw new IllegalArgumentException(\"expected counts must be non-negative and positive\");\n    }\n    double sumSq = 0.0d;\n    for (int i = 0; i < observed.length; i++) {\n        double diff = observed[i] - expected[i];\n        sumSq += (diff * diff) / expected[i];\n    }\n    return sumSq;\n}\n\nprivate boolean isPositive(double[] array) {\n    for (double d : array) {\n        if (d <= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate boolean isNonNegative(double[] array) {\n    for (double d : array) {\n        if (d < 0) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex c87b0101f..5c8498eb5 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -61,24 +61,38 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n      * @throws IllegalArgumentException if preconditions are not met\n      * or length is less than 2\n      */\n-    public double chiSquare(double[] expected, long[] observed)\n-        throws IllegalArgumentException {\n-        if ((expected.length < 2) || (expected.length != observed.length)) {\n-            throw new IllegalArgumentException(\n-                    \"observed, expected array lengths incorrect\");\n-        }\n-        if (!isPositive(expected) || !isNonNegative(observed)) {\n-            throw new IllegalArgumentException(\n-                \"observed counts must be non-negative and expected counts must be postive\");\n+public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException {\n+    if ((expected.length < 2) || (expected.length != observed.length)) {\n+        throw new IllegalArgumentException(\"observed, expected array lengths incorrect\");\n+    }\n+    if (!isPositive(expected) || !isNonNegative(expected)) {\n+        throw new IllegalArgumentException(\"expected counts must be non-negative and positive\");\n+    }\n+    double sumSq = 0.0d;\n+    for (int i = 0; i < observed.length; i++) {\n+        double diff = observed[i] - expected[i];\n+        sumSq += (diff * diff) / expected[i];\n+    }\n+    return sumSq;\n+}\n+\n+private boolean isPositive(double[] array) {\n+    for (double d : array) {\n+        if (d <= 0) {\n+            return false;\n         }\n-        double sumSq = 0.0d;\n-        double dev = 0.0d;\n-        for (int i = 0; i < observed.length; i++) {\n-                dev = ((double) observed[i] - expected[i]);\n-                sumSq += dev * dev / expected[i];\n+    }\n+    return true;\n+}\n+\n+private boolean isNonNegative(double[] array) {\n+    for (double d : array) {\n+        if (d < 0) {\n+            return false;\n         }\n-        return sumSq;\n     }\n+    return true;\n+}\n \n     /**\n      * {@inheritDoc}",
    "result_reason": "error: method isPositive(double[]) is already defined in class ChiSquareTestImpl",
    "test_result": "ERROR"
}