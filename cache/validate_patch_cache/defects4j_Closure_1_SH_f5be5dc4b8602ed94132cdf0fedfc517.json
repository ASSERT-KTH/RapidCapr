{
    "patch": "    // Do not remove unused params from object literal setters\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      return;\n    }\n\n    Node args = getFunctionArgList(function);\n    boolean isCallSiteOptimization = modifyCallSites &&\n        callSiteOptimizationWorthy(fnScope, referenced);\n\n    if (isCallSiteOptimization) {\n      callSiteOptimizer.optimize(fnScope, referenced);\n      return;\n    }\n\n    while (args.getLastChild() != null) {\n      Node arg = args.getLastChild();\n      Var var = fnScope.getVar(arg.getString());\n      if (!referenced.contains(var)) {\n        args.removeChild(arg);\n        compiler.reportCodeChange();\n      } else {\n        break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2d09568d 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,28 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Do not remove unused params from object literal setters\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      return;\n+    }\n+\n+    Node args = getFunctionArgList(function);\n+    boolean isCallSiteOptimization = modifyCallSites &&\n+        callSiteOptimizationWorthy(fnScope, referenced);\n+\n+    if (isCallSiteOptimization) {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+      return;\n+    }\n+\n+    while (args.getLastChild() != null) {\n+      Node arg = args.getLastChild();\n+      Var var = fnScope.getVar(arg.getString());\n+      if (!referenced.contains(var)) {\n+        args.removeChild(arg);\n+        compiler.reportCodeChange();\n+      } else {\n+        break;\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}