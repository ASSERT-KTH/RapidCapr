{
    "patch": "public ReturnValue execute(ParameterList params, ReturnValue values) {\n  List<Number> numberList = new ArrayList<>();\n  for (Object param : params) {\n    if (param instanceof Number) {\n      numberList.add((Number) param);\n    } else if (param instanceof List<?>) {\n      List<?> list = (List<?>) param;\n      for (Object o : list) {\n        if (o instanceof Number) {\n          numberList.add((Number) o);\n        }\n      }\n    }\n  }\n  return new ReturnValue(numberList);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}