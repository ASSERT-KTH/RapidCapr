{
    "patch": "      if (NodeUtil.isGet(lhs) || NodeUtil.isGet(rhs)) {\n        if (lhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n        Node llhs = lhs.getFirstChild();\n        if (llhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n        Node rlhs = rhs.getFirstChild();\n        if (rlhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..c34377ff 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,19 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(lhs) || NodeUtil.isGet(rhs)) {\n+        if (lhs.getLastChild().getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+        Node llhs = lhs.getFirstChild();\n+        if (llhs.getLastChild().getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+        Node rlhs = rhs.getFirstChild();\n+        if (rlhs.getLastChild().getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}