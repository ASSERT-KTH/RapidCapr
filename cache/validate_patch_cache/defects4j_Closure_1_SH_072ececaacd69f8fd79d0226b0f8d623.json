{
    "patch": "// Remove any unreferenced parameters from function declaration\nNode function = fnScope.getRootNode();\n\nPreconditions.checkState(function.isFunction());\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n    // The parameters object literal setters can not be removed.\n    return;\n}\n\nNode argList = getFunctionArgList(function);\n\n// Track removed parameters to exclude them from reference checks\nList<Node> removedArgs = new ArrayList<>();\n\nwhile (true) {\n    boolean removedOne = false;\n    for (Node arg : argList.children()) {\n        if (removedArgs.contains(arg)) {\n            continue;\n        }\n        Var var = fnScope.getVar(arg.getString());\n        if (var == null || !referenced.contains(var)) {\n            argList.removeChild(arg);\n            compiler.reportCodeChange();\n            removedArgs.add(arg);\n            removedOne = true;\n            break;\n        }\n    }\n    if (!removedOne) {\n        break;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..f1c84941 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,39 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+// Remove any unreferenced parameters from function declaration\n+Node function = fnScope.getRootNode();\n+\n+Preconditions.checkState(function.isFunction());\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+    // The parameters object literal setters can not be removed.\n+    return;\n+}\n+\n+Node argList = getFunctionArgList(function);\n+\n+// Track removed parameters to exclude them from reference checks\n+List<Node> removedArgs = new ArrayList<>();\n+\n+while (true) {\n+    boolean removedOne = false;\n+    for (Node arg : argList.children()) {\n+        if (removedArgs.contains(arg)) {\n+            continue;\n+        }\n+        Var var = fnScope.getVar(arg.getString());\n+        if (var == null || !referenced.contains(var)) {\n+            argList.removeChild(arg);\n+            compiler.reportCodeChange();\n+            removedArgs.add(arg);\n+            removedOne = true;\n+            break;\n+        }\n+    }\n+    if (!removedOne) {\n+        break;\n+    }\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}