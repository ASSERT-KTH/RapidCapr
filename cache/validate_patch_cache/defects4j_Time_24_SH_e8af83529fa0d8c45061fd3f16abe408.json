{
    "patch": "            boolean isDateTextField = false;\n            for (SavedField field : savedFields) {\n                if (field.isSaved() && field.getType().equals(DateTimeFieldType.date())) {\n                    isDateTextField = true;\n                    break;\n                }\n            }\n            if (!isDateTextField) {\n                throw e;\n            }\n            if (text != null) {\n                e.appendToMessage(\"Cannot parse \\\"\" + text + \"\\\"\");",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..cf29f3b6 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,18 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            boolean isDateTextField = false;\n+            for (SavedField field : savedFields) {\n+                if (field.isSaved() && field.getType().equals(DateTimeFieldType.date())) {\n+                    isDateTextField = true;\n+                    break;\n+                }\n+            }\n+            if (!isDateTextField) {\n+                throw e;\n+            }\n+            if (text != null) {\n+                e.appendToMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}