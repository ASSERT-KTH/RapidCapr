{
    "patch": "public static double getTypedPercent(String json) {\n    int total = 0;\n    int typed = 0;\n    //parse json to get the values of typed and total\n    try {\n        JSONObject obj = new JSONObject(json);\n        total = obj.getInt(\"total\");\n        typed = obj.getInt(\"typed\");\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n    //calculate the percentage of typed words\n    double percent = (double) typed / total * 100;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a472f5e3 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    int total = 0;\n+    int typed = 0;\n+    //parse json to get the values of typed and total\n+    try {\n+        JSONObject obj = new JSONObject(json);\n+        total = obj.getInt(\"total\");\n+        typed = obj.getInt(\"typed\");\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+    //calculate the percentage of typed words\n+    double percent = (double) typed / total * 100;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}