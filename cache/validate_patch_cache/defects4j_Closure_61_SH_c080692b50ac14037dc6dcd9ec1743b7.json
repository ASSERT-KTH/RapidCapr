{
    "patch": "if (nameNode.isQualifiedName()) {\n    Node targetNode = nameNode.getFirstChild();\n    while (targetNode.getType() == Token.GETPROP) {\n        targetNode = targetNode.getFirstChild();\n    }\n    String targetName = targetNode.getString();\n    if (targetName.equals(\"Math\") ||\n        targetName.equals(\"console\") ||\n        targetName.equals(\"JSON\") ||\n        targetName.equals(\"Reflect\") ||\n        targetName.equals(\"Proxy\") ||\n        targetName.equals(\"Symbol\") ||\n        targetName.equals(\"Intl\") ||\n        targetName.equals(\"MathML\") ||\n        targetName.equals(\"WebAssembly\") ||\n        targetName.equals(\"Performance\") ||\n        targetName.equals(\"crypto\")) {\n        return false;\n    }\n    if (targetName.equals(\"assertFunction\")) {\n        if (nameNode.getFirstChild().getQualifiedName().equals(\"goog.asserts\")) {\n            return false;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..20cd9d1c 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,31 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.isQualifiedName()) {\n+    Node targetNode = nameNode.getFirstChild();\n+    while (targetNode.getType() == Token.GETPROP) {\n+        targetNode = targetNode.getFirstChild();\n+    }\n+    String targetName = targetNode.getString();\n+    if (targetName.equals(\"Math\") ||\n+        targetName.equals(\"console\") ||\n+        targetName.equals(\"JSON\") ||\n+        targetName.equals(\"Reflect\") ||\n+        targetName.equals(\"Proxy\") ||\n+        targetName.equals(\"Symbol\") ||\n+        targetName.equals(\"Intl\") ||\n+        targetName.equals(\"MathML\") ||\n+        targetName.equals(\"WebAssembly\") ||\n+        targetName.equals(\"Performance\") ||\n+        targetName.equals(\"crypto\")) {\n+        return false;\n+    }\n+    if (targetName.equals(\"assertFunction\")) {\n+        if (nameNode.getFirstChild().getQualifiedName().equals(\"goog.asserts\")) {\n+            return false;\n+        }\n+    }\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}