{
    "patch": "    List<Node> argsToRemove = new ArrayList<>();\n    Node arg = argList.getFirstChild();\n    while (arg != null && !referenced.contains(fnScope.getVar(arg.getString()))) {\n      argsToRemove.add(arg);\n      arg = arg.getNext();\n    }\n    for (Node argToRemove : argsToRemove) {\n      argList.removeChild(argToRemove);\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2f2d2a7e 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,16 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> argsToRemove = new ArrayList<>();\n+    Node arg = argList.getFirstChild();\n+    while (arg != null && !referenced.contains(fnScope.getVar(arg.getString()))) {\n+      argsToRemove.add(arg);\n+      arg = arg.getNext();\n+    }\n+    for (Node argToRemove : argsToRemove) {\n+      argList.removeChild(argToRemove);\n+      compiler.reportCodeChange();\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}