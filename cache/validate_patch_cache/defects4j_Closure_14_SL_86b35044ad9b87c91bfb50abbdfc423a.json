{
    "patch": "if (cfa != null) {\n  Node parent = finallyNode.getParent();\n  Node finallySucc = finallyNode.getNext();\n  if (finallySucc != null && finallySucc != parent.getNext()) { // Finally not block terminated.\n    Node followNode = computeFollowNode(finallyNode, finallySucc, cfa);\n    if (followNode == null) {\n      followNode = computeFollowNode(fromNode, finallyNode.getParent(), cfa);\n    }\n    cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n    cfa.createEdge(finallyNode, Branch.UNCOND, followNode);\n  } else {\n    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, parent.getLastChild(), cfa));\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..fb7868f6 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,20 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (cfa != null) {\n+  Node parent = finallyNode.getParent();\n+  Node finallySucc = finallyNode.getNext();\n+  if (finallySucc != null && finallySucc != parent.getNext()) { // Finally not block terminated.\n+    Node followNode = computeFollowNode(finallyNode, finallySucc, cfa);\n+    if (followNode == null) {\n+      followNode = computeFollowNode(fromNode, finallyNode.getParent(), cfa);\n+    }\n+    cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+    cfa.createEdge(finallyNode, Branch.UNCOND, followNode);\n+  } else {\n+    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, parent.getLastChild(), cfa));\n+  }\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "error: variable parent is already defined in method computeFollowNode(Node,Node,ControlFlowAnalysis)",
    "test_result": "ERROR"
}