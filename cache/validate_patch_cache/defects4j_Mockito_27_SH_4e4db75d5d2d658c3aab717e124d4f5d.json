{
    "patch": "        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        CallbackFilter callbackFilter = new MockFilter();\n        Enhancer enhancer = new Enhancer();\n        enhancer.setSuperclass(mock.getClass());\n        enhancer.setInterfaces(new Class[]{Factory.class});\n        enhancer.setCallbackFilter(callbackFilter);\n        enhancer.setCallbacks(new Callback[]{newFilter, NoOp.INSTANCE});\n        T enhancedMock = (T) enhancer.create();\n        resetMockHandlers(mock, enhancedMock);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..b3c06bfe7 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        CallbackFilter callbackFilter = new MockFilter();\n+        Enhancer enhancer = new Enhancer();\n+        enhancer.setSuperclass(mock.getClass());\n+        enhancer.setInterfaces(new Class[]{Factory.class});\n+        enhancer.setCallbackFilter(callbackFilter);\n+        enhancer.setCallbacks(new Callback[]{newFilter, NoOp.INSTANCE});\n+        T enhancedMock = (T) enhancer.create();\n+        resetMockHandlers(mock, enhancedMock);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}