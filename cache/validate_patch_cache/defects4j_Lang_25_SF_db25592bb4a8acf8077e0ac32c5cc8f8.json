{
    "patch": "public static String unescapeJava(final String input) {\n    if (input == null) {\n        return null;\n    }\n    if (input.indexOf('\\\\') == -1) {\n        return input;\n    }\n\n    final int len = input.length();\n    final StringBuilder sb = new StringBuilder(len);\n    for (int i = 0; i < len; i++) {\n        char ch = input.charAt(i);\n        if (ch == '\\\\') {\n            if (++i >= len) {\n                sb.append('\\\\');\n                break;\n            }\n            ch = input.charAt(i);\n            if (ch == 'n') {\n                sb.append('\\n');\n            } else if (ch == 't') {\n                sb.append('\\t');\n            } else if (ch == 'r') {\n                sb.append('\\r');\n            } else if (ch == 'b') {\n                sb.append('\\b');\n            } else if (ch == 'f') {\n                sb.append('\\f');\n            } else if (ch == '\\\"' || ch == '\\'' || ch == '\\\\') {\n                sb.append(ch);\n            } else if ((ch >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F')) {\n                int value = Character.digit(ch, 16);\n                if (++i < len && input.charAt(i) == ch) {\n                    value = (value << 4) + Character.digit(input.charAt(i++), 16);\n                }\n                sb.append((char) value);\n            }else{\n                sb.append('\\\\');\n                sb.append(ch);\n            }\n        } else {\n            sb.append(ch);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..66a286ab 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,52 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescapeJava(final String input) {\n+    if (input == null) {\n+        return null;\n+    }\n+    if (input.indexOf('\\\\') == -1) {\n+        return input;\n+    }\n+\n+    final int len = input.length();\n+    final StringBuilder sb = new StringBuilder(len);\n+    for (int i = 0; i < len; i++) {\n+        char ch = input.charAt(i);\n+        if (ch == '\\\\') {\n+            if (++i >= len) {\n+                sb.append('\\\\');\n+                break;\n+            }\n+            ch = input.charAt(i);\n+            if (ch == 'n') {\n+                sb.append('\\n');\n+            } else if (ch == 't') {\n+                sb.append('\\t');\n+            } else if (ch == 'r') {\n+                sb.append('\\r');\n+            } else if (ch == 'b') {\n+                sb.append('\\b');\n+            } else if (ch == 'f') {\n+                sb.append('\\f');\n+            } else if (ch == '\\\"' || ch == '\\'' || ch == '\\\\') {\n+                sb.append(ch);\n+            } else if ((ch >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F')) {\n+                int value = Character.digit(ch, 16);\n+                if (++i < len && input.charAt(i) == ch) {\n+                    value = (value << 4) + Character.digit(input.charAt(i++), 16);\n+                }\n+                sb.append((char) value);\n+            }else{\n+                sb.append('\\\\');\n+                sb.append(ch);\n+            }\n+        } else {\n+            sb.append(ch);\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}