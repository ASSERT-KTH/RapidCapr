{
    "patch": "// code before the buggy infill location\n\npublic ReturnValue handle(Object target, Method method, Object[] args) {\n    if (method.isAnnotationPresent(EmptyIterable.class)) {\n        return new ReturnValue(Iterable.class, new ArrayList<>());\n    } else {\n        // implement your regular code here, e.g.\n        Object returnValue = someMethodCall(target, method, args);\n        Class<?> returnType = method.getReturnType();\n        return new ReturnValue(returnType, returnValue);\n    }\n}\n\n// code after the buggy infill location",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}