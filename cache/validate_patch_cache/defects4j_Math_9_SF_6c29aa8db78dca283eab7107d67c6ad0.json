{
    "patch": "public class Line {\n    private final Vector2D zero;\n    private final Vector2D direction;\n\n    public Line(Vector2D zero, Vector2D direction) {\n        this.zero = zero;\n        this.direction = direction;\n    }\n\n    public Line revert() {\n        return new Line(zero.add(direction), zero);\n    }\n\n    public Vector2D getZero() {\n        return zero;\n    }\n\n    public Vector2D getDirection() {\n        return direction;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Line line = (Line) o;\n        return Objects.equals(zero, line.zero) &&\n                Objects.equals(direction, line.direction);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(zero, direction);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..2a987642c 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -83,11 +83,42 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n     /** Get a line with reversed direction.\n      * @return a new instance, with reversed direction\n      */\n+public class Line {\n+    private final Vector2D zero;\n+    private final Vector2D direction;\n+\n+    public Line(Vector2D zero, Vector2D direction) {\n+        this.zero = zero;\n+        this.direction = direction;\n+    }\n+\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n-        return reverted;\n+        return new Line(zero.add(direction), zero);\n+    }\n+\n+    public Vector2D getZero() {\n+        return zero;\n+    }\n+\n+    public Vector2D getDirection() {\n+        return direction;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Line line = (Line) o;\n+        return Objects.equals(zero, line.zero) &&\n+                Objects.equals(direction, line.direction);\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(zero, direction);\n+    }\n+}\n+\n     /** Get the normalized direction vector.\n      * @return normalized direction vector\n      */",
    "result_reason": "error: class Line is already defined in package org.apache.commons.math3.geometry.euclidean.threed",
    "test_result": "ERROR"
}