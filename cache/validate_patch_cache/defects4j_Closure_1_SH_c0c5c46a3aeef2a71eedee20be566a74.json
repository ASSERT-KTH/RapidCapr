{
    "patch": "    List<Node> args = new ArrayList<>();\n    for (Node arg : argList.children()) {\n        args.add(arg);\n    }\n\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n\n    boolean lengthRemovable = !compiler.getOptions().needsTranspilation()\n        && !Compiler.createsProtoAliasForName(compiler.getOptions().getOutputFeatureSet())\n        && !compiler.getOptions().preserveDetailedSourceInfo;\n\n    Node lastArg = null;\n    for (int i = args.size() - 1; i >= 0; --i) {\n      lastArg = args.get(i);\n      Var var = fnScope.getVar(lastArg.getString());\n      if (paramsToRemove.contains(var)\n          && (lengthRemovable || !lastArg.isName() || !lastArg.getString().equals(\"length\"))) {\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();\n        if (!modifyCallers) {\n          paramsToRemove.remove(var);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..e0cdc535 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,28 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> args = new ArrayList<>();\n+    for (Node arg : argList.children()) {\n+        args.add(arg);\n+    }\n+\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+\n+    boolean lengthRemovable = !compiler.getOptions().needsTranspilation()\n+        && !Compiler.createsProtoAliasForName(compiler.getOptions().getOutputFeatureSet())\n+        && !compiler.getOptions().preserveDetailedSourceInfo;\n+\n+    Node lastArg = null;\n+    for (int i = args.size() - 1; i >= 0; --i) {\n+      lastArg = args.get(i);\n+      Var var = fnScope.getVar(lastArg.getString());\n+      if (paramsToRemove.contains(var)\n+          && (lengthRemovable || !lastArg.isName() || !lastArg.getString().equals(\"length\"))) {\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n+        if (!modifyCallers) {\n+          paramsToRemove.remove(var);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}