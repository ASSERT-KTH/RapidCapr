{
    "patch": "    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        int size = elementPairs.size();\n        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n            Separator sep = (Separator) elementPairs.get(0);\n            if (size == 2) {\n                if (notParser) {\n                    throw new IllegalStateException(\"Cannot build a formatter supporting parsing without separators\");\n                }\n                PeriodPrinter printer = (PeriodPrinter) elementPairs.get(1);\n                return new PeriodFormatter(printer, printer);\n            } else {\n                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n                if (notParser) {\n                    PeriodPrinter printer = f.getPrinter();\n                    sep = sep.finish(printer, printer);\n                    return new PeriodFormatter(sep, null);\n                } else {\n                    PeriodParser parser = f.getParser();\n                    sep = sep.finish(null, parser);\n                    return new PeriodFormatter(null, sep);\n                }\n            }\n        }\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..c15560d1 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -798,9 +798,24 @@ public class PeriodFormatterBuilder {\n         int size = elementPairs.size();\n         if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n             Separator sep = (Separator) elementPairs.get(0);\n+            if (size == 2) {\n+                if (notParser) {\n+                    throw new IllegalStateException(\"Cannot build a formatter supporting parsing without separators\");\n+                }\n+                PeriodPrinter printer = (PeriodPrinter) elementPairs.get(1);\n+                return new PeriodFormatter(printer, printer);\n+            } else {\n                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n+                if (notParser) {\n+                    PeriodPrinter printer = f.getPrinter();\n+                    sep = sep.finish(printer, printer);\n+                    return new PeriodFormatter(sep, null);\n+                } else {\n+                    PeriodParser parser = f.getParser();\n+                    sep = sep.finish(null, parser);\n+                    return new PeriodFormatter(null, sep);\n+                }\n+            }\n         }\n         Object[] comp = createComposite(elementPairs);\n         if (notPrinter) {",
    "result_reason": "error: no suitable constructor found for PeriodFormatter(PeriodPrinter,PeriodPrinter)",
    "test_result": "ERROR"
}