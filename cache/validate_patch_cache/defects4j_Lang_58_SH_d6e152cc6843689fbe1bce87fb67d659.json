{
    "patch": "                        && StringUtils.isNumeric(numeric)) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException e) {\n                            // ignore the bad number",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..663c6d16 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,11 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+                        && StringUtils.isNumeric(numeric)) {\n+                        try {\n+                            return createLong(numeric);\n+                        } catch (NumberFormatException e) {\n+                            // ignore the bad number\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "error: orphaned case",
    "test_result": "ERROR"
}