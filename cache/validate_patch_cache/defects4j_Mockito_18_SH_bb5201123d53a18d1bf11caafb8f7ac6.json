{
    "patch": "public Object execute(ExecutionContext context) throws Exception {\n    Object result = delegate.execute(context);\n    if (result == null) {\n        return null;\n    }\n    Class<?> resultType = result.getClass();\n    if (Iterable.class.isAssignableFrom(resultType)) {\n        Iterator<?> iter = ((Iterable<?>)result).iterator();\n        while (iter.hasNext()) {\n            Object item = iter.next();\n            if (item != null) {\n                return item;\n            }\n        }\n        return null;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}