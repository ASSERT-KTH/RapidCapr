{
    "patch": "        // handling unknown case\n        if (this.isUnknownType() || that.isUnknownType()) {\n            return new TypePair(this.withoutTop(), that.withoutTop());\n        }\n\n        // handling non-equal types\n        if (!this.isSubtypeOf(that) && !that.isSubtypeOf(this)) {\n            return new TypePair(this.withoutTop(), that.withoutTop());\n        }\n\n        // handling equal types\n        return new TypePair(null, null);",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..ba95f310 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,6 +703,17 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n+        // handling unknown case\n+        if (this.isUnknownType() || that.isUnknownType()) {\n+            return new TypePair(this.withoutTop(), that.withoutTop());\n+        }\n+\n+        // handling non-equal types\n+        if (!this.isSubtypeOf(that) && !that.isSubtypeOf(this)) {\n+            return new TypePair(this.withoutTop(), that.withoutTop());\n+        }\n+\n+        // handling equal types\n         return new TypePair(null, null);\n \n       case FALSE:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}