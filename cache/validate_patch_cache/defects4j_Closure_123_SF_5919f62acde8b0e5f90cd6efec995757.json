{
    "patch": "public static String fixCode(String code) {\n    String[] lines = code.split(\"\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        String line = lines[i];\n        if (line.contains(\"for\")) {\n            int index = line.indexOf(\"(\") + 1;\n            String sub = line.substring(index, line.length() - 1);\n            String[] parts = sub.split(\" \");\n            if (parts.length > 1 && parts[1].contains(\"in\")) {\n                String newSub = parts[0] + \" \" + parts[2] + \".contains(\" + parts[1] + \")\";\n                line = line.substring(0, index) + newSub + \";\";\n                lines[i] = line;\n            }\n        }\n    }\n    return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..e09c2b4e 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,23 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String[] lines = code.split(\"\\n\");\n+    for (int i = 0; i < lines.length; i++) {\n+        String line = lines[i];\n+        if (line.contains(\"for\")) {\n+            int index = line.indexOf(\"(\") + 1;\n+            String sub = line.substring(index, line.length() - 1);\n+            String[] parts = sub.split(\" \");\n+            if (parts.length > 1 && parts[1].contains(\"in\")) {\n+                String newSub = parts[0] + \" \" + parts[2] + \".contains(\" + parts[1] + \")\";\n+                line = line.substring(0, index) + newSub + \";\";\n+                lines[i] = line;\n+            }\n+        }\n+    }\n+    return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}