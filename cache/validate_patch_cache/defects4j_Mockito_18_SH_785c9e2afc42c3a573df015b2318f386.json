{
    "patch": "    @Override\n    public ReturnValue execute(Object... args) {\n        Double result = null;\n        try {\n            // parse input to double\n            double input = Double.parseDouble(args[0].toString());\n            // calculate square root\n            result = Math.sqrt(input);\n        } catch (NumberFormatException ex) {\n            return ReturnValue.exception(ex);\n        }\n\n        if (result != null && Double.isNaN(result)) {\n            return ReturnValue.exception(new IllegalArgumentException(\"Cannot calculate square root of negative number\"));\n        }\n        return ReturnValue.forValue(result);\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}