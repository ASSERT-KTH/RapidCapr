{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (n.getType() == Token.FUNCTION &&\n    parent != null &&\n    parent.getType() == Token.EXPR_RESULT) {\n  Node assign = parent.getFirstChild();\n  Node lhs = assign.getFirstChild();\n  if (lhs.getType() == Token.GETPROP &&\n      lhs.getLastChild().getString().equals(\"prototype\")) {\n    // The function is being assigned to a prototype.\n    // Don't traverse it.\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..97a0f15b 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,19 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (n.getType() == Token.FUNCTION &&\n+    parent != null &&\n+    parent.getType() == Token.EXPR_RESULT) {\n+  Node assign = parent.getFirstChild();\n+  Node lhs = assign.getFirstChild();\n+  if (lhs.getType() == Token.GETPROP &&\n+      lhs.getLastChild().getString().equals(\"prototype\")) {\n+    // The function is being assigned to a prototype.\n+    // Don't traverse it.\n+    return false;\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}