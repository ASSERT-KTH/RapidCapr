{
    "patch": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n    Collator collator = Collator.getInstance(Locale.getDefault());\n    if (searchStr.isEmpty()) {\n        return true;\n    }\n    int searchStrLength = searchStr.length();\n    for (int i = 0, end = str.length() - searchStrLength; i <= end; i++) {\n        String substring = str.substring(i, i + searchStrLength);\n        if (collator.equals(substring, searchStr)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..c525e761 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,23 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if (str == null || searchStr == null) {\n+        return false;\n+    }\n+    Collator collator = Collator.getInstance(Locale.getDefault());\n+    if (searchStr.isEmpty()) {\n+        return true;\n+    }\n+    int searchStrLength = searchStr.length();\n+    for (int i = 0, end = str.length() - searchStrLength; i <= end; i++) {\n+        String substring = str.substring(i, i + searchStrLength);\n+        if (collator.equals(substring, searchStr)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n     }\n \n     // IndexOfAny chars",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}