{
    "patch": "                if (i == count - 1 && resetFields && savedFields[i].getFieldType().equals(DateTimeFieldType.weekyear())\n                        && savedFields[i].getDifference() == 1) {\n                    DurationField field = savedFields[i].iField.getDurationField();\n                    millis = field.add(millis, -field.get(millis));\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..e096704b 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,11 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (i == count - 1 && resetFields && savedFields[i].getFieldType().equals(DateTimeFieldType.weekyear())\n+                        && savedFields[i].getDifference() == 1) {\n+                    DurationField field = savedFields[i].iField.getDurationField();\n+                    millis = field.add(millis, -field.get(millis));\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}