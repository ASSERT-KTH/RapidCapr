{
    "patch": "public Line revert() {\n    final Vector3D zero = Vector3D.ZERO;\n    final Vector3D negativeDirection = direction.negate();\n\n    double[] directionArray = direction.toArray();\n    double[] negativeDirectionArray = negativeDirection.toArray();\n\n    for(int i=0; i<directionArray.length; i++)\n    {\n        if(Double.compare(directionArray[i], negativeDirectionArray[i]) != 0)\n        {\n            negativeDirectionArray[i] = directionArray[i];\n            break;\n        }\n    }\n\n    final Vector3D newDirection = new Vector3D(negativeDirectionArray[0], negativeDirectionArray[1], negativeDirectionArray[2]);\n    final Line reverted = new Line(zero, newDirection);\n\n    return reverted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..8ee513a10 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,27 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+public Line revert() {\n+    final Vector3D zero = Vector3D.ZERO;\n+    final Vector3D negativeDirection = direction.negate();\n+\n+    double[] directionArray = direction.toArray();\n+    double[] negativeDirectionArray = negativeDirection.toArray();\n+\n+    for(int i=0; i<directionArray.length; i++)\n+    {\n+        if(Double.compare(directionArray[i], negativeDirectionArray[i]) != 0)\n+        {\n+            negativeDirectionArray[i] = directionArray[i];\n+            break;\n+        }\n+    }\n+\n+    final Vector3D newDirection = new Vector3D(negativeDirectionArray[0], negativeDirectionArray[1], negativeDirectionArray[2]);\n+    final Line reverted = new Line(zero, newDirection);\n+\n+    return reverted;\n+}\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}