{
    "patch": "        final LeastSquaresOptimizer.Optimum optimum = new LevenbergMarquardtOptimizer().optimize(\n                new OptimizationData[]{\n                        new WeightFactory(getWeights()),\n                        OptimizationData.target(getObservations()),\n                        OptimizationData.leastSquares(new Gaussian.Parametric(), guess)\n                }\n        );\n        return optimum.getPoint().toArray();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..dcdf0ac3a 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,14 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final LeastSquaresOptimizer.Optimum optimum = new LevenbergMarquardtOptimizer().optimize(\n+                new OptimizationData[]{\n+                        new WeightFactory(getWeights()),\n+                        OptimizationData.target(getObservations()),\n+                        OptimizationData.leastSquares(new Gaussian.Parametric(), guess)\n+                }\n+        );\n+        return optimum.getPoint().toArray();\n     }\n \n     /**",
    "result_reason": "error: package LeastSquaresOptimizer does not exist",
    "test_result": "ERROR"
}