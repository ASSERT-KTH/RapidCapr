{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result != null) {\n        result = result.trim();\n        if (!result.startsWith(\"*\") && stream.hasNextLine()) {\n            String nextLine = stream.getNextLine();\n            // Check if the next line starts with an asterisk\n            if (nextLine.startsWith(\"*\")) {\n                result += \" \" + nextLine.trim();\n            } else {\n                // Put back the line that was read\n                stream.putBackLine(nextLine);\n            }\n        }\n    } else {\n        throw new IllegalStateException(\"No more JSDoc comment lines\");\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..1cf60b6b 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,25 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+    if (result != null) {\n+        result = result.trim();\n+        if (!result.startsWith(\"*\") && stream.hasNextLine()) {\n+            String nextLine = stream.getNextLine();\n+            // Check if the next line starts with an asterisk\n+            if (nextLine.startsWith(\"*\")) {\n+                result += \" \" + nextLine.trim();\n+            } else {\n+                // Put back the line that was read\n+                stream.putBackLine(nextLine);\n+            }\n+        }\n+    } else {\n+        throw new IllegalStateException(\"No more JSDoc comment lines\");\n+    }\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}