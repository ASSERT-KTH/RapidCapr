{
    "patch": "        if (time == null) {\n            throw new IllegalArgumentException(\"Null 'time' argument.\");\n        }\n        if (zone == null) {\n            throw new IllegalArgumentException(\"Null 'zone' argument.\");\n        }\n        this.firstMillisecond = calculateFirstMillisecond(zone);\n        this.lastMillisecond = calculateLastMillisecond(zone);\n        this.time = new Date(firstMillisecond + (lastMillisecond - firstMillisecond) / 2);\n        this.week = calculateWeekNumber();\n        this.year = calculateYearForWeekNumber(this.week, this.time);\n        this.timeZone = zone;\n        this.locale = Locale.getDefault();",
    "patch_diff": "diff --git a/source/org/jfree/data/time/Week.java b/source/org/jfree/data/time/Week.java\nindex 3cc4138..a6d202d 100644\n--- a/source/org/jfree/data/time/Week.java\n+++ b/source/org/jfree/data/time/Week.java\n@@ -172,7 +172,19 @@ public class Week extends RegularTimePeriod implements Serializable {\n      */\n     public Week(Date time, TimeZone zone) {\n         // defer argument checking...\n-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());\n+        if (time == null) {\n+            throw new IllegalArgumentException(\"Null 'time' argument.\");\n+        }\n+        if (zone == null) {\n+            throw new IllegalArgumentException(\"Null 'zone' argument.\");\n+        }\n+        this.firstMillisecond = calculateFirstMillisecond(zone);\n+        this.lastMillisecond = calculateLastMillisecond(zone);\n+        this.time = new Date(firstMillisecond + (lastMillisecond - firstMillisecond) / 2);\n+        this.week = calculateWeekNumber();\n+        this.year = calculateYearForWeekNumber(this.week, this.time);\n+        this.timeZone = zone;\n+        this.locale = Locale.getDefault();\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}