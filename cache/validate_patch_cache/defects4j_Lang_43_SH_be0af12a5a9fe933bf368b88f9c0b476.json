{
    "patch": "        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (escapingOn && c[start] == QUOTE) {\n            next(pos);\n            return appendTo == null ? null : appendTo.append(QUOTE);\n        }\n        int lastHold = start;\n        for (int i = pos.getIndex(); i < pattern.length(); i++) {\n            boolean isEscapedQuote = escapingOn && pattern.startsWith(ESCAPED_QUOTE, i);\n            if (isEscapedQuote) {\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n                pos.setIndex(i + ESCAPED_QUOTE.length());\n                lastHold = pos.getIndex();\n            } else if (c[pos.getIndex()] == QUOTE) {\n                next(pos);\n                return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n            } else {\n                next(pos);\n            }\n        }\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..1e5184fa 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,28 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+        int start = pos.getIndex();\n+        char[] c = pattern.toCharArray();\n+        if (escapingOn && c[start] == QUOTE) {\n+            next(pos);\n+            return appendTo == null ? null : appendTo.append(QUOTE);\n+        }\n+        int lastHold = start;\n+        for (int i = pos.getIndex(); i < pattern.length(); i++) {\n+            boolean isEscapedQuote = escapingOn && pattern.startsWith(ESCAPED_QUOTE, i);\n+            if (isEscapedQuote) {\n+                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n+                pos.setIndex(i + ESCAPED_QUOTE.length());\n+                lastHold = pos.getIndex();\n+            } else if (c[pos.getIndex()] == QUOTE) {\n+                next(pos);\n+                return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n+            } else {\n+                next(pos);\n+            }\n+        }\n+        throw new IllegalArgumentException(\n+                \"Unterminated quoted string at position \" + start);\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: variable start is already defined in method appendQuotedString(String,ParsePosition,StringBuffer,boolean)",
    "test_result": "ERROR"
}