{
    "patch": "        TimeSeries clone;\n        try {\n            clone = (TimeSeries) super.clone();\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }\n        clone.timePeriodClass = timePeriodClass;\n        clone.data = new java.util.ArrayList();\n        for (int i = 0; i < getItemCount(); i++) {\n            try {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) getDataItem(i).clone();\n                clone.add(item);\n            } catch (IllegalArgumentException ex) {\n                continue;\n            } catch (SeriesException ex) {\n                throw new AssertionError();\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..ef08692 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        TimeSeries clone;\n+        try {\n+            clone = (TimeSeries) super.clone();\n+        } catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e);\n+        }\n+        clone.timePeriodClass = timePeriodClass;\n+        clone.data = new java.util.ArrayList();\n+        for (int i = 0; i < getItemCount(); i++) {\n+            try {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) getDataItem(i).clone();\n+                clone.add(item);\n+            } catch (IllegalArgumentException ex) {\n+                continue;\n+            } catch (SeriesException ex) {\n+                throw new AssertionError();\n+            }\n+        }\n         return clone;\n     }\n ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}