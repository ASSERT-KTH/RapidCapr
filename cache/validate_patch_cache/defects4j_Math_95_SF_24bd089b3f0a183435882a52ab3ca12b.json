{
    "patch": "    protected double getInitialDomain(double p) {\n        double ret;\n        double d = getDenominatorDegreesOfFreedom();\n        if (d <= 2) {\n            ret = Double.NaN;\n        } else {\n            // use mean\n            ret = d / (d - 2.0);\n        }\n        return ret;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\nindex e19e97aef..9e29c8aec 100644\n--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n@@ -143,8 +143,12 @@ public class FDistributionImpl\n     protected double getInitialDomain(double p) {\n         double ret;\n         double d = getDenominatorDegreesOfFreedom();\n+        if (d <= 2) {\n+            ret = Double.NaN;\n+        } else {\n             // use mean\n             ret = d / (d - 2.0);\n+        }\n         return ret;\n     }\n     ",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.975> but was:<NaN>",
    "test_result": "FAIL"
}