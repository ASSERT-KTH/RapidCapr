{
    "patch": "public class ForLoopBugFix {\n\n  public static String printInOperatorInForLoop(boolean c, Object[] d) {\n    String result = \"\";\n    for(int a = (c ? 0 : ((0 in d) ? 0 : 1)); ; a++) { \n      result += \"foo()\";\n      if(a >= 3) {\n        break;\n      }\n    }\n    return \"for(a=c?\" + (c ? \"0\" : \"[((0 in d)?0:1)]\") + \"; ;)\" + result;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..541e95b9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,19 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class ForLoopBugFix {\n+\n+  public static String printInOperatorInForLoop(boolean c, Object[] d) {\n+    String result = \"\";\n+    for(int a = (c ? 0 : ((0 in d) ? 0 : 1)); ; a++) { \n+      result += \"foo()\";\n+      if(a >= 3) {\n+        break;\n+      }\n+    }\n+    return \"for(a=c?\" + (c ? \"0\" : \"[((0 in d)?0:1)]\") + \"; ;)\" + result;\n+  }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}