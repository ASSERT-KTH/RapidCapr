{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int p1 = str.indexOf(\"_\");\n    int p2 = -1;\n    int p3 = -1;\n    if (p1 == -1) {\n        return new Locale(str);\n    }\n    if (p1 + 1 >= len || !Character.isLowerCase(str.charAt(p1 + 1))) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    p2 = str.indexOf(\"_\", p1 + 1);\n    if (p2 == -1) {\n        return new Locale(str.substring(0, p1), str.substring(p1 + 1));\n    }\n    if (p2 + 1 >= len || (!Character.isUpperCase(str.charAt(p2 + 1)) && !str.substring(p2 + 1).isEmpty())) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    p3 = str.indexOf(\"_\", p2 + 1);\n    if (p3 == -1) {\n        return new Locale(str.substring(0, p1), str.substring(p1 + 1, p2), str.substring(p2 + 1));\n    }\n    if (p3 + 1 >= len || !Character.isUpperCase(str.charAt(p3 + 1))) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (p3 + 1 < len && str.indexOf(\"_\", p3 + 1) != -1) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, p1), str.substring(p1 + 1, p2), str.substring(p2 + 1, p3), len > p3 + 1 ? str.substring(p3 + 1) : \"\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..be2dd5bc 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,47 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+public static Locale toLocale(final String str) {\n+    if (str == null) {\n+        return null;\n     }\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    final char ch0 = str.charAt(0);\n+    final char ch1 = str.charAt(1);\n+    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int p1 = str.indexOf(\"_\");\n+    int p2 = -1;\n+    int p3 = -1;\n+    if (p1 == -1) {\n+        return new Locale(str);\n+    }\n+    if (p1 + 1 >= len || !Character.isLowerCase(str.charAt(p1 + 1))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    p2 = str.indexOf(\"_\", p1 + 1);\n+    if (p2 == -1) {\n+        return new Locale(str.substring(0, p1), str.substring(p1 + 1));\n+    }\n+    if (p2 + 1 >= len || (!Character.isUpperCase(str.charAt(p2 + 1)) && !str.substring(p2 + 1).isEmpty())) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    p3 = str.indexOf(\"_\", p2 + 1);\n+    if (p3 == -1) {\n+        return new Locale(str.substring(0, p1), str.substring(p1 + 1, p2), str.substring(p2 + 1));\n+    }\n+    if (p3 + 1 >= len || !Character.isUpperCase(str.charAt(p3 + 1))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (p3 + 1 < len && str.indexOf(\"_\", p3 + 1) != -1) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    return new Locale(str.substring(0, p1), str.substring(p1 + 1, p2), str.substring(p2 + 1, p3), len > p3 + 1 ? str.substring(p3 + 1) : \"\");\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: no suitable constructor found for Locale(String,String,String,String)",
    "test_result": "ERROR"
}