{
    "patch": "                    ret = Double.compare(real, rhs.getReal()) == 0 && Double.compare(imaginary, rhs.getImaginary()) == 0; \n    ```\nBoth of these alternatives perform a numerical comparison between the real and imaginary parts, which should correctly identify equal complex numbers",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java\nindex 3571567f8..6554f8357 100644\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n@@ -255,7 +255,9 @@ public class Complex implements Serializable  {\n                 if (rhs.isNaN()) {\n                     ret = this.isNaN();\n                 } else {\n-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); \n+                    ret = Double.compare(real, rhs.getReal()) == 0 && Double.compare(imaginary, rhs.getImaginary()) == 0; \n+    ```\n+Both of these alternatives perform a numerical comparison between the real and imaginary parts, which should correctly identify equal complex numbers\n                 }\n             } catch (ClassCastException ex) {\n                 // ignore exception",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}