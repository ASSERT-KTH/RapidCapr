{
    "patch": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class PropertyGetter {\n\n    public static String getprop(String propName) throws IOException {\n        String[] command = { \"getprop\", propName };\n        String output = \"\";\n        Process process = Runtime.getRuntime().exec(command);\n        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n        String line;\n        while ((line = reader.readLine()) != null) {\n            output += line + \"\\n\";\n        }\n        reader.close();\n        return output.trim();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..fff75b43 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class PropertyGetter {\n+\n+    public static String getprop(String propName) throws IOException {\n+        String[] command = { \"getprop\", propName };\n+        String output = \"\";\n+        Process process = Runtime.getRuntime().exec(command);\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n+        String line;\n+        while ((line = reader.readLine()) != null) {\n+            output += line + \"\\n\";\n+        }\n+        reader.close();\n+        return output.trim();\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}