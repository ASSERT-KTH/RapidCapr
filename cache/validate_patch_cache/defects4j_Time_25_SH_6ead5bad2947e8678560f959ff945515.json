{
    "patch": "                if ((offsetLocal > 0 && offsetAdjusted < 0) \n                    || (offsetLocal < 0 && offsetAdjusted > 0)) {\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        if (offsetLocal < 0 && offsetAdjusted >= 0) {\n                            return getOffset(nextLocal);\n                        } else {\n                            return offsetLocal;\n                        }\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..37e394a0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,17 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if ((offsetLocal > 0 && offsetAdjusted < 0) \n+                    || (offsetLocal < 0 && offsetAdjusted > 0)) {\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        if (offsetLocal < 0 && offsetAdjusted >= 0) {\n+                            return getOffset(nextLocal);\n+                        } else {\n+                            return offsetLocal;\n+                        }\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}