{
    "patch": "        end = Math.min(end + 1, this.data.size());\n        copy.data = new java.util.ArrayList(this.data.subList(start, end));",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..186f262 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        end = Math.min(end + 1, this.data.size());\n+        copy.data = new java.util.ArrayList(this.data.subList(start, end));\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<1> but was:<2>",
    "test_result": "FAIL"
}