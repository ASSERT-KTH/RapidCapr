{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    int prevOffset = getOffset(nextLocal - 1);\n                    int nextOffset = getOffset(nextLocal);\n                    if (prevOffset < nextOffset) {\n                        return prevOffset;\n                    } else {\n                        return nextOffset;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..5d9e6d7a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    int prevOffset = getOffset(nextLocal - 1);\n+                    int nextOffset = getOffset(nextLocal);\n+                    if (prevOffset < nextOffset) {\n+                        return prevOffset;\n+                    } else {\n+                        return nextOffset;\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}