{
    "patch": "        if ((offsetLocal - offsetAdjusted) < 0) {\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted) {\n                return offsetLocal;\n            }\n            int diff = offsetAdjusted - getOffset(nextLocal);\n            for (long i = nextLocal; i < nextAdjusted; i = nextTransition(i + diff)) {\n                diff = offsetAdjusted - getOffset(i);\n            }\n            return diff;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..bfc69531 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if ((offsetLocal - offsetAdjusted) < 0) {\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextLocal != nextAdjusted) {\n+                return offsetLocal;\n+            }\n+            int diff = offsetAdjusted - getOffset(nextLocal);\n+            for (long i = nextLocal; i < nextAdjusted; i = nextTransition(i + diff)) {\n+                diff = offsetAdjusted - getOffset(i);\n+            }\n+            return diff;\n+        }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}