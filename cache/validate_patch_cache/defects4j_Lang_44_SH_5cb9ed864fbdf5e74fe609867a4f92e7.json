{
    "patch": "if (val == null || val.isEmpty()) {\n    return null;\n}\nint startIndex = 0;\nif (val.charAt(0) == '-') {\n    if (val.length() == 1) {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    }\n    startIndex = 1;\n}\nif (val.charAt(startIndex) == '0' && val.length() > startIndex + 1 && val.charAt(startIndex + 1) != '.') {\n    throw new NumberFormatException(val + \" is not a valid number.\");\n}\nif (val.startsWith(\"--\")) {\n    // this is protection for poorness in java.lang.BigDecimal.\n    // it accepts this as a legal value, but it does not appear \n    // to be in specification of class. OS X Java parses it to \n    // a wrong value.\n    return null;\n}\nif (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n    return createInteger(val);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..ed5e8d79 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,29 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val == null || val.isEmpty()) {\n+    return null;\n+}\n+int startIndex = 0;\n+if (val.charAt(0) == '-') {\n+    if (val.length() == 1) {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    }\n+    startIndex = 1;\n+}\n+if (val.charAt(startIndex) == '0' && val.length() > startIndex + 1 && val.charAt(startIndex + 1) != '.') {\n+    throw new NumberFormatException(val + \" is not a valid number.\");\n+}\n+if (val.startsWith(\"--\")) {\n+    // this is protection for poorness in java.lang.BigDecimal.\n+    // it accepts this as a legal value, but it does not appear \n+    // to be in specification of class. OS X Java parses it to \n+    // a wrong value.\n+    return null;\n+}\n+if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n+    return createInteger(val);\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "java.lang.NumberFormatException: 0xFADE is not a valid number.",
    "test_result": "FAIL"
}