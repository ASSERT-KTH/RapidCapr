{
    "patch": "    if (n == null || !NodeUtil.isExprCall(n.getParent())) {\n      return false;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..b09881ef 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,9 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    if (n == null || !NodeUtil.isExprCall(n.getParent())) {\n+      return false;\n+    }\n   }\n \n   /**",
    "result_reason": "error: missing return statement",
    "test_result": "ERROR"
}