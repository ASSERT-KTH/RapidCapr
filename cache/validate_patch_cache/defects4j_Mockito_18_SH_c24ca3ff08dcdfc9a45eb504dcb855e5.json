{
    "patch": "MockMvcRequestSpecification specification = given()\n        .contentType(ContentType.JSON)\n        .accept(ContentType.JSON)\n        .header(\"Authorization\", \"Bearer \" + token);\n\nResponseValues values = when()\n        .get(\"/api/users/\" + userId + \"/permissions\", specification)\n        .then()\n        .statusCode(HttpStatus.OK.value())\n        .extract()\n        .response()\n        .as(ResponseValues.class);\n\nassertNotNull(values);\nassertNotNull(values.returnValueFor(Iterable.class));\n\nIterable<UserPermission> permissions = values.returnValueFor(Iterable.class);\n\nList<String> permissionNames = StreamSupport.stream(permissions.spliterator(), false)\n        .map(UserPermission::getName)\n        .collect(Collectors.toList());\n\nassertTrue(permissionNames.containsAll(expectedPermissions));\nassertTrue(expectedPermissions.containsAll(permissionNames));",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}