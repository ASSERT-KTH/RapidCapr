{
    "patch": "public static double find_zero(List<Double> xs) {\n    double start = -1.0;\n    double end = 1.0;\n\n    while (poly(xs, start) * poly(xs, end) > 0) {\n        start *= 2.0;\n        end *= 2.0;\n    }\n\n    double eps = 1e-10;\n    double mid = 0.0;\n    while (Math.abs(start - end) > eps) {\n        mid = start + (end - start) / 2.0;\n\n        double f_mid = poly(xs, mid);\n        if (f_mid == 0) {\n            return mid;\n        }\n\n        if (poly(xs, start) * f_mid < 0) {\n            end = mid;\n        } else {\n            start = mid;\n        }\n    }\n\n    return mid;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..bb27b8b 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -11,23 +11,32 @@ public class FIND_ZERO {\n         return sum;\n     }\n \n-    public static double find_zero(List<Double> xs){\n-        double begin = -1.;\n-        double end = 1.;\n+public static double find_zero(List<Double> xs) {\n+    double start = -1.0;\n+    double end = 1.0;\n \n-        while (poly(xs, begin) * poly(xs, end) > 0) {\n-            begin *= 2.;\n-            end *= 2.;\n+    while (poly(xs, start) * poly(xs, end) > 0) {\n+        start *= 2.0;\n+        end *= 2.0;\n+    }\n+\n+    double eps = 1e-10;\n+    double mid = 0.0;\n+    while (Math.abs(start - end) > eps) {\n+        mid = start + (end - start) / 2.0;\n+\n+        double f_mid = poly(xs, mid);\n+        if (f_mid == 0) {\n+            return mid;\n         }\n-        while (end - begin > 1e-10) {\n-            double center = (begin + end) / 2.;\n-            \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n-                begin = center;\n-            } else {\n-                end = center;\n-            }\n+\n+        if (poly(xs, start) * f_mid < 0) {\n+            end = mid;\n+        } else {\n+            start = mid;\n         }\n-        return begin;\n     }\n+\n+    return mid;\n+}\n }",
    "result_reason": "   TEST_FIND_ZERO.test_5:57",
    "test_result": "FAIL"
}