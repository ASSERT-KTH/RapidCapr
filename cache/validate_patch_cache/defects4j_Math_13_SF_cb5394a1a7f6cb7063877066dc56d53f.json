{
    "patch": "        if (m.getColumnDimension() > 1000) {\n            throw new IllegalArgumentException(\"Matrix too large for eigen decomposition.\");\n        }\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        return dec.getSquareRoot();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..1869598a6 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,9 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+        if (m.getColumnDimension() > 1000) {\n+            throw new IllegalArgumentException(\"Matrix too large for eigen decomposition.\");\n+        }\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        return dec.getSquareRoot();\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}