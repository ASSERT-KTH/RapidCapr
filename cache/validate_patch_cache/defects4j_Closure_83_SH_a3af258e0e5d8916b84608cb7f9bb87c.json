{
    "patch": "    List<DiGraphEdge<Node, Branch>> outEdges = getCfg().getOutEdges(cfgNode);\n    for (DiGraphEdge<Node, Branch> outEdge : outEdges) {\n      Branch outBranch = outEdge.getValue();\n      if (outBranch != null && outBranch == Branch.ON_EX) {\n        return true;\n      }\n    }\n    return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..e094aace 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,14 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+    List<DiGraphEdge<Node, Branch>> outEdges = getCfg().getOutEdges(cfgNode);\n+    for (DiGraphEdge<Node, Branch> outEdge : outEdges) {\n+      Branch outBranch = outEdge.getValue();\n+      if (outBranch != null && outBranch == Branch.ON_EX) {\n+        return true;\n+      }\n+    }\n+    return false;\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}