{
    "patch": "        if (source.length() - pos.getIndex() >= getImaginaryCharacter().length() &&\n            source.substring(pos.getIndex(), pos.getIndex() + getImaginaryCharacter().length()).compareTo(getImaginaryCharacter()) == 0) {\n            pos.setIndex(pos.getIndex() + getImaginaryCharacter().length());\n        } else {",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/ComplexFormat.java b/src/java/org/apache/commons/math/complex/ComplexFormat.java\nindex b404bc415..7d675f122 100644\n--- a/src/java/org/apache/commons/math/complex/ComplexFormat.java\n+++ b/src/java/org/apache/commons/math/complex/ComplexFormat.java\n@@ -374,7 +374,10 @@ public class ComplexFormat extends Format implements Serializable {\n         int n = getImaginaryCharacter().length();\n         startIndex = pos.getIndex();\n         int endIndex = startIndex + n;\n-        if (\n+        if (source.length() - pos.getIndex() >= getImaginaryCharacter().length() &&\n+            source.substring(pos.getIndex(), pos.getIndex() + getImaginaryCharacter().length()).compareTo(getImaginaryCharacter()) == 0) {\n+            pos.setIndex(pos.getIndex() + getImaginaryCharacter().length());\n+        } else {\n             source.substring(startIndex, endIndex).compareTo(\n             getImaginaryCharacter()) != 0) {\n             // set index back to initial, error index should be the start index",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}