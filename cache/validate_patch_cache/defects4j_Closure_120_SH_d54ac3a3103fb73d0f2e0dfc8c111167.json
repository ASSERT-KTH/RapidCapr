{
    "patch": "      Reference ref = getOneAndOnlyAssignment();\n      if (ref == null) {\n        return false;\n      }\n\n      // Make sure this assignment is not in a loop.\n      for (BasicBlock block = ref.getBasicBlock();\n           block != null; block = block.getParent()) {\n        if (block.isFunction) {\n          break;\n        } else if (block.isLoop) {\n          // Check whether the only assignment is the initialization of a loop variable.\n          if (ref.isSimpleAssignmentToName() && block.getInitializers().contains(ref.getTarget())) {\n            return true;\n          }\n          return false;\n        }\n      }\n\n      return true;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..5d6880f1 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,27 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+      Reference ref = getOneAndOnlyAssignment();\n+      if (ref == null) {\n+        return false;\n+      }\n+\n+      // Make sure this assignment is not in a loop.\n+      for (BasicBlock block = ref.getBasicBlock();\n+           block != null; block = block.getParent()) {\n+        if (block.isFunction) {\n+          break;\n+        } else if (block.isLoop) {\n+          // Check whether the only assignment is the initialization of a loop variable.\n+          if (ref.isSimpleAssignmentToName() && block.getInitializers().contains(ref.getTarget())) {\n+            return true;\n+          }\n+          return false;\n+        }\n+      }\n+\n+      return true;\n+    }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}