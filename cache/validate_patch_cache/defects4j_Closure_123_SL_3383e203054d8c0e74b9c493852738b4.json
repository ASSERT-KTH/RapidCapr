{
    "patch": "    public static String jsToString(Object obj, Context lhsContext) {\n        if (obj == null) {\n            return \"null\";\n        } else if (obj instanceof CharSequence) {\n            String str = obj.toString().replace(\"\\\"\", \"\\\\\\\"\");\n            return \"\\\"\" + str + \"\\\"\";\n        } else if (obj instanceof Number || obj instanceof Boolean) {\n            return obj.toString();\n        } else if (obj instanceof Scriptable) {\n            Context rhsContext = Context.OTHER; // infilled line\n            Scriptable rhsObj = (Scriptable) obj;\n            if (rhsObj instanceof NativeArray) {\n                rhsContext = Context.NUMERIC;\n                Object[] d = ((NativeArray) rhsObj).getIds();\n                for(int i = 0; i < d.length; ++i) {\n                    Object index = d[i];\n                    if (!(index instanceof Number)) {\n                        rhsContext = Context.OTHER;\n                        break;\n                    }\n                }\n            } else if (lhsContext == Context.NUMERIC) {\n                rhsContext = Context.NUMERIC;\n            }\n            Object[] ids = rhsObj.getIds();\n            String[] properties = new String[ids.length];\n            boolean numericProperties = true;\n            for (int i = 0; i < ids.length; ++i) {\n                Object index = ids[i];\n                if (!(index instanceof String)) {\n                    numericProperties = false;\n                    break;\n                }\n                properties[i] = (String) index;\n            }\n            StringBuilder sb = new StringBuilder();\n            if (numericProperties) {\n                if (rhsContext ==Context.NUMERIC) { // checking if rhsContext is equal to numeric context\n                    sb.append(\"[\");\n                    boolean first = true;\n                    for (int i = 0; i < ids.length; ++i) {\n                        if (!first) {\n                            sb.append(\",\");\n                        }\n                        Object value = rhsObj.get(ids[i].toString(), rhsObj);\n                        sb.append(jsToString(value, rhsContext));\n                        first = false;\n                    }\n                    sb.append(\"]\");\n                } else {\n                    // lhsContext is numeric, but rhsContext is OTHER\n                    sb.append(\"{\");\n                   \n                    for (int i = 0; i < ids.length; ++i) {\n                        if (i > 0) {\n                            sb.append(\",\");\n                        }\n                        Object value = rhsObj.get(ids[i].toString(), rhsObj);\n                        sb.append(\"\\\"\");\n                        sb.append(ids[i].toString());\n                        sb.append(\"\\\":\");\n                        sb.append(jsToString(value, rhsContext));\n                    }\n                    sb.append(\"}\");\n                }\n            } else {\n                sb.append(\"{\");\n               \n                for (int i = 0; i < ids.length; ++i) {\n                    if (i > 0) {\n                        sb.append(\",\");\n                    }\n                    String property = properties[i];\n                    Object value = rhsObj.get(property, rhsObj);\n                    sb.append(\"\\\"\");\n                    sb.append(property);\n                    sb.append(\"\\\":\");\n                    sb.append(jsToString(value, rhsContext));\n                }\n                sb.append(\"}\");\n            }\n            return sb.toString();\n        } else {\n            return \"\\\"\" + obj.toString() + \"\\\"\";\n        }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}