{
    "patch": "        if (val.startsWith(\"+\")) {\n            val = val.substring(1);\n        }\n        if (val.startsWith(\"--\")) {\n            // this is protection for poorness in java.lang.BigDecimal.\n            // it accepts this as a legal value, but it does not appear\n            // to be in specification of class. OS X Java parses it to\n            // a wrong value.\n            return null;\n        }\n        if (val.startsWith(\"-\")) {\n            if (val.startsWith(\"-0x\") || val.startsWith(\"-0X\")) {\n                return createInteger(val);\n            } else if (isDigits(val.substring(1))) {\n                try {\n                    return createLong(val);\n                } catch (NumberFormatException nfe) {\n                    BigInteger bigInt = createBigInteger(val);\n                    if (bigInt.bitLength() <= 63) {\n                        return Long.valueOf(bigInt.longValue());\n                    }\n                    throw nfe;\n                }\n            }\n        } else {\n            if (val.startsWith(\"0x\") || val.startsWith(\"0X\")) {\n                return createInteger(val);\n            } else if (val.startsWith(\"0\") && val.length() > 1) {\n                if (isOctalNumber(val)) {\n                    return createInteger(val);\n                }\n            } else if (isDigits(val)) {\n                try {\n                    return createLong(val);\n                } catch (NumberFormatException nfe) {\n                    BigInteger bigInt = createBigInteger(val);\n                    if (bigInt.bitLength() <= 63) {\n                        return Long.valueOf(bigInt.longValue());\n                    }\n                    throw nfe;\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..24d45aae 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,49 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.startsWith(\"+\")) {\n+            val = val.substring(1);\n+        }\n+        if (val.startsWith(\"--\")) {\n+            // this is protection for poorness in java.lang.BigDecimal.\n+            // it accepts this as a legal value, but it does not appear\n+            // to be in specification of class. OS X Java parses it to\n+            // a wrong value.\n+            return null;\n+        }\n+        if (val.startsWith(\"-\")) {\n+            if (val.startsWith(\"-0x\") || val.startsWith(\"-0X\")) {\n+                return createInteger(val);\n+            } else if (isDigits(val.substring(1))) {\n+                try {\n+                    return createLong(val);\n+                } catch (NumberFormatException nfe) {\n+                    BigInteger bigInt = createBigInteger(val);\n+                    if (bigInt.bitLength() <= 63) {\n+                        return Long.valueOf(bigInt.longValue());\n+                    }\n+                    throw nfe;\n+                }\n+            }\n+        } else {\n+            if (val.startsWith(\"0x\") || val.startsWith(\"0X\")) {\n+                return createInteger(val);\n+            } else if (val.startsWith(\"0\") && val.length() > 1) {\n+                if (isOctalNumber(val)) {\n+                    return createInteger(val);\n+                }\n+            } else if (isDigits(val)) {\n+                try {\n+                    return createLong(val);\n+                } catch (NumberFormatException nfe) {\n+                    BigInteger bigInt = createBigInteger(val);\n+                    if (bigInt.bitLength() <= 63) {\n+                        return Long.valueOf(bigInt.longValue());\n+                    }\n+                    throw nfe;\n+                }\n+            }\n+        }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}