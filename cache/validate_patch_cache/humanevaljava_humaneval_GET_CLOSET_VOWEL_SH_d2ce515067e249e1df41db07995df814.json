{
    "patch": "\n        int minDist = Integer.MAX_VALUE;\n        String res = \"\";\n        for(int i = 0; i < word.length(); i++) {\n            if(vowels.contains(word.charAt(i))) {\n                int dist = Math.abs(i - (word.length() / 2));\n                if(dist < minDist) {\n                    minDist = dist;\n                    res = word.substring(i, i + 1);\n                }\n            }\n        }\n        return res;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\nindex 885eb35..e9bdbd8 100644\n--- a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n+++ b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n@@ -23,7 +23,19 @@ public class GET_CLOSET_VOWEL {\n     public static String get_closet_vowel(String word) {\n         if(word.length() < 3) return \"\";\n         ArrayList<Character> vowels = new ArrayList<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));\n-        for(int i = word.length() - 2; i >= 0; i--) {\n+\n+        int minDist = Integer.MAX_VALUE;\n+        String res = \"\";\n+        for(int i = 0; i < word.length(); i++) {\n+            if(vowels.contains(word.charAt(i))) {\n+                int dist = Math.abs(i - (word.length() / 2));\n+                if(dist < minDist) {\n+                    minDist = dist;\n+                    res = word.substring(i, i + 1);\n+                }\n+            }\n+        }\n+        return res;\n             if(vowels.contains(word.charAt(i))) {\n                 if(!vowels.contains(word.charAt(i + 1)) && !vowels.contains(word.charAt(i - 1))) {\n                     return word.substring(i, i + 1);",
    "result_reason": " /tmp/humaneval-GET_CLOSET_VOWEL/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java:[45,9] illegal start of type",
    "test_result": "ERROR"
}