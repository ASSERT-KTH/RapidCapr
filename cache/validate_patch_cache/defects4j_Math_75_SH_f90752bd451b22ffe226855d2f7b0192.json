{
    "patch": "        if (v instanceof Comparable<?>) {\n            if (contains(v)) {\n                int rank = 0;\n                for (T i : data) {\n                    if (((Comparable<?>) i).compareTo(v) < 0) {\n                        rank++;\n                    }\n                }\n                return (double) rank / (double) data.size();\n            }\n        }\n        return Double.NaN;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..7493fa03a 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,18 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+        if (v instanceof Comparable<?>) {\n+            if (contains(v)) {\n+                int rank = 0;\n+                for (T i : data) {\n+                    if (((Comparable<?>) i).compareTo(v) < 0) {\n+                        rank++;\n+                    }\n+                }\n+                return (double) rank / (double) data.size();\n+            }\n+        }\n+        return Double.NaN;\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}