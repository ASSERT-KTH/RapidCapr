{
    "patch": "if (n.isExprResult() && n.getFirstChild().isAssign()\n              && NodeUtil.isNormalGet(n.getFirstFirstChild())) {\n            Var var = getVarForNameNode(n.getFirstChild().getFirstChild());\n            if (var != null && var.reachesOutsideFunction()) {\n              return true;\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..076a7de2 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,13 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n.isExprResult() && n.getFirstChild().isAssign()\n+              && NodeUtil.isNormalGet(n.getFirstFirstChild())) {\n+            Var var = getVarForNameNode(n.getFirstChild().getFirstChild());\n+            if (var != null && var.reachesOutsideFunction()) {\n+              return true;\n+            }\n+          }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}