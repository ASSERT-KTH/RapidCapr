{
    "patch": "        List<Throwable> exceptions = new ArrayList<>();\n        for (int i = 0; i < count; i++) {\n            try {\n                millis = savedFields[i].set(millis, resetFields);\n            } catch (IllegalFieldValueException e) {\n                exceptions.add(e);\n            }\n        }\n\n        if (!exceptions.isEmpty()) {\n            String message = formatIllegalFieldValueException(exceptions, text);\n            throw new IllegalArgumentException(message, exceptions.get(0));",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1fe87a41 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,18 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        List<Throwable> exceptions = new ArrayList<>();\n+        for (int i = 0; i < count; i++) {\n+            try {\n+                millis = savedFields[i].set(millis, resetFields);\n+            } catch (IllegalFieldValueException e) {\n+                exceptions.add(e);\n+            }\n+        }\n+\n+        if (!exceptions.isEmpty()) {\n+            String message = formatIllegalFieldValueException(exceptions, text);\n+            throw new IllegalArgumentException(message, exceptions.get(0));\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}