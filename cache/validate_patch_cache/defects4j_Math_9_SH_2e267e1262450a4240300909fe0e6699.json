{
    "patch": "        final Point newZero = new Point(zero.getX().doubleValue(), zero.getY().doubleValue(), zero.getZ().doubleValue());\n        final Point newDir = new Point(direction.getX().doubleValue(), direction.getY().doubleValue(), direction.getZ().doubleValue());\n        final Line reverted = new Line(newZero, newZero.subtract(newDir));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..752a5513a 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,9 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+        final Point newZero = new Point(zero.getX().doubleValue(), zero.getY().doubleValue(), zero.getZ().doubleValue());\n+        final Point newDir = new Point(direction.getX().doubleValue(), direction.getY().doubleValue(), direction.getZ().doubleValue());\n+        final Line reverted = new Line(newZero, newZero.subtract(newDir));\n         return reverted;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}