{
    "patch": "        if (!child.isString() && !child.isNumber()) {\n          continue;\n        }\n\n        // We should never see a mix of numbers and strings.\n        String name = child.getString();\n        if (child.isNumber()) {\n          name = Double.toString(child.getDouble());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..4dc0fd91 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,14 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        if (!child.isString() && !child.isNumber()) {\n+          continue;\n+        }\n+\n+        // We should never see a mix of numbers and strings.\n+        String name = child.getString();\n+        if (child.isNumber()) {\n+          name = Double.toString(child.getDouble());\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}