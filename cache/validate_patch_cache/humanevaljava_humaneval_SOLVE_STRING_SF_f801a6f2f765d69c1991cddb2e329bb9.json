{
    "patch": "public static String solve_string(String s) {\n    boolean hasLowerCase = false;\n    StringBuilder sb = new StringBuilder(s.length()); // initialize with capacity for efficiency\n    for (char c : s.toCharArray()) {\n        if (Character.isLowerCase(c)) {\n            hasLowerCase = true;\n            sb.append(Character.toUpperCase(c));\n        } else {\n            sb.append(Character.toLowerCase(c));",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SOLVE_STRING.java b/src/main/java/humaneval/buggy/SOLVE_STRING.java\nindex e31e9a2..2a6ca47 100644\n--- a/src/main/java/humaneval/buggy/SOLVE_STRING.java\n+++ b/src/main/java/humaneval/buggy/SOLVE_STRING.java\n@@ -11,18 +11,13 @@ package humaneval.buggy;\n // solve(\"#a@C\") = \"#A@c\"\n \n public class SOLVE_STRING {\n-    public static String solve_string(String s) {\n-        int flg = 0;\n-        StringBuilder sb = new StringBuilder();\n-        for (char c : s.toCharArray()) {\n-            if (Character.isLowerCase(c)) sb.append(Character.toUpperCase(c));\n-            else sb.append(Character.toLowerCase(c));\n-            flg = 1;\n-        }\n-        if (flg == 0) {\n-            sb = new StringBuilder();\n-            for (int i = s.length() - 1; i >= 0; i -= 1) sb.append(s.charAt(i));\n-        }\n-        return sb.toString();\n-    }\n+public static String solve_string(String s) {\n+    boolean hasLowerCase = false;\n+    StringBuilder sb = new StringBuilder(s.length()); // initialize with capacity for efficiency\n+    for (char c : s.toCharArray()) {\n+        if (Character.isLowerCase(c)) {\n+            hasLowerCase = true;\n+            sb.append(Character.toUpperCase(c));\n+        } else {\n+            sb.append(Character.toLowerCase(c));\n }",
    "result_reason": " /tmp/humaneval-SOLVE_STRING/src/main/java/humaneval/buggy/SOLVE_STRING.java:[23,2] reached end of file while parsing",
    "test_result": "ERROR"
}