{
    "patch": "    // Don't try to minimize the exits of finally blocks, as this can cause\n    // problems if it changes the completion type of the finally block.\n    // See ECMA 262 Sections 8.9 & 12.14\n    if (NodeUtil.hasFinally(n)) {\n      Preconditions.checkState(n.isTry());\n      Node finallyBlock = n.getLastChild();\n      tryMinimizeExits(finallyBlock, exitType, labelName);\n      return;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..2570d882 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,10 +138,15 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+    // Don't try to minimize the exits of finally blocks, as this can cause\n+    // problems if it changes the completion type of the finally block.\n+    // See ECMA 262 Sections 8.9 & 12.14\n+    if (NodeUtil.hasFinally(n)) {\n+      Preconditions.checkState(n.isTry());\n+      Node finallyBlock = n.getLastChild();\n+      tryMinimizeExits(finallyBlock, exitType, labelName);\n+      return;\n+    }\n     }\n \n     // Just a 'label'.",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}