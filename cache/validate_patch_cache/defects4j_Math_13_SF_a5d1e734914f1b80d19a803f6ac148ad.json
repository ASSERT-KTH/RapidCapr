{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    LUDecomposition lu = new LUDecomposition(m);\n    RealMatrix l = lu.getL();\n    RealMatrix u = lu.getU();\n    RealMatrix lSqrt = squareRoot(l);\n    RealMatrix uSqrt = squareRoot(u);\n    return lSqrt.multiply(uSqrt);\n}\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    EigenDecomposition eig = new EigenDecomposition(m);\n    RealMatrix v = eig.getV();\n    RealMatrix d = eig.getD();\n    RealMatrix dSqrt = squareRoot(d);\n    return v.multiply(dSqrt).multiply(v.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..da45460a3 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,20 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+private RealMatrix squareRoot(RealMatrix m) {\n+    LUDecomposition lu = new LUDecomposition(m);\n+    RealMatrix l = lu.getL();\n+    RealMatrix u = lu.getU();\n+    RealMatrix lSqrt = squareRoot(l);\n+    RealMatrix uSqrt = squareRoot(u);\n+    return lSqrt.multiply(uSqrt);\n+}\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    EigenDecomposition eig = new EigenDecomposition(m);\n+    RealMatrix v = eig.getV();\n+    RealMatrix d = eig.getD();\n+    RealMatrix dSqrt = squareRoot(d);\n+    return v.multiply(dSqrt).multiply(v.transpose());\n+}\n }",
    "result_reason": "error: method squareRoot(RealMatrix) is already defined in class AbstractLeastSquaresOptimizer",
    "test_result": "ERROR"
}