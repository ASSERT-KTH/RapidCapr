{
    "patch": "```\n} else {\n    // both offsets are negative and adjusted is greater than local\n    if ((offsetLocal - offsetAdjusted) < 0) {\n        // if we just return offsetAdjusted then the time is pushed\n        // back before the transition, whereas it should be\n        // on or after the transition\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            return offsetLocal;\n        }\n    }\n    // find the most recent transition\n    long prev = previousTransition(instantLocal - offsetAdjusted);\n    if (prev < instantAdjusted) {\n        // find the offset before the transition\n        int offsetPrev = getOffset(prev);\n        // if difference is less than the distance to the transition\n        // then the time is still in a \"gap\"\n        int diff = offsetPrev - offsetLocal;\n        if (instantAdjusted - prev <= diff) {\n            return offsetPrev;\n        }\n    }\n}\n```",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..f48e0b5a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,33 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+```\n+} else {\n+    // both offsets are negative and adjusted is greater than local\n+    if ((offsetLocal - offsetAdjusted) < 0) {\n+        // if we just return offsetAdjusted then the time is pushed\n+        // back before the transition, whereas it should be\n+        // on or after the transition\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            return offsetLocal;\n+        }\n+    }\n+    // find the most recent transition\n+    long prev = previousTransition(instantLocal - offsetAdjusted);\n+    if (prev < instantAdjusted) {\n+        // find the offset before the transition\n+        int offsetPrev = getOffset(prev);\n+        // if difference is less than the distance to the transition\n+        // then the time is still in a \"gap\"\n+        int diff = offsetPrev - offsetLocal;\n+        if (instantAdjusted - prev <= diff) {\n+            return offsetPrev;\n+        }\n+    }\n+}\n+```\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}