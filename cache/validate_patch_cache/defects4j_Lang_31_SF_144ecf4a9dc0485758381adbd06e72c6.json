{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strSize = str.length();\n    int searchLen = searchChars.length;\n    int strStart = 0;\n    int strEnd = strSize;\n    for (int i = 0; i < searchLen; i++) {\n        if (Character.isHighSurrogate(searchChars[i])) {\n            if (strStart < strEnd) {\n                int curCodePoint = Character.toCodePoint(searchChars[i], searchChars[i + 1]);\n                if (str.indexOf(curCodePoint, strStart) >= 0) {\n                    return true;\n                }\n            }\n            i++;\n        } else {\n            int idx = str.indexOf(searchChars[i], strStart);\n            if (idx >= 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..ea597fd8 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,32 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strSize = str.length();\n+    int searchLen = searchChars.length;\n+    int strStart = 0;\n+    int strEnd = strSize;\n+    for (int i = 0; i < searchLen; i++) {\n+        if (Character.isHighSurrogate(searchChars[i])) {\n+            if (strStart < strEnd) {\n+                int curCodePoint = Character.toCodePoint(searchChars[i], searchChars[i + 1]);\n+                if (str.indexOf(curCodePoint, strStart) >= 0) {\n+                    return true;\n+                }\n+            }\n+            i++;\n+        } else {\n+            int idx = str.indexOf(searchChars[i], strStart);\n+            if (idx >= 0) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}