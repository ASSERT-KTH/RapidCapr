{
    "patch": "int ch;\nwhile ((ch = in.read()) != -1) {\n    if (ch == '\\\\') {\n        success = true;\n        ch = in.read();\n        if (ch == 'n') {\n            out.write('\\n');\n            continue;\n        } else if (ch == 'r') {\n            out.write('\\r');\n            continue;\n        } else if (ch == 't') {\n            out.write('\\t');\n            continue;\n        } else if (ch == 'f') {\n            out.write('\\f');\n            continue;\n        } else if (ch == 'b') {\n            out.write('\\b');\n            continue;\n        } else if (ch == '\\\"') {\n            out.write('\\\"');\n            continue;\n        } else if (ch == '\\'') {\n            out.write('\\'');\n            continue;\n        } else if (ch == '\\\\') {\n            out.write('\\\\');\n            continue;\n        } else if (ch >= '0' && ch <= '7') {\n            // Octal encoding\n            int val = Character.digit((char) ch, 8);\n            for (int i = 0; i < 2; i++) {\n                ch = in.read();\n                if (ch >= '0' && ch <= '7') {\n                    val = (val << 3) + Character.digit((char) ch, 8);\n                } else {\n                    break;\n                }\n            }\n            out.write(val);\n            continue;\n        } else if (ch == 'u') {\n            // Unicode - expects 4 hex digits\n            out.write((char) Integer.parseInt(new String(new char[] {(char) in.read(), (char) in.read(), (char) in.read(), (char) in.read()}), 16));\n            continue;\n        } else {\n            throw new IllegalArgumentException(\"Invalid escape sequence: '\\\\\" + (char) ch + \"'\");\n        }\n    }\n    out.write(ch);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}