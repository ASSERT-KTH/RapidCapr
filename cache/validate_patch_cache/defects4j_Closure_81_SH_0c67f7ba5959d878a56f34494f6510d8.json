{
    "patch": "name = new Name();\nname.setIdentifier(\"\");\nisUnnamedFunction = true;\nint fnLineno = functionNode.getLineno();\nname.setLineno(fnLineno);\n\n// The left paren has to be on the same line as the function name.\nint fnLastLineno = functionNode.getLastLineno();\nint nameEnd = functionNode.getFunctionName().getPosition() +\n       functionNode.getFunctionName().getLength();\nint lpStart = StringUtils.indexOf(\n    functionNode.getSource(), '(', nameEnd) - functionNode.getPosition();\nname.setCharno(position2Charno(fnLineno, lpStart));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..20ee6825 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,19 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+name = new Name();\n+name.setIdentifier(\"\");\n+isUnnamedFunction = true;\n+int fnLineno = functionNode.getLineno();\n+name.setLineno(fnLineno);\n+\n+// The left paren has to be on the same line as the function name.\n+int fnLastLineno = functionNode.getLastLineno();\n+int nameEnd = functionNode.getFunctionName().getPosition() +\n+       functionNode.getFunctionName().getLength();\n+int lpStart = StringUtils.indexOf(\n+    functionNode.getSource(), '(', nameEnd) - functionNode.getPosition();\n+name.setCharno(position2Charno(fnLineno, lpStart));\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}