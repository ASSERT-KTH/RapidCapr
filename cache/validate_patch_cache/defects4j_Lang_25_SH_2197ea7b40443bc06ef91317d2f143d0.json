{
    "patch": "private static String unescape(String str) {\n    StringBuffer out = new StringBuffer();\n    int i=0;\n    while (i<str.length()) {\n        char c = str.charAt(i);\n        if (c == '\\\\' && i+1 < str.length()) {\n            char c2 = str.charAt(i+1);\n            if (c2 == '\\\"' || c2 == '\\'' || c2 == '\\\\' || c2 == 'r'\n                    || c2 == 'f' || c2 == 'n' || c2 == 't'\n                    || (c2 == 'u' && i+5 < str.length())) {\n                i++;\n                if (c2=='u') {\n                    char c3 = 0, c4 = 0, c5 = 0, c6 = 0;\n                    try {\n                        c3 = hex2char(str.charAt(i+1), str.charAt(i+2));\n                        c4 = hex2char(str.charAt(i+3), str.charAt(i+4));\n                        c5 = hex2char(str.charAt(i+5), str.charAt(i+6));\n                        c6 = hex2char(str.charAt(i+7), str.charAt(i+8));\n                    } catch (NumberFormatException ex) {}\n                    char[] tmp = { c3, c4, c5, c6 };\n                    String s = new String(tmp);\n                    out.append(s);\n                    i += 4;\n                    continue;\n                }\n                switch(c2) {\n                    case '\\\"' : out.append('\\\"'); break;\n                    case '\\'' : out.append('\\''); break;\n                    case '\\\\' : out.append('\\\\'); break;\n                    case 'r'  : out.append('\\r'); break;\n                    case 'f'  : out.append('\\f'); break;\n                    case 'n'  : out.append('\\n'); break;\n                    case 't'  : out.append('\\t'); break;\n                }\n            } else if (c2 == 'u') {\n                out.append(c); // Just append the current character\n            } else {\n                out.append(c);\n                out.append(c2);\n            }\n        } else {\n            out.append(c);\n        }\n        i++;\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}