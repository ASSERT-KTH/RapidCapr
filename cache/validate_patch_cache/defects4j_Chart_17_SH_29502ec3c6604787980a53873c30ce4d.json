{
    "patch": "    public Object clone() throws CloneNotSupportedException {\n        TimeSeries clone = null;\n        try {\n            clone = (TimeSeries) super.clone();\n            clone.timePeriodClass = timePeriodClass;\n            clone.data = new java.util.ArrayList();\n            int itemCount = getItemCount();\n            for (int i = 0; i < itemCount; i++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) getDataItem(i).clone();\n                try {\n                    clone.add(item);\n                } catch (SeriesException e) {\n                    if (itemCount == 0) {\n                        clone.data = null;\n                    }\n                    throw e;\n                }\n            }\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }\n        return clone;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..25d10a3 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,29 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+    public Object clone() throws CloneNotSupportedException {\n+        TimeSeries clone = null;\n+        try {\n+            clone = (TimeSeries) super.clone();\n+            clone.timePeriodClass = timePeriodClass;\n+            clone.data = new java.util.ArrayList();\n+            int itemCount = getItemCount();\n+            for (int i = 0; i < itemCount; i++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) getDataItem(i).clone();\n+                try {\n+                    clone.add(item);\n+                } catch (SeriesException e) {\n+                    if (itemCount == 0) {\n+                        clone.data = null;\n+                    }\n+                    throw e;\n+                }\n+            }\n+        } catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e);\n+        }\n+        return clone;\n+    }\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}