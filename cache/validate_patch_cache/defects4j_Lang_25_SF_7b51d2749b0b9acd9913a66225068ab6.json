{
    "patch": "public static String escapeUTF8(String s) {\n    StringBuilder sb = new StringBuilder();\n    CharsetEncoder encoder = Charset.forName(\"UTF-8\").newEncoder();\n    for (char c : s.toCharArray()) {\n        try {\n            if (encoder.canEncode(c)) {\n                sb.append(c);\n            } else {\n                ByteBuffer bb = encoder.encode(CharBuffer.wrap(String.valueOf(c)));\n                while (bb.hasRemaining()) {\n                    byte b = bb.get();\n                    sb.append(String.format(\"\\\\%03o\", b & 0xff));\n                }\n            }\n        } catch (CharacterCodingException e) {\n            e.printStackTrace();\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..971d1aa7 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,26 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escapeUTF8(String s) {\n+    StringBuilder sb = new StringBuilder();\n+    CharsetEncoder encoder = Charset.forName(\"UTF-8\").newEncoder();\n+    for (char c : s.toCharArray()) {\n+        try {\n+            if (encoder.canEncode(c)) {\n+                sb.append(c);\n+            } else {\n+                ByteBuffer bb = encoder.encode(CharBuffer.wrap(String.valueOf(c)));\n+                while (bb.hasRemaining()) {\n+                    byte b = bb.get();\n+                    sb.append(String.format(\"\\\\%03o\", b & 0xff));\n+                }\n+            }\n+        } catch (CharacterCodingException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}