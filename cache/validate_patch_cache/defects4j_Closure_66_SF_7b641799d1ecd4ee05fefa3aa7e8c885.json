{
    "patch": "public static double getTypedPercent(String js) {\n    int numChars = js.length();\n    int numTypedChars = 0;\n    boolean insideString = false;\n    for(int i=0; i<numChars; i++) {\n        char c = js.charAt(i);\n        if(c == '\\\"' && (i == 0 || js.charAt(i-1) != '\\\\')) {\n            insideString = !insideString;\n        } else if(!insideString) {\n            numTypedChars++;\n        }\n    }\n    return ((double) numTypedChars) / ((double) numChars) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..fe1182aa 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int numChars = js.length();\n+    int numTypedChars = 0;\n+    boolean insideString = false;\n+    for(int i=0; i<numChars; i++) {\n+        char c = js.charAt(i);\n+        if(c == '\\\"' && (i == 0 || js.charAt(i-1) != '\\\\')) {\n+            insideString = !insideString;\n+        } else if(!insideString) {\n+            numTypedChars++;\n+        }\n+    }\n+    return ((double) numTypedChars) / ((double) numChars) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}