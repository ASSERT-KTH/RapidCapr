{
    "patch": "public static String intersection(int[] interval1, int[] interval2) {\n    int l = Math.max(interval1[0], interval2[0]);\n    int r = Math.min(interval1[1], interval2[1]);\n\n    if (r < l || l == r || !is_prime(r - l)) {\n        return \"NO\";\n    }\n\n    return \"YES\";\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INTERSECTION.java b/src/main/java/humaneval/buggy/INTERSECTION.java\nindex 2955ca2..15d4550 100644\n--- a/src/main/java/humaneval/buggy/INTERSECTION.java\n+++ b/src/main/java/humaneval/buggy/INTERSECTION.java\n@@ -30,11 +30,14 @@ public class INTERSECTION {\n         }\n         return true;\n     }\n-    public static String intersection(int[] interval1, int[] interval2) {\n-        int l = Math.min(interval1[0], interval2[0]);\n-        int r = Math.max(interval1[1], interval2[1]);\n-        int length = r - l;\n-        if(length > 0 && is_prime(length)) return \"YES\";\n+public static String intersection(int[] interval1, int[] interval2) {\n+    int l = Math.max(interval1[0], interval2[0]);\n+    int r = Math.min(interval1[1], interval2[1]);\n+\n+    if (r < l || l == r || !is_prime(r - l)) {\n         return \"NO\";\n     }\n+\n+    return \"YES\";\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}