{
    "patch": "        } else if (block.getSuccessors().size() == 1) {\n          BasicBlock successor = block.getSuccessors().iterator().next();\n          if (successor.isLoopHeader() && successor.getPredecessors().size() == 1) {\n            block = successor;\n          } else {\n            break;\n          }\n        } else {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..e25947aa 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        } else if (block.getSuccessors().size() == 1) {\n+          BasicBlock successor = block.getSuccessors().iterator().next();\n+          if (successor.isLoopHeader() && successor.getPredecessors().size() == 1) {\n+            block = successor;\n+          } else {\n+            break;\n+          }\n+        } else {\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}