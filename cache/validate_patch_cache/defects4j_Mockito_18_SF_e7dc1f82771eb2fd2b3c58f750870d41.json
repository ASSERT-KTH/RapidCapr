{
    "patch": "@Test\npublic void testSumEvenNumbers() {\n    Iterable<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8);\n    int expectedSum = 20;\n    int actualSum = sumEvenNumbers(numbers);\n    assertEquals(expectedSum, actualSum);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..a0452188f 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,13 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+@Test\n+public void testSumEvenNumbers() {\n+    Iterable<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8);\n+    int expectedSum = 20;\n+    int actualSum = sumEvenNumbers(numbers);\n+    assertEquals(expectedSum, actualSum);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}