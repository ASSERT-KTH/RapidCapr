{
    "patch": "public static String strongest_extension(String class_name, String[] extensions) {\n    String strongest = null;\n    int maxDiff = Integer.MIN_VALUE;\n    for (String s : extensions) {\n        int numLower = 0;\n        int numUpper = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (Character.isLowerCase(c)) {\n                numLower++;\n            }\n            else if (Character.isUpperCase(c)) {\n                numUpper++;\n            }\n        }\n        int diff = numUpper - numLower;\n        if (diff > maxDiff || (diff == maxDiff && s.compareTo(strongest) < 0)) {\n            maxDiff = diff;\n            strongest = s;\n        }\n    }\n    return class_name + \".\" + strongest;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\nindex 7ff1563..8cb3999 100644\n--- a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n+++ b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n@@ -17,20 +17,27 @@ package humaneval.buggy;\n // for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n \n public class STRONGEST_EXTENSION {\n-    public static String strongest_extension(String class_name, String[] extensions) {\n-        String strong = null;\n-        int val = Integer.MIN_VALUE;\n-\n-        for (String s : extensions) {\n-            int CAP = 0;\n-            int SM = 0;\n-            for (char c : s.toCharArray()) {\n-                if (Character.toUpperCase(c) == c) SM += 1;\n-                if (Character.toLowerCase(c) == c) CAP += 1;\n+public static String strongest_extension(String class_name, String[] extensions) {\n+    String strongest = null;\n+    int maxDiff = Integer.MIN_VALUE;\n+    for (String s : extensions) {\n+        int numLower = 0;\n+        int numUpper = 0;\n+        for (int i = 0; i < s.length(); i++) {\n+            char c = s.charAt(i);\n+            if (Character.isLowerCase(c)) {\n+                numLower++;\n+            }\n+            else if (Character.isUpperCase(c)) {\n+                numUpper++;\n             }\n-            val = CAP - SM;\n-            strong = s;\n         }\n-        return class_name + \".\" + strong;\n+        int diff = numUpper - numLower;\n+        if (diff > maxDiff || (diff == maxDiff && s.compareTo(strongest) < 0)) {\n+            maxDiff = diff;\n+            strongest = s;\n+        }\n     }\n+    return class_name + \".\" + strongest;\n+}\n }",
    "result_reason": "   TEST_STRONGEST_EXTENSION.test_4:49 expected:<__HAHA.[-_-]> but was:<__HAHA.[123]>",
    "test_result": "FAIL"
}