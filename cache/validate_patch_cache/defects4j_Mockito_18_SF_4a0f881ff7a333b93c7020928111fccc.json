{
    "patch": "public class StringUtil {\n    public static String reverse(String input) {\n        if(input == null) return null;\n        StringBuilder output = new StringBuilder(input.length());\n        for (int i = input.length() - 1; i >= 0; i--) {\n            output.append(input.charAt(i));\n        }\n        return output.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..4d2b46b4b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,16 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public class StringUtil {\n+    public static String reverse(String input) {\n+        if(input == null) return null;\n+        StringBuilder output = new StringBuilder(input.length());\n+        for (int i = input.length() - 1; i >= 0; i--) {\n+            output.append(input.charAt(i));\n+        }\n+        return output.toString();\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}