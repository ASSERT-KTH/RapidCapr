{
    "patch": "public static boolean is_sorted(int[] lst) {\n    if(lst == null || lst.length == 0 || lst.length == 1){\n        return true;\n    }\n    int prev = lst[0];\n    int count = 1;\n    for(int i = 1; i < lst.length; i++) {\n        if(prev == lst[i]){\n            count++;\n            if(count > 2) return false;\n        }\n        else{\n            prev = lst[i];\n            count = 1;\n        }\n        if(lst[i] < prev) return false;\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..56f84f3 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,23 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n+public static boolean is_sorted(int[] lst) {\n+    if(lst == null || lst.length == 0 || lst.length == 1){\n+        return true;\n+    }\n+    int prev = lst[0];\n+    int count = 1;\n+    for(int i = 1; i < lst.length; i++) {\n+        if(prev == lst[i]){\n+            count++;\n+            if(count > 2) return false;\n         }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n+        else{\n+            prev = lst[i];\n+            count = 1;\n         }\n-        return true;\n+        if(lst[i] < prev) return false;\n     }\n+    return true;\n+}\n }",
    "result_reason": "   TEST_IS_SORTED.test_2:17 expected:<false> but was:<true>",
    "test_result": "FAIL"
}