{
    "patch": "public ReturnValue execute(Object... args) {\n    if (!(args.length == 1 && args[0] instanceof Iterable)) {\n        return new ReturnValue(new IllegalArgumentException(\"Expecting an Iterable argument\"));\n    }\n    Iterable<?> iterable = (Iterable<?>) args[0];\n    List<Object> result = new ArrayList<>();\n    for (Object obj : iterable) {\n        if (obj != null) {\n            result.add(obj);\n        }\n    }\n    return new ReturnValue(result);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}