{
    "patch": "                // we are near a DST boundary\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal == nextAdjusted) {\n                    // we are not near a gap; return the greater of the offsets\n                    return (offsetLocal >= offsetAdjusted ? offsetLocal : offsetAdjusted);\n                } else if (offsetLocal < offsetAdjusted) {\n                    // gap; return the offset before the transition\n                    return offsetLocal;\n                } else {\n                    // overlap; return the offset after the transition\n                    return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..671899c6 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // we are near a DST boundary\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal == nextAdjusted) {\n+                    // we are not near a gap; return the greater of the offsets\n+                    return (offsetLocal >= offsetAdjusted ? offsetLocal : offsetAdjusted);\n+                } else if (offsetLocal < offsetAdjusted) {\n+                    // gap; return the offset before the transition\n+                    return offsetLocal;\n+                } else {\n+                    // overlap; return the offset after the transition\n+                    return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}