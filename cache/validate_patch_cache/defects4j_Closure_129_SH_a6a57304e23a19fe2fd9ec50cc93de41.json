{
    "patch": "      Preconditions.checkState(n.isCall());\n\n      if (n.hasChildren()) {\n        Node first = n.getFirstChild();\n        if (NodeUtil.isGet(first)) {\n          Node object = first.getFirstChild();\n          resolveKnownMethods(object);\n        } else if (first.isName() && \"eval\".equals(first.getString())) {\n          first.putBooleanProp(Node.DIRECT_EVAL, true);\n        } else {\n          n.putBooleanProp(Node.FREE_CALL, true);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..52d71a1f 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,19 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      Preconditions.checkState(n.isCall());\n+\n+      if (n.hasChildren()) {\n+        Node first = n.getFirstChild();\n+        if (NodeUtil.isGet(first)) {\n+          Node object = first.getFirstChild();\n+          resolveKnownMethods(object);\n+        } else if (first.isName() && \"eval\".equals(first.getString())) {\n+          first.putBooleanProp(Node.DIRECT_EVAL, true);\n+        } else {\n+          n.putBooleanProp(Node.FREE_CALL, true);\n+        }\n+      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}