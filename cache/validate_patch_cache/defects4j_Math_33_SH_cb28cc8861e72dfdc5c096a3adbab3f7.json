{
    "patch": "    // if num artificials > 0, pivot artificial variable in\n    for (int i = 0; i < numSlackVariables; i++) {\n      final int row = i + getNumObjectiveFunctions() - 1;\n      final double entry = tableau.getEntry(row, col);\n      if (Precision.compareTo(entry, 0d, epsilon) < 0) {\n        continue;\n      }\n      RatioTest rt = new RatioTest(tableau, row, col);\n      if (!rt.test(cb)) {\n        continue;\n      }\n      rt.dividePivotRow();\n      tableau.dropPhase1Objective();\n      primalFeasible = true;\n      break;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..35cd62113 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -335,7 +335,22 @@ class SimplexTableau implements Serializable {\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+    // if num artificials > 0, pivot artificial variable in\n+    for (int i = 0; i < numSlackVariables; i++) {\n+      final int row = i + getNumObjectiveFunctions() - 1;\n+      final double entry = tableau.getEntry(row, col);\n+      if (Precision.compareTo(entry, 0d, epsilon) < 0) {\n+        continue;\n+      }\n+      RatioTest rt = new RatioTest(tableau, row, col);\n+      if (!rt.test(cb)) {\n+        continue;\n+      }\n+      rt.dividePivotRow();\n+      tableau.dropPhase1Objective();\n+      primalFeasible = true;\n+      break;\n+    }\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}