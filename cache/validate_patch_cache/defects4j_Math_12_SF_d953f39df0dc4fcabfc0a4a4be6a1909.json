{
    "patch": "public double[] distributionClone(double[] genotypeProbabilities, int M, int D, int N) {\n    double[] probs = new double[M];\n\n    for (int i = 0; i < M; i++)\n        probs[i] = genotypeProbabilities[i];\n\n    for (int i = 0; i < D; i++) {\n        double[] newProbs = new double[M];\n        for (int j = 0; j < M; j++)\n            for (int k = 0; k < M; k++)\n                newProbs[getDominant(j, k, M)] += probs[j] * genotypeProbabilities[k];\n        probs = newProbs;\n    }\n\n    double[] popDistribution = new double[N + 1];\n    for (int i = 0; i < M; i++)\n        popDistribution[populationCount(i)] += probs[i];\n\n    for (int i = 0; i <= N; i++)\n        popDistribution[i] /= Math.pow(M, D);\n\n    return popDistribution;\n}\n\nprivate int getDominant(int c1, int c2, int M) {\n    if (c2 > c1) {\n        int temp = c1;\n        c1 = c2;\n        c2 = temp;\n    }\n    return c1 * (M - c2 - 1) + c2 * (c2 + 1) / 2;\n}\n\nprivate int populationCount(int x) {\n    int c = 0;\n    while (x != 0) {\n        c++;\n        x &= x - 1;\n    }\n    return c;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}