{
    "patch": "            } catch (IllegalFieldValueException e) {\n                if (resetFields) {\n                    throw e;\n                }\n                int savemillis = (int) (millis - iMillis);\n                if (iSavedFields == savedFields) {\n                    iSavedFields = new SavedField[savedFields.length];\n                    System.arraycopy(savedFields, 0, iSavedFields, 0, savedFields.length);\n                }\n                for (int i = 0; i < count; i++) {\n                    try {\n                        savemillis = savedFields[i].set(savemillis, true);\n                    } catch (IllegalFieldValueException ex) {\n                        ex.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n                        throw ex;\n                    }\n                }\n                iMillis = savedFields[0].getField().roundFloor(millis + savemillis);\n                computeMillis(false, text);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2de8bac7 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException e) {\n+                if (resetFields) {\n+                    throw e;\n+                }\n+                int savemillis = (int) (millis - iMillis);\n+                if (iSavedFields == savedFields) {\n+                    iSavedFields = new SavedField[savedFields.length];\n+                    System.arraycopy(savedFields, 0, iSavedFields, 0, savedFields.length);\n+                }\n+                for (int i = 0; i < count; i++) {\n+                    try {\n+                        savemillis = savedFields[i].set(savemillis, true);\n+                    } catch (IllegalFieldValueException ex) {\n+                        ex.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n+                        throw ex;\n+                    }\n+                }\n+                iMillis = savedFields[0].getField().roundFloor(millis + savemillis);\n+                computeMillis(false, text);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}