{
    "patch": "public ReturnValue execute(final CodePosition<?> __position__, final ControlFrame __ctrl__) {\n    String filePath = ((String) this.calleeFrame.execute(Position.None(), __ctrl__).getStackValue());\n    try {\n        Stream<String> lines = Files.lines(Paths.get(filePath));\n        List<String> list = new ArrayList<>();\n        lines.forEach(line -> list.add(line));\n        return new ReturnValue(list);\n    } catch (IOException e) {\n        return ReturnValue.DEFAULT;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}