{
    "patch": "      if (parent.getType() == Token.LABEL || NodeUtil.isLoopStructure(parent) || NodeUtil.isSwitch(parent)) {\n        return;\n      }\n      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          defineDeclaredFunction(n, parent);\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..8ce5dae6 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1448,6 +1448,9 @@ final class TypedScopeCreator implements ScopeCreator {\n         return;\n       }\n \n+      if (parent.getType() == Token.LABEL || NodeUtil.isLoopStructure(parent) || NodeUtil.isSwitch(parent)) {\n+        return;\n+      }\n       attachLiteralTypes(n);\n       switch (n.getType()) {\n         case Token.FUNCTION:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}