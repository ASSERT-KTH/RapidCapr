{
    "patch": "            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            if (candidate != null) {\n                if (fieldInstance == null) {\n                    try {\n                        fieldInstance = awaitingInjectionClazz.newInstance();\n                    } catch (InstantiationException | IllegalAccessException e) {\n                        throw new RuntimeException(\"Could not instantiate class \" + awaitingInjectionClazz.getName(), e);\n                    }\n                }\n                try {\n                    field.setAccessible(true);\n                    field.set(fieldInstance, candidate);\n                    injectMockCandidate(awaitingInjectionClazz, mocks, fieldInstance);\n                    return;\n                } catch (IllegalAccessException e) {\n                    throw new RuntimeException(\"Failed to inject mock candidate\", e);\n                }\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..8ae029c03 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,27 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            if (candidate != null) {\n+                if (fieldInstance == null) {\n+                    try {\n+                        fieldInstance = awaitingInjectionClazz.newInstance();\n+                    } catch (InstantiationException | IllegalAccessException e) {\n+                        throw new RuntimeException(\"Could not instantiate class \" + awaitingInjectionClazz.getName(), e);\n+                    }\n+                }\n+                try {\n+                    field.setAccessible(true);\n+                    field.set(fieldInstance, candidate);\n+                    injectMockCandidate(awaitingInjectionClazz, mocks, fieldInstance);\n+                    return;\n+                } catch (IllegalAccessException e) {\n+                    throw new RuntimeException(\"Failed to inject mock candidate\", e);\n+                }\n+            }\n         }\n     }\n ",
    "result_reason": "error: multi-catch statement is not supported in -source 1.5",
    "test_result": "ERROR"
}