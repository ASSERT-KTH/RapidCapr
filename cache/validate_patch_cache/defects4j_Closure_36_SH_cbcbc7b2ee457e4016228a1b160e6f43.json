{
    "patch": "Node callNodeParent = reference.getParent().getParent();\nif (callNodeParent != null && callNodeParent.isGetProp()\n     && compiler.getCodingConvention().isSingletonGetter(callNodeParent)\n     && reference.getParent() == callNodeParent.getLastChild()) {\n       return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..aebc72fb 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,12 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+Node callNodeParent = reference.getParent().getParent();\n+if (callNodeParent != null && callNodeParent.isGetProp()\n+     && compiler.getCodingConvention().isSingletonGetter(callNodeParent)\n+     && reference.getParent() == callNodeParent.getLastChild()) {\n+       return false;\n+}\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}