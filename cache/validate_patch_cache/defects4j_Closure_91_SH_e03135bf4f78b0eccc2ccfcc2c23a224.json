{
    "patch": "      if (NodeUtil.isGet(lhs) || NodeUtil.isGet(rhs)) {\n        Node object = lhs;\n        Node property = null;\n\n        if (NodeUtil.isGet(rhs)) {\n          object = rhs.getFirstChild();\n          property = object.getNext();\n        } else {\n          property = lhs.getNext();\n        }\n\n        if (object.getType() == Token.NAME && object.getString().equals(\"prototype\")) {\n          return false;\n        }\n\n        if (object.getType() == Token.GETPROP && property != null &&\n            property.getType() == Token.STRING &&\n            property.getString().equals(\"prototype\")) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..e16e2567 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,27 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(lhs) || NodeUtil.isGet(rhs)) {\n+        Node object = lhs;\n+        Node property = null;\n+\n+        if (NodeUtil.isGet(rhs)) {\n+          object = rhs.getFirstChild();\n+          property = object.getNext();\n+        } else {\n+          property = lhs.getNext();\n+        }\n+\n+        if (object.getType() == Token.NAME && object.getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+\n+        if (object.getType() == Token.GETPROP && property != null &&\n+            property.getType() == Token.STRING &&\n+            property.getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}