{
    "patch": "public static byte[] escapeISO8859_1(String input) {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    try {\n        for (int i = 0; i < input.length(); i++) {\n            char ch = input.charAt(i);\n            if (ch <= 127) {\n               out.write(ch);\n            } else {\n               out.write((\"=\" + Integer.toHexString(ch)).getBytes(StandardCharsets.US_ASCII));\n            }\n        }\n        return out.toByteArray();\n    } catch (IOException e) {\n        e.printStackTrace();\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..6fea0fb4 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,23 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static byte[] escapeISO8859_1(String input) {\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    try {\n+        for (int i = 0; i < input.length(); i++) {\n+            char ch = input.charAt(i);\n+            if (ch <= 127) {\n+               out.write(ch);\n+            } else {\n+               out.write((\"=\" + Integer.toHexString(ch)).getBytes(StandardCharsets.US_ASCII));\n+            }\n+        }\n+        return out.toByteArray();\n+    } catch (IOException e) {\n+        e.printStackTrace();\n+        return null;\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}