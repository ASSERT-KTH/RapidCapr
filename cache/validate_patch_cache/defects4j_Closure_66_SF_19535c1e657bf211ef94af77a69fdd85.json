{
    "patch": "public static double getTypedPercent(JSONObject jsonObject) {\n    double total = 0;\n    double typed = 0;\n    Iterator<String> iterator = jsonObject.keys();\n\n    while (iterator.hasNext()) {\n        String key = iterator.next();\n        String value = jsonObject.getString(key);\n\n        total += 1;\n        if (!value.equals(\"null\")) {\n            typed += 1;\n        }\n    }\n\n    if (total == 0) {\n        return 0;\n    }\n\n    double percent = (typed / total) * 100;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..bfbcc44f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,28 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject jsonObject) {\n+    double total = 0;\n+    double typed = 0;\n+    Iterator<String> iterator = jsonObject.keys();\n+\n+    while (iterator.hasNext()) {\n+        String key = iterator.next();\n+        String value = jsonObject.getString(key);\n+\n+        total += 1;\n+        if (!value.equals(\"null\")) {\n+            typed += 1;\n+        }\n+    }\n+\n+    if (total == 0) {\n+        return 0;\n+    }\n+\n+    double percent = (typed / total) * 100;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}