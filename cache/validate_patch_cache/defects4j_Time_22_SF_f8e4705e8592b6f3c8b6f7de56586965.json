{
    "patch": "        int totalMillis = (int) (duration % DateTimeConstants.MILLIS_PER_SECOND);\n        duration = duration / DateTimeConstants.MILLIS_PER_SECOND;\n        int seconds = (int) (duration % DateTimeConstants.SECONDS_PER_MINUTE);\n        duration = duration / DateTimeConstants.SECONDS_PER_MINUTE;\n        int minutes = (int) (duration % DateTimeConstants.MINUTES_PER_HOUR);\n        duration = duration / DateTimeConstants.MINUTES_PER_HOUR;\n        int hours = (int) (duration % DateTimeConstants.HOURS_PER_DAY);\n        duration = duration / DateTimeConstants.HOURS_PER_DAY;\n        int days = (int) (duration % DateTimeConstants.DAYS_PER_WEEK);\n        duration = duration / DateTimeConstants.DAYS_PER_WEEK;\n        int weeks = (int) duration;\n        this.years = 0;\n        this.months = 0;\n        this.weeks = weeks;\n        this.days = days;\n        this.hours = hours;\n        this.minutes = minutes;\n        this.seconds = seconds;\n        this.millis = totalMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..b1da7117 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,25 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        int totalMillis = (int) (duration % DateTimeConstants.MILLIS_PER_SECOND);\n+        duration = duration / DateTimeConstants.MILLIS_PER_SECOND;\n+        int seconds = (int) (duration % DateTimeConstants.SECONDS_PER_MINUTE);\n+        duration = duration / DateTimeConstants.SECONDS_PER_MINUTE;\n+        int minutes = (int) (duration % DateTimeConstants.MINUTES_PER_HOUR);\n+        duration = duration / DateTimeConstants.MINUTES_PER_HOUR;\n+        int hours = (int) (duration % DateTimeConstants.HOURS_PER_DAY);\n+        duration = duration / DateTimeConstants.HOURS_PER_DAY;\n+        int days = (int) (duration % DateTimeConstants.DAYS_PER_WEEK);\n+        duration = duration / DateTimeConstants.DAYS_PER_WEEK;\n+        int weeks = (int) duration;\n+        this.years = 0;\n+        this.months = 0;\n+        this.weeks = weeks;\n+        this.days = days;\n+        this.hours = hours;\n+        this.minutes = minutes;\n+        this.seconds = seconds;\n+        this.millis = totalMillis;\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}