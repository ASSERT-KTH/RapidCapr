{
    "patch": "public static boolean triples_sum_to_zero(int[] numbers) {\n    Arrays.sort(numbers);\n    for (int i = 0; i < numbers.length - 2; i++) {\n        if (i == 0 || numbers[i] > numbers[i - 1]) {\n            int start = i + 1, end = numbers.length - 1;\n            while (start < end) {\n                if (numbers[i] + numbers[start] + numbers[end] == 0) {\n                    return true;\n                } else if (numbers[i] + numbers[start] + numbers[end] < 0) {\n                    int currentStart = start;\n                    while (numbers[start] == numbers[currentStart] && start < end) {\n                        start++;\n                    }\n                } else {\n                    int currentEnd = end;\n                    while (numbers[end] == numbers[currentEnd] && start < end) {\n                        end--;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\nindex e851652..89f00a6 100644\n--- a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n+++ b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n@@ -18,15 +18,28 @@ False\n */\n \n public class TRIPLES_SUM_TO_ZERO {\n-    public static boolean triples_sum_to_zero(int[] numbers) {\n-        for (int i = 0; i < numbers.length; i += 1) {\n-            for (int j = i; j < numbers.length; j += 1) {\n-                for (int k = j; k < numbers.length; k += 1) {\n-                    if (numbers[i] + numbers[j] + numbers[k] == 0)\n-                        return true;\n+public static boolean triples_sum_to_zero(int[] numbers) {\n+    Arrays.sort(numbers);\n+    for (int i = 0; i < numbers.length - 2; i++) {\n+        if (i == 0 || numbers[i] > numbers[i - 1]) {\n+            int start = i + 1, end = numbers.length - 1;\n+            while (start < end) {\n+                if (numbers[i] + numbers[start] + numbers[end] == 0) {\n+                    return true;\n+                } else if (numbers[i] + numbers[start] + numbers[end] < 0) {\n+                    int currentStart = start;\n+                    while (numbers[start] == numbers[currentStart] && start < end) {\n+                        start++;\n+                    }\n+                } else {\n+                    int currentEnd = end;\n+                    while (numbers[end] == numbers[currentEnd] && start < end) {\n+                        end--;\n+                    }\n                 }\n             }\n         }\n-        return false;\n     }\n+    return false;\n+}\n }",
    "result_reason": " /tmp/humaneval-TRIPLES_SUM_TO_ZERO/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java:[22,5] cannot find symbol",
    "test_result": "ERROR"
}