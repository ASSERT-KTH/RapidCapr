{
    "patch": "\n        int minDist = Integer.MAX_VALUE;\n        char closestVowel = ' ';\n        \n        for(int i = 0; i < word.length(); i++) {\n            char ch = word.charAt(i);\n            if(vowels.contains(Character.toLowerCase(ch))) {\n                int dist = Math.abs(i - word.indexOf(ch));\n                if(dist < minDist) {\n                    minDist = dist;\n                    closestVowel = ch;\n                }\n            }\n        }\n        return String.valueOf(closestVowel);",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\nindex 885eb35..235bef1 100644\n--- a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n+++ b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n@@ -23,7 +23,21 @@ public class GET_CLOSET_VOWEL {\n     public static String get_closet_vowel(String word) {\n         if(word.length() < 3) return \"\";\n         ArrayList<Character> vowels = new ArrayList<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));\n-        for(int i = word.length() - 2; i >= 0; i--) {\n+\n+        int minDist = Integer.MAX_VALUE;\n+        char closestVowel = ' ';\n+        \n+        for(int i = 0; i < word.length(); i++) {\n+            char ch = word.charAt(i);\n+            if(vowels.contains(Character.toLowerCase(ch))) {\n+                int dist = Math.abs(i - word.indexOf(ch));\n+                if(dist < minDist) {\n+                    minDist = dist;\n+                    closestVowel = ch;\n+                }\n+            }\n+        }\n+        return String.valueOf(closestVowel);\n             if(vowels.contains(word.charAt(i))) {\n                 if(!vowels.contains(word.charAt(i + 1)) && !vowels.contains(word.charAt(i - 1))) {\n                     return word.substring(i, i + 1);",
    "result_reason": " /tmp/humaneval-GET_CLOSET_VOWEL/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java:[47,9] illegal start of type",
    "test_result": "ERROR"
}