{
    "patch": "if (end - start > 2) new_text += \"-\" + text.substring(i);\nelse if (end - start > 0) {\n    for (int j = start; j < end; j += 1) {\n        new_text += \"_\";\n    }\n    new_text += text.substring(i);\n} else {\n    new_text += text.substring(i);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..4531082 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -10,29 +10,13 @@ fix_spaces(\" Example 2\") == \"_Example_2\"\n fix_spaces(\" Example   3\") == \"_Example-3\" */\n \n public class FIX_SPACES {\n-    public static String fix_spaces(String text) {\n-        String new_text = \"\";\n-        int i = 0;\n-        int start = 0;\n-        int end = 0;\n-        while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n-                    }\n-                    new_text += text.substring(i, i + 1);\n-                } else {\n-                    new_text += text.substring(i, i + 1);\n-                }\n-                start = i + 1;\n-                end = i + 1;\n-            }\n-            i += 1;\n-        }\n-\n-        return new_text;\n+if (end - start > 2) new_text += \"-\" + text.substring(i);\n+else if (end - start > 0) {\n+    for (int j = start; j < end; j += 1) {\n+        new_text += \"_\";\n     }\n+    new_text += text.substring(i);\n+} else {\n+    new_text += text.substring(i);\n+}\n }",
    "result_reason": " /tmp/humaneval-FIX_SPACES/src/main/java/humaneval/buggy/FIX_SPACES.java:[13,1] illegal start of type",
    "test_result": "ERROR"
}