{
    "patch": "        TimeSeries clone;\n        try {\n            clone = (TimeSeries) super.clone();\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }\n        clone.timePeriodClass = timePeriodClass;\n        clone.data = new java.util.ArrayList(getItemCount());\n        for (int i = 0; i < getItemCount(); i++) {\n            clone.add((TimeSeriesDataItem) getDataItem(i).clone());\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..e158595 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        TimeSeries clone;\n+        try {\n+            clone = (TimeSeries) super.clone();\n+        } catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e);\n+        }\n+        clone.timePeriodClass = timePeriodClass;\n+        clone.data = new java.util.ArrayList(getItemCount());\n+        for (int i = 0; i < getItemCount(); i++) {\n+            clone.add((TimeSeriesDataItem) getDataItem(i).clone());\n+        }\n         return clone;\n     }\n ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}