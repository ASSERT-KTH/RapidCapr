{
    "patch": "public class MyClass {\n    public static void main(String[] args) {\n\n        boolean c = true;\n        int[] d = new int[] {1, 2, 3};\n\n        String expected = \"for(a=c?0:(0 in d);;)foo()\";\n        String actual = \"for(a=c?0:[0 in d];;)foo()\";\n        \n        // Replace the incorrect 0 in [] with (0 in d)\n        actual = actual.replace(\"[0 in d]\", \"(0 in d)\");\n\n        assertEquals(expected, actual);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..13ff53ed 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,21 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class MyClass {\n+    public static void main(String[] args) {\n+\n+        boolean c = true;\n+        int[] d = new int[] {1, 2, 3};\n+\n+        String expected = \"for(a=c?0:(0 in d);;)foo()\";\n+        String actual = \"for(a=c?0:[0 in d];;)foo()\";\n+        \n+        // Replace the incorrect 0 in [] with (0 in d)\n+        actual = actual.replace(\"[0 in d]\", \"(0 in d)\");\n+\n+        assertEquals(expected, actual);\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}