{
    "patch": "        try {\n            final EigenDecomposition dec = new EigenDecomposition(m);\n            return dec.getSquareRoot();\n        } catch (OutOfMemoryError e) {\n            // Increasing heap space\n            final long maxMemory = Runtime.getRuntime().maxMemory();\n            final long newMemory = (long) (maxMemory * 1.5);\n            final boolean success = MemoryUtils.trySetMaxHeap(newMemory);\n\n            if (!success) {\n                throw e;\n            }\n            \n            final EigenDecomposition dec = new EigenDecomposition(m);\n            return dec.getSquareRoot();\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..1fefcbe12 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,20 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n+        try {\n             final EigenDecomposition dec = new EigenDecomposition(m);\n             return dec.getSquareRoot();\n-    }\n+        } catch (OutOfMemoryError e) {\n+            // Increasing heap space\n+            final long maxMemory = Runtime.getRuntime().maxMemory();\n+            final long newMemory = (long) (maxMemory * 1.5);\n+            final boolean success = MemoryUtils.trySetMaxHeap(newMemory);\n+\n+            if (!success) {\n+                throw e;\n+            }\n+            \n+            final EigenDecomposition dec = new EigenDecomposition(m);\n+            return dec.getSquareRoot();\n+        }\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}