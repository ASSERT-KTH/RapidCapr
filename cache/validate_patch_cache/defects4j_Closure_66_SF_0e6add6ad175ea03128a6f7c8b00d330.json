{
    "patch": "public static double getTypedPercent(JSONObject jsonObject) {\n    double count = 0.0;\n    double totalCount = 0.0;\n    for (String key : jsonObject.keySet()) {\n        totalCount++;\n        if (jsonObject.get(key) instanceof JSONObject) {\n            count += getTypedPercent((JSONObject) jsonObject.get(key));\n        } else if (jsonObject.get(key) instanceof String) {\n            String value = (String) jsonObject.get(key);\n            try {\n                Integer.parseInt(value);\n                count++;\n            } catch (NumberFormatException e) {\n                // not an integer, skip\n            }\n        } else {\n            // not a string or JSON object, skip\n        }\n    }\n    return count / totalCount * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..68fb60db 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject jsonObject) {\n+    double count = 0.0;\n+    double totalCount = 0.0;\n+    for (String key : jsonObject.keySet()) {\n+        totalCount++;\n+        if (jsonObject.get(key) instanceof JSONObject) {\n+            count += getTypedPercent((JSONObject) jsonObject.get(key));\n+        } else if (jsonObject.get(key) instanceof String) {\n+            String value = (String) jsonObject.get(key);\n+            try {\n+                Integer.parseInt(value);\n+                count++;\n+            } catch (NumberFormatException e) {\n+                // not an integer, skip\n+            }\n+        } else {\n+            // not a string or JSON object, skip\n+        }\n+    }\n+    return count / totalCount * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}