{
    "patch": "        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new ArrayList();\n        int size = this.data.size();\n        for (int index = 0; index < size; index++) {\n            if (index >= start && index <= end) {\n                copy.add((TimeSeriesDataItem) this.data.get(index).clone());\n            }\n        }\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        return copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..97ecf1a 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,23 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start < 0) {\n+            throw new IllegalArgumentException(\"Requires start >= 0.\");\n+        }\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new ArrayList();\n+        int size = this.data.size();\n+        for (int index = 0; index < size; index++) {\n+            if (index >= start && index <= end) {\n+                copy.add((TimeSeriesDataItem) this.data.get(index).clone());\n+            }\n+        }\n+        copy.minY = Double.NaN;\n+        copy.maxY = Double.NaN;\n+        return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: variable copy is already defined in method createCopy(int,int)",
    "test_result": "ERROR"
}