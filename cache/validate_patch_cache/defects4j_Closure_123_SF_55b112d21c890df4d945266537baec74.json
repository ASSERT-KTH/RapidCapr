{
    "patch": "public static String fixCode(String code) {\n    String[] lines = code.split(\"\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        if (lines[i].contains(\"for(\") && lines[i].contains(\"in \") && !lines[i].contains(\"if\")) {\n            String[] tokens = lines[i].split(\"\\\\(\");\n            String[] operatorTokens = tokens[1].split(\" \");\n            String[] conditionTokens = operatorTokens[2].split(\"\\\\)\");\n            if (operatorTokens[1].equals(\"in\")) {\n                String operator = \"(\" + operatorTokens[1] + \" \";\n                String collection = conditionTokens[0] + \")\";\n                String replacement = operator + \"[\" + collection + \"]\" + operatorTokens[0] + conditionTokens[1];\n                lines[i] = tokens[0] + \"(\" + replacement + \")\";\n            }\n        }\n    }\n    return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6b729f30 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,23 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String[] lines = code.split(\"\\n\");\n+    for (int i = 0; i < lines.length; i++) {\n+        if (lines[i].contains(\"for(\") && lines[i].contains(\"in \") && !lines[i].contains(\"if\")) {\n+            String[] tokens = lines[i].split(\"\\\\(\");\n+            String[] operatorTokens = tokens[1].split(\" \");\n+            String[] conditionTokens = operatorTokens[2].split(\"\\\\)\");\n+            if (operatorTokens[1].equals(\"in\")) {\n+                String operator = \"(\" + operatorTokens[1] + \" \";\n+                String collection = conditionTokens[0] + \")\";\n+                String replacement = operator + \"[\" + collection + \"]\" + operatorTokens[0] + conditionTokens[1];\n+                lines[i] = tokens[0] + \"(\" + replacement + \")\";\n+            }\n+        }\n+    }\n+    return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}