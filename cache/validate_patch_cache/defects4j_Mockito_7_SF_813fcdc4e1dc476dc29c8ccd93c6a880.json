{
    "patch": "private void readTypeVariables(TypeVariable<?> typeVariable) {\n    if (typeVariable == null) {\n        return;\n    }\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n\n    Type actualType = getActualTypeArgumentFor(typeVariable);\n    if (actualType != null) {\n        registerTypeVariablesOn(actualType);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..07eb29a1a 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,20 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables(TypeVariable<?> typeVariable) {\n+    if (typeVariable == null) {\n+        return;\n+    }\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+\n+    Type actualType = getActualTypeArgumentFor(typeVariable);\n+    if (actualType != null) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: method readTypeVariables in class TypeVariableReturnType cannot be applied to given types;",
    "test_result": "ERROR"
}