{
    "patch": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (cs == null || searchChars == null) {\n        return false;\n    }\n    final int csLength = cs.length();\n    final int searchCharsLength = searchChars.length;\n    final int csLast = csLength - 1;\n    final int searchCharsLast = searchCharsLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        final char ch = cs.charAt(i);\n        if (isHighSurrogate(ch) && i < csLast) {\n            final char ch2 = cs.charAt(i + 1);\n            if (isLowSurrogate(ch2)) {\n                final int codePoint = toCodePoint(ch, ch2);\n                for (int j = 0; j < searchCharsLength; j++) {\n                    final char searchChar = searchChars[j];\n                    if (searchChar == codePoint) {\n                        return true;\n                    }\n                }\n                i++; // 2 characters\n            }\n        }\n        else {\n            for (int j = 0; j < searchCharsLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..314fd727 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,39 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char[] searchChars) {\n+    if (cs == null || searchChars == null) {\n+        return false;\n+    }\n+    final int csLength = cs.length();\n+    final int searchCharsLength = searchChars.length;\n+    final int csLast = csLength - 1;\n+    final int searchCharsLast = searchCharsLength - 1;\n+    for (int i = 0; i < csLength; i++) {\n+        final char ch = cs.charAt(i);\n+        if (isHighSurrogate(ch) && i < csLast) {\n+            final char ch2 = cs.charAt(i + 1);\n+            if (isLowSurrogate(ch2)) {\n+                final int codePoint = toCodePoint(ch, ch2);\n+                for (int j = 0; j < searchCharsLength; j++) {\n+                    final char searchChar = searchChars[j];\n+                    if (searchChar == codePoint) {\n+                        return true;\n+                    }\n+                }\n+                i++; // 2 characters\n+            }\n+        }\n+        else {\n+            for (int j = 0; j < searchCharsLength; j++) {\n+                if (searchChars[j] == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}