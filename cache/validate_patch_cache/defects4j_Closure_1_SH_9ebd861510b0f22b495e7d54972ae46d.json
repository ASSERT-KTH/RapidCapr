{
    "patch": "Node function = fnScope.getRootNode();\nPreconditions.checkState(function.isFunction());\n\n// For setter methods in object literals, don't remove parameters.\nif (NodeUtil.isObjectLitKey(function.getParent())) {\n  if (NodeUtil.isGetKey(function.getParent())) {\n    // Getter of setter/getter pair.\n    return;\n  } else if (function.getNext().getBooleanProp(Node.IS_SETTER)) {\n    // Setter of setter/getter pair.\n    return;\n  }\n}\n\nNode argList = getFunctionArgList(function);\nboolean modifyCallers = modifyCallSites\n    && !function.getBooleanProp(Node.STRONG_DEFINITIONS);\nif (!modifyCallers) {\n  // Strip unreferenced args off the end of the function declaration.\n  Node lastArg;\n  while ((lastArg = argList.getLastChild()) != null) {\n    Var var = fnScope.getVar(lastArg.getString());\n    if (!referenced.contains(var)) {\n      argList.removeChild(lastArg);\n      compiler.reportCodeChange();\n    } else {\n      break;\n    }\n  }\n} else {\n  callSiteOptimizer.optimize(fnScope, referenced, function.getJSDocInfo());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..1eb1987d 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,38 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+Preconditions.checkState(function.isFunction());\n+\n+// For setter methods in object literals, don't remove parameters.\n+if (NodeUtil.isObjectLitKey(function.getParent())) {\n+  if (NodeUtil.isGetKey(function.getParent())) {\n+    // Getter of setter/getter pair.\n+    return;\n+  } else if (function.getNext().getBooleanProp(Node.IS_SETTER)) {\n+    // Setter of setter/getter pair.\n+    return;\n+  }\n+}\n+\n+Node argList = getFunctionArgList(function);\n+boolean modifyCallers = modifyCallSites\n+    && !function.getBooleanProp(Node.STRONG_DEFINITIONS);\n+if (!modifyCallers) {\n+  // Strip unreferenced args off the end of the function declaration.\n+  Node lastArg;\n+  while ((lastArg = argList.getLastChild()) != null) {\n+    Var var = fnScope.getVar(lastArg.getString());\n+    if (!referenced.contains(var)) {\n+      argList.removeChild(lastArg);\n+      compiler.reportCodeChange();\n+    } else {\n+      break;\n+    }\n+  }\n+} else {\n+  callSiteOptimizer.optimize(fnScope, referenced, function.getJSDocInfo());\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: method isObjectLitKey in class NodeUtil cannot be applied to given types;",
    "test_result": "ERROR"
}