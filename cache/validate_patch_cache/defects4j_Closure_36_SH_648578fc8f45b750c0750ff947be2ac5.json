{
    "patch": "          if (value.isFunction()\n              && convention.getSingletonGetterClassName(value) != null) {\n            if ((!callNode.isNew() && convention.isApplyToCall(value))\n                || convention.isSuperClassReference(value)) {\n              // Don't inline a non-constructor getter if it's not a directly called method\n              // (ie. one that uses .apply or looks like a class reference).\n              // Issues https://github.com/google/closure-compiler/issues/372 and\n              // https://github.com/google/closure-compiler/issues/1742.\n              return false;\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..1dff7a3c 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,17 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (value.isFunction()\n+              && convention.getSingletonGetterClassName(value) != null) {\n+            if ((!callNode.isNew() && convention.isApplyToCall(value))\n+                || convention.isSuperClassReference(value)) {\n+              // Don't inline a non-constructor getter if it's not a directly called method\n+              // (ie. one that uses .apply or looks like a class reference).\n+              // Issues https://github.com/google/closure-compiler/issues/372 and\n+              // https://github.com/google/closure-compiler/issues/1742.\n+              return false;\n+            }\n+          }\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}