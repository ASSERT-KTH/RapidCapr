{
    "patch": "        try {\n            timer.start();\n            while (timer.isCounting()) {\n                delegate.verify(data);\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            }\n        } catch (MockitoAssertionError e) {\n            error = handleVerifyException(e);\n        } catch (ArgumentsAreDifferent e) {\n            error = handleVerifyException(e);",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..6416c6baf 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -88,7 +88,20 @@ public class VerificationOverTimeImpl implements VerificationMode {\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n             }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n+        try {\n+            timer.start();\n+            while (timer.isCounting()) {\n+                delegate.verify(data);\n+                if (returnOnSuccess) {\n+                    return;\n+                } else {\n+                    error = null;\n+                }\n+            }\n+        } catch (MockitoAssertionError e) {\n+            error = handleVerifyException(e);\n+        } catch (ArgumentsAreDifferent e) {\n+            error = handleVerifyException(e);\n                 error = handleVerifyException(e);\n             }\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}