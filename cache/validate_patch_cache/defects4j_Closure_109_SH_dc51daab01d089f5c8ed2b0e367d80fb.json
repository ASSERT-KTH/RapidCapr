{
    "patch": "      Node typeNode = parseTypeExpression(token);\n      if (typeNode == null) {\n          return createErrorNode(\"Bad type annotation. type not recognized due to syntax error\", token);\n      }\n      return typeNode;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..c8a9615e 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,11 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+      Node typeNode = parseTypeExpression(token);\n+      if (typeNode == null) {\n+          return createErrorNode(\"Bad type annotation. type not recognized due to syntax error\", token);\n+      }\n+      return typeNode;\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}