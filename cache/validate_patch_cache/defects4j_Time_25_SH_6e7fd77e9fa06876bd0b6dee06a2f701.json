{
    "patch": "            \n            boolean positiveOffset = offsetLocal > 0;\n            \n            // if the offsets are same, we cannot decide if offset needs adjustment\n            if (offsetLocal == offsetAdjusted) {\n                return offsetAdjusted;\n            }\n            \n            if (positiveOffset) {\n                long prev = previousTransition(instantAdjusted);\n                if (prev >= instantLocal - offsetLocal) {\n                    return offsetLocal;\n                }\n            } else {\n                long next = nextTransition(instantAdjusted);\n                if (next > instantLocal - offsetLocal) {\n                    return offsetLocal;\n                }\n            }\n            \n            // if we just return offsetAdjusted then the time is pushed \n            // back before the transition, whereas it should be \n            // on or after the transition\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n            if (nextLocal != nextAdjusted) {\n              return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..49e0641f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,33 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            \n+            boolean positiveOffset = offsetLocal > 0;\n+            \n+            // if the offsets are same, we cannot decide if offset needs adjustment\n+            if (offsetLocal == offsetAdjusted) {\n+                return offsetAdjusted;\n+            }\n+            \n+            if (positiveOffset) {\n+                long prev = previousTransition(instantAdjusted);\n+                if (prev >= instantLocal - offsetLocal) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long next = nextTransition(instantAdjusted);\n+                if (next > instantLocal - offsetLocal) {\n+                    return offsetLocal;\n+                }\n+            }\n+            \n+            // if we just return offsetAdjusted then the time is pushed \n+            // back before the transition, whereas it should be \n+            // on or after the transition\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+            if (nextLocal != nextAdjusted) {\n+              return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}