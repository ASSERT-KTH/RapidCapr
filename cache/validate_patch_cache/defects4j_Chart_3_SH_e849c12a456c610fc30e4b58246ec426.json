{
    "patch": "        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = 0; index < this.data.size(); index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                if (item.getPeriod().compareTo(this.getDataItem(start).getPeriod()) >= 0\n                        && item.getPeriod().compareTo(this.getDataItem(end).getPeriod()) <= 0\n                        && copy.getDataItem(item.getPeriod()) == null) {\n                    copy.add((TimeSeriesDataItem) item.clone());\n                }\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..106fab9 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        if (this.data.size() > 0) {\n+            for (int index = 0; index < this.data.size(); index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                if (item.getPeriod().compareTo(this.getDataItem(start).getPeriod()) >= 0\n+                        && item.getPeriod().compareTo(this.getDataItem(end).getPeriod()) <= 0\n+                        && copy.getDataItem(item.getPeriod()) == null) {\n+                    copy.add((TimeSeriesDataItem) item.clone());\n+                }\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>",
    "test_result": "FAIL"
}