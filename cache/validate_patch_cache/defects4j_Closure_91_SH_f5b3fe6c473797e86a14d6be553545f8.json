{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (parent != null && parent.getType() == Token.EXPR_RESULT) {\n  Node assign = parent.getFirstChild();\n  Node lhs = assign.getFirstChild();\n  if (NodeUtil.isGet(lhs) &&\n      lhs.getLastChild().getString().equals(\"prototype\")) {\n    // Check if the assignment is for a top-level name or chain of properties,\n    // since we don't want to traverse nested expressions that lead to the assignment.\n    Node currentNode = lhs.getFirstChild();\n    while (currentNode != null) {\n      int type = currentNode.getType();\n      if (type != Token.NAME && type != Token.GETPROP) {\n        return false;\n      }\n      currentNode = currentNode.getNext();\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..74f62fa4 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,24 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (parent != null && parent.getType() == Token.EXPR_RESULT) {\n+  Node assign = parent.getFirstChild();\n+  Node lhs = assign.getFirstChild();\n+  if (NodeUtil.isGet(lhs) &&\n+      lhs.getLastChild().getString().equals(\"prototype\")) {\n+    // Check if the assignment is for a top-level name or chain of properties,\n+    // since we don't want to traverse nested expressions that lead to the assignment.\n+    Node currentNode = lhs.getFirstChild();\n+    while (currentNode != null) {\n+      int type = currentNode.getType();\n+      if (type != Token.NAME && type != Token.GETPROP) {\n+        return false;\n+      }\n+      currentNode = currentNode.getNext();\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}