{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal == nextAdjusted) {\n        // not in a DST gap, return adjusted offset\n        return offsetAdjusted;\n    }\n    // near or in a DST gap\n    long prevLocal = previousTransition(instantAdjusted);\n    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n    if (prevLocal == prevAdjusted) {\n        // near a DST gap, return earlier offset\n        return (offsetLocal < offsetAdjusted) ? offsetLocal : offsetAdjusted;\n    }\n    // in a DST gap, return later offset\n    return (offsetLocal > offsetAdjusted) ? getOffset(prevLocal) : getOffset(nextLocal);\n}\n// no DST gap, return adjusted offset\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..23639dd9 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal == nextAdjusted) {\n+        // not in a DST gap, return adjusted offset\n+        return offsetAdjusted;\n+    }\n+    // near or in a DST gap\n+    long prevLocal = previousTransition(instantAdjusted);\n+    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+    if (prevLocal == prevAdjusted) {\n+        // near a DST gap, return earlier offset\n+        return (offsetLocal < offsetAdjusted) ? offsetLocal : offsetAdjusted;\n+    }\n+    // in a DST gap, return later offset\n+    return (offsetLocal > offsetAdjusted) ? getOffset(prevLocal) : getOffset(nextLocal);\n+}\n+// no DST gap, return adjusted offset\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}