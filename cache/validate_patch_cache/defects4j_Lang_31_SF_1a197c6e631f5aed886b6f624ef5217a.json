{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char... searchCharacters) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchCharacters)) {\n        return false;\n    }\n    final int length = sequence.length();\n    final int searchLength = searchCharacters.length;\n    if (searchLength == 1) {\n        final char searchChar = searchCharacters[0];\n        for (int i = 0; i < length; i++) {\n            if (sequence.charAt(i) == searchChar) {\n                return true;\n            }\n        }\n    } else {\n        final int[] searchChars = CharUtils.toIntArray(searchCharacters);\n        final int[] strChars = new int[Character.codePointCount(sequence, 0, length)];\n        int strCount = 0;\n        for (int i = 0; i < length; ) {\n            final int ch = Character.codePointAt(sequence, i);\n            strChars[strCount] = ch;\n            strCount++;\n            i += Character.charCount(ch);\n        }\n        final int strEnd = strCount;\n        outer:\n        for (int i = 0; i < searchLength; i++) {\n            final int searchChar = searchChars[i];\n            if (Character.isSupplementaryCodePoint(searchChar)) {\n                for (int j = 0; j < strEnd - 1; j++) {\n                    final int surrogate = strChars[j];\n                    if (surrogate == searchChar) {\n                        return true;\n                    }\n                    final char[] chars = Character.toChars(searchChar);\n                    if (surrogate == chars[0] && j < strEnd - 1 && strChars[j + 1] == chars[1]) {\n                        return true;\n                    }\n                }\n            } else {\n                for (int j = 0; j < strEnd; j++) {\n                    if (strChars[j] == searchChar) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..706e90d2 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,55 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char... searchCharacters) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchCharacters)) {\n+        return false;\n+    }\n+    final int length = sequence.length();\n+    final int searchLength = searchCharacters.length;\n+    if (searchLength == 1) {\n+        final char searchChar = searchCharacters[0];\n+        for (int i = 0; i < length; i++) {\n+            if (sequence.charAt(i) == searchChar) {\n+                return true;\n+            }\n+        }\n+    } else {\n+        final int[] searchChars = CharUtils.toIntArray(searchCharacters);\n+        final int[] strChars = new int[Character.codePointCount(sequence, 0, length)];\n+        int strCount = 0;\n+        for (int i = 0; i < length; ) {\n+            final int ch = Character.codePointAt(sequence, i);\n+            strChars[strCount] = ch;\n+            strCount++;\n+            i += Character.charCount(ch);\n+        }\n+        final int strEnd = strCount;\n+        outer:\n+        for (int i = 0; i < searchLength; i++) {\n+            final int searchChar = searchChars[i];\n+            if (Character.isSupplementaryCodePoint(searchChar)) {\n+                for (int j = 0; j < strEnd - 1; j++) {\n+                    final int surrogate = strChars[j];\n+                    if (surrogate == searchChar) {\n+                        return true;\n+                    }\n+                    final char[] chars = Character.toChars(searchChar);\n+                    if (surrogate == chars[0] && j < strEnd - 1 && strChars[j + 1] == chars[1]) {\n+                        return true;\n+                    }\n+                }\n+            } else {\n+                for (int j = 0; j < strEnd; j++) {\n+                    if (strChars[j] == searchChar) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}