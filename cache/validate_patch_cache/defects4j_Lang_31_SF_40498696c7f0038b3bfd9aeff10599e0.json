{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    int len = str.length();\n    int searchLen = searchChars.length;\n    int strIndex = 0;\n    int searchIndex = 0;\n    for (; strIndex < len; strIndex++) {\n        char c = str.charAt(strIndex);\n        for (searchIndex = 0; searchIndex < searchLen; searchIndex++) {\n            if (searchChars[searchIndex] == c) {\n                if (Character.isHighSurrogate(c)) {\n                    if (searchIndex == searchLen - 1) {\n                        // missing low surrogate, fine, high surrogate by itself is not a match\n                        return false;\n                    }\n                    if (strIndex < len - 1 &&\n                            searchChars[searchIndex + 1] == str.charAt(strIndex + 1)) {\n                        return true;\n                    }\n                } else {\n                    // no high surrogate to follow, fine, just one char is a match\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..fd788c66 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    int len = str.length();\n+    int searchLen = searchChars.length;\n+    int strIndex = 0;\n+    int searchIndex = 0;\n+    for (; strIndex < len; strIndex++) {\n+        char c = str.charAt(strIndex);\n+        for (searchIndex = 0; searchIndex < searchLen; searchIndex++) {\n+            if (searchChars[searchIndex] == c) {\n+                if (Character.isHighSurrogate(c)) {\n+                    if (searchIndex == searchLen - 1) {\n+                        // missing low surrogate, fine, high surrogate by itself is not a match\n+                        return false;\n+                    }\n+                    if (strIndex < len - 1 &&\n+                            searchChars[searchIndex + 1] == str.charAt(strIndex + 1)) {\n+                        return true;\n+                    }\n+                } else {\n+                    // no high surrogate to follow, fine, just one char is a match\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}