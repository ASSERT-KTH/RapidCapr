{
    "patch": "import com.google.gson.Gson;\nimport com.google.gson.JsonObject;\n\npublic class MyProgram {\n  \n    public static double getTypedPercent(String json) {\n        Gson gson = new Gson();\n        JsonObject jsonObject = gson.fromJson(json, JsonObject.class);\n        int typed = jsonObject.get(\"typed\").getAsInt();\n        int total = jsonObject.get(\"total\").getAsInt();\n        return ((double) typed / total) * 100.0;\n    }\n\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..9a1fd38d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import com.google.gson.Gson;\n+import com.google.gson.JsonObject;\n+\n+public class MyProgram {\n+  \n+    public static double getTypedPercent(String json) {\n+        Gson gson = new Gson();\n+        JsonObject jsonObject = gson.fromJson(json, JsonObject.class);\n+        int typed = jsonObject.get(\"typed\").getAsInt();\n+        int total = jsonObject.get(\"total\").getAsInt();\n+        return ((double) typed / total) * 100.0;\n+    }\n+\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}