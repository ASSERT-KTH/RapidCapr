{
    "patch": "      if (name.globalSets == 1 && name.localSets == 0 && name.aliasingGets == 0 &&\n          !name.isGetOrSetDefinition() && name.getDeclaration() == null &&\n          (name.props == null || name.props.stream().allMatch(prop -> \n              prop.globalSets == 1 && prop.aliasingGets == 0 && !prop.isGetOrSetDefinition())))",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..768d748a 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,10 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.globalSets == 1 && name.localSets == 0 && name.aliasingGets == 0 &&\n+          !name.isGetOrSetDefinition() && name.getDeclaration() == null &&\n+          (name.props == null || name.props.stream().allMatch(prop -> \n+              prop.globalSets == 1 && prop.aliasingGets == 0 && !prop.isGetOrSetDefinition())))\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}