{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    char sep = '_';\n    int i = str.indexOf(sep);\n    if (i == -1) {\n        if (len != 2 && len != 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale.Builder().setLanguage(str).build();\n    } else {\n        String language = str.substring(0, i);\n        if (language.length() != 2 && language.length() != 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        if (len == i + 1) {\n            return new Locale.Builder().setLanguage(language).build();\n        }\n\n        char c = str.charAt(++i);\n        if (c == sep) {\n            if (len != i + 1) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale.Builder().setLanguage(language).setRegion(\"\").build();\n        }\n\n        int j = str.indexOf(sep, i);\n        String region = \"\";\n        String variant = \"\";\n        if (j == -1) {\n            region = str.substring(i);\n        } else {\n            region = str.substring(i, j);\n            variant = str.substring(j + 1);\n        }\n\n        if (region.length() != 2 && region.length() != 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        if (variant.length() > 0) {\n            return new Locale.Builder().setLanguage(language).setRegion(region)\n                    .setVariant(variant).build();\n        } else {\n            return new Locale.Builder().setLanguage(language).setRegion(region)\n                    .build();\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..339c01f0 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,63 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    char sep = '_';\n+    int i = str.indexOf(sep);\n+    if (i == -1) {\n+        if (len != 2 && len != 3) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        return new Locale.Builder().setLanguage(str).build();\n+    } else {\n+        String language = str.substring(0, i);\n+        if (language.length() != 2 && language.length() != 3) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+\n+        if (len == i + 1) {\n+            return new Locale.Builder().setLanguage(language).build();\n+        }\n+\n+        char c = str.charAt(++i);\n+        if (c == sep) {\n+            if (len != i + 1) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+            return new Locale.Builder().setLanguage(language).setRegion(\"\").build();\n+        }\n+\n+        int j = str.indexOf(sep, i);\n+        String region = \"\";\n+        String variant = \"\";\n+        if (j == -1) {\n+            region = str.substring(i);\n+        } else {\n+            region = str.substring(i, j);\n+            variant = str.substring(j + 1);\n+        }\n+\n+        if (region.length() != 2 && region.length() != 3) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+\n+        if (variant.length() > 0) {\n+            return new Locale.Builder().setLanguage(language).setRegion(region)\n+                    .setVariant(variant).build();\n+        } else {\n+            return new Locale.Builder().setLanguage(language).setRegion(region)\n+                    .build();\n         }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}