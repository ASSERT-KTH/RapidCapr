{
    "patch": "public class BasePeriod {\n    private long duration;\n    private PeriodType periodType;\n\n    protected BasePeriod(long duration) {\n        this(duration, null);\n    }\n\n    protected BasePeriod(long duration, PeriodType periodType) {\n        this.duration = duration;\n        this.periodType = periodType;\n    }\n\n    public int getWeeks() {\n        return (int) (duration / (7 * 24 * 60 * 60 * 1000));\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..8438ebe6 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,11 +218,24 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n+public class BasePeriod {\n+    private long duration;\n+    private PeriodType periodType;\n+\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(duration, null);\n+    }\n+\n+    protected BasePeriod(long duration, PeriodType periodType) {\n+        this.duration = duration;\n+        this.periodType = periodType;\n     }\n \n+    public int getWeeks() {\n+        return (int) (duration / (7 * 24 * 60 * 60 * 1000));\n+    }\n+}\n+\n     /**\n      * Creates a period from the given millisecond duration, which is only really\n      * suitable for durations less than one day.",
    "result_reason": "error: class BasePeriod is already defined in package org.joda.time.base",
    "test_result": "ERROR"
}