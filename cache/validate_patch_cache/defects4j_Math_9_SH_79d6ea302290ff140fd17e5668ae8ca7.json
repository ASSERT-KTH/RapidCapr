{
    "patch": "final Vector3D revertedDirection = direction.scalarMultiply(-1);\nfinal double norm = revertedDirection.getNorm();\nfinal Vector3D normalizedRevertedDirection = norm > Precision.EPSILON ? revertedDirection.normalize() : Vector3D.PLUS_I;\nfinal Line reverted = new Line(zero, normalizedRevertedDirection);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..b679f0cc0 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,10 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+final Vector3D revertedDirection = direction.scalarMultiply(-1);\n+final double norm = revertedDirection.getNorm();\n+final Vector3D normalizedRevertedDirection = norm > Precision.EPSILON ? revertedDirection.normalize() : Vector3D.PLUS_I;\n+final Line reverted = new Line(zero, normalizedRevertedDirection);\n         return reverted;\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError: arrays first differed at element [0]; expected:<0.028581782127907646> but was:<-0.25723603464229045>",
    "test_result": "FAIL"
}