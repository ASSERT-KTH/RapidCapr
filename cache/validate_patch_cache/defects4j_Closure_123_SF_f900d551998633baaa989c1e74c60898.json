{
    "patch": "public String fixCode(String code) {\n    int idx = code.indexOf(\"in\");\n    if (idx == -1) {\n        return code;\n    }\n    int start = idx;\n    while (start > 0 && Character.isJavaIdentifierPart(code.charAt(start - 1))) {\n        start--;\n    }\n    int end = idx;\n    while (end < code.length() - 1 && Character.isJavaIdentifierPart(code.charAt(end + 1))) {\n        end++;\n    }\n\n    String before = code.substring(0, start);\n    String after = code.substring(end + 1);\n\n    String inOperator = code.substring(start, end + 1);\n    String replacement = \"(\\\"\" + inOperator + \"\\\".equals(\\\"in\\\") ? java.util.Arrays.asList(\" + inOperator + \") : \" + inOperator + \")\";\n\n    return before + replacement + after;\n} ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..16f59681 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,28 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    int idx = code.indexOf(\"in\");\n+    if (idx == -1) {\n+        return code;\n+    }\n+    int start = idx;\n+    while (start > 0 && Character.isJavaIdentifierPart(code.charAt(start - 1))) {\n+        start--;\n+    }\n+    int end = idx;\n+    while (end < code.length() - 1 && Character.isJavaIdentifierPart(code.charAt(end + 1))) {\n+        end++;\n+    }\n+\n+    String before = code.substring(0, start);\n+    String after = code.substring(end + 1);\n+\n+    String inOperator = code.substring(start, end + 1);\n+    String replacement = \"(\\\"\" + inOperator + \"\\\".equals(\\\"in\\\") ? java.util.Arrays.asList(\" + inOperator + \") : \" + inOperator + \")\";\n+\n+    return before + replacement + after;\n+} \n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}