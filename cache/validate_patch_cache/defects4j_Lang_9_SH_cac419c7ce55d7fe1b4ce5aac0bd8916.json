{
    "patch": "        boolean hasStrategies = false;\n        if (currentStrategy != null) {\n            if(currentFormatField != null && currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n                hasStrategies = true;\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n        currentFormatField = null;\n        if (nextStrategy == null) {\n            if (!hasStrategies) {\n                throw new IllegalArgumentException(\"Invalid pattern\");\n            }\n        } else if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..8af27a43 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,21 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        boolean hasStrategies = false;\n+        if (currentStrategy != null) {\n+            if(currentFormatField != null && currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+                hasStrategies = true;\n+            }\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+        currentFormatField = null;\n+        if (nextStrategy == null) {\n+            if (!hasStrategies) {\n+                throw new IllegalArgumentException(\"Invalid pattern\");\n+            }\n+        } else if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}