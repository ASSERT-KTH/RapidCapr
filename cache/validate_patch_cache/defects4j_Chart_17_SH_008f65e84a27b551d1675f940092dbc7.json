{
    "patch": "        Object clone = null;\n        try {\n            TimeSeries timeSeriesClone = (TimeSeries) super.clone();\n            timeSeriesClone.data = (ArrayList) this.data.clone();\n            timeSeriesClone.domainIsCached = false;\n            timeSeriesClone.rangeIsCached = false;\n            timeSeriesClone.minY = Double.NaN;\n            timeSeriesClone.maxY = Double.NaN;\n            timeSeriesClone.minX = Double.NaN;\n            timeSeriesClone.maxX = Double.NaN;\n            timeSeriesClone.timePeriodClass = this.timePeriodClass;\n            timeSeriesClone.domainDescription = this.domainDescription;\n            timeSeriesClone.rangeDescription = this.rangeDescription;\n            clone = timeSeriesClone;\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..a0b7377 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,23 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        Object clone = null;\n+        try {\n+            TimeSeries timeSeriesClone = (TimeSeries) super.clone();\n+            timeSeriesClone.data = (ArrayList) this.data.clone();\n+            timeSeriesClone.domainIsCached = false;\n+            timeSeriesClone.rangeIsCached = false;\n+            timeSeriesClone.minY = Double.NaN;\n+            timeSeriesClone.maxY = Double.NaN;\n+            timeSeriesClone.minX = Double.NaN;\n+            timeSeriesClone.maxX = Double.NaN;\n+            timeSeriesClone.timePeriodClass = this.timePeriodClass;\n+            timeSeriesClone.domainDescription = this.domainDescription;\n+            timeSeriesClone.rangeDescription = this.rangeDescription;\n+            clone = timeSeriesClone;\n+        } catch (CloneNotSupportedException e) {\n+            throw new RuntimeException(e);\n+        }\n         return clone;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}