{
    "patch": "      Boolean isUnnamedFunction = name == null || name.getIdentifier().isEmpty();\n      if (isUnnamedFunction) {\n        name = new Name(Token.NAME, functionNode.getLineno(), \"\");\n      }\n      Node node = newNode(Token.FUNCTION);\n      Node newName = transform(name);\n      if (isUnnamedFunction) {\n        // Old Rhino tagged the empty name node with the line number of the\n        // declaration.\n        newName.setCharno(position2charno(functionNode.getAbsolutePosition()\n            + functionNode.getLp()));\n      }\n\n      node.addChildToBack(newName);\n      Node lp = newNode(Token.LP);\n      lp.setLineno(functionNode.getLineno());\n      lp.setCharno(position2charno(functionNode.getBody().getPosition()\n          + functionNode.getBody().getLp()));\n      for (AstNode param : functionNode.getParams()) {\n        lp.addChildToBack(transform(param));\n      }\n      node.addChildToBack(lp);\n\n      Node bodyNode = transform(functionNode.getBody());\n      parseDirectives(bodyNode);\n      node.addChildToBack(bodyNode);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..dfcbc0b0 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,32 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      Boolean isUnnamedFunction = name == null || name.getIdentifier().isEmpty();\n+      if (isUnnamedFunction) {\n+        name = new Name(Token.NAME, functionNode.getLineno(), \"\");\n+      }\n+      Node node = newNode(Token.FUNCTION);\n+      Node newName = transform(name);\n+      if (isUnnamedFunction) {\n+        // Old Rhino tagged the empty name node with the line number of the\n+        // declaration.\n+        newName.setCharno(position2charno(functionNode.getAbsolutePosition()\n+            + functionNode.getLp()));\n+      }\n+\n+      node.addChildToBack(newName);\n+      Node lp = newNode(Token.LP);\n+      lp.setLineno(functionNode.getLineno());\n+      lp.setCharno(position2charno(functionNode.getBody().getPosition()\n+          + functionNode.getBody().getLp()));\n+      for (AstNode param : functionNode.getParams()) {\n+        lp.addChildToBack(transform(param));\n+      }\n+      node.addChildToBack(lp);\n+\n+      Node bodyNode = transform(functionNode.getBody());\n+      parseDirectives(bodyNode);\n+      node.addChildToBack(bodyNode);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable isUnnamedFunction is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}