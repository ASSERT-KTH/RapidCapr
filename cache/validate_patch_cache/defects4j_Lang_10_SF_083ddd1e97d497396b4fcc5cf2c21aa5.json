{
    "patch": "private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n    if (value == null) {\n        regex.append(\"\\\\b\\\\Q\\\\E\\\\b\");\n        return regex;\n    }\n\n    int length = value.length();\n    for (int i = 0; i < length; ++i) {\n        char c = value.charAt(i);\n        switch (c) {\n            case '(':\n            case ')':\n            case '|':\n            case '+':\n            case '*':\n            case '.':\n            case '$':\n            case '^':\n            case '?':\n            case '{':\n            case '}':\n            case '[':\n            case ']':\n            case '\\\\':\n                regex.append('\\\\');\n                break;\n        }\n        regex.append(c);\n    }\n\n    if (unquote) {\n        // Find unpaired \"'\" and return an error regex\n        int quoteCount = value.length() - value.replace(\"'\", \"\").length();\n        if (quoteCount % 2 == 1) {\n            regex.setLength(0);\n            regex.append(\"\\\\b\\\\Q\\\\E\\\\b\");\n        }\n    }\n\n    regex.append(\"\\\\z\");\n    return regex;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..79dfb239 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,48 +300,49 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n-            case '?':\n-            case '[':\n-            case ']':\n+private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n+    if (value == null) {\n+        regex.append(\"\\\\b\\\\Q\\\\E\\\\b\");\n+        return regex;\n+    }\n+\n+    int length = value.length();\n+    for (int i = 0; i < length; ++i) {\n+        char c = value.charAt(i);\n+        switch (c) {\n             case '(':\n             case ')':\n-            case '{':\n-            case '}':\n-            case '\\\\':\n             case '|':\n-            case '*':\n             case '+':\n-            case '^':\n-            case '$':\n+            case '*':\n             case '.':\n+            case '$':\n+            case '^':\n+            case '?':\n+            case '{':\n+            case '}':\n+            case '[':\n+            case ']':\n+            case '\\\\':\n                 regex.append('\\\\');\n-            }\n-            regex.append(c);\n+                break;\n+        }\n+        regex.append(c);\n+    }\n+\n+    if (unquote) {\n+        // Find unpaired \"'\" and return an error regex\n+        int quoteCount = value.length() - value.replace(\"'\", \"\").length();\n+        if (quoteCount % 2 == 1) {\n+            regex.setLength(0);\n+            regex.append(\"\\\\b\\\\Q\\\\E\\\\b\");\n         }\n-        return regex;\n     }\n \n+    regex.append(\"\\\\z\");\n+    return regex;\n+}\n+\n     /**\n      * A class to store Key / Value pairs\n      */",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0> but was:<100000>",
    "test_result": "FAIL"
}