{
    "patch": "protected BasePeriod(long duration) {\n    // create a duration object using the input duration value in milliseconds\n    Duration dur = Duration.millis(duration);\n    \n    // get the total number of whole weeks in the duration\n    int weeks = dur.toStandardWeeks().getWeeks();\n    \n    // create a new duration object with the whole weeks removed\n    Duration remainingDur = dur.minusWeeks(weeks);\n    \n    // create the period object using the remaining duration\n    Period period = remainingDur.toPeriod();\n    \n    // set the weeks field of the period object to the total number of whole weeks\n    period = period.withWeeks(weeks);\n    \n    // create the BasePeriod object with the computed period\n    this(period, PeriodType.standard(), ISOChronology.getInstanceUTC());\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..7ed0a76e 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,25 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    // create a duration object using the input duration value in milliseconds\n+    Duration dur = Duration.millis(duration);\n+    \n+    // get the total number of whole weeks in the duration\n+    int weeks = dur.toStandardWeeks().getWeeks();\n+    \n+    // create a new duration object with the whole weeks removed\n+    Duration remainingDur = dur.minusWeeks(weeks);\n+    \n+    // create the period object using the remaining duration\n+    Period period = remainingDur.toPeriod();\n+    \n+    // set the weeks field of the period object to the total number of whole weeks\n+    period = period.withWeeks(weeks);\n+    \n+    // create the BasePeriod object with the computed period\n+    this(period, PeriodType.standard(), ISOChronology.getInstanceUTC());\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}