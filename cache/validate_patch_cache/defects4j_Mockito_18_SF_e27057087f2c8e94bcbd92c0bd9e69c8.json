{
    "patch": "public static String reverseString(String str) {\n    if (str == null || str.length() == 0) {\n        return str;\n    }\n    char[] charArray = str.toCharArray();\n    int start = 0;\n    int end = str.length() - 1;\n\n    while (end > start) {\n        char temp = charArray[start];\n        charArray[start] = charArray[end];\n        charArray[end] = temp;\n        start++;\n        end--;\n    }\n    return new String(charArray);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..be4d13cd0 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,23 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static String reverseString(String str) {\n+    if (str == null || str.length() == 0) {\n+        return str;\n+    }\n+    char[] charArray = str.toCharArray();\n+    int start = 0;\n+    int end = str.length() - 1;\n+\n+    while (end > start) {\n+        char temp = charArray[start];\n+        charArray[start] = charArray[end];\n+        charArray[end] = temp;\n+        start++;\n+        end--;\n+    }\n+    return new String(charArray);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}