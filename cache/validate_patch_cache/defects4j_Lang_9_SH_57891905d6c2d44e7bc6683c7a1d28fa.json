{
    "patch": "List<Strategy> collector = new ArrayList<Strategy>();\n\nMatcher patternMatcher = formatPattern.matcher(pattern);\nString currentFormatField = null;\nwhile (patternMatcher.find()) {\n    Strategy currentStrategy = getStrategy(patternMatcher.group());\n    if (currentFormatField == null || currentFormatField.equals(currentStrategy.getFormatField())) {\n        currentFormatField = currentStrategy.getFormatField();\n        if (currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n    } else {\n        throw new IllegalArgumentException(\"Invalid pattern\");\n    }\n}\nif (!collector.isEmpty()) {\n    strategies = collector.toArray(new Strategy[collector.size()]);\n    parsePattern = Pattern.compile(regex.toString());\n} else {\n    strategies = new Strategy[0];\n    parsePattern = null;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..d90943e1 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,28 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+List<Strategy> collector = new ArrayList<Strategy>();\n+\n+Matcher patternMatcher = formatPattern.matcher(pattern);\n+String currentFormatField = null;\n+while (patternMatcher.find()) {\n+    Strategy currentStrategy = getStrategy(patternMatcher.group());\n+    if (currentFormatField == null || currentFormatField.equals(currentStrategy.getFormatField())) {\n+        currentFormatField = currentStrategy.getFormatField();\n+        if (currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        }\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid pattern\");\n+    }\n+}\n+if (!collector.isEmpty()) {\n+    strategies = collector.toArray(new Strategy[collector.size()]);\n+    parsePattern = Pattern.compile(regex.toString());\n+} else {\n+    strategies = new Strategy[0];\n+    parsePattern = null;\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: variable collector is already defined in method init()",
    "test_result": "ERROR"
}