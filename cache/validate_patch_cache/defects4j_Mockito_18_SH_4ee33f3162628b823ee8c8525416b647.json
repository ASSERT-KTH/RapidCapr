{
    "patch": "public ReturnValue execute(ExecutionEvent event) throws ExecutionException {\n    IWorkbenchWindow window = HandlerUtil.getActiveWorkbenchWindowChecked(event);\n    IWorkbenchPage page = window.getActivePage();\n    if (page != null) {\n        IEditorPart editorPart = page.getActiveEditor();\n        if (editorPart instanceof ITextEditor) {\n            ITextEditor editor = (ITextEditor) editorPart;\n            \n            IDocumentProvider dp = editor.getDocumentProvider();\n            IDocument doc = dp.getDocument(editor.getEditorInput());\n            try {\n                String text = doc.get(0, doc.getLength());\n                List<String> methodNames = getMethodNames(text);\n                return new ReturnValue(methodNames);\n            } catch (BadLocationException e) {\n                // Unexpected\n                e.printStackTrace();\n            }\n        }\n    }\n    return new ReturnValue(Collections.emptyList());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}