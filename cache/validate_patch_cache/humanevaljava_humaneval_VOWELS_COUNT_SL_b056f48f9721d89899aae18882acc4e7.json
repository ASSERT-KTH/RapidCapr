{
    "patch": "if (str_chars.length > 0 && (str_chars[str_chars.length - 1] == 'y' || str_chars[str_chars.length - 1] == 'Y')) {\n    if (result == 0 && !isPreviousCharVowel(str_chars)){//isPreviousCharVowel() is a helper function that checks if previous character is a vowel \n        result++;\n    }\n} else if (str_chars.length > 0 && (str_chars[str_chars.length - 1] == 'e' || str_chars[str_chars.length - 1] == 'E')) {\n    if (result ",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/VOWELS_COUNT.java b/src/main/java/humaneval/buggy/VOWELS_COUNT.java\nindex 5b0715f..37eb129 100644\n--- a/src/main/java/humaneval/buggy/VOWELS_COUNT.java\n+++ b/src/main/java/humaneval/buggy/VOWELS_COUNT.java\n@@ -21,7 +21,12 @@ public class VOWELS_COUNT {\n                     || c == 'U')\n                 result += 1;\n         }\n-        if (str_chars[str_chars.length - 1] == 'y')\n+if (str_chars.length > 0 && (str_chars[str_chars.length - 1] == 'y' || str_chars[str_chars.length - 1] == 'Y')) {\n+    if (result == 0 && !isPreviousCharVowel(str_chars)){//isPreviousCharVowel() is a helper function that checks if previous character is a vowel \n+        result++;\n+    }\n+} else if (str_chars.length > 0 && (str_chars[str_chars.length - 1] == 'e' || str_chars[str_chars.length - 1] == 'E')) {\n+    if (result \n             result += 1;\n         return result;\n     }",
    "result_reason": " /tmp/humaneval-VOWELS_COUNT/src/main/java/humaneval/buggy/VOWELS_COUNT.java:[29,15] ')' expected",
    "test_result": "ERROR"
}