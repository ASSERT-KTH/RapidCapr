{
    "patch": "if (start >= end) {\n    throw new IllegalArgumentException(\"Start bound must be less than end bound\");\n}\n\nif (chars == null) {\n    if (numbers && letters) {\n        chars = new char[end - start];\n        int idx = 0;\n        for (int i = start; i < end; i++) {\n            chars[idx++] = (char) i;\n        }\n    } else {\n        StringBuilder stringBuilder = new StringBuilder();\n        if (letters) {\n            stringBuilder.append(LOWER).append(UPPER);\n        }\n        if (numbers) {\n            stringBuilder.append(NUM);\n        }\n        chars = stringBuilder.toString().toCharArray();\n    }\n}\n\nif (count > end - start && chars.length == 0) {\n    throw new IllegalArgumentException(\"Requested length \" + count\n            + \" exceeds range [\" + start + \", \" + end + \"].\");\n} else if (count > chars.length) {\n    throw new IllegalArgumentException(\"Requested length \" + count\n            + \" exceeds the available symbols of length \" + chars.length);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..4a87a314 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,36 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+if (start >= end) {\n+    throw new IllegalArgumentException(\"Start bound must be less than end bound\");\n+}\n+\n+if (chars == null) {\n+    if (numbers && letters) {\n+        chars = new char[end - start];\n+        int idx = 0;\n+        for (int i = start; i < end; i++) {\n+            chars[idx++] = (char) i;\n+        }\n+    } else {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        if (letters) {\n+            stringBuilder.append(LOWER).append(UPPER);\n+        }\n+        if (numbers) {\n+            stringBuilder.append(NUM);\n+        }\n+        chars = stringBuilder.toString().toCharArray();\n+    }\n+}\n+\n+if (count > end - start && chars.length == 0) {\n+    throw new IllegalArgumentException(\"Requested length \" + count\n+            + \" exceeds range [\" + start + \", \" + end + \"].\");\n+} else if (count > chars.length) {\n+    throw new IllegalArgumentException(\"Requested length \" + count\n+            + \" exceeds the available symbols of length \" + chars.length);\n+}\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}