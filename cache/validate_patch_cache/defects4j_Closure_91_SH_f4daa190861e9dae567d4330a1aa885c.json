{
    "patch": "        } else if (lhs.getType() == Token.NAME) {\n          // Do not traverse the right hand of an assignment if the left hand\n          // is declared in an enclosing function.\n          Scope scope = t.getScope();\n          Var v = scope.getVar(lhs.getString());\n          if (v != null && v.getScope() != scope) {\n            return false;\n          }\n        }\n      }\n    }\n    ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..2deb5fae 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,18 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+        } else if (lhs.getType() == Token.NAME) {\n+          // Do not traverse the right hand of an assignment if the left hand\n+          // is declared in an enclosing function.\n+          Scope scope = t.getScope();\n+          Var v = scope.getVar(lhs.getString());\n+          if (v != null && v.getScope() != scope) {\n+            return false;\n+          }\n+        }\n+      }\n+    }\n+    \n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}