{
    "patch": "try {\n    byte[] inputBytes = input.getBytes(\"ISO-8859-1\");\n    byte[] outputBytes = new byte[inputBytes.length];\n\n    for (int i = 0, j = 0; i < inputBytes.length; i++, j++) {\n        byte current = inputBytes[i];\n\n        if (current == '\\\\' && i + 1 < inputBytes.length && inputBytes[i + 1] == 'u') {\n            int value = Integer.parseInt(new String(inputBytes, i + 2, 4), 16);\n            i += 5;\n            outputBytes[j] = (byte)value;\n        } else {\n            outputBytes[j] = current;\n        }\n    }\n\n    String output = new String(outputBytes, \"ISO-8859-1\");\n    success = output.equals(expectedOutput);\n} catch (UnsupportedEncodingException e) {\n    System.out.println(\"Encoding not supported\");\n    success = false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}