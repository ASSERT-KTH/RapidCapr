{
    "patch": "if (str.length() > 1 && (str.charAt(0) == '-' || str.charAt(0) == '+')) {\n    if (str.charAt(1) == '0' && StringUtils.isNotBlank(StringUtils.substringAfter(str, \"0\"))) {\n        if (StringUtils.startsWithIgnoreCase(StringUtils.substringAfter(str, \"0\"), \"x\")) {\n            str = StringUtils.substringAfter(str, \"0\");\n        } else {\n            throw new NumberFormatException(str + \" is not a valid number.\");\n        }\n    }\n} else if (str.startsWith(\"0\")) {\n    if (StringUtils.isNotBlank(StringUtils.substringAfter(str, \"0\"))) {\n        if (StringUtils.startsWithIgnoreCase(StringUtils.substringAfter(str, \"0\"), \"x\")) {\n            str = StringUtils.substringAfter(str, \"0\");\n        } else {\n            throw new NumberFormatException(str + \" is not a valid number.\");\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..fd7b0184 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,23 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.length() > 1 && (str.charAt(0) == '-' || str.charAt(0) == '+')) {\n+    if (str.charAt(1) == '0' && StringUtils.isNotBlank(StringUtils.substringAfter(str, \"0\"))) {\n+        if (StringUtils.startsWithIgnoreCase(StringUtils.substringAfter(str, \"0\"), \"x\")) {\n+            str = StringUtils.substringAfter(str, \"0\");\n+        } else {\n+            throw new NumberFormatException(str + \" is not a valid number.\");\n+        }\n+    }\n+} else if (str.startsWith(\"0\")) {\n+    if (StringUtils.isNotBlank(StringUtils.substringAfter(str, \"0\"))) {\n+        if (StringUtils.startsWithIgnoreCase(StringUtils.substringAfter(str, \"0\"), \"x\")) {\n+            str = StringUtils.substringAfter(str, \"0\");\n+        } else {\n+            throw new NumberFormatException(str + \" is not a valid number.\");\n+        }\n+    }\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}