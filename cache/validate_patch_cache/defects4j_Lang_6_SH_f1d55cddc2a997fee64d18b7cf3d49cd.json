{
    "patch": "                int codepoint = Character.codePointAt(input, pos);\n                int charCount = Character.charCount(codepoint);\n                pos += charCount;\n                if (charCount > 1) {\n                    out.write(\"\\\\u\");\n                    out.write(String.format(\"%04X\", codepoint));\n                } else {\n                    out.write(Character.toString((char) codepoint));\n                }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..d9f01bac 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,15 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                int codepoint = Character.codePointAt(input, pos);\n+                int charCount = Character.charCount(codepoint);\n+                pos += charCount;\n+                if (charCount > 1) {\n+                    out.write(\"\\\\u\");\n+                    out.write(String.format(\"%04X\", codepoint));\n+                } else {\n+                    out.write(Character.toString((char) codepoint));\n+                }\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: unescape(String) failed: expected '\\n",
    "test_result": "FAIL"
}