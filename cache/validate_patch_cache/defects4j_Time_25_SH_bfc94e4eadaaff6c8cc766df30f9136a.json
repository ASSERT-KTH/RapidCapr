{
    "patch": "\t\t\tif (offsetLocal > offsetAdjusted) {\n            \t// we need to add the duration of the DST gap to instantAdjusted\n                long nextTransition = nextTransition(instantAdjusted);\n                long nextTransitionOffset = getOffset(nextTransition);\n                int diff = offsetLocal - nextTransitionOffset;\n                if (diff >= 0) {\n                    instantAdjusted += diff + (nextTransitionOffset - offsetAdjusted);\n                } else {\n                    instantAdjusted += nextTransitionOffset - offsetAdjusted;\n                }\n                int newOffset = getOffset(instantAdjusted);\n                if (newOffset != offsetAdjusted) {\n                    return offsetLocal;\n                }\n            } else if (offsetLocal < offsetAdjusted) {\n            \t// we need to subtract the duration of the DST gap from instantAdjusted\n                long nextTransition = nextTransition(instantAdjusted);\n                long nextTransitionOffset = getOffset(nextTransition);\n                int diff = offsetAdjusted - nextTransitionOffset;\n                if (diff >= 0) {\n                    instantAdjusted -= diff + (offsetAdjusted - nextTransitionOffset);\n                } else {\n                    instantAdjusted -= offsetAdjusted - nextTransitionOffset;\n                }\n                int newOffset = getOffset(instantAdjusted);\n                if (newOffset != offsetAdjusted) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..649bc8a0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -895,6 +895,35 @@ public abstract class DateTimeZone implements Serializable {\n                 if (nextLocal != nextAdjusted) {\n                     return offsetLocal;\n                 }\n+            }\n+\t\t\tif (offsetLocal > offsetAdjusted) {\n+            \t// we need to add the duration of the DST gap to instantAdjusted\n+                long nextTransition = nextTransition(instantAdjusted);\n+                long nextTransitionOffset = getOffset(nextTransition);\n+                int diff = offsetLocal - nextTransitionOffset;\n+                if (diff >= 0) {\n+                    instantAdjusted += diff + (nextTransitionOffset - offsetAdjusted);\n+                } else {\n+                    instantAdjusted += nextTransitionOffset - offsetAdjusted;\n+                }\n+                int newOffset = getOffset(instantAdjusted);\n+                if (newOffset != offsetAdjusted) {\n+                    return offsetLocal;\n+                }\n+            } else if (offsetLocal < offsetAdjusted) {\n+            \t// we need to subtract the duration of the DST gap from instantAdjusted\n+                long nextTransition = nextTransition(instantAdjusted);\n+                long nextTransitionOffset = getOffset(nextTransition);\n+                int diff = offsetAdjusted - nextTransitionOffset;\n+                if (diff >= 0) {\n+                    instantAdjusted -= diff + (offsetAdjusted - nextTransitionOffset);\n+                } else {\n+                    instantAdjusted -= offsetAdjusted - nextTransitionOffset;\n+                }\n+                int newOffset = getOffset(instantAdjusted);\n+                if (newOffset != offsetAdjusted) {\n+                    return offsetLocal;\n+                }\n             }\n         }\n         return offsetAdjusted;",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}