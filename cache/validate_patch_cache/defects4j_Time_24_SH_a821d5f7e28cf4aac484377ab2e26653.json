{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        SavedField savedField = savedFields[i];\n        long oldMillis = millis;\n        long newMillis = savedField.set(oldMillis, resetFields);\n        if ((newMillis ^ oldMillis) < 0) {\n            // adjust millis value in case of underflow or overflow\n            if ((millis ^ oldMillis) < 0) {\n                millis = newMillis < 0 ? Long.MIN_VALUE : Long.MAX_VALUE;\n            } else {\n              // millis value did not change, so an overflow would have occurred\n                throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n            }\n        } else {\n            millis = newMillis;\n        }\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fd2159c2 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,29 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        SavedField savedField = savedFields[i];\n+        long oldMillis = millis;\n+        long newMillis = savedField.set(oldMillis, resetFields);\n+        if ((newMillis ^ oldMillis) < 0) {\n+            // adjust millis value in case of underflow or overflow\n+            if ((millis ^ oldMillis) < 0) {\n+                millis = newMillis < 0 ? Long.MIN_VALUE : Long.MAX_VALUE;\n+            } else {\n+              // millis value did not change, so an overflow would have occurred\n+                throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n+            }\n+        } else {\n+            millis = newMillis;\n+        }\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Parse failed due to numeric overflow",
    "test_result": "FAIL"
}