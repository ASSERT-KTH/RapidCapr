{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                int year = savedFields[i].iValue;\n                int weekOfWeekyear = savedFields[i + 1].iValue;\n                Chronology chrono = savedFields[i].iChrono;\n                int millis = chrono.millisOfDay().get(millis);\n                millis = setWeekyear(millis, year, chrono);\n                millis = chrono.weekOfWeekyear().set(millis, weekOfWeekyear);\n                return millis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..ffdaaccb 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                int year = savedFields[i].iValue;\n+                int weekOfWeekyear = savedFields[i + 1].iValue;\n+                Chronology chrono = savedFields[i].iChrono;\n+                int millis = chrono.millisOfDay().get(millis);\n+                millis = setWeekyear(millis, year, chrono);\n+                millis = chrono.weekOfWeekyear().set(millis, weekOfWeekyear);\n+                return millis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}