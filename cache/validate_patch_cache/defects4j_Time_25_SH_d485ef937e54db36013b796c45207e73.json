{
    "patch": "            if (offsetAdjusted == 0) {\n                // Check if it's a gap or overlap\n                boolean nextIsOverlap = (getOffset(nextTransition(instantAdjusted)) > 0);\n                boolean prevIsGap = (getOffset(nextTransition(instantAdjusted - 1)) == 0);\n                if (nextIsOverlap && prevIsGap) {\n                    return getStandardOffset(instantLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..46fe5ed8 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,12 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetAdjusted == 0) {\n+                // Check if it's a gap or overlap\n+                boolean nextIsOverlap = (getOffset(nextTransition(instantAdjusted)) > 0);\n+                boolean prevIsGap = (getOffset(nextTransition(instantAdjusted - 1)) == 0);\n+                if (nextIsOverlap && prevIsGap) {\n+                    return getStandardOffset(instantLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}