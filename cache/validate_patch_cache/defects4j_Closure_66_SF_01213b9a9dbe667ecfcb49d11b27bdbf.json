{
    "patch": "public static double getTypedPercent(String javascript) {\n    int totalChars = javascript.length();\n    int commentChars = 0;\n    boolean inSingleLineComment = false;\n    boolean inMultiLineComment = false;\n    for (int i = 0; i < totalChars - 1; i++) {\n        char currentChar = javascript.charAt(i);\n        char nextChar = javascript.charAt(i + 1);\n        if (inSingleLineComment) {\n            if (currentChar == '\\n') {\n                inSingleLineComment = false;\n            } else {\n                commentChars++;\n            }\n        } else if (inMultiLineComment) {\n            if (currentChar == '*' && nextChar == '/') {\n                inMultiLineComment = false;\n                commentChars += 2;\n                i++;\n            } else {\n                commentChars++;\n            }\n        } else {\n            if (currentChar == '/' && nextChar == '/') {\n                inSingleLineComment = true;\n                commentChars += 2;\n                i++;\n            } else if (currentChar == '/' && nextChar == '*') {\n                inMultiLineComment = true;\n                commentChars += 2;\n                i++;\n            }\n        }\n    }\n    double percent = ((double) commentChars / (double) totalChars) * 100.0;\n    return (100.0 - percent);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..61991343 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,43 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String javascript) {\n+    int totalChars = javascript.length();\n+    int commentChars = 0;\n+    boolean inSingleLineComment = false;\n+    boolean inMultiLineComment = false;\n+    for (int i = 0; i < totalChars - 1; i++) {\n+        char currentChar = javascript.charAt(i);\n+        char nextChar = javascript.charAt(i + 1);\n+        if (inSingleLineComment) {\n+            if (currentChar == '\\n') {\n+                inSingleLineComment = false;\n+            } else {\n+                commentChars++;\n+            }\n+        } else if (inMultiLineComment) {\n+            if (currentChar == '*' && nextChar == '/') {\n+                inMultiLineComment = false;\n+                commentChars += 2;\n+                i++;\n+            } else {\n+                commentChars++;\n+            }\n+        } else {\n+            if (currentChar == '/' && nextChar == '/') {\n+                inSingleLineComment = true;\n+                commentChars += 2;\n+                i++;\n+            } else if (currentChar == '/' && nextChar == '*') {\n+                inMultiLineComment = true;\n+                commentChars += 2;\n+                i++;\n+            }\n+        }\n+    }\n+    double percent = ((double) commentChars / (double) totalChars) * 100.0;\n+    return (100.0 - percent);\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}