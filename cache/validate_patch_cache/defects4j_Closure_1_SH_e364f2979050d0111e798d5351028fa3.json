{
    "patch": "        // Checking isFunctionDeclaration here as it is required for default \n        // arguments inside function arguments.\n        if (lastArg.isFunctionDeclaration() || referenced.contains(var)) {\n          break;\n        }\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..8ce7a078 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,13 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+        // Checking isFunctionDeclaration here as it is required for default \n+        // arguments inside function arguments.\n+        if (lastArg.isFunctionDeclaration() || referenced.contains(var)) {\n+          break;\n+        }\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}