{
    "patch": "    public static int fib4(int n) {\n        if (n < 2) {\n            return n;\n        }\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        result.add(0);\n        result.add(0);\n        result.add(2);\n        result.add(0);\n        for (int i = 3; i <= n; i++) {\n            int temp = result.get(0) + result.get(1) + result.get(2) + result.get(3);\n            result.set(0, result.get(1));\n            result.set(1, result.get(2));\n            result.set(2, result.get(3));\n            result.set(3, temp);\n        }\n        return result.get(3);\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB4.java b/src/main/java/humaneval/buggy/FIB4.java\nindex e4ae6f3..d867d90 100644\n--- a/src/main/java/humaneval/buggy/FIB4.java\n+++ b/src/main/java/humaneval/buggy/FIB4.java\n@@ -18,19 +18,21 @@ Please write a function to efficiently compute the n-th element of the fib4 numb\n \n public class FIB4 {\n     public static int fib4(int n) {\n-        ArrayList<Integer> result = new ArrayList<Integer>(); \n+        if (n < 2) {\n+            return n;\n+        }\n+        ArrayList<Integer> result = new ArrayList<Integer>();\n         result.add(0);\n         result.add(0);\n         result.add(2);\n         result.add(0);\n-\n-        if (n < 4)\n-            return result.get(n);\n-        for (int i = 4; i < n + 1; i += 1) {\n-            result.add(\n-                result.get(0) + result.get(1) + result.get(2) + result.get(3)\n-            );\n+        for (int i = 3; i <= n; i++) {\n+            int temp = result.get(0) + result.get(1) + result.get(2) + result.get(3);\n+            result.set(0, result.get(1));\n+            result.set(1, result.get(2));\n+            result.set(2, result.get(3));\n+            result.set(3, temp);\n         }\n-        return result.get(result.size() - 1);\n+        return result.get(3);\n     }\n }",
    "result_reason": "   TEST_FIB4.test_0:7 expected:<8> but was:<4>",
    "test_result": "FAIL"
}