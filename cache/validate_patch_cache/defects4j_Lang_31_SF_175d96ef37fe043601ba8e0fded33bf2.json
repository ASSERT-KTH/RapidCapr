{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int strLen = sequence.length();\n    final int searchLen = searchChars.length;\n    final int[] chars = new int[searchLen];\n    for (int i = 0; i < searchLen; i++) {\n        chars[i] = searchChars[i];\n    }\n    final boolean[] found = new boolean[1];\n    for (int i = 0; i < strLen && !found[0]; i++) {\n        final int strChar = Character.codePointAt(sequence, i);\n        for (final int searchChar : chars) {\n            if (strChar == searchChar) {\n                found[0] = true;\n                break;\n            }\n        }\n    }\n    return found[0];\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..0fa56e81 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,28 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int strLen = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int[] chars = new int[searchLen];\n+    for (int i = 0; i < searchLen; i++) {\n+        chars[i] = searchChars[i];\n+    }\n+    final boolean[] found = new boolean[1];\n+    for (int i = 0; i < strLen && !found[0]; i++) {\n+        final int strChar = Character.codePointAt(sequence, i);\n+        for (final int searchChar : chars) {\n+            if (strChar == searchChar) {\n+                found[0] = true;\n+                break;\n+            }\n+        }\n+    }\n+    return found[0];\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}