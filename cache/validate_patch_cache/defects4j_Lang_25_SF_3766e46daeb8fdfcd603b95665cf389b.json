{
    "patch": "public static String decode(String str) {\n    String result = \"\";\n    \n    for (int i = 0; i < str.length(); i++) {\n        char c = str.charAt(i);\n        if (c == '+') {\n            result += \" \";\n        } else if (c == '%') {\n            try {\n                result += (char) Integer.parseInt(str.substring(i + 1, i + 3), 16);\n                i += 2;\n            } catch (NumberFormatException e) {\n                throw new IllegalArgumentException();\n            } catch (StringIndexOutOfBoundsException e) {\n                String rest = str.substring(i);\n                result += rest;\n                if (rest.length() == 2) {\n                    i++;\n                }\n            }\n        } else {\n            result += c;\n        }\n    }\n    \n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..1c333fd1 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,33 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String str) {\n+    String result = \"\";\n+    \n+    for (int i = 0; i < str.length(); i++) {\n+        char c = str.charAt(i);\n+        if (c == '+') {\n+            result += \" \";\n+        } else if (c == '%') {\n+            try {\n+                result += (char) Integer.parseInt(str.substring(i + 1, i + 3), 16);\n+                i += 2;\n+            } catch (NumberFormatException e) {\n+                throw new IllegalArgumentException();\n+            } catch (StringIndexOutOfBoundsException e) {\n+                String rest = str.substring(i);\n+                result += rest;\n+                if (rest.length() == 2) {\n+                    i++;\n+                }\n+            }\n+        } else {\n+            result += c;\n+        }\n+    }\n+    \n+    return result;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}