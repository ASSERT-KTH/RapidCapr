{
    "patch": "                // added this condition to ensure that we only return a new offset\n                // if the next transition is after the instant, not equal to it\n                if (nextLocal > instantLocal && nextLocal != nextAdjusted) {\n                    return getOffset(nextLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..61c06af7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,10 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // added this condition to ensure that we only return a new offset\n+                // if the next transition is after the instant, not equal to it\n+                if (nextLocal > instantLocal && nextLocal != nextAdjusted) {\n+                    return getOffset(nextLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}