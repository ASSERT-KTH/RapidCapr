{
    "patch": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.SingularValueDecomposition;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    final SingularValueDecomposition dec = new SingularValueDecomposition(m);\n    RealMatrix s = dec.getS();\n    for (int i = 0; i < s.getRowDimension(); i++) {\n        double sqrt = Math.sqrt(s.getEntry(i, i));\n        s.setEntry(i, i, sqrt);\n    }\n    RealMatrix u = dec.getU();\n    RealMatrix v = dec.getVT();\n    return u.multiply(s).multiply(v.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..17d20d24d 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,18 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+import org.apache.commons.math3.linear.RealMatrix;\n+import org.apache.commons.math3.linear.SingularValueDecomposition;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final SingularValueDecomposition dec = new SingularValueDecomposition(m);\n+    RealMatrix s = dec.getS();\n+    for (int i = 0; i < s.getRowDimension(); i++) {\n+        double sqrt = Math.sqrt(s.getEntry(i, i));\n+        s.setEntry(i, i, sqrt);\n     }\n+    RealMatrix u = dec.getU();\n+    RealMatrix v = dec.getVT();\n+    return u.multiply(s).multiply(v.transpose());\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}