{
    "patch": "// This function name will be empty for unnamed functions, and will have a non-empty string\n// representation for named functions.\nString functionName = \"\";\nboolean shouldSetFunctionName = true;\nname = functionNode.getFunctionName();\nif (name != null) {\n  functionName = name.getIdentifier();\n  shouldSetFunctionName = false;\n}\nname = new Name();\nname.setIdentifier(functionName);\nNode newName = transform(name);\nif (shouldSetFunctionName) {\n  // Old Rhino tagged the Name node representing the function name with the line \n  // number of the declaration.\n  newName.setLineno(functionNode.getLineno());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..ef5063f7 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,23 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+// This function name will be empty for unnamed functions, and will have a non-empty string\n+// representation for named functions.\n+String functionName = \"\";\n+boolean shouldSetFunctionName = true;\n+name = functionNode.getFunctionName();\n+if (name != null) {\n+  functionName = name.getIdentifier();\n+  shouldSetFunctionName = false;\n+}\n+name = new Name();\n+name.setIdentifier(functionName);\n+Node newName = transform(name);\n+if (shouldSetFunctionName) {\n+  // Old Rhino tagged the Name node representing the function name with the line \n+  // number of the declaration.\n+  newName.setLineno(functionNode.getLineno());\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}