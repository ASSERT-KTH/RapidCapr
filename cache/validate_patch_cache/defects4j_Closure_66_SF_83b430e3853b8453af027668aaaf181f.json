{
    "patch": "public double getTypedPercent(JSONObject jsonObject) {\n    double responses = jsonObject.getJSONArray(\"results\").length();\n    double correct = 0.0;\n    for (int i = 0; i < responses; i++) {\n        JSONObject result = jsonObject.getJSONArray(\"results\").getJSONObject(i);\n        if (result.getBoolean(\"correct\")) {\n            correct++;\n        }\n    }\n    return (correct / responses) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..0c31a815 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JSONObject jsonObject) {\n+    double responses = jsonObject.getJSONArray(\"results\").length();\n+    double correct = 0.0;\n+    for (int i = 0; i < responses; i++) {\n+        JSONObject result = jsonObject.getJSONArray(\"results\").getJSONObject(i);\n+        if (result.getBoolean(\"correct\")) {\n+            correct++;\n+        }\n+    }\n+    return (correct / responses) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}