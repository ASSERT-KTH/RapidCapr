{
    "patch": " private boolean hasExceptionHandler(Node cfgNode) {\n     if (cfgNode instanceof ExceptionHandlingNode) {\n         return true;\n     }\n     return cfgNode.getSuccs().stream().anyMatch(this::hasExceptionHandler);\n }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..9ac4097d 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,12 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+ private boolean hasExceptionHandler(Node cfgNode) {\n+     if (cfgNode instanceof ExceptionHandlingNode) {\n+         return true;\n+     }\n+     return cfgNode.getSuccs().stream().anyMatch(this::hasExceptionHandler);\n+ }\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}