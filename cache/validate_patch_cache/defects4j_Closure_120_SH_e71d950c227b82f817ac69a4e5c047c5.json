{
    "patch": "        BasicBlock currentBlock = ref.getBasicBlock();\n        while (currentBlock.getParent() != null) {\n            if (currentBlock.getParent().isFunction) {\n                return false;\n            }\n            currentBlock = currentBlock.getParent();\n        }\n        if (block.isLoop) {\n            return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..bd6c1041 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        BasicBlock currentBlock = ref.getBasicBlock();\n+        while (currentBlock.getParent() != null) {\n+            if (currentBlock.getParent().isFunction) {\n+                return false;\n+            }\n+            currentBlock = currentBlock.getParent();\n+        }\n+        if (block.isLoop) {\n+            return false;\n+        }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}