{
    "patch": "            if (offsetLocal >= 0 && offsetAdjusted < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    // we need to add a multiple of the length to ensure we skip over\n                    // the DST gap\n                    long jump = getOffset(nextLocal) - offsetLocal;\n                    return getOffset(nextLocal + jump);\n                }\n            } else if (offsetLocal <= 0 && offsetAdjusted > 0) {\n                long prevLocal = previousTransition(instantAdjusted - 1);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted - 1);\n                if (prevLocal < prevAdjusted) {\n                    // we need to add a multiple of the length to ensure we skip over\n                    // the DST gap\n                    long jump = getOffset(prevLocal) - offsetLocal;\n                    return getOffset(prevLocal + jump);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8369f2d6 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,23 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal >= 0 && offsetAdjusted < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    // we need to add a multiple of the length to ensure we skip over\n+                    // the DST gap\n+                    long jump = getOffset(nextLocal) - offsetLocal;\n+                    return getOffset(nextLocal + jump);\n+                }\n+            } else if (offsetLocal <= 0 && offsetAdjusted > 0) {\n+                long prevLocal = previousTransition(instantAdjusted - 1);\n+                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted - 1);\n+                if (prevLocal < prevAdjusted) {\n+                    // we need to add a multiple of the length to ensure we skip over\n+                    // the DST gap\n+                    long jump = getOffset(prevLocal) - offsetLocal;\n+                    return getOffset(prevLocal + jump);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}