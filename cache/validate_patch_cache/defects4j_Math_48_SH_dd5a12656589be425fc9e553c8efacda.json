{
    "patch": "case REGULA_FALSI:\n    // Detect early that algorithm is stuck, instead of waiting for the maximum number of iterations to be exceeded.\n    if (FastMath.abs(f1) < FastMath.abs(f0)) {\n        // New bracketing interval is smaller than previous interval.\n        final double tmpX = x0;\n        final double tmpF = f0;\n        x0 = x1;\n        x1 = tmpX;\n        f0 = f1;\n        f1 = tmpF;\n    }\n    if (++i >= maximalIterationCount) {\n        throw new ConvergenceException(\n                LocalizedFormats.FAILED_TO_CONVERGE_AFTER_N_ITERATIONS,\n                maximalIterationCount);\n    }\n    break;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\nindex 8a667dad3..fb0893c92 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n@@ -186,6 +186,23 @@ public abstract class BaseSecantSolver\n                 case REGULA_FALSI:\n                     // Detect early that algorithm is stuck, instead of waiting\n                     // for the maximum number of iterations to be exceeded.\n+case REGULA_FALSI:\n+    // Detect early that algorithm is stuck, instead of waiting for the maximum number of iterations to be exceeded.\n+    if (FastMath.abs(f1) < FastMath.abs(f0)) {\n+        // New bracketing interval is smaller than previous interval.\n+        final double tmpX = x0;\n+        final double tmpF = f0;\n+        x0 = x1;\n+        x1 = tmpX;\n+        f0 = f1;\n+        f1 = tmpF;\n+    }\n+    if (++i >= maximalIterationCount) {\n+        throw new ConvergenceException(\n+                LocalizedFormats.FAILED_TO_CONVERGE_AFTER_N_ITERATIONS,\n+                maximalIterationCount);\n+    }\n+    break;\n                     break;\n                 default:\n                     // Should never happen.",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}