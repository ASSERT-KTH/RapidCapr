{
    "patch": "private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n    boolean wasWhite= false;\n    for(int i= 0; i<value.length(); ++i) {\n        char c= value.charAt(i);\n        switch(c) {\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n            case '@':\n            case '&':\n                regex.append('\\\\');\n                break;\n        }\n        regex.append(c);\n    }\n\n    if (unquote) {\n        // Strip quotes around simple date format patterns\n        String pattern = regex.toString();\n        if (pattern.startsWith(\"'\" ) && pattern.endsWith(\"'\")) {\n            regex = new StringBuilder(pattern.substring(1, pattern.length() - 1));\n        }\n    }\n\n    return regex;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..cb873c29 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,27 +300,11 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n+private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n+    boolean wasWhite= false;\n+    for(int i= 0; i<value.length(); ++i) {\n+        char c= value.charAt(i);\n+        switch(c) {\n             case '?':\n             case '[':\n             case ']':\n@@ -335,13 +319,25 @@ public class FastDateParser implements DateParser, Serializable {\n             case '^':\n             case '$':\n             case '.':\n+            case '@':\n+            case '&':\n                 regex.append('\\\\');\n-            }\n-            regex.append(c);\n+                break;\n         }\n-        return regex;\n+        regex.append(c);\n     }\n \n+    if (unquote) {\n+        // Strip quotes around simple date format patterns\n+        String pattern = regex.toString();\n+        if (pattern.startsWith(\"'\" ) && pattern.endsWith(\"'\")) {\n+            regex = new StringBuilder(pattern.substring(1, pattern.length() - 1));\n+        }\n+    }\n+\n+    return regex;\n+}\n+\n     /**\n      * A class to store Key / Value pairs\n      */",
    "result_reason": "java.text.ParseException: Unparseable date: \"'20030210A'B153320989'\" does not match ''(\\p{IsNd}{4}+)(\\p{IsNd}{2}+)(\\p{IsNd}++)A''B(\\p{IsNd}{2}+)(\\p{IsNd}{2}+)(\\p{IsNd}{2}+)(\\p{IsNd}++)''",
    "test_result": "FAIL"
}