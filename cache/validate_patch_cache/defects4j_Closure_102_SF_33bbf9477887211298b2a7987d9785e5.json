{
    "patch": "public void process(Node externs, Node root) {\n      NodeTraversal.traverse(compiler, root, this);\n      if (MAKE_LOCAL_NAMES_UNIQUE) {\n        MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n        NodeTraversal t = new NodeTraversal(compiler, renamer);\n        t.traverseRoots(externs, root);\n      }\n      removeDuplicateDeclarations(root);\n      new PropogateConstantAnnotations(compiler, assertOnChange)\n          .process(externs, root);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java\nindex 4aa45558..2f0581f5 100644\n--- a/src/com/google/javascript/jscomp/Normalize.java\n+++ b/src/com/google/javascript/jscomp/Normalize.java\n@@ -84,16 +84,16 @@ class Normalize implements CompilerPass, Callback {\n   }\n \n   @Override\n-  public void process(Node externs, Node root) {\n-    NodeTraversal.traverse(compiler, root, this);\n-    if (MAKE_LOCAL_NAMES_UNIQUE) {\n-      MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n-      NodeTraversal t = new NodeTraversal(compiler, renamer);\n-      t.traverseRoots(externs, root);\n-    }\n-    removeDuplicateDeclarations(root);\n-    new PropogateConstantAnnotations(compiler, assertOnChange)\n-        .process(externs, root);\n+public void process(Node externs, Node root) {\n+      NodeTraversal.traverse(compiler, root, this);\n+      if (MAKE_LOCAL_NAMES_UNIQUE) {\n+        MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n+        NodeTraversal t = new NodeTraversal(compiler, renamer);\n+        t.traverseRoots(externs, root);\n+      }\n+      removeDuplicateDeclarations(root);\n+      new PropogateConstantAnnotations(compiler, assertOnChange)\n+          .process(externs, root);\n   }\n \n   @Override",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}