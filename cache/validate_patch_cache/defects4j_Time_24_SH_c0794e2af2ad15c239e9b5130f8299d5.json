{
    "patch": "for (int i = 0; i < count; i++) {\n    DateTimeField field = savedFields[i].iField;\n    if (field.getDurationField().getType() == DurationFieldType.weekyears()) { // weekyear\n        Chronology chrono = iChrono.withUTC();\n        millis = chrono.weekyear().set(millis, savedFields[i].iValue); // set weekyear\n        chrono.validate(millis, field.set(0, millis));\n    } else {\n        millis = savedFields[i].set(millis, resetFields); // other field\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d25bee15 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,16 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    DateTimeField field = savedFields[i].iField;\n+    if (field.getDurationField().getType() == DurationFieldType.weekyears()) { // weekyear\n+        Chronology chrono = iChrono.withUTC();\n+        millis = chrono.weekyear().set(millis, savedFields[i].iValue); // set weekyear\n+        chrono.validate(millis, field.set(0, millis));\n+    } else {\n+        millis = savedFields[i].set(millis, resetFields); // other field\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: no suitable method found for set(int,long)",
    "test_result": "ERROR"
}