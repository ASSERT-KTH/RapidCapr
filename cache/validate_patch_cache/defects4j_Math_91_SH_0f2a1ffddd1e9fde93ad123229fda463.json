{
    "patch": "        int n1 = this.numerator * object.denominator;\n        int n2 = this.denominator * object.numerator;\n        if (n1 < n2) {\n            return -1;\n        } else if (n1 > n2) {\n            return 1;\n        } else {\n            return 0;\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..d872b9f79 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,15 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+        int n1 = this.numerator * object.denominator;\n+        int n2 = this.denominator * object.numerator;\n+        if (n1 < n2) {\n+            return -1;\n+        } else if (n1 > n2) {\n+            return 1;\n+        } else {\n+            return 0;\n+        }\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}