{
    "patch": "if (start > this.getItemCount() - 1) {\n    throw new IllegalArgumentException(\"Start index is greater than the index of the last data item.\");\n}\nTimeSeries copy = (TimeSeries) super.clone();\ncopy.data = new ArrayList<>();\nfor (int index = start; index <= end && index < this.data.size(); index++) {\n    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index).clone();\n    copy.add(item);\n}\ncopy.minY = Double.NaN;\ncopy.maxY = Double.NaN;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..0f0cbd1 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+if (start > this.getItemCount() - 1) {\n+    throw new IllegalArgumentException(\"Start index is greater than the index of the last data item.\");\n+}\n+TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new ArrayList<>();\n+for (int index = start; index <= end && index < this.data.size(); index++) {\n+    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index).clone();\n+    copy.add(item);\n+}\n+copy.minY = Double.NaN;\n+copy.maxY = Double.NaN;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}