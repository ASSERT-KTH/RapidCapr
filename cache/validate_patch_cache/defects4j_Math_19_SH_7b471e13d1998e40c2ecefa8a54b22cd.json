{
    "patch": "if (boundaries != null) {\n    double boundaryRange = boundaries[1][0] - boundaries[0][0];\n    if (Double.isInfinite(boundaryRange)) {\n        throw new NumberIsTooLargeException(boundaryRange, 0, true);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 51d1c6428..82fdb4ab6 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -537,6 +537,12 @@ public class CMAESOptimizer\n                 boundaries[1] = uB;\n \n                 // Abort early if the normalization will overflow (cf. \"encode\" method).\n+if (boundaries != null) {\n+    double boundaryRange = boundaries[1][0] - boundaries[0][0];\n+    if (Double.isInfinite(boundaryRange)) {\n+        throw new NumberIsTooLargeException(boundaryRange, 0, true);\n+    }\n+}\n             }\n         } else {\n             // Convert API to internal handling of boundaries.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}