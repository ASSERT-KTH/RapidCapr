{
    "patch": "      // Check for a JSDoc `this` parameter that isn't being used in the function.\n      JSDocInfo jsDoc = NodeUtil.getBestJSDocInfo(n);\n      if (jsDoc != null && jsDoc.hasThisType() && NodeUtil.getFunctionParameters(n).stream()\n          .noneMatch(param -> param.getString().equals(\"this\"))) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..6e550250 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,10 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Check for a JSDoc `this` parameter that isn't being used in the function.\n+      JSDocInfo jsDoc = NodeUtil.getBestJSDocInfo(n);\n+      if (jsDoc != null && jsDoc.hasThisType() && NodeUtil.getFunctionParameters(n).stream()\n+          .noneMatch(param -> param.getString().equals(\"this\"))) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}