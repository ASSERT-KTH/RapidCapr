{
    "patch": "StringBuffer newStr = new StringBuffer();\nfor (int i = 0; i < str.length(); i++) {\n    char c = str.charAt(i);\n    if (c == '\\\\') {\n        if (i + 1 < str.length() && str.charAt(i + 1) == 'n') {\n            newStr.append('\\n');\n            i++;\n        } else if (i + 1 < str.length() && str.charAt(i + 1) == 't') {\n            newStr.append('\\t');\n            i++;\n        } else {\n            newStr.append(c);\n        }\n    } else if (charsetName.equals(\"ISO-8859-1\") && c > 0xFF) {\n        newStr.append(\"\\\\u\");\n        newStr.append(String.format(\"%04X\", (int) c));\n    } else {\n        newStr.append(c);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}