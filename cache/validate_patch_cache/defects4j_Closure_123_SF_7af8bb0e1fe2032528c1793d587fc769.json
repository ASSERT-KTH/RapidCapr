{
    "patch": "public String fixBug(String code) {\n    if (code.contains(\"for\")) {\n        int index = code.indexOf(\"for\");\n        int openIndex = code.indexOf(\"(\", index);\n        int closeIndex = code.indexOf(\")\", openIndex);\n\n        String forLoop = code.substring(openIndex + 1, closeIndex);\n\n        String[] loopSplit = forLoop.split(\";\");\n        String condition = loopSplit[1].trim();\n\n        if (condition.contains(\"in\")) {\n            String[] inSplit = condition.split(\" \");\n\n            String variable = inSplit[0].trim();\n            String collection = inSplit[2].trim();\n\n            String fixedCondition = variable + \" in \" + collection + \".keys()\";\n\n            String fixedForLoop = \"for (\" + loopSplit[0].trim() + \"; \" + fixedCondition + \"; \" + loopSplit[2].trim() + \")\";\n\n            code = code.substring(0, openIndex + 1) + fixedForLoop + code.substring(closeIndex);\n        }\n    }\n\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..4623ddca 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,33 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixBug(String code) {\n+    if (code.contains(\"for\")) {\n+        int index = code.indexOf(\"for\");\n+        int openIndex = code.indexOf(\"(\", index);\n+        int closeIndex = code.indexOf(\")\", openIndex);\n+\n+        String forLoop = code.substring(openIndex + 1, closeIndex);\n+\n+        String[] loopSplit = forLoop.split(\";\");\n+        String condition = loopSplit[1].trim();\n+\n+        if (condition.contains(\"in\")) {\n+            String[] inSplit = condition.split(\" \");\n+\n+            String variable = inSplit[0].trim();\n+            String collection = inSplit[2].trim();\n+\n+            String fixedCondition = variable + \" in \" + collection + \".keys()\";\n+\n+            String fixedForLoop = \"for (\" + loopSplit[0].trim() + \"; \" + fixedCondition + \"; \" + loopSplit[2].trim() + \")\";\n+\n+            code = code.substring(0, openIndex + 1) + fixedForLoop + code.substring(closeIndex);\n+        }\n+    }\n+\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}