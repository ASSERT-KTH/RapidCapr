{
    "patch": "    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        boolean oneFound = false;\n        boolean nonZeroFound = false;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            final double entry = getEntry(i, col);\n            if (!MathUtils.equals(entry, 0.0, epsilon)) {\n                if (MathUtils.equals(entry, 1.0, epsilon)) {\n                    if (!oneFound) {\n                        oneFound = true;\n                        row = i;\n                    } else {\n                        return null;\n                    }\n                } else {\n                    if (!nonZeroFound) {\n                        nonZeroFound = true;\n                        row = i;\n                    } else {\n                        return null;\n                    }\n                }\n            }\n        }\n        return row;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex 0ab790cd6..1bf20ff1a 100644\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -271,12 +271,25 @@ class SimplexTableau implements Serializable {\n      */\n     private Integer getBasicRow(final int col) {\n         Integer row = null;\n+        boolean oneFound = false;\n+        boolean nonZeroFound = false;\n         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-                if (row == null) {\n-                row = i;\n+            final double entry = getEntry(i, col);\n+            if (!MathUtils.equals(entry, 0.0, epsilon)) {\n+                if (MathUtils.equals(entry, 1.0, epsilon)) {\n+                    if (!oneFound) {\n+                        oneFound = true;\n+                        row = i;\n+                    } else {\n+                        return null;\n+                    }\n                 } else {\n-                return null;\n+                    if (!nonZeroFound) {\n+                        nonZeroFound = true;\n+                        row = i;\n+                    } else {\n+                        return null;\n+                    }\n                 }\n             }\n         }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<10.0> but was:<0.0>",
    "test_result": "FAIL"
}