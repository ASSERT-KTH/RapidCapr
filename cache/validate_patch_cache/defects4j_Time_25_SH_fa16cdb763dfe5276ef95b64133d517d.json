{
    "patch": "                if (offsetLocal < offsetAdjusted) {\n                    // we are in the \"gap\", so use the offset before the transition\n                    long prevTransition = previousTransition(instantAdjusted);\n                    int offsetBefore = getOffset(prevTransition);\n                    if (offsetBefore == offsetLocal) {\n                        return offsetBefore;\n                    }\n                } else {\n                    // we are in the \"overlap\", so use the offset AFTER the transition\n                    long nextTransition = nextTransition(instantAdjusted);\n                    int offsetAfter = getOffset(nextTransition);\n                    if (offsetAdjusted == offsetAfter) {\n                        return offsetLocal;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..74ea5092 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,21 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if (offsetLocal < offsetAdjusted) {\n+                    // we are in the \"gap\", so use the offset before the transition\n+                    long prevTransition = previousTransition(instantAdjusted);\n+                    int offsetBefore = getOffset(prevTransition);\n+                    if (offsetBefore == offsetLocal) {\n+                        return offsetBefore;\n+                    }\n+                } else {\n+                    // we are in the \"overlap\", so use the offset AFTER the transition\n+                    long nextTransition = nextTransition(instantAdjusted);\n+                    int offsetAfter = getOffset(nextTransition);\n+                    if (offsetAdjusted == offsetAfter) {\n+                        return offsetLocal;\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}