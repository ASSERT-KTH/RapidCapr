{
    "patch": "        List<Node> toRemove = new ArrayList<>();\n        boolean keepGoing = true;\n\n        while (keepGoing) {\n          keepGoing = false;\n          for (Node arg : argList.children()) {\n            if (toRemove.contains(arg)) {\n              continue;\n            }\n            Var var = fnScope.getVar(arg.getString());\n            if (!referenced.contains(var)) {\n              toRemove.add(arg);\n              keepGoing = true;\n              break;\n            }\n          }\n        }\n\n        for (Node arg : toRemove) {\n          argList.removeChild(arg);\n          compiler.reportCodeChange();\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..e2aa083b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,28 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+        List<Node> toRemove = new ArrayList<>();\n+        boolean keepGoing = true;\n+\n+        while (keepGoing) {\n+          keepGoing = false;\n+          for (Node arg : argList.children()) {\n+            if (toRemove.contains(arg)) {\n+              continue;\n+            }\n+            Var var = fnScope.getVar(arg.getString());\n+            if (!referenced.contains(var)) {\n+              toRemove.add(arg);\n+              keepGoing = true;\n+              break;\n+            }\n+          }\n+        }\n+\n+        for (Node arg : toRemove) {\n+          argList.removeChild(arg);\n+          compiler.reportCodeChange();\n+        }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}