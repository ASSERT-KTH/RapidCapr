{
    "patch": "        iDuration = duration;\n        iYears = 0;\n        iMonths = 0;\n        iWeeks = (int) (duration / (long) DateTimeConstants.MILLIS_PER_WEEK);\n        duration -= iWeeks * (long) DateTimeConstants.MILLIS_PER_WEEK;\n        iDays = (int) (duration / (long) DateTimeConstants.MILLIS_PER_DAY);\n        duration -= iDays * (long) DateTimeConstants.MILLIS_PER_DAY;\n        iHours = (int) (duration / (long) DateTimeConstants.MILLIS_PER_HOUR);\n        duration -= iHours * (long) DateTimeConstants.MILLIS_PER_HOUR;\n        iMinutes = (int) (duration / (long) DateTimeConstants.MILLIS_PER_MINUTE);\n        duration -= iMinutes * (long) DateTimeConstants.MILLIS_PER_MINUTE;\n        iSeconds = (int) (duration / (long) DateTimeConstants.MILLIS_PER_SECOND);\n        duration -= iSeconds * (long) DateTimeConstants.MILLIS_PER_SECOND;\n        iMillis = (int) duration;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..18ae5fd1 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,20 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        iDuration = duration;\n+        iYears = 0;\n+        iMonths = 0;\n+        iWeeks = (int) (duration / (long) DateTimeConstants.MILLIS_PER_WEEK);\n+        duration -= iWeeks * (long) DateTimeConstants.MILLIS_PER_WEEK;\n+        iDays = (int) (duration / (long) DateTimeConstants.MILLIS_PER_DAY);\n+        duration -= iDays * (long) DateTimeConstants.MILLIS_PER_DAY;\n+        iHours = (int) (duration / (long) DateTimeConstants.MILLIS_PER_HOUR);\n+        duration -= iHours * (long) DateTimeConstants.MILLIS_PER_HOUR;\n+        iMinutes = (int) (duration / (long) DateTimeConstants.MILLIS_PER_MINUTE);\n+        duration -= iMinutes * (long) DateTimeConstants.MILLIS_PER_MINUTE;\n+        iSeconds = (int) (duration / (long) DateTimeConstants.MILLIS_PER_SECOND);\n+        duration -= iSeconds * (long) DateTimeConstants.MILLIS_PER_SECOND;\n+        iMillis = (int) duration;\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}