{
    "patch": "public Fraction reduce() {\n    int numCopy = numerator;\n    int denCopy = denominator;\n    int gcd = greatestCommonDivisor(Math.abs(numCopy), denCopy);\n\n    if (gcd == 1) {\n        return this;\n    }\n\n    numCopy /= gcd;\n    denCopy /= gcd;\n\n    return new Fraction(numCopy, denCopy);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..57edd0c9 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,20 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+public Fraction reduce() {\n+    int numCopy = numerator;\n+    int denCopy = denominator;\n+    int gcd = greatestCommonDivisor(Math.abs(numCopy), denCopy);\n+\n+    if (gcd == 1) {\n+        return this;\n+    }\n+\n+    numCopy /= gcd;\n+    denCopy /= gcd;\n+\n+    return new Fraction(numCopy, denCopy);\n+}\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}