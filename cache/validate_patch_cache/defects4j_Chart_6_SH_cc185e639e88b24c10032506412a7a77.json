{
    "patch": "        ShapeList other = (ShapeList)obj;\n        if (size() != other.size()) {\n            return false;\n        }\n        Iterator<?> iter1 = iterator();\n        Iterator<?> iter2 = other.iterator();\n        while (iter1.hasNext() && iter2.hasNext()) {\n            Shape s1 = (Shape) iter1.next();\n            Shape s2 = (Shape) iter2.next();\n            if (!ShapeUtilities.equal(s1, s2)) {\n                return false;\n            }\n        }\n        return !(iter1.hasNext() || iter2.hasNext());",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..1596920 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,20 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+        ShapeList other = (ShapeList)obj;\n+        if (size() != other.size()) {\n+            return false;\n+        }\n+        Iterator<?> iter1 = iterator();\n+        Iterator<?> iter2 = other.iterator();\n+        while (iter1.hasNext() && iter2.hasNext()) {\n+            Shape s1 = (Shape) iter1.next();\n+            Shape s2 = (Shape) iter2.next();\n+            if (!ShapeUtilities.equal(s1, s2)) {\n+                return false;\n+            }\n+        }\n+        return !(iter1.hasNext() || iter2.hasNext());\n \n     }\n \n@@ -169,4 +182,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}