{
    "patch": "        // parse imaginary character\n        int n = getImaginaryCharacter().length();\n        startIndex = pos.getIndex();\n        endIndex = startIndex + n;\n        if (endIndex > source.length() || \n                !source.substring(startIndex, endIndex).equals(getImaginaryCharacter())) {\n            // set index back to initial, error index should be the start index\n            // character examined.\n            pos.setIndex(initialIndex);\n            pos.setErrorIndex(startIndex);\n            return null;\n        }\n        pos.setIndex(endIndex);\n\n        return new Complex(re.doubleValue(), im.doubleValue() * sign);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/ComplexFormat.java b/src/java/org/apache/commons/math/complex/ComplexFormat.java\nindex b404bc415..1b368773b 100644\n--- a/src/java/org/apache/commons/math/complex/ComplexFormat.java\n+++ b/src/java/org/apache/commons/math/complex/ComplexFormat.java\n@@ -374,7 +374,21 @@ public class ComplexFormat extends Format implements Serializable {\n         int n = getImaginaryCharacter().length();\n         startIndex = pos.getIndex();\n         int endIndex = startIndex + n;\n-        if (\n+        // parse imaginary character\n+        int n = getImaginaryCharacter().length();\n+        startIndex = pos.getIndex();\n+        endIndex = startIndex + n;\n+        if (endIndex > source.length() || \n+                !source.substring(startIndex, endIndex).equals(getImaginaryCharacter())) {\n+            // set index back to initial, error index should be the start index\n+            // character examined.\n+            pos.setIndex(initialIndex);\n+            pos.setErrorIndex(startIndex);\n+            return null;\n+        }\n+        pos.setIndex(endIndex);\n+\n+        return new Complex(re.doubleValue(), im.doubleValue() * sign);\n             source.substring(startIndex, endIndex).compareTo(\n             getImaginaryCharacter()) != 0) {\n             // set index back to initial, error index should be the start index",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}