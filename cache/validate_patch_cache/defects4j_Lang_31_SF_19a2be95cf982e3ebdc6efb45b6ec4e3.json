{
    "patch": "public static boolean containsAny(final CharSequence str, final char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int len = str.length();\n    final int searchLen = searchChars.length;\n    final int stopIndex = len - 1;\n    for (int i = 0; i < len; i++) {\n        final char ch = str.charAt(i);\n        if (i < stopIndex && isSurrogatePair(ch, str.charAt(i + 1))) {\n            final int codePoint = toCodePoint(ch, str.charAt(++i));\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == codePoint) {\n                    return true;\n                }\n            }\n        } else {\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isSurrogate(final char ch) {\n    return ch >= MIN_SURROGATE && ch < MAX_SURROGATE + 1;\n}\n  \nprivate static boolean isSurrogatePair(final char high, final char low) {\n    return high >= MIN_HIGH_SURROGATE && high < MAX_HIGH_SURROGATE + 1 && low >= MIN_LOW_SURROGATE\n            && low < MAX_LOW_SURROGATE + 1;\n}\n\nprivate static int toCodePoint(final char high, final char low) {\n    return ((high - MIN_HIGH_SURROGATE) << HALF_SHIFT) + low - MIN_LOW_SURROGATE + HALF_BASE;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..8d3921b9 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,45 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence str, final char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int len = str.length();\n+    final int searchLen = searchChars.length;\n+    final int stopIndex = len - 1;\n+    for (int i = 0; i < len; i++) {\n+        final char ch = str.charAt(i);\n+        if (i < stopIndex && isSurrogatePair(ch, str.charAt(i + 1))) {\n+            final int codePoint = toCodePoint(ch, str.charAt(++i));\n+            for (int j = 0; j < searchLen; j++) {\n+                if (searchChars[j] == codePoint) {\n+                    return true;\n+                }\n+            }\n+        } else {\n+            for (int j = 0; j < searchLen; j++) {\n+                if (searchChars[j] == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isSurrogate(final char ch) {\n+    return ch >= MIN_SURROGATE && ch < MAX_SURROGATE + 1;\n+}\n+  \n+private static boolean isSurrogatePair(final char high, final char low) {\n+    return high >= MIN_HIGH_SURROGATE && high < MAX_HIGH_SURROGATE + 1 && low >= MIN_LOW_SURROGATE\n+            && low < MAX_LOW_SURROGATE + 1;\n+}\n+\n+private static int toCodePoint(final char high, final char low) {\n+    return ((high - MIN_HIGH_SURROGATE) << HALF_SHIFT) + low - MIN_LOW_SURROGATE + HALF_BASE;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}