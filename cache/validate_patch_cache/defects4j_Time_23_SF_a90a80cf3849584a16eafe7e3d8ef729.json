{
    "patch": "            map.put(\"UTC\", \"GMT\");\n            map.put(\"Pacific/Apia\", \"MIT\");\n            map.put(\"Pacific/Honolulu\", \"HST\");  // JDK 1.1 compatible\n            map.put(\"America/Anchorage\", \"AST\");\n            map.put(\"America/Los_Angeles\", \"PST\");\n            map.put(\"America/Denver\", \"MST\");  // JDK 1.1 compatible\n            map.put(\"America/Phoenix\", \"PNT\");\n            map.put(\"America/Chicago\", \"CST\");\n            map.put(\"America/New_York\", \"EST\");  // JDK 1.1 compatible\n            map.put(\"America/Indianapolis\", \"IET\");\n            map.put(\"America/Puerto_Rico\", \"PRT\");\n            map.put(\"America/St_Johns\", \"CNT\");\n            map.put(\"America/Buenos_Aires\", \"AGT\");\n            map.put(\"America/Sao_Paulo\", \"BET\");\n            map.put(\"Europe/London\", \"WET\");\n            map.put(\"Europe/Paris\", \"ECT\");\n            map.put(\"Africa/Cairo\", \"ART\");\n            map.put(\"Africa/Harare\", \"CAT\");\n            map.put(\"Europe/Bucharest\", \"EET\");\n            map.put(\"Africa/Addis_Ababa\", \"EAT\");\n            map.put(\"Asia/Tehran\", \"MET\");\n            map.put(\"Asia/Yerevan\", \"NET\");\n            map.put(\"Asia/Karachi\", \"PLT\");\n            map.put(\"Asia/Calcutta\", \"IST\");\n            map.put(\"Asia/Dhaka\", \"BST\");\n            map.put(\"Asia/Saigon\", \"VST\");\n            map.put(\"Asia/Shanghai\", \"CTT\");\n            map.put(\"Asia/Tokyo\", \"JST\");\n            map.put(\"Australia/Darwin\", \"ACT\");\n            map.put(\"Australia/Sydney\", \"AET\");\n            map.put(\"Pacific/Guadalcanal\", \"SST\");\n            map.put(\"Pacific/Auckland\", \"NST\");",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 5d89e34b..8b7afc7f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -555,47 +555,38 @@ public abstract class DateTimeZone implements Serializable {\n      * @param id  the old style id\n      * @return the new style id, null if not found\n      */\n-    private static synchronized String getConvertedId(String id) {\n-        Map<String, String> map = cZoneIdConversion;\n-        if (map == null) {\n-            // Backwards compatibility with TimeZone.\n-            map = new HashMap<String, String>();\n-            map.put(\"GMT\", \"UTC\");\n-            map.put(\"MIT\", \"Pacific/Apia\");\n-            map.put(\"HST\", \"Pacific/Honolulu\");  // JDK 1.1 compatible\n-            map.put(\"AST\", \"America/Anchorage\");\n-            map.put(\"PST\", \"America/Los_Angeles\");\n-            map.put(\"MST\", \"America/Denver\");  // JDK 1.1 compatible\n-            map.put(\"PNT\", \"America/Phoenix\");\n-            map.put(\"CST\", \"America/Chicago\");\n-            map.put(\"EST\", \"America/New_York\");  // JDK 1.1 compatible\n-            map.put(\"IET\", \"America/Indianapolis\");\n-            map.put(\"PRT\", \"America/Puerto_Rico\");\n-            map.put(\"CNT\", \"America/St_Johns\");\n-            map.put(\"AGT\", \"America/Buenos_Aires\");\n-            map.put(\"BET\", \"America/Sao_Paulo\");\n-            map.put(\"WET\", \"Europe/London\");\n-            map.put(\"ECT\", \"Europe/Paris\");\n-            map.put(\"ART\", \"Africa/Cairo\");\n-            map.put(\"CAT\", \"Africa/Harare\");\n-            map.put(\"EET\", \"Europe/Bucharest\");\n-            map.put(\"EAT\", \"Africa/Addis_Ababa\");\n-            map.put(\"MET\", \"Asia/Tehran\");\n-            map.put(\"NET\", \"Asia/Yerevan\");\n-            map.put(\"PLT\", \"Asia/Karachi\");\n-            map.put(\"IST\", \"Asia/Calcutta\");\n-            map.put(\"BST\", \"Asia/Dhaka\");\n-            map.put(\"VST\", \"Asia/Saigon\");\n-            map.put(\"CTT\", \"Asia/Shanghai\");\n-            map.put(\"JST\", \"Asia/Tokyo\");\n-            map.put(\"ACT\", \"Australia/Darwin\");\n-            map.put(\"AET\", \"Australia/Sydney\");\n-            map.put(\"SST\", \"Pacific/Guadalcanal\");\n-            map.put(\"NST\", \"Pacific/Auckland\");\n-            cZoneIdConversion = map;\n-        }\n-        return map.get(id);\n-    }\n+            map.put(\"UTC\", \"GMT\");\n+            map.put(\"Pacific/Apia\", \"MIT\");\n+            map.put(\"Pacific/Honolulu\", \"HST\");  // JDK 1.1 compatible\n+            map.put(\"America/Anchorage\", \"AST\");\n+            map.put(\"America/Los_Angeles\", \"PST\");\n+            map.put(\"America/Denver\", \"MST\");  // JDK 1.1 compatible\n+            map.put(\"America/Phoenix\", \"PNT\");\n+            map.put(\"America/Chicago\", \"CST\");\n+            map.put(\"America/New_York\", \"EST\");  // JDK 1.1 compatible\n+            map.put(\"America/Indianapolis\", \"IET\");\n+            map.put(\"America/Puerto_Rico\", \"PRT\");\n+            map.put(\"America/St_Johns\", \"CNT\");\n+            map.put(\"America/Buenos_Aires\", \"AGT\");\n+            map.put(\"America/Sao_Paulo\", \"BET\");\n+            map.put(\"Europe/London\", \"WET\");\n+            map.put(\"Europe/Paris\", \"ECT\");\n+            map.put(\"Africa/Cairo\", \"ART\");\n+            map.put(\"Africa/Harare\", \"CAT\");\n+            map.put(\"Europe/Bucharest\", \"EET\");\n+            map.put(\"Africa/Addis_Ababa\", \"EAT\");\n+            map.put(\"Asia/Tehran\", \"MET\");\n+            map.put(\"Asia/Yerevan\", \"NET\");\n+            map.put(\"Asia/Karachi\", \"PLT\");\n+            map.put(\"Asia/Calcutta\", \"IST\");\n+            map.put(\"Asia/Dhaka\", \"BST\");\n+            map.put(\"Asia/Saigon\", \"VST\");\n+            map.put(\"Asia/Shanghai\", \"CTT\");\n+            map.put(\"Asia/Tokyo\", \"JST\");\n+            map.put(\"Australia/Darwin\", \"ACT\");\n+            map.put(\"Australia/Sydney\", \"AET\");\n+            map.put(\"Pacific/Guadalcanal\", \"SST\");\n+            map.put(\"Pacific/Auckland\", \"NST\");\n \n     private static int parseOffset(String str) {\n         // Can't use a real chronology if called during class",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}