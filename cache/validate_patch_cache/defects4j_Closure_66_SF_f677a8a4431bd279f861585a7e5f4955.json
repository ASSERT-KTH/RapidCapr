{
    "patch": "public static double getTypedPercent(String json) {\n    Gson gson = new Gson();\n    TransmissionData data = gson.fromJson(json, TransmissionData.class);\n\n    double typedCount = 0.0;\n    for (Object obj : data.events) {\n        if (obj instanceof EventTypeA) {\n            typedCount += 1.0;\n        }\n    }\n\n    double totalCount = data.events.size();\n    double typedPercent = (typedCount / totalCount) * 100.0;\n    return typedPercent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..cb0bd558 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    Gson gson = new Gson();\n+    TransmissionData data = gson.fromJson(json, TransmissionData.class);\n+\n+    double typedCount = 0.0;\n+    for (Object obj : data.events) {\n+        if (obj instanceof EventTypeA) {\n+            typedCount += 1.0;\n+        }\n+    }\n+\n+    double totalCount = data.events.size();\n+    double typedPercent = (typedCount / totalCount) * 100.0;\n+    return typedPercent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}