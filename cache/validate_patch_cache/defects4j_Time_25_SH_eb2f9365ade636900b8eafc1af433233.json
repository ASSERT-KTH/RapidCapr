{
    "patch": "            long prev = previousTransition(instantAdjusted);\n            if (prev == instantAdjusted - offsetLocal) {\n                long next = nextTransition(instantAdjusted);\n                if (next == instantAdjusted - offsetLocal) {\n                    return offsetLocal;\n                }\n                int offsetNext = getOffset(next);\n                if (offsetLocal - offsetNext >= 0) {\n                    return offsetLocal;\n                }\n                return offsetNext;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..5eda5811 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            long prev = previousTransition(instantAdjusted);\n+            if (prev == instantAdjusted - offsetLocal) {\n+                long next = nextTransition(instantAdjusted);\n+                if (next == instantAdjusted - offsetLocal) {\n+                    return offsetLocal;\n+                }\n+                int offsetNext = getOffset(next);\n+                if (offsetLocal - offsetNext >= 0) {\n+                    return offsetLocal;\n+                }\n+                return offsetNext;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}