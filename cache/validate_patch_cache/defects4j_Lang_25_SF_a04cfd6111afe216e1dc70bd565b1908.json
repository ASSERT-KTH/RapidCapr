{
    "patch": "public static String Escape(String instr)\n    {\n        String result = \"\";\n        String tmp;\n        for (int i = 0; i < instr.length(); i++)\n        {\n            char c = instr.charAt(i);\n            if (c <= '\u007f')\n            {\n                if (c == '\"' || c == '\\'' || c == '\\\\')\n                {\n                    result += '\\\\';\n                }\n                result += c;\n            }\n            else if (c <= '\\u07ff')\n            {\n                result += \"\\\\u\";\n                tmp = Integer.toHexString(c);\n                for (int j = 0; j < 4 - tmp.length(); j++)\n                    result += \"0\";\n                result += tmp;\n            }\n            else\n            {\n                result += \"\\\\u\";\n                tmp = Integer.toHexString(c);\n                for (int j = 0; j < 4 - tmp.length(); j++)\n                    result += \"0\";\n                result += tmp;\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..265e801a 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,40 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String Escape(String instr)\n+    {\n+        String result = \"\";\n+        String tmp;\n+        for (int i = 0; i < instr.length(); i++)\n+        {\n+            char c = instr.charAt(i);\n+            if (c <= '\u007f')\n+            {\n+                if (c == '\"' || c == '\\'' || c == '\\\\')\n+                {\n+                    result += '\\\\';\n+                }\n+                result += c;\n+            }\n+            else if (c <= '\\u07ff')\n+            {\n+                result += \"\\\\u\";\n+                tmp = Integer.toHexString(c);\n+                for (int j = 0; j < 4 - tmp.length(); j++)\n+                    result += \"0\";\n+                result += tmp;\n+            }\n+            else\n+            {\n+                result += \"\\\\u\";\n+                tmp = Integer.toHexString(c);\n+                for (int j = 0; j < 4 - tmp.length(); j++)\n+                    result += \"0\";\n+                result += tmp;\n+            }\n+        }\n+        return result;\n+    }\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}