{
    "patch": "        if (this.isNullish() && that.isSubtypeOfObjectType()) {\n          return new TypePair(JSType.NULL, that);\n        }\n        if (this.isSubtypeOfObjectType() && that.isNullish()) {\n          return new TypePair(this, JSType.NULL);\n        }\n        return new TypePair(this.restrictByNotNullOrUndefined(), that.restrictByNotNullOrUndefined());",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..06a26047 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,13 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+        if (this.isNullish() && that.isSubtypeOfObjectType()) {\n+          return new TypePair(JSType.NULL, that);\n+        }\n+        if (this.isSubtypeOfObjectType() && that.isNullish()) {\n+          return new TypePair(this, JSType.NULL);\n+        }\n+        return new TypePair(this.restrictByNotNullOrUndefined(), that.restrictByNotNullOrUndefined());\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}