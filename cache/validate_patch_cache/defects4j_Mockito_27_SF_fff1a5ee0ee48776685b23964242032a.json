{
    "patch": "        if (mock instanceof Proxy) {\n            InvocationHandler invocationHandler = Proxy.getInvocationHandler(mock);\n            if (invocationHandler instanceof MockHandler) {\n                MockHandler<T> oldMockHandler = (MockHandler<T>) invocationHandler;\n                MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n                ((MockAccess) mock).setMockitoInterceptor(newMockHandler);\n                ((MockAccess) mock).setMockitoInterceptor(newMockHandler);\n                MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n                ((Factory) mock).setCallback(0, newFilter);\n                return;\n            }\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..aa8b26dac 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+        if (mock instanceof Proxy) {\n+            InvocationHandler invocationHandler = Proxy.getInvocationHandler(mock);\n+            if (invocationHandler instanceof MockHandler) {\n+                MockHandler<T> oldMockHandler = (MockHandler<T>) invocationHandler;\n+                MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+                ((MockAccess) mock).setMockitoInterceptor(newMockHandler);\n+                ((MockAccess) mock).setMockitoInterceptor(newMockHandler);\n+                MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+                ((Factory) mock).setCallback(0, newFilter);\n+                return;\n+            }\n+        }\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}