{
    "patch": "private static String ESCAPE_string(String s)\n    {\n    StringBuffer sbuf = new StringBuffer();\n    s = s.replaceAll(\"\\\\\\\\\",\"\\\\\\\\\\\\\\\\\");      // patch up escape char first!!!\n    for (int i=0; i<s.length(); i++)\n        {\n        char ch = s.charAt(i);\n        switch (ch)\n            {\n            case '\\r':\n                sbuf.append(\"\\\\r\");\n                break;\n            case '\\n':\n                sbuf.append(\"\\\\n\");\n                break;\n            case '\\\"':\n                sbuf.append(\"\\\\\\\"\");\n                break;\n            case '\\\\':\n                sbuf.append(\"\\\\\\\\\");\n                break;\n            case '\\t':\n                sbuf.append(\"\\\\t\");\n                break;\n            case '\\f':\n                sbuf.append(\"\\\\f\");\n                break;\n            case '\\b':\n                sbuf.append(\"\\\\b\");\n                break;\n            default:\n                if (ch < 0x20 || ch > 0x7e)\n                    {\n                    String ss = \"0000\" + Integer.toString(ch, 16);\n                    sbuf.append(\"\\\\u\" + ss.substring(ss.length()-4, ss.length()));\n                    }\n                else\n                    sbuf.append(ch);\n            }\n        }\n    return sbuf.toString();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}