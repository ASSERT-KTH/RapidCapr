{
    "patch": "public static String fixCode(String code) {\n    final String pattern = \" for\\\\(([a-zA-Z0-9]+)\\\\s*=\\\\s*([a-zA-Z0-9]+)\\\\?([a-zA-Z0-9]+):\\\\[([a-zA-Z0-9]+)\\\\]\\\\)(.*)\";\n    Pattern p = Pattern.compile(pattern);\n    Matcher m = p.matcher(code);\n    StringBuffer sb = new StringBuffer();\n    boolean found = false;\n    \n    while (m.find()) {\n        found = true;\n        String var = m.group(1);\n        String cond1 = m.group(2);\n        String cond2 = m.group(3);\n        String arr = m.group(4);\n        String rest = m.group(5);\n        String replacement = \"for (\" + var + \" = \" + cond1 + \"; \" + var + \" < \" + arr + \".length; \" + var + \"++)\" + rest;\n        m.appendReplacement(sb, Matcher.quoteReplacement(replacement));\n    }\n    \n    if (!found) {\n        return code;\n    } else {\n        m.appendTail(sb);\n        return sb.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..c38f72fb 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,31 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    final String pattern = \" for\\\\(([a-zA-Z0-9]+)\\\\s*=\\\\s*([a-zA-Z0-9]+)\\\\?([a-zA-Z0-9]+):\\\\[([a-zA-Z0-9]+)\\\\]\\\\)(.*)\";\n+    Pattern p = Pattern.compile(pattern);\n+    Matcher m = p.matcher(code);\n+    StringBuffer sb = new StringBuffer();\n+    boolean found = false;\n+    \n+    while (m.find()) {\n+        found = true;\n+        String var = m.group(1);\n+        String cond1 = m.group(2);\n+        String cond2 = m.group(3);\n+        String arr = m.group(4);\n+        String rest = m.group(5);\n+        String replacement = \"for (\" + var + \" = \" + cond1 + \"; \" + var + \" < \" + arr + \".length; \" + var + \"++)\" + rest;\n+        m.appendReplacement(sb, Matcher.quoteReplacement(replacement));\n+    }\n+    \n+    if (!found) {\n+        return code;\n+    } else {\n+        m.appendTail(sb);\n+        return sb.toString();\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}