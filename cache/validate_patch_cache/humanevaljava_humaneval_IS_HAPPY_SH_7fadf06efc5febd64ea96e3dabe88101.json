{
    "patch": "public static boolean is_happy(String s) {\n    if (s.length() < 3)\n        return false;\n    // Check if any substring of length 3 consists of all distinct characters\n    for (int i = 0; i < s.length() - 2; i++) {\n        Set<Character> chars = new HashSet<>();\n        chars.add(s.charAt(i));\n        chars.add(s.charAt(i + 1));\n        chars.add(s.charAt(i + 2));\n        if (chars.size() == 3)\n            return true;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_HAPPY.java b/src/main/java/humaneval/buggy/IS_HAPPY.java\nindex 4c6720d..431ac29 100644\n--- a/src/main/java/humaneval/buggy/IS_HAPPY.java\n+++ b/src/main/java/humaneval/buggy/IS_HAPPY.java\n@@ -16,7 +16,20 @@ public class IS_HAPPY {\n         if (s.length() < 3)\n             return false;\n         for (int i = 0; i < s.length() - 2; i += 1) {\n-            if (s.charAt(i) == s.charAt(i + 1) || s.charAt(i + 1) == s.charAt(i + 2))\n+public static boolean is_happy(String s) {\n+    if (s.length() < 3)\n+        return false;\n+    // Check if any substring of length 3 consists of all distinct characters\n+    for (int i = 0; i < s.length() - 2; i++) {\n+        Set<Character> chars = new HashSet<>();\n+        chars.add(s.charAt(i));\n+        chars.add(s.charAt(i + 1));\n+        chars.add(s.charAt(i + 2));\n+        if (chars.size() == 3)\n+            return true;\n+    }\n+    return false;\n+}\n                 return false;\n         }\n         return true;",
    "result_reason": " /tmp/humaneval-IS_HAPPY/src/main/java/humaneval/buggy/IS_HAPPY.java:[19,1] illegal start of expression",
    "test_result": "ERROR"
}