{
    "patch": "public static ReturnValue doOperation(Operation op) {\n    ReturnValue values = new ReturnValue();\n\n    switch (op) {\n        case ADD:\n            values.setValue1(1);\n            values.setValue2(2);\n            break;\n        case SUBTRACT:\n            values.setValue1(5);\n            values.setValue2(4);\n            break;\n        case MULTIPLY:\n            values.setValue1(3);\n            values.setValue2(4);\n            break;\n        case DIVIDE:\n            values.setValue1(10);\n            values.setValue2(5);\n            break;\n        default:\n            values.setValue1(0);\n            values.setValue2(0);\n    }\n\n    List<String> list = values.returnValueFor(List.class);\n    if (!list.isEmpty()) {\n        list.add(\"someValue\");\n    }\n\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}