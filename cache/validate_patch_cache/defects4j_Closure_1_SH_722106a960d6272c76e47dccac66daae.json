{
    "patch": "    List<Node> unreferencedArgs = new ArrayList<>();\n\n    if (!modifyCallers) {\n      // Collect the unreferenced args.\n      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n        Var var = fnScope.getVar(arg.getString());\n        if (!referenced.contains(var)) {\n          unreferencedArgs.add(arg);\n        } else if (unreferencedArgs.size() > 0) {\n          // We found a reference to the param after some unreferenced params.\n          // Remove the unreferenced params now.\n          for (Node unusedArg : unreferencedArgs) {\n            argList.removeChild(unusedArg);\n          }\n          compiler.reportCodeChange();\n          unreferencedArgs.clear();\n        }\n      }\n\n      // Remove all the trailing unreferenced params.\n      for (Node unusedArg : unreferencedArgs) {\n        argList.removeChild(unusedArg);\n      }\n      if (!unreferencedArgs.isEmpty()) {\n        // if there are any changes, report them\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..db1b9e8b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,32 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> unreferencedArgs = new ArrayList<>();\n+\n+    if (!modifyCallers) {\n+      // Collect the unreferenced args.\n+      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n+        Var var = fnScope.getVar(arg.getString());\n+        if (!referenced.contains(var)) {\n+          unreferencedArgs.add(arg);\n+        } else if (unreferencedArgs.size() > 0) {\n+          // We found a reference to the param after some unreferenced params.\n+          // Remove the unreferenced params now.\n+          for (Node unusedArg : unreferencedArgs) {\n+            argList.removeChild(unusedArg);\n+          }\n+          compiler.reportCodeChange();\n+          unreferencedArgs.clear();\n+        }\n+      }\n+\n+      // Remove all the trailing unreferenced params.\n+      for (Node unusedArg : unreferencedArgs) {\n+        argList.removeChild(unusedArg);\n+      }\n+      if (!unreferencedArgs.isEmpty()) {\n+        // if there are any changes, report them\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}