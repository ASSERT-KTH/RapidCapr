{
    "patch": "public static String getProperty(String propName, String defaultValue) {\n     Properties prop = getProperties();\n@@ -19,7 +19,7 @@ public static String getProperty(String propName, String defaultValue) {\n             return defaultValue;\n         }\n\n-        if (value == null)\n+        if (value == null) {\n             return null;\n+        }\n\n         return value;\n     }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..7e11340a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getProperty(String propName, String defaultValue) {\n+     Properties prop = getProperties();\n+@@ -19,7 +19,7 @@ public static String getProperty(String propName, String defaultValue) {\n+             return defaultValue;\n+         }\n+\n+-        if (value == null)\n++        if (value == null) {\n+             return null;\n++        }\n+\n+         return value;\n+     }\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}