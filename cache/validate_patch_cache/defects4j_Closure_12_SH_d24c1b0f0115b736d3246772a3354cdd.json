{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode instanceof CatchStatement) {\n        return true;\n    }\n\n    if (cfgNode.outgoingEdges().stream().anyMatch(e -> e.type() == CFGEdgeType.EXCEPTIONAL)) {\n        return true;\n    }\n\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..96e6f1ae 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,17 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode instanceof CatchStatement) {\n+        return true;\n+    }\n+\n+    if (cfgNode.outgoingEdges().stream().anyMatch(e -> e.type() == CFGEdgeType.EXCEPTIONAL)) {\n+        return true;\n+    }\n+\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}