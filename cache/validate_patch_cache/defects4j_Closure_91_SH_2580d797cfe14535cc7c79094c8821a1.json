{
    "patch": "      if (parent.getType() == Token.EXPR_RESULT) {\n        Node expr = parent.getFirstChild();\n        Node assign = expr.getFirstChild();\n        if (assign != null && assign.getType() == Token.ASSIGN) {\n          Node lhs = assign.getFirstChild();\n          Node rhs = assign.getLastChild();\n          if (rhs != null && rhs.isFunction()) {\n            Node getProp = lhs.isGetProp() ? lhs : null;\n            if (getProp != null) {\n              Node obj = getProp.getFirstChild();\n              Node pname = getProp.getLastChild();\n              if (obj.matchesQualifiedName(\"window\") &&\n                  (pname.getString().equals(\"Object\") ||\n                   pname.isEquivalentTo(QualifiedName.create(\"Object.prototype\")))) {\n                return false;\n              }\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..227ca68e 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,23 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent.getType() == Token.EXPR_RESULT) {\n+        Node expr = parent.getFirstChild();\n+        Node assign = expr.getFirstChild();\n+        if (assign != null && assign.getType() == Token.ASSIGN) {\n+          Node lhs = assign.getFirstChild();\n+          Node rhs = assign.getLastChild();\n+          if (rhs != null && rhs.isFunction()) {\n+            Node getProp = lhs.isGetProp() ? lhs : null;\n+            if (getProp != null) {\n+              Node obj = getProp.getFirstChild();\n+              Node pname = getProp.getLastChild();\n+              if (obj.matchesQualifiedName(\"window\") &&\n+                  (pname.getString().equals(\"Object\") ||\n+                   pname.isEquivalentTo(QualifiedName.create(\"Object.prototype\")))) {\n+                return false;\n+              }\n+            }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}