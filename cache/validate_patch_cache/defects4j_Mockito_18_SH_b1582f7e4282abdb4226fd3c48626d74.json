{
    "patch": "public ReturnValue execute(CallableProgram callableProgram) throws ProgramExecutionException {\n        ReturnValue returnValue = null;\n        try {\n            returnValue = callableProgram.call();\n        } catch (ProgramException pe) {\n            throw new ProgramExecutionException(pe.getMessage(), pe.getCause());\n        } catch (Throwable t) {\n            throw new ProgramExecutionException(\"Unexpected error occurred\", t);\n        }\n        if (returnValue != null) {\n            Object value = returnValue.getValue();\n            if (value instanceof Iterable && !((Iterable) value).iterator().hasNext()) {\n                returnValue = new ReturnValue(null);\n            }\n        }\n        return returnValue;\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}