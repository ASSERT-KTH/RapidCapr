{
    "patch": "import org.json.JSONObject;\nimport org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class MyUtilsTest {\n\n    @Test\n    public void testGetTypedPercent1() {\n        JSONObject js = new JSONObject().put(\"a\", true).put(\"b\", false).put(\"c\", false);\n        assertEquals(33.3, MyUtils.getTypedPercent(js), 0.1);\n    }\n\n    @Test\n    public void testGetTypedPercent2() {\n        JSONObject js = new JSONObject().put(\"a\", true).put(\"b\", true).put(\"c\", false);\n        assertEquals(66.6, MyUtils.getTypedPercent(js), 0.1);\n    }\n\n    @Test\n    public void testGetTypedPercent3() {\n        JSONObject js = new JSONObject().put(\"a\", false).put(\"b\", false).put(\"c\", false);\n        assertEquals(0.0, MyUtils.getTypedPercent(js), 0.1);\n    }\n\n    @Test\n    public void testGetTypedPercent4() {\n        JSONObject js = new JSONObject();\n        assertEquals(0.0, MyUtils.getTypedPercent(js), 0.1);\n    }\n\n    @Test\n    public void testGetTypedPercent5() {\n        JSONObject js = new JSONObject().put(\"a\", true).put(\"b\", true).put(\"c\", true);\n        assertEquals(100.0, MyUtils.getTypedPercent(js), 0.1);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..230e338e 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,42 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import org.json.JSONObject;\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+\n+public class MyUtilsTest {\n+\n+    @Test\n+    public void testGetTypedPercent1() {\n+        JSONObject js = new JSONObject().put(\"a\", true).put(\"b\", false).put(\"c\", false);\n+        assertEquals(33.3, MyUtils.getTypedPercent(js), 0.1);\n+    }\n+\n+    @Test\n+    public void testGetTypedPercent2() {\n+        JSONObject js = new JSONObject().put(\"a\", true).put(\"b\", true).put(\"c\", false);\n+        assertEquals(66.6, MyUtils.getTypedPercent(js), 0.1);\n+    }\n+\n+    @Test\n+    public void testGetTypedPercent3() {\n+        JSONObject js = new JSONObject().put(\"a\", false).put(\"b\", false).put(\"c\", false);\n+        assertEquals(0.0, MyUtils.getTypedPercent(js), 0.1);\n+    }\n+\n+    @Test\n+    public void testGetTypedPercent4() {\n+        JSONObject js = new JSONObject();\n+        assertEquals(0.0, MyUtils.getTypedPercent(js), 0.1);\n+    }\n+\n+    @Test\n+    public void testGetTypedPercent5() {\n+        JSONObject js = new JSONObject().put(\"a\", true).put(\"b\", true).put(\"c\", true);\n+        assertEquals(100.0, MyUtils.getTypedPercent(js), 0.1);\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}