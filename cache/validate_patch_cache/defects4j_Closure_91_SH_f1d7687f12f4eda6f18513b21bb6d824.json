{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (NodeUtil.mayBeObjectLitKey(parent) || parent.getType() == Token.NAME) {\n  Node assignParent = parent.getParent();\n  if (NodeUtil.isAssignmentOp(assignParent) &&\n      NodeUtil.isGet(assignParent.getFirstChild())) {\n    Node lhs = assignParent.getFirstChild();\n    if (lhs.getLastChild().getString().equals(\"prototype\")) {\n      return false;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..a44e489e 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (NodeUtil.mayBeObjectLitKey(parent) || parent.getType() == Token.NAME) {\n+  Node assignParent = parent.getParent();\n+  if (NodeUtil.isAssignmentOp(assignParent) &&\n+      NodeUtil.isGet(assignParent.getFirstChild())) {\n+    Node lhs = assignParent.getFirstChild();\n+    if (lhs.getLastChild().getString().equals(\"prototype\")) {\n+      return false;\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}