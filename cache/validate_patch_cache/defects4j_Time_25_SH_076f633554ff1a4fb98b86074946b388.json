{
    "patch": "            // negative offset case\n            if (offsetLocal < 0 && offsetAdjusted >= 0) {\n                long transition = previousTransition(instantAdjusted);\n                int totalDiff = offsetLocal - offsetAdjusted;\n                int diff = getOffset(transition - totalDiff) - offsetAdjusted;\n                return (diff < totalDiff) ? offsetLocal : offsetAdjusted;\n            }\n            // positive offset case\n            else if (offsetLocal >= 0 && offsetAdjusted < 0) {\n                long transition = nextTransition(instantAdjusted);\n                int totalDiff = offsetAdjusted - offsetLocal;\n                int diff = getOffset(transition - totalDiff) - offsetLocal;\n                return (diff >= totalDiff) ? offsetAdjusted : offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3cbf63e1 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            // negative offset case\n+            if (offsetLocal < 0 && offsetAdjusted >= 0) {\n+                long transition = previousTransition(instantAdjusted);\n+                int totalDiff = offsetLocal - offsetAdjusted;\n+                int diff = getOffset(transition - totalDiff) - offsetAdjusted;\n+                return (diff < totalDiff) ? offsetLocal : offsetAdjusted;\n+            }\n+            // positive offset case\n+            else if (offsetLocal >= 0 && offsetAdjusted < 0) {\n+                long transition = nextTransition(instantAdjusted);\n+                int totalDiff = offsetAdjusted - offsetLocal;\n+                int diff = getOffset(transition - totalDiff) - offsetLocal;\n+                return (diff >= totalDiff) ? offsetAdjusted : offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}