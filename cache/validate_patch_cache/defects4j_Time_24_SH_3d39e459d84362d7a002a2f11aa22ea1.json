{
    "patch": "            for (int i = 0; i < count; i++) {\n                try {\n                    millis = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    throw e;\n                }\n                if (i + 1 < count) {\n                    DurationField current = savedFields[i].iField.getDurationField();\n                    DateTimeField next = savedFields[i + 1].iField;\n                    DurationField nextDuration = next.getDurationField();\n                    if (compareReverse(current, nextDuration) > 0) {\n                        throw new IllegalArgumentException(\"Fields invalid for parsing: \" + current.getName() + \" -> \" + next.getName());\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fbac9769 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            for (int i = 0; i < count; i++) {\n+                try {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    throw e;\n+                }\n+                if (i + 1 < count) {\n+                    DurationField current = savedFields[i].iField.getDurationField();\n+                    DateTimeField next = savedFields[i + 1].iField;\n+                    DurationField nextDuration = next.getDurationField();\n+                    if (compareReverse(current, nextDuration) > 0) {\n+                        throw new IllegalArgumentException(\"Fields invalid for parsing: \" + current.getName() + \" -> \" + next.getName());\n+                    }\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}