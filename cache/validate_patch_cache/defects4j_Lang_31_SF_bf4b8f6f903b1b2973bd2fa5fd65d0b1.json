{
    "patch": "public static boolean containsAny(CharSequence string, char... searchChars) {\n    if (isEmpty(string) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    for (int i = 0; i < string.length(); i++) {\n        char ch = string.charAt(i);\n        for (int j = 0; j < searchChars.length; j++) {\n            if (searchChars[j] == ch) {\n                if (Character.isHighSurrogate(ch)) {\n                    if (j == searchChars.length - 1) {\n                        return false;\n                    }\n                    if (i < string.length() - 1 && Character.isLowSurrogate(string.charAt(i + 1))) {\n                        if (searchChars[j + 1] == string.charAt(i + 1)) {\n                            return true;\n                        }\n                    }\n                } else {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isEmpty(CharSequence cs) {\n    return cs == null || cs.length() == 0;\n}\n",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..81ed981f 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,36 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence string, char... searchChars) {\n+    if (isEmpty(string) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    for (int i = 0; i < string.length(); i++) {\n+        char ch = string.charAt(i);\n+        for (int j = 0; j < searchChars.length; j++) {\n+            if (searchChars[j] == ch) {\n+                if (Character.isHighSurrogate(ch)) {\n+                    if (j == searchChars.length - 1) {\n+                        return false;\n+                    }\n+                    if (i < string.length() - 1 && Character.isLowSurrogate(string.charAt(i + 1))) {\n+                        if (searchChars[j + 1] == string.charAt(i + 1)) {\n+                            return true;\n+                        }\n+                    }\n+                } else {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isEmpty(CharSequence cs) {\n+    return cs == null || cs.length() == 0;\n+}\n+\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}