{
    "patch": "public static double logGamma(double x) {\n    double[] cof = new double[]{76.18009172947146, -86.50532032941677,\n            24.01409824083091, -1.231739572450155, 0.001208650973866179,\n            -5.395239384953E-6};\n    double tmp = x + 5.5;\n    tmp -= (x + 0.5) * Math.log(tmp);\n    double ser = 1.000000000190015;\n    for (double v : cof) {\n        x++;\n        ser += v / x;\n    }\n    return -tmp + Math.log(2.5066282746310005 * ser / x);\n}\n\npublic static double regularizedGammaP(double a, double x) {\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException(\"Invalid input values\");\n    }\n    final double epsilon = 1.0e-15;\n    double sum = 1 / a;\n    double term = sum;\n    int n = 1;\n    while (Math.abs(term) > epsilon * Math.abs(sum)) {\n        term *= x / (a + n);\n        sum += term;\n        n += 1;\n    }\n    double logGammaAP = logGamma(a);\n    double logGammaA = logGamma(a);\n    double logGammaAx = logGamma(a + x);\n    double pValueLn = (-x + a * Math.log(x) + logGammaA - logGammaAx);\n    double pValue = Math.exp(pValueLn) * sum;\n    return pValue;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..ddf76fc73 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,40 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double logGamma(double x) {\n+    double[] cof = new double[]{76.18009172947146, -86.50532032941677,\n+            24.01409824083091, -1.231739572450155, 0.001208650973866179,\n+            -5.395239384953E-6};\n+    double tmp = x + 5.5;\n+    tmp -= (x + 0.5) * Math.log(tmp);\n+    double ser = 1.000000000190015;\n+    for (double v : cof) {\n+        x++;\n+        ser += v / x;\n+    }\n+    return -tmp + Math.log(2.5066282746310005 * ser / x);\n+}\n+\n+public static double regularizedGammaP(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException(\"Invalid input values\");\n+    }\n+    final double epsilon = 1.0e-15;\n+    double sum = 1 / a;\n+    double term = sum;\n+    int n = 1;\n+    while (Math.abs(term) > epsilon * Math.abs(sum)) {\n+        term *= x / (a + n);\n+        sum += term;\n+        n += 1;\n+    }\n+    double logGammaAP = logGamma(a);\n+    double logGammaA = logGamma(a);\n+    double logGammaAx = logGamma(a + x);\n+    double pValueLn = (-x + a * Math.log(x) + logGammaA - logGammaAx);\n+    double pValue = Math.exp(pValueLn) * sum;\n+    return pValue;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}