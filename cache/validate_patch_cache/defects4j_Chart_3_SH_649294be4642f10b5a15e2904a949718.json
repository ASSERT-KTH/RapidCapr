{
    "patch": "copy = (TimeSeries) super.clone();\nif (this.data.size() > 0) {\n    copy.data = new java.util.ArrayList(this.data.size());\n    for (int index = start; index <= end && index < this.data.size(); index++) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n        if (index == start) {\n            // clone the start index TimeSeriesDataItem object\n            item = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(item);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n        try {\n            copy.add(clone);\n        } catch (SeriesException e) {\n            e.printStackTrace();\n        }\n    }\n} else {\n    copy.data = new java.util.ArrayList();\n}\ncopy.setDomainDescription((String) null);\ncopy.setRangeDescription((String) null);",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..554d37b 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,32 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy = (TimeSeries) super.clone();\n+if (this.data.size() > 0) {\n+    copy.data = new java.util.ArrayList(this.data.size());\n+    for (int index = start; index <= end && index < this.data.size(); index++) {\n+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+        if (index == start) {\n+            // clone the start index TimeSeriesDataItem object\n+            item = (TimeSeriesDataItem) item.clone();\n+            try {\n+                copy.add(item);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+        try {\n+            copy.add(clone);\n+        } catch (SeriesException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+} else {\n+    copy.data = new java.util.ArrayList();\n+}\n+copy.setDomainDescription((String) null);\n+copy.setRangeDescription((String) null);\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>",
    "test_result": "FAIL"
}