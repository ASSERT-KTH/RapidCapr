{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null || result.trim().startsWith(\"*\") || result.trim().startsWith(\"@\")) {\n        return null;\n    } else {\n        result = result.trim();\n        if (jsdocParser.parse(result)) {\n            return result;\n        } else {\n            throw new IllegalStateException(\"JSdocParser failed to parse line: \" + result);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..9645030f 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,19 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    if (result == null || result.trim().startsWith(\"*\") || result.trim().startsWith(\"@\")) {\n+        return null;\n+    } else {\n+        result = result.trim();\n+        if (jsdocParser.parse(result)) {\n+            return result;\n+        } else {\n+            throw new IllegalStateException(\"JSdocParser failed to parse line: \" + result);\n+        }\n+    }\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}