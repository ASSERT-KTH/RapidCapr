{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!isLowercaseAlpha(ch0) || !isLowercaseAlpha(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 2) {\n        return new Locale(str);\n    }\n\n    if (len < 5 || str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final String subtag = str.substring(4);\n        if (isValidSubtag(subtag)) {\n            return new Locale(str.substring(0, 2), \"\", subtag);\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final char ch4 = str.charAt(4);\n    if (ch4 == '_') {\n        if (!isUppercaseAlpha(ch3)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final String country = str.substring(3, 5);\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), country);\n        }\n\n        final String subtag = str.substring(5);\n        if (isValidSubtag(subtag)) {\n            return new Locale(str.substring(0, 2), country, subtag);\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (!isUppercaseAlpha(ch3) || !isUppercaseAlpha(ch4)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final String language = str.substring(0, 2);\n    final String country = str.substring(3, 5);\n    if (len == 5) {\n        return new Locale(language, country);\n    }\n\n    final String subtag = str.substring(5);\n    if (isValidSubtag(subtag)) {\n        return new Locale(language, country, subtag);\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nprivate static boolean isLowercaseAlpha(final char ch) {\n    return ch >= 'a' && ch <= 'z';\n}\n\nprivate static boolean isUppercaseAlpha(final char ch) {\n    return ch >= 'A' && ch <= 'Z';\n}\n\nprivate static boolean isDigit(final char ch) {\n    return ch >= '0' && ch <= '9';\n}\n\nprivate static boolean isValidSubtag(final String subtag) {\n    final int len = subtag.length();\n    if (len < 1 || len > 8) {\n        return false;\n    }\n\n    for (int i = 0; i < len; i++) {\n        final char ch = subtag.charAt(i);\n        if (!isLowercaseAlpha(ch) && !isUppercaseAlpha(ch) && !isDigit(ch) && ch != '-') {\n            return false;\n        }\n    }\n\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..289ddd16 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,103 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n+public static Locale toLocale(final String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final char ch0 = str.charAt(0);\n+    final char ch1 = str.charAt(1);\n+    if (!isLowercaseAlpha(ch0) || !isLowercaseAlpha(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 2) {\n+        return new Locale(str);\n+    }\n+\n+    if (len < 5 || str.charAt(2) != '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final char ch3 = str.charAt(3);\n+    if (ch3 == '_') {\n+        if (len < 7) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        final String subtag = str.substring(4);\n+        if (isValidSubtag(subtag)) {\n+            return new Locale(str.substring(0, 2), \"\", subtag);\n         }\n-        final int len = str.length();\n-        if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final char ch4 = str.charAt(4);\n+    if (ch4 == '_') {\n+        if (!isUppercaseAlpha(ch3)) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        final String country = str.substring(3, 5);\n+        if (len == 5) {\n+            return new Locale(str.substring(0, 2), country);\n+        }\n+\n+        final String subtag = str.substring(5);\n+        if (isValidSubtag(subtag)) {\n+            return new Locale(str.substring(0, 2), country, subtag);\n+        }\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (!isUppercaseAlpha(ch3) || !isUppercaseAlpha(ch4)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final String language = str.substring(0, 2);\n+    final String country = str.substring(3, 5);\n+    if (len == 5) {\n+        return new Locale(language, country);\n+    }\n+\n+    final String subtag = str.substring(5);\n+    if (isValidSubtag(subtag)) {\n+        return new Locale(language, country, subtag);\n     }\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+private static boolean isLowercaseAlpha(final char ch) {\n+    return ch >= 'a' && ch <= 'z';\n+}\n+\n+private static boolean isUppercaseAlpha(final char ch) {\n+    return ch >= 'A' && ch <= 'Z';\n+}\n+\n+private static boolean isDigit(final char ch) {\n+    return ch >= '0' && ch <= '9';\n+}\n+\n+private static boolean isValidSubtag(final String subtag) {\n+    final int len = subtag.length();\n+    if (len < 1 || len > 8) {\n+        return false;\n+    }\n+\n+    for (int i = 0; i < len; i++) {\n+        final char ch = subtag.charAt(i);\n+        if (!isLowercaseAlpha(ch) && !isUppercaseAlpha(ch) && !isDigit(ch) && ch != '-') {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__P",
    "test_result": "FAIL"
}