{
    "patch": "        Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n        if (actualTypeArgument instanceof TypeVariable) {\n            readTypeVariable((TypeVariable<?>) actualTypeArgument);\n        } else if (actualTypeArgument instanceof ParameterizedType) {\n            registerTypeVariablesOn(((ParameterizedType) actualTypeArgument).getActualTypeArguments());\n        } else {\n            registerTypeVariablesOn(actualTypeArgument);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..1ddc0138a 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,18 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+        Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+        if (actualTypeArgument instanceof TypeVariable) {\n+            readTypeVariable((TypeVariable<?>) actualTypeArgument);\n+        } else if (actualTypeArgument instanceof ParameterizedType) {\n+            registerTypeVariablesOn(((ParameterizedType) actualTypeArgument).getActualTypeArguments());\n+        } else {\n+            registerTypeVariablesOn(actualTypeArgument);\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}