{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n      List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(cfgNode);\n      for (DiGraphEdge<Node, Branch> edge : branchEdges) {\n          if (edge.getValue() == Branch.ON_EX) {\n              return true;\n          }\n      }\n      return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..de721a9a 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,15 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+private boolean hasExceptionHandler(Node cfgNode) {\n+      List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(cfgNode);\n+      for (DiGraphEdge<Node, Branch> edge : branchEdges) {\n+          if (edge.getValue() == Branch.ON_EX) {\n+              return true;\n+          }\n+      }\n+      return false;\n+  }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}