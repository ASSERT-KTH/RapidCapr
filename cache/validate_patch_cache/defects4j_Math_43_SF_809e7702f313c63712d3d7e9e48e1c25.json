{
    "patch": "public void addValue(double value) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        sumLogImpl.increment(value);\n        secondMoment.increment(value);\n        if (meanImpl != null) {\n            meanImpl.increment(value);\n        }\n        if (varianceImpl != null) {\n            if (varianceImpl instanceof Variance) {\n                ((Variance) varianceImpl).increment(value);\n            } else if (meanImpl instanceof Mean) {\n                double delta = value - meanImpl.getResult();\n                meanImpl.increment(delta / n);\n                varianceImpl.increment((n - 1) * delta * delta / n);\n            } else {\n                throw new RuntimeException(\"Invalid mean implementation.\");\n            }\n        }\n        if (geoMeanImpl != null) {\n            if (geoMeanImpl instanceof GeometricMean) {\n                ((GeometricMean) geoMeanImpl).increment(value);\n            } else {\n                throw new RuntimeException(\"Invalid geometric mean implementation.\");\n            }\n        }\n        n++;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..392ad6e66 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,23 +146,33 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n         maxImpl.increment(value);\n         sumLogImpl.increment(value);\n         secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+        if (meanImpl != null) {\n             meanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+        if (varianceImpl != null) {\n+            if (varianceImpl instanceof Variance) {\n+                ((Variance) varianceImpl).increment(value);\n+            } else if (meanImpl instanceof Mean) {\n+                double delta = value - meanImpl.getResult();\n+                meanImpl.increment(delta / n);\n+                varianceImpl.increment((n - 1) * delta * delta / n);\n+            } else {\n+                throw new RuntimeException(\"Invalid mean implementation.\");\n+            }\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+        if (geoMeanImpl != null) {\n+            if (geoMeanImpl instanceof GeometricMean) {\n+                ((GeometricMean) geoMeanImpl).increment(value);\n+            } else {\n+                throw new RuntimeException(\"Invalid geometric mean implementation.\");\n+            }\n         }\n         n++;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<4.0> but was:<8.0>",
    "test_result": "FAIL"
}