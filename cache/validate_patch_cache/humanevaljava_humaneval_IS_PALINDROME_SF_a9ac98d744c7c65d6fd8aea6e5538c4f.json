{
    "patch": "public static boolean is_palindrome(String text) {\n    if (text == null) {\n        return false;\n    }\n    String cleanedText = text.replaceAll(\"\\\\W\", \"\").toLowerCase(); // removes all non-word characters\n    for (int i = 0; i < cleanedText.length() / 2; i++) {\n        if (cleanedText.charAt(i) != cleanedText.charAt(cleanedText.length() - 1 - i)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_PALINDROME.java b/src/main/java/humaneval/buggy/IS_PALINDROME.java\nindex 9b34adb..8725954 100644\n--- a/src/main/java/humaneval/buggy/IS_PALINDROME.java\n+++ b/src/main/java/humaneval/buggy/IS_PALINDROME.java\n@@ -11,11 +11,16 @@ True\n False */\n \n public class IS_PALINDROME {\n-    public static boolean is_palindrome(String text) {\n-        for (int i = 0; i < text.length(); i += 1){\n-            if (text.charAt(i) == text.charAt(text.length() - i))\n-                return true;\n-        }\n+public static boolean is_palindrome(String text) {\n+    if (text == null) {\n         return false;\n     }\n+    String cleanedText = text.replaceAll(\"\\\\W\", \"\").toLowerCase(); // removes all non-word characters\n+    for (int i = 0; i < cleanedText.length() / 2; i++) {\n+        if (cleanedText.charAt(i) != cleanedText.charAt(cleanedText.length() - 1 - i)) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}