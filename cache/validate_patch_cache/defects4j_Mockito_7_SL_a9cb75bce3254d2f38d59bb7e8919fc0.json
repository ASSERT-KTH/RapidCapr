{
    "patch": "for (Type type : typeVariable.getBounds()) {\n    registerTypeVariablesOn(type);\n}\nif (typeVariable.getActualTypeArguments().length > 0) {\n    Type actualTypeArgument = typeVariable.getActualTypeArguments()[0];\n    if (actualTypeArgument instanceof TypeVariable) {\n        readTypeVariables((TypeVariable<?>) actualTypeArgument, visited);\n    } else {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..aedaa3706 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,22 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+for (Type type : typeVariable.getBounds()) {\n+    registerTypeVariablesOn(type);\n+}\n+if (typeVariable.getActualTypeArguments().length > 0) {\n+    Type actualTypeArgument = typeVariable.getActualTypeArguments()[0];\n+    if (actualTypeArgument instanceof TypeVariable) {\n+        readTypeVariables((TypeVariable<?>) actualTypeArgument, visited);\n+    } else {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}