{
    "patch": "public String fixForLoop(String input) {\n    int i = input.indexOf(\"for(\");\n    String result = input;\n    while (i != -1) {\n        int j = i;\n        int bracketCount = 0;\n        while (j < input.length()) {\n            char c = input.charAt(j);\n            if (c == '{' || c == '(') {\n                bracketCount++;\n            } else if (c == '}' || c == ')') {\n                bracketCount--;\n            }\n            // Check for ; inside the for loop construct, \n            // but not inside any inner brackets\n            if (c == ';' && bracketCount == 1) {\n                String before = input.substring(0, j+1); //getting string before ;\n                String after = input.substring(j+1, input.indexOf(\")\", j+1));\n                after = after.replaceAll(\"\\\\[\\\\s*([a-zA-Z_0-9\\\\.]+)\\\\s*in\\\\s*([a-zA-Z_0-9\\\\.\\\\[\\\\]]+)\\\\s*\\\\]\", \"$2.contains($1)\"); \n                //replacing [..in..] with contains() function\n                result = before + after + \")\" + input.substring(input.indexOf(\")\", j+1)+1, input.length());\n                break;\n            }\n            j++;\n        }\n        i = input.indexOf(\"for(\", i + 1);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..58fe508e 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,35 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixForLoop(String input) {\n+    int i = input.indexOf(\"for(\");\n+    String result = input;\n+    while (i != -1) {\n+        int j = i;\n+        int bracketCount = 0;\n+        while (j < input.length()) {\n+            char c = input.charAt(j);\n+            if (c == '{' || c == '(') {\n+                bracketCount++;\n+            } else if (c == '}' || c == ')') {\n+                bracketCount--;\n+            }\n+            // Check for ; inside the for loop construct, \n+            // but not inside any inner brackets\n+            if (c == ';' && bracketCount == 1) {\n+                String before = input.substring(0, j+1); //getting string before ;\n+                String after = input.substring(j+1, input.indexOf(\")\", j+1));\n+                after = after.replaceAll(\"\\\\[\\\\s*([a-zA-Z_0-9\\\\.]+)\\\\s*in\\\\s*([a-zA-Z_0-9\\\\.\\\\[\\\\]]+)\\\\s*\\\\]\", \"$2.contains($1)\"); \n+                //replacing [..in..] with contains() function\n+                result = before + after + \")\" + input.substring(input.indexOf(\")\", j+1)+1, input.length());\n+                break;\n+            }\n+            j++;\n+        }\n+        i = input.indexOf(\"for(\", i + 1);\n+    }\n+    return result;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}