{
    "patch": "            final long nextLocal = nextTransition(instantLocal);\n            final long nextAdjusted = nextTransition(instantAdjusted);\n            if (nextLocal != nextAdjusted && offsetLocal - offsetAdjusted < 0) {\n                // Adjust instant by (one more than) the difference in the offsets\n                // This will ensure instant is greater than either of the transition instants\n                int diff = offsetAdjusted - offsetLocal;\n                long next = nextTransition(instantAdjusted - diff);\n                if (next == nextAdjusted) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..cb93eac7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            final long nextLocal = nextTransition(instantLocal);\n+            final long nextAdjusted = nextTransition(instantAdjusted);\n+            if (nextLocal != nextAdjusted && offsetLocal - offsetAdjusted < 0) {\n+                // Adjust instant by (one more than) the difference in the offsets\n+                // This will ensure instant is greater than either of the transition instants\n+                int diff = offsetAdjusted - offsetLocal;\n+                long next = nextTransition(instantAdjusted - diff);\n+                if (next == nextAdjusted) {\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}