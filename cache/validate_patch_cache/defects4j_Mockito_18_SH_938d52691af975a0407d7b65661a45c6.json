{
    "patch": "public Object execute(Object[] args) throws Exception {\n    org.apache.commons.collections4.map.LRUMap<BigInteger, String> map = new org.apache.commons.collections4.map.LRUMap<>(cacheSize);\n    \n    try {\n        if (args.length == 0) {\n            return map;\n        } else if (!(args[0] instanceof Iterable)) {\n            return null;\n        }\n        \n        Iterable<Pair<BigInteger, String>> pairs = (Iterable<Pair<BigInteger, String>>) args[0];\n        for (Pair<BigInteger, String> pair : pairs) {\n            map.put(pair.getLeft(), pair.getRight());\n        }\n    } catch (ClassCastException e) {\n        return null;\n    }\n    \n    return map;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}