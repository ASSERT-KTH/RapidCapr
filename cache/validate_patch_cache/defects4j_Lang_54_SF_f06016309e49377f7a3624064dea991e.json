{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    char sep = '_';\n    int firstSep = str.indexOf(sep);\n    int lastSep = str.lastIndexOf(sep);\n\n    if (firstSep == -1) {\n        // No separator found; assume language code only\n        if (len != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str);\n    } else if (firstSep == 0 || lastSep == len - 1 || firstSep == lastSep) {\n        // Separator found at the beginning or end, or only one separator found\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    } else {\n        // Assume language_country[_variant] format\n        String language = str.substring(0, firstSep);\n        int countrySeparatorIndex = lastSep > firstSep ? lastSep : len;\n        String country = str.substring(firstSep + 1, countrySeparatorIndex);\n        if (country.length() != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = countrySeparatorIndex < len ? str.substring(countrySeparatorIndex + 1) : \"\";\n        if (variant.length() > 0 && (variant.length() < 2 || variant.length() > 8)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country, variant);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..9a86cac1 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,44 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    char sep = '_';\n+    int firstSep = str.indexOf(sep);\n+    int lastSep = str.lastIndexOf(sep);\n+\n+    if (firstSep == -1) {\n+        // No separator found; assume language code only\n+        if (len != 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        return new Locale(str);\n+    } else if (firstSep == 0 || lastSep == len - 1 || firstSep == lastSep) {\n+        // Separator found at the beginning or end, or only one separator found\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    } else {\n+        // Assume language_country[_variant] format\n+        String language = str.substring(0, firstSep);\n+        int countrySeparatorIndex = lastSep > firstSep ? lastSep : len;\n+        String country = str.substring(firstSep + 1, countrySeparatorIndex);\n+        if (country.length() != 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+        String variant = countrySeparatorIndex < len ? str.substring(countrySeparatorIndex + 1) : \"\";\n+        if (variant.length() > 0 && (variant.length() < 2 || variant.length() > 8)) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n+        return new Locale(language, country, variant);\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}