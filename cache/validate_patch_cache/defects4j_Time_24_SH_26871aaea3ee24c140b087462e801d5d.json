{
    "patch": "        for (int i = 0; i < count; i++) {\n            long newMillis = savedFields[i].set(millis, resetFields);\n            if (millis != newMillis) {\n                if (resetFields && i == 0 &&\n                    savedFields[i].iField.getType() == DateTimeFieldType.monthOfYear() &&\n                    savedFields[i].iValue == 1) {\n                    int year = savedFields[i + 1].iValue;\n                    int weekyear = DateTimeUtils.getWeekyear(year, millis);\n                    saveField(DateTimeFieldType.weekyear(), weekyear);\n                }\n                millis = newMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..04ed7baa 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        for (int i = 0; i < count; i++) {\n+            long newMillis = savedFields[i].set(millis, resetFields);\n+            if (millis != newMillis) {\n+                if (resetFields && i == 0 &&\n+                    savedFields[i].iField.getType() == DateTimeFieldType.monthOfYear() &&\n+                    savedFields[i].iValue == 1) {\n+                    int year = savedFields[i + 1].iValue;\n+                    int weekyear = DateTimeUtils.getWeekyear(year, millis);\n+                    saveField(DateTimeFieldType.weekyear(), weekyear);\n+                }\n+                millis = newMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}