{
    "patch": "public static double[] distribution(double[] data) {\n    if (data == null || data.length == 0 || data.length > 1000000) {\n        return new double[0];\n    }\n\n    if (data.length == 1) {\n        return new double[] {1.0};\n    }\n\n    Arrays.sort(data);\n\n    Map<Double, Integer> counts = new HashMap<>();\n    for (double value : data) {\n        counts.put(value, counts.getOrDefault(value, 0) + 1);\n    }\n\n    int n = counts.size();\n    double[] probabilities = new double[n];\n\n    int i = 0;\n    for (Map.Entry<Double, Integer> entry : counts.entrySet()) {\n        probabilities[i++] = (double) entry.getValue() / data.length;\n    }\n\n    Arrays.sort(probabilities);\n\n    i = 0;\n    for (int j = 0; j < n; j++) {\n        if (j == n - 1 || !isEqual(probabilities[j], probabilities[j + 1])) {\n            double prob = probabilities[j] - (i > 0 ? probabilities[i - 1] : 0.0);\n            for (int k = i; k <= j; k++) {\n                probabilities[k] = prob;\n            }\n            i = j + 1;\n        }\n    }\n\n    return probabilities;\n}\n\nprivate static boolean isEqual(double d1, double d2) {\n    return Math.abs(d1 - d2) < 1e-12;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}