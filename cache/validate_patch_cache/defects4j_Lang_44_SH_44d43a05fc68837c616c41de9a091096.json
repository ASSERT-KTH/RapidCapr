{
    "patch": "        if (val.startsWith(\"0b\") || val.startsWith(\"-0b\")) {\n            try {\n                return Integer.parseInt(val.substring(2), 2);\n            } catch (NumberFormatException notBinary) {\n                throw new NumberFormatException(val + \" is not a valid number.\");\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..c5e8df13 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,12 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.startsWith(\"0b\") || val.startsWith(\"-0b\")) {\n+            try {\n+                return Integer.parseInt(val.substring(2), 2);\n+            } catch (NumberFormatException notBinary) {\n+                throw new NumberFormatException(val + \" is not a valid number.\");\n+            }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}