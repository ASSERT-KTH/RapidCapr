{
    "patch": "LinkedHashSet<String> referencedArgs = new LinkedHashSet<>();\nNodeTraversal.traverseEs6(compiler, function, new NodeTraversal.AbstractShallowCallback() {\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n        if (n.isName() && parent.isParamList()) {\n            referencedArgs.add(n.getString());\n        }\n    }\n});\n\n// Strip unreferenced args off the end of the function declaration.\nNode lastArg;\nwhile ((lastArg = argList.getLastChild()) != null) {\n    if (!referencedArgs.contains(lastArg.getString())) {\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();\n    } else {\n        break;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..a3b7926e 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,26 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+LinkedHashSet<String> referencedArgs = new LinkedHashSet<>();\n+NodeTraversal.traverseEs6(compiler, function, new NodeTraversal.AbstractShallowCallback() {\n+    @Override\n+    public void visit(NodeTraversal t, Node n, Node parent) {\n+        if (n.isName() && parent.isParamList()) {\n+            referencedArgs.add(n.getString());\n+        }\n+    }\n+});\n+\n+// Strip unreferenced args off the end of the function declaration.\n+Node lastArg;\n+while ((lastArg = argList.getLastChild()) != null) {\n+    if (!referencedArgs.contains(lastArg.getString())) {\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n+    } else {\n+        break;\n+    }\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}