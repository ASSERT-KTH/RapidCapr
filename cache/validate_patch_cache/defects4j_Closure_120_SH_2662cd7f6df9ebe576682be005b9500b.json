{
    "patch": "      boolean foundOne = false;\n      for (Reference use : references) {\n        if (use.isAssignmentToName()) {\n          if (foundOne) {\n            return false;\n          }\n          foundOne = true;\n        }\n      }\n\n      return foundOne;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..236d3450 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,17 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+      boolean foundOne = false;\n+      for (Reference use : references) {\n+        if (use.isAssignmentToName()) {\n+          if (foundOne) {\n+            return false;\n+          }\n+          foundOne = true;\n+        }\n+      }\n+\n+      return foundOne;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}