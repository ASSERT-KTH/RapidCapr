{
    "patch": "public static List<Integer> strange_sort_list(List<Integer> lst) {\n    if (lst == null || lst.isEmpty()) {\n        return new ArrayList<>();\n    }\n    List<Integer> result = new ArrayList<>(lst);\n    Collections.sort(result);\n    List<Integer> sorted = new ArrayList<>();\n    int i = 0;\n    int j = result.size() - 1;\n    while (i < j) {\n        sorted.add(result.get(i++));\n        sorted.add(result.get(j--));\n    }\n    if (i == j) {\n        sorted.add(result.get(i));\n    }\n    return sorted;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\nindex 094f5de..9db4292 100644\n--- a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n+++ b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n@@ -14,17 +14,22 @@ strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n strange_sort_list([]) == [] */\n \n public class STRANGE_SORT_LIST {\n-    public static List<Integer> strange_sort_list(List<Integer> lst) {\n-        List<Integer> result = new ArrayList<Integer>();\n-\n-        boolean switched = true;\n-        while (lst.size() > 0) {\n-            if (switched) {\n-                result.add(Collections.min(lst));\n-            } else {\n-                result.add(Collections.max(lst));\n-            }\n-        }\n-        return result;\n+public static List<Integer> strange_sort_list(List<Integer> lst) {\n+    if (lst == null || lst.isEmpty()) {\n+        return new ArrayList<>();\n+    }\n+    List<Integer> result = new ArrayList<>(lst);\n+    Collections.sort(result);\n+    List<Integer> sorted = new ArrayList<>();\n+    int i = 0;\n+    int j = result.size() - 1;\n+    while (i < j) {\n+        sorted.add(result.get(i++));\n+        sorted.add(result.get(j--));\n     }\n+    if (i == j) {\n+        sorted.add(result.get(i));\n+    }\n+    return sorted;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}