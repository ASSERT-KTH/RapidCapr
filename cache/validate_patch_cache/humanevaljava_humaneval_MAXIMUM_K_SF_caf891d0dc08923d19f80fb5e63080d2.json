{
    "patch": "    public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n        PriorityQueue<Integer> minHeap = new PriorityQueue<>(k);\n        for(int i : arr) {\n            if(minHeap.size() < k) {\n                minHeap.offer(i);\n            }\n            else {\n                if(i > minHeap.peek()) {\n                    minHeap.poll();\n                    minHeap.offer(i);\n                }\n            }\n        }\n        ArrayList<Integer> result = new ArrayList<>(minHeap);\n        Collections.sort(result, Collections.reverseOrder());\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..f6f9e4a 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -30,11 +30,20 @@ import java.util.Collections;\n \n public class MAXIMUM_K {\n     public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n-        Collections.sort(arr);\n-        ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n-            result.add(arr.get(i));\n+        PriorityQueue<Integer> minHeap = new PriorityQueue<>(k);\n+        for(int i : arr) {\n+            if(minHeap.size() < k) {\n+                minHeap.offer(i);\n+            }\n+            else {\n+                if(i > minHeap.peek()) {\n+                    minHeap.poll();\n+                    minHeap.offer(i);\n+                }\n+            }\n         }\n+        ArrayList<Integer> result = new ArrayList<>(minHeap);\n+        Collections.sort(result, Collections.reverseOrder());\n         return result;\n     }\n }",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[33,9] cannot find symbol",
    "test_result": "ERROR"
}