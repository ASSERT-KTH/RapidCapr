{
    "patch": "for (int i = 0; i < l.size() - 1; i++) {\n    for (int j = i + 1; j < l.size(); j++) {\n        if (l.get(i) + l.get(j) == 0) {\n            return true;\n        }\n    }\n}\nreturn false;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java b/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java\nindex 7e806b9..24d0b7c 100644\n--- a/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java\n+++ b/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java\n@@ -9,7 +9,14 @@ sum to zero, and False otherwise. */\n public class PAIRS_SUM_TO_ZERO {\n     public static boolean pairs_sum_to_zero(List<Integer> l) {\n         for (int i = 0; i < l.size(); i += 1) {\n-            for (int j = 0; j < l.size(); j += 1){\n+for (int i = 0; i < l.size() - 1; i++) {\n+    for (int j = i + 1; j < l.size(); j++) {\n+        if (l.get(i) + l.get(j) == 0) {\n+            return true;\n+        }\n+    }\n+}\n+return false;\n                 if (l.get(i) + l.get(j) == 0)\n                     return true;\n             }",
    "result_reason": " /tmp/humaneval-PAIRS_SUM_TO_ZERO/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java:[24,9] illegal start of type",
    "test_result": "ERROR"
}