{
    "patch": "public <T> void resetMock(T mock) {\n    if (!(mock instanceof MockitoMock)) {\n        throw new IllegalArgumentException(\"Can only reset a Mockito mock object.\");\n    }\n    MockitoMock<T> mockitoMock = (MockitoMock<T>) mock;\n    MockHandlerInterface<T> oldMockHandler = mockitoMock.getMockHandler();\n    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n\n    // Reset the mock object\n    mockitoMock.resetMock();\n\n    // Set the new mock handler and interceptor filter\n    MockHandler<T> mockHandler = new MockHandler<>(newMockHandler);\n    MethodInterceptorFilter interceptorFilter = new MethodInterceptorFilter(mockHandler,\n            org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n\n    // Set the interceptor filter on the mock object\n    Factory factory = (Factory) mock;\n    factory.setCallback(0, interceptorFilter);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..e3be2711c 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,27 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    if (!(mock instanceof MockitoMock)) {\n+        throw new IllegalArgumentException(\"Can only reset a Mockito mock object.\");\n+    }\n+    MockitoMock<T> mockitoMock = (MockitoMock<T>) mock;\n+    MockHandlerInterface<T> oldMockHandler = mockitoMock.getMockHandler();\n+    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+\n+    // Reset the mock object\n+    mockitoMock.resetMock();\n+\n+    // Set the new mock handler and interceptor filter\n+    MockHandler<T> mockHandler = new MockHandler<>(newMockHandler);\n+    MethodInterceptorFilter interceptorFilter = new MethodInterceptorFilter(mockHandler,\n+            org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+\n+    // Set the interceptor filter on the mock object\n+    Factory factory = (Factory) mock;\n+    factory.setCallback(0, interceptorFilter);\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}