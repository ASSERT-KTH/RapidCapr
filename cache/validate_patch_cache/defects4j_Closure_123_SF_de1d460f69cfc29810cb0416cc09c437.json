{
    "patch": "public void testPrintInOperatorInForLoop() {\n    String expected = \"for(a = c ? 0 : [(0 in d)];;)foo()\";\n    String result = ParseUtils.printNode(parseStatement(\"for(var a=c?[0 in d]:undefined;;) {foo();}\"));\n    assertEquals(expected, result);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..1448f37e 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,11 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void testPrintInOperatorInForLoop() {\n+    String expected = \"for(a = c ? 0 : [(0 in d)];;)foo()\";\n+    String result = ParseUtils.printNode(parseStatement(\"for(var a=c?[0 in d]:undefined;;) {foo();}\"));\n+    assertEquals(expected, result);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}