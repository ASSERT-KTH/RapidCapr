{
    "patch": "        } else {\n            long next = nextTransition(instantLocal - offsetAdjusted);\n            if (next > instantAdjusted) {\n                int offsetNext = getOffset(next);\n                int diff = offsetNext - offsetAdjusted;\n                if (next - instantAdjusted <= diff) {\n                    return offsetNext;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..9c4683bd 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+        } else {\n+            long next = nextTransition(instantLocal - offsetAdjusted);\n+            if (next > instantAdjusted) {\n+                int offsetNext = getOffset(next);\n+                int diff = offsetNext - offsetAdjusted;\n+                if (next - instantAdjusted <= diff) {\n+                    return offsetNext;\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}