{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\ntry {\n    Field field = mock.getClass().getDeclaredField(\"callbacks\");\n    field.setAccessible(true);\n    Callback[] callbacks = (Callback[]) field.get(mock);\n    for (int i = 0; i < callbacks.length; i++) {\n        if (callbacks[i] instanceof MethodInterceptorFilter) {\n            callbacks[i] = newFilter;\n            break;\n        }\n    }\n} catch (Exception ex) {\n    ex.printStackTrace();\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..46645902d 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,25 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+try {\n+    Field field = mock.getClass().getDeclaredField(\"callbacks\");\n+    field.setAccessible(true);\n+    Callback[] callbacks = (Callback[]) field.get(mock);\n+    for (int i = 0; i < callbacks.length; i++) {\n+        if (callbacks[i] instanceof MethodInterceptorFilter) {\n+            callbacks[i] = newFilter;\n+            break;\n+        }\n+    }\n+} catch (Exception ex) {\n+    ex.printStackTrace();\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}