{
    "patch": "private String getRemainingJSDocLine() {\n  String result = stream.getRemainingJSDocLine();\n  if (result == null) return null;\n  while (result.trim().isEmpty() && stream.hasMoreLines()) {\n    result = stream.getRemainingJSDocLine();\n  }\n  if (result.trim().startsWith(\"*\") && !result.trim().startsWith(\"*/\")) {\n    result = stream.getRemainingJSDocLine();\n  }\n  return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..652cff35 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,17 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+  String result = stream.getRemainingJSDocLine();\n+  if (result == null) return null;\n+  while (result.trim().isEmpty() && stream.hasMoreLines()) {\n+    result = stream.getRemainingJSDocLine();\n+  }\n+  if (result.trim().startsWith(\"*\") && !result.trim().startsWith(\"*/\")) {\n+    result = stream.getRemainingJSDocLine();\n+  }\n+  return result.trim();\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}