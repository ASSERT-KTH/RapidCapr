{
    "patch": "try {\n    byte[] inputBytes = input.getBytes(\"UTF-8\");\n    byte[] outputBytes = new byte[inputBytes.length];\n\n    int outputIndex = 0;\n    for (int i = 0; i < inputBytes.length; i++) {\n        byte b = inputBytes[i];\n        if ((b & 0x80) == 0) {\n            outputBytes[outputIndex++] = b;\n        } else if ((b & 0xE0) == 0xC0) {\n            byte b2 = inputBytes[++i];\n            outputBytes[outputIndex++] = (byte) (((b & 0x1F) << 6) | (b2 & 0x3F));\n        } else if ((b & 0xF0) == 0xE0) {\n            byte b2 = inputBytes[++i];\n            byte b3 = inputBytes[++i];\n            int codepoint = ((b & 0x0F) << 12) | ((b2 & 0x3F) << 6) | (b3 & 0x3F);\n            if (codepoint >= 0xD800 && codepoint <= 0xDFFF) {\n                throw new RuntimeException(\"Invalid UTF-8 sequence\");\n            } else if (codepoint < 0x10000) {\n                outputBytes[outputIndex++] = (byte) ((codepoint >> 8) & 0xFF);\n                outputBytes[outputIndex++] = (byte) (codepoint & 0xFF);\n            } else {\n                codepoint -= 0x10000;\n                outputBytes[outputIndex++] = (byte) ((codepoint >> 16) & 0xFF);\n                outputBytes[outputIndex++] = (byte) ((codepoint >> 8) & 0xFF);\n                outputBytes[outputIndex++] = (byte) (codepoint & 0xFF);\n            }\n        } else {\n            throw new RuntimeException(\"Invalid UTF-8 sequence\");\n        }\n    }\n\n    String output = new String(outputBytes, 0, outputIndex, \"ISO-8859-1\");\n    success = output.equals(expectedOutput);\n} catch (UnsupportedEncodingException e) {\n    System.out.println(\"Encoding not supported\");\n    success = false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}