{
    "patch": "int c;\nStringBuilder sb = new StringBuilder();\nfor(int i = 0; i < str.length(); i++) {\n    char ch = str.charAt(i);\n    if(ch == '\\\\') {\n        if(i < str.length() - 5 && str.charAt(i+1) == 'u') {\n            int value = 0;\n            for(int j = 0; j < 4; j++) {\n                c = str.charAt(i + 2 + j);\n                if(c >= '0' && c <= '9') {\n                    value = (value << 4) + c - '0';\n                } else if(c >= 'a' && c <= 'f') {\n                    value = (value << 4) + 10 + c - 'a';\n                } else if(c >= 'A' && c <= 'F') {\n                    value = (value << 4) + 10 + c - 'A';\n                }\n            }\n            sb.append((char)value);\n            i+=5;\n        } else if(i < str.length() - 1) {\n            switch(str.charAt(i+1)) {\n                case 't':\n                    sb.append('\\t');\n                    break;\n                case 'r':\n                    sb.append('\\r');\n                    break;\n                case 'n':\n                    sb.append('\\n');\n                    break;\n                case 'f':\n                    sb.append('\\f');\n                    break;\n                case '\\\\':\n                    sb.append('\\\\');\n                    break;\n                default:\n                    sb.append(ch);\n                    break;\n            }\n            i++;\n        }\n    } else {\n        sb.append(ch);\n    }   \n}\nString decodedString = sb.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}