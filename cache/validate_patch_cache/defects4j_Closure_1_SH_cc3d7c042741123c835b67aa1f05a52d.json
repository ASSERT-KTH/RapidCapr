{
    "patch": "    Set<String> referencedParams = new HashSet<>();\n    for (Var var : referenced) {\n      if (var.getParentNode().isParamList()) {\n        referencedParams.add(var.getName());\n      }\n    }\n\n    if (referencedParams.isEmpty()) {\n      // remove all the parameters if none of them are referenced.\n      argList.removeChildren();\n      compiler.reportCodeChange();\n    } else {\n      // Strip unreferenced args off the end of the function declaration.\n      Node arg = argList.getFirstChild();\n      while (arg != null && !referencedParams.isEmpty()) {\n        String argName = arg.getString();\n        if (!referencedParams.contains(argName)) {\n          argList.removeChild(arg);\n          compiler.reportCodeChange();\n        } else {\n          referencedParams.remove(argName);\n        }\n        arg = arg.getNext();\n      }\n      // remove the rest of the unused parameters.\n      while ((arg = argList.getLastChild()) != null) {\n        String argName = arg.getString();\n        if (!referencedParams.contains(argName)) {\n          argList.removeChild(arg);\n          compiler.reportCodeChange();\n        } else {\n          break;\n        }\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..854e46f4 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,41 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Set<String> referencedParams = new HashSet<>();\n+    for (Var var : referenced) {\n+      if (var.getParentNode().isParamList()) {\n+        referencedParams.add(var.getName());\n+      }\n+    }\n+\n+    if (referencedParams.isEmpty()) {\n+      // remove all the parameters if none of them are referenced.\n+      argList.removeChildren();\n+      compiler.reportCodeChange();\n+    } else {\n+      // Strip unreferenced args off the end of the function declaration.\n+      Node arg = argList.getFirstChild();\n+      while (arg != null && !referencedParams.isEmpty()) {\n+        String argName = arg.getString();\n+        if (!referencedParams.contains(argName)) {\n+          argList.removeChild(arg);\n+          compiler.reportCodeChange();\n+        } else {\n+          referencedParams.remove(argName);\n+        }\n+        arg = arg.getNext();\n+      }\n+      // remove the rest of the unused parameters.\n+      while ((arg = argList.getLastChild()) != null) {\n+        String argName = arg.getString();\n+        if (!referencedParams.contains(argName)) {\n+          argList.removeChild(arg);\n+          compiler.reportCodeChange();\n+        } else {\n+          break;\n+        }\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}