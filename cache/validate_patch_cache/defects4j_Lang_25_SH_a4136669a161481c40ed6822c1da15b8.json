{
    "patch": "int i = 0;\nboolean success = true;\nwhile (i < input.length) {\n    char ch = input[i];\n    if ((ch & 0xff) != ch) {\n        break;\n    }\n    char r = backSlashEscapeISO[ch];\n    if (r == '=' || r == NO_MAPPING) {\n        success = false;\n        break;\n    }\n    output.append(r);\n    ++i;\n}\nif (i < input.length) {\n    success = escapeISO8859_1Bytes(output, input, i, input.length);\n}\n    \nif (!success) {\n    fail(\"One or more errors detected\");\n} ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}