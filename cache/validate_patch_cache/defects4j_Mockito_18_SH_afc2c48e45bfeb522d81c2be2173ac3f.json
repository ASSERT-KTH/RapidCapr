{
    "patch": "@Override\npublic ReturnValue execute(int input) {\n\n        Map<String, String> map = new HashMap<String, String>();\n        map.put(\"Fizz\", \"Buzz\");\n        map.put(\"Buzz\", \"Fizz\");\n        map.put(\"FizzBuzz\", \"FizzBuzz\");\n\n        List<String> list = new ArrayList<String>();\n        for (int i = 1; i <= input; i++) {\n            String word = \"\";\n            for (String key : map.keySet()) {\n                if (i % Integer.parseInt(key.replaceAll(\"\\\\D\", \"\")) == 0) {\n                    word += map.get(key);\n                }\n            }\n            if (word.equals(\"\")) {\n                word = Integer.toString(i);\n            }\n            list.add(word);\n        }\n        return new ReturnValue(list);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}