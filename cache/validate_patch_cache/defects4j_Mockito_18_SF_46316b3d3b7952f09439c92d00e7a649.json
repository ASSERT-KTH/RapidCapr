{
    "patch": "public Iterable<Integer> getEvenNumbers(int[] numbers) {\n    List<Integer> resultList = new ArrayList<>();\n    if(numbers == null){\n        return resultList;\n    }\n    for (int num : numbers) {\n        if (num % 2 == 0) {\n            resultList.add(num);\n        }\n    }\n    return resultList;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..01a3535d4 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,18 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public Iterable<Integer> getEvenNumbers(int[] numbers) {\n+    List<Integer> resultList = new ArrayList<>();\n+    if(numbers == null){\n+        return resultList;\n+    }\n+    for (int num : numbers) {\n+        if (num % 2 == 0) {\n+            resultList.add(num);\n+        }\n+    }\n+    return resultList;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expressionBUILD FAILED",
    "test_result": "ERROR"
}