{
    "patch": "      JSType typeUnion = null;\n      for (String propName : type.getOwnPropertyNames()) {\n        if (propName.equals(value)) {\n          JSType propType = type.getPropertyType(propName);\n          if (resultEqualsValue) {\n            return propType;\n          }\n          if (typeUnion == null) {\n            typeUnion = propType;\n          } else {\n            typeUnion = JSType.join(propType, typeUnion);\n          }\n        }\n      }\n      return typeUnion;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..6e4f3630 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -607,15 +607,21 @@ public abstract class ChainableReverseAbstractInterpreter\n     }\n \n     @Override\n-    public JSType caseObjectType(ObjectType type) {\n-      if (value.equals(\"function\")) {\n-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n-          // Objects are restricted to \"Function\", subtypes are left\n-          // Only filter out subtypes of \"function\"\n+      JSType typeUnion = null;\n+      for (String propName : type.getOwnPropertyNames()) {\n+        if (propName.equals(value)) {\n+          JSType propType = type.getPropertyType(propName);\n+          if (resultEqualsValue) {\n+            return propType;\n+          }\n+          if (typeUnion == null) {\n+            typeUnion = propType;\n+          } else {\n+            typeUnion = JSType.join(propType, typeUnion);\n+          }\n+        }\n       }\n-      return matchesExpectation(\"object\") ? type : null;\n-    }\n+      return typeUnion;\n \n     @Override\n     public JSType caseStringType() {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}