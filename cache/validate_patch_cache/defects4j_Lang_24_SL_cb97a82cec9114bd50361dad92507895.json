{
    "patch": "return foundDigit && ((sz < 2 || chars[sz-2] != 'e') && (sz < 3 || (chars[sz-2] != '.' || chars[sz-3] != 'e')) && (!hasDecPoint || str.charAt(sz) == '.')) && (sz != start || !allowSigns);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 4a1d8459..3d128d1a 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -1410,7 +1410,7 @@ public class NumberUtils {\n             if (chars[i] == 'l'\n                 || chars[i] == 'L') {\n                 // not allowing L with an exponent or decimal point\n-                return foundDigit && !hasExp;\n+return foundDigit && ((sz < 2 || chars[sz-2] != 'e') && (sz < 3 || (chars[sz-2] != '.' || chars[sz-3] != 'e')) && (!hasDecPoint || str.charAt(sz) == '.')) && (sz != start || !allowSigns);\n             }\n             // last character is illegal\n             return false;",
    "result_reason": "junit.framework.AssertionFailedError: isNumber(String) 14 Neg failed",
    "test_result": "FAIL"
}