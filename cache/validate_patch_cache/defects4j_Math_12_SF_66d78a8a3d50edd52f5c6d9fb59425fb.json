{
    "patch": "import java.util.*;\n\nclass Solution {\n    private static final int MOD = 1000000007;\n    private long[] dp;\n\n    public int countArrangement(int n) {\n        dp = new long[1 << n];\n        Arrays.fill(dp, -1);\n        return (int) (countArrangements(0, n, 1) % MOD);\n    }\n\n    public long countArrangements(int mask, int n, int pos) {\n        if (mask == (1 << n) - 1) {\n            return 1;\n        }\n        if (dp[mask] != -1) {\n            return dp[mask];\n        }\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            if ((mask & (1 << i)) == 0) {\n                int curPos = i + 1;\n                if (curPos % pos == 0 || pos % curPos == 0) {\n                    result += countArrangements(mask | (1 << i), n, pos + 1);\n                    result %= MOD;\n                }\n            }\n        }\n        dp[mask] = result;\n        return result;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}