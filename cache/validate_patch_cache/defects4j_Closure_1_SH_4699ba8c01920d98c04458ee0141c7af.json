{
    "patch": "      for (lastArg = argList.getLastChild(); lastArg != null; ) {\n        Node prevArg = lastArg;\n        lastArg = prevArg.getPrevious();\n        if (!referenced.contains(fnScope.getVar(prevArg.getString()))) {\n          argList.removeChild(prevArg);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d7747774 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,11 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      for (lastArg = argList.getLastChild(); lastArg != null; ) {\n+        Node prevArg = lastArg;\n+        lastArg = prevArg.getPrevious();\n+        if (!referenced.contains(fnScope.getVar(prevArg.getString()))) {\n+          argList.removeChild(prevArg);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}