{
    "patch": "public double getTypedPercent(String js) {\n    double totalChars = 0.0;\n    double typedChars = 0.0;\n  \n    for (int i = 0; i < js.length(); i++) {\n        char c = js.charAt(i);\n        if (c != ' ') {\n            totalChars++;\n            if (c != '_') {\n                typedChars++;\n            }\n        }\n    }\n  \n    if (totalChars == 0.0) {\n        return 0.0;\n    }\n  \n    return (typedChars / totalChars) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..4deaf40f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,26 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    double totalChars = 0.0;\n+    double typedChars = 0.0;\n+  \n+    for (int i = 0; i < js.length(); i++) {\n+        char c = js.charAt(i);\n+        if (c != ' ') {\n+            totalChars++;\n+            if (c != '_') {\n+                typedChars++;\n+            }\n+        }\n+    }\n+  \n+    if (totalChars == 0.0) {\n+        return 0.0;\n+    }\n+  \n+    return (typedChars / totalChars) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}