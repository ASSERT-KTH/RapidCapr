{
    "patch": "        copy.data = new java.util.ArrayList(this.data);\n        if (this.data.size() > 0) {\n            for (int index = 0; index < copy.data.size(); index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) copy.data.get(index);\n                if (index < start || index > end) {\n                    copy.data.set(index, null);\n                } else {\n                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                    copy.data.set(index, clone);\n                }\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..4034f19 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList(this.data);\n+        if (this.data.size() > 0) {\n+            for (int index = 0; index < copy.data.size(); index++) {\n+                TimeSeriesDataItem item\n+                        = (TimeSeriesDataItem) copy.data.get(index);\n+                if (index < start || index > end) {\n+                    copy.data.set(index, null);\n+                } else {\n+                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                    copy.data.set(index, clone);\n+                }\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>",
    "test_result": "FAIL"
}