{
    "patch": "public static <T> ReturnValues<T> returnListOf(Class<T> clazz) {\n    List<T> list = new ArrayList<>();\n    return new ReturnValues<T>() {\n        public <E> E returnValueFor(Class<E> aClass) {\n            if (aClass.equals(List.class) || aClass.equals(Iterable.class)) {\n                return (E) list;\n            }\n            return null;\n        }\n        public void addValue(T value) {\n            list.add(value);\n        }\n    };\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..fe31c4e01 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,20 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static <T> ReturnValues<T> returnListOf(Class<T> clazz) {\n+    List<T> list = new ArrayList<>();\n+    return new ReturnValues<T>() {\n+        public <E> E returnValueFor(Class<E> aClass) {\n+            if (aClass.equals(List.class) || aClass.equals(Iterable.class)) {\n+                return (E) list;\n+            }\n+            return null;\n+        }\n+        public void addValue(T value) {\n+            list.add(value);\n+        }\n+    };\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}