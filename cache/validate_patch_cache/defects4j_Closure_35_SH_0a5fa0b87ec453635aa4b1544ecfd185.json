{
    "patch": "    if (constraintObj != null && constraintObj.isRecordType()) {\n      ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n      if (objType != null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n          JSType propType = constraintObj.getPropertyType(prop);\n          if (!objType.isPropertyTypeDeclared(prop)) {\n            JSType typeToInfer = propType;\n            if (!objType.hasProperty(prop)) {\n              typeToInfer =\n                  getNativeType(VOID_TYPE).getLeastSupertype(propType);\n            }\n            if (!(propType.isConstructor() || propType.isInterface())) {\n              JSType declaredPropType =\n                  IR.nullNode().getType().getLeastSupertype(propType);\n              objType.defineInferredProperty(prop, typeToInfer, declaredPropType);\n            } else {\n              objType.defineDeclaredProperty(prop, propType, null);\n            }\n          }\n        }\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java\nindex 13e10920..4e40356b 100644\n--- a/src/com/google/javascript/jscomp/TypeInference.java\n+++ b/src/com/google/javascript/jscomp/TypeInference.java\n@@ -1129,11 +1129,18 @@ class TypeInference\n               typeToInfer =\n                   getNativeType(VOID_TYPE).getLeastSupertype(propType);\n             }\n-            objType.defineInferredProperty(prop, typeToInfer, null);\n+            if (!(propType.isConstructor() || propType.isInterface())) {\n+              JSType declaredPropType =\n+                  IR.nullNode().getType().getLeastSupertype(propType);\n+              objType.defineInferredProperty(prop, typeToInfer, declaredPropType);\n+            } else {\n+              objType.defineDeclaredProperty(prop, propType, null);\n+            }\n           }\n         }\n       }\n     }\n+    }\n   }\n \n   /**",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}