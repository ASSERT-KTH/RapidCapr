{
    "patch": "Type[] bounds = typeVariable.getBounds();\nfor (Type type : bounds) {\n    if (type != null && !(type instanceof TypeVariable)) {\n        registerTypeVariablesOn(type);\n    }\n}\n\nType actualTypeArgumentFor = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgumentFor == null) {\n    // if getActualTypeArgumentFor() returns null, we should register Object.class\n    registerTypeVariablesOn(Object.class);\n} else if (!(actualTypeArgumentFor instanceof TypeVariable)) {\n    // otherwise, register the actualTypeArgumentFor if it's not null and not a TypeVariable\n    registerTypeVariablesOn(actualTypeArgumentFor);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..f71d373dd 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,26 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] bounds = typeVariable.getBounds();\n+for (Type type : bounds) {\n+    if (type != null && !(type instanceof TypeVariable)) {\n+        registerTypeVariablesOn(type);\n+    }\n+}\n+\n+Type actualTypeArgumentFor = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgumentFor == null) {\n+    // if getActualTypeArgumentFor() returns null, we should register Object.class\n+    registerTypeVariablesOn(Object.class);\n+} else if (!(actualTypeArgumentFor instanceof TypeVariable)) {\n+    // otherwise, register the actualTypeArgumentFor if it's not null and not a TypeVariable\n+    registerTypeVariablesOn(actualTypeArgumentFor);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}