{
    "patch": "        } catch (IllegalFieldValueException e) {\n            boolean isDateField = false;\n            for (int i = 0; i < count; i++) {\n                if (savedFields[i].iField.getType() == DateTimeFieldType.date()) {\n                    // Remember whether date fields are involved in the failure\n                    isDateField = true;\n                    // Remove the bogus saved field if parsing is lenient and not strict\n                    if (e.getInitialPartial() == null || \n                            savedFields[i].iField.isSupported(e.getInitialPartial())) {\n                        savedFields[i].invalidate();\n                        iSavedFieldsShared = true;\n                    }\n                }\n            }\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            if (isDateField) {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..51667a7a 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            boolean isDateField = false;\n+            for (int i = 0; i < count; i++) {\n+                if (savedFields[i].iField.getType() == DateTimeFieldType.date()) {\n+                    // Remember whether date fields are involved in the failure\n+                    isDateField = true;\n+                    // Remove the bogus saved field if parsing is lenient and not strict\n+                    if (e.getInitialPartial() == null || \n+                            savedFields[i].iField.isSupported(e.getInitialPartial())) {\n+                        savedFields[i].invalidate();\n+                        iSavedFieldsShared = true;\n+                    }\n+                }\n+            }\n+            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            if (isDateField) {\n+                throw new IllegalArgumentException(e.getMessage(), e);\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}