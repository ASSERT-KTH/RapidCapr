{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMockSettingsImpl settings = new MockSettingsImpl();\nsettings.defaultAnswer(invocationOnMock -> {\n    try {\n        return invocationOnMock.getMock();\n    } catch (Throwable throwable) {\n        return null;\n    }\n});\nsettings.spiedInstance(mock);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\n((Factory) mock).setCallback(0, newFilter);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..f2afe8280 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,21 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MockSettingsImpl settings = new MockSettingsImpl();\n+settings.defaultAnswer(invocationOnMock -> {\n+    try {\n+        return invocationOnMock.getMock();\n+    } catch (Throwable throwable) {\n+        return null;\n+    }\n+});\n+settings.spiedInstance(mock);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\n+((Factory) mock).setCallback(0, newFilter);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: lambda expressions are not supported in -source 1.5",
    "test_result": "ERROR"
}