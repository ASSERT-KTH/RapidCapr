{
    "patch": "public static Number createNumber(String val) throws NumberFormatException {\n    if (val == null || val.isEmpty()) {\n        return null;\n    }\n    if (val.startsWith(\"--\")) {\n        // this is protection for poorness in java.lang.BigDecimal.\n        // it accepts this as a legal value, but it does not appear \n        // to be in specification of class. OS X Java parses it to \n        // a wrong value.\n        return null;\n    }\n    if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    }\n    //rest of the code\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..b26dd042 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,22 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+public static Number createNumber(String val) throws NumberFormatException {\n+    if (val == null || val.isEmpty()) {\n+        return null;\n+    }\n+    if (val.startsWith(\"--\")) {\n+        // this is protection for poorness in java.lang.BigDecimal.\n+        // it accepts this as a legal value, but it does not appear \n+        // to be in specification of class. OS X Java parses it to \n+        // a wrong value.\n+        return null;\n+    }\n+    if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    }\n+    //rest of the code\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}