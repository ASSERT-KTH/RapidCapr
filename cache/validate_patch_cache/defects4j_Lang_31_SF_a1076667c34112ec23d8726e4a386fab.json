{
    "patch": "public static boolean containsAny(CharSequence cs, char... searchChars) {\n    if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchCharsLength = searchChars.length;\n    int i = 0;\n    while (i < csLength) {\n        int codePoint = Character.codePointAt(cs, i);\n        int codePointLen = Character.charCount(codePoint);\n        if (contains(searchChars, codePoint)) {\n            return true;\n        }\n        i += codePointLen;\n    }\n    return false;\n}\n\nprivate static boolean contains(final char[] array, final int valueToFind) {\n    for (final char element : array) {\n        if (element == valueToFind) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..8213ce06 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,32 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char... searchChars) {\n+    if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n+        return false;\n+    }\n+    int csLength = cs.length();\n+    int searchCharsLength = searchChars.length;\n+    int i = 0;\n+    while (i < csLength) {\n+        int codePoint = Character.codePointAt(cs, i);\n+        int codePointLen = Character.charCount(codePoint);\n+        if (contains(searchChars, codePoint)) {\n+            return true;\n+        }\n+        i += codePointLen;\n+    }\n+    return false;\n+}\n+\n+private static boolean contains(final char[] array, final int valueToFind) {\n+    for (final char element : array) {\n+        if (element == valueToFind) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}