{
    "patch": "// Check if the given CFG node has an exception handler\nprivate boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode.getASTNode() instanceof TryStatement) {\n        TryStatement tryStmt = (TryStatement) cfgNode.getASTNode();\n        return tryStmt.getCatchClauses().size() > 0;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..1b0d0591 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,14 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+// Check if the given CFG node has an exception handler\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode.getASTNode() instanceof TryStatement) {\n+        TryStatement tryStmt = (TryStatement) cfgNode.getASTNode();\n+        return tryStmt.getCatchClauses().size() > 0;\n+    }\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}