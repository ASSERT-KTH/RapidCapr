{
    "patch": "        // The rhs of the assignment is the caller, so it's used by the\n        // context. Don't associate it with the lhs.\n        if (!parent.isCall() && parent.getParent() != null &&\n                parent.getParent().isCall()) {\n          // If the assignment is directly related to a call, associate the\n          // right-hand side of the assignment with the context, and the\n          // left-hand side with the dependency.\n          recordDepScope(recordNode, ns);\n        } else if (parent.getFirstChild().getNext() != n) {\n          // If the assignment is not directly related to a call, and it is\n          // not the last in a FOR loop, associate the right-hand side with\n          // the dependency.\n          recordDepScope(recordNode, ns);\n        } else {\n          // If the assignment is not directly related to a call, and it is\n          // the last in a FOR loop, associate the left-hand side with the\n          // dependency.\n          recordDepScope(nameNode, ns);\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..bdfcd1b8 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,25 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n+        // The rhs of the assignment is the caller, so it's used by the\n+        // context. Don't associate it with the lhs.\n+        if (!parent.isCall() && parent.getParent() != null &&\n+                parent.getParent().isCall()) {\n+          // If the assignment is directly related to a call, associate the\n+          // right-hand side of the assignment with the context, and the\n+          // left-hand side with the dependency.\n+          recordDepScope(recordNode, ns);\n+        } else if (parent.getFirstChild().getNext() != n) {\n+          // If the assignment is not directly related to a call, and it is\n+          // not the last in a FOR loop, associate the right-hand side with\n+          // the dependency.\n+          recordDepScope(recordNode, ns);\n         } else {\n+          // If the assignment is not directly related to a call, and it is\n+          // the last in a FOR loop, associate the left-hand side with the\n+          // dependency.\n+          recordDepScope(nameNode, ns);\n+        }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}