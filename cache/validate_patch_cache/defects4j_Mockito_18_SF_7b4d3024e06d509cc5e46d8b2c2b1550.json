{
    "patch": "public static Iterable<String> getValues() {\n    MyObject values = new MyObject();\n\n    Object obj = values.returnValueFor(Iterable.class);\n    if(obj == null) {\n        return Collections.emptyList();\n    }\n\n    return (Iterable<String>) obj;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..65557baec 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,16 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static Iterable<String> getValues() {\n+    MyObject values = new MyObject();\n+\n+    Object obj = values.returnValueFor(Iterable.class);\n+    if(obj == null) {\n+        return Collections.emptyList();\n+    }\n+\n+    return (Iterable<String>) obj;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}