{
    "patch": "public static double regularizedGammaP(double a, double x){\n    final double epsilon = 1e-14;\n    double d = 1/a;\n    double ans = 1/a;\n    double sum = ans;\n    while (Math.abs(d) > epsilon && Math.abs(ans) > epsilon) {\n        d *= -x/a;\n        ans += d;\n        if ((sum - ans)/ans  < epsilon) {\n            break;\n        }\n        sum = ans;\n    }\n    return Math.exp(-x + a*Math.log(x) - logGamma(a))*ans;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..036eab361 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,21 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x){\n+    final double epsilon = 1e-14;\n+    double d = 1/a;\n+    double ans = 1/a;\n+    double sum = ans;\n+    while (Math.abs(d) > epsilon && Math.abs(ans) > epsilon) {\n+        d *= -x/a;\n+        ans += d;\n+        if ((sum - ans)/ans  < epsilon) {\n+            break;\n+        }\n+        sum = ans;\n+    }\n+    return Math.exp(-x + a*Math.log(x) - logGamma(a))*ans;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}