{
    "patch": "      Node first = n.getFirstChild();\n      Node parent = n.getParent();\n  \n      // ignore cast nodes.\n      if (NodeUtil.isGet(first)) {\n        // dealing with properties\n        Node target = first.getFirstChild();\n        if (isInGlobalScope(parent)) {\n          // global declaration\n          declarePropertiesOnGlobalScope(target);\n        } else {\n          // object properties\n          declarePropertiesOnObject(target);\n        }\n      } else if (!first.isFunction()) {\n        // free function call\n        n.putBooleanProp(Node.FREE_CALL, true);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..277fc0c6 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,24 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      Node first = n.getFirstChild();\n+      Node parent = n.getParent();\n+  \n+      // ignore cast nodes.\n+      if (NodeUtil.isGet(first)) {\n+        // dealing with properties\n+        Node target = first.getFirstChild();\n+        if (isInGlobalScope(parent)) {\n+          // global declaration\n+          declarePropertiesOnGlobalScope(target);\n+        } else {\n+          // object properties\n+          declarePropertiesOnObject(target);\n+        }\n+      } else if (!first.isFunction()) {\n+        // free function call\n+        n.putBooleanProp(Node.FREE_CALL, true);\n+      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}