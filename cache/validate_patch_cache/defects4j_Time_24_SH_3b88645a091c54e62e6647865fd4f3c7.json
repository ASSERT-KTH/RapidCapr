{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                int weeks = savedFields[i].iValue;\n                if (iChrono.weekyears().isLeap(iDefaultYear + weeks / 53)) {\n                    millis = savedFields[i].add(millis, ((weeks - 1) / 53) * 604800000L);\n                } else {\n                    millis = savedFields[i].add(millis, (weeks / 53) * 604800000L);\n                }\n                millis = savedFields[i].set(millis, resetFields);\n            } else {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fb16a01e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                int weeks = savedFields[i].iValue;\n+                if (iChrono.weekyears().isLeap(iDefaultYear + weeks / 53)) {\n+                    millis = savedFields[i].add(millis, ((weeks - 1) / 53) * 604800000L);\n+                } else {\n+                    millis = savedFields[i].add(millis, (weeks / 53) * 604800000L);\n+                }\n+                millis = savedFields[i].set(millis, resetFields);\n+            } else {\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}