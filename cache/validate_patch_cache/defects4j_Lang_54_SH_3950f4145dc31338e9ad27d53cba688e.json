{
    "patch": "            // validate country\n            if (len == 5 || len > 6) {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                String country = str.substring(3, 5);\n                if (!isAlpha(country)) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (len == 7) {\n                    // validate variant\n                    String variant = str.substring(6);\n                    if (!isAlphaNumeric(variant)) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    return new Locale(language, country, variant);\n                } else if (len >= 8) {\n                    if (str.charAt(6) != '_') {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    // validate variant\n                    String variant = str.substring(7);\n                    if (!isAlphaNumeric(variant)) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    return new Locale(language, country, variant);\n                } else {\n                    return new Locale(language, country);\n                }\n            } else if (len == 2) {\n                return new Locale(str, \"\");\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n    }\n\n    private static boolean isAlpha(String str) {\n        for (int i = 0; i < str.length(); i++) {\n            if (!Character.isLetter(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private static boolean isAlphaNumeric(String str) {\n        for (int i = 0; i < str.length(); i++) {\n            if (!Character.isLetterOrDigit(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..4ec604f4 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,59 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            // validate country\n+            if (len == 5 || len > 6) {\n+                if (str.charAt(5) != '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                String country = str.substring(3, 5);\n+                if (!isAlpha(country)) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (len == 7) {\n+                    // validate variant\n+                    String variant = str.substring(6);\n+                    if (!isAlphaNumeric(variant)) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    return new Locale(language, country, variant);\n+                } else if (len >= 8) {\n+                    if (str.charAt(6) != '_') {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    // validate variant\n+                    String variant = str.substring(7);\n+                    if (!isAlphaNumeric(variant)) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    return new Locale(language, country, variant);\n+                } else {\n+                    return new Locale(language, country);\n+                }\n+            } else if (len == 2) {\n+                return new Locale(str, \"\");\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        }\n+    }\n+\n+    private static boolean isAlpha(String str) {\n+        for (int i = 0; i < str.length(); i++) {\n+            if (!Character.isLetter(str.charAt(i))) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private static boolean isAlphaNumeric(String str) {\n+        for (int i = 0; i < str.length(); i++) {\n+            if (!Character.isLetterOrDigit(str.charAt(i))) {\n+                return false;\n+            }\n+        }\n+        return true;\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: class or interface expected",
    "test_result": "ERROR"
}