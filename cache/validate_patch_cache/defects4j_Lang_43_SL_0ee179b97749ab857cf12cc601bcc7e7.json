{
    "patch": "if (start < c.length && escapingOn && c[start] == QUOTE) {\n    next(pos);\n    int end = pattern.indexOf(QUOTE, start + 1);\n    if (end == -1) {\n        throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n    }\n    return appendTo == null ? null : appendTo.append(pattern.substring(start, end + 1));\n} else {\n    next(pos);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..c9a33e2c 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,16 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+if (start < c.length && escapingOn && c[start] == QUOTE) {\n+    next(pos);\n+    int end = pattern.indexOf(QUOTE, start + 1);\n+    if (end == -1) {\n+        throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n+    }\n+    return appendTo == null ? null : appendTo.append(pattern.substring(start, end + 1));\n+} else {\n+    next(pos);\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "java.lang.IllegalArgumentException: Unterminated quoted string at position 23",
    "test_result": "FAIL"
}