{
    "patch": "    private static final DurationFieldType[] UNIT_TYPES = {\n        DurationFieldType.years(),\n        DurationFieldType.months(),\n        DurationFieldType.weeks(),\n        DurationFieldType.days(),\n        DurationFieldType.hours(),\n        DurationFieldType.minutes(),\n        DurationFieldType.seconds(),\n        DurationFieldType.millis()\n    };\n\n    protected BasePeriod(long duration) {\n        super();\n        // Convert the duration to appropriate units\n        long[] values = new long[UNIT_TYPES.length];\n        Duration dur = Duration.millis(duration);\n        for (int i = 0; i < UNIT_TYPES.length; i++) {\n            long value = dur.getPeriod().get(UNIT_TYPES[i]);\n            dur = dur.minus(value, UNIT_TYPES[i]);\n            values[i] = value;\n        }\n        iValues = values;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..0e348aab 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,9 +218,28 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n+    private static final DurationFieldType[] UNIT_TYPES = {\n+        DurationFieldType.years(),\n+        DurationFieldType.months(),\n+        DurationFieldType.weeks(),\n+        DurationFieldType.days(),\n+        DurationFieldType.hours(),\n+        DurationFieldType.minutes(),\n+        DurationFieldType.seconds(),\n+        DurationFieldType.millis()\n+    };\n+\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        super();\n+        // Convert the duration to appropriate units\n+        long[] values = new long[UNIT_TYPES.length];\n+        Duration dur = Duration.millis(duration);\n+        for (int i = 0; i < UNIT_TYPES.length; i++) {\n+            long value = dur.getPeriod().get(UNIT_TYPES[i]);\n+            dur = dur.minus(value, UNIT_TYPES[i]);\n+            values[i] = value;\n+        }\n+        iValues = values;\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}