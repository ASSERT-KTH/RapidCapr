{
    "patch": "    public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n        if (f == null) {\n            throw new NullPointerException(\"Invalid univariate function.\");\n        }\n        double targetY = 0;\n        try {\n            targetY = f.value(initial);\n        } catch (FunctionEvaluationException e) {\n            // Initial value evaluation failure, try midpoint instead\n            initial = UnivariateRealSolverUtils.midpoint(min, max);\n            targetY = f.value(initial);\n        }\n        return solve(f, min, max, initial, targetY);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..66c3cf5d0 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,18 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+        if (f == null) {\n+            throw new NullPointerException(\"Invalid univariate function.\");\n+        }\n+        double targetY = 0;\n+        try {\n+            targetY = f.value(initial);\n+        } catch (FunctionEvaluationException e) {\n+            // Initial value evaluation failure, try midpoint instead\n+            initial = UnivariateRealSolverUtils.midpoint(min, max);\n+            targetY = f.value(initial);\n+        }\n+        return solve(f, min, max, initial, targetY);\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "error: no suitable method found for solve(UnivariateRealFunction,double,double,double,double)",
    "test_result": "ERROR"
}