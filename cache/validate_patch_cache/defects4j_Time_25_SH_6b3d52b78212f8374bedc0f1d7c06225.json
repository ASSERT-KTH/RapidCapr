{
    "patch": "else if ((offsetLocal - offsetAdjusted) > 0) {\n    long prevLocal = previousTransition(instantAdjusted);\n    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n    if (prevLocal != prevAdjusted) {\n        int newOffsetAdjusted = getOffset(prevAdjusted);\n        if (newOffsetAdjusted < offsetAdjusted) {\n            // We transitioned to a lower offset.\n            // Move instantLocal back so that the getOffset call\n            // returns the right offset for instantLocal - offsetAdjusted.\n            offsetAdjusted = newOffsetAdjusted;\n            instantAdjusted = prevAdjusted - newOffsetAdjusted;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..33806bd5 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+else if ((offsetLocal - offsetAdjusted) > 0) {\n+    long prevLocal = previousTransition(instantAdjusted);\n+    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+    if (prevLocal != prevAdjusted) {\n+        int newOffsetAdjusted = getOffset(prevAdjusted);\n+        if (newOffsetAdjusted < offsetAdjusted) {\n+            // We transitioned to a lower offset.\n+            // Move instantLocal back so that the getOffset call\n+            // returns the right offset for instantLocal - offsetAdjusted.\n+            offsetAdjusted = newOffsetAdjusted;\n+            instantAdjusted = prevAdjusted - newOffsetAdjusted;\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable offsetAdjusted",
    "test_result": "ERROR"
}