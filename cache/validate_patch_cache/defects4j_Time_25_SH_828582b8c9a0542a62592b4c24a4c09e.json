{
    "patch": "                    // try using next transition instead of previous\n                    final int offsetNext = getOffset(nextAdjusted);\n                    if (offsetNext > offsetAdjusted) {\n                        long nextDiff = nextAdjusted - instantLocal;\n                        if (nextDiff + offsetNext >= 0) {\n                            return offsetNext;\n                        }\n                    } else if (offsetNext < offsetAdjusted) {\n                        long nextDiff = nextAdjusted - instantLocal;\n                        if (nextDiff + offsetAdjusted < 0) {\n                            return offsetAdjusted;\n                        }\n                    }\n                    // fallback to previous transition",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..69779586 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    // try using next transition instead of previous\n+                    final int offsetNext = getOffset(nextAdjusted);\n+                    if (offsetNext > offsetAdjusted) {\n+                        long nextDiff = nextAdjusted - instantLocal;\n+                        if (nextDiff + offsetNext >= 0) {\n+                            return offsetNext;\n+                        }\n+                    } else if (offsetNext < offsetAdjusted) {\n+                        long nextDiff = nextAdjusted - instantLocal;\n+                        if (nextDiff + offsetAdjusted < 0) {\n+                            return offsetAdjusted;\n+                        }\n+                    }\n+                    // fallback to previous transition\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}