{
    "patch": "   public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n       if (width <= 0) {\n           return this;\n       }\n\n       ensureCapacity(size + width);\n\n       String str = obj == null ? getNullText() : obj.toString();\n       int strLen = str.length();\n\n       if (strLen >= width) {\n           str.getChars(0, width, buffer, size);\n       } else {\n           str.getChars(0, strLen, buffer, size);\n           for (int i = size + strLen; i < size + width; i++) {\n               buffer[i] = padChar;\n           }\n       }\n\n       size += width;\n       return this;\n   }\n   ```\n2. ```java\n   public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n       if (width <= 0) {\n           return this;\n       }\n\n       int strLen;\n       String str = obj == null ? getNullText() : obj.toString();\n       if ((strLen = str.length()) >= width) {\n           ensureCapacity(size + width);\n           str.getChars(0, width, buffer, size);\n       } else {\n           char[] padArr = new char[width - strLen];\n           Arrays.fill(padArr, padChar);\n           return append(str).append(padArr);   \n       }\n\n       size += width;\n       return this;\n   }\n   ```\n3. ```java\n   public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n       if (width <= 0) {\n           return this;\n       }\n\n       ensureCapacity(size + width);\n\n       String str = obj == null ? getNullText() : obj.toString();\n       int strLen = str.lengt",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java\nindex 886d424e..c5deb4b8 100644\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n@@ -875,24 +875,60 @@ public class StrBuilder implements Cloneable {\n      * @param padChar  the pad character to use\n      * @return this, to enable chaining\n      */\n-    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n-        if (width > 0) {\n-            ensureCapacity(size + width);\n-            String str = (obj == null ? getNullText() : obj.toString());\n-            int strLen = str.length();\n-            if (strLen >= width) {\n-                str.getChars(0, strLen, buffer, size);\n-            } else {\n-                int padLen = width - strLen;\n-                str.getChars(0, strLen, buffer, size);\n-                for (int i = 0; i < padLen; i++) {\n-                    buffer[size + strLen + i] = padChar;\n-                }\n-            }\n-            size += width;\n-        }\n-        return this;\n-    }\n+   public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n+       if (width <= 0) {\n+           return this;\n+       }\n+\n+       ensureCapacity(size + width);\n+\n+       String str = obj == null ? getNullText() : obj.toString();\n+       int strLen = str.length();\n+\n+       if (strLen >= width) {\n+           str.getChars(0, width, buffer, size);\n+       } else {\n+           str.getChars(0, strLen, buffer, size);\n+           for (int i = size + strLen; i < size + width; i++) {\n+               buffer[i] = padChar;\n+           }\n+       }\n+\n+       size += width;\n+       return this;\n+   }\n+   ```\n+2. ```java\n+   public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n+       if (width <= 0) {\n+           return this;\n+       }\n+\n+       int strLen;\n+       String str = obj == null ? getNullText() : obj.toString();\n+       if ((strLen = str.length()) >= width) {\n+           ensureCapacity(size + width);\n+           str.getChars(0, width, buffer, size);\n+       } else {\n+           char[] padArr = new char[width - strLen];\n+           Arrays.fill(padArr, padChar);\n+           return append(str).append(padArr);   \n+       }\n+\n+       size += width;\n+       return this;\n+   }\n+   ```\n+3. ```java\n+   public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n+       if (width <= 0) {\n+           return this;\n+       }\n+\n+       ensureCapacity(size + width);\n+\n+       String str = obj == null ? getNullText() : obj.toString();\n+       int strLen = str.lengt\n \n     /**\n      * Appends an object to the builder padding on the right to a fixed length.",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}