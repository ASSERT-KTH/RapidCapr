{
    "patch": "        double num = Double.parseDouble(value);\n        int result = 0;\n\n        if (value.substring(value.length() - 2).equals(\".5\")) {\n            if(num < 0)\n                result = (int)Math.ceil(num - 0.5);\n            else\n                result = (int)Math.floor(num + 0.5);\n        } else if (value.indexOf('.') == -1){\n            result = Integer.parseInt(value);\n        } else {\n            result = (int)Math.round(num);\n        }\n\n        return result;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..ba12416 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -25,8 +25,21 @@ public class CLOSEST_INTEGER {\n \n         double num = Double.parseDouble(value);\n         int result = 0;\n+        double num = Double.parseDouble(value);\n+        int result = 0;\n+\n         if (value.substring(value.length() - 2).equals(\".5\")) {\n-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n+            if(num < 0)\n+                result = (int)Math.ceil(num - 0.5);\n+            else\n+                result = (int)Math.floor(num + 0.5);\n+        } else if (value.indexOf('.') == -1){\n+            result = Integer.parseInt(value);\n+        } else {\n+            result = (int)Math.round(num);\n+        }\n+\n+        return result;\n         } else if (value.length() > 0){\n             result = (int)Math.round(num);\n         }",
    "result_reason": " /tmp/humaneval-CLOSEST_INTEGER/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java:[43,11] illegal start of type",
    "test_result": "ERROR"
}