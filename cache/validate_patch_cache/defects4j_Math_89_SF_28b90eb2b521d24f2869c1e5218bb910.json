{
    "patch": "public void addValue(Object v) {\n    try {\n        Comparable<?> c = (Comparable<?>) v;\n        addValue(c);\n    } catch (ClassCastException e) {\n        throw new IllegalArgumentException(\"Value is not comparable or does not implement Comparable interface\", e);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/Frequency.java b/src/java/org/apache/commons/math/stat/Frequency.java\nindex c8deca31a..5e28b5b0d 100644\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n@@ -106,9 +106,14 @@ public class Frequency implements Serializable {\n      * @deprecated use {@link #addValue(Comparable)} instead\n      */\n     @Deprecated\n-    public void addValue(Object v) {\n-            addValue((Comparable<?>) v);            \n+public void addValue(Object v) {\n+    try {\n+        Comparable<?> c = (Comparable<?>) v;\n+        addValue(c);\n+    } catch (ClassCastException e) {\n+        throw new IllegalArgumentException(\"Value is not comparable or does not implement Comparable interface\", e);\n     }\n+}\n     \n     /**\n      * Adds 1 to the frequency count for v.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}