{
    "patch": "if (collector.isEmpty()) {\n    currentFormatField = null;\n    strategies = new Strategy[0];\n    parsePattern = null;\n} else {\n    strategies = collector.toArray(new Strategy[collector.size()]);\n    parsePattern = Pattern.compile(regex.toString());\n    currentFormatField = null;\n}\n\nif (patternMatcher.hitEnd() && patternMatcher.regionStart() == patternMatcher.regionEnd()) {\n    // Pattern matches and there are no remaining format fields\n} else {\n    // Either the pattern doesn't match or there are remaining format fields\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..8d56da80 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,22 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if (collector.isEmpty()) {\n+    currentFormatField = null;\n+    strategies = new Strategy[0];\n+    parsePattern = null;\n+} else {\n+    strategies = collector.toArray(new Strategy[collector.size()]);\n+    parsePattern = Pattern.compile(regex.toString());\n+    currentFormatField = null;\n+}\n+\n+if (patternMatcher.hitEnd() && patternMatcher.regionStart() == patternMatcher.regionEnd()) {\n+    // Pattern matches and there are no remaining format fields\n+} else {\n+    // Either the pattern doesn't match or there are remaining format fields\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}