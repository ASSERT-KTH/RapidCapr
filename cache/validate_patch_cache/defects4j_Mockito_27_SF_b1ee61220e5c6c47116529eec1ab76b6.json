{
    "patch": "import org.mockito.internal.creation.MockSettingsImpl;\nimport org.mockito.internal.creation.bytebuddy.MockMethodInterceptorFilter;\nimport org.mockito.internal.handler.MockHandler;\nimport org.mockito.internal.util.MockUtil;\nimport org.mockito.invocation.MockInterceptor;\nimport org.mockito.invocation.MockHandlerInterface;\nimport org.mockito.mock.MockCreationSettings;\nimport org.mockito.plugins.MockMaker;\nimport org.mockito.plugins.MockMaker.TypeMockability;\nimport org.mockito.plugins.MockitoPlugins;\nimport org.mockito.stubbing.Answer;",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..8be0b575a 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,18 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+import org.mockito.internal.creation.MockSettingsImpl;\n+import org.mockito.internal.creation.bytebuddy.MockMethodInterceptorFilter;\n+import org.mockito.internal.handler.MockHandler;\n+import org.mockito.internal.util.MockUtil;\n+import org.mockito.invocation.MockInterceptor;\n+import org.mockito.invocation.MockHandlerInterface;\n+import org.mockito.mock.MockCreationSettings;\n+import org.mockito.plugins.MockMaker;\n+import org.mockito.plugins.MockMaker.TypeMockability;\n+import org.mockito.plugins.MockitoPlugins;\n+import org.mockito.stubbing.Answer;\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}