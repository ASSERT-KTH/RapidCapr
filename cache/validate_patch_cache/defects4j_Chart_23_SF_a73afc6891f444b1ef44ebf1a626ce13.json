{
    "patch": "public class Rectangle {\n    private double length;\n    private double width;\n\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n\n    public double getLength() {\n        return length;\n    }\n\n    public void setLength(double length) {\n        this.length = length;\n    }\n\n    public double getWidth() {\n        return width;\n    }\n\n    public void setWidth(double width) {\n        this.width = width;\n    }\n\n    public double getArea() {\n        return length * width;\n    }\n\n    public double getPerimeter() {\n        return 2 * (length + width);\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof Rectangle)) {\n            return false;\n        }\n        Rectangle other = (Rectangle) obj;\n        return Double.doubleToLongBits(length) == Double.doubleToLongBits(other.length)\n                && Double.doubleToLongBits(width) == Double.doubleToLongBits(other.width);\n    }\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        long temp;\n        temp = Double.doubleToLongBits(length);\n        result = prime * result + (int) (temp ^ (temp >>> 32));\n        temp = Double.doubleToLongBits(width);\n        result = prime * result + (int) (temp ^ (temp >>> 32));\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\nindex bbd5ddb..caba930 100644\n--- a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n@@ -327,7 +327,64 @@ public class MinMaxCategoryRenderer extends AbstractCategoryItemRenderer {\n      * @param column  the column index (zero-based).\n      * @param pass  the pass index.\n      */\n-    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n+public class Rectangle {\n+    private double length;\n+    private double width;\n+\n+    public Rectangle(double length, double width) {\n+        this.length = length;\n+        this.width = width;\n+    }\n+\n+    public double getLength() {\n+        return length;\n+    }\n+\n+    public void setLength(double length) {\n+        this.length = length;\n+    }\n+\n+    public double getWidth() {\n+        return width;\n+    }\n+\n+    public void setWidth(double width) {\n+        this.width = width;\n+    }\n+\n+    public double getArea() {\n+        return length * width;\n+    }\n+\n+    public double getPerimeter() {\n+        return 2 * (length + width);\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (!(obj instanceof Rectangle)) {\n+            return false;\n+        }\n+        Rectangle other = (Rectangle) obj;\n+        return Double.doubleToLongBits(length) == Double.doubleToLongBits(other.length)\n+                && Double.doubleToLongBits(width) == Double.doubleToLongBits(other.width);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        long temp;\n+        temp = Double.doubleToLongBits(length);\n+        result = prime * result + (int) (temp ^ (temp >>> 32));\n+        temp = Double.doubleToLongBits(width);\n+        result = prime * result + (int) (temp ^ (temp >>> 32));\n+        return result;\n+    }\n+}\n             Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n             ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n             int pass) {",
    "result_reason": "error: annotations are not supported in -source 1.4",
    "test_result": "ERROR"
}