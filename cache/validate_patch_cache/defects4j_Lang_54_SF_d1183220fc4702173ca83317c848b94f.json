{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    // Language must be two chars if length is less than 5\n    if (len >= 2 && len <= 4) {\n        if (!str.matches(\"[a-zA-Z]+\")) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str);\n    }\n\n    if (len >= 5) {\n        // Language must be all lowercase\n        String language = str.substring(0, 2);\n        if (!language.matches(\"[a-z]+\")) {\n            throw new IllegalArgumentException(\"Locale language must be all lowercase: \" + language);\n        }\n\n        // Country must be uppercase\n        String country = str.substring(3, 5);\n        if (!country.matches(\"[A-Z]+\")) {\n            throw new IllegalArgumentException(\"Locale country must be all uppercase: \" + country);\n        }\n\n        // Variant\n        String variant = len > 5 ? str.substring(6) : \"\";\n\n        return new Locale(language, country, variant);\n    }\n\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..9db9b486 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,41 +91,46 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    // Language must be two chars if length is less than 5\n+    if (len >= 2 && len <= 4) {\n+        if (!str.matches(\"[a-zA-Z]+\")) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        return new Locale(str);\n+    }\n+\n+    if (len >= 5) {\n+        // Language must be all lowercase\n+        String language = str.substring(0, 2);\n+        if (!language.matches(\"[a-z]+\")) {\n+            throw new IllegalArgumentException(\"Locale language must be all lowercase: \" + language);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+\n+        // Country must be uppercase\n+        String country = str.substring(3, 5);\n+        if (!country.matches(\"[A-Z]+\")) {\n+            throw new IllegalArgumentException(\"Locale country must be all uppercase: \" + country);\n         }\n+\n+        // Variant\n+        String variant = len > 5 ? str.substring(6) : \"\";\n+\n+        return new Locale(language, country, variant);\n     }\n \n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Locale country must be all uppercase: _P",
    "test_result": "FAIL"
}