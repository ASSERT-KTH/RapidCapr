{
    "patch": "    NodeTraversal.traverse(compiler, function, new NodeTraversal.Callback() {\n      @Override\n      public void visit(NodeTraversal t, Node n, Node parent) {\n        if (n.isParamList()) {\n          removeUnusedFunctionArgs(n.getFirstChild());\n        }\n      }\n    });",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..303c0e4d 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,14 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    NodeTraversal.traverse(compiler, function, new NodeTraversal.Callback() {\n+      @Override\n+      public void visit(NodeTraversal t, Node n, Node parent) {\n+        if (n.isParamList()) {\n+          removeUnusedFunctionArgs(n.getFirstChild());\n+        }\n+      }\n+    });\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}