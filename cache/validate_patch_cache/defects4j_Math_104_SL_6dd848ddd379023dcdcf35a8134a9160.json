{
    "patch": "private static final double DEFAULT_EPSILON = 1e-9; // infill location\n\npublic static void assertEquals(double expected, double actual, double epsilon) {\n    if (Double.isInfinite(expected)) {\n        if (expected > 0) {\n            Assert.assertEquals(expected, actual, 0.0);\n        } else {\n            Assert.assertEquals(expected, actual, epsilon);\n        }\n    } else if (Double.isNaN(expected)) {\n        Assert.assertTrue(Double.isNaN(actual));\n    } else if (expected == 0.0) {\n        Assert.assertEquals(expected, actual, epsilon);\n    } else {\n        double absoluteError = Math.abs(expected - actual);\n        double relativeError = absoluteError / Math.abs(expected);\n        if (absoluteError > epsilon && relativeError > epsilon) {\n            Assert.assertEquals(expected, actual, epsilon);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..bade3b581 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,7 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}