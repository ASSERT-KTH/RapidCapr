{
    "patch": "    public Dfp multiply(final int x) {\n            if (isNaN()) {\n                return newInstance(getField(), qnan);\n            }\n            if (x == 0) {\n                return newInstance(getField(), zero);\n            }\n            if (x == 1) {\n                return this;\n            }\n            if (x == -1) {\n                return negate();\n            }\n            return multiplyFast(x);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java\nindex 0f78330a5..86b06fcce 100644\n--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java\n+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java\n@@ -1600,6 +1600,18 @@ public class Dfp implements FieldElement<Dfp> {\n      * @return product of this and x\n      */\n     public Dfp multiply(final int x) {\n+            if (isNaN()) {\n+                return newInstance(getField(), qnan);\n+            }\n+            if (x == 0) {\n+                return newInstance(getField(), zero);\n+            }\n+            if (x == 1) {\n+                return this;\n+            }\n+            if (x == -1) {\n+                return negate();\n+            }\n             return multiplyFast(x);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}