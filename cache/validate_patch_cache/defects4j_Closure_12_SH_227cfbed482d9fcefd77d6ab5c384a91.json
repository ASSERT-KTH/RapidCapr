{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (!cfgNode.getType().equals(NodeType.BLOCK)) {\n        return false;\n    }\n    Block b = (Block) cfgNode.getElement();\n    if (b.getStatements().isEmpty()) {\n        return false;\n    }\n\n    Statement lastStatement = b.getStatements().get(b.getStatements().size() - 1);\n    if (lastStatement.getType() == StatementType.THROW) {\n        return true;\n    }\n\n    if (lastStatement.getType() == StatementType.IF) {\n        IfStatement ifStatement = (IfStatement) lastStatement.getElement();\n        Node thenBlock = ifStatement.getThenBlock();\n\n        if (thenBlock != null && hasExceptionHandler(thenBlock)) {\n            return true;\n        }\n\n        Node elseBlock = ifStatement.getElseBlock();\n        if (elseBlock != null && hasExceptionHandler(elseBlock)) {\n            return true;\n        }\n    }\n\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..36592000 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,36 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (!cfgNode.getType().equals(NodeType.BLOCK)) {\n+        return false;\n+    }\n+    Block b = (Block) cfgNode.getElement();\n+    if (b.getStatements().isEmpty()) {\n+        return false;\n+    }\n+\n+    Statement lastStatement = b.getStatements().get(b.getStatements().size() - 1);\n+    if (lastStatement.getType() == StatementType.THROW) {\n+        return true;\n+    }\n+\n+    if (lastStatement.getType() == StatementType.IF) {\n+        IfStatement ifStatement = (IfStatement) lastStatement.getElement();\n+        Node thenBlock = ifStatement.getThenBlock();\n+\n+        if (thenBlock != null && hasExceptionHandler(thenBlock)) {\n+            return true;\n+        }\n+\n+        Node elseBlock = ifStatement.getElseBlock();\n+        if (elseBlock != null && hasExceptionHandler(elseBlock)) {\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}