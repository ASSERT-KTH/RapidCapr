{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    double integrationLimit = 1000;\n    int intervals = 1000000;\n\n    double sum = 0.0;\n    double deltaX = integrationLimit / intervals;\n    for (int i = 1; i <= intervals; i++) {\n        double t = deltaX * i;\n        sum += Math.pow(t, a - 1) * Math.exp(-t * x) * deltaX;\n    }\n\n    return sum / Gamma.gamma(a);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..ebca9e6ba 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,19 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    double integrationLimit = 1000;\n+    int intervals = 1000000;\n+\n+    double sum = 0.0;\n+    double deltaX = integrationLimit / intervals;\n+    for (int i = 1; i <= intervals; i++) {\n+        double t = deltaX * i;\n+        sum += Math.pow(t, a - 1) * Math.exp(-t * x) * deltaX;\n+    }\n+\n+    return sum / Gamma.gamma(a);\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}