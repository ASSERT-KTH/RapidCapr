{
    "patch": "public String escapeString(String str) { \n    StringBuilder out = new StringBuilder(str.length() * 2); \n    for(int i=0; i < str.length(); i++) { \n        char ch = str.charAt(i); \n        switch(ch) { \n            case '&': out.append(\"&amp;\"); break; \n            case '\\\"': out.append(\"&quot;\"); break; \n            case '\\'': out.append(\"&apos;\"); break; \n            case '<': out.append(\"&lt;\"); break; \n            case '>': out.append(\"&gt;\"); break; \n            // add escape for non-ASCII characters\n            default: \n                if(ch < 32 || ch > 127) { \n                    out.append(String.format(\"\\\\u%04x\", (int)ch)); \n                } else { \n                    out.append(ch); \n                } \n                break; \n        } \n    } \n    return out.toString(); \n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}