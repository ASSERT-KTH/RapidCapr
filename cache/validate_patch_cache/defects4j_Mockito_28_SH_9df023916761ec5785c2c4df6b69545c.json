{
    "patch": "Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\nif (candidate != null && field.getType().isAssignableFrom(candidate.getClass())) {\n    try {\n        Constructor<?> constructor = field.getType().getDeclaredConstructor(candidate.getClass());\n        constructor.setAccessible(true);\n        Object instance = constructor.newInstance(candidate);\n        field.setAccessible(true);\n        field.set(fieldInstance, instance);\n    } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {\n        e.printStackTrace();\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..42c28f776 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,21 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+if (candidate != null && field.getType().isAssignableFrom(candidate.getClass())) {\n+    try {\n+        Constructor<?> constructor = field.getType().getDeclaredConstructor(candidate.getClass());\n+        constructor.setAccessible(true);\n+        Object instance = constructor.newInstance(candidate);\n+        field.setAccessible(true);\n+        field.set(fieldInstance, instance);\n+    } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {\n+        e.printStackTrace();\n+    }\n+}\n         }\n     }\n ",
    "result_reason": "error: multi-catch statement is not supported in -source 1.5",
    "test_result": "ERROR"
}