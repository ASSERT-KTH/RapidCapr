{
    "patch": "pos += (consumed == 0) ? Character.charCount(Character.codePointAt(input, pos)) : consumed;\nif (pos < len && input.charAt(pos-1) == '\\\\' && input.charAt(pos) == 'b') {\n    out.write('\\b');\n    pos += 2;\n} else if (Character.isHighSurrogate(input.charAt(pos-1)) && pos<len && Character.isLowSurrogate(input.charAt(pos))) {\n    pos += Character.charCount(Character.codePointAt(input, pos));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..b7bf9a7c 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,13 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+pos += (consumed == 0) ? Character.charCount(Character.codePointAt(input, pos)) : consumed;\n+if (pos < len && input.charAt(pos-1) == '\\\\' && input.charAt(pos) == 'b') {\n+    out.write('\\b');\n+    pos += 2;\n+} else if (Character.isHighSurrogate(input.charAt(pos-1)) && pos<len && Character.isLowSurrogate(input.charAt(pos))) {\n+    pos += Character.charCount(Character.codePointAt(input, pos));\n+}\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: 9",
    "test_result": "FAIL"
}