{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP\n// or GETELEM.\nJSType typeOfThis = functionType.getTypeOfThis();\nboolean isCallInProperContext = NodeUtil.isGetOrSetKey(n.getParent())\n        || NodeUtil.isFunctionExpression(n.getParent())\n        || NodeUtil.isCallInProperty(n);\nif (typeOfThis != null && !isCallInProperContext) {\n    report(t, n, EXPECTED_THIS_TYPE, typeOfThis.toString());\n    return;\n}\nvisitParameterList(t, n, functionType);\nensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..0a30dc76 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP\n+// or GETELEM.\n+JSType typeOfThis = functionType.getTypeOfThis();\n+boolean isCallInProperContext = NodeUtil.isGetOrSetKey(n.getParent())\n+        || NodeUtil.isFunctionExpression(n.getParent())\n+        || NodeUtil.isCallInProperty(n);\n+if (typeOfThis != null && !isCallInProperContext) {\n+    report(t, n, EXPECTED_THIS_TYPE, typeOfThis.toString());\n+    return;\n+}\n+visitParameterList(t, n, functionType);\n+ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}