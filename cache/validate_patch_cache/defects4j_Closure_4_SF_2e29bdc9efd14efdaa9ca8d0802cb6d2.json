{
    "patch": "  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    // TODO(user): Investigate whether it is really necessary to keep two\n    // different mechanisms for resolving named types, and if so, which order\n    // makes more sense. Now, resolution via registry is first in order to\n    // avoid triggering the warnings built into the resolution via properties.\n    boolean resolved = resolveViaRegistry(t, enclosing);\n\n    boolean handleCycle = detectImplicitPrototypeCycle();\n    if (handleCycle) {\n      handleTypeCycle(t);\n    }\n    if (resolved) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    resolveViaProperties(t, enclosing);\n    if (handleCycle) {\n      handleTypeCycle(t);\n    }\n    if (isResolved()) {\n      finishPropertyContinuations();\n    }\n    super.resolveInternal(t, enclosing);\n    return registry.isLastGeneration() ?\n        getReferencedType() : this;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/NamedType.java b/src/com/google/javascript/rhino/jstype/NamedType.java\nindex 70142c45..4c2d0ff1 100644\n--- a/src/com/google/javascript/rhino/jstype/NamedType.java\n+++ b/src/com/google/javascript/rhino/jstype/NamedType.java\n@@ -187,10 +187,11 @@ class NamedType extends ProxyObjectType {\n     // makes more sense. Now, resolution via registry is first in order to\n     // avoid triggering the warnings built into the resolution via properties.\n     boolean resolved = resolveViaRegistry(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n+\n+    boolean handleCycle = detectImplicitPrototypeCycle();\n+    if (handleCycle) {\n       handleTypeCycle(t);\n     }\n-\n     if (resolved) {\n       super.resolveInternal(t, enclosing);\n       finishPropertyContinuations();\n@@ -199,14 +200,13 @@ class NamedType extends ProxyObjectType {\n     }\n \n     resolveViaProperties(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n+    if (handleCycle) {\n       handleTypeCycle(t);\n     }\n-\n-    super.resolveInternal(t, enclosing);\n     if (isResolved()) {\n       finishPropertyContinuations();\n     }\n+    super.resolveInternal(t, enclosing);\n     return registry.isLastGeneration() ?\n         getReferencedType() : this;\n   }",
    "result_reason": "junit.framework.AssertionFailedError: unexpected warning(s) : JSC_IMPLEMENTS_NON_INTERFACE. can only implement interfaces at [testcode] line 2 : 29, JSC_IMPLEMENTS_NON_INTERFACE. can only implement interfaces at [testcode] line 3 : 26 expected:<1> but was:<2>",
    "test_result": "FAIL"
}