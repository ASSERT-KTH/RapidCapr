{
    "patch": "        copy.data = new java.util.ArrayList(this.data.subList(start, end+1));\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.minX = Double.NaN;\n        copy.maxX = Double.NaN;\n        copy.domainIsPointsInTime = this.domainIsPointsInTime;\n        copy.rangeIsInterval = this.rangeIsInterval;\n        copy.timePeriodClass = this.timePeriodClass;\n        copy.timePeriods = (RegularTimePeriod[]) this.timePeriods.clone();\n        copy.timePeriodCount = this.timePeriodCount;\n        copy.setMaximumItemCount(this.maximumItemCount);\n        copy.setMaximumItemAge(this.maximumItemAge);\n        return copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..30f38b9 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList(this.data.subList(start, end+1));\n+        copy.minY = Double.NaN;\n+        copy.maxY = Double.NaN;\n+        copy.minX = Double.NaN;\n+        copy.maxX = Double.NaN;\n+        copy.domainIsPointsInTime = this.domainIsPointsInTime;\n+        copy.rangeIsInterval = this.rangeIsInterval;\n+        copy.timePeriodClass = this.timePeriodClass;\n+        copy.timePeriods = (RegularTimePeriod[]) this.timePeriods.clone();\n+        copy.timePeriodCount = this.timePeriodCount;\n+        copy.setMaximumItemCount(this.maximumItemCount);\n+        copy.setMaximumItemAge(this.maximumItemAge);\n+        return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}