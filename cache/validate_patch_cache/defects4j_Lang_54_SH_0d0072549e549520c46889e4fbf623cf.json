{
    "patch": "if (len == 2 || (len > 2 && str.charAt(2) == '_')) {\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    } else if (len > 6) {\n        String variant = str.substring(3);\n        if (variant.chars().allMatch(c -> c == '_' || Character.isLetterOrDigit(c))) {\n            int underscore = variant.indexOf('_');\n            if (underscore == -1) {\n                return new Locale(str.substring(0, 2), str.substring(3));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, underscore + 3), variant.substring(underscore + 1));\n            }\n        }\n    }\n}\nthrow new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..dd7dc44b 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,22 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len == 2 || (len > 2 && str.charAt(2) == '_')) {\n+    if (len == 5) {\n+        return new Locale(str.substring(0, 2), str.substring(3, 5));\n+    } else if (len > 6) {\n+        String variant = str.substring(3);\n+        if (variant.chars().allMatch(c -> c == '_' || Character.isLetterOrDigit(c))) {\n+            int underscore = variant.indexOf('_');\n+            if (underscore == -1) {\n+                return new Locale(str.substring(0, 2), str.substring(3));\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(3, underscore + 3), variant.substring(underscore + 1));\n+            }\n+        }\n+    }\n+}\n+throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}