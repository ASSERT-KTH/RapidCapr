{
    "patch": "public static double regularizedGamma(double a, double x) {\n    final double SMALL = 10e-15;\n    final int ITMAX = 100;\n    final double EPS = 3.0e-7;\n    \n    if (x < 0.0 || a <= 0.0) {\n        throw new IllegalArgumentException(\"Invalid arguments to regularizedGamma\");\n    }\n    \n    if (x == 0.0) {\n        return 0.0;\n    } else if (x >= a + 1.0) {\n        return 1.0 - incompleteGamma(a, x);\n    }\n    \n    double term = 1.0 / a;\n    double sum = term;\n    for (int i = 1; i <= ITMAX; i++) {\n        term *= x / (a + i);\n        sum += term;\n        if (Math.abs(term) < Math.abs(sum) * EPS) {\n            return sum * Math.exp(-x + a * Math.log(x) - logGamma(a));\n        }\n    }\n    throw new RuntimeException(\"regularizedGamma failed to converge\");\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..5b7729f80 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,32 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    final double SMALL = 10e-15;\n+    final int ITMAX = 100;\n+    final double EPS = 3.0e-7;\n+    \n+    if (x < 0.0 || a <= 0.0) {\n+        throw new IllegalArgumentException(\"Invalid arguments to regularizedGamma\");\n+    }\n+    \n+    if (x == 0.0) {\n+        return 0.0;\n+    } else if (x >= a + 1.0) {\n+        return 1.0 - incompleteGamma(a, x);\n+    }\n+    \n+    double term = 1.0 / a;\n+    double sum = term;\n+    for (int i = 1; i <= ITMAX; i++) {\n+        term *= x / (a + i);\n+        sum += term;\n+        if (Math.abs(term) < Math.abs(sum) * EPS) {\n+            return sum * Math.exp(-x + a * Math.log(x) - logGamma(a));\n+        }\n+    }\n+    throw new RuntimeException(\"regularizedGamma failed to converge\");\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}