{
    "patch": "            if (offsetLocal < 0 && offsetAdjusted >= 0 && instantLocal - offsetLocal <= 0) {\n                return offsetAdjusted;\n            } else if (offsetLocal >= 0 && offsetAdjusted < 0 && instantAdjusted >= 0) {\n                return offsetLocal;\n            } else if (offsetLocal < 0 && offsetAdjusted < 0 && instantLocal - offsetLocal >= 0 && instantAdjusted < 0) {\n                return offsetAdjusted;\n            } else if (offsetLocal > 0 && offsetAdjusted > 0 && instantAdjusted <= 0) {\n                return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..b61d6377 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal < 0 && offsetAdjusted >= 0 && instantLocal - offsetLocal <= 0) {\n+                return offsetAdjusted;\n+            } else if (offsetLocal >= 0 && offsetAdjusted < 0 && instantAdjusted >= 0) {\n+                return offsetLocal;\n+            } else if (offsetLocal < 0 && offsetAdjusted < 0 && instantLocal - offsetLocal >= 0 && instantAdjusted < 0) {\n+                return offsetAdjusted;\n+            } else if (offsetLocal > 0 && offsetAdjusted > 0 && instantAdjusted <= 0) {\n+                return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}