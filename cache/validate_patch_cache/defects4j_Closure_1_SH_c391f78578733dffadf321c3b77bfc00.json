{
    "patch": "      // Add an empty placeholder argument if there aren't any left\n      // (to preserve the function's 'length')\n      if (argList.getChildCount() == 0) {\n        Node implicitVar = new Node(Token.NAME, \"\");\n        implicitVar.makeNonIndexable();\n        implicitVar.setIsSyntheticBlock(true);\n        implicitVar.putProp(Node.SYNTHETIC_VAR_REFERENCE, true);\n        argList.addChildToBack(implicitVar);\n      }\n        ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..1d6d1e39 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,16 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // Add an empty placeholder argument if there aren't any left\n+      // (to preserve the function's 'length')\n+      if (argList.getChildCount() == 0) {\n+        Node implicitVar = new Node(Token.NAME, \"\");\n+        implicitVar.makeNonIndexable();\n+        implicitVar.setIsSyntheticBlock(true);\n+        implicitVar.putProp(Node.SYNTHETIC_VAR_REFERENCE, true);\n+        argList.addChildToBack(implicitVar);\n+      }\n+        \n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}