{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    if (offsetLocal > offsetAdjusted) {\n        long prevAdjusted = previousTransition(instantAdjusted);\n        if ((prevAdjusted - offsetLocal) < instantLocal) {\n            return offsetLocal;\n        }\n    } else {\n        long nextLocal = nextTransition(instantAdjusted);\n        if ((instantLocal - offsetLocal) >= nextLocal) {\n            return offsetAdjusted;\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..2642aea7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    if (offsetLocal > offsetAdjusted) {\n+        long prevAdjusted = previousTransition(instantAdjusted);\n+        if ((prevAdjusted - offsetLocal) < instantLocal) {\n+            return offsetLocal;\n+        }\n+    } else {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        if ((instantLocal - offsetLocal) >= nextLocal) {\n+            return offsetAdjusted;\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}