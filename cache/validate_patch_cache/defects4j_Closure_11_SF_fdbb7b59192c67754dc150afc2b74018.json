{
    "patch": "public String getProp(String propName) {\n  Properties props = new Properties();\n  try (Reader r= new FileReader(\"config.properties\")) {\n      props.load(r);\n  } catch (IOException e) {\n      e.printStackTrace();\n  }\n\n  String value = props.getProperty(propName);\n  if (value == null || value.trim().length() == 0) {\n      System.err.println(\"Property value not found for the key:\"+propName);\n  }\n\n  return value;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..9fab1c1c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getProp(String propName) {\n+  Properties props = new Properties();\n+  try (Reader r= new FileReader(\"config.properties\")) {\n+      props.load(r);\n+  } catch (IOException e) {\n+      e.printStackTrace();\n+  }\n+\n+  String value = props.getProperty(propName);\n+  if (value == null || value.trim().length() == 0) {\n+      System.err.println(\"Property value not found for the key:\"+propName);\n+  }\n+\n+  return value;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}