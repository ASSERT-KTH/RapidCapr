{
    "patch": "String unmatched = inputString.substring(lastMatch,endIndex);\nif (unmatched.indexOf(\"\\\\\") >=0) {\n   StringBuffer buf = new StringBuffer();\n   for (int i=0; i<unmatched.length(); i++) {      \n      char ch = unmatched.charAt(i);\n      if (ch == '\\\\' && i+1 < unmatched.length()) {\n         char nextChar = unmatched.charAt(i+1);\n         if (nextChar == '\\r' || nextChar == '\\n') {\n            i++; // Skip next character\n            continue;\n         }   \n      }   \n      buf.append(ch);\n   }\n   unmatched = buf.toString();   \n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}