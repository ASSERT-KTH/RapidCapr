{
    "patch": "            if (resetFields) {\n                for (int i = 0; i < count; i++) {\n                    SavedField field = savedFields[i];\n                    if (field.isSaved()) {\n                        millis = field.set(millis, resetFields);\n                    }\n                }\n            } else {\n                for (int i = count - 1; i >= 0; i--) {\n                    SavedField field = savedFields[i];\n                    if (field.isSaved()) {\n                        millis = field.set(millis, resetFields);\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a577b119 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,21 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (resetFields) {\n+                for (int i = 0; i < count; i++) {\n+                    SavedField field = savedFields[i];\n+                    if (field.isSaved()) {\n+                        millis = field.set(millis, resetFields);\n+                    }\n+                }\n+            } else {\n+                for (int i = count - 1; i >= 0; i--) {\n+                    SavedField field = savedFields[i];\n+                    if (field.isSaved()) {\n+                        millis = field.set(millis, resetFields);\n+                    }\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}