{
    "patch": "String[] tests = new String[] {\n            \"ISO8859_1_ESCAPE\", \"ISO8859_1_UNESCAPE\", \"HTML40_EXTENDED_ESCAPE\",\n            \"HTML40_EXTENDED_UNESCAPE\", \"HTML40_STRICT_ESCAPE\", \"HTML40_STRICT_UNESCAPE\",\n            \"XML_ESCAPE\", \"XML_UNESCAPE\", \"CSV_ESCAPE\", \"ECMA_SCRIPT_ESCAPE\"\n    };\n\nfor (String test : tests) {\n    URL url = getClass().getResource(\"/org/apache/commons/lang3/StringUtilsEscapeTest_\"+test+\".txt\");\n    assertNotNull(test, url);\n\n    LineIterator lines = IOUtils.lineIterator(url.openStream(), Charset.defaultCharset());\n    String input = lines.next();\n    String expected = lines.next();\n    String actual = StringUtils.escapeJava(input);\n\n    assertEquals(\"Failed on \" + test, expected, actual);\n\n    boolean success = true;\n    for (int c = Character.MIN_VALUE; success && c < Character.MAX_VALUE; c++) {\n        if (Character.isISOControl((char) c)) { continue; }\n\n        String expectedChar = escapeChar(c);\n        actual = StringUtils.escapeJava(Character.toString((char) c));\n\n        if (!expectedChar.equals(actual)) {\n            success = false;\n            System.out.printf(\"Failed to escape '%s'%n\", (char) c);\n        }\n    }\n\n    assertTrue(\"One or more errors detected\", success);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}