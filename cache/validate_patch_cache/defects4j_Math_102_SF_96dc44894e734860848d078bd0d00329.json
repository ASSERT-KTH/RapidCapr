{
    "patch": "public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException {\n    if (expected.length < 2 || expected.length != observed.length) {\n        throw new IllegalArgumentException(\"observed, expected array lengths incorrect\");\n    }\n    if (!isPositive(expected) || !isNonNegative(observed)) {\n        throw new IllegalArgumentException(\n                \"observed counts must be non-negative and expected counts must be positive\");\n    }\n\n    double sumObserved = 0.0;\n    double sumExpected = 0.0;\n    \n    for (int i = 0; i < expected.length; i++) {\n        sumObserved += observed[i];\n        sumExpected += expected[i];\n    }\n\n    // check if sum of expected values is 0\n    if (sumExpected == 0) {\n        return 0.0;\n    }\n\n    double chiSquare = 0.0;\n    for (int i = 0; i < expected.length; i++) {\n        double expectedScaled = expected[i] * sumObserved / sumExpected;\n        double deviation = observed[i] - expectedScaled;\n        chiSquare += deviation * deviation / expectedScaled;\n        // check if the computed chi-square value is greater than expected value\n        if (chiSquare > expectedScaled) {\n            return expectedScaled;\n        }\n    }\n\n    return chiSquare;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex c87b0101f..b2ebfd44c 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -61,25 +61,42 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n      * @throws IllegalArgumentException if preconditions are not met\n      * or length is less than 2\n      */\n-    public double chiSquare(double[] expected, long[] observed)\n-        throws IllegalArgumentException {\n-        if ((expected.length < 2) || (expected.length != observed.length)) {\n-            throw new IllegalArgumentException(\n-                    \"observed, expected array lengths incorrect\");\n-        }\n-        if (!isPositive(expected) || !isNonNegative(observed)) {\n-            throw new IllegalArgumentException(\n-                \"observed counts must be non-negative and expected counts must be postive\");\n-        }\n-        double sumSq = 0.0d;\n-        double dev = 0.0d;\n-        for (int i = 0; i < observed.length; i++) {\n-                dev = ((double) observed[i] - expected[i]);\n-                sumSq += dev * dev / expected[i];\n+public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException {\n+    if (expected.length < 2 || expected.length != observed.length) {\n+        throw new IllegalArgumentException(\"observed, expected array lengths incorrect\");\n+    }\n+    if (!isPositive(expected) || !isNonNegative(observed)) {\n+        throw new IllegalArgumentException(\n+                \"observed counts must be non-negative and expected counts must be positive\");\n+    }\n+\n+    double sumObserved = 0.0;\n+    double sumExpected = 0.0;\n+    \n+    for (int i = 0; i < expected.length; i++) {\n+        sumObserved += observed[i];\n+        sumExpected += expected[i];\n+    }\n+\n+    // check if sum of expected values is 0\n+    if (sumExpected == 0) {\n+        return 0.0;\n+    }\n+\n+    double chiSquare = 0.0;\n+    for (int i = 0; i < expected.length; i++) {\n+        double expectedScaled = expected[i] * sumObserved / sumExpected;\n+        double deviation = observed[i] - expectedScaled;\n+        chiSquare += deviation * deviation / expectedScaled;\n+        // check if the computed chi-square value is greater than expected value\n+        if (chiSquare > expectedScaled) {\n+            return expectedScaled;\n         }\n-        return sumSq;\n     }\n \n+    return chiSquare;\n+}\n+\n     /**\n      * {@inheritDoc}\n      * <p><strong>Note: </strong>This implementation rescales the ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}