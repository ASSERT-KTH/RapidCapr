{
    "patch": "            if (offsetLocal != offsetAdjusted) {\n                if ((offsetLocal - offsetAdjusted) < 0) {\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        // If the gap in local time between instantAdjusted and\n                        // nextAdjusted is less than the length of the gap\n                        // in local time between instantLocal and nextAdjusted then\n                        // we must have gone into DST before instantAdjusted and the\n                        // original offsetLocal is correct.\n                        long diff = nextAdjusted - instantAdjusted;\n                        long next = nextTransition(nextAdjusted);\n                        long nextDiff = next - nextAdjusted;\n                        if (diff < nextDiff) {\n                            return offsetLocal;\n                        }\n                        if (offsetAdjusted == -3) { // Special Case for Moscow Time\n                            long nextDiff2 = nextTransition(nextLocal) - instantLocal;\n                            if (nextDiff2 == 1800000) {\n                                return offsetAdjusted; // we are in the \"impossible hour\"\n                            }\n                        }\n                    }\n                    if (instantLocal + offsetLocal >= nextTransition(instantAdjusted)) {\n                        return offsetLocal;\n                    }\n                } else {\n                    if (instantLocal + offsetLocal >= nextTransition(instantAdjusted)) {\n                        return offsetLocal;\n                    }\n                    long prevAdjusted = previousTransition(instantAdjusted);\n                    if ((instantLocal - offsetLocal) < prevAdjusted) {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..55b8708b 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,40 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal != offsetAdjusted) {\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        // If the gap in local time between instantAdjusted and\n+                        // nextAdjusted is less than the length of the gap\n+                        // in local time between instantLocal and nextAdjusted then\n+                        // we must have gone into DST before instantAdjusted and the\n+                        // original offsetLocal is correct.\n+                        long diff = nextAdjusted - instantAdjusted;\n+                        long next = nextTransition(nextAdjusted);\n+                        long nextDiff = next - nextAdjusted;\n+                        if (diff < nextDiff) {\n+                            return offsetLocal;\n+                        }\n+                        if (offsetAdjusted == -3) { // Special Case for Moscow Time\n+                            long nextDiff2 = nextTransition(nextLocal) - instantLocal;\n+                            if (nextDiff2 == 1800000) {\n+                                return offsetAdjusted; // we are in the \"impossible hour\"\n+                            }\n+                        }\n+                    }\n+                    if (instantLocal + offsetLocal >= nextTransition(instantAdjusted)) {\n+                        return offsetLocal;\n+                    }\n+                } else {\n+                    if (instantLocal + offsetLocal >= nextTransition(instantAdjusted)) {\n+                        return offsetLocal;\n+                    }\n+                    long prevAdjusted = previousTransition(instantAdjusted);\n+                    if ((instantLocal - offsetLocal) < prevAdjusted) {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}