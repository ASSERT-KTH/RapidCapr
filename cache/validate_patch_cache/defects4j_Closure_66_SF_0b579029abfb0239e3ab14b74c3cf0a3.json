{
    "patch": "public static Double getTypedPercent(JSONObject js) {\n    int countOfValue = js.values().size();\n    double countOfStrings = 0;\n    for (Object val : js.values()) {\n        if (val instanceof String) {\n            countOfStrings += 1;\n        }\n    }\n    return (countOfStrings / countOfValue) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..5dcd401a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static Double getTypedPercent(JSONObject js) {\n+    int countOfValue = js.values().size();\n+    double countOfStrings = 0;\n+    for (Object val : js.values()) {\n+        if (val instanceof String) {\n+            countOfStrings += 1;\n+        }\n+    }\n+    return (countOfStrings / countOfValue) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}