{
    "patch": "        MockCandidate bestCandidate = null;\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            MockCandidate candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            if(candidate.isBetterThan(bestCandidate)) {\n                bestCandidate = candidate;\n            }\n        }\n        bestCandidate.thenInject();",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..5bb0f84fd 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,17 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+        MockCandidate bestCandidate = null;\n+        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n+            MockCandidate candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            if(candidate.isBetterThan(bestCandidate)) {\n+                bestCandidate = candidate;\n+            }\n+        }\n+        bestCandidate.thenInject();\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}