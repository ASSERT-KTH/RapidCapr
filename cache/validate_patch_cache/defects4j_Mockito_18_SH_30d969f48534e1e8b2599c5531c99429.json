{
    "patch": "public ReturnValue execute(Context context, Parameter... params) {\n    List<Parameter> parameters = Arrays.asList(params);\n    ReturnValue values = null;\n\n    if (parameters.stream()\n                  .allMatch(p -> p.getValue() != null)) {\n        try {\n            values = method.invoke(instance, params);\n        } catch (IllegalAccessException | InvocationTargetException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    if (values == null) {\n        values = new ReturnValue();\n        values.setReturnValue(null);\n    }\n\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}