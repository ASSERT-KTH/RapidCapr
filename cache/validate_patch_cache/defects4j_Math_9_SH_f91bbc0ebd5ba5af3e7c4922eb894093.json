{
    "patch": "final double norm = direction.getNorm();\nif (norm == 0) {\n    return new Line(zero, zero);\n}\nfinal Vector3D unitDirection = direction.normalize();\nfinal Vector3D reversed = unitDirection.scalarMultiply(-1);\nreturn new Line(zero, reversed.scalarMultiply(norm));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..070aed5e2 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,13 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+final double norm = direction.getNorm();\n+if (norm == 0) {\n+    return new Line(zero, zero);\n+}\n+final Vector3D unitDirection = direction.normalize();\n+final Vector3D reversed = unitDirection.scalarMultiply(-1);\n+return new Line(zero, reversed.scalarMultiply(norm));\n         return reverted;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}