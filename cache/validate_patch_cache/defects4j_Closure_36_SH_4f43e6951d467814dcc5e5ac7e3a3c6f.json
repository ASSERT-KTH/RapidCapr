{
    "patch": "if (value.isFunction() && reference.getParent().isCall()) {\n  CodingConvention convention = compiler.getCodingConvention();\n  // Bug 2388531: Don't inline subclass definitions into class defining\n  // calls as this confused class removing logic.\n  SubclassRelationship relationship =\n      convention.getClassesDefinedByCall(reference.getParent());\n  if (relationship != null) {\n    return false;\n  }\n\n  // issue 668: Don't inline singleton getter methods\n  // calls as this confused class removing logic.\n  Node parent = reference.getParent().getParent();\n  if (parent != null && NodeUtil.isGet(parent)) {\n    Node name = parent.getFirstChild();\n    if (name.getString().startsWith(\"get\")\n        && name.getString().length() > \"get\".length()) {\n      // This is a getter.\n      return false;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..ea8a26f4 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,28 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction() && reference.getParent().isCall()) {\n+  CodingConvention convention = compiler.getCodingConvention();\n+  // Bug 2388531: Don't inline subclass definitions into class defining\n+  // calls as this confused class removing logic.\n+  SubclassRelationship relationship =\n+      convention.getClassesDefinedByCall(reference.getParent());\n+  if (relationship != null) {\n+    return false;\n+  }\n+\n+  // issue 668: Don't inline singleton getter methods\n+  // calls as this confused class removing logic.\n+  Node parent = reference.getParent().getParent();\n+  if (parent != null && NodeUtil.isGet(parent)) {\n+    Node name = parent.getFirstChild();\n+    if (name.getString().startsWith(\"get\")\n+        && name.getString().length() > \"get\".length()) {\n+      // This is a getter.\n+      return false;\n+    }\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: variable convention is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}