{
    "patch": "public static String fix_spaces(String text) {\n    String new_text = \"\";\n    int curr_space_len = 0;\n    boolean in_word = false;\n\n    for (int i = 0; i < text.length(); i++) {\n        char c = text.charAt(i);\n\n        if (c == ' ') {\n            if (in_word) {\n                if (curr_space_len > 2) {\n                    new_text += '-';\n                } else {\n                    for (int j = 0; j < curr_space_len; j++) {\n                        new_text += '_';\n                    }\n                }\n                curr_space_len = 1;\n            } else {\n                curr_space_len++;\n            }\n        } else {\n            if (in_word) {\n                if (curr_space_len > 2) {\n                    new_text += '-';\n                } else {\n                    for (int j = 0; j < curr_space_len; j++) {\n                        new_text += '_';\n                    }\n                }\n                curr_space_len = 0;\n            }\n            in_word = true;\n            new_text += c;\n        }\n    }\n\n    if (curr_space_len > 0) {\n        if (curr_space_len > 2) {\n            new_text += '-';\n        } else {\n            for (int j = 0; j < curr_space_len; j++) {\n                new_text += '_';\n            }\n        }\n    }\n\n    return new_text;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..84dab5d 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -10,29 +10,53 @@ fix_spaces(\" Example 2\") == \"_Example_2\"\n fix_spaces(\" Example   3\") == \"_Example-3\" */\n \n public class FIX_SPACES {\n-    public static String fix_spaces(String text) {\n-        String new_text = \"\";\n-        int i = 0;\n-        int start = 0;\n-        int end = 0;\n-        while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n+public static String fix_spaces(String text) {\n+    String new_text = \"\";\n+    int curr_space_len = 0;\n+    boolean in_word = false;\n+\n+    for (int i = 0; i < text.length(); i++) {\n+        char c = text.charAt(i);\n+\n+        if (c == ' ') {\n+            if (in_word) {\n+                if (curr_space_len > 2) {\n+                    new_text += '-';\n+                } else {\n+                    for (int j = 0; j < curr_space_len; j++) {\n+                        new_text += '_';\n                     }\n-                    new_text += text.substring(i, i + 1);\n+                }\n+                curr_space_len = 1;\n+            } else {\n+                curr_space_len++;\n+            }\n+        } else {\n+            if (in_word) {\n+                if (curr_space_len > 2) {\n+                    new_text += '-';\n                 } else {\n-                    new_text += text.substring(i, i + 1);\n+                    for (int j = 0; j < curr_space_len; j++) {\n+                        new_text += '_';\n+                    }\n                 }\n-                start = i + 1;\n-                end = i + 1;\n+                curr_space_len = 0;\n             }\n-            i += 1;\n+            in_word = true;\n+            new_text += c;\n         }\n+    }\n \n-        return new_text;\n+    if (curr_space_len > 0) {\n+        if (curr_space_len > 2) {\n+            new_text += '-';\n+        } else {\n+            for (int j = 0; j < curr_space_len; j++) {\n+                new_text += '_';\n+            }\n+        }\n     }\n+\n+    return new_text;\n+}\n }",
    "result_reason": "   TEST_FIX_SPACES.test_3:39 expected:<Exa[___]mple> but was:<Exa[-]mple>",
    "test_result": "FAIL"
}