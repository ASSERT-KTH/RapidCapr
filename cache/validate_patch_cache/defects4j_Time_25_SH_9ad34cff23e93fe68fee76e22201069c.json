{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    if (offsetLocal > 0 && offsetAdjusted < 0 && instantLocal > 0) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            return offsetLocal;\n        }\n    } else if ((offsetLocal - offsetAdjusted) < 0) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n            if (offsetAdjusted != getOffset(prevAdjusted)) {\n                return offsetLocal;\n            }\n        }\n    } else {\n        long nextTransition = nextTransition(instantAdjusted);\n        int offsetNext = getOffset(nextTransition);\n        if (offsetNext == offsetAdjusted) {\n            return offsetLocal;\n        } else if (offsetNext > offsetLocal && offsetNext > offsetAdjusted) {\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextAdjusted == nextTransition) {\n                return offsetAdjusted;\n            }\n        } else if (offsetNext > offsetLocal && (offsetNext < offsetAdjusted || offsetAdjusted < 0)) {\n            long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n            if (prevAdjusted == nextTransition(instantLocal - offsetLocal)) {\n                return offsetAdjusted;\n            }\n        } else if (offsetNext < offsetLocal && offsetNext < offsetAdjusted) {\n            long prevLocal = previousTransition(instantAdjusted);\n            if (prevLocal == previousTransition(instantLocal)) {\n                return offsetAdjusted;\n            }\n        } else if (offsetNext < offsetLocal && (offsetNext > offsetAdjusted || offsetLocal < 0)) {\n            long nextLocal = nextTransition(instantLocal - offsetLocal);\n            if (nextLocal == nextTransition) {\n                return offsetLocal;\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..66a89d62 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,50 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    if (offsetLocal > 0 && offsetAdjusted < 0 && instantLocal > 0) {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            return offsetLocal;\n+        }\n+    } else if ((offsetLocal - offsetAdjusted) < 0) {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+            if (offsetAdjusted != getOffset(prevAdjusted)) {\n+                return offsetLocal;\n+            }\n+        }\n+    } else {\n+        long nextTransition = nextTransition(instantAdjusted);\n+        int offsetNext = getOffset(nextTransition);\n+        if (offsetNext == offsetAdjusted) {\n+            return offsetLocal;\n+        } else if (offsetNext > offsetLocal && offsetNext > offsetAdjusted) {\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            if (nextAdjusted == nextTransition) {\n+                return offsetAdjusted;\n+            }\n+        } else if (offsetNext > offsetLocal && (offsetNext < offsetAdjusted || offsetAdjusted < 0)) {\n+            long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+            if (prevAdjusted == nextTransition(instantLocal - offsetLocal)) {\n+                return offsetAdjusted;\n+            }\n+        } else if (offsetNext < offsetLocal && offsetNext < offsetAdjusted) {\n+            long prevLocal = previousTransition(instantAdjusted);\n+            if (prevLocal == previousTransition(instantLocal)) {\n+                return offsetAdjusted;\n+            }\n+        } else if (offsetNext < offsetLocal && (offsetNext > offsetAdjusted || offsetLocal < 0)) {\n+            long nextLocal = nextTransition(instantLocal - offsetLocal);\n+            if (nextLocal == nextTransition) {\n+                return offsetLocal;\n+            }\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "java.lang.IllegalArgumentException: Illegal instant due to time zone offset transition: 2006-10-01T07:00:00.000",
    "test_result": "FAIL"
}