{
    "patch": "\n        double num = Double.parseDouble(value);\n        int result = 0;\n        \n        if (value.endsWith(\".5\")) {\n            boolean isNegative = false;\n            if (num < 0) {\n                isNegative = true;\n                num = -num;\n            }\n            if (num - Math.floor(num) == 0.5) {\n                result = isNegative ? (int)Math.ceil(num) : (int)Math.floor(num);\n            }\n            else {\n                result = (int)Math.round(num);\n            }\n        } else if (value.length() > 0) {\n            result = (int)Math.round(num);\n        }\n\n        return result;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..93e57bc 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -25,8 +25,27 @@ public class CLOSEST_INTEGER {\n \n         double num = Double.parseDouble(value);\n         int result = 0;\n-        if (value.substring(value.length() - 2).equals(\".5\")) {\n-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n+\n+        double num = Double.parseDouble(value);\n+        int result = 0;\n+        \n+        if (value.endsWith(\".5\")) {\n+            boolean isNegative = false;\n+            if (num < 0) {\n+                isNegative = true;\n+                num = -num;\n+            }\n+            if (num - Math.floor(num) == 0.5) {\n+                result = isNegative ? (int)Math.ceil(num) : (int)Math.floor(num);\n+            }\n+            else {\n+                result = (int)Math.round(num);\n+            }\n+        } else if (value.length() > 0) {\n+            result = (int)Math.round(num);\n+        }\n+\n+        return result;\n         } else if (value.length() > 0){\n             result = (int)Math.round(num);\n         }",
    "result_reason": " /tmp/humaneval-CLOSEST_INTEGER/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java:[49,11] illegal start of type",
    "test_result": "ERROR"
}