{
    "patch": "One possible alternative fix is:\n``` java\npublic static int how_many_times(String string, String substring) {\n    if (string == null || substring == null) {\n        return 0;\n    }\n    int times = 0;\n    int len = substring.length();\n    for (int i = 0; i <= string.length() - len; i++) {\n        if (string.regionMatches(i, substring, 0, len)) {\n            times++;\n            i += len - 1;\n        }\n    }\n    return times;\n}\n```\nThis function also uses `regionMatches()` like some of the other fixes, but it only increments the loop index `i` by the length of the substring when a match is found, to avoid counting overlapping occurrences of the substring. It also precalculates the length of the substring for faster access inside the loop.",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java b/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java\nindex fbdb46b..ec5e108 100644\n--- a/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java\n+++ b/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java\n@@ -1,13 +1,22 @@\n package humaneval.buggy;\n \n public class HOW_MANY_TIMES {\n-    public static int how_many_times(String string, String substring) {\n-        int times = 0;\n-        for (int i = 0; i < string.length() - substring.length(); i += 1) {\n-            if (string.substring(i, i + substring.length()).equals(substring)){\n-                times += 1;\n-            }\n+One possible alternative fix is:\n+``` java\n+public static int how_many_times(String string, String substring) {\n+    if (string == null || substring == null) {\n+        return 0;\n+    }\n+    int times = 0;\n+    int len = substring.length();\n+    for (int i = 0; i <= string.length() - len; i++) {\n+        if (string.regionMatches(i, substring, 0, len)) {\n+            times++;\n+            i += len - 1;\n         }\n-        return times;\n     }\n+    return times;\n+}\n+```\n+This function also uses `regionMatches()` like some of the other fixes, but it only increments the loop index `i` by the length of the substring when a match is found, to avoid counting overlapping occurrences of the substring. It also precalculates the length of the substring for faster access inside the loop.\n }",
    "result_reason": " /tmp/humaneval-HOW_MANY_TIMES/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java:[4,13] ';' expected",
    "test_result": "ERROR"
}