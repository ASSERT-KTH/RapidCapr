{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    if (meanImpl instanceof Mean) {\n        meanImpl.increment(value);\n    } else {\n        ((AbstractStorelessUnivariateStatistic) meanImpl).increment(value);\n        meanImpl = ((AbstractStorelessUnivariateStatistic) meanImpl).copy();\n    }\n\n    if (varianceImpl instanceof Variance) {\n        double oldVar = varianceImpl.getResult();\n        double oldMean = meanImpl.getResult();\n        double delta = value - oldMean;\n        double newMean = oldMean + delta / (n + 1);\n        varianceImpl.increment(value);\n        double newVar = varianceImpl.getResult() * (n - 1) / n + delta * delta / (n * (n + 1));\n        varianceImpl = new Variance();\n        varianceImpl.increment(newVar);\n        ((AbstractStorelessUnivariateStatistic) meanImpl).increment(delta / (n + 1));\n    } else {\n        ((AbstractStorelessUnivariateStatistic) varianceImpl).increment(value);\n        varianceImpl = ((AbstractStorelessUnivariateStatistic) varianceImpl).copy();\n    }\n\n    if (geoMeanImpl instanceof GeometricMean) {\n        geoMeanImpl.increment(value);\n    } else {\n        ((AbstractStorelessUnivariateStatistic) geoMeanImpl).increment(value);\n        geoMeanImpl = ((AbstractStorelessUnivariateStatistic) geoMeanImpl).copy();\n    }\n\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..b1bfcdd4a 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,45 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n-        }\n-        n++;\n-    }\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    if (meanImpl instanceof Mean) {\n+        meanImpl.increment(value);\n+    } else {\n+        ((AbstractStorelessUnivariateStatistic) meanImpl).increment(value);\n+        meanImpl = ((AbstractStorelessUnivariateStatistic) meanImpl).copy();\n+    }\n+\n+    if (varianceImpl instanceof Variance) {\n+        double oldVar = varianceImpl.getResult();\n+        double oldMean = meanImpl.getResult();\n+        double delta = value - oldMean;\n+        double newMean = oldMean + delta / (n + 1);\n+        varianceImpl.increment(value);\n+        double newVar = varianceImpl.getResult() * (n - 1) / n + delta * delta / (n * (n + 1));\n+        varianceImpl = new Variance();\n+        varianceImpl.increment(newVar);\n+        ((AbstractStorelessUnivariateStatistic) meanImpl).increment(delta / (n + 1));\n+    } else {\n+        ((AbstractStorelessUnivariateStatistic) varianceImpl).increment(value);\n+        varianceImpl = ((AbstractStorelessUnivariateStatistic) varianceImpl).copy();\n+    }\n+\n+    if (geoMeanImpl instanceof GeometricMean) {\n+        geoMeanImpl.increment(value);\n+    } else {\n+        ((AbstractStorelessUnivariateStatistic) geoMeanImpl).increment(value);\n+        geoMeanImpl = ((AbstractStorelessUnivariateStatistic) geoMeanImpl).copy();\n+    }\n+\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}