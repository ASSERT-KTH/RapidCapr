{
    "patch": "public static int yearsBetween(Date startDate, Date endDate) {\n    Calendar startCal = Calendar.getInstance();\n    startCal.setTime(startDate);\n    Calendar endCal = Calendar.getInstance();\n    endCal.setTime(endDate);\n\n    int startYear = startCal.get(Calendar.YEAR);\n    int endYear = endCal.get(Calendar.YEAR);\n\n    int diff = endYear - startYear;\n    if (startCal.get(Calendar.MONTH) > endCal.get(Calendar.MONTH) ||\n            (startCal.get(Calendar.MONTH) == endCal.get(Calendar.MONTH) &&\n            startCal.get(Calendar.DAY_OF_MONTH) > endCal.get(Calendar.DAY_OF_MONTH))) {\n        diff--;\n    }\n    return diff;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..266ab1bb 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,23 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+public static int yearsBetween(Date startDate, Date endDate) {\n+    Calendar startCal = Calendar.getInstance();\n+    startCal.setTime(startDate);\n+    Calendar endCal = Calendar.getInstance();\n+    endCal.setTime(endDate);\n+\n+    int startYear = startCal.get(Calendar.YEAR);\n+    int endYear = endCal.get(Calendar.YEAR);\n+\n+    int diff = endYear - startYear;\n+    if (startCal.get(Calendar.MONTH) > endCal.get(Calendar.MONTH) ||\n+            (startCal.get(Calendar.MONTH) == endCal.get(Calendar.MONTH) &&\n+            startCal.get(Calendar.DAY_OF_MONTH) > endCal.get(Calendar.DAY_OF_MONTH))) {\n+        diff--;\n+    }\n+    return diff;\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}