{
    "patch": "// This function name will be empty for unnamed functions, and will have a non-empty string\n// representation for named functions.\nString functionName = null;\nname = functionNode.getFunctionName();\nif (name != null) {\n  functionName = name.getIdentifier();\n}\nboolean isUnnamedFunction = functionName == null || functionName.isEmpty();\nname = new Name();\nif (isUnnamedFunction) {\n  name.setIdentifier(\"\");\n} else {\n  name.setIdentifier(functionName);\n}\nNode newName = transform(name);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..5c883655 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,21 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+// This function name will be empty for unnamed functions, and will have a non-empty string\n+// representation for named functions.\n+String functionName = null;\n+name = functionNode.getFunctionName();\n+if (name != null) {\n+  functionName = name.getIdentifier();\n+}\n+boolean isUnnamedFunction = functionName == null || functionName.isEmpty();\n+name = new Name();\n+if (isUnnamedFunction) {\n+  name.setIdentifier(\"\");\n+} else {\n+  name.setIdentifier(functionName);\n+}\n+Node newName = transform(name);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable isUnnamedFunction is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}