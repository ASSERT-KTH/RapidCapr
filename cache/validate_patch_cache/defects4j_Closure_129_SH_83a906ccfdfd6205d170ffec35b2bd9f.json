{
    "patch": "    Node maybeGetprop = NodeUtil.getGetPropFirstChild(first);\n    if (maybeGetprop != null && !NodeUtil.isUndefined(maybeGetprop)) {\n      return;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..7c4047c4 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,10 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+    Node maybeGetprop = NodeUtil.getGetPropFirstChild(first);\n+    if (maybeGetprop != null && !NodeUtil.isUndefined(maybeGetprop)) {\n+      return;\n+    }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}