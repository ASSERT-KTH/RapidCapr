{
    "patch": "public void stop() {\n    if(this.runningState == STATE_NOT_STARTED) {\n        throw new IllegalStateException(\"Stopwatch has not been started. \");\n    }\n    if(this.runningState == STATE_STOPPED) {\n        throw new IllegalStateException(\"Stopwatch is already stopped. \");\n    }\n    stopTime = System.currentTimeMillis();\n    if(this.runningState == STATE_SUSPENDED) {\n        suspendedTime += (stopTime - suspendedTimeStart);\n    } else {\n        runningTime += (stopTime - startTime);\n    }\n    this.runningState = STATE_STOPPED;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/time/StopWatch.java b/src/java/org/apache/commons/lang/time/StopWatch.java\nindex 8f394217..20f9784d 100644\n--- a/src/java/org/apache/commons/lang/time/StopWatch.java\n+++ b/src/java/org/apache/commons/lang/time/StopWatch.java\n@@ -111,13 +111,21 @@ public class StopWatch {\n      *\n      * @throws IllegalStateException if the StopWatch is not running.\n      */\n-    public void stop() {\n-        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n-            throw new IllegalStateException(\"Stopwatch is not running. \");\n-        }\n-            stopTime = System.currentTimeMillis();\n-        this.runningState = STATE_STOPPED;\n+public void stop() {\n+    if(this.runningState == STATE_NOT_STARTED) {\n+        throw new IllegalStateException(\"Stopwatch has not been started. \");\n+    }\n+    if(this.runningState == STATE_STOPPED) {\n+        throw new IllegalStateException(\"Stopwatch is already stopped. \");\n     }\n+    stopTime = System.currentTimeMillis();\n+    if(this.runningState == STATE_SUSPENDED) {\n+        suspendedTime += (stopTime - suspendedTimeStart);\n+    } else {\n+        runningTime += (stopTime - startTime);\n+    }\n+    this.runningState = STATE_STOPPED;\n+}\n \n     /**\n      * <p>Resets the stopwatch. Stops it if need be. </p>",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}