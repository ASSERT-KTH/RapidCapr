{
    "patch": "public <T> void resetMock(T mock) {\n    if (mock == null) {\n        throw new IllegalArgumentException(\"Mock object cannot be null\");\n    }\n    if (!(mock instanceof Factory)) {\n        throw new IllegalArgumentException(\"Mock object does not have a CGLIB proxy\");\n    }\n    try {\n        ((Factory) mock).getCallback(0);\n        ((Factory) mock).setCallback(0, null);\n    } catch (IllegalStateException e) {\n        throw new IllegalArgumentException(\"Mock object is not a Factory instance\");\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..9188cbaa4 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,21 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    if (mock == null) {\n+        throw new IllegalArgumentException(\"Mock object cannot be null\");\n+    }\n+    if (!(mock instanceof Factory)) {\n+        throw new IllegalArgumentException(\"Mock object does not have a CGLIB proxy\");\n+    }\n+    try {\n+        ((Factory) mock).getCallback(0);\n+        ((Factory) mock).setCallback(0, null);\n+    } catch (IllegalStateException e) {\n+        throw new IllegalArgumentException(\"Mock object is not a Factory instance\");\n+    }\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Problems initiating spied field initializedSpy",
    "test_result": "FAIL"
}