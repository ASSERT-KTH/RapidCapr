{
    "patch": "public Object execute(CallContext context) throws Exception {\n    Object obj = values.getParameterFor(Parameter.class, \"obj\");\n    if (obj == null) {\n        return null;\n    } else {\n        if (obj instanceof String) {\n            String str = (String) obj;\n            if (str.isEmpty()) {\n                return obj;\n            } else {\n                return str.substring(0, 1).toUpperCase() + str.substring(1);\n            }\n        } else {\n            throw new ExecutionException(\"Parameter obj must be of type String\");\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}