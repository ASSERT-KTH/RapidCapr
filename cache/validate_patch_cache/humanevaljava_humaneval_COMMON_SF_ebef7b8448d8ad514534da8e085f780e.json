{
    "patch": "public static int[] common(int[] l1, int[] l2) {\n    Set<Integer> set1 = new HashSet<>();\n    Set<Integer> set2 = new HashSet<>();\n    \n    for (int i : l1) {\n        set1.add(i);\n    }\n    \n    for (int i : l2) {\n        set2.add(i);\n    }\n    \n    List<Integer> common = new ArrayList<>();\n    for (int n : set1) {\n        if (set2.contains(n)) {\n            common.add(n);\n        }\n    }\n    \n    int[] result = new int[common.size()];\n    int i = 0;\n    for (int n : common) {\n        result[i++] = n;\n    }\n    \n    Arrays.sort(result);\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMMON.java b/src/main/java/humaneval/buggy/COMMON.java\nindex f818c29..f785592 100644\n--- a/src/main/java/humaneval/buggy/COMMON.java\n+++ b/src/main/java/humaneval/buggy/COMMON.java\n@@ -9,22 +9,32 @@ import java.util.*;\n // [2, 3]\n \n public class COMMON {\n-    public static int[] common(int[] l1, int[] l2) {\n-        ArrayList<Integer> common = new ArrayList<Integer>();\n-        \n-        for (int i = 0; i < l1.length; i += 1){\n-            for (int j = 0; j < l2.length; j += 1){\n-                if (l1[i] == l2[j])\n-                    common.add(l1[i]);\n-            }\n-        }\n-        int[] result = new int[common.size()];\n-        int index = 0;\n-        for (Integer c : common) {\n-            result[index] = c;\n-            index += 1;\n+public static int[] common(int[] l1, int[] l2) {\n+    Set<Integer> set1 = new HashSet<>();\n+    Set<Integer> set2 = new HashSet<>();\n+    \n+    for (int i : l1) {\n+        set1.add(i);\n+    }\n+    \n+    for (int i : l2) {\n+        set2.add(i);\n+    }\n+    \n+    List<Integer> common = new ArrayList<>();\n+    for (int n : set1) {\n+        if (set2.contains(n)) {\n+            common.add(n);\n         }\n-        Arrays.sort(result);\n-        return result;\n     }\n+    \n+    int[] result = new int[common.size()];\n+    int i = 0;\n+    for (int n : common) {\n+        result[i++] = n;\n+    }\n+    \n+    Arrays.sort(result);\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}