{
    "patch": "if (result == null) {\n    throw new IllegalStateException(\"Recorded bad position information\");\n} else if (result.trim().isEmpty()) {\n    result = stream != null ? stream.getRemainingJSDocLine() : \"\";\n    if (result.isEmpty()) {\n        throw new IllegalStateException(\"Recorded bad position information\");\n    }\n} else {\n    result = result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..4e238037 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,16 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+if (result == null) {\n+    throw new IllegalStateException(\"Recorded bad position information\");\n+} else if (result.trim().isEmpty()) {\n+    result = stream != null ? stream.getRemainingJSDocLine() : \"\";\n+    if (result.isEmpty()) {\n+        throw new IllegalStateException(\"Recorded bad position information\");\n+    }\n+} else {\n+    result = result.trim();\n+}\n     return result;\n   }\n ",
    "result_reason": "java.lang.RuntimeException: java.lang.IllegalStateException: Recorded bad position information",
    "test_result": "FAIL"
}