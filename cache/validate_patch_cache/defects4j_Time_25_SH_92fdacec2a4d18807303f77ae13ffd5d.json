{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    int diff = offsetAdjusted - offsetLocal;\n                    if (diff > 0) {\n                        instantAdjusted += diff * DateTimeConstants.MILLIS_PER_HOUR;\n                        int offset = getOffset(instantAdjusted);\n                        if (offset == offsetLocal) {\n                            return offset;\n                        }\n                    } else if (diff < 0) {\n                        long next = nextTransition(instantAdjusted + DateTimeConstants.MILLIS_PER_DAY);\n                        if (next < instantLocal - offsetLocal) {\n                            return offset;\n                        }\n                        instantAdjusted += diff * DateTimeConstants.MILLIS_PER_HOUR;\n                        int offset = getOffset(instantAdjusted);\n                        if (offset == offsetLocal) {\n                            return offset;\n                        }\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..69c6d4a2 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,30 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    int diff = offsetAdjusted - offsetLocal;\n+                    if (diff > 0) {\n+                        instantAdjusted += diff * DateTimeConstants.MILLIS_PER_HOUR;\n+                        int offset = getOffset(instantAdjusted);\n+                        if (offset == offsetLocal) {\n+                            return offset;\n+                        }\n+                    } else if (diff < 0) {\n+                        long next = nextTransition(instantAdjusted + DateTimeConstants.MILLIS_PER_DAY);\n+                        if (next < instantLocal - offsetLocal) {\n+                            return offset;\n+                        }\n+                        instantAdjusted += diff * DateTimeConstants.MILLIS_PER_HOUR;\n+                        int offset = getOffset(instantAdjusted);\n+                        if (offset == offsetLocal) {\n+                            return offset;\n+                        }\n+                    }\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable instantAdjusted",
    "test_result": "ERROR"
}