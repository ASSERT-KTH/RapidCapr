{
    "patch": "            if (n % j == 0) {\n                boolean isPrime = true;\n                for (int k = 2; k*j <= n; k++) {\n                    if (n % (j*k) == 0) {\n                        isPrime = false;\n                        break;\n                    }\n                }\n                if (isPrime) {\n                    largest = j;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java b/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\nindex 794cf2e..56b6f4c 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\n@@ -20,8 +20,18 @@ public class LARGEST_PRIME_FACTOR {\n     public static int largest_prime_factor(int n) {\n         int largest = 1;\n         for (int j = 2; j < n; j += 1) {\n-            if (is_prime(j)){\n-                largest = n % j;\n+            if (n % j == 0) {\n+                boolean isPrime = true;\n+                for (int k = 2; k*j <= n; k++) {\n+                    if (n % (j*k) == 0) {\n+                        isPrime = false;\n+                        break;\n+                    }\n+                }\n+                if (isPrime) {\n+                    largest = j;\n+                }\n+            }\n             }\n         }\n         return largest;",
    "result_reason": " /tmp/humaneval-LARGEST_PRIME_FACTOR/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java:[37,9] illegal start of type",
    "test_result": "ERROR"
}