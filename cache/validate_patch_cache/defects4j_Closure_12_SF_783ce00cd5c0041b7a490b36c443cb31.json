{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    NodeList successors = cfgNode.getSuccessors();\n    for (int i = 0; i < successors.getLength(); i++) {\n        Node successor = successors.item(i);\n        if (successor instanceof ExceptionHandler) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..2d21fb5c 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,16 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    NodeList successors = cfgNode.getSuccessors();\n+    for (int i = 0; i < successors.getLength(); i++) {\n+        Node successor = successors.item(i);\n+        if (successor instanceof ExceptionHandler) {\n+            return true;\n+        }\n+    }\n     return false;\n-  }\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}