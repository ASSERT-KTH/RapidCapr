{
    "patch": "public static double getTypedPercent(JSONObject object) {\n    int count = object.length();\n    int typed = 0;\n\n    for (Object value : object.values()) {\n        if (value instanceof String) {\n            typed++;\n        }\n    }\n\n    return ((double) typed / count) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..cc0ca701 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject object) {\n+    int count = object.length();\n+    int typed = 0;\n+\n+    for (Object value : object.values()) {\n+        if (value instanceof String) {\n+            typed++;\n+        }\n+    }\n+\n+    return ((double) typed / count) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}