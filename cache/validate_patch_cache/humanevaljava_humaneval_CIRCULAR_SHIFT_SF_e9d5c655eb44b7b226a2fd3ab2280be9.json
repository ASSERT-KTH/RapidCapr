{
    "patch": "public static String circular_shift(int x, int shift) {\n    String s = Integer.toString(x);\n    \n    // If shift is negative, convert it to a positive value\n    if (shift < 0) {\n        shift = s.length() - Math.abs(shift) % s.length();\n    }\n    \n    // If shift is greater than length of string, reduce it to be within length of string\n    if (shift > s.length()) {\n        shift = shift % s.length();\n        StringBuilder sb = new StringBuilder(s).reverse();\n        return sb.substring(0, s.length());\n    }\n    \n    // Perform circular shift\n    StringBuilder sb = new StringBuilder();\n    sb.append(s.substring(s.length() - shift));\n    sb.append(s.substring(0, s.length() - shift));\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\nindex 9131a1c..bcd3f50 100644\n--- a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n@@ -9,16 +9,25 @@ If shift > number of digits, return digits reversed.\n \"12\" */\n \n public class CIRCULAR_SHIFT {\n-    public static String circular_shift(int x, int shift) {\n-        String s = x + \"\";\n-\n-        if (shift > s.length()) {\n-            StringBuilder sb = new StringBuilder();\n-            for (int i = s.length() - 1; i >= 0; i -= 1)\n-                sb.append(s.charAt(i));\n-            return sb.toString();\n-        } else {\n-            return s.substring(s.length() - shift + 1) + s.substring(0, s.length() - shift - 1);\n-        }\n+public static String circular_shift(int x, int shift) {\n+    String s = Integer.toString(x);\n+    \n+    // If shift is negative, convert it to a positive value\n+    if (shift < 0) {\n+        shift = s.length() - Math.abs(shift) % s.length();\n+    }\n+    \n+    // If shift is greater than length of string, reduce it to be within length of string\n+    if (shift > s.length()) {\n+        shift = shift % s.length();\n+        StringBuilder sb = new StringBuilder(s).reverse();\n+        return sb.substring(0, s.length());\n     }\n+    \n+    // Perform circular shift\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(s.substring(s.length() - shift));\n+    sb.append(s.substring(0, s.length() - shift));\n+    return sb.toString();\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}