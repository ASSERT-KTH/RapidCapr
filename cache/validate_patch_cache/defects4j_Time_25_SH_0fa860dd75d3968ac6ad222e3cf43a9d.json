{
    "patch": "            // check if we are near a DST boundary\n            // if yes, return the correct offset\n            long prevTransition = previousTransition(instantAdjusted);\n            long nextTransition = nextTransition(instantAdjusted);\n            if (prevTransition == nextTransition) {\n                return offsetLocal;\n            }\n            int prevOffset = getOffset(prevTransition);\n            int nextOffset = getOffset(nextTransition);\n            if (prevOffset < nextOffset) {\n                return offsetLocal;\n            } else if (prevOffset > nextOffset) {\n                return nextOffset;\n            }\n            // the offset isn't changing at this point\n            // but there still may be a DST transition \n            // shortly after instantLocal\n            if (offsetLocal == nextOffset && nextTransition == instantLocal - offsetLocal) {\n                return offsetAdjusted;\n            } else if (offsetLocal == prevOffset) {\n                long prevPrevTransition = previousTransition(prevTransition);\n                if (prevPrevTransition == instantLocal - offsetLocal) {\n                    return offsetLocal;\n                }\n            } else {\n                long nextNextTransition = nextTransition(nextTransition);\n                if (nextNextTransition == instantLocal - offsetLocal) {\n                    return offsetAdjusted;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..51dde973 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,36 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            // check if we are near a DST boundary\n+            // if yes, return the correct offset\n+            long prevTransition = previousTransition(instantAdjusted);\n+            long nextTransition = nextTransition(instantAdjusted);\n+            if (prevTransition == nextTransition) {\n+                return offsetLocal;\n+            }\n+            int prevOffset = getOffset(prevTransition);\n+            int nextOffset = getOffset(nextTransition);\n+            if (prevOffset < nextOffset) {\n+                return offsetLocal;\n+            } else if (prevOffset > nextOffset) {\n+                return nextOffset;\n+            }\n+            // the offset isn't changing at this point\n+            // but there still may be a DST transition \n+            // shortly after instantLocal\n+            if (offsetLocal == nextOffset && nextTransition == instantLocal - offsetLocal) {\n+                return offsetAdjusted;\n+            } else if (offsetLocal == prevOffset) {\n+                long prevPrevTransition = previousTransition(prevTransition);\n+                if (prevPrevTransition == instantLocal - offsetLocal) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long nextNextTransition = nextTransition(nextTransition);\n+                if (nextNextTransition == instantLocal - offsetLocal) {\n+                    return offsetAdjusted;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<2007-0[4-01T01:00:00.000+03]:00> but was:<2007-0[3-31T23:00:00.000+02]:00>",
    "test_result": "FAIL"
}