{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        final RealMatrix v = dec.getV();\n        final RealMatrix d = dec.getD();\n        final RealMatrix dSqrt = MatrixUtils.createRealDiagonalMatrix(\n                IntStream.range(0, d.getRowDimension())\n                        .mapToDouble(i -> Math.sqrt(Math.abs(d.getEntry(i, i))))\n                        .toArray()\n        );\n        return v.multiply(dSqrt).multiply(v.inverse());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..5df545348 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,14 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        final RealMatrix v = dec.getV();\n+        final RealMatrix d = dec.getD();\n+        final RealMatrix dSqrt = MatrixUtils.createRealDiagonalMatrix(\n+                IntStream.range(0, d.getRowDimension())\n+                        .mapToDouble(i -> Math.sqrt(Math.abs(d.getEntry(i, i))))\n+                        .toArray()\n+        );\n+        return v.multiply(dSqrt).multiply(v.inverse());\n     }\n }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}