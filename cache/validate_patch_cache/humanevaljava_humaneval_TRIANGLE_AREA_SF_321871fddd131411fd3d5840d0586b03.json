{
    "patch": "public static double triangle_area(double a, double h) {\n    if (a <= 0 || h <= 0) {\n        throw new IllegalArgumentException(\"Sides of a triangle must be positive\");\n    }\n    if (Double.isInfinite(a) || Double.isInfinite(h) || Double.isNaN(a) || Double.isNaN(h)) {\n        throw new IllegalArgumentException(\"Invalid input values\");\n    }\n    double area = 0.5 * a * h;\n    if (Double.isInfinite(area) || Double.isNaN(area) || area <= 0) {\n        throw new IllegalArgumentException(\"Invalid input values, resulted i",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIANGLE_AREA.java b/src/main/java/humaneval/buggy/TRIANGLE_AREA.java\nindex a34dabc..1eb3c94 100644\n--- a/src/main/java/humaneval/buggy/TRIANGLE_AREA.java\n+++ b/src/main/java/humaneval/buggy/TRIANGLE_AREA.java\n@@ -5,7 +5,14 @@ package humaneval.buggy;\n 7.5 */\n \n public class TRIANGLE_AREA {\n-    public static double triangle_area(double a, double h) {\n-        return a * h;\n+public static double triangle_area(double a, double h) {\n+    if (a <= 0 || h <= 0) {\n+        throw new IllegalArgumentException(\"Sides of a triangle must be positive\");\n     }\n+    if (Double.isInfinite(a) || Double.isInfinite(h) || Double.isNaN(a) || Double.isNaN(h)) {\n+        throw new IllegalArgumentException(\"Invalid input values\");\n+    }\n+    double area = 0.5 * a * h;\n+    if (Double.isInfinite(area) || Double.isNaN(area) || area <= 0) {\n+        throw new IllegalArgumentException(\"Invalid input values, resulted i\n }",
    "result_reason": " /tmp/humaneval-TRIANGLE_AREA/src/main/java/humaneval/buggy/TRIANGLE_AREA.java:[17,44] unclosed string literal",
    "test_result": "ERROR"
}