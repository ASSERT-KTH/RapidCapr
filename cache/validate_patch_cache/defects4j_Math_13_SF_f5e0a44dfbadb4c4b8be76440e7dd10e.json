{
    "patch": "import org.apache.commons.math3.linear.CholeskyDecomposition;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixImpl;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    CholeskyDecomposition cholesky = new CholeskyDecomposition(m);\n    RealMatrix lMatrix = new RealMatrixImpl(cholesky.getL().getData());\n    return lMatrix.multiply(lMatrix.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..3c1726062 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,13 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+import org.apache.commons.math3.linear.CholeskyDecomposition;\n+import org.apache.commons.math3.linear.RealMatrix;\n+import org.apache.commons.math3.linear.RealMatrixImpl;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    CholeskyDecomposition cholesky = new CholeskyDecomposition(m);\n+    RealMatrix lMatrix = new RealMatrixImpl(cholesky.getL().getData());\n+    return lMatrix.multiply(lMatrix.transpose());\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}