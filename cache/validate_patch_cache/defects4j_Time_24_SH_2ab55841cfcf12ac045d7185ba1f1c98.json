{
    "patch": "        for (int i = 0; i < count; i++) {\n            SavedField save = savedFields[i];\n            try {\n                long next = save.set(millis, resetFields);\n                if (next != millis) {\n                    for (int j = i + 1; j < count; j++) {\n                        SavedField nextField = savedFields[j];\n                        if (j == i + 1 && nextField.iField.getType() == DateTimeFieldType.year()) {\n                            int year = (int) nextField.iField.setCopy(millis, iDefaultYear);\n                            millis = nextField.set(millis, year);\n                        } else {\n                            millis = nextField.set(millis, resetFields);\n                        }\n                    }\n                    millis = save.set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n                }\n                throw e;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d15b8c4c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        for (int i = 0; i < count; i++) {\n+            SavedField save = savedFields[i];\n+            try {\n+                long next = save.set(millis, resetFields);\n+                if (next != millis) {\n+                    for (int j = i + 1; j < count; j++) {\n+                        SavedField nextField = savedFields[j];\n+                        if (j == i + 1 && nextField.iField.getType() == DateTimeFieldType.year()) {\n+                            int year = (int) nextField.iField.setCopy(millis, iDefaultYear);\n+                            millis = nextField.set(millis, year);\n+                        } else {\n+                            millis = nextField.set(millis, resetFields);\n+                        }\n+                    }\n+                    millis = save.set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n+                }\n+                throw e;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}