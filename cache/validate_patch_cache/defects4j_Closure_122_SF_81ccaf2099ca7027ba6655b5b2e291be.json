{
    "patch": "private void handleBlockComment(Comment comment) {\n    String value = comment.getValue();\n    String[] lines = value.split(\"\\n\");\n    boolean hasSuspiciousTag = false;\n    for (String line : lines) {\n        line = line.trim();\n        if (line.startsWith(\"*\")) {\n            line = line.substring(1);\n        }\n        if (line.contains(\"@\")) {\n            hasSuspiciousTag = true;\n            break;\n        }\n    }\n    if (hasSuspiciousTag && value.matches(\"^/\\\\*+.*\\\\*/$\") && !value.matches(\"^[^@]*@\\\\w+.*\\\\*/$\")) {\n        errorReporter.warning(\n            SUSPICIOUS_COMMENT_WARNING,\n            sourceName,\n            comment.getLineno(), \"\", 0);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..aaa78f16 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,27 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n+private void handleBlockComment(Comment comment) {\n+    String value = comment.getValue();\n+    String[] lines = value.split(\"\\n\");\n+    boolean hasSuspiciousTag = false;\n+    for (String line : lines) {\n+        line = line.trim();\n+        if (line.startsWith(\"*\")) {\n+            line = line.substring(1);\n+        }\n+        if (line.contains(\"@\")) {\n+            hasSuspiciousTag = true;\n+            break;\n+        }\n     }\n-  }\n+    if (hasSuspiciousTag && value.matches(\"^/\\\\*+.*\\\\*/$\") && !value.matches(\"^[^@]*@\\\\w+.*\\\\*/$\")) {\n+        errorReporter.warning(\n+            SUSPICIOUS_COMMENT_WARNING,\n+            sourceName,\n+            comment.getLineno(), \"\", 0);\n+    }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}