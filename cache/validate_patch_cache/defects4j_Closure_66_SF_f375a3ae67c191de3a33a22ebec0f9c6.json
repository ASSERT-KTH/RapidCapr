{
    "patch": "public double getTypedPercent(JsonNode data) {\n    double allCount = data.get(\"all\").asInt();\n    double typedCount = data.get(\"typed\").asInt();\n\n    if (allCount == 0) {\n        return 0.0;\n    } else {\n        return (typedCount / allCount) * 100;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..31a72f48 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JsonNode data) {\n+    double allCount = data.get(\"all\").asInt();\n+    double typedCount = data.get(\"typed\").asInt();\n+\n+    if (allCount == 0) {\n+        return 0.0;\n+    } else {\n+        return (typedCount / allCount) * 100;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}