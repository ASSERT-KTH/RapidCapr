{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = str.length();\n    int searchLength = searchChars.length;\n    int foundCount = 0;\n    for (int i = 0; i < csLength; i++) {\n        int ch = str.charAt(i);\n        if (searchLength <= 2 || Character.isBmpCodePoint(ch)) {\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    foundCount++;\n                    if (foundCount == searchLength) {\n                        return true;\n                    }\n                    break;\n                }\n            }\n        } else {\n            String strCodepoint = String.valueOf(ch);\n            int remainingCodeUnits = Character.charCount(ch) - 1;\n            i += remainingCodeUnits;\n            for (int j = 0; j < searchLength; j++) {\n                String searchCodepoint = new String(new char[] { searchChars[j] });\n                if (strCodepoint.equals(searchCodepoint)) {\n                    foundCount++;\n                    if (foundCount == searchLength) {\n                        return true;\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..12bba52c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,43 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int csLength = str.length();\n+    int searchLength = searchChars.length;\n+    int foundCount = 0;\n+    for (int i = 0; i < csLength; i++) {\n+        int ch = str.charAt(i);\n+        if (searchLength <= 2 || Character.isBmpCodePoint(ch)) {\n+            for (int j = 0; j < searchLength; j++) {\n+                if (searchChars[j] == ch) {\n+                    foundCount++;\n+                    if (foundCount == searchLength) {\n+                        return true;\n+                    }\n+                    break;\n+                }\n+            }\n+        } else {\n+            String strCodepoint = String.valueOf(ch);\n+            int remainingCodeUnits = Character.charCount(ch) - 1;\n+            i += remainingCodeUnits;\n+            for (int j = 0; j < searchLength; j++) {\n+                String searchCodepoint = new String(new char[] { searchChars[j] });\n+                if (strCodepoint.equals(searchCodepoint)) {\n+                    foundCount++;\n+                    if (foundCount == searchLength) {\n+                        return true;\n+                    }\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}