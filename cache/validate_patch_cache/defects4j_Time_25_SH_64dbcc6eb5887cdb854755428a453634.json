{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    if ((offsetLocal - offsetAdjusted) < 0) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextAdjusted != nextLocal || ((offsetAdjusted == -3) && ((nextLocal - instantAdjusted) != (nextAdjusted - (instantLocal - offsetAdjusted)))) {\n            return offsetLocal;\n        } else {\n            return offsetAdjusted;\n        }\n    } else {\n        long prevLocal = previousTransition(instantAdjusted);\n        long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n        if (prevAdjusted != prevLocal || ((offsetLocal == -3) && ((instantLocal - prevAdjusted) != (instantAdjusted - (prevLocal - offsetLocal))))) {\n            return offsetAdjusted;\n        } else {\n            return offsetLocal;\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..00828147 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,26 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    if ((offsetLocal - offsetAdjusted) < 0) {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextAdjusted != nextLocal || ((offsetAdjusted == -3) && ((nextLocal - instantAdjusted) != (nextAdjusted - (instantLocal - offsetAdjusted)))) {\n+            return offsetLocal;\n+        } else {\n+            return offsetAdjusted;\n+        }\n+    } else {\n+        long prevLocal = previousTransition(instantAdjusted);\n+        long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+        if (prevAdjusted != prevLocal || ((offsetLocal == -3) && ((instantLocal - prevAdjusted) != (instantAdjusted - (prevLocal - offsetLocal))))) {\n+            return offsetAdjusted;\n+        } else {\n+            return offsetLocal;\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}