{
    "patch": "        int absGcd = Math.abs(gcd);\n        if (absGcd == 1) {\n            return this;\n        }\n        return Fraction.getFraction(numerator / absGcd, denominator / absGcd);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..eacd17d5 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,11 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        int absGcd = Math.abs(gcd);\n+        if (absGcd == 1) {\n+            return this;\n+        }\n+        return Fraction.getFraction(numerator / absGcd, denominator / absGcd);\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}