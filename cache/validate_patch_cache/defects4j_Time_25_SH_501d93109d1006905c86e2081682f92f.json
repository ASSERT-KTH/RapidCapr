{
    "patch": "            if (offsetAdjusted < offsetLocal) {\n                long prevDst = previousTransition(instantAdjusted);\n                int offsetPrev = getOffset(prevDst);\n                if (offsetPrev == offsetLocal) {\n                    return offsetPrev;\n                }\n            } else if (offsetAdjusted > offsetLocal) {\n                long nextDst = nextTransition(instantAdjusted);\n                int offsetNext = getOffset(nextDst);\n                if (offsetNext == offsetAdjusted) {\n                    return offsetNext;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8f41634e 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,17 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetAdjusted < offsetLocal) {\n+                long prevDst = previousTransition(instantAdjusted);\n+                int offsetPrev = getOffset(prevDst);\n+                if (offsetPrev == offsetLocal) {\n+                    return offsetPrev;\n+                }\n+            } else if (offsetAdjusted > offsetLocal) {\n+                long nextDst = nextTransition(instantAdjusted);\n+                int offsetNext = getOffset(nextDst);\n+                if (offsetNext == offsetAdjusted) {\n+                    return offsetNext;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}