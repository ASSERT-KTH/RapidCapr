{
    "patch": "    public void testRevert() {\n        double eps = 1e-10;\n        Line line = new Line(\n            new Vector3D(0.028581782127907646, -0.35800295418467354, -0.9332382231704445),\n            new Vector3D(-0.07550526648325175, 0.9942729236765452, -0.07614169654702798));\n        Line rev = line.revert();\n        Assert.assertEquals(line.getDirection().getX(), -rev.getDirection().getX(), eps);\n        Assert.assertEquals(line.getDirection().getY(), -rev.getDirection().getY(), eps);\n        Assert.assertEquals(line.getDirection().getZ(), -rev.getDirection().getZ(), eps);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..bbbd7d0cb 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,15 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+    public void testRevert() {\n+        double eps = 1e-10;\n+        Line line = new Line(\n+            new Vector3D(0.028581782127907646, -0.35800295418467354, -0.9332382231704445),\n+            new Vector3D(-0.07550526648325175, 0.9942729236765452, -0.07614169654702798));\n+        Line rev = line.revert();\n+        Assert.assertEquals(line.getDirection().getX(), -rev.getDirection().getX(), eps);\n+        Assert.assertEquals(line.getDirection().getY(), -rev.getDirection().getY(), eps);\n+        Assert.assertEquals(line.getDirection().getZ(), -rev.getDirection().getZ(), eps);\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}