{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.FastMath;\nimport org.apache.commons.math3.util.MathUtils;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\n@RunWith(org.junit.runners.JUnit4.class)\npublic class GammaTest {\n\n    @Test\n    public void testRegularizedGammaPositivePositive() {\n        double s = 3.5;\n        double x = 8.2;\n        double expected = 0.632120558828558;\n        double actualP = Gamma.regularizedGammaP(s, x);\n        TestUtils.assertEquals(expected, actualP, 10e-15);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..14bb80fc3 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,24 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.FastMath;\n+import org.apache.commons.math3.util.MathUtils;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(org.junit.runners.JUnit4.class)\n+public class GammaTest {\n+\n+    @Test\n+    public void testRegularizedGammaPositivePositive() {\n+        double s = 3.5;\n+        double x = 8.2;\n+        double expected = 0.632120558828558;\n+        double actualP = Gamma.regularizedGammaP(s, x);\n+        TestUtils.assertEquals(expected, actualP, 10e-15);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}