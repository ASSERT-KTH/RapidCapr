{
    "patch": "      ObjectType thisObj = getObjectType();\n      for (String prop : thisObj.getOwnPropertyNames()) {\n        JSType propType = thisObj.getPropertyType(prop);\n        if (!isPropertyTypeDeclared(prop)) {\n          defineInferredProperty(prop, propType, null);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..7e004fe4 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,13 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+      ObjectType thisObj = getObjectType();\n+      for (String prop : thisObj.getOwnPropertyNames()) {\n+        JSType propType = thisObj.getPropertyType(prop);\n+        if (!isPropertyTypeDeclared(prop)) {\n+          defineInferredProperty(prop, propType, null);\n+        }\n+      }\n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}