{
    "patch": "public void addValue(double value) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        sumLogImpl.increment(value);\n        secondMoment.increment(value);\n        // If mean, variance or geomean have been overridden,\n        // and can handle NaN values, then increment them\n        if (meanImpl instanceof UnivariateStatistic && !Double.isNaN(value)) {\n            meanImpl.increment(value);\n        }\n        if (varianceImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n            varianceImpl.increment(value);\n        }\n        if (geoMeanImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n            geoMeanImpl.increment(value);\n        }\n        n++;\n        // Check if the meanImpl is overridden by another class and if so, calculate mean correctly\n        if (!(meanImpl instanceof Mean) && meanImpl instanceof UnivariateStatistic) {\n            double currentMean = meanImpl.getResult();\n            double newMean = currentMean + (value - currentMean)/n;\n            meanImpl.increment((newMean - currentMean) * (n/(n+1.0)));\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..dd8058b63 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,7 +146,7 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n@@ -154,17 +154,23 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         sumLogImpl.increment(value);\n         secondMoment.increment(value);\n         // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+        // and can handle NaN values, then increment them\n+        if (meanImpl instanceof UnivariateStatistic && !Double.isNaN(value)) {\n             meanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+        if (varianceImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+        if (geoMeanImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n             geoMeanImpl.increment(value);\n         }\n         n++;\n+        // Check if the meanImpl is overridden by another class and if so, calculate mean correctly\n+        if (!(meanImpl instanceof Mean) && meanImpl instanceof UnivariateStatistic) {\n+            double currentMean = meanImpl.getResult();\n+            double newMean = currentMean + (value - currentMean)/n;\n+            meanImpl.increment((newMean - currentMean) * (n/(n+1.0)));\n+        }\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<4.0> but was:<3.6666666666666665>",
    "test_result": "FAIL"
}