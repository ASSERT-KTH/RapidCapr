{
    "patch": "public String fixCode(String code) {\n    code = code.replaceAll(\"([^A-Za-z_0-9\\\\]])in([^A-Za-z_0-9])\", \"$1\\\\$\\\\$in\\\\$\\\\$Object$2\"); // add prefix and postfix to 'in' operator\n    String[] lines = code.split(\"\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        String[] words = lines[i].split(\" \");\n        for (int j = 0; j < words.length; j++) {\n            words[j] = words[j].replaceAll(\"\\\\$\\\\$in\\\\$\\\\$Object\", \"in Object\"); // replace prefix and postfix with actual 'in' operator\n        }\n        lines[i] = String.join(\" \", words);\n    }\n    code = String.join(\"\\n\", lines);\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..fbd764d9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,19 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    code = code.replaceAll(\"([^A-Za-z_0-9\\\\]])in([^A-Za-z_0-9])\", \"$1\\\\$\\\\$in\\\\$\\\\$Object$2\"); // add prefix and postfix to 'in' operator\n+    String[] lines = code.split(\"\\n\");\n+    for (int i = 0; i < lines.length; i++) {\n+        String[] words = lines[i].split(\" \");\n+        for (int j = 0; j < words.length; j++) {\n+            words[j] = words[j].replaceAll(\"\\\\$\\\\$in\\\\$\\\\$Object\", \"in Object\"); // replace prefix and postfix with actual 'in' operator\n+        }\n+        lines[i] = String.join(\" \", words);\n+    }\n+    code = String.join(\"\\n\", lines);\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}