{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    AbstractInsnNode insn = cfgNode.getInstructions().getLast();\n    return (insn instanceof JumpInsnNode) || (insn instanceof LookupSwitchInsnNode) || (insn instanceof TableSwitchInsnNode);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..659a6cad 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,10 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    AbstractInsnNode insn = cfgNode.getInstructions().getLast();\n+    return (insn instanceof JumpInsnNode) || (insn instanceof LookupSwitchInsnNode) || (insn instanceof TableSwitchInsnNode);\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}