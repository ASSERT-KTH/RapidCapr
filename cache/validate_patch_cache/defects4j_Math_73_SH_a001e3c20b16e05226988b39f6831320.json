{
    "patch": "// check for non-bracketing intervals\nif (yMin * yMax >= 0) {\n    throw new IllegalArgumentException(\n            \"Function values at endpoints do not have different signs.\" +\n                    \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n                    \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..6b3ac95c1 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,13 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+// check for non-bracketing intervals\n+if (yMin * yMax >= 0) {\n+    throw new IllegalArgumentException(\n+            \"Function values at endpoints do not have different signs.\" +\n+                    \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+                    \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+}\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}