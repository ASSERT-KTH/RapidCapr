{
    "patch": "public static double getTypedPercent(String jsonString) throws JSONException {\n    JSONObject jsonObject = new JSONObject(jsonString);\n    double totalEntries = jsonObject.getDouble(\"totalEntries\");\n    double typedEntries = jsonObject.getDouble(\"typedEntries\");\n\n    if (totalEntries == 0.0) {\n        return 0.0;\n    } else {\n        double typedPercent = (typedEntries / totalEntries) * 100.0;\n        return typedPercent;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..479dc696 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonString) throws JSONException {\n+    JSONObject jsonObject = new JSONObject(jsonString);\n+    double totalEntries = jsonObject.getDouble(\"totalEntries\");\n+    double typedEntries = jsonObject.getDouble(\"typedEntries\");\n+\n+    if (totalEntries == 0.0) {\n+        return 0.0;\n+    } else {\n+        double typedPercent = (typedEntries / totalEntries) * 100.0;\n+        return typedPercent;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}