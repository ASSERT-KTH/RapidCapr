{
    "patch": "public Object execute(Object ...args) {\n    boolean flag = false;\n    List<Integer> list = (List<Integer>) args[0];\n    if (list.size() == 0) {\n        flag = true;\n    }\n    Integer[] arr = new Integer[list.size()];\n    arr = list.toArray(arr);\n    if (flag) {\n        return Collections.emptyList();\n   }\n    Arrays.sort(arr);\n    int sum = 0;\n    for (int i: arr) {\n        sum += i;\n    }\n    double mean = (double) sum / arr.length;\n    int median = 0;\n    if (arr.length % 2 == 0) {\n        median = (arr[arr.length / 2] + arr[(arr.length / 2) - 1]) / 2;\n    } else {\n        median = arr[arr.length / 2];\n    }\n    Map<String, Object> resultMap = new HashMap<>();\n    resultMap.put(\"Mean\", mean);\n    resultMap.put(\"Median\", median);\n    switch((String) args[1]) {\n        case \"MEAN\":\n            return resultMap.get(\"Mean\");\n        case \"MEDIAN\":\n            return resultMap.get(\"Median\");\n        default:\n            return \"\";\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}