{
    "patch": "private void readTypeVariables() {\n    if (typeVariable == null) {\n        return;\n    }\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n    Type[] actualTypeArguments = ((ParameterizedType) typeVariable).getActualTypeArguments();\n    if (actualTypeArguments != null) {\n        for (Type actualTypeArgument : actualTypeArguments) {\n            if (actualTypeArgument != null) {\n                registerTypeVariablesOn(actualTypeArgument);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..9e34b3c27 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,23 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    if (typeVariable == null) {\n+        return;\n+    }\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+    Type[] actualTypeArguments = ((ParameterizedType) typeVariable).getActualTypeArguments();\n+    if (actualTypeArguments != null) {\n+        for (Type actualTypeArgument : actualTypeArguments) {\n+            if (actualTypeArgument != null) {\n+                registerTypeVariablesOn(actualTypeArgument);\n+            }\n+        }\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.reflect.ParameterizedType",
    "test_result": "FAIL"
}