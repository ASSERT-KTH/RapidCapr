{
    "patch": "import java.util.Arrays;\nimport java.util.concurrent.ThreadLocalRandom;\n\npublic class MathUtil {\n\n    private static final int MAX_PRECOMPUTED_SIZE = 1000000;\n    private static final double[] distribution = new double[MAX_PRECOMPUTED_SIZE];\n\n    public static double[] generateDistribution(int n, double mean, double sd) {\n        if (n > MAX_PRECOMPUTED_SIZE) {\n            throw new IllegalArgumentException(\"n greater than max precomputed size\");\n        }\n        if (distribution[0] == 0) {\n            ThreadLocalRandom rand = ThreadLocalRandom.current();\n            for (int i = 0; i < MAX_PRECOMPUTED_SIZE; i++) {\n                double u = rand.nextDouble() - 0.5;\n                double v = rand.nextDouble() - 0.5;\n                distribution[i] = mean + sd * (u + v);\n            }\n        }\n\n        return Arrays.copyOf(distribution, n);\n\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}