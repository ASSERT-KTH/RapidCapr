{
    "patch": "public static int get_max_triples(int n) {\n    int[] A = new int[n];\n    for (int i = 1; i <= n; i++){\n        A[i - 1] = i * i - i + 1;\n    }\n    int result = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            int k = -(A[i] + A[j]) + 2 * A[n-1];\n            if (k >= j && k <= n-1 && A[i] + A[j] + A[k] % 3 == 0) {\n                result++;\n            }\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_MAX_TRIPLES.java b/src/main/java/humaneval/buggy/GET_MAX_TRIPLES.java\nindex e32d115..d317953 100644\n--- a/src/main/java/humaneval/buggy/GET_MAX_TRIPLES.java\n+++ b/src/main/java/humaneval/buggy/GET_MAX_TRIPLES.java\n@@ -13,19 +13,20 @@ Example :\n     The only valid triple is (1, 7, 13). */\n \n public class GET_MAX_TRIPLES {\n-    public static int get_max_triples(int n) {\n-        int[] A = new int[n];\n-        for (int i = 1; i <= n; i += 1)\n-            A[i - 1] = i * i - i + 1;\n-        \n-        int result = 0;\n-        for (int i = 0; i < n-2; i += 1) {\n-            for (int j = 0; j < n-1; j += 1) {\n-                for (int k = 0; k < n; k += 1) {\n-                    if ((A[i] + A[j] + A[k]) % 3 == 0) result += 1;\n-                }\n+public static int get_max_triples(int n) {\n+    int[] A = new int[n];\n+    for (int i = 1; i <= n; i++){\n+        A[i - 1] = i * i - i + 1;\n+    }\n+    int result = 0;\n+    for (int i = 0; i < n; i++) {\n+        for (int j = i + 1; j < n; j++) {\n+            int k = -(A[i] + A[j]) + 2 * A[n-1];\n+            if (k >= j && k <= n-1 && A[i] + A[j] + A[k] % 3 == 0) {\n+                result++;\n             }\n         }\n-        return result;\n     }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_GET_MAX_TRIPLES.test_0:7 expected:<0> but was:<1>",
    "test_result": "FAIL"
}