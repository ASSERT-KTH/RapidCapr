{
    "patch": "        ArrayList<Integer> common = new ArrayList<Integer>();\n        \n        for (int i = 0; i < l1.length; i += 1){\n            for (int j = 0; j < l2.length; j += 1){\n                if (l1[i] == l2[j])\n                    common.add(l1[i]);\n            }\n        }\n        \n        int[] resultArray = new int[common.size()];\n        for(int i = 0; i < common.size(); i++) {\n            resultArray[i] = common.get(i);\n        }\n        \n        Arrays.sort(resultArray);\n        return resultArray;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMMON.java b/src/main/java/humaneval/buggy/COMMON.java\nindex f818c29..781b96f 100644\n--- a/src/main/java/humaneval/buggy/COMMON.java\n+++ b/src/main/java/humaneval/buggy/COMMON.java\n@@ -12,6 +12,21 @@ public class COMMON {\n     public static int[] common(int[] l1, int[] l2) {\n         ArrayList<Integer> common = new ArrayList<Integer>();\n         \n+        for (int i = 0; i < l1.length; i += 1){\n+            for (int j = 0; j < l2.length; j += 1){\n+                if (l1[i] == l2[j])\n+                    common.add(l1[i]);\n+            }\n+        }\n+        \n+        int[] resultArray = new int[common.size()];\n+        for(int i = 0; i < common.size(); i++) {\n+            resultArray[i] = common.get(i);\n+        }\n+        \n+        Arrays.sort(resultArray);\n+        return resultArray;\n+        \n         for (int i = 0; i < l1.length; i += 1){\n             for (int j = 0; j < l2.length; j += 1){\n                 if (l1[i] == l2[j])",
    "result_reason": " /tmp/humaneval-COMMON/src/main/java/humaneval/buggy/COMMON.java:[30,9] unreachable statement",
    "test_result": "ERROR"
}