{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockSettings resetSettings = Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS);\nT newMock = Mockito.mock(mock.getClass(), resetSettings);\nMockHandlerInterface<T> newMockHandler = getMockHandler(newMock);\nMockito.reset(mock);\n((Factory) mock).setCallbacks(((Factory) newMock).getCallbacks());\noldMockHandler.copyStateTo(newMockHandler);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..1825b0f7d 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,16 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockSettings resetSettings = Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS);\n+T newMock = Mockito.mock(mock.getClass(), resetSettings);\n+MockHandlerInterface<T> newMockHandler = getMockHandler(newMock);\n+Mockito.reset(mock);\n+((Factory) mock).setCallbacks(((Factory) newMock).getCallbacks());\n+oldMockHandler.copyStateTo(newMockHandler);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}