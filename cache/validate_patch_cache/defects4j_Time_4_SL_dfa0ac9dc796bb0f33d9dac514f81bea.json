{
    "patch": "Chronology currentChronology = iChronology == null ? ISOChronology.getInstanceUTC() : iChronology;\nPackedLocalDate originalDate = getLocalDate();\nChronology newChronology = currentChronology.withUTC();\nPackedLocalDate newDate = originalDate.withChronology(newChronology);\nPartial newPartial = new Partial(newChronology, newTypes == null || newTypes.length == 0 ? iTypes : newTypes, newValues);\nint[] newFields = newPartial.getPackedFields();\nfor (int i = 0; i < newFields.length; i++) {\n   if (newFields[i] != UNSET) {\n     newDate = newPartial.getFieldType(i).getField(newChronology).set(this, i, newDate, newFields[i]);\n     newPartial = new Partial(newDate, newPartial.getChronology());\n   }\n}\nreturn newPartial;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..a6381c43 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,19 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+Chronology currentChronology = iChronology == null ? ISOChronology.getInstanceUTC() : iChronology;\n+PackedLocalDate originalDate = getLocalDate();\n+Chronology newChronology = currentChronology.withUTC();\n+PackedLocalDate newDate = originalDate.withChronology(newChronology);\n+Partial newPartial = new Partial(newChronology, newTypes == null || newTypes.length == 0 ? iTypes : newTypes, newValues);\n+int[] newFields = newPartial.getPackedFields();\n+for (int i = 0; i < newFields.length; i++) {\n+   if (newFields[i] != UNSET) {\n+     newDate = newPartial.getFieldType(i).getField(newChronology).set(this, i, newDate, newFields[i]);\n+     newPartial = new Partial(newDate, newPartial.getChronology());\n+   }\n+}\n+return newPartial;\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}