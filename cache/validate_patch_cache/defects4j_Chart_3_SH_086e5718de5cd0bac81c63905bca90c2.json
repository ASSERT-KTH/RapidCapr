{
    "patch": "        copy.data = new ArrayList<>();\n        for (int index = 0; index < data.size(); index++) {\n            TimeSeriesDataItem item = data.get(index);\n            if (index >= start && index <= end && item != null) {\n                try {\n                    copy.add((TimeSeriesDataItem) item.clone());\n                } catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        copy.minY = Double.POSITIVE_INFINITY;\n        copy.maxY = Double.NEGATIVE_INFINITY;\n        for (int index = 0; index < copy.getItemCount(); index++) {\n            TimeSeriesDataItem item = copy.getDataItem(index);\n            double value = item.getValue().doubleValue();\n            if (Double.isNaN(value)) {\n                continue;\n            }\n            if (value < copy.minY) {\n                copy.minY = value;\n            }\n            if (value > copy.maxY) {\n                copy.maxY = value;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..82944ed 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,30 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new ArrayList<>();\n+        for (int index = 0; index < data.size(); index++) {\n+            TimeSeriesDataItem item = data.get(index);\n+            if (index >= start && index <= end && item != null) {\n+                try {\n+                    copy.add((TimeSeriesDataItem) item.clone());\n+                } catch (SeriesException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+        copy.minY = Double.POSITIVE_INFINITY;\n+        copy.maxY = Double.NEGATIVE_INFINITY;\n+        for (int index = 0; index < copy.getItemCount(); index++) {\n+            TimeSeriesDataItem item = copy.getDataItem(index);\n+            double value = item.getValue().doubleValue();\n+            if (Double.isNaN(value)) {\n+                continue;\n+            }\n+            if (value < copy.minY) {\n+                copy.minY = value;\n+            }\n+            if (value > copy.maxY) {\n+                copy.maxY = value;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}