{
    "patch": "Node grandparent = parent.getParent();\nif (grandparent != null) {\n  if ((grandparent.isExprResult()\n       || (grandparent.isVar()\n           && grandparent.getParent() != null\n           && grandparent.getParent().isScript()))) {\n    return false;\n  }\n  if (grandparent.isCall()) {\n    Node callTarget = grandparent.getFirstChild();\n    if (callTarget.isGetProp() && (callTarget.getLastChild().getString().equals(\"bind\")\n        || callTarget.getLastChild().getString().equals(\"apply\")\n        || callTarget.getLastChild().getString().equals(\"call\"))) {\n      return false;\n    }\n    if (callTarget.isName() && (callTarget.getString().equals(\"bind\")\n        || callTarget.getString().equals(\"apply\")\n        || callTarget.getString().equals(\"call\"))) {\n      return false;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..dd651e9c 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,28 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+Node grandparent = parent.getParent();\n+if (grandparent != null) {\n+  if ((grandparent.isExprResult()\n+       || (grandparent.isVar()\n+           && grandparent.getParent() != null\n+           && grandparent.getParent().isScript()))) {\n+    return false;\n+  }\n+  if (grandparent.isCall()) {\n+    Node callTarget = grandparent.getFirstChild();\n+    if (callTarget.isGetProp() && (callTarget.getLastChild().getString().equals(\"bind\")\n+        || callTarget.getLastChild().getString().equals(\"apply\")\n+        || callTarget.getLastChild().getString().equals(\"call\"))) {\n+      return false;\n+    }\n+    if (callTarget.isName() && (callTarget.getString().equals(\"bind\")\n+        || callTarget.getString().equals(\"apply\")\n+        || callTarget.getString().equals(\"call\"))) {\n+      return false;\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}