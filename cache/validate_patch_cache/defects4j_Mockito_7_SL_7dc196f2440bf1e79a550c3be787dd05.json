{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument instanceof TypeVariable) {\n    TypeVariable<?> actualTypeVariable = (TypeVariable<?>) actualTypeArgument;\n    registerTypeVariablesOn(actualTypeVariable.getBounds()[0]);\n} else if (actualTypeArgument instanceof ParameterizedType) {\n    ParameterizedType parameterizedType = (ParameterizedType) actualTypeArgument;\n    for (Type actualType : parameterizedType.getActualTypeArguments()) {\n        registerTypeVariablesOn(actualType);\n    }\n} else if (actualTypeArgument != null) {\n    registerTypeVariablesOn(actualTypeArgument);\n} else {\n    Type[] bounds = typeVariable.getBounds();\n    if (bounds.length == 1) {\n        Type boundType = bounds[0];\n        if (!(boundType instanceof TypeVariable)) {\n            registerTypeVariablesOn(boundType);\n        }\n    } else {\n        throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..6a4f05e9f 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,33 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument instanceof TypeVariable) {\n+    TypeVariable<?> actualTypeVariable = (TypeVariable<?>) actualTypeArgument;\n+    registerTypeVariablesOn(actualTypeVariable.getBounds()[0]);\n+} else if (actualTypeArgument instanceof ParameterizedType) {\n+    ParameterizedType parameterizedType = (ParameterizedType) actualTypeArgument;\n+    for (Type actualType : parameterizedType.getActualTypeArguments()) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+} else if (actualTypeArgument != null) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+} else {\n+    Type[] bounds = typeVariable.getBounds();\n+    if (bounds.length == 1) {\n+        Type boundType = bounds[0];\n+        if (!(boundType instanceof TypeVariable)) {\n+            registerTypeVariablesOn(boundType);\n+        }\n+    } else {\n+        throw new RuntimeException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}