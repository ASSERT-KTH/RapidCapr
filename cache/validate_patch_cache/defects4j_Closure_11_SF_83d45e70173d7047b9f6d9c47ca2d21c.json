{
    "patch": "public void testGetprop4() {\n    System.setProperty(\"foo\", \"bar\");\n    System.setProperty(\"baz\", \"qux\");\n\n    try {\n        String[] args = {\"-Dfoo=qux\", \"-Dbaz=bar\"};\n        PropertyManager.main(args);\n    } catch (Exception e) {\n        fail(\"unexpected exception: \" + e);\n    }\n\n    String[] warnings = myHandler.getWarnings();\n    assertNotNull(\"no warnings\", warnings);\n    assertTrue(\"expected a warning\", warnings.length > 0);\n    assertTrue(\"wrong warning: \" + warnings[0], warnings[0].contains(\"foo=qux\"));\n    assertTrue(\"wrong warning: \" + warnings[0], warnings[0].contains(\"baz=bar\"));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..5645cdd8 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() {\n+    System.setProperty(\"foo\", \"bar\");\n+    System.setProperty(\"baz\", \"qux\");\n+\n+    try {\n+        String[] args = {\"-Dfoo=qux\", \"-Dbaz=bar\"};\n+        PropertyManager.main(args);\n+    } catch (Exception e) {\n+        fail(\"unexpected exception: \" + e);\n+    }\n+\n+    String[] warnings = myHandler.getWarnings();\n+    assertNotNull(\"no warnings\", warnings);\n+    assertTrue(\"expected a warning\", warnings.length > 0);\n+    assertTrue(\"wrong warning: \" + warnings[0], warnings[0].contains(\"foo=qux\"));\n+    assertTrue(\"wrong warning: \" + warnings[0], warnings[0].contains(\"baz=bar\"));\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}