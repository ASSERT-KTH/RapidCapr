{
    "patch": "public static double getTypedPercent(String js) {\n    int count = 0;\n    int total = 0;\n    String[] elements = js.split(\",\");\n    for (String element : elements) {\n        total++;\n        if (element.trim().endsWith(\"%\")) {\n            count++;\n        }\n    }\n    if (total == 0) {\n        return 100.0;\n    }\n    return count * 100.0 / total;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..b11207a1 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int count = 0;\n+    int total = 0;\n+    String[] elements = js.split(\",\");\n+    for (String element : elements) {\n+        total++;\n+        if (element.trim().endsWith(\"%\")) {\n+            count++;\n+        }\n+    }\n+    if (total == 0) {\n+        return 100.0;\n+    }\n+    return count * 100.0 / total;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}