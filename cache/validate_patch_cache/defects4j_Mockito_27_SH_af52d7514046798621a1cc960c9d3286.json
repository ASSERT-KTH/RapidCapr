{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) Mockito.withSettings().defaultAnswer(RETURNS_DEFAULTS));\nFactory factory = (Factory) mock;\nCallback[] callbacks = factory.getCallbacks();\nif (callbacks != null) {\n    for (int i = 0; i < callbacks.length; i++) {\n        if (callbacks[i] instanceof MethodInterceptorFilter) {\n            callbacks[i] = newFilter;\n            factory.setCallbacks(callbacks);\n            return;\n        }\n    }\n}\nfactory.setCallback(0, newFilter);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..a8715ca13 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,24 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) Mockito.withSettings().defaultAnswer(RETURNS_DEFAULTS));\n+Factory factory = (Factory) mock;\n+Callback[] callbacks = factory.getCallbacks();\n+if (callbacks != null) {\n+    for (int i = 0; i < callbacks.length; i++) {\n+        if (callbacks[i] instanceof MethodInterceptorFilter) {\n+            callbacks[i] = newFilter;\n+            factory.setCallbacks(callbacks);\n+            return;\n+        }\n+    }\n+}\n+factory.setCallback(0, newFilter);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}