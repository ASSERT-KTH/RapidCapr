{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double integration_tolerance = 1e-10;\n    double b = x + 1 - a;\n    double c = 1 / 1.0e-30;\n    double d = 1 / b;\n    double h = d;\n    double an;\n    for (int i = 1; i <= 100; i++) {\n        an = -(i - a) * i;\n        b += 2.0;\n        d = an * d + b;\n        if (Math.abs(d) < 1.0e-30) {\n            d = 1.0e-30;\n        }\n        c = b + an / c;\n        if (Math.abs(c) < 1.0e-30) {\n            c = 1.0e-30;\n        }\n        d = 1 / d;\n        double del = d * c;\n        h = h * del;\n        if (Math.abs(del - 1.0) < integration_tolerance) {\n            break;\n        }\n    }\n    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * h;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..757885c7f 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,33 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double integration_tolerance = 1e-10;\n+    double b = x + 1 - a;\n+    double c = 1 / 1.0e-30;\n+    double d = 1 / b;\n+    double h = d;\n+    double an;\n+    for (int i = 1; i <= 100; i++) {\n+        an = -(i - a) * i;\n+        b += 2.0;\n+        d = an * d + b;\n+        if (Math.abs(d) < 1.0e-30) {\n+            d = 1.0e-30;\n+        }\n+        c = b + an / c;\n+        if (Math.abs(c) < 1.0e-30) {\n+            c = 1.0e-30;\n+        }\n+        d = 1 / d;\n+        double del = d * c;\n+        h = h * del;\n+        if (Math.abs(del - 1.0) < integration_tolerance) {\n+            break;\n+        }\n+    }\n+    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * h;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}