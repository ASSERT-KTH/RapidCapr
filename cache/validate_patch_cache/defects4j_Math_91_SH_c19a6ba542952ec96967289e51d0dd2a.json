{
    "patch": "    public int compareTo(Fraction object) {\n        if (this.equals(object)) {\n            return 0;\n        } else {\n            int nOd = this.numerator * object.denominator;\n            int dOn = this.denominator * object.numerator;\n            return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..ab744973d 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,15 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+    public int compareTo(Fraction object) {\n+        if (this.equals(object)) {\n+            return 0;\n+        } else {\n+            int nOd = this.numerator * object.denominator;\n+            int dOn = this.denominator * object.numerator;\n+            return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n+        }\n+    }\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}