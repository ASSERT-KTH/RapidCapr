{
    "patch": "            } catch (IllegalFieldValueException e) {\n                if (resetFields) {\n                    // reset, for retry parsing without the field\n                    int discard = -1;\n                    for (int j = 0; j < count; j++) {\n                        if (savedFields[j].iField == e.getField()) {\n                            discard = j;\n                            break;\n                        }\n                    }\n                    if (discard >= 0) {\n                        System.arraycopy(savedFields, discard + 1, savedFields, discard, count - discard - 1);\n                        count--;\n                    }\n                } else {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n                    }\n                    throw e;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..578f8bd3 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException e) {\n+                if (resetFields) {\n+                    // reset, for retry parsing without the field\n+                    int discard = -1;\n+                    for (int j = 0; j < count; j++) {\n+                        if (savedFields[j].iField == e.getField()) {\n+                            discard = j;\n+                            break;\n+                        }\n+                    }\n+                    if (discard >= 0) {\n+                        System.arraycopy(savedFields, discard + 1, savedFields, discard, count - discard - 1);\n+                        count--;\n+                    }\n+                } else {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n+                    }\n+                    throw e;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}