{
    "patch": "if (val == null) {\n    return null;\n}\nif (val.length() == 0) {\n    throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n}\nif (val.startsWith(\"-\")) {\n    if (val.length() == 1 || val.charAt(1) == '0') {\n        throw new NumberFormatException(val + \" is not a valid number.\");\n    }\n    return createInteger(val);\n}\nif (val.length() == 1 || val.startsWith(\"0\") || val.startsWith(\"+0\")) {\n    return createInteger(val);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..da3581c7 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,21 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val == null) {\n+    return null;\n+}\n+if (val.length() == 0) {\n+    throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n+}\n+if (val.startsWith(\"-\")) {\n+    if (val.length() == 1 || val.charAt(1) == '0') {\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n+    }\n+    return createInteger(val);\n+}\n+if (val.length() == 1 || val.startsWith(\"0\") || val.startsWith(\"+0\")) {\n+    return createInteger(val);\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "java.lang.NumberFormatException: For input string: \"-1234.5\"",
    "test_result": "FAIL"
}