{
    "patch": "        // subtract the original offset and add the new one, thus 'resolving' the gap\n        if (prevOffset != newOffset) {\n            millis -= prevOffset;\n            millis += newOffset;\n            if (iZone != null) {\n                int currentOffset = iZone.getOffset(millis);\n                if (currentOffset != newOffset) {\n                    String message = \"Illegal instant due to time zone offset transition (\" + iZone.getID() + \")\";\n                    if (text != null) {\n                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n                    }\n                    throw new IllegalArgumentException(message);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..6cd72412 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        // subtract the original offset and add the new one, thus 'resolving' the gap\n+        if (prevOffset != newOffset) {\n+            millis -= prevOffset;\n+            millis += newOffset;\n+            if (iZone != null) {\n+                int currentOffset = iZone.getOffset(millis);\n+                if (currentOffset != newOffset) {\n+                    String message = \"Illegal instant due to time zone offset transition (\" + iZone.getID() + \")\";\n+                    if (text != null) {\n+                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n+                    }\n+                    throw new IllegalArgumentException(message);\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}