{
    "patch": "public static int car_race_collision(int n) {\n    if (n == 0) {\n        return 0;\n    }\n    int count = 0;\n    Random rand = new Random();\n    for (int i = 0; i < n; i++) {\n        int car1 = rand.nextInt(100) + 1;\n        int car2 = rand.nextInt(100) + 1;\n        if (car1 % 2 == 0 && car2 % 2 != 0 || car1 % 2 != 0 && car2 % 2 == 0) {\n            count++;\n        }\n    }\n    return count;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CAR_RACE_COLLISION.java b/src/main/java/humaneval/buggy/CAR_RACE_COLLISION.java\nindex 4ded3f1..157da5c 100644\n--- a/src/main/java/humaneval/buggy/CAR_RACE_COLLISION.java\n+++ b/src/main/java/humaneval/buggy/CAR_RACE_COLLISION.java\n@@ -12,6 +12,20 @@ This function outputs the number of such collisions. */\n \n public class CAR_RACE_COLLISION {\n     public static int car_race_collision(int n) {\n-        return n;\n+public static int car_race_collision(int n) {\n+    if (n == 0) {\n+        return 0;\n+    }\n+    int count = 0;\n+    Random rand = new Random();\n+    for (int i = 0; i < n; i++) {\n+        int car1 = rand.nextInt(100) + 1;\n+        int car2 = rand.nextInt(100) + 1;\n+        if (car1 % 2 == 0 && car2 % 2 != 0 || car1 % 2 != 0 && car2 % 2 == 0) {\n+            count++;\n+        }\n+    }\n+    return count;\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-CAR_RACE_COLLISION/src/main/java/humaneval/buggy/CAR_RACE_COLLISION.java:[15,1] illegal start of expression",
    "test_result": "ERROR"
}