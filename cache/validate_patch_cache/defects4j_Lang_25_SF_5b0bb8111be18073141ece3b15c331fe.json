{
    "patch": "public static String unEscape(String message) {\n    String result = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        char c = message.charAt(i);\n        switch (c) {\n            case '\\b':\n                result += \"\\\\b\";\n                break;\n            case '\\f':\n                result += \"\\\\f\";\n                break;\n            case '\\n':\n                result += \"\\\\n\";\n                break;\n            case '\\r':\n                result += \"\\\\r\";\n                break;\n            case '\\t':\n                result += \"\\\\t\";\n                break;\n            case '\\\"':\n                result += \"\\\\\\\"\";\n                break;\n            case '\\'':\n                result += \"\\\\\\'\";\n                break;\n            case '\\\\':\n                result += \"\\\\\\\\\";\n                break;\n            default:\n                if (c < ' ' || c > '~') {\n                    String octal = Integer.toOctalString(c);\n                    result += \"\\\\\" + octal;\n                } else {\n                    result += c;\n                }\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..07a7bd65 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,46 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unEscape(String message) {\n+    String result = \"\";\n+    for (int i = 0; i < message.length(); i++) {\n+        char c = message.charAt(i);\n+        switch (c) {\n+            case '\\b':\n+                result += \"\\\\b\";\n+                break;\n+            case '\\f':\n+                result += \"\\\\f\";\n+                break;\n+            case '\\n':\n+                result += \"\\\\n\";\n+                break;\n+            case '\\r':\n+                result += \"\\\\r\";\n+                break;\n+            case '\\t':\n+                result += \"\\\\t\";\n+                break;\n+            case '\\\"':\n+                result += \"\\\\\\\"\";\n+                break;\n+            case '\\'':\n+                result += \"\\\\\\'\";\n+                break;\n+            case '\\\\':\n+                result += \"\\\\\\\\\";\n+                break;\n+            default:\n+                if (c < ' ' || c > '~') {\n+                    String octal = Integer.toOctalString(c);\n+                    result += \"\\\\\" + octal;\n+                } else {\n+                    result += c;\n+                }\n+        }\n+    }\n+    return result;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}