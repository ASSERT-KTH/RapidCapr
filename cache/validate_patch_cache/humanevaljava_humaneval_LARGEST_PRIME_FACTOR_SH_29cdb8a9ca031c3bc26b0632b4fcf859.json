{
    "patch": "\n            if (n % j == 0){\n                largest = j;\n                n /= j;\n                j--;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java b/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\nindex 794cf2e..83390af 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\n@@ -20,8 +20,11 @@ public class LARGEST_PRIME_FACTOR {\n     public static int largest_prime_factor(int n) {\n         int largest = 1;\n         for (int j = 2; j < n; j += 1) {\n-            if (is_prime(j)){\n-                largest = n % j;\n+\n+            if (n % j == 0){\n+                largest = j;\n+                n /= j;\n+                j--;\n             }\n         }\n         return largest;",
    "result_reason": "   TEST_LARGEST_PRIME_FACTOR.test_0:7 expected:<3> but was:<5>",
    "test_result": "FAIL"
}