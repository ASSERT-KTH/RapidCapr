{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n\n    String[] tokens = str.split(\"_\");\n\n    if (tokens.length == 1) {\n        validateLanguageCode(tokens[0]);\n        return new Locale(tokens[0]);\n    } else if (tokens.length == 2) {\n        validateLanguageCode(tokens[0]);\n        validateCountryCode(tokens[1]);\n        return new Locale(tokens[0], tokens[1]);\n    } else if (tokens.length == 3) {\n        validateLanguageCode(tokens[0]);\n        validateCountryCode(tokens[1]);\n        validateVariant(tokens[2]);\n        return new Locale(tokens[0], tokens[1], tokens[2]);\n    }\n\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nprivate static void validateLanguageCode(String code) {\n    if (!code.matches(\"^[a-z]{2,3}$\")) {\n        throw new IllegalArgumentException(\"Invalid language code: \" + code);\n    }\n}\n\nprivate static void validateCountryCode(String code) {\n    if (!code.matches(\"^[A-Z]{2}$\")) {\n        throw new IllegalArgumentException(\"Invalid country code: \" + code);\n    }\n}\n\nprivate static void validateVariant(String variant) {\n    if (!variant.matches(\"^[0-9A-Za-z]+$\")) {\n        throw new IllegalArgumentException(\"Invalid variant: \" + variant);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..a3ddb41e 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,41 +91,48 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n-        }\n+public static Locale toLocale(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+\n+    String[] tokens = str.split(\"_\");\n+\n+    if (tokens.length == 1) {\n+        validateLanguageCode(tokens[0]);\n+        return new Locale(tokens[0]);\n+    } else if (tokens.length == 2) {\n+        validateLanguageCode(tokens[0]);\n+        validateCountryCode(tokens[1]);\n+        return new Locale(tokens[0], tokens[1]);\n+    } else if (tokens.length == 3) {\n+        validateLanguageCode(tokens[0]);\n+        validateCountryCode(tokens[1]);\n+        validateVariant(tokens[2]);\n+        return new Locale(tokens[0], tokens[1], tokens[2]);\n     }\n \n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+private static void validateLanguageCode(String code) {\n+    if (!code.matches(\"^[a-z]{2,3}$\")) {\n+        throw new IllegalArgumentException(\"Invalid language code: \" + code);\n+    }\n+}\n+\n+private static void validateCountryCode(String code) {\n+    if (!code.matches(\"^[A-Z]{2}$\")) {\n+        throw new IllegalArgumentException(\"Invalid country code: \" + code);\n+    }\n+}\n+\n+private static void validateVariant(String variant) {\n+    if (!variant.matches(\"^[0-9A-Za-z]+$\")) {\n+        throw new IllegalArgumentException(\"Invalid variant: \" + variant);\n+    }\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid country code:",
    "test_result": "FAIL"
}