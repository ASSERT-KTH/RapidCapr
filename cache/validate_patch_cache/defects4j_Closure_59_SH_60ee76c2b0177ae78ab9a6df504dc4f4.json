{
    "patch": "    if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n      DiagnosticGroup globalThis = DiagnosticGroups.GLOBAL_THIS;\n      options.setWarningLevel(\n          globalThis, options.checkGlobalThisLevel);\n      if (options.disables(globalThis)) {\n        // disabling lint checks with `checkGlobalThis = false`\n        // should also disable other related checks\n        options.setWarningLevel(\n            DiagnosticGroups.THIS_EXPRESSION_GLOBAL,\n            CheckLevel.OFF);\n        options.setWarningLevel(\n            DiagnosticGroups.UNDEFINED_NAMES,\n            CheckLevel.OFF);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..7998d693 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,20 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+    if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n+      DiagnosticGroup globalThis = DiagnosticGroups.GLOBAL_THIS;\n+      options.setWarningLevel(\n+          globalThis, options.checkGlobalThisLevel);\n+      if (options.disables(globalThis)) {\n+        // disabling lint checks with `checkGlobalThis = false`\n+        // should also disable other related checks\n+        options.setWarningLevel(\n+            DiagnosticGroups.THIS_EXPRESSION_GLOBAL,\n+            CheckLevel.OFF);\n+        options.setWarningLevel(\n+            DiagnosticGroups.UNDEFINED_NAMES,\n+            CheckLevel.OFF);\n+      }\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}