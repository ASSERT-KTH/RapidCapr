{
    "patch": "public static String escape(String s) {\n    StringBuilder sb = new StringBuilder(s.length());\n    for(int i=0; i<s.length(); i++)\n    {\n        char c = s.charAt(i);\n        switch(c)\n        {\n        case '<': sb.append(\"&lt;\"); break;\n        case '>': sb.append(\"&gt;\"); break;\n        case '&': sb.append(\"&amp;\"); break;\n        case '\"': sb.append(\"&quot;\"); break;\n        case '\\'': sb.append(\"&apos;\"); break;\n        default: sb.append(c); break;\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..ce0797fc 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,23 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String s) {\n+    StringBuilder sb = new StringBuilder(s.length());\n+    for(int i=0; i<s.length(); i++)\n+    {\n+        char c = s.charAt(i);\n+        switch(c)\n+        {\n+        case '<': sb.append(\"&lt;\"); break;\n+        case '>': sb.append(\"&gt;\"); break;\n+        case '&': sb.append(\"&amp;\"); break;\n+        case '\"': sb.append(\"&quot;\"); break;\n+        case '\\'': sb.append(\"&apos;\"); break;\n+        default: sb.append(c); break;\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}