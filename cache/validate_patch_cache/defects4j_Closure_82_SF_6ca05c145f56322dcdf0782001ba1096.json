{
    "patch": "public final boolean isEmptyType() {\n    boolean res = isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isUnknownType() || isNullType() || isUnionType();\n    if (!res) {\n        Object strippedType = typeOfClass().strip();\n        if (strippedType instanceof Type) {\n            res = ((Type) strippedType).isEmptyType();\n        }\n    }\n    return res;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..f8580271 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,16 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    boolean res = isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isUnknownType() || isNullType() || isUnionType();\n+    if (!res) {\n+        Object strippedType = typeOfClass().strip();\n+        if (strippedType instanceof Type) {\n+            res = ((Type) strippedType).isEmptyType();\n+        }\n+    }\n+    return res;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}