{
    "patch": "if (strLen >= width) {\n    str.getChars(0, width, buffer, size);\n} else {\n    int padLen = width - strLen;\n    if (padLen > 0) {\n        char[] paddedStr = new char[width];\n        System.arraycopy(str.toCharArray(), 0, paddedStr, 0, strLen);\n        for (int i = strLen; i < width; i++) {\n            paddedStr[i] = padChar;\n        }\n        System.arraycopy(paddedStr, 0, buffer, size, width);\n    } else {\n        str.getChars(0, width, buffer, size);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java\nindex 886d424e..25615402 100644\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n@@ -881,7 +881,21 @@ public class StrBuilder implements Cloneable {\n             String str = (obj == null ? getNullText() : obj.toString());\n             int strLen = str.length();\n             if (strLen >= width) {\n-                str.getChars(0, strLen, buffer, size);\n+if (strLen >= width) {\n+    str.getChars(0, width, buffer, size);\n+} else {\n+    int padLen = width - strLen;\n+    if (padLen > 0) {\n+        char[] paddedStr = new char[width];\n+        System.arraycopy(str.toCharArray(), 0, paddedStr, 0, strLen);\n+        for (int i = strLen; i < width; i++) {\n+            paddedStr[i] = padChar;\n+        }\n+        System.arraycopy(paddedStr, 0, buffer, size, width);\n+    } else {\n+        str.getChars(0, width, buffer, size);\n+    }\n+}\n             } else {\n                 int padLen = width - strLen;\n                 str.getChars(0, strLen, buffer, size);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}