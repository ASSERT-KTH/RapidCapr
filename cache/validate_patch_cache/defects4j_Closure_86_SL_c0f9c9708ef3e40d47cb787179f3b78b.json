{
    "patch": "        // This also applies to assignments to properties.\n        if ((isAssignmentOp(value) || value.getType() == Token.GETELEM ||\n             value.getType() == Token.GETPROP) &&\n            (isSimpleAssignmentOp(value) || isCompoundAssignmentOp(value)) ||\n            isSimpleOperator(value) || isImmutableValue(value)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex dd78f900..265aefb2 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -2462,7 +2462,11 @@ public final class NodeUtil {\n         // TODO(nicksantos): This needs to be changed so that it\n         // returns true iff we're sure the value was never aliased from inside\n         // the constructor (similar to callHasLocalResult)\n-        return true;\n+        // This also applies to assignments to properties.\n+        if ((isAssignmentOp(value) || value.getType() == Token.GETELEM ||\n+             value.getType() == Token.GETPROP) &&\n+            (isSimpleAssignmentOp(value) || isCompoundAssignmentOp(value)) ||\n+            isSimpleOperator(value) || isImmutableValue(value)) {\n       case Token.FUNCTION:\n       case Token.REGEXP:\n       case Token.ARRAYLIT:",
    "result_reason": "error: orphaned case",
    "test_result": "ERROR"
}