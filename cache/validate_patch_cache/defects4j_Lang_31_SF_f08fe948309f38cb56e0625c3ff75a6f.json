{
    "patch": "public class StringUtils {\n    public static boolean containsAny(final char[] str, final char[] searchChars) {\n        if (str == null || str.length == 0 || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n        for (int i = 0; i < str.length; i++) {\n            final char ch = str[i];\n            for (int j = 0; j < searchChars.length; j++) {\n                if (searchChars[j] == ch) {\n                    if (Character.isHighSurrogate(ch)) {\n                        if (j == searchChars.length - 1) {\n                            return false;\n                        }\n                        if (i + 1 < str.length && Character.isLowSurrogate(str[i + 1])) {\n                            if (searchChars[j + 1] == str[i + 1]) {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..4a78b4c0 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+    public static boolean containsAny(final char[] str, final char[] searchChars) {\n+        if (str == null || str.length == 0 || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+        for (int i = 0; i < str.length; i++) {\n+            final char ch = str[i];\n+            for (int j = 0; j < searchChars.length; j++) {\n+                if (searchChars[j] == ch) {\n+                    if (Character.isHighSurrogate(ch)) {\n+                        if (j == searchChars.length - 1) {\n+                            return false;\n+                        }\n+                        if (i + 1 < str.length && Character.isLowSurrogate(str[i + 1])) {\n+                            if (searchChars[j + 1] == str[i + 1]) {\n+                                return true;\n+                            }\n+                        }\n+                    } else {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}