{
    "patch": "if (value.isFunction()) {\n    Node callNode = reference.getParent();\n    if (callNode != null && callNode.isCall()) {\n        CodingConvention convention = compiler.getCodingConvention();\n        // Bug 2388531: Don't inline subclass definitions into class defining\n        // calls as this confused class removing logic.\n        SubclassRelationship relationship =\n            convention.getClassesDefinedByCall(callNode);\n        if (relationship != null) {\n            return false;\n        } else if (callNode.getParent() != null && callNode.getParent().isExprResult()\n              && callNode.getParent().hasOneChild()\n              && callNode.getParent().getFirstChild().isAssign()) {\n            Node assignment = callNode.getParent().getFirstChild();\n            Node getter = assignment.getFirstChild();\n            if (getter.isGetProp()) {\n                value = getter;\n            }\n        } else if (value.getParent() != null && value.getParent().isAssign()\n              && value.getGrandparent() != null && value.getGrandparent().isExprResult()) {\n            Node assignment = value.getParent();\n            Node getter = assignment.getFirstChild();\n            if (getter.isGetProp()) {\n                value = getter;\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..9bb898f7 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,34 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction()) {\n+    Node callNode = reference.getParent();\n+    if (callNode != null && callNode.isCall()) {\n+        CodingConvention convention = compiler.getCodingConvention();\n+        // Bug 2388531: Don't inline subclass definitions into class defining\n+        // calls as this confused class removing logic.\n+        SubclassRelationship relationship =\n+            convention.getClassesDefinedByCall(callNode);\n+        if (relationship != null) {\n+            return false;\n+        } else if (callNode.getParent() != null && callNode.getParent().isExprResult()\n+              && callNode.getParent().hasOneChild()\n+              && callNode.getParent().getFirstChild().isAssign()) {\n+            Node assignment = callNode.getParent().getFirstChild();\n+            Node getter = assignment.getFirstChild();\n+            if (getter.isGetProp()) {\n+                value = getter;\n+            }\n+        } else if (value.getParent() != null && value.getParent().isAssign()\n+              && value.getGrandparent() != null && value.getGrandparent().isExprResult()) {\n+            Node assignment = value.getParent();\n+            Node getter = assignment.getFirstChild();\n+            if (getter.isGetProp()) {\n+                value = getter;\n+            }\n+        }\n+    }\n+}\n         }\n       }\n ",
    "result_reason": "error: variable callNode is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}