{
    "patch": "    // Collect the Map of args that should be removed and will be in order.\n    LinkedHashSet<Node> argsToRemove = new LinkedHashSet<>();\n    Node currNode = argList.getFirstChild();\n    for (int i = 0; currNode != null; ++i, currNode = currNode.getNext()) {\n      if ((currNode.isUnusedParameter() || currNode.getString().equals(\"undefined\"))\n          && canRemoveArg(i, modifyCallers, currNode)) {\n        argsToRemove.add(currNode);\n      }\n    }\n\n    for (Node arg : argsToRemove) {\n      argList.removeChild(arg);\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5327ac32 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,19 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Collect the Map of args that should be removed and will be in order.\n+    LinkedHashSet<Node> argsToRemove = new LinkedHashSet<>();\n+    Node currNode = argList.getFirstChild();\n+    for (int i = 0; currNode != null; ++i, currNode = currNode.getNext()) {\n+      if ((currNode.isUnusedParameter() || currNode.getString().equals(\"undefined\"))\n+          && canRemoveArg(i, modifyCallers, currNode)) {\n+        argsToRemove.add(currNode);\n+      }\n+    }\n+\n+    for (Node arg : argsToRemove) {\n+      argList.removeChild(arg);\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}