{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null) {\n        throw new IllegalStateException(\"Recorded bad position information\");\n    } else if (result.trim().isEmpty()) {\n        result = stream != null ? stream.getRemainingJSDocLine() : \"\";\n        if (result.isEmpty()) {\n            throw new IllegalStateException(\"Recorded bad position information\");\n        }\n    } else {\n        result = result.trim();\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..0eebe2ec 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,20 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    if (result == null) {\n+        throw new IllegalStateException(\"Recorded bad position information\");\n+    } else if (result.trim().isEmpty()) {\n+        result = stream != null ? stream.getRemainingJSDocLine() : \"\";\n+        if (result.isEmpty()) {\n+            throw new IllegalStateException(\"Recorded bad position information\");\n+        }\n+    } else {\n+        result = result.trim();\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}