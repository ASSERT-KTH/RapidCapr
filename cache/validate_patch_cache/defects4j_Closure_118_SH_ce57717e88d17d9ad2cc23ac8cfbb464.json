{
    "patch": "        // Maybe STRING, GET, SET\n        switch (child.getToken()) {\n          case STRING:\n            break;\n          case GETPROP:\n            // Only accept `get` properties if they are defined on `this`.\n            if (!n.isFunction()) {\n              return;\n            }\n            if (!\"this\".equals(child.getFirstChild().getQualifiedName())) {\n              return;\n            }\n            break;\n          case SETPROP:\n            // We cannot accept `set` properties here because they may look like\n            // object properties but do not behave like them.\n            return;\n          default:\n            // We don't support other types of children, so do nothing.\n            return;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..19e968a9 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,27 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        // Maybe STRING, GET, SET\n+        switch (child.getToken()) {\n+          case STRING:\n+            break;\n+          case GETPROP:\n+            // Only accept `get` properties if they are defined on `this`.\n+            if (!n.isFunction()) {\n+              return;\n+            }\n+            if (!\"this\".equals(child.getFirstChild().getQualifiedName())) {\n+              return;\n+            }\n+            break;\n+          case SETPROP:\n+            // We cannot accept `set` properties here because they may look like\n+            // object properties but do not behave like them.\n+            return;\n+          default:\n+            // We don't support other types of children, so do nothing.\n+            return;\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}