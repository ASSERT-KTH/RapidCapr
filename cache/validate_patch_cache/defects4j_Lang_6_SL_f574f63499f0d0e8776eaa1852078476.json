{
    "patch": "char c = input.charAt(pos);\nif (Character.isHighSurrogate(c) && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {\n    int consumed = translate(input, pos, out);\n    pos += consumed;\n} else if (consumed == 0 && c == '\\\\') {\n    if (pos + 2 <= len && input.charAt(pos + 1) == 'b') {\n        out.write(\"\\\\b\");\n        pos += 2;\n    } else {\n        char[] ca = Character.toChars(Character.codePointAt(input, pos));\n        out.write(ca);\n        pos += ca.length;\n    }\n} else {\n    pos += consumed;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..2bc9bfe3 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,22 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+char c = input.charAt(pos);\n+if (Character.isHighSurrogate(c) && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {\n+    int consumed = translate(input, pos, out);\n+    pos += consumed;\n+} else if (consumed == 0 && c == '\\\\') {\n+    if (pos + 2 <= len && input.charAt(pos + 1) == 'b') {\n+        out.write(\"\\\\b\");\n+        pos += 2;\n+    } else {\n+        char[] ca = Character.toChars(Character.codePointAt(input, pos));\n+        out.write(ca);\n+        pos += ca.length;\n+    }\n+} else {\n+    pos += consumed;\n+}\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}