{
    "patch": "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n    if (cal1 == null || cal2 == null) {\n        throw new IllegalArgumentException(\"The date must not be null\");\n    }\n\n    if (cal1.get(Calendar.HOUR_OF_DAY) != cal2.get(Calendar.HOUR_OF_DAY)) {\n        return false;\n    }\n    if (cal1.get(Calendar.MINUTE) != cal2.get(Calendar.MINUTE)) {\n        return false;\n    }\n    if (cal1.get(Calendar.SECOND) != cal2.get(Calendar.SECOND)) {\n        return false;\n    }\n    if (cal1.get(Calendar.MILLISECOND) != cal2.get(Calendar.MILLISECOND)) {\n        return false;\n    }\n    if (cal1.get(Calendar.ERA) != cal2.get(Calendar.ERA)) {\n        return false;\n    }\n    if (cal1.get(Calendar.YEAR) != cal2.get(Calendar.YEAR)) {\n        return false;\n    }\n    if (cal1.get(Calendar.DAY_OF_YEAR) != cal2.get(Calendar.DAY_OF_YEAR)) {\n        return false;\n    }\n    if (!cal1.getClass().equals(cal2.getClass())) {\n        return false;\n    }\n\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java\nindex 9a24c00f..cfe7f595 100644\n--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java\n@@ -255,19 +255,38 @@ public class DateUtils {\n      * @throws IllegalArgumentException if either date is <code>null</code>\n      * @since 2.1\n      */\n-    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n-        if (cal1 == null || cal2 == null) {\n-            throw new IllegalArgumentException(\"The date must not be null\");\n-        }\n-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&\n-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&\n-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&\n-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&\n-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&\n-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&\n-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&\n-                cal1.getClass() == cal2.getClass());\n+public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n+    if (cal1 == null || cal2 == null) {\n+        throw new IllegalArgumentException(\"The date must not be null\");\n+    }\n+\n+    if (cal1.get(Calendar.HOUR_OF_DAY) != cal2.get(Calendar.HOUR_OF_DAY)) {\n+        return false;\n+    }\n+    if (cal1.get(Calendar.MINUTE) != cal2.get(Calendar.MINUTE)) {\n+        return false;\n+    }\n+    if (cal1.get(Calendar.SECOND) != cal2.get(Calendar.SECOND)) {\n+        return false;\n     }\n+    if (cal1.get(Calendar.MILLISECOND) != cal2.get(Calendar.MILLISECOND)) {\n+        return false;\n+    }\n+    if (cal1.get(Calendar.ERA) != cal2.get(Calendar.ERA)) {\n+        return false;\n+    }\n+    if (cal1.get(Calendar.YEAR) != cal2.get(Calendar.YEAR)) {\n+        return false;\n+    }\n+    if (cal1.get(Calendar.DAY_OF_YEAR) != cal2.get(Calendar.DAY_OF_YEAR)) {\n+        return false;\n+    }\n+    if (!cal1.getClass().equals(cal2.getClass())) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}