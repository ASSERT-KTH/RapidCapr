{
    "patch": "    public static int largest_divisor(int n) {\n        if (n <= 0) {\n            throw new IllegalArgumentException(\"Input must be positive\");\n        }\n        int largest = 1;\n        for (int i = 2; i <= n / 2; i ++) {\n            if (n % i == 0) {\n                largest = i;\n                break;\n            }\n        }\n        return largest;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\nindex e93b282..fe56e2f 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n@@ -2,10 +2,16 @@ package humaneval.buggy;\n \n public class LARGEST_DIVISOR {\n     public static int largest_divisor(int n) {\n-        for (int i = n; i >= 0; i -= 1){\n-            if (n % i == 0)\n-                return i;\n+        if (n <= 0) {\n+            throw new IllegalArgumentException(\"Input must be positive\");\n         }\n-        return 1;\n+        int largest = 1;\n+        for (int i = 2; i <= n / 2; i ++) {\n+            if (n % i == 0) {\n+                largest = i;\n+                break;\n+            }\n+        }\n+        return largest;\n     }\n }",
    "result_reason": "   TEST_LARGEST_DIVISOR.test_2:23 expected:<2> but was:<5>",
    "test_result": "FAIL"
}