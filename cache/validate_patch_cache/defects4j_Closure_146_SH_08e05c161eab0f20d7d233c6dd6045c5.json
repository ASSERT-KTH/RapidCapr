{
    "patch": "        if (this.isNumber()) {\n          return new TypePair(this, JSType.NUM_FALSE);\n        } else if (this.isString()) {\n          return new TypePair(this, JSType.STRING_FALSE);\n        }\n        return new TypePair(this, JSType.NULL_OR_UNDEF);",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..82e4f312 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,12 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+        if (this.isNumber()) {\n+          return new TypePair(this, JSType.NUM_FALSE);\n+        } else if (this.isString()) {\n+          return new TypePair(this, JSType.STRING_FALSE);\n+        }\n+        return new TypePair(this, JSType.NULL_OR_UNDEF);\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}