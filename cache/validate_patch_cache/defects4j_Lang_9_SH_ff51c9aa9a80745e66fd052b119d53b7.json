{
    "patch": "        if(!patternMatcher.matches()){\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n        currentFormatField= patternMatcher.group(1);\n        Strategy currentStrategy= getStrategy(currentFormatField);\n        for(int i = 2; i <= patternMatcher.groupCount(); i++) {\n            String nextFormatField= patternMatcher.group(i);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..32ab6ce2 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,13 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        if(!patternMatcher.matches()){\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+        currentFormatField= patternMatcher.group(1);\n+        Strategy currentStrategy= getStrategy(currentFormatField);\n+        for(int i = 2; i <= patternMatcher.groupCount(); i++) {\n+            String nextFormatField= patternMatcher.group(i);\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}