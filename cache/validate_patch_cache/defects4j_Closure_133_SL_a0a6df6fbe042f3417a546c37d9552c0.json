{
    "patch": "private String getRemainingJSDocLine() {\n    String result = \"\";\n    try {\n        result = stream.getRemainingJSDocLine().trim();\n    } catch (TypeParseError e) {\n        warn(JSError.make(\n                JSError.TYPE_PARSE_ERROR, file.getName(), e.getLineNumber(),\n                e.getCharno(), e.getMessage()));\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..6aabc9c1 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,17 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = \"\";\n+    try {\n+        result = stream.getRemainingJSDocLine().trim();\n+    } catch (TypeParseError e) {\n+        warn(JSError.make(\n+                JSError.TYPE_PARSE_ERROR, file.getName(), e.getLineNumber(),\n+                e.getCharno(), e.getMessage()));\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}