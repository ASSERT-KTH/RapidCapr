{
    "patch": "public static List<Integer> filter_integers(List<Object> values) {\n    List<Integer> result = new ArrayList<Integer>();\n\n    for (Object value : values) {\n        if (value instanceof Integer) {\n            result.add((Integer) value);\n        } else if (value instanceof String) {\n            try {\n                Integer intValue = Integer.parseInt((String) value);\n                result.add(intValue);\n            } catch (NumberFormatException e) {\n                // Ignore non-integer strings\n            }\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FILTER_INTEGERS.java b/src/main/java/humaneval/buggy/FILTER_INTEGERS.java\nindex 6037fe4..1ee689b 100644\n--- a/src/main/java/humaneval/buggy/FILTER_INTEGERS.java\n+++ b/src/main/java/humaneval/buggy/FILTER_INTEGERS.java\n@@ -4,12 +4,22 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class FILTER_INTEGERS {\n-    public static List<Integer> filter_integers(List<Object> values) {\n-        List<Integer> result = new ArrayList<Integer>();\n+public static List<Integer> filter_integers(List<Object> values) {\n+    List<Integer> result = new ArrayList<Integer>();\n \n-        for (Object value : values){\n+    for (Object value : values) {\n+        if (value instanceof Integer) {\n             result.add((Integer) value);\n+        } else if (value instanceof String) {\n+            try {\n+                Integer intValue = Integer.parseInt((String) value);\n+                result.add(intValue);\n+            } catch (NumberFormatException e) {\n+                // Ignore non-integer strings\n+            }\n         }\n-        return result;\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}