{
    "patch": "    // Remove unreferenced parameters in the function declaration\n    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Remove unused parameters from the end of the parameter list\n      Node lastArg = null;\n      for (Node arg = argList.getFirstChild(); arg != null; ) {\n        Node next = arg.getNext();\n        Var var = fnScope.getVar(arg.getString());\n        if (!referenced.contains(var)) {\n          if (lastArg == null) {\n            argList.removeChild(arg);\n          } else {\n            argList.removeChild(lastArg.getNext());\n          }\n\n          compiler.reportCodeChange();\n        } else {\n          lastArg = arg;\n        }\n        arg = next;\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..3532ae54 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,39 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Remove unreferenced parameters in the function declaration\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Remove unused parameters from the end of the parameter list\n+      Node lastArg = null;\n+      for (Node arg = argList.getFirstChild(); arg != null; ) {\n+        Node next = arg.getNext();\n+        Var var = fnScope.getVar(arg.getString());\n+        if (!referenced.contains(var)) {\n+          if (lastArg == null) {\n+            argList.removeChild(arg);\n+          } else {\n+            argList.removeChild(lastArg.getNext());\n+          }\n+\n+          compiler.reportCodeChange();\n+        } else {\n+          lastArg = arg;\n+        }\n+        arg = next;\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}