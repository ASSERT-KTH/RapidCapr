{
    "patch": "char ch2 = str.charAt(2);\nif ((len > 2 && ch2 != '_') || len == 2) {\n    if (len != 5) {\n        for (int i = 3; i < len; i++) {\n            char ch = str.charAt(i);\n            if (!Character.isLetter(ch)) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n    }\n    if (len >= 5) {\n        char ch3 = str.charAt(3);\n        char ch4 = str.charAt(4);\n        if (ch3 != '_' || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 7) {\n            char ch5 = str.charAt(5);\n            char ch6 = str.charAt(6);\n            if (ch5 != '_' || !Character.isUpperCase(ch6)) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len > 7) {\n            for (int i = 5; i < len; i++) {\n                char ch = str.charAt(i);\n                if (!Character.isUpperCase(ch)) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n        }\n    }\n    return new Locale.Builder().setLanguage(str.substring(0, 2)).setRegion(len == 5 ? str.substring(3, 5) : \"\")\n            .setVariant(len > 5 ? str.substring(6) : \"\").build();\n}\nthrow new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..d9eb0659 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,41 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+char ch2 = str.charAt(2);\n+if ((len > 2 && ch2 != '_') || len == 2) {\n+    if (len != 5) {\n+        for (int i = 3; i < len; i++) {\n+            char ch = str.charAt(i);\n+            if (!Character.isLetter(ch)) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        }\n+    }\n+    if (len >= 5) {\n+        char ch3 = str.charAt(3);\n+        char ch4 = str.charAt(4);\n+        if (ch3 != '_' || !Character.isUpperCase(ch4)) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 7) {\n+            char ch5 = str.charAt(5);\n+            char ch6 = str.charAt(6);\n+            if (ch5 != '_' || !Character.isUpperCase(ch6)) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else if (len > 7) {\n+            for (int i = 5; i < len; i++) {\n+                char ch = str.charAt(i);\n+                if (!Character.isUpperCase(ch)) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+            }\n+        }\n+    }\n+    return new Locale.Builder().setLanguage(str.substring(0, 2)).setRegion(len == 5 ? str.substring(3, 5) : \"\")\n+            .setVariant(len > 5 ? str.substring(6) : \"\").build();\n+}\n+throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: variable ch3 is already defined in method toLocale(String)",
    "test_result": "ERROR"
}