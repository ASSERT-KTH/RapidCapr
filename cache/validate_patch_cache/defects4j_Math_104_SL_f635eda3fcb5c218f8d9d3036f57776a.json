{
    "patch": "import org.apache.commons.math3.util.CombinatoricsUtils;\nimport org.junit.Test;\nimport org.apache.commons.math3.util.TestUtils;\n\npublic class GammaTest {\n\n    @Test\n    public void testRegularizedGammaPositivePositive() {\n        double a = 5;\n        double x = 5;\n        double delta = 0;\n        double expected = 0.632120558828558;\n        double actualP = Gamma.regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);\n        TestUtils.assertEquals(expected, actualP, 1.0e-15);\n        double actualQ = Gamma.regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);\n        TestUtils.assertEquals(1 - expected, actualQ, 1.0e-15);\n    }\n\n    private static final double DEFAULT_EPSILON = 1.0e-9;\n\n    public static void main(String[] args) {\n        System.out.println(\"Factorials: \");\n        for (int i = 0; i <= 10; i++) {\n            System.out.println(i + \"! = \" + CombinatoricsUtils.factorial(i));\n        }\n        System.out.println();\n    }\n\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..bade3b581 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,7 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}