{
    "patch": "StringBuilder result = new StringBuilder(input.length());\nfor (int i = 0; i < input.length(); i++) {\n    char ch = input.charAt(i);\n    if (ch == '\\n') {\n        result.append(\"\\\\n\");\n    } else if (ch == '\\r') {\n        result.append(\"\\\\r\");\n    } else if (ch == '\\t') {\n        result.append(\"\\\\t\");\n    } else if (ch == '\\\\') {\n        result.append(\"\\\\\\\\\");\n    } else if (ch == '\"') {\n        result.append(\"\\\\\\\"\");\n    } else if (Character.isISOControl(ch) || ch > 0xff) {\n        result.append(\"\\\\u\").append(String.format(\"%04X\", (int) ch));\n    } else {\n        result.append(ch);\n    }\n}\nassertEquals(\"One or more errors detected\", expected, result.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}