{
    "patch": "public static Iterable<String> splitString(String inputString, char delimiter) {\n    List<String> result = new ArrayList<>();\n    StringBuilder temp = new StringBuilder();\n\n    for (int i = 0; i < inputString.length(); i++) {\n        char c = inputString.charAt(i);\n        if (c == delimiter) {\n            result.add(temp.toString());\n            temp = new StringBuilder();\n        } else {\n            temp.append(c);\n        }\n    }\n    result.add(temp.toString());\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..4ee10c7f6 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,23 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static Iterable<String> splitString(String inputString, char delimiter) {\n+    List<String> result = new ArrayList<>();\n+    StringBuilder temp = new StringBuilder();\n+\n+    for (int i = 0; i < inputString.length(); i++) {\n+        char c = inputString.charAt(i);\n+        if (c == delimiter) {\n+            result.add(temp.toString());\n+            temp = new StringBuilder();\n+        } else {\n+            temp.append(c);\n+        }\n+    }\n+    result.add(temp.toString());\n+\n+    return result;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}