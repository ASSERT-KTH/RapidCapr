{
    "patch": "public static double mean_absolute_deviation(List<Double> numbers) {\n    if (numbers == null || numbers.isEmpty()) {\n        throw new IllegalArgumentException(\"Input list cannot be null or empty\");\n    }\n    double sum = 0.0, mean = 0.0;\n    for (Double number : numbers) {\n        sum += number;\n    }\n    mean = sum / numbers.size();\n\n    double deviation_sum = 0.0;\n    for (Double number : numbers) {\n        deviation_sum += Math.abs(mean - number);\n    }\n    \n    if(deviation_sum <  1.e-6){\n        return 0.0;\n    }\n    \n    return deviation_sum / numbers.size();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MEAN_ABSOLUTE_DEVIATION.java b/src/main/java/humaneval/buggy/MEAN_ABSOLUTE_DEVIATION.java\nindex 2f1406a..23be943 100644\n--- a/src/main/java/humaneval/buggy/MEAN_ABSOLUTE_DEVIATION.java\n+++ b/src/main/java/humaneval/buggy/MEAN_ABSOLUTE_DEVIATION.java\n@@ -3,16 +3,25 @@ package humaneval.buggy;\n import java.util.List;\n \n public class MEAN_ABSOLUTE_DEVIATION {\n-    public static double mean_absolute_deviation(List<Double> numbers) {\n-        double sum = 0.;\n-        for (Double number : numbers){\n-            sum += number;\n-        }\n-        double mean = sum / numbers.size();\n-        double deviation_sum = 0.;\n-        for (Double number : numbers){\n-            deviation_sum += (number - mean) * (number - mean);\n-        }\n-        return deviation_sum / numbers.size();\n+public static double mean_absolute_deviation(List<Double> numbers) {\n+    if (numbers == null || numbers.isEmpty()) {\n+        throw new IllegalArgumentException(\"Input list cannot be null or empty\");\n     }\n+    double sum = 0.0, mean = 0.0;\n+    for (Double number : numbers) {\n+        sum += number;\n+    }\n+    mean = sum / numbers.size();\n+\n+    double deviation_sum = 0.0;\n+    for (Double number : numbers) {\n+        deviation_sum += Math.abs(mean - number);\n+    }\n+    \n+    if(deviation_sum <  1.e-6){\n+        return 0.0;\n+    }\n+    \n+    return deviation_sum / numbers.size();\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}