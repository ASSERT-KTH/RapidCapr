{
    "patch": "        // Remove double negative signs in the beginning of the string\n        while (val.startsWith(\"--\")) {\n            val = val.substring(2);\n        }\n        if (val.startsWith(\"-\")) {\n            if (val.startsWith(\"-0x\") || val.startsWith(\"-0X\")) {\n                return createInteger(val);\n            }\n            return (val.indexOf('.') >= 0 || val.indexOf('e') >= 0 || val.indexOf('E') >= 0)\n                    ? createDouble(val) : createLong(val);\n        } else {\n            int index = val.indexOf('.');\n            if (index >= 0) {\n                if (val.substring(index + 1).indexOf('.') >= 0) {\n                    // Remove all '.' symbols except for the first one\n                    val = val.substring(0, index + 1) + val.substring(index + 1).replace(\".\", \"\");\n                }\n            } else {\n                // Remove all '.' symbols\n                val = val.replace(\".\", \"\");\n            }\n            return (val.indexOf('e') >= 0 || val.indexOf('E') >= 0)\n                    ? createDouble(val) : createLong(val);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..8a4c21ae 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,29 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        // Remove double negative signs in the beginning of the string\n+        while (val.startsWith(\"--\")) {\n+            val = val.substring(2);\n+        }\n+        if (val.startsWith(\"-\")) {\n+            if (val.startsWith(\"-0x\") || val.startsWith(\"-0X\")) {\n+                return createInteger(val);\n+            }\n+            return (val.indexOf('.') >= 0 || val.indexOf('e') >= 0 || val.indexOf('E') >= 0)\n+                    ? createDouble(val) : createLong(val);\n+        } else {\n+            int index = val.indexOf('.');\n+            if (index >= 0) {\n+                if (val.substring(index + 1).indexOf('.') >= 0) {\n+                    // Remove all '.' symbols except for the first one\n+                    val = val.substring(0, index + 1) + val.substring(index + 1).replace(\".\", \"\");\n+                }\n+            } else {\n+                // Remove all '.' symbols\n+                val = val.replace(\".\", \"\");\n+            }\n+            return (val.indexOf('e') >= 0 || val.indexOf('E') >= 0)\n+                    ? createDouble(val) : createLong(val);\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}