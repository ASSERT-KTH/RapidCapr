{
    "patch": "            if (resetFields) {\n                // if resetting, restore original state first\n                Chronology chrono = iChrono;\n                long oldMillis = chrono.setYear(millis, iYear);\n                oldMillis = chrono.setMonthOfYear(oldMillis, iMonthOfYear);\n                oldMillis = chrono.setDayOfMonth(oldMillis, iDayOfMonth);\n                oldMillis = chrono.setMillisOfDay(oldMillis, iMillisOfDay);\n                millis = oldMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..57507267 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (resetFields) {\n+                // if resetting, restore original state first\n+                Chronology chrono = iChrono;\n+                long oldMillis = chrono.setYear(millis, iYear);\n+                oldMillis = chrono.setMonthOfYear(oldMillis, iMonthOfYear);\n+                oldMillis = chrono.setDayOfMonth(oldMillis, iDayOfMonth);\n+                oldMillis = chrono.setMillisOfDay(oldMillis, iMillisOfDay);\n+                millis = oldMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}