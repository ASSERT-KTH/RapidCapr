{
    "patch": "public static String toAsciiString(String s) {\n    StringBuilder sb = new StringBuilder();\n    byte[] bytes = s.getBytes(StandardCharsets.ISO_8859_1);\n\n    for (byte b : bytes) {\n        if ((b & 0x80) == 0) {\n            sb.append((char) b);\n        } else if (b == 0xc2 || b == 0xc3) {\n            sb.append((char) ((b & 0x03) << 6));\n        } else if (b == 0x81) {\n            sb.append((char) 0xa0);\n        } else if (b == 0x8d) {\n            sb.append((char) 0x8c);\n        } else if (b == 0x8f) {\n            sb.append((char) 0x8e);\n        } else if (b == 0x90) {\n            sb.append((char) 0x90);\n        } else if (b == 0x9d) {\n            sb.append((char) 0x9c);\n        } else {\n            sb.append(\"?\");\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..8a23bc46 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,31 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String toAsciiString(String s) {\n+    StringBuilder sb = new StringBuilder();\n+    byte[] bytes = s.getBytes(StandardCharsets.ISO_8859_1);\n+\n+    for (byte b : bytes) {\n+        if ((b & 0x80) == 0) {\n+            sb.append((char) b);\n+        } else if (b == 0xc2 || b == 0xc3) {\n+            sb.append((char) ((b & 0x03) << 6));\n+        } else if (b == 0x81) {\n+            sb.append((char) 0xa0);\n+        } else if (b == 0x8d) {\n+            sb.append((char) 0x8c);\n+        } else if (b == 0x8f) {\n+            sb.append((char) 0x8e);\n+        } else if (b == 0x90) {\n+            sb.append((char) 0x90);\n+        } else if (b == 0x9d) {\n+            sb.append((char) 0x9c);\n+        } else {\n+            sb.append(\"?\");\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}