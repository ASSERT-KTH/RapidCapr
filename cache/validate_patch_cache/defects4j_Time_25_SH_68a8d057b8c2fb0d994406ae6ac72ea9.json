{
    "patch": "            if((offsetLocal - offsetAdjusted) < 0){\n                long prevAdjusted = previousTransition(instantAdjusted);\n                if(prevAdjusted < instantLocal - offsetLocal){\n                    offsetAdjusted = offsetLocal;\n                }\n            } else {\n                long nextAdjusted = nextTransition(instantAdjusted);\n                if(nextAdjusted == instantLocal - offsetLocal){\n                    offsetAdjusted = offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..bfe052f9 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if((offsetLocal - offsetAdjusted) < 0){\n+                long prevAdjusted = previousTransition(instantAdjusted);\n+                if(prevAdjusted < instantLocal - offsetLocal){\n+                    offsetAdjusted = offsetLocal;\n+                }\n+            } else {\n+                long nextAdjusted = nextTransition(instantAdjusted);\n+                if(nextAdjusted == instantLocal - offsetLocal){\n+                    offsetAdjusted = offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}