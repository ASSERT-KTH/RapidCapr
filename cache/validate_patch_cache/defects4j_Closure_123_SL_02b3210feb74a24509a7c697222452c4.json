{
    "patch": "Iterator<String> it = Arrays.asList(context).iterator();\nboolean first = it.hasNext();\nStringBuilder sb = new StringBuilder();\nwhile (it.hasNext()) {\n    String s = it.next();\n    if (first) {\n        first = false;\n    } else {\n        sb.append(\", \");\n    }\n    sb.append(s);\n}\nString rhs = sb.toString();\n\nString result = String.format(\"for (%s %s : %s) %s\", variableType, variableName, rhs, body);\n\nreturn result;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}