{
    "patch": "if (options.checkGlobalThisLevel != null) {\n    if (options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) >= 0) {\n        options.setWarningLevel(\n                DiagnosticGroups.GLOBAL_THIS,\n                options.checkGlobalThisLevel);\n    } else {\n        DiagnosticType deprecatedGlobalThis =\n                RhinoErrorReporter.DEPRECATED_GLOBAL_THIS;\n        logger.warning(\n                \"Ignoring checkGlobalThisLevel. \" +\n                        deprecatedGlobalThis + \" check requires ES5 mode.\");\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..b2a0af6a 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,19 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+    if (options.getLanguageIn().compareTo(LanguageMode.ECMASCRIPT5) >= 0) {\n+        options.setWarningLevel(\n+                DiagnosticGroups.GLOBAL_THIS,\n+                options.checkGlobalThisLevel);\n+    } else {\n+        DiagnosticType deprecatedGlobalThis =\n+                RhinoErrorReporter.DEPRECATED_GLOBAL_THIS;\n+        logger.warning(\n+                \"Ignoring checkGlobalThisLevel. \" +\n+                        deprecatedGlobalThis + \" check requires ES5 mode.\");\n+    }\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}