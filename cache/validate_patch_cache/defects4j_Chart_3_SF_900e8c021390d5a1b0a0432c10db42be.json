{
    "patch": "public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n    if (start < 0) {\n        throw new IllegalArgumentException(\"Requires start >= 0.\");\n    }\n    if (end < start) {\n        throw new IllegalArgumentException(\"Requires start <= end.\");\n    }\n    TimeSeries copy = (TimeSeries) super.clone();\n    List<TimeSeriesDataItem> sourceData = this.getData();\n    List<TimeSeriesDataItem> targetData = new ArrayList<>();\n    if (sourceData.size() > 0) {\n        for (int i = start; i <= end; i++) {\n            TimeSeriesDataItem item = sourceData.get(i);\n            targetData.add((TimeSeriesDataItem) item.clone());\n        }\n    }\n    copy.clear();\n    for (TimeSeriesDataItem item : targetData) {\n        try {\n            copy.add(item);\n        }\n        catch (SeriesException e) {\n            e.printStackTrace();\n        }\n    }\n    return copy;\n}\n\npublic List<TimeSeriesDataItem> getData() {\n    return this.data;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..14729a0 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,37 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n+    if (start < 0) {\n+        throw new IllegalArgumentException(\"Requires start >= 0.\");\n+    }\n+    if (end < start) {\n+        throw new IllegalArgumentException(\"Requires start <= end.\");\n+    }\n+    TimeSeries copy = (TimeSeries) super.clone();\n+    List<TimeSeriesDataItem> sourceData = this.getData();\n+    List<TimeSeriesDataItem> targetData = new ArrayList<>();\n+    if (sourceData.size() > 0) {\n+        for (int i = start; i <= end; i++) {\n+            TimeSeriesDataItem item = sourceData.get(i);\n+            targetData.add((TimeSeriesDataItem) item.clone());\n+        }\n+    }\n+    copy.clear();\n+    for (TimeSeriesDataItem item : targetData) {\n+        try {\n+            copy.add(item);\n+        }\n+        catch (SeriesException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+    return copy;\n+}\n+\n+public List<TimeSeriesDataItem> getData() {\n+    return this.data;\n+}\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}