{
    "patch": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (cs == null || searchChars == null) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    int csLast = csLength - 1;\n    int searchLast = searchLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (searchContains(ch, searchChars)) {\n            if (Character.isHighSurrogate(ch)) {\n                if (i < csLast && searchChars.length > 0) {\n                    int codePoint = Character.toCodePoint(ch, cs.charAt(++i));\n                    for (int j = 0; j < searchLength; j++) {\n                        if (searchChars[j] == codePoint)\n                            return true;\n                    }\n                }\n            } else {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean searchContains(char ch, char[] searchChars) {\n    for (int i = 0; i < searchChars.length; i++) {\n        if (searchChars[i] == ch) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..b768316c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,41 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char[] searchChars) {\n+    if (cs == null || searchChars == null) {\n+        return false;\n+    }\n+    int csLength = cs.length();\n+    int searchLength = searchChars.length;\n+    int csLast = csLength - 1;\n+    int searchLast = searchLength - 1;\n+    for (int i = 0; i < csLength; i++) {\n+        char ch = cs.charAt(i);\n+        if (searchContains(ch, searchChars)) {\n+            if (Character.isHighSurrogate(ch)) {\n+                if (i < csLast && searchChars.length > 0) {\n+                    int codePoint = Character.toCodePoint(ch, cs.charAt(++i));\n+                    for (int j = 0; j < searchLength; j++) {\n+                        if (searchChars[j] == codePoint)\n+                            return true;\n+                    }\n+                }\n+            } else {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean searchContains(char ch, char[] searchChars) {\n+    for (int i = 0; i < searchChars.length; i++) {\n+        if (searchChars[i] == ch) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}