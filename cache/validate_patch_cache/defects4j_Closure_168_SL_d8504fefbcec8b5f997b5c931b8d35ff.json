{
    "patch": "if (t.getClosestHoistScope().isGlobal()) {```\n- ```java if (t.getScopeDepth() == 0) {```\n- ```java if (t.getScopeDepth() == 1) {```\n- ```java if (n.getJSDocInfo() != null && n.getJSDocInfo().isConstructor() && t.getScopeDepth() == 2) {``",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex cf87eaaf..f9e7010f 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1993,7 +1993,10 @@ final class TypedScopeCreator implements ScopeCreator {\n         data.get(t.getScopeRoot()).recordNonEmptyReturn();\n       }\n \n-      if (t.getScopeDepth() <= 2) {\n+if (t.getClosestHoistScope().isGlobal()) {```\n+- ```java if (t.getScopeDepth() == 0) {```\n+- ```java if (t.getScopeDepth() == 1) {```\n+- ```java if (n.getJSDocInfo() != null && n.getJSDocInfo().isConstructor() && t.getScopeDepth() == 2) {``\n         // The first-order function analyzer looks at two types of variables:\n         //\n         // 1) Local variables that are assigned in inner scopes (\"escaped vars\")",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}