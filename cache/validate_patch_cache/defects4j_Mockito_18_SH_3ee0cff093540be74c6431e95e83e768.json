{
    "patch": "public ReturnValue execute(ExecutionEvent event) {\n    IStructuredSelection selection = getSelection();\n    Iterator<?> iterator = selection.iterator();\n\n    List<String> selectedElements = new ArrayList<>();\n    while (iterator.hasNext()) {\n        Object element = iterator.next();\n        if (element instanceof IJavaElement) {\n            selectedElements.add(((IJavaElement) element).getPath().toString());\n        }\n    }\n    ReturnValue retValObj = new ReturnValue();\n    retValObj.setValue(selectedElements);\n    return retValObj;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}