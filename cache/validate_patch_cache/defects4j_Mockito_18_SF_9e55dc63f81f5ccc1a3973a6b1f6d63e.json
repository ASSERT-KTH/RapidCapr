{
    "patch": "public Iterable<Character> removeCharacters(final Iterable<Character> input, final Iterable<Character> remove) {\n    final Set<Character> removeSet = new HashSet<>();\n    for (final Character ch : remove) {\n        removeSet.add(ch);\n    }\n    final List<Character> result = new ArrayList<>();\n    for (final Character ch : input) {\n        if (!removeSet.contains(ch)) {\n            result.add(ch);\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..9bcf1daf6 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,19 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public Iterable<Character> removeCharacters(final Iterable<Character> input, final Iterable<Character> remove) {\n+    final Set<Character> removeSet = new HashSet<>();\n+    for (final Character ch : remove) {\n+        removeSet.add(ch);\n+    }\n+    final List<Character> result = new ArrayList<>();\n+    for (final Character ch : input) {\n+        if (!removeSet.contains(ch)) {\n+            result.add(ch);\n+        }\n+    }\n+    return result;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}