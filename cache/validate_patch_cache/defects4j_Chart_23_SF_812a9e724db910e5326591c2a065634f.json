{
    "patch": "public class Rectangle<T extends Number> {\n\n    private T width;\n    private T height;\n\n    public Rectangle(T width, T height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public T getWidth() {\n        return width;\n    }\n\n    public T getHeight() {\n        return height;\n    }\n\n    public T area() {\n        return (T) (Double.valueOf(width.doubleValue() * height.doubleValue()));\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (!(obj instanceof Rectangle)) {\n            return false;\n        }\n\n        Rectangle<T> other = (Rectangle<T>) obj;\n\n        return width.equals(other.width) && height.equals(other.height);\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\nindex bbd5ddb..cba399a 100644\n--- a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n@@ -327,7 +327,43 @@ public class MinMaxCategoryRenderer extends AbstractCategoryItemRenderer {\n      * @param column  the column index (zero-based).\n      * @param pass  the pass index.\n      */\n-    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n+public class Rectangle<T extends Number> {\n+\n+    private T width;\n+    private T height;\n+\n+    public Rectangle(T width, T height) {\n+        this.width = width;\n+        this.height = height;\n+    }\n+\n+    public T getWidth() {\n+        return width;\n+    }\n+\n+    public T getHeight() {\n+        return height;\n+    }\n+\n+    public T area() {\n+        return (T) (Double.valueOf(width.doubleValue() * height.doubleValue()));\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (!(obj instanceof Rectangle)) {\n+            return false;\n+        }\n+\n+        Rectangle<T> other = (Rectangle<T>) obj;\n+\n+        return width.equals(other.width) && height.equals(other.height);\n+    }\n+}\n             Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n             ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n             int pass) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}