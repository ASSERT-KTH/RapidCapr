{
    "patch": "                if (millis <= 0) {\n                    throw new IllegalFieldValueException(\n                            savedFields[i].iField.getType(),\n                            String.valueOf(savedFields[i].get()),\n                            TEXT_VALUE_OF_MILLIS_OF_SECOND,\n                            \"millis\", String.valueOf(millis), \"\");\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..0e479807 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (millis <= 0) {\n+                    throw new IllegalFieldValueException(\n+                            savedFields[i].iField.getType(),\n+                            String.valueOf(savedFields[i].get()),\n+                            TEXT_VALUE_OF_MILLIS_OF_SECOND,\n+                            \"millis\", String.valueOf(millis), \"\");\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}