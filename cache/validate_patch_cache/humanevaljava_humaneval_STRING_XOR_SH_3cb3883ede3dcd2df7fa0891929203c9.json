{
    "patch": "else {\n    // append any remaining characters from longer string\n    if (i == Math.min(a.length(), b.length()) - 1) {\n        if (a.length() != b.length()) {\n            result += a.length() > b.length() ? a.substring(b.length()) : b.substring(a.length());\n        }\n    } else {\n        result += a.charAt(i) == b.charAt(i) ? \"",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRING_XOR.java b/src/main/java/humaneval/buggy/STRING_XOR.java\nindex a57100f..2d337cb 100644\n--- a/src/main/java/humaneval/buggy/STRING_XOR.java\n+++ b/src/main/java/humaneval/buggy/STRING_XOR.java\n@@ -7,6 +7,14 @@ public class STRING_XOR {\n             if (a.charAt(i) == b.charAt(i)){\n                 result += \"0\";\n             }\n+else {\n+    // append any remaining characters from longer string\n+    if (i == Math.min(a.length(), b.length()) - 1) {\n+        if (a.length() != b.length()) {\n+            result += a.length() > b.length() ? a.substring(b.length()) : b.substring(a.length());\n+        }\n+    } else {\n+        result += a.charAt(i) == b.charAt(i) ? \"\n         }\n         return result;\n     }",
    "result_reason": " /tmp/humaneval-STRING_XOR/src/main/java/humaneval/buggy/STRING_XOR.java:[17,48] unclosed string literal",
    "test_result": "ERROR"
}