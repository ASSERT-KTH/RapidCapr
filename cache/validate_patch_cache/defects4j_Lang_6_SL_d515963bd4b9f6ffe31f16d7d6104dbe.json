{
    "patch": "if (consumed == 0) {\n    char[] c = Character.toChars(Character.codePointAt(input, pos));\n    out.write(c);\n    pos+= c.length;\n    if (Character.getType(Character.codePointAt(input, pos - c.length)) == Character.CONTROL && c[c.length - 1] != '\\n' && c[c.length - 1] != '\\r') {\n        out.write('\\b');\n    }\n    continue;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..ee26f037 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,15 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+if (consumed == 0) {\n+    char[] c = Character.toChars(Character.codePointAt(input, pos));\n+    out.write(c);\n+    pos+= c.length;\n+    if (Character.getType(Character.codePointAt(input, pos - c.length)) == Character.CONTROL && c[c.length - 1] != '\\n' && c[c.length - 1] != '\\r') {\n+        out.write('\\b');\n+    }\n+    continue;\n+}\n             }\n         }\n     }",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}