{
    "patch": "    \n    Node argList = getFunctionArgList(function);\n    List<Node> childrenToRemove = new ArrayList<>();\n    for (Node arg : argList.children()) {\n      Var var = fnScope.getVar(arg.getString());\n      if (!referenced.contains(var)) {\n        childrenToRemove.add(arg);\n      } else {\n        break;\n      }\n    }\n    for (Node child : childrenToRemove) {\n      argList.removeChild(child);\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..f6f7bd65 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,20 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    \n+    Node argList = getFunctionArgList(function);\n+    List<Node> childrenToRemove = new ArrayList<>();\n+    for (Node arg : argList.children()) {\n+      Var var = fnScope.getVar(arg.getString());\n+      if (!referenced.contains(var)) {\n+        childrenToRemove.add(arg);\n+      } else {\n+        break;\n+      }\n+    }\n+    for (Node child : childrenToRemove) {\n+      argList.removeChild(child);\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}