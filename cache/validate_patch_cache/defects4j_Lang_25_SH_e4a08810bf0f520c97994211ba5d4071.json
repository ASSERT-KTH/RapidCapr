{
    "patch": "// Remove the closing parenthesis \")\" from the if statement \nif (c == 27 || c == '\\n' || c == '\\r' || c == '\\t' || c == '\\f' || c == '\\b' || c == '/' || c == '<' || c == '>' || c == '(' || c == '%') {\n    state = NORMAL_STATE;\n} else if (c == ' ') {\n    state = SPACE_STATE;\n} else if (c >= '0' && c <= '9') {\n    buffer.write(c);\n} else if (c == ';') {\n    String s = buffer.toString();\n    if (StringUtils.isNumeric(s)) {\n        int unicode = Integer.parseInt(s);\n        sb.append((char) unicode);\n        buffer.reset();\n        state = NORMAL_STATE;\n    } else if (s.equals(\"#\")) {\n        buffer.reset(); // reset buffer\n        state = NUMBER_SIGN_STATE;\n    } else {\n        // escaped char was invalid\n        success = false;\n        buffer.reset(); // reset buffer\n        state = ERROR_STATE;\n    }\n} else if (c == '#') {\n    buffer.reset();\n    state = NUMBER_SIGN_STATE;\n} else { \n    // the escaped character was invalid\n    success = false;\n    state = ERROR_STATE;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}