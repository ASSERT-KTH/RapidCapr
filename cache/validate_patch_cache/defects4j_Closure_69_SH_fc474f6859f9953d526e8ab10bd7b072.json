{
    "patch": "      if (functionType.getTypeOfThis() != null && !NodeUtil.isGetProp(child.getParent()) && \n          !NodeUtil.isGetElem(child.getParent())) {\n        report(t, n, EXPLICIT_THIS);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..c5072cbf 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,9 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      if (functionType.getTypeOfThis() != null && !NodeUtil.isGetProp(child.getParent()) && \n+          !NodeUtil.isGetElem(child.getParent())) {\n+        report(t, n, EXPLICIT_THIS);\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}