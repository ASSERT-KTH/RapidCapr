{
    "patch": "    public Iterator<Chromosome> iterator() {\n        return new Iterator<Chromosome>() {\n            private int currentIndex = 0;\n            private final int size = chromosomes.size();\n\n            @Override\n            public boolean hasNext() {\n                return currentIndex < size;\n            }\n\n            @Override\n            public Chromosome next() {\n                return chromosomes.get(currentIndex++);\n            }\n\n            @Override\n            public void remove() {\n                if (currentIndex > 0) {\n                    chromosomes.remove(--currentIndex);\n                    size--;\n                } else {\n                    throw new IllegalStateException();\n                }\n            }\n        };\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\nindex 1eb005316..5d7e25a94 100644\n--- a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n@@ -206,6 +206,29 @@ public abstract class ListPopulation implements Population {\n      * @return chromosome iterator\n      */\n     public Iterator<Chromosome> iterator() {\n-        return chromosomes.iterator();\n+        return new Iterator<Chromosome>() {\n+            private int currentIndex = 0;\n+            private final int size = chromosomes.size();\n+\n+            @Override\n+            public boolean hasNext() {\n+                return currentIndex < size;\n+            }\n+\n+            @Override\n+            public Chromosome next() {\n+                return chromosomes.get(currentIndex++);\n+            }\n+\n+            @Override\n+            public void remove() {\n+                if (currentIndex > 0) {\n+                    chromosomes.remove(--currentIndex);\n+                    size--;\n+                } else {\n+                    throw new IllegalStateException();\n+                }\n+            }\n+        };\n     }\n }",
    "result_reason": "error: cannot assign a value to final variable size",
    "test_result": "ERROR"
}