{
    "patch": "public static double getTypedPercent(JSONObject jsonObj) throws JSONException {\n    double count = 0.0;\n    double typed = 0.0;\n    JSONArray arr = jsonObj.getJSONArray(\"items\");\n    for(int i=0;i<arr.length();i++) {\n        JSONObject item = arr.getJSONObject(i);\n        if(item.has(\"closed_date\")) {\n            continue;\n        }\n        count += 1;\n        if(item.getString(\"post_type\").equals(\"question\")) {\n            if(item.has(\"accepted_answer_id\")) {\n                typed += 1;\n            }\n        } else {\n            if(item.getInt(\"answer_count\") > 0) {\n                typed += 1;\n            }\n        }\n    }\n    return (typed / count) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..9c91a86c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,28 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject jsonObj) throws JSONException {\n+    double count = 0.0;\n+    double typed = 0.0;\n+    JSONArray arr = jsonObj.getJSONArray(\"items\");\n+    for(int i=0;i<arr.length();i++) {\n+        JSONObject item = arr.getJSONObject(i);\n+        if(item.has(\"closed_date\")) {\n+            continue;\n+        }\n+        count += 1;\n+        if(item.getString(\"post_type\").equals(\"question\")) {\n+            if(item.has(\"accepted_answer_id\")) {\n+                typed += 1;\n+            }\n+        } else {\n+            if(item.getInt(\"answer_count\") > 0) {\n+                typed += 1;\n+            }\n+        }\n+    }\n+    return (typed / count) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}