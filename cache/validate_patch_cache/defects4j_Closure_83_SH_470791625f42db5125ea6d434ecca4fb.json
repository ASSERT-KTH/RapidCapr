{
    "patch": "public int parseArguments(Parameters params) throws CmdLineException {\n\n    String param = params.getParameter(0);\n    if (param == null) {\n        setter.addValue(true);\n        return 0;\n    } else {\n        String lowerParam = param.toLowerCase();\n        if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n        } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n        } else {\n            throw new CmdLineException(owner, new Localizable() {\n                @Override\n                public String formatWithLocale(Locale locale, Object... args) {\n                    return String.format(locale, \"Invalid input '%s', expected a boolean value\", params.getParameter(0));\n                }\n            }, null);\n        }\n        return 1;\n    }\n\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..88152c1a 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,30 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+public int parseArguments(Parameters params) throws CmdLineException {\n+\n+    String param = params.getParameter(0);\n+    if (param == null) {\n+        setter.addValue(true);\n+        return 0;\n+    } else {\n+        String lowerParam = param.toLowerCase();\n+        if (TRUES.contains(lowerParam)) {\n+            setter.addValue(true);\n+        } else if (FALSES.contains(lowerParam)) {\n+            setter.addValue(false);\n+        } else {\n+            throw new CmdLineException(owner, new Localizable() {\n+                @Override\n+                public String formatWithLocale(Locale locale, Object... args) {\n+                    return String.format(locale, \"Invalid input '%s', expected a boolean value\", params.getParameter(0));\n+                }\n+            }, null);\n+        }\n+        return 1;\n+    }\n+\n+}\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}