{
    "patch": "@Test\npublic void testToPeriod_fixedZone() {\n    BasePeriod test = new BasePeriod(64L * MILLIS_PER_DAY);\n    assertEquals(9, test.getDays());\n    assertEquals(0, test.getHours());\n    assertEquals(0, test.getMinutes());\n    assertEquals(0, test.getSeconds());\n    assertEquals(0, test.getMillis());\n    \n    // Modification to the calling code\n    assertEquals(9, test.toStandardDuration().getStandardDays());\n    assertEquals(0, test.toStandardDuration().getStandardHours());\n    assertEquals(0, test.toStandardDuration().getStandardMinutes());\n    assertEquals(0, test.toStandardDuration().getStandardSeconds());\n    assertEquals(0, test.toStandardDuration().getStandardMillis());\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..f8303d23 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,22 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+@Test\n+public void testToPeriod_fixedZone() {\n+    BasePeriod test = new BasePeriod(64L * MILLIS_PER_DAY);\n+    assertEquals(9, test.getDays());\n+    assertEquals(0, test.getHours());\n+    assertEquals(0, test.getMinutes());\n+    assertEquals(0, test.getSeconds());\n+    assertEquals(0, test.getMillis());\n+    \n+    // Modification to the calling code\n+    assertEquals(9, test.toStandardDuration().getStandardDays());\n+    assertEquals(0, test.toStandardDuration().getStandardHours());\n+    assertEquals(0, test.toStandardDuration().getStandardMinutes());\n+    assertEquals(0, test.toStandardDuration().getStandardSeconds());\n+    assertEquals(0, test.toStandardDuration().getStandardMillis());\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}