{
    "patch": "public static double[] rescale_to_unit(double[] numbers){\n\t// Check if the input array is null or empty\n\tif(numbers == null || numbers.length == 0)\n\t\treturn new double[0];\n\n\t// Find the minimum and maximum values in the array\n\tdouble min = numbers[0];\n\tdouble max = numbers[0];\n\n\tfor(int i = 1; i < numbers.length; i++) {\n\t\tif(numbers[i] < min)\n\t\t\tmin = numbers[i];\n\t\tif(numbers[i] > max)\n\t\t\tmax = numbers[i];\n\t}\n\n\t// Check if the range is zero\n\tif(max == min)\n\t\treturn new double[numbers.length];\n\n\t// Scale the values to the range [0, 1]\n\tdouble[] result = new double[numbers.length];\n\tfor(int i = 0; i < numbers.length; i++)\n\t\tresult[i] = (numbers[i] - min) / (max - min);\n\n\treturn result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java\nindex 905614f..77d0af3 100644\n--- a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java\n+++ b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java\n@@ -1,23 +1,31 @@\n package humaneval.buggy;\n \n public class RESCALE_TO_UNIT {\n-    public static double[] rescale_to_unit(double[] numbers){\n-        double min = Double.MAX_VALUE;\n-        double max = Double.MIN_VALUE;\n+public static double[] rescale_to_unit(double[] numbers){\n+\t// Check if the input array is null or empty\n+\tif(numbers == null || numbers.length == 0)\n+\t\treturn new double[0];\n \n-        for (int i = 0; i < numbers.length; i += 1) {\n-            if (numbers[i] > max) {\n-                max = numbers[i];\n-            }\n-            else if (numbers[i] < min) {\n-                min = numbers[i];\n-            }\n-        }\n+\t// Find the minimum and maximum values in the array\n+\tdouble min = numbers[0];\n+\tdouble max = numbers[0];\n \n-        double[] result = new double[numbers.length];\n-        for (int i = 0; i < numbers.length; i += 1) {\n-            result[i] = (numbers[i] - min) / (max - min);\n-        }\n-        return result;\n-    }\n+\tfor(int i = 1; i < numbers.length; i++) {\n+\t\tif(numbers[i] < min)\n+\t\t\tmin = numbers[i];\n+\t\tif(numbers[i] > max)\n+\t\t\tmax = numbers[i];\n+\t}\n+\n+\t// Check if the range is zero\n+\tif(max == min)\n+\t\treturn new double[numbers.length];\n+\n+\t// Scale the values to the range [0, 1]\n+\tdouble[] result = new double[numbers.length];\n+\tfor(int i = 0; i < numbers.length; i++)\n+\t\tresult[i] = (numbers[i] - min) / (max - min);\n+\n+\treturn result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}