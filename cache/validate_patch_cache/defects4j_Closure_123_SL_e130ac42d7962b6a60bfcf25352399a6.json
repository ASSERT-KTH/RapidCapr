{
    "patch": "        Object[] arr = d.getClass().isArray() ? new Object[] {d} : d;\n        Context rhsContext = arr.length > 0 ? Context.ITERATION : Context.VOID;\n        for (int i = 0; i < arr.length; i++) {\n            Object o = arr[i];\n            boolean b = o instanceof Number;\n            boolean c = o instanceof String;\n            int a = c? Integer.parseInt((String) o) : ((Number) o).intValue();\n            if (a == 0 && !b) {\n                a = 1;\n            }\n            if (i != 0) {\n                code.add(\", \");\n            }\n            code.add(a).add(\" in \");\n            if (b) {\n                code.add(\"new PyRange(0, \");\n            }\n            code.add(\"d\");\n            if (b) {\n                code.add(\".intValue()\");\n            }\n            if (i == 0) {\n                code.add(rhsContext == Context.ITERATION ? \") if \" : \" = \");\n            }\n        }\n        code.add(rhsContext == Context.ITERATION ? \"): \" : \"\");",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}