{
    "patch": "                long prevTransition = previousTransition(instantAdjusted);\n                int offsetBefore = getOffset(prevTransition);\n                if (offsetBefore == offsetAdjusted) {\n                    // We were on a DST gap, reset to the correct local time\n                    prevTransition = previousTransition(prevTransition);\n                }\n                long nextTransition = nextTransition(prevTransition);\n                if (nextTransition <= instantLocal - offsetAdjusted) {\n                    return offsetBefore;\n                }\n                return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..fa50e8ed 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,17 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long prevTransition = previousTransition(instantAdjusted);\n+                int offsetBefore = getOffset(prevTransition);\n+                if (offsetBefore == offsetAdjusted) {\n+                    // We were on a DST gap, reset to the correct local time\n+                    prevTransition = previousTransition(prevTransition);\n+                }\n+                long nextTransition = nextTransition(prevTransition);\n+                if (nextTransition <= instantLocal - offsetAdjusted) {\n+                    return offsetBefore;\n+                }\n+                return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}