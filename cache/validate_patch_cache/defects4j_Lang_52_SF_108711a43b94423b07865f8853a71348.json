{
    "patch": "    public static String escapeJavaStyleString(String str, boolean escapeSingleQuote) {\n        if (str == null) {\n            return null;\n        }\n        int sz = str.length();\n        StringBuilder out = new StringBuilder(sz * 2);\n        for (int i = 0; i < sz; i++) {\n            char ch = str.charAt(i);\n\n            // handle unicode\n            if (ch > 0xfff) {\n                out.append(\"\\\\u\").append(hex(ch));\n            } else if (ch > 0xff) {\n                out.append(\"\\\\u0\").append(hex(ch));\n            } else if (ch > 0x7f) {\n                out.append(\"\\\\u00\").append(hex(ch));\n            } else if (ch < 32) {\n                switch (ch) {\n                    case '\\b':\n                        out.append('\\\\');\n                        out.append('b');\n                        break;\n                    case '\\n':\n                        out.append('\\\\');\n                        out.append('n');\n                        break;\n                    case '\\t':\n                        out.append('\\\\');\n                        out.append('t');\n                        break;\n                    case '\\f':\n                        out.append('\\\\');\n                        out.append('f');\n                        break;\n                    case '\\r':\n                        out.append('\\\\');\n                        out.append('r');\n                        break;\n                    default :\n                        if (ch > 0xf) {\n                            out.append(\"\\\\u00\").append(hex(ch));\n                        } else {\n                            out.append(\"\\\\u000\").append(hex(ch));\n                        }\n                        break;\n                }\n            } else {\n                switch (ch) {\n                    case '\\'':\n                        if (escapeSingleQuote) {\n                          out.append('\\\\');\n                        }\n                        out.append('\\'');\n                        break;\n                    case '\"':\n                        out.append('\\\\');\n                        out.append('\"');\n                        break;\n                    case '\\\\':\n                        out.append('\\\\');\n                        out.append('\\\\');\n                        break;\n                    default :\n                        out.append(ch);\n                        break;\n                }\n            }\n        }\n        return out.toString();\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringEscapeUtils.java b/src/java/org/apache/commons/lang/StringEscapeUtils.java\nindex 4fda091d..e7296a36 100644\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n@@ -168,52 +168,49 @@ public class StringEscapeUtils {\n      * @param escapeSingleQuote escapes single quotes if <code>true</code>\n      * @throws IOException if an IOException occurs\n      */\n-    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\n-        if (out == null) {\n-            throw new IllegalArgumentException(\"The Writer must not be null\");\n-        }\n+    public static String escapeJavaStyleString(String str, boolean escapeSingleQuote) {\n         if (str == null) {\n-            return;\n+            return null;\n         }\n-        int sz;\n-        sz = str.length();\n+        int sz = str.length();\n+        StringBuilder out = new StringBuilder(sz * 2);\n         for (int i = 0; i < sz; i++) {\n             char ch = str.charAt(i);\n \n             // handle unicode\n             if (ch > 0xfff) {\n-                out.write(\"\\\\u\" + hex(ch));\n+                out.append(\"\\\\u\").append(hex(ch));\n             } else if (ch > 0xff) {\n-                out.write(\"\\\\u0\" + hex(ch));\n+                out.append(\"\\\\u0\").append(hex(ch));\n             } else if (ch > 0x7f) {\n-                out.write(\"\\\\u00\" + hex(ch));\n+                out.append(\"\\\\u00\").append(hex(ch));\n             } else if (ch < 32) {\n                 switch (ch) {\n                     case '\\b':\n-                        out.write('\\\\');\n-                        out.write('b');\n+                        out.append('\\\\');\n+                        out.append('b');\n                         break;\n                     case '\\n':\n-                        out.write('\\\\');\n-                        out.write('n');\n+                        out.append('\\\\');\n+                        out.append('n');\n                         break;\n                     case '\\t':\n-                        out.write('\\\\');\n-                        out.write('t');\n+                        out.append('\\\\');\n+                        out.append('t');\n                         break;\n                     case '\\f':\n-                        out.write('\\\\');\n-                        out.write('f');\n+                        out.append('\\\\');\n+                        out.append('f');\n                         break;\n                     case '\\r':\n-                        out.write('\\\\');\n-                        out.write('r');\n+                        out.append('\\\\');\n+                        out.append('r');\n                         break;\n                     default :\n                         if (ch > 0xf) {\n-                            out.write(\"\\\\u00\" + hex(ch));\n+                            out.append(\"\\\\u00\").append(hex(ch));\n                         } else {\n-                            out.write(\"\\\\u000\" + hex(ch));\n+                            out.append(\"\\\\u000\").append(hex(ch));\n                         }\n                         break;\n                 }\n@@ -221,24 +218,25 @@ public class StringEscapeUtils {\n                 switch (ch) {\n                     case '\\'':\n                         if (escapeSingleQuote) {\n-                          out.write('\\\\');\n+                          out.append('\\\\');\n                         }\n-                        out.write('\\'');\n+                        out.append('\\'');\n                         break;\n                     case '\"':\n-                        out.write('\\\\');\n-                        out.write('\"');\n+                        out.append('\\\\');\n+                        out.append('\"');\n                         break;\n                     case '\\\\':\n-                        out.write('\\\\');\n-                        out.write('\\\\');\n+                        out.append('\\\\');\n+                        out.append('\\\\');\n                         break;\n                     default :\n-                        out.write(ch);\n+                        out.append(ch);\n                         break;\n                 }\n             }\n         }\n+        return out.toString();\n     }\n \n     /**",
    "result_reason": "error: method escapeJavaStyleString(String,boolean) is already defined in class StringEscapeUtils",
    "test_result": "ERROR"
}