{
    "patch": "import org.apache.commons.lang3.CharUtils;\n\npublic class StringUtils {\n\n    public static boolean containsAny(final CharSequence string, final char... searchChars) {\n        if (isEmpty(string) || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n\n        int strLength = string.length();\n        int searchLength = searchChars.length;\n        int count = 0;\n\n        for (int i = 0; i < strLength; i++) {\n            char ch = string.charAt(i);\n\n            // Handle supplementary characters\n            if (CharUtils.isHighSurrogate(ch) && i + 1 < strLength && CharUtils.isLowSurrogate(string.charAt(i + 1))) {\n                int codePoint = Character.toCodePoint(ch, string.charAt(i + 1));\n                i++;\n                if (contains(searchChars, codePoint)) {\n                    count++;\n                }\n            } else {\n                if (contains(searchChars, ch)) {\n                    count++;\n                }\n            }\n        }\n\n        return count > 0;\n    }\n\n    private static boolean contains(char[] array, int codePoint) {\n        for (char ch : Character.toChars(codePoint)) {\n            for (char searchChar : array) {\n                if (searchChar == ch) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private static boolean isEmpty(CharSequence cs) {\n        return cs == null || cs.length() == 0;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..c5c589f3 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,54 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import org.apache.commons.lang3.CharUtils;\n+\n+public class StringUtils {\n+\n+    public static boolean containsAny(final CharSequence string, final char... searchChars) {\n+        if (isEmpty(string) || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+\n+        int strLength = string.length();\n+        int searchLength = searchChars.length;\n+        int count = 0;\n+\n+        for (int i = 0; i < strLength; i++) {\n+            char ch = string.charAt(i);\n+\n+            // Handle supplementary characters\n+            if (CharUtils.isHighSurrogate(ch) && i + 1 < strLength && CharUtils.isLowSurrogate(string.charAt(i + 1))) {\n+                int codePoint = Character.toCodePoint(ch, string.charAt(i + 1));\n+                i++;\n+                if (contains(searchChars, codePoint)) {\n+                    count++;\n+                }\n+            } else {\n+                if (contains(searchChars, ch)) {\n+                    count++;\n+                }\n+            }\n+        }\n+\n+        return count > 0;\n+    }\n+\n+    private static boolean contains(char[] array, int codePoint) {\n+        for (char ch : Character.toChars(codePoint)) {\n+            for (char searchChar : array) {\n+                if (searchChar == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean isEmpty(CharSequence cs) {\n+        return cs == null || cs.length() == 0;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}