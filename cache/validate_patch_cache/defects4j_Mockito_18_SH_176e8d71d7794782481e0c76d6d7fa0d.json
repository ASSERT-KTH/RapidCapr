{
    "patch": "public class SomeClass {\n    public static <T> ReturnValues<T> doSomething() {\n        ReturnValues<T> values = new ReturnValues<>();\n        // ...some code here...\n\n        return values;\n    }\n\n    public static void main(String[] args) {\n        ReturnValues<String> values = doSomething();\n\n        if (values.hasReturnValueFor(String.class)) {\n            System.out.println(values.returnValueFor(String.class));\n        }\n        \n        assertFalse(((Iterable<?>) values.returnValueFor(Iterable.class)).iterator().hasNext());\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}