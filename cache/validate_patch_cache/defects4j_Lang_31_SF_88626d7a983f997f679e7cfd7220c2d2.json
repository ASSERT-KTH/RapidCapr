{
    "patch": "import java.util.Arrays;\n\npublic class StringUtils {\n    \n    public static boolean containsAny(final char[] arr1, final char[] arr2) {\n        if (arr1 == null || arr2 == null) {\n            return false;\n        }\n\n        final int arr1Length = arr1.length;\n        final int arr2Length = arr2.length;\n        final int total = arr1Length + arr2Length;\n\n        final char[] temp = Arrays.copyOf(arr1, total);\n        System.arraycopy(arr2, 0, temp, arr1Length, arr2Length);\n\n        Arrays.sort(temp);\n\n        for (int i = 0; i < total - 1; i++) {\n            if (temp[i] == temp[i + 1]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..d77ba40c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.util.Arrays;\n+\n+public class StringUtils {\n+    \n+    public static boolean containsAny(final char[] arr1, final char[] arr2) {\n+        if (arr1 == null || arr2 == null) {\n+            return false;\n+        }\n+\n+        final int arr1Length = arr1.length;\n+        final int arr2Length = arr2.length;\n+        final int total = arr1Length + arr2Length;\n+\n+        final char[] temp = Arrays.copyOf(arr1, total);\n+        System.arraycopy(arr2, 0, temp, arr1Length, arr2Length);\n+\n+        Arrays.sort(temp);\n+\n+        for (int i = 0; i < total - 1; i++) {\n+            if (temp[i] == temp[i + 1]) {\n+                return true;\n+            }\n+        }\n+\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}