{
    "patch": "public static String unescapeJava(String str) {\n   //...existing code\n   for (i = 0; i < len; i++) {\n     char aChar = str.charAt(i);\n     switch (aChar) {\n       //...existing code\n       case 'r':\n         outBuffer.append('\\r');\n         break;\n       case 't':\n         outBuffer.append('\\t');\n         break;\n       case 'u':\n         // Read the xxxx\n         int value = 0;\n         for (int j = 0; j < 4; j++) {\n           aChar = str.charAt(++i);\n           int digit = Character.digit(aChar, 16);\n           value = (value << 4) + digit;\n         }\n         outBuffer.append((char)value);\n         break;\n       default:\n-        outBuffer.append(aChar);\n+        if ((aChar < 0x0020) || (aChar > 0x007e)) {\n+          outBuffer.append(aChar);\n+        } else {\n+          outBuffer.append(\"=\");\n+          outBuffer.append(Character.toUpperCase(Character.forDigit((aChar >> 4) & 0x0F, 16)));\n+          outBuffer.append(Character.toUpperCase(Character.forDigit(aChar & 0x0F, 16)));\n+        }\n         break;\n       }\n   }\n   return outBuffer.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}