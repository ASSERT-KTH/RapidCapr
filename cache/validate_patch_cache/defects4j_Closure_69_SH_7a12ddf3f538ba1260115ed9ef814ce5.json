{
    "patch": "      if (functionJSDocInfo != null && functionJSDocInfo.getTypeNode() != null) {\n        Node thisType = functionJSDocInfo.getTypeNode().getFirstChild();\n        if (thisType.getToken() != Token.QMARK &&\n            thisType.getToken() != Token.STRING_KEY &&\n            thisType.getToken() != Token.STRING) { // Disallow untyped 'this'\n          Node parent = n.getParent();\n          if (!parent.isGetProp() && !parent.isGetElem()) { // Require GETPROP/GETELEM\n            report(t, n, WRONG_PARAMETER_ORDER);\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..32f6a0d5 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      if (functionJSDocInfo != null && functionJSDocInfo.getTypeNode() != null) {\n+        Node thisType = functionJSDocInfo.getTypeNode().getFirstChild();\n+        if (thisType.getToken() != Token.QMARK &&\n+            thisType.getToken() != Token.STRING_KEY &&\n+            thisType.getToken() != Token.STRING) { // Disallow untyped 'this'\n+          Node parent = n.getParent();\n+          if (!parent.isGetProp() && !parent.isGetElem()) { // Require GETPROP/GETELEM\n+            report(t, n, WRONG_PARAMETER_ORDER);\n+          }\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}