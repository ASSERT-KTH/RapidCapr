{
    "patch": "        // Maybe STRING, GET, SET\n        if (child.isString()) {\n          processStringKey(child);\n        } else if ((child.isGetterDef() || child.isSetterDef()) &&\n            NodeUtil.getFnName(child) != null) {\n          // Intercept getters/setters\n          processStringKey(NodeUtil.getFnName(child));\n          defineFunctionLiteral(child);\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..81825436 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,15 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        // Maybe STRING, GET, SET\n+        if (child.isString()) {\n+          processStringKey(child);\n+        } else if ((child.isGetterDef() || child.isSetterDef()) &&\n+            NodeUtil.getFnName(child) != null) {\n+          // Intercept getters/setters\n+          processStringKey(NodeUtil.getFnName(child));\n+          defineFunctionLiteral(child);\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}