{
    "patch": "public Object execute(Object[] args) throws Throwable {\n    try {\n        // rest of the code ...\n        \n        if (returnValue == null && returnType != void.class) {\n            if (returnType.isArray()) {\n                returnValue = Array.newInstance(returnType.getComponentType(), 0);\n            } else if (Iterable.class.isAssignableFrom(returnType)) {\n                returnValue = Collections.emptySet();\n            }\n        }\n        \n        // rest of the code ...\n        \n        return returnValue;\n    } catch (Throwable e) {\n        throw e;\n    } finally {\n        if (closeable != null) {\n            closeable.close();\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}