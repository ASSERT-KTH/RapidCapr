{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n    int index = 2;\n    char ch;\n    while (index < len && ((ch = str.charAt(index)) != '_' && ch != '-' && (ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z'))) {\n        index++;\n    }\n    if (index == len) {\n        return new Locale(str.substring(0, 2), str.substring(2));\n    }\n    if (ch == '_' || ch == '-') {\n        return new Locale(str.substring(0, 2), str.substring(2, index), \"\");\n    }\n    int index2 = index + 1;\n    while (index2 < len && ((ch = str.charAt(index2)) != '_' && ch != '-' && (ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z'))) {\n        index2++;\n    }\n    if (index2 == len) {\n        return new Locale(str.substring(0, 2), str.substring(2, index), str.substring(index + 1));\n    }\n    if (ch == '_' || ch == '-') {\n        return new Locale(str.substring(0, 2), str.substring(2, index), str.substring(index + 1, index2));\n    }\n    return new Locale(str.substring(0, 2), str.substring(2, index), str.substring(index + 1));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..a8a6e235 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,45 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n-        }\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n     }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    }\n+    int index = 2;\n+    char ch;\n+    while (index < len && ((ch = str.charAt(index)) != '_' && ch != '-' && (ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z'))) {\n+        index++;\n+    }\n+    if (index == len) {\n+        return new Locale(str.substring(0, 2), str.substring(2));\n+    }\n+    if (ch == '_' || ch == '-') {\n+        return new Locale(str.substring(0, 2), str.substring(2, index), \"\");\n+    }\n+    int index2 = index + 1;\n+    while (index2 < len && ((ch = str.charAt(index2)) != '_' && ch != '-' && (ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z'))) {\n+        index2++;\n+    }\n+    if (index2 == len) {\n+        return new Locale(str.substring(0, 2), str.substring(2, index), str.substring(index + 1));\n+    }\n+    if (ch == '_' || ch == '-') {\n+        return new Locale(str.substring(0, 2), str.substring(2, index), str.substring(index + 1, index2));\n+    }\n+    return new Locale(str.substring(0, 2), str.substring(2, index), str.substring(index + 1));\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: variable ch might not have been initialized",
    "test_result": "ERROR"
}