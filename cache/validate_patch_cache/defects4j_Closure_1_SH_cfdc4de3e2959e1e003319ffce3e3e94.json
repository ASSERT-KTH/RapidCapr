{
    "patch": "    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n    \n    // Traverse the function to build a map of used parameters\n    Map<String, Boolean> usedParamMap = new LinkedHashMap<>();\n    NodeTraversal.traverse(compiler, function, new UsedParameterVisitor(usedParamMap));\n\n    // If all the parameters are used, do nothing.\n    // Otherwise, remove the unused parameters from the AST.\n    Node argList = getFunctionArgList(function);\n    if (argList.hasChildren() && !usedParamMap.containsValue(false)) {\n        return;\n    } else {\n        Node lastArg;\n        while ((lastArg = argList.getLastChild()) != null) {\n            Var var = fnScope.getVar(lastArg.getString());\n            if (!usedParamMap.containsKey(lastArg.getString())) {\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            }\n            else {\n                break;\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5179e03b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,36 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+    \n+    // Traverse the function to build a map of used parameters\n+    Map<String, Boolean> usedParamMap = new LinkedHashMap<>();\n+    NodeTraversal.traverse(compiler, function, new UsedParameterVisitor(usedParamMap));\n+\n+    // If all the parameters are used, do nothing.\n+    // Otherwise, remove the unused parameters from the AST.\n+    Node argList = getFunctionArgList(function);\n+    if (argList.hasChildren() && !usedParamMap.containsValue(false)) {\n+        return;\n+    } else {\n+        Node lastArg;\n+        while ((lastArg = argList.getLastChild()) != null) {\n+            Var var = fnScope.getVar(lastArg.getString());\n+            if (!usedParamMap.containsKey(lastArg.getString())) {\n+                argList.removeChild(lastArg);\n+                compiler.reportCodeChange();\n+            }\n+            else {\n+                break;\n+            }\n+        }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}