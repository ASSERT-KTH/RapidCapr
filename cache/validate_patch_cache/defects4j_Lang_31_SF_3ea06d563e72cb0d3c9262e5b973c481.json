{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int csLength = sequence.length();\n    final int searchLength = searchChars.length;\n    final int csLast = csLength - 1;\n    final int searchLast = searchLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        final char ch = sequence.charAt(i);\n        if (Arrays.binarySearch(searchChars, ch) >= 0) {\n            if (Character.isHighSurrogate(ch)) {\n                if (i < csLast) {\n                    final char ch2 = sequence.charAt(i + 1);\n                    if (Character.isLowSurrogate(ch2)) {\n                        if (Arrays.binarySearch(searchChars, ch2) >= 0) {\n                            return true;\n                        }\n                    }\n                }\n            } else {\n                if (searchLast == 0) {\n                    return true;\n                }\n                for (int j = i + 1; j < csLength && j <= i + searchLast; j++) {\n                    final char ch2 = sequence.charAt(j);\n                    if (Character.isHighSurrogate(ch2)) {\n                        if (j < csLast) {\n                            final char ch3 = sequence.charAt(j + 1);\n                            if (Character.isLowSurrogate(ch3)) {\n                                if (Arrays.binarySearch(searchChars, ch2) >= 0 && Arrays.binarySearch(\n                                        searchChars, ch3) >= 0) {\n                                    return true;\n                                }\n                            }\n                        }\n                    } else if (Arrays.binarySearch(searchChars, ch2) >= 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..85cb4a79 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,51 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int csLength = sequence.length();\n+    final int searchLength = searchChars.length;\n+    final int csLast = csLength - 1;\n+    final int searchLast = searchLength - 1;\n+    for (int i = 0; i < csLength; i++) {\n+        final char ch = sequence.charAt(i);\n+        if (Arrays.binarySearch(searchChars, ch) >= 0) {\n+            if (Character.isHighSurrogate(ch)) {\n+                if (i < csLast) {\n+                    final char ch2 = sequence.charAt(i + 1);\n+                    if (Character.isLowSurrogate(ch2)) {\n+                        if (Arrays.binarySearch(searchChars, ch2) >= 0) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            } else {\n+                if (searchLast == 0) {\n+                    return true;\n+                }\n+                for (int j = i + 1; j < csLength && j <= i + searchLast; j++) {\n+                    final char ch2 = sequence.charAt(j);\n+                    if (Character.isHighSurrogate(ch2)) {\n+                        if (j < csLast) {\n+                            final char ch3 = sequence.charAt(j + 1);\n+                            if (Character.isLowSurrogate(ch3)) {\n+                                if (Arrays.binarySearch(searchChars, ch2) >= 0 && Arrays.binarySearch(\n+                                        searchChars, ch3) >= 0) {\n+                                    return true;\n+                                }\n+                            }\n+                        }\n+                    } else if (Arrays.binarySearch(searchChars, ch2) >= 0) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}