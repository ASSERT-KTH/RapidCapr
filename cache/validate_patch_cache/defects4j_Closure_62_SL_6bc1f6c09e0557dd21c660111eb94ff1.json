{
    "patch": "        if (sourceExcerpt != null) {\n            b.append(sourceExcerpt);\n            b.append('\\n');\n            int charno = error.getCharno();\n            int maxIndex = sourceExcerpt.length() - 1;\n            if (charno >= 0 && charno <= maxIndex && excerpt.equals(LINE)) {\n                for (int i = 0; i <= maxIndex; i++) {\n                    char c = sourceExcerpt.charAt(i);\n                    if (Character.isWhitespace(c)) {\n                        b.append(c);\n                    } else {\n                        b.append(' ');\n                    }\n                }\n                b.append(\"^\\n\");\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..4316e377 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,22 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+        if (sourceExcerpt != null) {\n+            b.append(sourceExcerpt);\n+            b.append('\\n');\n+            int charno = error.getCharno();\n+            int maxIndex = sourceExcerpt.length() - 1;\n+            if (charno >= 0 && charno <= maxIndex && excerpt.equals(LINE)) {\n+                for (int i = 0; i <= maxIndex; i++) {\n+                    char c = sourceExcerpt.charAt(i);\n+                    if (Character.isWhitespace(c)) {\n+                        b.append(c);\n+                    } else {\n+                        b.append(' ');\n+                    }\n+                }\n+                b.append(\"^\\n\");\n+            }\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}