{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    if (meanImpl == null) {\n        meanImpl = new Mean();\n    }\n    if (varianceImpl == null) {\n        varianceImpl = new Variance();\n    }\n    if (geoMeanImpl == null) {\n        geoMeanImpl = new GeometricMean();\n    }\n\n    //temprary variables to ensure that stats object is not modified if there is an error\n    SummaryStatistics temp1 = new SummaryStatistics();\n    SummaryStatistics temp2 = new SummaryStatistics();\n    SummaryStatistics temp3 = new SummaryStatistics();\n    temp1.copy(this);\n    temp2.copy(this);\n    temp3.copy(this);\n\n    meanImpl.increment(value);\n    varianceImpl.increment(value);\n    geoMeanImpl.increment(value);\n\n    //evaluate mean, variance and geometric mean\n    if (meanImpl instanceof StorelessUnivariateStatistic) {\n        ((StorelessUnivariateStatistic) meanImpl).increment(value);\n        meanImpl = ((StorelessUnivariateStatistic) meanImpl).copy();\n        meanImpl.evaluate(temp1.getValues(), 0, temp1.getN());\n    } else if (meanImpl instanceof UnivariateStatistic) {\n        ((UnivariateStatistic) meanImpl).increment(value);\n        ((UnivariateStatistic) meanImpl).evaluate(temp1.getValues(), 0, temp1.getN());\n    }\n\n    if (varianceImpl instanceof StorelessUnivariateStatistic) {\n        ((StorelessUnivariateStatistic) varianceImpl).increment(value);\n        varianceImpl = ((StorelessUnivariateStatistic) varianceImpl).copy();\n        varianceImpl.evaluate(temp2.getValues(), 0, temp2.getN());\n    } else if (varianceImpl instanceof UnivariateStatistic) {\n        ((UnivariateStatistic) varianceImpl).increment(value);\n        ((UnivariateStatistic) varianceImpl).evaluate(temp2.getValues(), 0, temp2.getN());\n    }\n\n    if (geoMeanImpl instanceof StorelessUnivariateStatistic) {\n        ((StorelessUnivariateStatistic) geoMeanImpl).increment(value);\n        geoMeanImpl = ((StorelessUnivariateStatistic) geoMeanImpl).copy();\n        geoMeanImpl.evaluate(temp3.getValues(), 0, temp3.getN());\n    } else if (geoMeanImpl instanceof UnivariateStatistic) {\n        ((UnivariateStatistic) geoMeanImpl).increment(value);\n        ((UnivariateStatistic) geoMeanImpl).evaluate(temp3.getValues(), 0, temp3.getN());\n    }\n\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..65d81cc61 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,65 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n-        }\n-        n++;\n-    }\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    if (meanImpl == null) {\n+        meanImpl = new Mean();\n+    }\n+    if (varianceImpl == null) {\n+        varianceImpl = new Variance();\n+    }\n+    if (geoMeanImpl == null) {\n+        geoMeanImpl = new GeometricMean();\n+    }\n+\n+    //temprary variables to ensure that stats object is not modified if there is an error\n+    SummaryStatistics temp1 = new SummaryStatistics();\n+    SummaryStatistics temp2 = new SummaryStatistics();\n+    SummaryStatistics temp3 = new SummaryStatistics();\n+    temp1.copy(this);\n+    temp2.copy(this);\n+    temp3.copy(this);\n+\n+    meanImpl.increment(value);\n+    varianceImpl.increment(value);\n+    geoMeanImpl.increment(value);\n+\n+    //evaluate mean, variance and geometric mean\n+    if (meanImpl instanceof StorelessUnivariateStatistic) {\n+        ((StorelessUnivariateStatistic) meanImpl).increment(value);\n+        meanImpl = ((StorelessUnivariateStatistic) meanImpl).copy();\n+        meanImpl.evaluate(temp1.getValues(), 0, temp1.getN());\n+    } else if (meanImpl instanceof UnivariateStatistic) {\n+        ((UnivariateStatistic) meanImpl).increment(value);\n+        ((UnivariateStatistic) meanImpl).evaluate(temp1.getValues(), 0, temp1.getN());\n+    }\n+\n+    if (varianceImpl instanceof StorelessUnivariateStatistic) {\n+        ((StorelessUnivariateStatistic) varianceImpl).increment(value);\n+        varianceImpl = ((StorelessUnivariateStatistic) varianceImpl).copy();\n+        varianceImpl.evaluate(temp2.getValues(), 0, temp2.getN());\n+    } else if (varianceImpl instanceof UnivariateStatistic) {\n+        ((UnivariateStatistic) varianceImpl).increment(value);\n+        ((UnivariateStatistic) varianceImpl).evaluate(temp2.getValues(), 0, temp2.getN());\n+    }\n+\n+    if (geoMeanImpl instanceof StorelessUnivariateStatistic) {\n+        ((StorelessUnivariateStatistic) geoMeanImpl).increment(value);\n+        geoMeanImpl = ((StorelessUnivariateStatistic) geoMeanImpl).copy();\n+        geoMeanImpl.evaluate(temp3.getValues(), 0, temp3.getN());\n+    } else if (geoMeanImpl instanceof UnivariateStatistic) {\n+        ((UnivariateStatistic) geoMeanImpl).increment(value);\n+        ((UnivariateStatistic) geoMeanImpl).evaluate(temp3.getValues(), 0, temp3.getN());\n+    }\n+\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: no suitable method found for copy(SummaryStatistics)",
    "test_result": "ERROR"
}