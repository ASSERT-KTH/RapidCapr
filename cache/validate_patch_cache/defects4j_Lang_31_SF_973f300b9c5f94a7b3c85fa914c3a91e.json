{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int foundCount = 0;\n    for (int i = 0; i < strLen; i++) {\n        int ch = str.charAt(i);\n        if (Character.isHighSurrogate((char) ch)) {\n            if (++i == strLen) {\n                break;\n            }\n            ch = Character.toCodePoint((char) ch, str.charAt(i));\n        }\n        for (int j = 0; j < searchLen; j++) {\n            if (searchChars[j] == ch) {\n                foundCount++;\n                break;\n            }\n        }\n        if (foundCount == searchLen) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..3e237cc0 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int foundCount = 0;\n+    for (int i = 0; i < strLen; i++) {\n+        int ch = str.charAt(i);\n+        if (Character.isHighSurrogate((char) ch)) {\n+            if (++i == strLen) {\n+                break;\n+            }\n+            ch = Character.toCodePoint((char) ch, str.charAt(i));\n+        }\n+        for (int j = 0; j < searchLen; j++) {\n+            if (searchChars[j] == ch) {\n+                foundCount++;\n+                break;\n+            }\n+        }\n+        if (foundCount == searchLen) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}