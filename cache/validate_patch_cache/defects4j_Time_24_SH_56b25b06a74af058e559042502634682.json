{
    "patch": "DurationField years = DurationFieldType.years().getField(iChrono);\nDurationField weeks = DurationFieldType.weeks().getField(iChrono);\nif (first instanceof WeekYearDateTimeField) {\n    if (iDefaultYear == null) {\n        if (savedFields != null) {\n            for (int i = 0; i < count; ++i) {\n                if (savedFields[i].iField instanceof BasicYearDateTimeField) {\n                    iDefaultYear = ((Integer) savedFields[i].getValue()).intValue();\n                    break;\n                }\n            }\n        }\n        if (iDefaultYear == null) {\n            iDefaultYear = Integer.valueOf(iChrono.set(iMillis, \"1970-01-01T00:00:00.000\").getYear());\n        }\n    }\n    int year = ((WeekYearDateTimeField) first).getWeekyear(millis, iDefaultYear);\n    millis = years.set(millis, year);\n    millis = first.set(millis, year);\n    count--;\n} else if (first == weeks && iDefaultYear == null) {\n    int thisYear = iChrono.year().get(millis);\n    int thisWeekyear = ((AbstractPartial) new LocalDate(thisYear, 1, 1)).getWeekyear();\n    iDefaultYear = Integer.valueOf(estimateYear(thisWeekyear, thisYear));\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..dbf6b9b8 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,31 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+DurationField years = DurationFieldType.years().getField(iChrono);\n+DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n+if (first instanceof WeekYearDateTimeField) {\n+    if (iDefaultYear == null) {\n+        if (savedFields != null) {\n+            for (int i = 0; i < count; ++i) {\n+                if (savedFields[i].iField instanceof BasicYearDateTimeField) {\n+                    iDefaultYear = ((Integer) savedFields[i].getValue()).intValue();\n+                    break;\n+                }\n+            }\n+        }\n+        if (iDefaultYear == null) {\n+            iDefaultYear = Integer.valueOf(iChrono.set(iMillis, \"1970-01-01T00:00:00.000\").getYear());\n+        }\n+    }\n+    int year = ((WeekYearDateTimeField) first).getWeekyear(millis, iDefaultYear);\n+    millis = years.set(millis, year);\n+    millis = first.set(millis, year);\n+    count--;\n+} else if (first == weeks && iDefaultYear == null) {\n+    int thisYear = iChrono.year().get(millis);\n+    int thisWeekyear = ((AbstractPartial) new LocalDate(thisYear, 1, 1)).getWeekyear();\n+    iDefaultYear = Integer.valueOf(estimateYear(thisWeekyear, thisYear));\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}