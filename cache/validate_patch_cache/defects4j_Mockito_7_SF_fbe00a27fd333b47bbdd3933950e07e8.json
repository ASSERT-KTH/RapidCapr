{
    "patch": "private void readTypeVariables() {\n    if (typeVariable == null) {\n        return;\n    }\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n    if (typeVariable instanceof ParameterizedType) {\n        Type[] actualTypeArguments = ((ParameterizedType) typeVariable).getActualTypeArguments();\n        if (actualTypeArguments != null) {\n            for (Type actualTypeArgument : actualTypeArguments) {\n                if (actualTypeArgument instanceof TypeVariable) {\n                    readTypeVariablesOnTypeVariable((TypeVariable<?>) actualTypeArgument);\n                } else {\n                    registerTypeVariablesOn(actualTypeArgument);\n                }\n            }\n        }\n    } else if (typeVariable instanceof TypeVariable) {\n        readTypeVariablesOnTypeVariable((TypeVariable<?>) typeVariable);\n    }\n}\n\nprivate void readTypeVariablesOnTypeVariable(TypeVariable<?> typeVar) {\n    for (Type type : typeVar.getBounds()) {\n        if (type instanceof TypeVariable) {\n            readTypeVariablesOnTypeVariable((TypeVariable<?>) type);\n        } else {\n            registerTypeVariablesOn(type);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b93e8e107 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,39 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    if (typeVariable == null) {\n+        return;\n+    }\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+    if (typeVariable instanceof ParameterizedType) {\n+        Type[] actualTypeArguments = ((ParameterizedType) typeVariable).getActualTypeArguments();\n+        if (actualTypeArguments != null) {\n+            for (Type actualTypeArgument : actualTypeArguments) {\n+                if (actualTypeArgument instanceof TypeVariable) {\n+                    readTypeVariablesOnTypeVariable((TypeVariable<?>) actualTypeArgument);\n+                } else {\n+                    registerTypeVariablesOn(actualTypeArgument);\n+                }\n+            }\n+        }\n+    } else if (typeVariable instanceof TypeVariable) {\n+        readTypeVariablesOnTypeVariable((TypeVariable<?>) typeVariable);\n+    }\n+}\n+\n+private void readTypeVariablesOnTypeVariable(TypeVariable<?> typeVar) {\n+    for (Type type : typeVar.getBounds()) {\n+        if (type instanceof TypeVariable) {\n+            readTypeVariablesOnTypeVariable((TypeVariable<?>) type);\n+        } else {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}