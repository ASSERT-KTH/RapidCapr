{
    "patch": "@Override\npublic ReturnValue execute() {\n    ReturnValue values = new ReturnValue();\n    try {\n        BufferedReader reader = new BufferedReader(new FileReader(filename));\n        String line = reader.readLine();\n        while (line != null) {\n            if (line.isEmpty() || line.startsWith(\"#\")) {\n                line = reader.readLine();\n                continue;\n            }\n            values.addReturnValue(Integer.parseInt(line));\n            line = reader.readLine();\n        }\n    } catch (IOException | NumberFormatException e) {\n        values.addException(e);\n    }\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}