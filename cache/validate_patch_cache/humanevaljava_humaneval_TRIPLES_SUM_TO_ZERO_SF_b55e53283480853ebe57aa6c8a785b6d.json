{
    "patch": "public static boolean triples_sum_to_zero(int[] numbers) {\n    Arrays.sort(numbers);\n    int n = numbers.length;\n    for (int i = 0; i < n - 2; i++) {\n        int left = i + 1;\n        int right = n - 1;\n        while (left < right) {\n            int sum = numbers[i] + numbers[left] + numbers[right];\n            if (sum == 0) {\n                return true;\n            } else if (sum < 0) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\nindex e851652..d8bcf0c 100644\n--- a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n+++ b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n@@ -18,15 +18,23 @@ False\n */\n \n public class TRIPLES_SUM_TO_ZERO {\n-    public static boolean triples_sum_to_zero(int[] numbers) {\n-        for (int i = 0; i < numbers.length; i += 1) {\n-            for (int j = i; j < numbers.length; j += 1) {\n-                for (int k = j; k < numbers.length; k += 1) {\n-                    if (numbers[i] + numbers[j] + numbers[k] == 0)\n-                        return true;\n-                }\n+public static boolean triples_sum_to_zero(int[] numbers) {\n+    Arrays.sort(numbers);\n+    int n = numbers.length;\n+    for (int i = 0; i < n - 2; i++) {\n+        int left = i + 1;\n+        int right = n - 1;\n+        while (left < right) {\n+            int sum = numbers[i] + numbers[left] + numbers[right];\n+            if (sum == 0) {\n+                return true;\n+            } else if (sum < 0) {\n+                left++;\n+            } else {\n+                right--;\n             }\n         }\n-        return false;\n     }\n+    return false;\n+}\n }",
    "result_reason": " /tmp/humaneval-TRIPLES_SUM_TO_ZERO/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java:[22,5] cannot find symbol",
    "test_result": "ERROR"
}