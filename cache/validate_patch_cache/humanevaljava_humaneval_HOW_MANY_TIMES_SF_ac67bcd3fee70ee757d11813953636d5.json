{
    "patch": "    public static int how_many_times(String string, String substring) {\n        if (string == null || substring == null || substring.isEmpty()) {\n            return 0; // return 0 if the input is invalid or if substring is empty\n        }\n        int times = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++) {\n            if (string.regionMatches(i, substring, 0, substring.length())) {\n                times++;\n                i += substring.length() - 1; // skip the substring length to avoid overlapping occurrences\n            }\n        }\n        return times;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java b/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java\nindex fbdb46b..8f37737 100644\n--- a/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java\n+++ b/src/main/java/humaneval/buggy/HOW_MANY_TIMES.java\n@@ -2,10 +2,14 @@ package humaneval.buggy;\n \n public class HOW_MANY_TIMES {\n     public static int how_many_times(String string, String substring) {\n+        if (string == null || substring == null || substring.isEmpty()) {\n+            return 0; // return 0 if the input is invalid or if substring is empty\n+        }\n         int times = 0;\n-        for (int i = 0; i < string.length() - substring.length(); i += 1) {\n-            if (string.substring(i, i + substring.length()).equals(substring)){\n-                times += 1;\n+        for (int i = 0; i <= string.length() - substring.length(); i++) {\n+            if (string.regionMatches(i, substring, 0, substring.length())) {\n+                times++;\n+                i += substring.length() - 1; // skip the substring length to avoid overlapping occurrences\n             }\n         }\n         return times;",
    "result_reason": "   TEST_HOW_MANY_TIMES.test_2:23 expected:<2> but was:<4>",
    "test_result": "FAIL"
}