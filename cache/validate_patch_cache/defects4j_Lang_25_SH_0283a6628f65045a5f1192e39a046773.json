{
    "patch": "for(int i = 0, j = 0; i < inputString.length; i++, j++) {\n    if(j == BYTE_ARRAY_LEN) {\n        outBuffer.append(new String(byteArray, ENCODING));\n        byteArray = new byte[BYTE_ARRAY_LEN];\n        j = 0;\n    }\n    if(inputString[i] == '\\\\') {\n        if(i < inputString.length - 1 && inputString[i+1] == 'n') {\n            byteArray[j] = '\\n';\n            i++;\n            continue;\n        }\n        if(i < inputString.length - 3 && inputString[i+1] == '0'\n                && inputString[i+2] == '0' && inputString[i+3] == 'a') {\n            byteArray[j] = '\\n';\n            i += 3;\n            continue;\n        }\n        byteArray[j] = inputString[i];\n    } else {\n        byteArray[j] = inputString[i];\n    }\n}\n\n// append remaining bytes\noutBuffer.append(new String(byteArray, ENCODING).trim());\nsuccess = true;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}