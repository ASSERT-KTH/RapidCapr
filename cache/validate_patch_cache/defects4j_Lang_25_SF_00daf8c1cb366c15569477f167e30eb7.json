{
    "patch": "public static String unescape(String s) {\n    StringBuilder buf = new StringBuilder(s.length());\n    for (int i = 0; i < s.length(); i++) {\n        char ch = s.charAt(i);\n        if (ch == '\\\\') {\n            if (++i >= s.length()) {\n                throw new IllegalArgumentException(\"Invalid escape sequence: '\\\\' at end of string.\");\n            }\n            ch = s.charAt(i);\n            switch (ch) {\n                case 'b':\n                    buf.append('\\b');\n                    break;\n                case 'f':\n                    buf.append('\\f');\n                    break;\n                case 'n':\n                    buf.append('\\n');\n                    break;\n                case 'r':\n                    buf.append('\\r');\n                    break;\n                case 't':\n                    buf.append('\\t');\n                    break;\n                case 'u':\n                    if (i + 4 >= s.length()) {\n                        throw new IllegalArgumentException(\"Invalid unicode escape sequence: '\\\\u' at end of string.\");\n                    }\n                    int code = Integer.parseInt(s.substring(i + 1, i + 5), 16);\n                    buf.append((char) code);\n                    i += 4;\n                    break;\n                case 'x':\n                    if (i + 2 >= s.length()) {\n                        throw new IllegalArgumentException(\"Invalid hexadecimal escape sequence: '\\\\x' at end of string.\");\n                    }\n                    int hexCode = Integer.parseInt(s.substring(i + 1, i + 3), 16);\n                    buf.append((char) hexCode);\n                    i += 2;\n                    break;\n                default:\n                    buf.append(ch);\n                    break;\n            }\n        } else {\n            buf.append(ch);\n        }\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..942368d0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,57 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    StringBuilder buf = new StringBuilder(s.length());\n+    for (int i = 0; i < s.length(); i++) {\n+        char ch = s.charAt(i);\n+        if (ch == '\\\\') {\n+            if (++i >= s.length()) {\n+                throw new IllegalArgumentException(\"Invalid escape sequence: '\\\\' at end of string.\");\n+            }\n+            ch = s.charAt(i);\n+            switch (ch) {\n+                case 'b':\n+                    buf.append('\\b');\n+                    break;\n+                case 'f':\n+                    buf.append('\\f');\n+                    break;\n+                case 'n':\n+                    buf.append('\\n');\n+                    break;\n+                case 'r':\n+                    buf.append('\\r');\n+                    break;\n+                case 't':\n+                    buf.append('\\t');\n+                    break;\n+                case 'u':\n+                    if (i + 4 >= s.length()) {\n+                        throw new IllegalArgumentException(\"Invalid unicode escape sequence: '\\\\u' at end of string.\");\n+                    }\n+                    int code = Integer.parseInt(s.substring(i + 1, i + 5), 16);\n+                    buf.append((char) code);\n+                    i += 4;\n+                    break;\n+                case 'x':\n+                    if (i + 2 >= s.length()) {\n+                        throw new IllegalArgumentException(\"Invalid hexadecimal escape sequence: '\\\\x' at end of string.\");\n+                    }\n+                    int hexCode = Integer.parseInt(s.substring(i + 1, i + 3), 16);\n+                    buf.append((char) hexCode);\n+                    i += 2;\n+                    break;\n+                default:\n+                    buf.append(ch);\n+                    break;\n+            }\n+        } else {\n+            buf.append(ch);\n+        }\n+    }\n+    return buf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}