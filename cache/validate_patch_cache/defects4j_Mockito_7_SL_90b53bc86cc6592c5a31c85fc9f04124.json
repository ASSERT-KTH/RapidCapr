{
    "patch": "TypeVariable<?> typeVariable = ...\nif (typeVariable == null) {\n    return;\n}\nfor (Type type : typeVariable.getBounds()) {\n    registerTypeVariablesOn(type);\n}\nregisterTypeVariablesOn(getActualTypeArgumentFor(typeVariable));",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..3248d78dd 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+TypeVariable<?> typeVariable = ...\n+if (typeVariable == null) {\n+    return;\n+}\n+for (Type type : typeVariable.getBounds()) {\n+    registerTypeVariablesOn(type);\n+}\n+registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}