{
    "patch": "if (a <= 0 || b <= 0 || c <= 0) {\n    return false;\n} else if (a + b <= c || b + c <= a || c + a <= b) {\n    return false;\n} else {\n    int[] sideLengths = {a, b, c};\n    Arrays.sort(sideLengths);\n    int smallestSide = sideLengths[0];\n    int mediumSide = sideLengths[1];\n    int longestSide = sideLengths[2];\n    return smallestSide * smallestSide + mediumSide * mediumSide == longestSide * longestSide;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..2160057 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,17 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+if (a <= 0 || b <= 0 || c <= 0) {\n+    return false;\n+} else if (a + b <= c || b + c <= a || c + a <= b) {\n+    return false;\n+} else {\n+    int[] sideLengths = {a, b, c};\n+    Arrays.sort(sideLengths);\n+    int smallestSide = sideLengths[0];\n+    int mediumSide = sideLengths[1];\n+    int longestSide = sideLengths[2];\n+    return smallestSide * smallestSide + mediumSide * mediumSide == longestSide * longestSide;\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[19,5] cannot find symbol",
    "test_result": "ERROR"
}