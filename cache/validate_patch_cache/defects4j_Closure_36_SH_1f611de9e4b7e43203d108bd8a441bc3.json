{
    "patch": "          if (value.isFunction() && convention.getSingletonGetterClassName(value) != null) {\n            // Don't inline singleton functions if they are not in the same basic block as the call.\n            // Issue https://github.com/google/closure-compiler/issues/4285\n            return declaration.getBasicBlock() == reference.getBasicBlock()\n                && declaration.getBasicBlock() == initialization.getBasicBlock();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..e7a00d09 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,11 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (value.isFunction() && convention.getSingletonGetterClassName(value) != null) {\n+            // Don't inline singleton functions if they are not in the same basic block as the call.\n+            // Issue https://github.com/google/closure-compiler/issues/4285\n+            return declaration.getBasicBlock() == reference.getBasicBlock()\n+                && declaration.getBasicBlock() == initialization.getBasicBlock();\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}