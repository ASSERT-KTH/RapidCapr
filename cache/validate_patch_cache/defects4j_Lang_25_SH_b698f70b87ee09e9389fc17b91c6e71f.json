{
    "patch": "int index = 0;\nwhile (index < str.length()) {\n    char c = str.charAt(index);\n    if (needToChange(c)) {\n        break;\n    }\n    ++index;\n}\nif (index == str.length()) {\n    return str;\n}\nStringBuilder sb = new StringBuilder(str.substring(0, index));\nfor (int i = index; i < str.length(); ++i) {\n    char c = str.charAt(i);\n    if (needToChange(c)) {\n        sb.append(replaceHexEscape(c));\n    } else {\n        sb.append(c);\n    }\n}\nreturn sb.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}