{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 2) {\n        return new Locale(str);\n    }\n\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        final int pos = str.indexOf('_', 4);\n        if (pos == -1) {\n            if (!Character.isUpperCase(str.charAt(4)) || len != 5) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        } else {\n            if (!Character.isUpperCase(str.charAt(4)) || !Character.isUpperCase(str.charAt(pos + 1))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (pos + 1 == len) {\n                return new Locale(str.substring(0, 2), \"\", str.substring(4, pos));\n            } else if (len - pos >= 2 && str.charAt(pos + 1) == '_') {\n                return new Locale(str.substring(0, 2), \"\", str.substring(4, pos) + str.substring(pos + 2));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(pos + 1));\n            }\n        }\n    }\n\n    final char ch4 = str.charAt(4);\n    if (ch4 != '_' || !Character.isUpperCase(ch3)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n\n    if (len < 7 || str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    final String variant = str.substring(6);\n    if (variant.isEmpty()) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    } else {\n        return new Locale(str.substring(0, 2), str.substring(3, 5), variant);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..93e906d2 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,48 +85,77 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n+public static Locale toLocale(final String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final char ch0 = str.charAt(0);\n+    final char ch1 = str.charAt(1);\n+    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 2) {\n+        return new Locale(str);\n+    }\n+\n+    if (len < 5) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (str.charAt(2) != '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final char ch3 = str.charAt(3);\n+    if (ch3 == '_') {\n+        final int pos = str.indexOf('_', 4);\n+        if (pos == -1) {\n+            if (!Character.isUpperCase(str.charAt(4)) || len != 5) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n+            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n+        } else {\n+            if (!Character.isUpperCase(str.charAt(4)) || !Character.isUpperCase(str.charAt(pos + 1))) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            if (pos + 1 == len) {\n+                return new Locale(str.substring(0, 2), \"\", str.substring(4, pos));\n+            } else if (len - pos >= 2 && str.charAt(pos + 1) == '_') {\n+                return new Locale(str.substring(0, 2), \"\", str.substring(4, pos) + str.substring(pos + 2));\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(pos + 1));\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n     }\n \n+    final char ch4 = str.charAt(4);\n+    if (ch4 != '_' || !Character.isUpperCase(ch3)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 5) {\n+        return new Locale(str.substring(0, 2), str.substring(3, 5));\n+    }\n+\n+    if (len < 7 || str.charAt(5) != '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    final String variant = str.substring(6);\n+    if (variant.isEmpty()) {\n+        return new Locale(str.substring(0, 2), str.substring(3, 5));\n+    } else {\n+        return new Locale(str.substring(0, 2), str.substring(3, 5), variant);\n+    }\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}