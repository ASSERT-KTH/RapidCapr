{
    "patch": "void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n      return;\n    }\n\n    char c = newcode.charAt(0);\n    if ((isWordChar(c) || c == '\\\\') &&\n        isWordChar(getLastChar())) {\n      // need space to separate. This is not pretty printing.\n      // For example: \"return foo;\"\n      append(\" \");\n    }\n\n    // check if the last two characters appended were forward slashes\n    // and the new code starts with a forward slash\n    String lastTwoChars = getLastChars(2);\n    if (lastTwoChars.equals(\"//\") && newcode.startsWith(\"/\")) {\n      // need space to separate\n      append(\" \");\n    }\n\n    append(newcode);\n}\n\n// utility function to retrieve last n characters appended\nprivate String getLastChars(int n) {\n  if (n > code.length()) {\n    return code.toString();\n  }\n  return code.substring(code.length()-n, code.length());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..539ac2e4 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,7 +178,7 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n+void add(String newcode) {\n     maybeEndStatement();\n \n     if (newcode.length() == 0) {\n@@ -191,15 +191,26 @@ abstract class CodeConsumer {\n       // need space to separate. This is not pretty printing.\n       // For example: \"return foo;\"\n       append(\" \");\n-      // Do not allow a forward slash to appear after a DIV.\n-      // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n+    }\n+\n+    // check if the last two characters appended were forward slashes\n+    // and the new code starts with a forward slash\n+    String lastTwoChars = getLastChars(2);\n+    if (lastTwoChars.equals(\"//\") && newcode.startsWith(\"/\")) {\n+      // need space to separate\n+      append(\" \");\n     }\n \n     append(newcode);\n+}\n+\n+// utility function to retrieve last n characters appended\n+private String getLastChars(int n) {\n+  if (n > code.length()) {\n+    return code.toString();\n   }\n+  return code.substring(code.length()-n, code.length());\n+}\n \n   void appendOp(String op, boolean binOp) {\n     append(op);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}