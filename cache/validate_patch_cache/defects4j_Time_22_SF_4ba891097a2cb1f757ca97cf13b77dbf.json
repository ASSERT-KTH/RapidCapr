{
    "patch": "protected BasePeriod(long duration) {\n    this.duration = new Duration(duration);\n    this.setPeriodFields();\n}\n \nprivate void setPeriodFields() {\n    if (duration.getStandardSeconds() % SECONDS_PER_WEEK == 0) {\n        // Construct period with weeks and remaining time\n        this.weeks = (int) (duration.getStandardSeconds() / SECONDS_PER_WEEK);\n        this.duration = this.duration.minus(Duration.standardSeconds(this.weeks * SECONDS_PER_WEEK));\n    }\n    // Set remaining fields\n    Period period = this.duration.toPeriod(PeriodType.standard(), ISOChronology.getInstanceUTC());\n    this.years = period.getYears();\n    this.months = period.getMonths();\n    this.days = period.getDays();\n    this.hours = period.getHours();\n    this.minutes = period.getMinutes();\n    this.seconds = period.getSeconds();\n    this.millis = period.getMillis();\n}\n \nprivate static final long SECONDS_PER_WEEK = 7 * 24 * 60 * 60;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..21f3b521 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,29 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    this.duration = new Duration(duration);\n+    this.setPeriodFields();\n+}\n+ \n+private void setPeriodFields() {\n+    if (duration.getStandardSeconds() % SECONDS_PER_WEEK == 0) {\n+        // Construct period with weeks and remaining time\n+        this.weeks = (int) (duration.getStandardSeconds() / SECONDS_PER_WEEK);\n+        this.duration = this.duration.minus(Duration.standardSeconds(this.weeks * SECONDS_PER_WEEK));\n+    }\n+    // Set remaining fields\n+    Period period = this.duration.toPeriod(PeriodType.standard(), ISOChronology.getInstanceUTC());\n+    this.years = period.getYears();\n+    this.months = period.getMonths();\n+    this.days = period.getDays();\n+    this.hours = period.getHours();\n+    this.minutes = period.getMinutes();\n+    this.seconds = period.getSeconds();\n+    this.millis = period.getMillis();\n+}\n+ \n+private static final long SECONDS_PER_WEEK = 7 * 24 * 60 * 60;\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}