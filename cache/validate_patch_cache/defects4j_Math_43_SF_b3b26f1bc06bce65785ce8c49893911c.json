{
    "patch": "public void addValue(double value) {\n    if (Double.isNaN(value) || Double.isInfinite(value)) {\n        return;\n    }\n\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    if (!(meanImpl instanceof Mean)) {\n        meanImpl.increment(value);\n    }\n    if (!(varianceImpl instanceof Variance)) {\n        varianceImpl.increment(value);\n    }\n    if (value > 0 && !(geoMeanImpl instanceof GeometricMean)) {\n        geoMeanImpl = new GeometricMean();\n    }\n    if (geoMeanImpl instanceof GeometricMean && value > 0) {\n        geoMeanImpl.increment(value);\n    }\n\n    n++;\n    if (n == Integer.MAX_VALUE) {\n        copy();\n    }\n}\n\nprivate void copy() {\n    sumImpl = sumImpl.copy();\n    sumsqImpl = sumsqImpl.copy();\n    minImpl = minImpl.copy();\n    maxImpl = maxImpl.copy();\n    sumLogImpl = sumLogImpl.copy();\n    secondMoment = secondMoment.copy();\n    if (meanImpl instanceof StorelessUnivariateStatistic) {\n        meanImpl = ((StorelessUnivariateStatistic) meanImpl).copy();\n    }\n    if (varianceImpl instanceof StorelessUnivariateStatistic) {\n        varianceImpl = ((StorelessUnivariateStatistic) varianceImpl).copy();\n    }\n    if (geoMeanImpl instanceof StorelessUnivariateStatistic) {\n        geoMeanImpl = ((StorelessUnivariateStatistic) geoMeanImpl).copy();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..f37512734 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,27 +146,55 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n-        }\n-        n++;\n+public void addValue(double value) {\n+    if (Double.isNaN(value) || Double.isInfinite(value)) {\n+        return;\n+    }\n+\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    if (!(meanImpl instanceof Mean)) {\n+        meanImpl.increment(value);\n+    }\n+    if (!(varianceImpl instanceof Variance)) {\n+        varianceImpl.increment(value);\n+    }\n+    if (value > 0 && !(geoMeanImpl instanceof GeometricMean)) {\n+        geoMeanImpl = new GeometricMean();\n+    }\n+    if (geoMeanImpl instanceof GeometricMean && value > 0) {\n+        geoMeanImpl.increment(value);\n     }\n \n+    n++;\n+    if (n == Integer.MAX_VALUE) {\n+        copy();\n+    }\n+}\n+\n+private void copy() {\n+    sumImpl = sumImpl.copy();\n+    sumsqImpl = sumsqImpl.copy();\n+    minImpl = minImpl.copy();\n+    maxImpl = maxImpl.copy();\n+    sumLogImpl = sumLogImpl.copy();\n+    secondMoment = secondMoment.copy();\n+    if (meanImpl instanceof StorelessUnivariateStatistic) {\n+        meanImpl = ((StorelessUnivariateStatistic) meanImpl).copy();\n+    }\n+    if (varianceImpl instanceof StorelessUnivariateStatistic) {\n+        varianceImpl = ((StorelessUnivariateStatistic) varianceImpl).copy();\n+    }\n+    if (geoMeanImpl instanceof StorelessUnivariateStatistic) {\n+        geoMeanImpl = ((StorelessUnivariateStatistic) geoMeanImpl).copy();\n+    }\n+}\n+\n     /**\n      * Returns the number of available values\n      * @return The number of available values",
    "result_reason": "error: method copy() is already defined in class SummaryStatistics",
    "test_result": "ERROR"
}