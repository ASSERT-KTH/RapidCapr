{
    "patch": "      if (NodeUtil.isGet(parent) &&\n          parent.getParent().getType() != Token.CALL &&\n          parent.getFirstChild().getType() != Token.THIS &&\n          parent.getFirstChild().getType() != Token.NAME &&\n          parent.getFirstChild().getType() != Token.FUNCTION) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..b3a0e924 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,11 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent) &&\n+          parent.getParent().getType() != Token.CALL &&\n+          parent.getFirstChild().getType() != Token.THIS &&\n+          parent.getFirstChild().getType() != Token.NAME &&\n+          parent.getFirstChild().getType() != Token.FUNCTION) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}