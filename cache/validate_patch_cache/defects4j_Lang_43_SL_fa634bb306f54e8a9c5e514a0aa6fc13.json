{
    "patch": "```\nif (escapingOn && start < c.length && c[start] == QUOTE) {\n    next(pos);\n    return appendTo == null ? null : appendTo.append(QUOTE);\n} else {\n    next(pos);\n}\n```",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..fd197a8e 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,14 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+```\n+if (escapingOn && start < c.length && c[start] == QUOTE) {\n+    next(pos);\n+    return appendTo == null ? null : appendTo.append(QUOTE);\n+} else {\n+    next(pos);\n+}\n+```\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}