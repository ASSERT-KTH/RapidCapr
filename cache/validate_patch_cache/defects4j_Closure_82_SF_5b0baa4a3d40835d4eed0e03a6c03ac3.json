{
    "patch": "public final boolean isEmptyType() {\n    return (getKind() == TypeKind.VOID\n            || getKind() == TypeKind.NULL\n            || (getKind() == TypeKind.ARRAY && ((ArrayType) this).getComponentType().isEmptyType())\n            || (getKind() == TypeKind.DECLARED \n                && ((DeclaredType) this).asElement().getKind() == ElementKind.ENUM\n                && ((DeclaredType) this).getTypeArguments().isEmpty()))\n            && isNoType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..0c7de37d 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,15 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    return (getKind() == TypeKind.VOID\n+            || getKind() == TypeKind.NULL\n+            || (getKind() == TypeKind.ARRAY && ((ArrayType) this).getComponentType().isEmptyType())\n+            || (getKind() == TypeKind.DECLARED \n+                && ((DeclaredType) this).asElement().getKind() == ElementKind.ENUM\n+                && ((DeclaredType) this).getTypeArguments().isEmpty()))\n+            && isNoType();\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}