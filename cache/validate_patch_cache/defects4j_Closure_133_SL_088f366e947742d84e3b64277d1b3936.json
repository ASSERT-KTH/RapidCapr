{
    "patch": "try {\n    String line = stream.getRemainingJSDocLine();\n    if (line.contains(\"Bad type annotation.\")) {\n        throw new ParseException(line.split(\". \", 2)[1]);\n    }\n    result = line.trim();\n} catch (IllegalStateException e) {\n    result = \"\";\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..48c1bc86 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,15 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+try {\n+    String line = stream.getRemainingJSDocLine();\n+    if (line.contains(\"Bad type annotation.\")) {\n+        throw new ParseException(line.split(\". \", 2)[1]);\n+    }\n+    result = line.trim();\n+} catch (IllegalStateException e) {\n+    result = \"\";\n+}\n     return result;\n   }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}