{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden,\n    // need to increment these using the correct implementations\n    if (meanImpl == null || meanImpl instanceof Mean) {\n        ((Mean) meanImpl).increment(value);\n    } else {\n        try {\n            Method m = meanImpl.getClass().getMethod(\"increment\", double.class);\n            m.invoke(meanImpl, value);\n        } catch (Exception e) {\n            throw new IllegalArgumentException(\"Custom mean implementation does not have an increment method\");\n        }\n    }\n    if (varianceImpl == null || varianceImpl instanceof Variance) {\n        ((Variance) varianceImpl).increment(value);\n    } else {\n        try {\n            Method m = varianceImpl.getClass().getMethod(\"increment\", double.class);\n            m.invoke(varianceImpl, value);\n        } catch (Exception e) {\n            throw new IllegalArgumentException(\"Custom variance implementation does not have an increment method\");\n        }\n    }\n    if (geoMeanImpl == null || geoMeanImpl instanceof GeometricMean) {\n        ((GeometricMean) geoMeanImpl).increment(value);\n    } else {\n        try {\n            Method m = geoMeanImpl.getClass().getMethod(\"increment\", double.class);\n            m.invoke(geoMeanImpl, value);\n        } catch (Exception e) {\n            throw new IllegalArgumentException(\"Custom geometric mean implementation does not have an increment method\");\n        }\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..1434eb6a6 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,47 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden,\n+    // need to increment these using the correct implementations\n+    if (meanImpl == null || meanImpl instanceof Mean) {\n+        ((Mean) meanImpl).increment(value);\n+    } else {\n+        try {\n+            Method m = meanImpl.getClass().getMethod(\"increment\", double.class);\n+            m.invoke(meanImpl, value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(\"Custom mean implementation does not have an increment method\");\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+    }\n+    if (varianceImpl == null || varianceImpl instanceof Variance) {\n+        ((Variance) varianceImpl).increment(value);\n+    } else {\n+        try {\n+            Method m = varianceImpl.getClass().getMethod(\"increment\", double.class);\n+            m.invoke(varianceImpl, value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(\"Custom variance implementation does not have an increment method\");\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+    }\n+    if (geoMeanImpl == null || geoMeanImpl instanceof GeometricMean) {\n+        ((GeometricMean) geoMeanImpl).increment(value);\n+    } else {\n+        try {\n+            Method m = geoMeanImpl.getClass().getMethod(\"increment\", double.class);\n+            m.invoke(geoMeanImpl, value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(\"Custom geometric mean implementation does not have an increment method\");\n         }\n-        n++;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}