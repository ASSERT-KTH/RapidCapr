{
    "patch": "        JSTypeExpression childTypeExpr = (child.getFirstChild() != null) ?\n            child.getFirstChild().getJSType() :\n            null;\n        T type = typeSystem.evaluateTypeExpressionInGlobalScope(\n            childTypeExpr, getScope(), getCompiler().getCommonTypes());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..ebbdadca 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,11 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        JSTypeExpression childTypeExpr = (child.getFirstChild() != null) ?\n+            child.getFirstChild().getJSType() :\n+            null;\n+        T type = typeSystem.evaluateTypeExpressionInGlobalScope(\n+            childTypeExpr, getScope(), getCompiler().getCommonTypes());\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}