{
    "patch": "I apologize for the previous suggestion not fixing the issue. Here is an updated solution that should work:\n\n```\npublic static int closest_integer(String value) {\n    if (value.indexOf('.') >= 0) {\n        while (value.charAt(value.length() - 1) == '0')\n            value = value.substring(0, value.length() - 1);\n    }\n    double num = Double.parseDouble(value);\n    int result = (int) Math.round(num);\n    if (num - (double)result == 0.5) {\n        result += num > 0 ? 1 : -1;\n    }\n    return result;\n}\n``` \n\nThis should handle cases where the value ends in \".5\" correctly.",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..aa384a3 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -17,20 +17,22 @@ package humaneval.buggy;\n // return 15 and closest_integer(\"-14.5\") should return -15.\n \n public class CLOSEST_INTEGER {\n-    public static int closest_integer(String value) {\n-        if (value.indexOf('.') >= 0) {\n-            while (value.charAt(value.length() - 1) == '0')\n-                value = value.substring(0, value.length() - 1);\n-        }\n+I apologize for the previous suggestion not fixing the issue. Here is an updated solution that should work:\n \n-        double num = Double.parseDouble(value);\n-        int result = 0;\n-        if (value.substring(value.length() - 2).equals(\".5\")) {\n-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n-        } else if (value.length() > 0){\n-            result = (int)Math.round(num);\n-        }\n-\n-        return result;\n+```\n+public static int closest_integer(String value) {\n+    if (value.indexOf('.') >= 0) {\n+        while (value.charAt(value.length() - 1) == '0')\n+            value = value.substring(0, value.length() - 1);\n+    }\n+    double num = Double.parseDouble(value);\n+    int result = (int) Math.round(num);\n+    if (num - (double)result == 0.5) {\n+        result += num > 0 ? 1 : -1;\n     }\n+    return result;\n+}\n+``` \n+\n+This should handle cases where the value ends in \".5\" correctly.\n }",
    "result_reason": " /tmp/humaneval-CLOSEST_INTEGER/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java:[20,12] ';' expected",
    "test_result": "ERROR"
}