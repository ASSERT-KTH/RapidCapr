{
    "patch": "public static boolean isJSIdentifier(String s) {\n  int length = s.length();\n\n  if (length == 0 ||\n      !Character.isJavaIdentifierStart(s.charAt(0))) {\n    return false;\n  }\n\n  for (int i = 1; i < length; i++) {\n    // modify to allow unicode escape sequences in identifiers\n    if (!Character.isJavaIdentifierPart(s.charAt(i)) && s.charAt(i) != '\\\\') {\n      return false;\n    }\n    \n    // check if it is a unicode escape sequence\n    if (s.charAt(i) == '\\\\') {\n      if (i+5 >= length || s.charAt(i+1) != 'u') {\n        return false;\n      }\n      String hex = s.substring(i+2, i+6);\n      try {\n        int code = Integer.parseInt(hex, 16);\n        if (!Character.isJavaIdentifierPart(code)) {\n          return false;\n        }\n      } catch (NumberFormatException e) {\n        return false;\n      }\n      i += 5;\n    }\n  }\n\n  return true;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/TokenStream.java b/src/com/google/javascript/rhino/TokenStream.java\nindex 144a4adc..7fe803c4 100644\n--- a/src/com/google/javascript/rhino/TokenStream.java\n+++ b/src/com/google/javascript/rhino/TokenStream.java\n@@ -187,21 +187,38 @@ public class TokenStream {\n         return id;\n     }\n \n-    public static boolean isJSIdentifier(String s) {\n-      int length = s.length();\n+public static boolean isJSIdentifier(String s) {\n+  int length = s.length();\n \n-      if (length == 0 ||\n-          !Character.isJavaIdentifierStart(s.charAt(0))) {\n+  if (length == 0 ||\n+      !Character.isJavaIdentifierStart(s.charAt(0))) {\n+    return false;\n+  }\n+\n+  for (int i = 1; i < length; i++) {\n+    // modify to allow unicode escape sequences in identifiers\n+    if (!Character.isJavaIdentifierPart(s.charAt(i)) && s.charAt(i) != '\\\\') {\n+      return false;\n+    }\n+    \n+    // check if it is a unicode escape sequence\n+    if (s.charAt(i) == '\\\\') {\n+      if (i+5 >= length || s.charAt(i+1) != 'u') {\n         return false;\n       }\n-\n-      for (int i = 1; i < length; i++) {\n-        if (\n-            !Character.isJavaIdentifierPart(s.charAt(i))) {\n+      String hex = s.substring(i+2, i+6);\n+      try {\n+        int code = Integer.parseInt(hex, 16);\n+        if (!Character.isJavaIdentifierPart(code)) {\n           return false;\n         }\n+      } catch (NumberFormatException e) {\n+        return false;\n       }\n-\n-      return true;\n+      i += 5;\n     }\n+  }\n+\n+  return true;\n+}\n }",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}