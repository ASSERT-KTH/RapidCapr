{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    while (cfgNode != null) {\n      if (cfgNode.isTry(",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..a6d43846 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,8 +157,8 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+    while (cfgNode != null) {\n+      if (cfgNode.isTry(\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}