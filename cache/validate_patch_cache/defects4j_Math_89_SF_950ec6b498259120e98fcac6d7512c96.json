{
    "patch": "public void addValue(Object v) {\n        if (v == null) {\n            throw new IllegalArgumentException(\"Provided object is null\");\n        } else if (!(v instanceof Comparable)) {\n            throw new IllegalArgumentException(\"Provided object is not comparable\");\n        } else {\n            try {\n                addValue((Comparable<?>) v);\n            } catch (ClassCastException e) {\n                throw new IllegalArgumentException(\"Provided object cannot be cast to Comparable type.\", e);\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/Frequency.java b/src/java/org/apache/commons/math/stat/Frequency.java\nindex c8deca31a..2cf07326c 100644\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n@@ -106,8 +106,18 @@ public class Frequency implements Serializable {\n      * @deprecated use {@link #addValue(Comparable)} instead\n      */\n     @Deprecated\n-    public void addValue(Object v) {\n-            addValue((Comparable<?>) v);            \n+public void addValue(Object v) {\n+        if (v == null) {\n+            throw new IllegalArgumentException(\"Provided object is null\");\n+        } else if (!(v instanceof Comparable)) {\n+            throw new IllegalArgumentException(\"Provided object is not comparable\");\n+        } else {\n+            try {\n+                addValue((Comparable<?>) v);\n+            } catch (ClassCastException e) {\n+                throw new IllegalArgumentException(\"Provided object cannot be cast to Comparable type.\", e);\n+            }\n+        }\n     }\n     \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}