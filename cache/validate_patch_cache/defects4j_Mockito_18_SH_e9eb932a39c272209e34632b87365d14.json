{
    "patch": "@Override\npublic ReturnValue execute(Class<?> returnType, Object... args) {\n    for (Method method : methods) {\n        if (method.getReturnType().isAssignableFrom(returnType)) {\n            try {\n                Object returnValue = method.invoke(delegate, args);\n                return ReturnValue.returnValueFor(returnType, returnValue);\n            } catch (Exception e) {\n                // Keep trying other methods\n            }\n        }\n    }\n    // No matching method found\n    return null;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}