{
    "patch": "    if (block.isFunction) {\n        // Declarations within functions are assumed to be assigned to multiple times.\n        return !ref.isInitializingDeclaration();\n    } else if (block.isLoop) {\n        return block == ref.getBasicBlock();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..3a5fc069 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,12 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+    if (block.isFunction) {\n+        // Declarations within functions are assumed to be assigned to multiple times.\n+        return !ref.isInitializingDeclaration();\n+    } else if (block.isLoop) {\n+        return block == ref.getBasicBlock();\n+    }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}