{
    "patch": "                // if we are near the spring DST transition, we need to use the previous offset\n                if (offsetLocal > offsetAdjusted && instantLocal - nextTransition(instantLocal) < DateTimeConstants.MILLIS_PER_HOUR) {\n                    return getOffset(instantLocal - DateTimeConstants.MILLIS_PER_HOUR);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..956c941f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,9 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // if we are near the spring DST transition, we need to use the previous offset\n+                if (offsetLocal > offsetAdjusted && instantLocal - nextTransition(instantLocal) < DateTimeConstants.MILLIS_PER_HOUR) {\n+                    return getOffset(instantLocal - DateTimeConstants.MILLIS_PER_HOUR);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}