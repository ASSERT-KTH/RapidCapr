{
    "patch": "public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n    ArrayList<Integer> result = new ArrayList<>();\n    PriorityQueue<Integer> queue = new PriorityQueue<>(Collections.reverseOrder()); // create a max heap\n\n    for(int i : arr) {\n        queue.offer(i);\n    }\n\n    while(k-- > 0) { // retrieve first k elements\n        result.add(queue.poll());\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..de307ae 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -29,12 +29,18 @@ import java.util.Collections;\n  */\n \n public class MAXIMUM_K {\n-    public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n-        Collections.sort(arr);\n-        ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n-            result.add(arr.get(i));\n-        }\n-        return result;\n+public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n+    ArrayList<Integer> result = new ArrayList<>();\n+    PriorityQueue<Integer> queue = new PriorityQueue<>(Collections.reverseOrder()); // create a max heap\n+\n+    for(int i : arr) {\n+        queue.offer(i);\n+    }\n+\n+    while(k-- > 0) { // retrieve first k elements\n+        result.add(queue.poll());\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[34,5] cannot find symbol",
    "test_result": "ERROR"
}