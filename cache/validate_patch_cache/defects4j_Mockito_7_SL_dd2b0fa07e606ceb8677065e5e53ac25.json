{
    "patch": "for (Type type : typeVariable.getBounds()) {\n    registerTypeVariablesOn(type);\n    if (type instanceof TypeVariable) {\n        TypeVariable<?> typeVariable = (TypeVariable<?>) type;\n        if(typeVariable instanceof ParameterizedType){\n            Type actualTypeArgument = getActualTypeArgumentFor((ParameterizedType) typeVariable);\n            if (actualTypeArgument == null) {\n                return;\n            }\n            registerTypeVariablesOn(actualTypeArgument);\n        } else {\n            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..f78827a9f 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,26 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+for (Type type : typeVariable.getBounds()) {\n+    registerTypeVariablesOn(type);\n+    if (type instanceof TypeVariable) {\n+        TypeVariable<?> typeVariable = (TypeVariable<?>) type;\n+        if(typeVariable instanceof ParameterizedType){\n+            Type actualTypeArgument = getActualTypeArgumentFor((ParameterizedType) typeVariable);\n+            if (actualTypeArgument == null) {\n+                return;\n+            }\n+            registerTypeVariablesOn(actualTypeArgument);\n+        } else {\n+            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: incompatible types: ParameterizedType cannot be converted to TypeVariable",
    "test_result": "ERROR"
}