{
    "patch": "import java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\nimport java.net.URLEncoder;\n\npublic class StringEncoderDecoder {\n    \n    public static String encode(String str, String enc) throws UnsupportedEncodingException {\n        return URLEncoder.encode(str, enc);\n    }\n    \n    public static String decode(String str, String enc) throws UnsupportedEncodingException {\n        return URLDecoder.decode(str, enc);\n    }\n    \n    public static void main(String[] args) throws UnsupportedEncodingException {\n        String isoValue = \"This is a test string with special characters: # $ % & + < = > ? @ [ ] { } |\";\n        String utfValue = \"This is also a test string with special characters: \u263a \u266b \u266a \u266b \u263c \u00a5 \u00b6 \u2264 \u2260\";\n        String isoCharset = \"ISO-8859-1\";\n        String utfCharset = \"UTF-8\";\n        \n        // encode and decode ISO value\n        String isoEncoded = encode(isoValue, isoCharset);\n        String isoDecoded = decode(isoEncoded, isoCharset);\n        System.out.println(\"ISO Encoded Value: \" + isoEncoded);\n        System.out.println(\"ISO Decoded Value: \" + isoDecoded);\n        \n        // encode and decode UTF value\n        String utfEncoded = encode(utfValue, utfCharset);\n        String utfDecoded = decode(utfEncoded, utfCharset);\n        System.out.println(\"UTF Encoded Value: \" + utfEncoded);\n        System.out.println(\"UTF Decoded Value: \" + utfDecoded);\n        \n        boolean success = (isoValue.equals(isoDecoded)) && (utfValue.equals(utfDecoded));\n        assertTrue(\"One or more errors detected\",success);\n    }\n    \n    private static void assertTrue(String string, boolean success) {\n        if(success)\n            System.out.println(string + \" - Success\");\n        else\n            System.out.println(string + \" - Failed\");\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..fc343853 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,49 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import java.net.URLEncoder;\n+\n+public class StringEncoderDecoder {\n+    \n+    public static String encode(String str, String enc) throws UnsupportedEncodingException {\n+        return URLEncoder.encode(str, enc);\n+    }\n+    \n+    public static String decode(String str, String enc) throws UnsupportedEncodingException {\n+        return URLDecoder.decode(str, enc);\n+    }\n+    \n+    public static void main(String[] args) throws UnsupportedEncodingException {\n+        String isoValue = \"This is a test string with special characters: # $ % & + < = > ? @ [ ] { } |\";\n+        String utfValue = \"This is also a test string with special characters: \u263a \u266b \u266a \u266b \u263c \u00a5 \u00b6 \u2264 \u2260\";\n+        String isoCharset = \"ISO-8859-1\";\n+        String utfCharset = \"UTF-8\";\n+        \n+        // encode and decode ISO value\n+        String isoEncoded = encode(isoValue, isoCharset);\n+        String isoDecoded = decode(isoEncoded, isoCharset);\n+        System.out.println(\"ISO Encoded Value: \" + isoEncoded);\n+        System.out.println(\"ISO Decoded Value: \" + isoDecoded);\n+        \n+        // encode and decode UTF value\n+        String utfEncoded = encode(utfValue, utfCharset);\n+        String utfDecoded = decode(utfEncoded, utfCharset);\n+        System.out.println(\"UTF Encoded Value: \" + utfEncoded);\n+        System.out.println(\"UTF Decoded Value: \" + utfDecoded);\n+        \n+        boolean success = (isoValue.equals(isoDecoded)) && (utfValue.equals(utfDecoded));\n+        assertTrue(\"One or more errors detected\",success);\n+    }\n+    \n+    private static void assertTrue(String string, boolean success) {\n+        if(success)\n+            System.out.println(string + \" - Success\");\n+        else\n+            System.out.println(string + \" - Failed\");\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}