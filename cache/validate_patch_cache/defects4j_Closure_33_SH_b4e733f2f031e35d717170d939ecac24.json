{
    "patch": "    if (constraintObj.isNamedType()) {\n      ObjectType type = registry.getType(constraintObj.toString());\n      if (type != null) {\n        matchObjectType(type);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..d9157ac1 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,12 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+    if (constraintObj.isNamedType()) {\n+      ObjectType type = registry.getType(constraintObj.toString());\n+      if (type != null) {\n+        matchObjectType(type);\n+      }\n+    }\n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}