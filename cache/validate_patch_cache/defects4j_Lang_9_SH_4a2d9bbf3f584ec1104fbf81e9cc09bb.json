{
    "patch": "if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\nif(nextStrategy == null && currentFormatField != null) {\n    throw new IllegalArgumentException(\"Invalid pattern syntax.\");\n}\ncurrentFormatField= nextStrategy != null ? nextFormatField : null;\ncurrentStrategy= nextStrategy;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..ac09f018 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,14 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+if(nextStrategy == null && currentFormatField != null) {\n+    throw new IllegalArgumentException(\"Invalid pattern syntax.\");\n+}\n+currentFormatField= nextStrategy != null ? nextFormatField : null;\n+currentStrategy= nextStrategy;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}