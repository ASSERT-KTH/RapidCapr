{
    "patch": "            if (number == 0) {\n                return \"\";\n            }\n            \n            if (number < 0) {\n                throw new IllegalArgumentException(\"Negative numbers cannot be represented in mini roman numerals.\");\n            }\n            \n            for (int j = num.length - 1; j >= 0; j--) {\n                while (number >= num[j]) {\n                    result += sym[j];\n                    number -= num[j];\n                }\n            }\n            \n            if (number > 0) {\n                throw new IllegalArgumentException(\"Number is too large to be represented in mini roman numerals.\");\n            }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\nindex 0f3c881..52aa61d 100644\n--- a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n+++ b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n@@ -19,7 +19,24 @@ public class INT_TO_MINI_ROMAN {\n         int i = 12;\n         String result = \"\";\n         while (number > 0) {\n-            result += sym[i];\n+            if (number == 0) {\n+                return \"\";\n+            }\n+            \n+            if (number < 0) {\n+                throw new IllegalArgumentException(\"Negative numbers cannot be represented in mini roman numerals.\");\n+            }\n+            \n+            for (int j = num.length - 1; j >= 0; j--) {\n+                while (number >= num[j]) {\n+                    result += sym[j];\n+                    number -= num[j];\n+                }\n+            }\n+            \n+            if (number > 0) {\n+                throw new IllegalArgumentException(\"Number is too large to be represented in mini roman numerals.\");\n+            }\n             number %= num[i];\n             i -= 1;\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}