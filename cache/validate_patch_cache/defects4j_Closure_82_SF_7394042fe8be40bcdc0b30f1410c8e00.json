{
    "patch": "  // Returns true if this is a type that has no definition.\n  public final boolean isEmptyType() {\n    return isNoType() || isNullType() || isVoidType() || isWildcardType() && extendsBound.isObject() \n           || isUnionType() && untaggedVariants().allMatch(Type::isEmptyType) \n           || isNoObjectType() || isNoResolvedType();\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..5b8a8033 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,8 +159,11 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n+  // Returns true if this is a type that has no definition.\n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+    return isNoType() || isNullType() || isVoidType() || isWildcardType() && extendsBound.isObject() \n+           || isUnionType() && untaggedVariants().allMatch(Type::isEmptyType) \n+           || isNoObjectType() || isNoResolvedType();\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}