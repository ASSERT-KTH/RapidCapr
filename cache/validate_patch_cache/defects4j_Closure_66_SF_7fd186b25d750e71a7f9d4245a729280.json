{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    JSONObject jsonObject = new JSONObject(jsonStr);\n    int totalPages = jsonObject.getInt(\"total_pages\");\n    JSONArray pagesArray = jsonObject.getJSONArray(\"pages\");\n    int typedPages = 0;\n    for (int i = 0; i < pagesArray.length(); i++) {\n        JSONObject page = pagesArray.getJSONObject(i);\n        if (page.getBoolean(\"typed\")) {\n            typedPages++;\n        }\n    }\n    return ((double)typedPages / totalPages) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..4ae754ea 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    JSONObject jsonObject = new JSONObject(jsonStr);\n+    int totalPages = jsonObject.getInt(\"total_pages\");\n+    JSONArray pagesArray = jsonObject.getJSONArray(\"pages\");\n+    int typedPages = 0;\n+    for (int i = 0; i < pagesArray.length(); i++) {\n+        JSONObject page = pagesArray.getJSONObject(i);\n+        if (page.getBoolean(\"typed\")) {\n+            typedPages++;\n+        }\n+    }\n+    return ((double)typedPages / totalPages) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}