{
    "patch": "Type[] bounds = typeVariable.getBounds();\nif (bounds.length == 0) {\n    registerTypeVariablesOn(Object.class);\n} else {\n    boolean hasTypeVarArg = false;\n    for (Type type : bounds) {\n        if (type instanceof TypeVariable) {\n            hasTypeVarArg = true;\n            break;\n        } else {\n            registerTypeVariablesOn(type);\n        }\n    }\n    if (hasTypeVarArg) {\n        Type actualTypeArgumentFor = getActualTypeArgumentFor(typeVariable);\n        if (actualTypeArgumentFor != null) {\n            registerTypeVariablesOn(actualTypeArgumentFor);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..e773d64ac 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,31 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] bounds = typeVariable.getBounds();\n+if (bounds.length == 0) {\n+    registerTypeVariablesOn(Object.class);\n+} else {\n+    boolean hasTypeVarArg = false;\n+    for (Type type : bounds) {\n+        if (type instanceof TypeVariable) {\n+            hasTypeVarArg = true;\n+            break;\n+        } else {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+    if (hasTypeVarArg) {\n+        Type actualTypeArgumentFor = getActualTypeArgumentFor(typeVariable);\n+        if (actualTypeArgumentFor != null) {\n+            registerTypeVariablesOn(actualTypeArgumentFor);\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}