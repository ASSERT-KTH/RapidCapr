{
    "patch": "import com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.databind.JsonMappingException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport java.io.IOException;\n  \npublic static double getTypedPercent(final String jsonStr) {\n    try {\n        final ObjectMapper mapper = new ObjectMapper();\n        final JsonNode rootNode = mapper.readValue(jsonStr, JsonNode.class);\n        final int typedCount = rootNode.path(\"stats\").path(\"typed\").asInt();\n        final int totalCount = rootNode.path(\"stats\").path(\"total\").asInt();\n        final double percent = ((double) typedCount / totalCount) * 100;\n        return percent;\n    } catch (final JsonParseException e) {\n        e.printStackTrace();\n        return -1.0;\n    } catch (final JsonMappingException e) {\n        e.printStackTrace();\n        return -1.0;\n    } catch (final IOException e) {\n        e.printStackTrace();\n        return -1.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..34200bd6 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,31 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import com.fasterxml.jackson.core.JsonParseException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+  \n+public static double getTypedPercent(final String jsonStr) {\n+    try {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        final JsonNode rootNode = mapper.readValue(jsonStr, JsonNode.class);\n+        final int typedCount = rootNode.path(\"stats\").path(\"typed\").asInt();\n+        final int totalCount = rootNode.path(\"stats\").path(\"total\").asInt();\n+        final double percent = ((double) typedCount / totalCount) * 100;\n+        return percent;\n+    } catch (final JsonParseException e) {\n+        e.printStackTrace();\n+        return -1.0;\n+    } catch (final JsonMappingException e) {\n+        e.printStackTrace();\n+        return -1.0;\n+    } catch (final IOException e) {\n+        e.printStackTrace();\n+        return -1.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}