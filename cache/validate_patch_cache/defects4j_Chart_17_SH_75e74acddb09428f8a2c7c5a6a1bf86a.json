{
    "patch": "    public Object createCopy(int start, int end) throws CloneNotSupportedException {\n        if (start > end) {\n            return new TimeSeries(getDomainDescription(), getTimePeriodClass());\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        if (data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) data.get(index).clone();\n                try {\n                    copy.add(item);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..ac7274a 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,26 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+    public Object createCopy(int start, int end) throws CloneNotSupportedException {\n+        if (start > end) {\n+            return new TimeSeries(getDomainDescription(), getTimePeriodClass());\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        if (data.size() > 0) {\n+            for (int index = start; index <= end; index++) {\n+                TimeSeriesDataItem item\n+                        = (TimeSeriesDataItem) data.get(index).clone();\n+                try {\n+                    copy.add(item);\n+                }\n+                catch (SeriesException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+        return copy;\n+    }\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}