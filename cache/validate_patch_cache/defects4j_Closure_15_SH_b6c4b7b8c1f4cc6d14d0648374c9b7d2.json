{
    "patch": "if (n.isDelProp()) {\n  return true;\n}\n\nif (n.isName() || n.isGetProp() || n.isGetElem() || n.isVar()) {\n  Var v = checkNotNull(getSymbol(n), \"Var should not be null in ControlFlowGraph creation\");\n  if (dependentVariables.contains(v.getQualifiedName())) {\n    return true;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..e69b2ab7 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,16 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n.isDelProp()) {\n+  return true;\n+}\n+\n+if (n.isName() || n.isGetProp() || n.isGetElem() || n.isVar()) {\n+  Var v = checkNotNull(getSymbol(n), \"Var should not be null in ControlFlowGraph creation\");\n+  if (dependentVariables.contains(v.getQualifiedName())) {\n+    return true;\n+  }\n+}\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}