{
    "patch": "      public int parseArguments(Parameters params) throws CmdLineException {\n        if (params.size() == 0) {\n          setter.addValue(true);\n          return 0;\n        } else {\n          String param = params.getParameter(0).toLowerCase();\n          if (TRUES.contains(param)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(param)) {\n            setter.addValue(false);\n          } else {\n            setter.addValue(true);\n            return 0;\n          }\n          return 1;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..a8fdba12 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,16 +331,14 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n-\n-        if (param == null) {\n+        if (params.size() == 0) {\n           setter.addValue(true);\n           return 0;\n         } else {\n-          String lowerParam = param.toLowerCase();\n-          if (TRUES.contains(lowerParam)) {\n+          String param = params.getParameter(0).toLowerCase();\n+          if (TRUES.contains(param)) {\n             setter.addValue(true);\n-          } else if (FALSES.contains(lowerParam)) {\n+          } else if (FALSES.contains(param)) {\n             setter.addValue(false);\n           } else {\n             setter.addValue(true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}