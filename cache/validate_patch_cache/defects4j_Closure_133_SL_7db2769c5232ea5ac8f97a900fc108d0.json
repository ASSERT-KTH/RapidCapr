{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null) {\n        return null;\n    }\n    int[] pos = stream.getPosition();\n    try {\n        jsdocParser.parseLine(result, pos[0], pos[1]);\n    } catch (Exception e) {\n        throw new IllegalStateException(e.getMessage(), e);\n    }\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..a87301ad 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,19 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    if (result == null) {\n+        return null;\n+    }\n+    int[] pos = stream.getPosition();\n+    try {\n+        jsdocParser.parseLine(result, pos[0], pos[1]);\n+    } catch (Exception e) {\n+        throw new IllegalStateException(e.getMessage(), e);\n+    }\n+    return result.trim();\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}