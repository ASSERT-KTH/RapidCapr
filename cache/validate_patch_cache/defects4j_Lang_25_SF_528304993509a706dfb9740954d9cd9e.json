{
    "patch": "public static String decode(String input) {\n    if (input == null) {\n        return null;\n    }\n    StringBuffer output = new StringBuffer();\n    char ch;\n    for(int i=0; i<input.length(); i++) {\n        if(input.charAt(i) == '+') {\n            output.append(' ');\n        } else if(input.charAt(i) == '%') {\n            try {\n                ch = (char)Integer.parseInt(input.substring(i+1,i+3),16);\n                output.append(ch);\n            } catch(NumberFormatException e) {\n                throw new IllegalArgumentException(\"Invalid encoded string\", e);\n            }\n            i += 2;\n        } else {\n            output.append(input.charAt(i));\n        }\n    }\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..1d0d7512 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,29 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String input) {\n+    if (input == null) {\n+        return null;\n+    }\n+    StringBuffer output = new StringBuffer();\n+    char ch;\n+    for(int i=0; i<input.length(); i++) {\n+        if(input.charAt(i) == '+') {\n+            output.append(' ');\n+        } else if(input.charAt(i) == '%') {\n+            try {\n+                ch = (char)Integer.parseInt(input.substring(i+1,i+3),16);\n+                output.append(ch);\n+            } catch(NumberFormatException e) {\n+                throw new IllegalArgumentException(\"Invalid encoded string\", e);\n+            }\n+            i += 2;\n+        } else {\n+            output.append(input.charAt(i));\n+        }\n+    }\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}