{
    "patch": "```\nret = (other instanceof Complex) && (Double.compare(this.getReal(), ((Complex) other).getReal()) == 0) && (Double.compare(this.getImaginary(), ((Complex) other).getImaginary()) == 0) && (this.isNaN() == ((Complex) other).isNaN());\n```\nThis line checks if the second object is an instance of `Complex`, and then performs a double comparison on the real and imaginary components of both objects. If the values of the real and imaginary components are equal, it returns true and otherwise returns false. If the objects are NaN, it returns true if both are NaN, false otherwise.",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java\nindex 3571567f8..a76265ab1 100644\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n@@ -255,7 +255,10 @@ public class Complex implements Serializable  {\n                 if (rhs.isNaN()) {\n                     ret = this.isNaN();\n                 } else {\n-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); \n+```\n+ret = (other instanceof Complex) && (Double.compare(this.getReal(), ((Complex) other).getReal()) == 0) && (Double.compare(this.getImaginary(), ((Complex) other).getImaginary()) == 0) && (this.isNaN() == ((Complex) other).isNaN());\n+```\n+This line checks if the second object is an instance of `Complex`, and then performs a double comparison on the real and imaginary components of both objects. If the values of the real and imaginary components are equal, it returns true and otherwise returns false. If the objects are NaN, it returns true if both are NaN, false otherwise.\n                 }\n             } catch (ClassCastException ex) {\n                 // ignore exception",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}