{
    "patch": "public static String printInOperatorInForLoop(String[] obj, boolean c, boolean d, String expected) {\n    Context lhsContext = Context.OTHER;\n    boolean zeroBased = Arrays.asList(obj).contains(0);\n    Context rhsContext = Context.REGEXP;\n    if (lhsContext == rhsContext) {\n        expected = \"for (\" + (zeroBased ? \"var \" : \"\") + \"a=c?\" + (zeroBased ? \"0\" : \"\") + \":0\" + (rhsContext == Context.REGEXP ? \"\": \" in d\") + \"; ; ) foo()\";\n    } else {\n        expected = \"for (\" + (zeroBased ? \"var \" : \"\") + \"a=c?\" + (zeroBased ? \"0\" : \"\") + \":\" + ((rhsContext == Context.ARRAY) ? \"[]\" : \"({})\") + (lhsContext == Context.ARRAY ? \")\" : \"\" ) + (rhsContext == Context.REGEXP ? \"\" : (lhsContext == Context.OTHER ? \";\" : \"\")) + (zeroBased ? \"\" : \" \") + (rhsContext == Context.REGEXP ? \"//\": \"in\") + (lhsContext == Context.REGEXP ? \"(.*);\\\\1\" : \"d\") + (rhsContext == Context.OTHER ? \";\" : \"\") + \" ) foo()/*\" + (lhsContext == Context.REGEXP ? \"\\\\*/\" : \"\");\n    }\n    return expected;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}