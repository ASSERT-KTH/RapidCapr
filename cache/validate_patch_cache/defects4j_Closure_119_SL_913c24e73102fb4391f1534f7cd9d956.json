{
    "patch": "case Token.CATCH: // Handle undefined catch parameter names by adding them to the local scope\n    // Register catch parameter as a local variable in the catch scope\n    String catchName = n.getFirstChild().getString();\n    if (!scope.isDefinedLocally(catchName)) {\n        Var var = scope.declare(catchName, n.getFirstChild());\n        var.setScope(scope);\n    }\n    break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..c91ef7fd 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,14 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.CATCH: // Handle undefined catch parameter names by adding them to the local scope\n+    // Register catch parameter as a local variable in the catch scope\n+    String catchName = n.getFirstChild().getString();\n+    if (!scope.isDefinedLocally(catchName)) {\n+        Var var = scope.declare(catchName, n.getFirstChild());\n+        var.setScope(scope);\n+    }\n+    break;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}