{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int index = 2;\n    if (str.charAt(index) == '_') {\n        // language and country or variant\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if (str.charAt(index + 1) == '_') {\n            // language and variant\n            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n        } else {\n            // language and country\n            final char ch2 = str.charAt(index + 2);\n            if (ch2 != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            final String country = str.substring(index + 1, index + 3);\n            if (!Character.isUpperCase(str.charAt(index + 1)) || !Character.isUpperCase(country.charAt(1))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), country);\n            }\n            if (len < 9) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (str.charAt(index + 3) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), country, str.substring(index + 4));\n        }\n    } else {\n        // language, country, variant\n        if (len < 6 || str.charAt(index) != '_' || !Character.isUpperCase(str.charAt(index + 1)) || !Character.isUpperCase(str.charAt(index + 2))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final String country = str.substring(3, 5);\n        index += 3;\n        if (len == 6 || str.charAt(index) != '_') {\n            return new Locale(str.substring(0, 2), country, str.substring(6));\n        }\n        index++;\n        final String variant = str.substring(index);\n        if (variant.length() < 2 || !Character.isUpperCase(variant.charAt(0)) || !Character.isUpperCase(variant.charAt(1))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), country, variant);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..854745c2 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,72 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n+public static Locale toLocale(final String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    final char ch0 = str.charAt(0);\n+    final char ch1 = str.charAt(1);\n+    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str);\n+    }\n+    if (len < 5) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int index = 2;\n+    if (str.charAt(index) == '_') {\n+        // language and country or variant\n+        if (len < 7) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n+        } else if (str.charAt(index + 1) == '_') {\n+            // language and variant\n+            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+        } else {\n+            // language and country\n+            final char ch2 = str.charAt(index + 2);\n+            if (ch2 != '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n+            final String country = str.substring(index + 1, index + 3);\n+            if (!Character.isUpperCase(str.charAt(index + 1)) || !Character.isUpperCase(country.charAt(1))) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+                return new Locale(str.substring(0, 2), country);\n             }\n-            if (len < 7) {\n+            if (len < 9) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(5) != '_') {\n+            if (str.charAt(index + 3) != '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            return new Locale(str.substring(0, 2), country, str.substring(index + 4));\n+        }\n+    } else {\n+        // language, country, variant\n+        if (len < 6 || str.charAt(index) != '_' || !Character.isUpperCase(str.charAt(index + 1)) || !Character.isUpperCase(str.charAt(index + 2))) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        final String country = str.substring(3, 5);\n+        index += 3;\n+        if (len == 6 || str.charAt(index) != '_') {\n+            return new Locale(str.substring(0, 2), country, str.substring(6));\n+        }\n+        index++;\n+        final String variant = str.substring(index);\n+        if (variant.length() < 2 || !Character.isUpperCase(variant.charAt(0)) || !Character.isUpperCase(variant.charAt(1))) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        return new Locale(str.substring(0, 2), country, variant);\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__P",
    "test_result": "FAIL"
}