{
    "patch": "Node typeExpression = parseTypeExpression(token);\nif (typeExpression == null) {\n    // if type expression cannot be parsed, attempt to parse as a type name\n    typeExpression = parseTypeName(token);\n}\nreturn typeExpression;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..2408ed12 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,12 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+Node typeExpression = parseTypeExpression(token);\n+if (typeExpression == null) {\n+    // if type expression cannot be parsed, attempt to parse as a type name\n+    typeExpression = parseTypeName(token);\n+}\n+return typeExpression;\n   }\n \n   /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}