{
    "patch": "            int i;\n            try {\n                for (i = 0; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                if (e.getIllegalFieldIndex() >= 0) {\n                    int errorIndex = e.getIllegalFieldIndex();\n                    for (int j = 0; j < i; j++) {\n                        savedFields[j].restore();\n                    }\n                    savedFields[errorIndex].set(millis, savedFields[errorIndex].iValue);\n                }\n                throw e;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..6ab05876 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            int i;\n+            try {\n+                for (i = 0; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                if (e.getIllegalFieldIndex() >= 0) {\n+                    int errorIndex = e.getIllegalFieldIndex();\n+                    for (int j = 0; j < i; j++) {\n+                        savedFields[j].restore();\n+                    }\n+                    savedFields[errorIndex].set(millis, savedFields[errorIndex].iValue);\n+                }\n+                throw e;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}