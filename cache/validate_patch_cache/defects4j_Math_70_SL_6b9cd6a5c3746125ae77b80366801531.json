{
    "patch": "        UnivariateRealSolverFactory factory = new UnivariateRealSolverFactoryImpl();\n        UnivariateSolver solver = factory.newDefaultSolver();\n        return solver.solve(maxEval, f, min, max, initial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..093b69d5d 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,9 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+        UnivariateRealSolverFactory factory = new UnivariateRealSolverFactoryImpl();\n+        UnivariateSolver solver = factory.newDefaultSolver();\n+        return solver.solve(maxEval, f, min, max, initial);\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}