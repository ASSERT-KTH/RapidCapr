{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden, need to increment these\n    if (!Double.isNaN(value)) {\n        if (meanImpl.getClass() != Mean.class) {\n            ((Mean) meanImpl).increment(value);\n        } else {\n            meanImpl.increment(value);\n        }\n\n        if (varianceImpl.getClass() != Variance.class) {\n            ((Variance) varianceImpl).increment(value);\n        } else {\n            varianceImpl.increment(value);\n        }\n\n        if (geoMeanImpl.getClass() != GeometricMean.class) {\n            if (value > 0) {\n                ((GeometricMean) geoMeanImpl).increment(value);\n            }\n        } else {\n            geoMeanImpl.increment(value);\n        }\n        n++;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..dd0e5072f 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,37 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden, need to increment these\n+    if (!Double.isNaN(value)) {\n+        if (meanImpl.getClass() != Mean.class) {\n+            ((Mean) meanImpl).increment(value);\n+        } else {\n             meanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+\n+        if (varianceImpl.getClass() != Variance.class) {\n+            ((Variance) varianceImpl).increment(value);\n+        } else {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+\n+        if (geoMeanImpl.getClass() != GeometricMean.class) {\n+            if (value > 0) {\n+                ((GeometricMean) geoMeanImpl).increment(value);\n+            }\n+        } else {\n             geoMeanImpl.increment(value);\n         }\n         n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "java.lang.ClassCastException: org.apache.commons.math.stat.descriptive.summary.Sum cannot be cast to org.apache.commons.math.stat.descriptive.moment.Mean",
    "test_result": "FAIL"
}