{
    "patch": "    Object[] rawArguments = invocation.getRawArguments();\n    for (int i = 0; i < rawArguments.length; i++) {\n        Matcher matcher = matchers.size() > i ? matchers.get(i) : null;\n        if (matcher instanceof CapturesArguments) {\n            Object argument = rawArguments[i];\n            if ",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex 7b877b1e2..d43f3f41b 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -120,7 +120,12 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF\n     public void captureArgumentsFrom(Invocation invocation) {\n         if (invocation.getMethod().isVarArgs()) {\n             int indexOfVararg = invocation.getRawArguments().length - 1;\n-            throw new UnsupportedOperationException();\n+    Object[] rawArguments = invocation.getRawArguments();\n+    for (int i = 0; i < rawArguments.length; i++) {\n+        Matcher matcher = matchers.size() > i ? matchers.get(i) : null;\n+        if (matcher instanceof CapturesArguments) {\n+            Object argument = rawArguments[i];\n+            if \n \n         } else {\n             for (int position = 0; position < matchers.size(); position++) {",
    "result_reason": "error: '(' expected",
    "test_result": "ERROR"
}