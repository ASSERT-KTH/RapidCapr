{
    "patch": "// issue 668: Don't inline singleton getter methods\n// calls as this confused class removing logic.\n// Also, don't inline class constructors as inlining could result in the super\n// constructor being called more than once.\nif (value.isFunction() &&\n    (callNode.isCall() || callNode.isNew())) {\n  CodingConvention convention = compiler.getCodingConvention();\n  String methodName = convention.getSingletonGetterClassName(callNode);\n  if (methodName != null) {\n    return false;\n  }\n  // Don't inline constructors for classes that inherit - let the class's\n  // script be the one that decides whether inline is worth it or not.\n  if (callNode.isNew() &&\n      convention.getSingletonClassName(callNode) == null) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..f75413eb 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,24 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+// issue 668: Don't inline singleton getter methods\n+// calls as this confused class removing logic.\n+// Also, don't inline class constructors as inlining could result in the super\n+// constructor being called more than once.\n+if (value.isFunction() &&\n+    (callNode.isCall() || callNode.isNew())) {\n+  CodingConvention convention = compiler.getCodingConvention();\n+  String methodName = convention.getSingletonGetterClassName(callNode);\n+  if (methodName != null) {\n+    return false;\n+  }\n+  // Don't inline constructors for classes that inherit - let the class's\n+  // script be the one that decides whether inline is worth it or not.\n+  if (callNode.isNew() &&\n+      convention.getSingletonClassName(callNode) == null) {\n+    return false;\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: variable convention is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}