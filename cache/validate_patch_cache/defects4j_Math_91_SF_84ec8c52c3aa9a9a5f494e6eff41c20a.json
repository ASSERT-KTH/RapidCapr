{
    "patch": "    public int compareTo(Fraction object) {\n        double nOd = this.numerator / (double) this.denominator; // convert numerator to double\n        double dOn = object.numerator / (double) object.denominator; // convert numerator to double\n        return Double.compare(nOd, dOn); // use Double's compare method to handle NaN and infinity\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..efc63a67a 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,9 +256,9 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n+        double nOd = this.numerator / (double) this.denominator; // convert numerator to double\n+        double dOn = object.numerator / (double) object.denominator; // convert numerator to double\n+        return Double.compare(nOd, dOn); // use Double's compare method to handle NaN and infinity\n     }\n     \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<-1> but was:<0>",
    "test_result": "FAIL"
}