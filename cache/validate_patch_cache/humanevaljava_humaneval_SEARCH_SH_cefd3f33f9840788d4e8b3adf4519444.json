{
    "patch": "int[] frq = new int[max + 1];\nfor (int i : lst) {\n    if (i >= 0 && i <= max) {\n        frq[i]++;\n        if (frq[i] >= i && i > result) {\n            result = i;\n        }\n    }\n}\n\n// check for result not set for cases where all numbers are negative    \nif (result == -1 && frq[0] > 0) {\n    result = 0;\n}\n\n// loop to find largest i with frq[i] >= i\nfor (int i = max; i > 0; i--) {\n    if (frq[i] >= i) {\n        result = i;\n        break;\n    }\n}\n\n// check for all elements in lst filling the array\nint expectedSum = max*(max+1)/2;\nint actualSum = 0;\nfor (int i : lst) {\n    if (i >= 0 && i <= max) {\n        actualSum += i;\n    }\n}\nif (expectedSum == actualSum && result < max) {\n    result = max;\n}\n",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SEARCH.java b/src/main/java/humaneval/buggy/SEARCH.java\nindex 285deda..d299572 100644\n--- a/src/main/java/humaneval/buggy/SEARCH.java\n+++ b/src/main/java/humaneval/buggy/SEARCH.java\n@@ -18,9 +18,41 @@ public class SEARCH {\n         }\n \n         int result = -1;\n-        int[] frq = new int[max];\n-        for (int i = 0; i < lst.length; i += 1)  frq[i] += 1;\n-        for (int i = 0; i < frq.length; i += 1) if (frq[i] >= i) result = i;\n+int[] frq = new int[max + 1];\n+for (int i : lst) {\n+    if (i >= 0 && i <= max) {\n+        frq[i]++;\n+        if (frq[i] >= i && i > result) {\n+            result = i;\n+        }\n+    }\n+}\n+\n+// check for result not set for cases where all numbers are negative    \n+if (result == -1 && frq[0] > 0) {\n+    result = 0;\n+}\n+\n+// loop to find largest i with frq[i] >= i\n+for (int i = max; i > 0; i--) {\n+    if (frq[i] >= i) {\n+        result = i;\n+        break;\n+    }\n+}\n+\n+// check for all elements in lst filling the array\n+int expectedSum = max*(max+1)/2;\n+int actualSum = 0;\n+for (int i : lst) {\n+    if (i >= 0 && i <= max) {\n+        actualSum += i;\n+    }\n+}\n+if (expectedSum == actualSum && result < max) {\n+    result = max;\n+}\n+\n         \n         return result;\n     }",
    "result_reason": "   TEST_SEARCH.test_3:29 expected:<3> but was:<-1>",
    "test_result": "FAIL"
}