{
    "patch": "    public Complex add(Complex rhs)\n            throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n        if (Double.isNaN(real) || Double.isNaN(imaginary)) {\n            return createComplex(Double.NaN, Double.NaN);\n        }\n        if (Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n            return createComplex(Double.NaN, Double.NaN);\n        }\n\n        return createComplex(real + rhs.getReal(),\n                imaginary + rhs.getImaginary());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..14d918bc6 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -148,10 +148,17 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n      * @throws NullArgumentException if <code>rhs</code> is null\n      */\n     public Complex add(Complex rhs)\n-        throws NullArgumentException {\n+            throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+        if (Double.isNaN(real) || Double.isNaN(imaginary)) {\n+            return createComplex(Double.NaN, Double.NaN);\n+        }\n+        if (Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n+            return createComplex(Double.NaN, Double.NaN);\n+        }\n+\n         return createComplex(real + rhs.getReal(),\n-            imaginary + rhs.getImaginary());\n+                imaginary + rhs.getImaginary());\n     }\n \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}