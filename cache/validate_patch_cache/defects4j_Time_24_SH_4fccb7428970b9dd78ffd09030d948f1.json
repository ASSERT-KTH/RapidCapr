{
    "patch": "            if (savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n                int year = savedFields[i].iValue;\n                int weekOfWeekyear = savedFields[i + 1].iValue;\n                LocalDate d = new LocalDate(year, 1, 4, getChronology());\n                int days = ((weekOfWeekyear - 1) * 7) + 3;\n                if (days == d.getDayOfWeek()) {\n                    return d.plusWeeks(weekOfWeekyear - 1).getMillis();\n                } else if (days > 0 && days < 8) {\n                    return d.plusWeeks(weekOfWeekyear - 1).withDayOfWeek(DateTimeConstants.MONDAY).getMillis();\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..cfe8475c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n+                int year = savedFields[i].iValue;\n+                int weekOfWeekyear = savedFields[i + 1].iValue;\n+                LocalDate d = new LocalDate(year, 1, 4, getChronology());\n+                int days = ((weekOfWeekyear - 1) * 7) + 3;\n+                if (days == d.getDayOfWeek()) {\n+                    return d.plusWeeks(weekOfWeekyear - 1).getMillis();\n+                } else if (days > 0 && days < 8) {\n+                    return d.plusWeeks(weekOfWeekyear - 1).withDayOfWeek(DateTimeConstants.MONDAY).getMillis();\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}