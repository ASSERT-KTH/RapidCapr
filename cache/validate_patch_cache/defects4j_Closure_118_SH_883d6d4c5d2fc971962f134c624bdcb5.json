{
    "patch": "        checkState(child.isStringKey() || NodeUtil.isGetterOrSetter(child),\n            \"Object property keys must be strings or getters/setters: %s\", child);\n\n        String name;\n        if (child.isGetterDef()) {\n          name = child.getString();\n        } else if (child.isSetterDef()) {\n          name = child.getString();\n          // skip past the parameter to the function.\n          child = child.getLastChild().getNext();\n        } else {\n          name = child.getString();\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..8acd3218 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,19 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        checkState(child.isStringKey() || NodeUtil.isGetterOrSetter(child),\n+            \"Object property keys must be strings or getters/setters: %s\", child);\n+\n+        String name;\n+        if (child.isGetterDef()) {\n+          name = child.getString();\n+        } else if (child.isSetterDef()) {\n+          name = child.getString();\n+          // skip past the parameter to the function.\n+          child = child.getLastChild().getNext();\n+        } else {\n+          name = child.getString();\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}