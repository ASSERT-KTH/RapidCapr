{
    "patch": "public void printInOperatorInForLoop() {\n    boolean c = true;\n    int[] d = {1, 2, 3};\n    String expected = \"for(a=c ? 0: (0 in d); ;){foo();}\";\n\n    StringBuilder result = new StringBuilder();\n    result.append(\"for(a = \");\n    result.append(c ? \"0 \" : \"[\" + 0 + \" in d] \");\n    result.append(\"; ;){foo();}\");\n\n    assertEquals(expected, result.toString());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..9a5b13f3 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,18 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void printInOperatorInForLoop() {\n+    boolean c = true;\n+    int[] d = {1, 2, 3};\n+    String expected = \"for(a=c ? 0: (0 in d); ;){foo();}\";\n+\n+    StringBuilder result = new StringBuilder();\n+    result.append(\"for(a = \");\n+    result.append(c ? \"0 \" : \"[\" + 0 + \" in d] \");\n+    result.append(\"; ;){foo();}\");\n+\n+    assertEquals(expected, result.toString());\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}