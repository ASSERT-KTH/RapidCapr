{
    "patch": "BUG DESCRIPTION:\nIn the original code, if a translator provides a larger consumed value for a surrogate pair, but the consumed value contains a problem with inner surrogate pairs, then the infill line will not work properly because it is only aware of the first surrogate pair. Therefore it will fail for encoding such strings into CSV, which in turn has the potential to cause `StringIndexOutOfBoundsException`.\n\nCODE FIX:\n``` java\npos += Integer.charCount(Character.codePointAt(input, pos));\n```",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..a32319e0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,13 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+BUG DESCRIPTION:\n+In the original code, if a translator provides a larger consumed value for a surrogate pair, but the consumed value contains a problem with inner surrogate pairs, then the infill line will not work properly because it is only aware of the first surrogate pair. Therefore it will fail for encoding such strings into CSV, which in turn has the potential to cause `StringIndexOutOfBoundsException`.\n+\n+CODE FIX:\n+``` java\n+pos += Integer.charCount(Character.codePointAt(input, pos));\n+```\n             }\n         }\n     }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}