{
    "patch": "      if (block.isFunction) {\n        int assignmentCount = 0;\n        for (Reference reference : references) {\n          if (reference.isAssignmentToName()) {\n            assignmentCount++;\n          }\n        }\n        if (assignmentCount == 1) {\n          return true;\n        } else {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..849f38e3 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+      if (block.isFunction) {\n+        int assignmentCount = 0;\n+        for (Reference reference : references) {\n+          if (reference.isAssignmentToName()) {\n+            assignmentCount++;\n+          }\n+        }\n+        if (assignmentCount == 1) {\n+          return true;\n+        } else {\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}