{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.MathUtils;\nimport org.apache.commons.math3.stat.inference.TestUtils;\n\npublic class GammaFunction {\n\n    public static double gamma(double x) {\n        double res;\n\n        if (Double.isNaN(x) || (x <= 0.0)) {\n            res = Double.NaN;\n        } else if (x == 1.0) {\n            res = 1.0;\n        } else if (x == 2.0) {\n            res = 1.0;\n        } else if (x == 3.0) {\n            res = 2.0;\n        } else if (x == 4.0) {\n            res = 6.0;\n        } else if (x == 5.0) {\n            res = 24.0;\n        } else {\n            res = Gamma.gamma(x);\n        }\n        return res;\n    }\n\n    public static void main(String[] args) {\n        /*\n        * This test checks that the implementation of the regularized\n        * gamma function is consistent with the values given in the\n        * NIST Digital Library of Mathematical Functions.\n        */\n        double x = 0.5;\n        double a = 0.5;\n        double expected = 0.632120558828558;\n        double actualP = Gamma.regularizedGammaP(a, x);\n        TestUtils.assertEquals(expected, actualP, 1e-15);\n    }\n\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..387b20eda 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,47 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.MathUtils;\n+import org.apache.commons.math3.stat.inference.TestUtils;\n+\n+public class GammaFunction {\n+\n+    public static double gamma(double x) {\n+        double res;\n+\n+        if (Double.isNaN(x) || (x <= 0.0)) {\n+            res = Double.NaN;\n+        } else if (x == 1.0) {\n+            res = 1.0;\n+        } else if (x == 2.0) {\n+            res = 1.0;\n+        } else if (x == 3.0) {\n+            res = 2.0;\n+        } else if (x == 4.0) {\n+            res = 6.0;\n+        } else if (x == 5.0) {\n+            res = 24.0;\n+        } else {\n+            res = Gamma.gamma(x);\n+        }\n+        return res;\n+    }\n+\n+    public static void main(String[] args) {\n+        /*\n+        * This test checks that the implementation of the regularized\n+        * gamma function is consistent with the values given in the\n+        * NIST Digital Library of Mathematical Functions.\n+        */\n+        double x = 0.5;\n+        double a = 0.5;\n+        double expected = 0.632120558828558;\n+        double actualP = Gamma.regularizedGammaP(a, x);\n+        TestUtils.assertEquals(expected, actualP, 1e-15);\n+    }\n+\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}