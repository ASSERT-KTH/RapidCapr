{
    "patch": "public static boolean containsAny(char[] arr1, char[] arr2) {\n    if (arr1 == null || arr2 == null) {\n        return false;\n    }\n    for (char c : arr1) {\n        if (ArrayUtils.contains(arr2, c)) {\n            return true;\n        } else if (Character.isSurrogate(c)) {\n            int codePoint = Character.codePointAt(arr1, Character.toChars(c, new char[2], 0));\n            if (ArrayUtils.contains(arr2, codePoint)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..e1a28644 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,22 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(char[] arr1, char[] arr2) {\n+    if (arr1 == null || arr2 == null) {\n+        return false;\n+    }\n+    for (char c : arr1) {\n+        if (ArrayUtils.contains(arr2, c)) {\n+            return true;\n+        } else if (Character.isSurrogate(c)) {\n+            int codePoint = Character.codePointAt(arr1, Character.toChars(c, new char[2], 0));\n+            if (ArrayUtils.contains(arr2, codePoint)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}