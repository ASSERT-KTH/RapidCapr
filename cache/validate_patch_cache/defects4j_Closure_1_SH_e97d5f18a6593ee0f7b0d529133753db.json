{
    "patch": "          // Remove any type info bound to the parameter\n          JSTypeExpression typeExpr = lastArg.getTypeI();\n          if (typeExpr != null) {\n            lastArg.setJSType(null);\n            lastArg.setTyped(false);\n            lastArg.removeChild(typeExpr);\n            compiler.reportCodeChange();\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..05f621ae 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,14 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+          // Remove any type info bound to the parameter\n+          JSTypeExpression typeExpr = lastArg.getTypeI();\n+          if (typeExpr != null) {\n+            lastArg.setJSType(null);\n+            lastArg.setTyped(false);\n+            lastArg.removeChild(typeExpr);\n+            compiler.reportCodeChange();\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}