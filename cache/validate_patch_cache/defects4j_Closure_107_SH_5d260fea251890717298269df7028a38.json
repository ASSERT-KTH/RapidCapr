{
    "patch": "if (!flags.translationsFile.isBlank()) {\n      try {\n        options.setMessageBundle(new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject));\n      } catch (IOException e) {\n        throw new RuntimeException(\"Reading XTB file\", e);\n      }\n    } else {\n      if (level.equals(CompilationLevel.ADVANCED_OPTIMIZATIONS)) {\n        options.setLanguageIn(LanguageMode.ECMASCRIPT5);\n        options.setLanguageOut(LanguageMode.ECMASCRIPT5);\n        options.setEmitUseStrict(false);\n        options.setProcessClosurePrimitives(false);\n        options.setClosurePass(false);\n        options.setAngularPass(false);\n        options.setDevMode(false);\n      }\n      options.setMessageBundle(new EmptyMessageBundle());\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..d1080395 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,26 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+if (!flags.translationsFile.isBlank()) {\n+      try {\n+        options.setMessageBundle(new XtbMessageBundle(\n+            new FileInputStream(flags.translationsFile),\n+            flags.translationsProject));\n+      } catch (IOException e) {\n+        throw new RuntimeException(\"Reading XTB file\", e);\n+      }\n+    } else {\n+      if (level.equals(CompilationLevel.ADVANCED_OPTIMIZATIONS)) {\n+        options.setLanguageIn(LanguageMode.ECMASCRIPT5);\n+        options.setLanguageOut(LanguageMode.ECMASCRIPT5);\n+        options.setEmitUseStrict(false);\n+        options.setProcessClosurePrimitives(false);\n+        options.setClosurePass(false);\n+        options.setAngularPass(false);\n+        options.setDevMode(false);\n+      }\n+      options.setMessageBundle(new EmptyMessageBundle());\n+    }\n     }\n \n     return options;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}