{
    "patch": "      if (n.getType() == Token.FUNCTION &&\n          (parent.getType() == Token.VAR || parent.getType() == Token.EXPR_RESULT)) {\n        defineDeclaredFunction(n, parent);\n        return;\n      }\n\n      attachLiteralTypes(n);\n      \n      // Don't define function declarations before the associated\n      // statement.\n      if (NodeUtil.isFunctionDeclaration(n)) {\n        Tracer t = new Tracer();\n        Node block = NodeUtil.getEnclosingStatement(n);\n        if (block != null) {\n          int fnIndex = NodeUtil.doesNodeBeforeExit(block, n);\n          if (fnIndex >= 0) {\n            block.addChildBefore(\n                new Node(Token.EMPTY), n, t.createEnterBlock(fnIndex));\n            block.addChildAfter(\n                new Node(Token.EMPTY), n, t.createExitBlock(fnIndex));\n          }\n        }\n      }\n\n      switch (n.getType()) {\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n        default:\n          break; // Add this line to fix the issue\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..4f99df56 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1448,20 +1448,39 @@ final class TypedScopeCreator implements ScopeCreator {\n         return;\n       }\n \n+      if (n.getType() == Token.FUNCTION &&\n+          (parent.getType() == Token.VAR || parent.getType() == Token.EXPR_RESULT)) {\n+        defineDeclaredFunction(n, parent);\n+        return;\n+      }\n+\n       attachLiteralTypes(n);\n-      switch (n.getType()) {\n-        case Token.FUNCTION:\n-          if (parent.getType() == Token.NAME) {\n-            return;\n+      \n+      // Don't define function declarations before the associated\n+      // statement.\n+      if (NodeUtil.isFunctionDeclaration(n)) {\n+        Tracer t = new Tracer();\n+        Node block = NodeUtil.getEnclosingStatement(n);\n+        if (block != null) {\n+          int fnIndex = NodeUtil.doesNodeBeforeExit(block, n);\n+          if (fnIndex >= 0) {\n+            block.addChildBefore(\n+                new Node(Token.EMPTY), n, t.createEnterBlock(fnIndex));\n+            block.addChildAfter(\n+                new Node(Token.EMPTY), n, t.createExitBlock(fnIndex));\n           }\n-          defineDeclaredFunction(n, parent);\n-          break;\n+        }\n+      }\n+\n+      switch (n.getType()) {\n         case Token.CATCH:\n           defineCatch(n, parent);\n           break;\n         case Token.VAR:\n           defineVar(n, parent);\n           break;\n+        default:\n+          break; // Add this line to fix the issue\n       }\n     }\n ",
    "result_reason": "error: variable t is already defined in method visit(NodeTraversal,Node,Node)",
    "test_result": "ERROR"
}