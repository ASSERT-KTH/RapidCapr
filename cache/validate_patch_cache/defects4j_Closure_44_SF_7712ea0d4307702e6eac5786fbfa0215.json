{
    "patch": "    } else if (getLastChar() == '/' && c == '/') {\n      // Do not allow a space to appear between two forward slashes.\n      // For example,\n      // / / / / should print like\n      // ////.\n      append(\"/\");",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..3aa247d1 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,28 +178,12 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n-    maybeEndStatement();\n-\n-    if (newcode.length() == 0) {\n-      return;\n-    }\n-\n-    char c = newcode.charAt(0);\n-    if ((isWordChar(c) || c == '\\\\') &&\n-        isWordChar(getLastChar())) {\n-      // need space to separate. This is not pretty printing.\n-      // For example: \"return foo;\"\n-      append(\" \");\n-      // Do not allow a forward slash to appear after a DIV.\n+    } else if (getLastChar() == '/' && c == '/') {\n+      // Do not allow a space to appear between two forward slashes.\n       // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n-    }\n-\n-    append(newcode);\n-  }\n+      // / / / / should print like\n+      // ////.\n+      append(\"/\");\n \n   void appendOp(String op, boolean binOp) {\n     append(op);",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}