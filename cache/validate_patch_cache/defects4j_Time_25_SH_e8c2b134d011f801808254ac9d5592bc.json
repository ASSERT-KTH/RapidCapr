{
    "patch": "                if ((offsetLocal - offsetAdjusted) < 0) {\n                    // if we just return offsetAdjusted then the time is pushed\n                    // back before the transition, whereas it should be\n                    // on or after the transition\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        // Backward transition\n                        if (offsetAdjusted > 0) {\n                            long prev = previousTransition(instantAdjusted);\n                            if (prev >= instantLocal - offsetLocal) {\n                                return offsetLocal;\n                            }\n                        }\n                    } else {\n                        // Forward transition\n                        if (offsetLocal < 0) {\n                            long next = nextTransition(instantAdjusted);\n                            if (next <= instantLocal - offsetLocal) {\n                                return offsetLocal;\n                            }\n                        }\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..cb6ed206 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,29 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    // if we just return offsetAdjusted then the time is pushed\n+                    // back before the transition, whereas it should be\n+                    // on or after the transition\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        // Backward transition\n+                        if (offsetAdjusted > 0) {\n+                            long prev = previousTransition(instantAdjusted);\n+                            if (prev >= instantLocal - offsetLocal) {\n+                                return offsetLocal;\n+                            }\n+                        }\n+                    } else {\n+                        // Forward transition\n+                        if (offsetLocal < 0) {\n+                            long next = nextTransition(instantAdjusted);\n+                            if (next <= instantLocal - offsetLocal) {\n+                                return offsetLocal;\n+                            }\n+                        }\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}