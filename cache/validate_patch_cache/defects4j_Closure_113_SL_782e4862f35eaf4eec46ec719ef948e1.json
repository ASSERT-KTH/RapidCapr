{
    "patch": "parent.detachFromParent();\nNode grandparent = parent.getParent();\nif (grandparent != null && NodeUtil.isStatement(grandparent)) {\n  Node firstChild = grandparent.getFirstChild();\n  if (firstChild.isLabel()) {\n    grandparent.replaceChild(firstChild, IR.block(firstChild));\n  }\n}\ncompiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..45cd833b 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,15 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+parent.detachFromParent();\n+Node grandparent = parent.getParent();\n+if (grandparent != null && NodeUtil.isStatement(grandparent)) {\n+  Node firstChild = grandparent.getFirstChild();\n+  if (firstChild.isLabel()) {\n+    grandparent.replaceChild(firstChild, IR.block(firstChild));\n+  }\n+}\n+compiler.reportCodeChange();\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}