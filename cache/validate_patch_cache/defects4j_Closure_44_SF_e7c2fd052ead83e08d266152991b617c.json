{
    "patch": "  void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n      return;\n    }\n\n    char first = newcode.charAt(0);\n    char last = getLastChar();\n    if ((isWordChar(first) || first == '\\\\') && isWordChar(last)) {\n      // need space to separate. This is not pretty printing.\n      // For example: \"return foo;\"\n      append(\" \");\n    } else if (first == '/' && last == '/') {\n      // Do not allow a forward slash to appear after a DIV.\n      // For example, REGEXP DIV REGEXP is valid and should print like / / / /\n      append(\" \");\n    }\n\n    append(newcode);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..5006bbea 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -185,17 +185,16 @@ abstract class CodeConsumer {\n       return;\n     }\n \n-    char c = newcode.charAt(0);\n-    if ((isWordChar(c) || c == '\\\\') &&\n-        isWordChar(getLastChar())) {\n+    char first = newcode.charAt(0);\n+    char last = getLastChar();\n+    if ((isWordChar(first) || first == '\\\\') && isWordChar(last)) {\n       // need space to separate. This is not pretty printing.\n       // For example: \"return foo;\"\n       append(\" \");\n+    } else if (first == '/' && last == '/') {\n       // Do not allow a forward slash to appear after a DIV.\n-      // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n+      // For example, REGEXP DIV REGEXP is valid and should print like / / / /\n+      append(\" \");\n     }\n \n     append(newcode);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}