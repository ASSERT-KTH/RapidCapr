{
    "patch": "        int reducedNumer = numerator / gcd;\n        int reducedDenom = denominator / gcd;\n        if ((numerator < 0 && denominator < 0) || (numerator > 0 && denominator > 0)) {\n            return new Fraction(Math.abs(reducedNumer), reducedDenom);\n        } else {\n            return new Fraction(-Math.abs(reducedNumer), reducedDenom);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..1ba17fa3 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,12 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        int reducedNumer = numerator / gcd;\n+        int reducedDenom = denominator / gcd;\n+        if ((numerator < 0 && denominator < 0) || (numerator > 0 && denominator > 0)) {\n+            return new Fraction(Math.abs(reducedNumer), reducedDenom);\n+        } else {\n+            return new Fraction(-Math.abs(reducedNumer), reducedDenom);\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}