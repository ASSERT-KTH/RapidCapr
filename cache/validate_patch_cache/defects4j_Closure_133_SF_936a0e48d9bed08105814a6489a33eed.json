{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (!result.startsWith(\"/**\")) {\n        return null;\n    }\n    result = result.substring(3).trim(); // remove opening \"/**\" and leading/trailing whitespace\n    result = result.replaceAll(\"/\\\\*\\\\*\", \"\"); // remove extra \"/**\" if present\n    result = result.replaceAll(\"\\\\s*\\\\*/$\", \"\"); // remove closing \"*/\" and any preceding whitespace or \"*\"\n    result = result.replaceAll(\"\\\\s+\", \" \"); // replace any consecutive whitespace with a single space\n    result = result.trim(); // trim the result\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..2b92fe48 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,18 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+    if (!result.startsWith(\"/**\")) {\n+        return null;\n+    }\n+    result = result.substring(3).trim(); // remove opening \"/**\" and leading/trailing whitespace\n+    result = result.replaceAll(\"/\\\\*\\\\*\", \"\"); // remove extra \"/**\" if present\n+    result = result.replaceAll(\"\\\\s*\\\\*/$\", \"\"); // remove closing \"*/\" and any preceding whitespace or \"*\"\n+    result = result.replaceAll(\"\\\\s+\", \" \"); // replace any consecutive whitespace with a single space\n+    result = result.trim(); // trim the result\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}