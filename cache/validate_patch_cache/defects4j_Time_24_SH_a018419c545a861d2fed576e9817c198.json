{
    "patch": "        } catch (IllegalFieldValueException e) {\n            if ((text != null && text.length() > 0) || iSavedFieldsCount <= 0 ||\n                    e.getIllegalFieldValueFailureInstant() != null ||\n                    savedFields[0].iField.getType().equals(DateTimeFieldType.monthOfYear()) == false) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            }\n            // month-day combination has failed...\n            int day = 1;\n            for (int i = 0; i < iSavedFieldsCount; i++) {\n                DateTimeField field = savedFields[i].iField;\n                if (field.getType() == DateTimeFieldType.monthOfYear()) {\n                    int month = savedFields[i].iValue;\n                    for (int j = 0; j < iSavedFieldsCount; j++) {\n                        DateTimeField field2 = savedFields[j].iField;\n                        if (field2.getType() == DateTimeFieldType.dayOfMonth()) {\n                            int maxDay = field2.getMaximumValue();\n                            int value = savedFields[j].iValue;\n                            if (maxDay >= dayOfYear(month, value)) {\n                                continue;\n                            }\n                        } else {\n                            continue;\n                        }\n                        if (j > i) {\n                            // swap these fields...\n                            int tmp = savedFields[i].iValue;\n                            savedFields[i].iValue = savedFields[j].iValue;\n                            savedFields[j].iValue = tmp;\n                        }\n                        break;\n                    }\n                } else if (field.getType() == DateTimeFieldType.dayOfMonth()) {\n                    day = savedFields[i].iValue;\n                }\n            }\n            try {\n                return computeMillis(resetFields, text);\n            } catch (IllegalFieldValueException ex) {\n                ex.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                throw ex;\n            } catch (RuntimeException ex) {\n                IllegalFieldValueException newEx =\n                    new IllegalFieldValueException(\"Cannot parse \\\"\" + text + '\"', ex);\n                newEx.setStackTrace(ex.getStackTrace());\n                throw newEx;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c38cf9de 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,56 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            if ((text != null && text.length() > 0) || iSavedFieldsCount <= 0 ||\n+                    e.getIllegalFieldValueFailureInstant() != null ||\n+                    savedFields[0].iField.getType().equals(DateTimeFieldType.monthOfYear()) == false) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            }\n+            // month-day combination has failed...\n+            int day = 1;\n+            for (int i = 0; i < iSavedFieldsCount; i++) {\n+                DateTimeField field = savedFields[i].iField;\n+                if (field.getType() == DateTimeFieldType.monthOfYear()) {\n+                    int month = savedFields[i].iValue;\n+                    for (int j = 0; j < iSavedFieldsCount; j++) {\n+                        DateTimeField field2 = savedFields[j].iField;\n+                        if (field2.getType() == DateTimeFieldType.dayOfMonth()) {\n+                            int maxDay = field2.getMaximumValue();\n+                            int value = savedFields[j].iValue;\n+                            if (maxDay >= dayOfYear(month, value)) {\n+                                continue;\n+                            }\n+                        } else {\n+                            continue;\n+                        }\n+                        if (j > i) {\n+                            // swap these fields...\n+                            int tmp = savedFields[i].iValue;\n+                            savedFields[i].iValue = savedFields[j].iValue;\n+                            savedFields[j].iValue = tmp;\n+                        }\n+                        break;\n+                    }\n+                } else if (field.getType() == DateTimeFieldType.dayOfMonth()) {\n+                    day = savedFields[i].iValue;\n+                }\n+            }\n+            try {\n+                return computeMillis(resetFields, text);\n+            } catch (IllegalFieldValueException ex) {\n+                ex.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                throw ex;\n+            } catch (RuntimeException ex) {\n+                IllegalFieldValueException newEx =\n+                    new IllegalFieldValueException(\"Cannot parse \\\"\" + text + '\"', ex);\n+                newEx.setStackTrace(ex.getStackTrace());\n+                throw newEx;\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}