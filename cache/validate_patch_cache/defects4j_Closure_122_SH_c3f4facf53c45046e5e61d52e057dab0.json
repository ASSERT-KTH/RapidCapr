{
    "patch": "    // check if comment has @ symbol\n    if (comment.getValue().contains(\"@\")) {\n      String[] lines = comment.getValue().split(\"\\n\");\n      for (String line : lines) {\n        if (line.trim().startsWith(\"* @\")) {\n          return;\n        }\n      }\n    }\n    \n    errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..a115f670 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -249,7 +249,20 @@ class IRFactory {\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n   private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n+    // check if comment has @ symbol\n+    if (comment.getValue().contains(\"@\")) {\n+      String[] lines = comment.getValue().split(\"\\n\");\n+      for (String line : lines) {\n+        if (line.trim().startsWith(\"* @\")) {\n+          return;\n+        }\n+      }\n+    }\n+    \n+    errorReporter.warning(\n+          SUSPICIOUS_COMMENT_WARNING,\n+          sourceName,\n+          comment.getLineno(), \"\", 0);\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n           sourceName,",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}