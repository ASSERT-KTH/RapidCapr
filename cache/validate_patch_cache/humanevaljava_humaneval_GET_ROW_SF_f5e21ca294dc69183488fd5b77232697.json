{
    "patch": "    public static ArrayList<Tuple> get_row(ArrayList<ArrayList<Integer>> lst, int x) {\n        ArrayList<Tuple> result = new ArrayList<Tuple>();\n\n        for (int i = 0; i < lst.size(); i += 1) {\n            for (int j = 0; j < lst.get(i).size(); j += 1){ //fixed the bug in this line\n                if (lst.get(i).get(j) == x){\n                    result.add(new GET_ROW().new Tuple(i, j));\n                }\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_ROW.java b/src/main/java/humaneval/buggy/GET_ROW.java\nindex 83f4169..a25cea7 100644\n--- a/src/main/java/humaneval/buggy/GET_ROW.java\n+++ b/src/main/java/humaneval/buggy/GET_ROW.java\n@@ -23,9 +23,9 @@ public class GET_ROW {\n         ArrayList<Tuple> result = new ArrayList<Tuple>();\n \n         for (int i = 0; i < lst.size(); i += 1) {\n-            for (int j = lst.get(0).size() - 1; j >= 0; j -= 1){\n-                if (lst.get(i).get(i) == x){\n-                    result.add(new GET_ROW().new Tuple(i, i));\n+            for (int j = 0; j < lst.get(i).size(); j += 1){ //fixed the bug in this line\n+                if (lst.get(i).get(j) == x){\n+                    result.add(new GET_ROW().new Tuple(i, j));\n                 }\n             }\n         }",
    "result_reason": "   TEST_GET_ROW.test_0:18 expected:<[humaneval.buggy.GET_ROW$Tuple@14eebb53, humaneval.buggy.GET_ROW$Tuple@6d200a20, humaneval.buggy.GET_ROW$Tuple@2530ae1d, humaneval.buggy.GET_ROW$Tuple@151441ce, humaneval.buggy.GET_ROW$Tuple@74c1441c]> but was:<[humaneval.buggy.GET_ROW$Tuple@19dd31ae, humaneval.buggy.GET_ROW$Tuple@393d34ce, humaneval.buggy.GET_ROW$Tuple@e100816, humaneval.buggy.GET_ROW$Tuple@708f5c6c, humaneval.buggy.GET_ROW$Tuple@2f5392]>",
    "test_result": "FAIL"
}