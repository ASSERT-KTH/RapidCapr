{
    "patch": "        Matcher patternMatcher = formatPattern.matcher(pattern);\n        if (!patternMatcher.matches()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n        nameValues = new ConcurrentHashMap<>();\n\n        StringBuilder regex = new StringBuilder();\n        List<Strategy> collector = new ArrayList<>();\n        currentFormatField = \"\";\n        Strategy currentStrategy = null;\n        nextStrategy = null;\n        int i = 0;\n        while (i < pattern.length()) {\n            currentFormatField = Integer.toString(i);\n            String subPattern = pattern.substring(i);\n            currentStrategy = getStrategy(subPattern);\n            i += currentStrategy.getMaxLength();\n            subPattern = pattern.substring(i - currentStrategy.getMaxLength(), i);\n            currentFormatField = subPattern;\n            if (currentStrategy.addRegex(this, new StringBuilder(), regex, nameValues)) {\n                collector.add(currentStrategy);\n            }\n        }\n        currentFormatField = null;\n        strategies = collector.toArray(new Strategy[0]);\n        parsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..d55b83ba 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,32 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        Matcher patternMatcher = formatPattern.matcher(pattern);\n+        if (!patternMatcher.matches()) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+        nameValues = new ConcurrentHashMap<>();\n+\n+        StringBuilder regex = new StringBuilder();\n+        List<Strategy> collector = new ArrayList<>();\n+        currentFormatField = \"\";\n+        Strategy currentStrategy = null;\n+        nextStrategy = null;\n+        int i = 0;\n+        while (i < pattern.length()) {\n+            currentFormatField = Integer.toString(i);\n+            String subPattern = pattern.substring(i);\n+            currentStrategy = getStrategy(subPattern);\n+            i += currentStrategy.getMaxLength();\n+            subPattern = pattern.substring(i - currentStrategy.getMaxLength(), i);\n+            currentFormatField = subPattern;\n+            if (currentStrategy.addRegex(this, new StringBuilder(), regex, nameValues)) {\n+                collector.add(currentStrategy);\n+            }\n+        }\n+        currentFormatField = null;\n+        strategies = collector.toArray(new Strategy[0]);\n+        parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}