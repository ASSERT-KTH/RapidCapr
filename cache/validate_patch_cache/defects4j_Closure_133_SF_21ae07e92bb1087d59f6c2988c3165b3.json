{
    "patch": "private String getRemainingJSDocLine() {\n    StringBuilder sb = new StringBuilder();\n    String line;\n\n    do {\n        line = stream.getRemainingJSDocLine();\n\n        if (line != null && line.trim().startsWith(\"*\")) {\n            sb.append(line.trim(), 1, line.trim().length());\n        } else {\n            break;\n        }\n    } while (!line.contains(\"*/\"));\n\n    return sb.length() == 0 ? null : sb.toString().trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..b34ddbc5 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,22 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+    StringBuilder sb = new StringBuilder();\n+    String line;\n+\n+    do {\n+        line = stream.getRemainingJSDocLine();\n+\n+        if (line != null && line.trim().startsWith(\"*\")) {\n+            sb.append(line.trim(), 1, line.trim().length());\n+        } else {\n+            break;\n+        }\n+    } while (!line.contains(\"*/\"));\n+\n+    return sb.length() == 0 ? null : sb.toString().trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}