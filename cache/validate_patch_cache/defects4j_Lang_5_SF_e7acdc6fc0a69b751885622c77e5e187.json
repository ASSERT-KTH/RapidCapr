{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n    final String[] parts = str.split(\"_\", -1);\n    final int len = parts.length;\n    if (len > 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final String language = parts[0], country = len > 1 ? parts[1] : \"\", variant = len > 2 ? parts[2] : \"\";\n    if (language.isEmpty() || !isValidName(language) || (!country.isEmpty() && !isValidName(country))\n            || (!variant.isEmpty() && !isValidVariant(variant))) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(language, country, variant);\n}\n\nprivate static boolean isValidName(String name) {\n    final int len = name.length();\n    if (len < 2) {\n        return false;\n    }\n    final char ch0 = name.charAt(0), ch1 = name.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        return false;\n    }\n    for (int i = 2; i < len; i++) {\n        if (!Character.isUpperCase(name.charAt(i))) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean isValidVariant(String variant) {\n    final int len = variant.length();\n    if (len == 0) {\n        return true;\n    }\n    if (len < 2) {\n        return false;\n    }\n    final char ch0 = variant.charAt(0), ch1 = variant.charAt(1);\n    if (!Character.isUpperCase(ch0)) {\n        return false;\n    }\n    for (int i = 2; i < len; i++) {\n        final char ch = variant.charAt(i);\n        if (!Character.isLetterOrDigit(ch) && ch != '_') {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..717c1ad5 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,60 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n+public static Locale toLocale(final String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+    final String[] parts = str.split(\"_\", -1);\n+    final int len = parts.length;\n+    if (len > 3) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    final String language = parts[0], country = len > 1 ? parts[1] : \"\", variant = len > 2 ? parts[2] : \"\";\n+    if (language.isEmpty() || !isValidName(language) || (!country.isEmpty() && !isValidName(country))\n+            || (!variant.isEmpty() && !isValidVariant(variant))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    return new Locale(language, country, variant);\n+}\n+\n+private static boolean isValidName(String name) {\n+    final int len = name.length();\n+    if (len < 2) {\n+        return false;\n+    }\n+    final char ch0 = name.charAt(0), ch1 = name.charAt(1);\n+    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+        return false;\n+    }\n+    for (int i = 2; i < len; i++) {\n+        if (!Character.isUpperCase(name.charAt(i))) {\n+            return false;\n         }\n-        final int len = str.length();\n-        if (len < 2) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    return true;\n+}\n+\n+private static boolean isValidVariant(String variant) {\n+    final int len = variant.length();\n+    if (len == 0) {\n+        return true;\n+    }\n+    if (len < 2) {\n+        return false;\n+    }\n+    final char ch0 = variant.charAt(0), ch1 = variant.charAt(1);\n+    if (!Character.isUpperCase(ch0)) {\n+        return false;\n+    }\n+    for (int i = 2; i < len; i++) {\n+        final char ch = variant.charAt(i);\n+        if (!Character.isLetterOrDigit(ch) && ch != '_') {\n+            return false;\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n     }\n+    return true;\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__P",
    "test_result": "FAIL"
}