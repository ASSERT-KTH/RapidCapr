{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (!isAlphaLower(ch0) || !isAlphaLower(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int countryIndex = str.indexOf('_', 2);\n    int variantIndex = -1;\n    if (countryIndex == -1 || countryIndex == len - 1) {\n        if (len != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str);\n    } else {\n        variantIndex = str.indexOf('_', countryIndex + 1);\n        if (variantIndex == -1) {\n            if (len - countryIndex == 3) {\n                return new Locale(str.substring(0, 2), str.substring(3));\n            } else if (len - countryIndex > 4) {\n                String language = str.substring(0, 2);\n                String country = str.substring(3, countryIndex);\n                String variant = str.substring(countryIndex + 1);\n                return new Locale(language, country, variant);\n            }\n        } else if (variantIndex == countryIndex + 1) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else {\n            if (len - variantIndex == 1) {\n                return new Locale(str.substring(0, 2), str.substring(3, countryIndex),\n                        str.substring(countryIndex + 1, variantIndex));\n            } else if (len - variantIndex > 2) {\n                String language = str.substring(0, 2);\n                String country = str.substring(3, countryIndex);\n                String variant = str.substring(countryIndex + 1, variantIndex);\n                return new Locale(language, country, variant);\n            }\n        }\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nprivate static boolean isAlphaLower(final char ch) {\n    return ch >= 'a' && ch <= 'z';\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..bc5e4d41 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,57 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n+public static Locale toLocale(final String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (!isAlphaLower(ch0) || !isAlphaLower(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int countryIndex = str.indexOf('_', 2);\n+    int variantIndex = -1;\n+    if (countryIndex == -1 || countryIndex == len - 1) {\n+        if (len != 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n+        return new Locale(str);\n+    } else {\n+        variantIndex = str.indexOf('_', countryIndex + 1);\n+        if (variantIndex == -1) {\n+            if (len - countryIndex == 3) {\n+                return new Locale(str.substring(0, 2), str.substring(3));\n+            } else if (len - countryIndex > 4) {\n+                String language = str.substring(0, 2);\n+                String country = str.substring(3, countryIndex);\n+                String variant = str.substring(countryIndex + 1);\n+                return new Locale(language, country, variant);\n             }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if (variantIndex == countryIndex + 1) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else {\n+            if (len - variantIndex == 1) {\n+                return new Locale(str.substring(0, 2), str.substring(3, countryIndex),\n+                        str.substring(countryIndex + 1, variantIndex));\n+            } else if (len - variantIndex > 2) {\n+                String language = str.substring(0, 2);\n+                String country = str.substring(3, countryIndex);\n+                String variant = str.substring(countryIndex + 1, variantIndex);\n+                return new Locale(language, country, variant);\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n     }\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+private static boolean isAlphaLower(final char ch) {\n+    return ch >= 'a' && ch <= 'z';\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__P",
    "test_result": "FAIL"
}