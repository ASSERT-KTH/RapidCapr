{
    "patch": "private void readTypeVariables() {\n    if (typeVariable == null) {\n        return;\n    }\n    if (typeVariable instanceof TypeVariable) {\n        Type[] bounds = ((TypeVariable<?>) typeVariable).getBounds();\n        for (Type bound : bounds) {\n            registerTypeVariablesOn(bound);\n        }\n    } else if (typeVariable instanceof WildcardType) {\n        Type[] upperBounds = ((WildcardType) typeVariable).getUpperBounds();\n        for (Type upperBound : upperBounds) {\n            registerTypeVariablesOn(upperBound);\n        }\n        Type[] lowerBounds = ((WildcardType) typeVariable).getLowerBounds();\n        for (Type lowerBound : lowerBounds) {\n            registerTypeVariablesOn(lowerBound);\n        }\n    } else if (typeVariable instanceof ParameterizedType) {\n        Type[] actualTypeArguments = ((ParameterizedType) typeVariable).getActualTypeArguments();\n        for (Type actualTypeArgument : actualTypeArguments) {\n            registerTypeVariablesOn(actualTypeArgument);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..fe8b3c5e6 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,32 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    if (typeVariable == null) {\n+        return;\n+    }\n+    if (typeVariable instanceof TypeVariable) {\n+        Type[] bounds = ((TypeVariable<?>) typeVariable).getBounds();\n+        for (Type bound : bounds) {\n+            registerTypeVariablesOn(bound);\n+        }\n+    } else if (typeVariable instanceof WildcardType) {\n+        Type[] upperBounds = ((WildcardType) typeVariable).getUpperBounds();\n+        for (Type upperBound : upperBounds) {\n+            registerTypeVariablesOn(upperBound);\n+        }\n+        Type[] lowerBounds = ((WildcardType) typeVariable).getLowerBounds();\n+        for (Type lowerBound : lowerBounds) {\n+            registerTypeVariablesOn(lowerBound);\n+        }\n+    } else if (typeVariable instanceof ParameterizedType) {\n+        Type[] actualTypeArguments = ((ParameterizedType) typeVariable).getActualTypeArguments();\n+        for (Type actualTypeArgument : actualTypeArguments) {\n+            registerTypeVariablesOn(actualTypeArgument);\n+        }\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}