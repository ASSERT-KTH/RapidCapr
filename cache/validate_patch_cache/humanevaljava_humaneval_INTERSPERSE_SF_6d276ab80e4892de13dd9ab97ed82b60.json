{
    "patch": "public static List<Integer> intersperse(List<Integer> numbers, int delimiter) {\n    List<Integer> result = new ArrayList<Integer>();\n\n    for (int i = 0; i < numbers.size(); i++) {\n        if (i != 0) {\n            result.add(delimiter);\n        }\n        result.add(numbers.get(i));\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INTERSPERSE.java b/src/main/java/humaneval/buggy/INTERSPERSE.java\nindex 5b736e9..0b5c974 100644\n--- a/src/main/java/humaneval/buggy/INTERSPERSE.java\n+++ b/src/main/java/humaneval/buggy/INTERSPERSE.java\n@@ -4,17 +4,15 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class INTERSPERSE {\n-    public static List<Integer> intersperse(List<Integer> numbers, int delimeter) {\n-        List<Integer> result = new ArrayList<Integer>();\n+public static List<Integer> intersperse(List<Integer> numbers, int delimiter) {\n+    List<Integer> result = new ArrayList<Integer>();\n \n-        if (numbers.size() == 0)\n-            return result;\n-        \n-        for (int i = 0; i < numbers.size(); i += 1) {\n-            result.add(numbers.get(i));\n-            result.add(delimeter);\n+    for (int i = 0; i < numbers.size(); i++) {\n+        if (i != 0) {\n+            result.add(delimiter);\n         }\n-        result.add(numbers.get(numbers.size() - 1));\n-        return result;\n+        result.add(numbers.get(i));\n     }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}