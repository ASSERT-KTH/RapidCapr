{
    "patch": "        } else if (isAssignmentInCallExpression(n)) {\n          // The rhs of the assignment is used by the context, so don't associate it\n          // with the lhs.\n          recordDepScope(recordNode, ns);\n        }\n      }\n    }\n\n    /**\n     * Determines if the provided node is an assignment within a call expression.\n     *\n     * @param n The node to check.\n     * @return True if the node is an assignment within a call expression, false otherwise.\n     */\n    private boolean isAssignmentInCallExpression(Node n) {\n      return NodeUtil.isAssignmentOp(n) && n.getParent() != null && n.getParent().isCall();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..5b25e53f 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,23 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+        } else if (isAssignmentInCallExpression(n)) {\n+          // The rhs of the assignment is used by the context, so don't associate it\n+          // with the lhs.\n+          recordDepScope(recordNode, ns);\n+        }\n+      }\n+    }\n+\n+    /**\n+     * Determines if the provided node is an assignment within a call expression.\n+     *\n+     * @param n The node to check.\n+     * @return True if the node is an assignment within a call expression, false otherwise.\n+     */\n+    private boolean isAssignmentInCallExpression(Node n) {\n+      return NodeUtil.isAssignmentOp(n) && n.getParent() != null && n.getParent().isCall();\n+    }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: invalid method declaration; return type required",
    "test_result": "ERROR"
}