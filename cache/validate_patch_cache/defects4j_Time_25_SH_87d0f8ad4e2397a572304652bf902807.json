{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                // check if DST gap is crossed for both zone and adjusted\n                if (nextLocal == instantLocal - offsetLocal &&\n                        nextAdjusted != instantLocal - offsetAdjusted) {\n                    // gap is crossed only for zone, use zone's offset\n                    return offsetLocal;\n                }\n            } else {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n                // check if DST overlap is crossed for both zone and adjusted\n                if (nextLocal == instantLocal - offsetLocal &&\n                        nextAdjusted != instantLocal - offsetAdjusted) {\n                    // overlap is crossed only for adjusted, use adjusted's offset\n                    return offsetAdjusted;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..91fdd358 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                // check if DST gap is crossed for both zone and adjusted\n+                if (nextLocal == instantLocal - offsetLocal &&\n+                        nextAdjusted != instantLocal - offsetAdjusted) {\n+                    // gap is crossed only for zone, use zone's offset\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+                // check if DST overlap is crossed for both zone and adjusted\n+                if (nextLocal == instantLocal - offsetLocal &&\n+                        nextAdjusted != instantLocal - offsetAdjusted) {\n+                    // overlap is crossed only for adjusted, use adjusted's offset\n+                    return offsetAdjusted;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}