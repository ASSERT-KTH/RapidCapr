{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    final int n = m.getRowDimension();\n    final double eps = Math.pow(2.0, -52.0);\n    RealMatrix x = MatrixUtils.createRealIdentityMatrix(n);\n\n    // Iterative method using the matrix square root algorithm\n    for (int i = 0; i < 100; i++) {\n        RealMatrix y = m.multiply(x);\n        RealMatrix z = x.add(y).scalarMultiply(0.5);\n        if (x.equals(z, eps)) {\n            break;\n        }\n        x = z;\n    }\n\n    return x;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..567494845 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,21 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final int n = m.getRowDimension();\n+    final double eps = Math.pow(2.0, -52.0);\n+    RealMatrix x = MatrixUtils.createRealIdentityMatrix(n);\n+\n+    // Iterative method using the matrix square root algorithm\n+    for (int i = 0; i < 100; i++) {\n+        RealMatrix y = m.multiply(x);\n+        RealMatrix z = x.add(y).scalarMultiply(0.5);\n+        if (x.equals(z, eps)) {\n+            break;\n+        }\n+        x = z;\n     }\n+\n+    return x;\n+}\n }",
    "result_reason": "error: method equals in class Object cannot be applied to given types;",
    "test_result": "ERROR"
}