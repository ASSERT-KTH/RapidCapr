{
    "patch": "if (topType.isUnknownType() || topType.getDisplayName().equals(\"ArrayLike\")) {\n    return getNativeType(ARRAY_TYPE);\n} else if (topType.isEquivalentTo(getNativeType(ARRAY_TYPE))) {\n    return topType;\n} else if (topType.isNominalConstructor()) {\n    FunctionType constructorType = topType.toMaybeFunctionType();\n    if (constructorType != null && constructorType.getInstanceType().isSubtype(getNativeType(ARRAY_TYPE))) {\n        return topType;\n    }\n}\nreturn getNativeType(ARRAY_TYPE);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..e2c5466d 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,17 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+if (topType.isUnknownType() || topType.getDisplayName().equals(\"ArrayLike\")) {\n+    return getNativeType(ARRAY_TYPE);\n+} else if (topType.isEquivalentTo(getNativeType(ARRAY_TYPE))) {\n+    return topType;\n+} else if (topType.isNominalConstructor()) {\n+    FunctionType constructorType = topType.toMaybeFunctionType();\n+    if (constructorType != null && constructorType.getInstanceType().isSubtype(getNativeType(ARRAY_TYPE))) {\n+        return topType;\n+    }\n+}\n+return getNativeType(ARRAY_TYPE);\n         }\n \n         @Override",
    "result_reason": "junit.framework.AssertionFailedError: Expected: ??",
    "test_result": "FAIL"
}