{
    "patch": "public static double getTypedPercent(String js) {\n    double result = 0;\n    int count = 0;\n    for (int i = 0; i < js.length(); i++) {\n        if (js.charAt(i) == '\\'') {\n            i++;\n            while (js.charAt(i) != '\\'') {\n                if (js.charAt(i) == '%') {\n                    result += Double.parseDouble(js.substring(i - 2, i)) / 100;\n                    count++;\n                }\n                i++;\n            }\n        }\n    }\n    return count == 0 ? 0 : (result / count) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a84566aa 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    double result = 0;\n+    int count = 0;\n+    for (int i = 0; i < js.length(); i++) {\n+        if (js.charAt(i) == '\\'') {\n+            i++;\n+            while (js.charAt(i) != '\\'') {\n+                if (js.charAt(i) == '%') {\n+                    result += Double.parseDouble(js.substring(i - 2, i)) / 100;\n+                    count++;\n+                }\n+                i++;\n+            }\n+        }\n+    }\n+    return count == 0 ? 0 : (result / count) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}