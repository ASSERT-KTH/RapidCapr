{
    "patch": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        ShapeList other = (ShapeList) obj;\n        int count = size();\n        if (count != other.size()) {\n            return false;\n        }\n        for (int i = 0; i < count; i++) {\n            Shape s1 = get(i);\n            Shape s2 = other.get(i);\n            if (!s1.equals(s2)) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..0651b0e 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -101,15 +101,25 @@ public class ShapeList extends AbstractObjectList {\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-\n         if (obj == this) {\n             return true;\n         }\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n-\n+        ShapeList other = (ShapeList) obj;\n+        int count = size();\n+        if (count != other.size()) {\n+            return false;\n+        }\n+        for (int i = 0; i < count; i++) {\n+            Shape s1 = get(i);\n+            Shape s2 = other.get(i);\n+            if (!s1.equals(s2)) {\n+                return false;\n+            }\n+        }\n+        return true;\n     }\n \n     /**\n@@ -169,4 +179,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}