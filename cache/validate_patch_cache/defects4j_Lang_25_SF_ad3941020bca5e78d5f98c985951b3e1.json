{
    "patch": "public static String unescape (String s) {\n    StringBuilder sb = new StringBuilder(s.length());\n    for (int i=0; i < s.length();) {\n        char ch = s.charAt(i);\n        switch (ch) {\n        case '\\\\':\n            i++;\n            if (i >= s.length()) {\n                throw new IllegalArgumentException(\"Invalid escape sequence in [\" + s + \"]\");\n            }\n            ch = s.charAt(i);\n            switch (ch) {\n            case 'n':\n                sb.append('\\n');\n                break;\n            case 't':\n                sb.append('\\t');\n                break;\n            case 'r':\n                sb.append('\\r');\n                break;\n            case 'f':\n                sb.append('\\f');\n                break;\n            case 'b':\n                sb.append('\\b');\n                break;\n            case '\\\\':\n                sb.append('\\\\');\n                break;\n            case '\\\"':\n                sb.append('\\\"');\n                break;\n            case '\\'':\n                sb.append('\\'');\n                break;\n            case 'u':\n                if (i+4 >= s.length()) {\n                    throw new IllegalArgumentException(\"Invalid escape sequence in [\" + s + \"]\");\n                }\n                try {\n                    char uni = (char) Integer.parseInt(s.substring(i+1, i+5), 16);\n                    sb.append(uni);\n                } catch (NumberFormatException nfe) {\n                    throw new IllegalArgumentException(\"Invalid Unicode escape sequence [\" + s.substring(i, i+6) + \"] in [\" + s + \"]\");\n                }\n                i += 4;\n                break;\n            default:\n                throw new IllegalArgumentException(\"Illegal escape sequence [\" + ch + \"] in [\" + s + \"]\");\n            }\n            break;\n        default:\n            sb.append(ch);\n            break;\n        }\n        i++;\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..8dfe52b1 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,66 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape (String s) {\n+    StringBuilder sb = new StringBuilder(s.length());\n+    for (int i=0; i < s.length();) {\n+        char ch = s.charAt(i);\n+        switch (ch) {\n+        case '\\\\':\n+            i++;\n+            if (i >= s.length()) {\n+                throw new IllegalArgumentException(\"Invalid escape sequence in [\" + s + \"]\");\n+            }\n+            ch = s.charAt(i);\n+            switch (ch) {\n+            case 'n':\n+                sb.append('\\n');\n+                break;\n+            case 't':\n+                sb.append('\\t');\n+                break;\n+            case 'r':\n+                sb.append('\\r');\n+                break;\n+            case 'f':\n+                sb.append('\\f');\n+                break;\n+            case 'b':\n+                sb.append('\\b');\n+                break;\n+            case '\\\\':\n+                sb.append('\\\\');\n+                break;\n+            case '\\\"':\n+                sb.append('\\\"');\n+                break;\n+            case '\\'':\n+                sb.append('\\'');\n+                break;\n+            case 'u':\n+                if (i+4 >= s.length()) {\n+                    throw new IllegalArgumentException(\"Invalid escape sequence in [\" + s + \"]\");\n+                }\n+                try {\n+                    char uni = (char) Integer.parseInt(s.substring(i+1, i+5), 16);\n+                    sb.append(uni);\n+                } catch (NumberFormatException nfe) {\n+                    throw new IllegalArgumentException(\"Invalid Unicode escape sequence [\" + s.substring(i, i+6) + \"] in [\" + s + \"]\");\n+                }\n+                i += 4;\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\"Illegal escape sequence [\" + ch + \"] in [\" + s + \"]\");\n+            }\n+            break;\n+        default:\n+            sb.append(ch);\n+            break;\n+        }\n+        i++;\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}