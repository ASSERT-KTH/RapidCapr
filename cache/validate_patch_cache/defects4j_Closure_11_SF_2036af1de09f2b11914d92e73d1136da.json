{
    "patch": "public String getprop(String key) {\n    String result = null;\n    Properties properties = new Properties();\n    try (FileInputStream file = new FileInputStream(\"myapp.properties\")) {\n        properties.load(file);\n        result = properties.getProperty(key);\n    } catch (IOException e) {\n        System.err.println(\"Error: \" + e.getMessage());\n        System.exit(1);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..16b4fb09 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getprop(String key) {\n+    String result = null;\n+    Properties properties = new Properties();\n+    try (FileInputStream file = new FileInputStream(\"myapp.properties\")) {\n+        properties.load(file);\n+        result = properties.getProperty(key);\n+    } catch (IOException e) {\n+        System.err.println(\"Error: \" + e.getMessage());\n+        System.exit(1);\n+    }\n+    return result;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}