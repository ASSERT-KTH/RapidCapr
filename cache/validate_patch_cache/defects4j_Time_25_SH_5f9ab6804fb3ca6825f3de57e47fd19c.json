{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    if (offsetLocal > offsetAdjusted) {\n        long prevLocal = previousTransition(instantAdjusted);\n        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n        if (prevLocal != prevAdjusted) {\n            return offsetLocal;\n        }\n    } else {\n        final long nextLocal = nextTransition(instantAdjusted);\n        final int offsetNext = getOffset(nextLocal);\n        if (offsetLocal != offsetNext && offsetAdjusted == offsetNext) {\n            return offsetLocal;\n        } else {\n            final long prevLocal = previousTransition(instantLocal - offsetAdjusted + 1);\n            final int offsetPrev = getOffset(prevLocal);\n            if (offsetPrev == offsetLocal) {\n                return offsetPrev;\n            }\n        }\n\n        if (offsetLocal < 0 && offsetAdjusted == 0) {\n            long prevLocal = previousTransition(instantAdjusted);\n            long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n            if (prevLocal != prevAdjusted) {\n                return offsetLocal;\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..31e195c7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,35 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    if (offsetLocal > offsetAdjusted) {\n+        long prevLocal = previousTransition(instantAdjusted);\n+        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+        if (prevLocal != prevAdjusted) {\n+            return offsetLocal;\n+        }\n+    } else {\n+        final long nextLocal = nextTransition(instantAdjusted);\n+        final int offsetNext = getOffset(nextLocal);\n+        if (offsetLocal != offsetNext && offsetAdjusted == offsetNext) {\n+            return offsetLocal;\n+        } else {\n+            final long prevLocal = previousTransition(instantLocal - offsetAdjusted + 1);\n+            final int offsetPrev = getOffset(prevLocal);\n+            if (offsetPrev == offsetLocal) {\n+                return offsetPrev;\n+            }\n+        }\n+\n+        if (offsetLocal < 0 && offsetAdjusted == 0) {\n+            long prevLocal = previousTransition(instantAdjusted);\n+            long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+            if (prevLocal != prevAdjusted) {\n+                return offsetLocal;\n+            }\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}