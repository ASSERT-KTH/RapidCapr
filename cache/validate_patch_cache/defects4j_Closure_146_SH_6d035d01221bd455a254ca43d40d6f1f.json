{
    "patch": "        JSType leftType = null, rightType = null;\n\n        if (this.isSubtypeOf(that)) {\n          leftType = this;\n        } else if (that.isSubtypeOf(this)) {\n          rightType = that;\n        }\n\n        return new TypePair(leftType, rightType);",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..f940cf25 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,15 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+        JSType leftType = null, rightType = null;\n+\n+        if (this.isSubtypeOf(that)) {\n+          leftType = this;\n+        } else if (that.isSubtypeOf(this)) {\n+          rightType = that;\n+        }\n+\n+        return new TypePair(leftType, rightType);\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}