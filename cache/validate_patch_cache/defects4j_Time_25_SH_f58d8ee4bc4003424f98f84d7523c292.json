{
    "patch": "if (offsetLocal == offsetAdjusted) {\n    return offsetAdjusted;\n}\nlong nextLocal = nextTransition(instantAdjusted);\nlong nextAdjusted = nextTransition(instantLocal - offsetAdjusted - 1);\nif (nextLocal == nextAdjusted) {\n    // we are in a DST gap\n    if (offsetLocal > offsetAdjusted) {\n        // fall back to standard time\n        return offsetLocal;\n    } else {\n        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted - 1);\n        int offsetBeforePrev = getOffset(prevAdjusted);\n        if (offsetBeforePrev < offsetAdjusted) {\n            // fall back to standard time\n            return offsetLocal;\n        } else {\n            // spring forward to DST time\n            return offsetLocal + 1;\n        }\n    }\n} else {\n    return offsetLocal;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..17c70d31 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,30 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal == offsetAdjusted) {\n+    return offsetAdjusted;\n+}\n+long nextLocal = nextTransition(instantAdjusted);\n+long nextAdjusted = nextTransition(instantLocal - offsetAdjusted - 1);\n+if (nextLocal == nextAdjusted) {\n+    // we are in a DST gap\n+    if (offsetLocal > offsetAdjusted) {\n+        // fall back to standard time\n+        return offsetLocal;\n+    } else {\n+        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted - 1);\n+        int offsetBeforePrev = getOffset(prevAdjusted);\n+        if (offsetBeforePrev < offsetAdjusted) {\n+            // fall back to standard time\n+            return offsetLocal;\n+        } else {\n+            // spring forward to DST time\n+            return offsetLocal + 1;\n+        }\n+    }\n+} else {\n+    return offsetLocal;\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}