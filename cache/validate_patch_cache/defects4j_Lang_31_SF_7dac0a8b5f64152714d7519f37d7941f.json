{
    "patch": "import java.util.Arrays;\nimport java.util.stream.IntStream;\n\npublic class StringUtils {\n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || searchChars == null) {\n            return false;\n        }\n        int[] strCodePoints = str.codePoints().toArray();\n        int[] searchCharPoints = IntStream.range(0, searchChars.length)\n                .map(i -> searchChars[i]).distinct().sorted().toArray();\n        return Arrays.stream(strCodePoints)\n                .anyMatch(cp -> Arrays.binarySearch(searchCharPoints, cp) >= 0);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..ae1f348d 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,21 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.util.Arrays;\n+import java.util.stream.IntStream;\n+\n+public class StringUtils {\n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || searchChars == null) {\n+            return false;\n+        }\n+        int[] strCodePoints = str.codePoints().toArray();\n+        int[] searchCharPoints = IntStream.range(0, searchChars.length)\n+                .map(i -> searchChars[i]).distinct().sorted().toArray();\n+        return Arrays.stream(strCodePoints)\n+                .anyMatch(cp -> Arrays.binarySearch(searchCharPoints, cp) >= 0);\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}