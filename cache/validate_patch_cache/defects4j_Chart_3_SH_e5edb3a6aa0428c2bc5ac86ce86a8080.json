{
    "patch": "copy.data = new java.util.ArrayList();\nfor (int index = 0; index < this.getItemCount(); index++) {\n    TimeSeriesDataItem item = this.getDataItem(index);\n    if (item.getPeriod().compareTo(start) >= 0 \n            && item.getPeriod().compareTo(end) <= 0) {\n        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n        try {\n            copy.add(clone);\n        } catch (SeriesException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..5c8a4fe 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+for (int index = 0; index < this.getItemCount(); index++) {\n+    TimeSeriesDataItem item = this.getDataItem(index);\n+    if (item.getPeriod().compareTo(start) >= 0 \n+            && item.getPeriod().compareTo(end) <= 0) {\n+        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+        try {\n+            copy.add(clone);\n+        } catch (SeriesException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: method compareTo in interface Comparable cannot be applied to given types;",
    "test_result": "ERROR"
}