{
    "patch": "Type actualType = getActualTypeArgumentFor(typeVariable);\nif (actualType == null) {\n    for (Type type : typeVariable.getBounds()) {\n        if (type instanceof TypeVariable) {\n            registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) type));\n        } else if (!(type instanceof WildcardType)) {\n            registerTypeVariablesOn(type);\n        }\n    }\n} else {\n    if (actualType instanceof ParameterizedType) {\n        registerTypeVariablesOn(((ParameterizedType) actualType).getRawType());\n        for (Type type : ((ParameterizedType) actualType).getActualTypeArguments()) {\n            registerTypeVariablesOn(type);\n        }\n    } else if (!(actualType instanceof WildcardType) && !(actualType instanceof TypeVariable)) {\n        registerTypeVariablesOn(actualType);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..241e6d1f8 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,30 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualType = getActualTypeArgumentFor(typeVariable);\n+if (actualType == null) {\n+    for (Type type : typeVariable.getBounds()) {\n+        if (type instanceof TypeVariable) {\n+            registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) type));\n+        } else if (!(type instanceof WildcardType)) {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+} else {\n+    if (actualType instanceof ParameterizedType) {\n+        registerTypeVariablesOn(((ParameterizedType) actualType).getRawType());\n+        for (Type type : ((ParameterizedType) actualType).getActualTypeArguments()) {\n+            registerTypeVariablesOn(type);\n+        }\n+    } else if (!(actualType instanceof WildcardType) && !(actualType instanceof TypeVariable)) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}