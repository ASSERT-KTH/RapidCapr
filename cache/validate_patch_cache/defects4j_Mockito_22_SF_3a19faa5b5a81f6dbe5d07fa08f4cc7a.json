{
    "patch": "public static boolean areEqual(Object o1, Object o2) {\n    if (o1 == o2) {\n        return true;\n    }\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    }\n    if (o1.getClass().isArray() && o2.getClass().isArray()) {\n        int length = Array.getLength(o1);\n        if (length != Array.getLength(o2)) {\n            return false;\n        }\n        for (int i = 0; i < length; i++) {\n            Object e1 = Array.get(o1, i);\n            Object e2 = Array.get(o2, i);\n            if (e1 == e2) {\n                continue;\n            }\n            if (e1 == null || e2 == null) {\n                return false;\n            }\n            if (!e1.getClass().isArray() && !e2.getClass().isArray() && !e1.equals(e2)) {\n                return false;\n            }\n            if (e1.getClass().isArray() && e2.getClass().isArray() && !areEqual(e1, e2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return o1.equals(o2);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/matchers/Equality.java b/src/org/mockito/internal/matchers/Equality.java\nindex 43e11fca9..ab279eaef 100644\n--- a/src/org/mockito/internal/matchers/Equality.java\n+++ b/src/org/mockito/internal/matchers/Equality.java\n@@ -9,15 +9,39 @@ import java.lang.reflect.Array;\n //stolen from hamcrest because I didn't want to have more dependency than Matcher class \n public class Equality {\n \n-    public static boolean areEqual(Object o1, Object o2) {\n-        if (o1 == null || o2 == null) {\n-            return o1 == null && o2 == null;\n-        } else if (isArray(o1)) {\n-            return isArray(o2) && areArraysEqual(o1, o2);\n-        } else {\n-            return o1.equals(o2);\n-        }\n-    }\n+\n+public static boolean areEqual(Object o1, Object o2) {\n+    if (o1 == o2) {\n+        return true;\n+    }\n+    if (o1 == null || o2 == null) {\n+        return o1 == null && o2 == null;\n+    }\n+    if (o1.getClass().isArray() && o2.getClass().isArray()) {\n+        int length = Array.getLength(o1);\n+        if (length != Array.getLength(o2)) {\n+            return false;\n+        }\n+        for (int i = 0; i < length; i++) {\n+            Object e1 = Array.get(o1, i);\n+            Object e2 = Array.get(o2, i);\n+            if (e1 == e2) {\n+                continue;\n+            }\n+            if (e1 == null || e2 == null) {\n+                return false;\n+            }\n+            if (!e1.getClass().isArray() && !e2.getClass().isArray() && !e1.equals(e2)) {\n+                return false;\n+            }\n+            if (e1.getClass().isArray() && e2.getClass().isArray() && !areEqual(e1, e2)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    return o1.equals(o2);\n+}\n \n     static boolean areArraysEqual(Object o1, Object o2) {\n         return areArrayLengthsEqual(o1, o2)\n@@ -38,4 +62,4 @@ public class Equality {\n     static boolean isArray(Object o) {\n         return o.getClass().isArray();\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}