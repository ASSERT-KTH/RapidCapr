{
    "patch": "public ReturnValue execute(ExecutionEvent event) throws ExecutionException {\n    ISelection selection = HandlerUtil.getCurrentSelectionChecked(event);\n    if (!(selection instanceof IStructuredSelection))\n        return emptyReturnValue();\n    IStructuredSelection structuredSelection = (IStructuredSelection) selection;\n    Object firstElement = structuredSelection.getFirstElement();\n    if (!(firstElement instanceof IMethod))\n        return emptyReturnValue();\n    IMethod method = (IMethod) firstElement;\n    try {\n        String typeName = method.getDeclaringType().getFullyQualifiedName();\n        String methodName = method.getElementName();\n        List<TreePath> paths = QueryUtil.findMethodInvocationsInWorkspace(typeName, methodName);\n        int count = 0;\n        List<String> messages = new ArrayList<>();\n        for (TreePath treePath : paths) {\n            MethodInvocation methodInvocation = (MethodInvocation) treePath.getLeaf();\n            for (Object arg : methodInvocation.arguments()) {\n                if (arg instanceof MethodInvocation) {\n                    MethodInvocation innerMethodInvocation = (MethodInvocation) arg;\n                    if (innerMethodInvocation.getName().getFullyQualifiedName().equals(methodName))\n                        messages.add(buildErrorMessage(treePath));\n                }\n            }\n            count++;\n        }\n        int maxDepth = 0;\n        if (count > 0)\n            maxDepth = calculateMaxDepth(paths.get(0), 0);\n        return new ReturnValue(count, maxDepth, messages);\n    } catch (Exception e) {\n        e.printStackTrace();\n        return emptyReturnValue();\n    }\n}\n\nprivate ReturnValue emptyReturnValue() {\n    return new ReturnValue(0, 0, Collections.emptyList());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}