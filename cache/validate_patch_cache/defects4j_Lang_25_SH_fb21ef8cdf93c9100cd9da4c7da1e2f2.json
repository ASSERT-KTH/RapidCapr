{
    "patch": "// Initialize variables\nbyte[] encodedArray = strToConvert.getBytes(\"ISO-8859-1\");\nStringBuilder stringBuilder = new StringBuilder();\n\n// Loop through the array and convert each byte to its corresponding character\nfor (byte b : encodedArray) {\n    char c = (char) b;\n    if (c == '%' || ((c >= 'a') && (c <= 'f')) || ((c >= 'A') && (c <= 'F')) || ((c >= '0') && (c <= '9'))) {\n        stringBuilder.append(c);\n    } else {\n        stringBuilder.append(String.format(\"%%%02X\", b)); // Modified this line\n    }\n}\n\nString convertedString = stringBuilder.toString();\nboolean success = convertedString.equals(expectedString);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}