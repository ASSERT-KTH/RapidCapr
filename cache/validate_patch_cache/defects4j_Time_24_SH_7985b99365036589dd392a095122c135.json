{
    "patch": "            if (savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n                DateTimeField weekyear = savedFields[i].iField;\n                DateTimeField year = iChrono.year();\n                int yearValue = year.get(millis);\n                millis = year.set(millis, year.add(weekyear.get(millis), -1));\n                if (yearValue < year.get(millis)) {\n                    millis = year.set(millis, yearValue);\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2fdf2812 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType().equals(DateTimeFieldType.weekyear())) {\n+                DateTimeField weekyear = savedFields[i].iField;\n+                DateTimeField year = iChrono.year();\n+                int yearValue = year.get(millis);\n+                millis = year.set(millis, year.add(weekyear.get(millis), -1));\n+                if (yearValue < year.get(millis)) {\n+                    millis = year.set(millis, yearValue);\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}