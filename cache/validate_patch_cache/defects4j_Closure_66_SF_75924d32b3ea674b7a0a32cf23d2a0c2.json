{
    "patch": "public double getTypedPercent(String jsonStr) {\n    try {\n        JSONObject json = new JSONObject(jsonStr);\n        double count = 0.0;\n        double typedCount = 0.0;\n\n        Iterator<String> keys = json.keys();\n        while (keys.hasNext()) {\n            String key = keys.next();\n\n            count += json.getInt(key);\n            if (key.charAt(0) == 't') {\n                typedCount += json.getInt(key);\n            }\n        }\n\n        if (count == 0.0) {\n            return 0.0;\n        } else {\n            return ((typedCount / count) * 100.0);\n        }\n    } catch (JSONException e) {\n        e.printStackTrace();\n        return 0.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..807323e0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,32 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String jsonStr) {\n+    try {\n+        JSONObject json = new JSONObject(jsonStr);\n+        double count = 0.0;\n+        double typedCount = 0.0;\n+\n+        Iterator<String> keys = json.keys();\n+        while (keys.hasNext()) {\n+            String key = keys.next();\n+\n+            count += json.getInt(key);\n+            if (key.charAt(0) == 't') {\n+                typedCount += json.getInt(key);\n+            }\n+        }\n+\n+        if (count == 0.0) {\n+            return 0.0;\n+        } else {\n+            return ((typedCount / count) * 100.0);\n+        }\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+        return 0.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}