{
    "patch": "        // Look for the second underscore in the string, if any\n        int pos = str.indexOf('_', 3);\n        if (pos == -1) { // No further underscores\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, len - 2), str.substring(len - 2));\n            }\n        } else {\n            if (len == 5) { // We have '_country' suffix\n                return new Locale(str.substring(0, 2), str.substring(3, pos), str.substring(pos + 1, 5));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, pos), str.substring(pos + 1));\n            }\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..6ad3f496 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,21 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        // Look for the second underscore in the string, if any\n+        int pos = str.indexOf('_', 3);\n+        if (pos == -1) { // No further underscores\n+            if (len == 5) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(3, len - 2), str.substring(len - 2));\n+            }\n+        } else {\n+            if (len == 5) { // We have '_country' suffix\n+                return new Locale(str.substring(0, 2), str.substring(3, pos), str.substring(pos + 1, 5));\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(3, pos), str.substring(pos + 1));\n+            }\n+        }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}