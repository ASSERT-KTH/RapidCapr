{
    "patch": "      ArrayList<Node> unreferencedArgs = new ArrayList<>();\n      for (Node arg : argList.children()) {\n        if (arg.isUnusedParameter()) {\n          unreferencedArgs.add(arg);\n        }\n      }\n      for (Node arg : unreferencedArgs) {\n        argList.removeChild(arg);\n      }\n      compiler.reportCodeChange();\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..889bad1f 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,18 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      ArrayList<Node> unreferencedArgs = new ArrayList<>();\n+      for (Node arg : argList.children()) {\n+        if (arg.isUnusedParameter()) {\n+          unreferencedArgs.add(arg);\n+        }\n+      }\n+      for (Node arg : unreferencedArgs) {\n+        argList.removeChild(arg);\n+      }\n+      compiler.reportCodeChange();\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}