{
    "patch": "public static String unescape(String input) {\n    StringBuilder result = new StringBuilder(input.length());\n    for (int i = 0; i < input.length(); i++) {\n        char ch = input.charAt(i);\n        if (ch == '\\\\' && i < input.length() - 1) {\n            char nextChar = input.charAt(i + 1);\n            switch (nextChar) {\n                case 'n':\n                    ch = '\\n';\n                    break;\n                case 't':\n                    ch = '\\t';\n                    break;\n                case 'r':\n                    ch = '\\r';\n                    break;\n                case 'b':\n                    ch = '\\b';\n                    break;\n                case 'f':\n                    ch = '\\f';\n                    break;\n                case '\\\\':\n                    ch = '\\\\';\n                    break;\n                case '\\'':\n                    ch = '\\'';\n                    break;\n                case '\\\"':\n                    ch = '\\\"';\n                    break;\n                default:\n                    throw new RuntimeException(\"Invalid escape sequence: \\\\\" + nextChar);\n            }\n            i++;\n        }\n        result.append(ch);\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..a5c33eb4 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,46 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String input) {\n+    StringBuilder result = new StringBuilder(input.length());\n+    for (int i = 0; i < input.length(); i++) {\n+        char ch = input.charAt(i);\n+        if (ch == '\\\\' && i < input.length() - 1) {\n+            char nextChar = input.charAt(i + 1);\n+            switch (nextChar) {\n+                case 'n':\n+                    ch = '\\n';\n+                    break;\n+                case 't':\n+                    ch = '\\t';\n+                    break;\n+                case 'r':\n+                    ch = '\\r';\n+                    break;\n+                case 'b':\n+                    ch = '\\b';\n+                    break;\n+                case 'f':\n+                    ch = '\\f';\n+                    break;\n+                case '\\\\':\n+                    ch = '\\\\';\n+                    break;\n+                case '\\'':\n+                    ch = '\\'';\n+                    break;\n+                case '\\\"':\n+                    ch = '\\\"';\n+                    break;\n+                default:\n+                    throw new RuntimeException(\"Invalid escape sequence: \\\\\" + nextChar);\n+            }\n+            i++;\n+        }\n+        result.append(ch);\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}