{
    "patch": "} else if ((parent.isCall() || parent.isNew()) && parent.getFirstChild() == n) {\n      Node caller = parent.getParent();\n      if (caller.isExprResult() || NodeUtil.isExpressionResultUsed(caller)) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(recordNode.getLastChild(), ns);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..f09de9fd 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,13 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+} else if ((parent.isCall() || parent.isNew()) && parent.getFirstChild() == n) {\n+      Node caller = parent.getParent();\n+      if (caller.isExprResult() || NodeUtil.isExpressionResultUsed(caller)) {\n+        recordDepScope(recordNode, ns);\n+      } else {\n+        recordDepScope(recordNode.getLastChild(), ns);\n+      }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}