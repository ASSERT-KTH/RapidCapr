{
    "patch": "public static double regularizedGamma(double a, double x) {\n    if (a <= 0.0 || x < 0.0) {\n        throw new IllegalArgumentException(\"Invalid input for regularizedGamma: a=\" + a + \", x=\" + x);\n    }\n\n    double gammaValue = 0.5772156649015329;\n    double sum = 0.0;\n    double term = 1.0 / a;\n    double n = 1.0;\n    double an = a;\n    while (Math.abs(term) > 1e-15 * Math.abs(sum) + 1e-15) {\n        sum += term;\n        an *= (a + n);\n        term = an / (x + (a + n) * (1.0 + gammaValue + Math.log(n)));\n        n++;\n    }\n    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..109687b5d 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,24 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    if (a <= 0.0 || x < 0.0) {\n+        throw new IllegalArgumentException(\"Invalid input for regularizedGamma: a=\" + a + \", x=\" + x);\n+    }\n+\n+    double gammaValue = 0.5772156649015329;\n+    double sum = 0.0;\n+    double term = 1.0 / a;\n+    double n = 1.0;\n+    double an = a;\n+    while (Math.abs(term) > 1e-15 * Math.abs(sum) + 1e-15) {\n+        sum += term;\n+        an *= (a + n);\n+        term = an / (x + (a + n) * (1.0 + gammaValue + Math.log(n)));\n+        n++;\n+    }\n+    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}