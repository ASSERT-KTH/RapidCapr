{
    "patch": "public static List<String> separate_paren_groups(String paren_string) {\n    List<String> result = new ArrayList<>();\n    int openCount = 0;\n    StringBuilder sb = new StringBuilder();\n\n    for (char c : paren_string.toCharArray()) {\n        sb.append(c);\n\n        if (c == '(') {\n            openCount++;\n        } else if (c == ')') {\n            openCount--;\n            if (openCount == 0) {\n                result.add(sb.toString());\n                sb = new StringBuilder();\n            }\n        }\n    }\n\n    if (openCount != 0) {\n        throw new IllegalArgumentException(\"Parentheses are not balanced\");\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SEPARATE_PAREN_GROUPS.java b/src/main/java/humaneval/buggy/SEPARATE_PAREN_GROUPS.java\nindex 7769d68..f5eac1c 100644\n--- a/src/main/java/humaneval/buggy/SEPARATE_PAREN_GROUPS.java\n+++ b/src/main/java/humaneval/buggy/SEPARATE_PAREN_GROUPS.java\n@@ -4,25 +4,29 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class SEPARATE_PAREN_GROUPS {\n-    public static List<String> separate_paren_groups(String paren_string) {\n-        List<String> result = new ArrayList<String>();\n-        String current_string = \"\";\n-        int current_depth = 0;\n+public static List<String> separate_paren_groups(String paren_string) {\n+    List<String> result = new ArrayList<>();\n+    int openCount = 0;\n+    StringBuilder sb = new StringBuilder();\n \n-        for (char c : paren_string.toCharArray()) {\n-            if (c == '('){\n-                current_depth += 1;\n-                current_string += String.valueOf(c);\n-            } else {\n-                current_depth -= 1;\n-                current_string += String.valueOf(c);\n+    for (char c : paren_string.toCharArray()) {\n+        sb.append(c);\n \n-                if (current_depth == 0){\n-                    result.add(current_string);\n-                    current_string = \"\";\n-                }\n+        if (c == '(') {\n+            openCount++;\n+        } else if (c == ')') {\n+            openCount--;\n+            if (openCount == 0) {\n+                result.add(sb.toString());\n+                sb = new StringBuilder();\n             }\n         }\n-        return result;\n     }\n+\n+    if (openCount != 0) {\n+        throw new IllegalArgumentException(\"Parentheses are not balanced\");\n+    }\n+\n+    return result;\n+}\n }",
    "result_reason": "   TEST_SEPARATE_PAREN_GROUPS.test_0:13 arrays first differed at element [1]; expected:<[ ]((()))> but was:<[]((()))>",
    "test_result": "FAIL"
}