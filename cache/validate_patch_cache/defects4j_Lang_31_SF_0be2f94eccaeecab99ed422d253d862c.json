{
    "patch": "public class StringUtils {\n    \n    public static boolean containsAny(char[] str, char[] searchChars) {\n        int len = str.length;\n        int searchLen = searchChars.length;\n        int i = 0;\n        boolean[] table = new boolean[Character.MAX_VALUE];\n        \n        for (i = 0; i < searchLen; i++) {\n            table[searchChars[i]] = true;\n        }\n        \n        for (i = 0; i < len; i++) {\n            if (table[str[i]]) {\n                return true;\n            }\n            if (Character.isHighSurrogate(str[i])) {\n                if (i < len - 1 && table[str[i + 1]]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..8e17bba2 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+    \n+    public static boolean containsAny(char[] str, char[] searchChars) {\n+        int len = str.length;\n+        int searchLen = searchChars.length;\n+        int i = 0;\n+        boolean[] table = new boolean[Character.MAX_VALUE];\n+        \n+        for (i = 0; i < searchLen; i++) {\n+            table[searchChars[i]] = true;\n+        }\n+        \n+        for (i = 0; i < len; i++) {\n+            if (table[str[i]]) {\n+                return true;\n+            }\n+            if (Character.isHighSurrogate(str[i])) {\n+                if (i < len - 1 && table[str[i + 1]]) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}