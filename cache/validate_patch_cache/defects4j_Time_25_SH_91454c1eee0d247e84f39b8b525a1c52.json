{
    "patch": "        if (offsetLocal != offsetAdjusted) {\n            int diff = offsetLocal - offsetAdjusted;\n            long transitionInstant = (diff > 0) ? previousTransition(instantLocal - offsetAdjusted + diff*DateTimeConstants.MILLIS_PER_HOUR) : nextTransition(instantLocal - offsetAdjusted + diff*DateTimeConstants.MILLIS_PER_HOUR);\n            if (transitionInstant != instantAdjusted) {\n                int offsetTransition = getOffset(transitionInstant);\n                if (offsetTransition == offsetAdjusted || offsetTransition == offsetLocal) {\n                    return offsetTransition;\n                }   ",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..9fe4e40d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if (offsetLocal != offsetAdjusted) {\n+            int diff = offsetLocal - offsetAdjusted;\n+            long transitionInstant = (diff > 0) ? previousTransition(instantLocal - offsetAdjusted + diff*DateTimeConstants.MILLIS_PER_HOUR) : nextTransition(instantLocal - offsetAdjusted + diff*DateTimeConstants.MILLIS_PER_HOUR);\n+            if (transitionInstant != instantAdjusted) {\n+                int offsetTransition = getOffset(transitionInstant);\n+                if (offsetTransition == offsetAdjusted || offsetTransition == offsetLocal) {\n+                    return offsetTransition;\n+                }   \n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}