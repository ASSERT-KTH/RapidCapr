{
    "patch": "    public static double do_algebra(String[] operator, int[] operand) throws NumberFormatException, ScriptException {\n        String expression = \"\";\n        for (int i = 0; i < operand.length; i ++) {\n            expression += operand[i] + operator[i];\n            if (i != operand.length - 1) {\n                expression += \"+\";\n            }\n        }\n        ScriptEngineManager mgr = new ScriptEngineManager();\n        ScriptEngine engine = mgr.getEngineByName(\"JavaScript\");\n        return Double.parseDouble(engine.eval(expression).toString());\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DO_ALGEBRA.java b/src/main/java/humaneval/buggy/DO_ALGEBRA.java\nindex 08aedcb..fcdcaf0 100644\n--- a/src/main/java/humaneval/buggy/DO_ALGEBRA.java\n+++ b/src/main/java/humaneval/buggy/DO_ALGEBRA.java\n@@ -30,9 +30,18 @@ public class DO_ALGEBRA {\n     public static double do_algebra(String[] operator, int[] operand) throws NumberFormatException, ScriptException {\n         ScriptEngineManager mgr = new ScriptEngineManager();\n         ScriptEngine engine = mgr.getEngineByName(\"JavaScript\");\n+    public static double do_algebra(String[] operator, int[] operand) throws NumberFormatException, ScriptException {\n         String expression = \"\";\n-        for (int i = 0; i < operand.length; i += 1) {\n-            expression += operator[i] + operand[i];\n+        for (int i = 0; i < operand.length; i ++) {\n+            expression += operand[i] + operator[i];\n+            if (i != operand.length - 1) {\n+                expression += \"+\";\n+            }\n+        }\n+        ScriptEngineManager mgr = new ScriptEngineManager();\n+        ScriptEngine engine = mgr.getEngineByName(\"JavaScript\");\n+        return Double.parseDouble(engine.eval(expression).toString());\n+    }\n         }\n         return Double.parseDouble(engine.eval(expression).toString());\n     }",
    "result_reason": " /tmp/humaneval-DO_ALGEBRA/src/main/java/humaneval/buggy/DO_ALGEBRA.java:[33,5] illegal start of expression",
    "test_result": "ERROR"
}