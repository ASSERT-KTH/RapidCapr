{
    "patch": "if (offsetLocal == offsetAdjusted) {\n    return offsetAdjusted;\n}\n\nlong nextTransitionLocal = nextTransition(instantLocal);\nlong nextTransitionAdjusted = nextTransition(instantAdjusted);\n\nif (nextTransitionLocal == nextTransitionAdjusted) {\n    boolean gap = (offsetLocal < offsetAdjusted);\n    boolean overlap = (offsetLocal > offsetAdjusted);\n\n    if (gap || overlap) {\n        int offsetBeforeTransition = getOffset(nextTransitionLocal - 1);\n\n        if ((gap && (offsetBeforeTransition > offsetLocal)) || (overlap && (offsetBeforeTransition < offsetLocal))) {\n            return offsetBeforeTransition;\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a0df30b0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,26 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal == offsetAdjusted) {\n+    return offsetAdjusted;\n+}\n+\n+long nextTransitionLocal = nextTransition(instantLocal);\n+long nextTransitionAdjusted = nextTransition(instantAdjusted);\n+\n+if (nextTransitionLocal == nextTransitionAdjusted) {\n+    boolean gap = (offsetLocal < offsetAdjusted);\n+    boolean overlap = (offsetLocal > offsetAdjusted);\n+\n+    if (gap || overlap) {\n+        int offsetBeforeTransition = getOffset(nextTransitionLocal - 1);\n+\n+        if ((gap && (offsetBeforeTransition > offsetLocal)) || (overlap && (offsetBeforeTransition < offsetLocal))) {\n+            return offsetBeforeTransition;\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}