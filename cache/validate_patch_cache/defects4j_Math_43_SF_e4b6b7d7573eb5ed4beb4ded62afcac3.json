{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n\n    // check if meanImpl is an instance of Mean\n    if (meanImpl instanceof Mean) {\n        ((Mean) meanImpl).increment(value);\n    } else {\n        double prevMean = meanImpl.getResult();\n        double newMean = prevMean + (value - prevMean) / (n + 1);\n        meanImpl.increment(newMean);\n        if (varianceImpl instanceof Variance) {\n            ((Variance) varianceImpl).increment(value, newMean);\n        } else {\n            double prevVar = varianceImpl.getResult();\n            varianceImpl.increment((n - 1) * prevVar / n + (value - prevMean) * (value - newMean) / (n + 1));\n        }\n    }\n\n    if (value > 0) {\n        sumLogImpl.increment(Math.log(value));\n        if (geoMeanImpl instanceof GeometricMean) {\n            ((GeometricMean) geoMeanImpl).increment(Math.log(value));\n        } else {\n            geoMeanImpl.increment(value);\n        }\n    } else if (value == 0) {\n        if (geoMeanImpl instanceof GeometricMean) {\n            ((GeometricMean) geoMeanImpl).increment(0);\n        }\n    }\n\n    secondMoment.increment(value);\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..983f7fd5e 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,27 +146,44 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+\n+    // check if meanImpl is an instance of Mean\n+    if (meanImpl instanceof Mean) {\n+        ((Mean) meanImpl).increment(value);\n+    } else {\n+        double prevMean = meanImpl.getResult();\n+        double newMean = prevMean + (value - prevMean) / (n + 1);\n+        meanImpl.increment(newMean);\n+        if (varianceImpl instanceof Variance) {\n+            ((Variance) varianceImpl).increment(value, newMean);\n+        } else {\n+            double prevVar = varianceImpl.getResult();\n+            varianceImpl.increment((n - 1) * prevVar / n + (value - prevMean) * (value - newMean) / (n + 1));\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+    }\n+\n+    if (value > 0) {\n+        sumLogImpl.increment(Math.log(value));\n+        if (geoMeanImpl instanceof GeometricMean) {\n+            ((GeometricMean) geoMeanImpl).increment(Math.log(value));\n+        } else {\n             geoMeanImpl.increment(value);\n         }\n-        n++;\n+    } else if (value == 0) {\n+        if (geoMeanImpl instanceof GeometricMean) {\n+            ((GeometricMean) geoMeanImpl).increment(0);\n+        }\n     }\n \n+    secondMoment.increment(value);\n+    n++;\n+}\n+\n     /**\n      * Returns the number of available values\n      * @return The number of available values",
    "result_reason": "error: no suitable method found for increment(double,double)",
    "test_result": "ERROR"
}