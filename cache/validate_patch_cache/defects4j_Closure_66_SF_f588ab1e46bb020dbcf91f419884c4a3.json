{
    "patch": "public double getTypedPercent(String jsonStr) throws JSONException {\n    JSONObject jsonObject = new JSONObject(jsonStr);\n    int typedCount = jsonObject.optInt(\"typedCount\", 0);\n    int totalCount = jsonObject.optInt(\"totalCount\", 0);\n    double typedPercent = 0.0;\n    \n    if (totalCount > 0) {\n        typedPercent = (double) typedCount / totalCount * 100.0;\n    }\n    \n    return typedPercent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a82ef5c6 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String jsonStr) throws JSONException {\n+    JSONObject jsonObject = new JSONObject(jsonStr);\n+    int typedCount = jsonObject.optInt(\"typedCount\", 0);\n+    int totalCount = jsonObject.optInt(\"totalCount\", 0);\n+    double typedPercent = 0.0;\n+    \n+    if (totalCount > 0) {\n+        typedPercent = (double) typedCount / totalCount * 100.0;\n+    }\n+    \n+    return typedPercent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}