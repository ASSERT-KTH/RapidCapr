{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                int year = savedFields[i].iValue;\n                if (year < 1 || year > 9999) {\n                    throw new IllegalFieldValueException(DateTimeFieldType.weekyear(), Integer.valueOf(year), null, null);\n                }\n                int weeks = 0;\n                if (iChrono.weekyears().isLeap(year)) {\n                    DateTimeFieldValue fieldValue = savedFields[i].iLowerBound;\n                    if (fieldValue == null || fieldValue.getWrappedValue() < 0) {\n                        weeks = 53;\n                    } else {\n                        weeks = 52;\n                    }\n                } else {\n                    weeks = 52;\n                }\n                saveField(DateTimeFieldType.weekyear(), year);\n                saveField(DateTimeFieldType.weekOfWeekyear(), Math.min(weeks, savedFields[i + 1].iValue));\n                iSavedFieldsCount = i + 1;\n                iSavedFieldsShared = false;\n                computeMillis(resetFields, text);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..3d4528e0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,28 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                int year = savedFields[i].iValue;\n+                if (year < 1 || year > 9999) {\n+                    throw new IllegalFieldValueException(DateTimeFieldType.weekyear(), Integer.valueOf(year), null, null);\n+                }\n+                int weeks = 0;\n+                if (iChrono.weekyears().isLeap(year)) {\n+                    DateTimeFieldValue fieldValue = savedFields[i].iLowerBound;\n+                    if (fieldValue == null || fieldValue.getWrappedValue() < 0) {\n+                        weeks = 53;\n+                    } else {\n+                        weeks = 52;\n+                    }\n+                } else {\n+                    weeks = 52;\n+                }\n+                saveField(DateTimeFieldType.weekyear(), year);\n+                saveField(DateTimeFieldType.weekOfWeekyear(), Math.min(weeks, savedFields[i + 1].iValue));\n+                iSavedFieldsCount = i + 1;\n+                iSavedFieldsShared = false;\n+                computeMillis(resetFields, text);\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}