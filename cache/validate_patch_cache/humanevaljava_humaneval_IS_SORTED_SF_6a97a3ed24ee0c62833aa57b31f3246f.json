{
    "patch": "public static boolean is_sorted(int[] lst) {\n    boolean ascending = true;\n    boolean descending = true;\n    for(int i = 1; i < lst.length; i++) {\n        if (lst[i-1] < lst[i]) {\n            descending = false;\n        } else if (lst[i-1] > lst[i]) {\n            ascending = false;\n        }\n    }\n    return ascending || descending;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..1d520cd 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,16 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n+public static boolean is_sorted(int[] lst) {\n+    boolean ascending = true;\n+    boolean descending = true;\n+    for(int i = 1; i < lst.length; i++) {\n+        if (lst[i-1] < lst[i]) {\n+            descending = false;\n+        } else if (lst[i-1] > lst[i]) {\n+            ascending = false;\n         }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n-        }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n-        }\n-        return true;\n     }\n+    return ascending || descending;\n+}\n }",
    "result_reason": "   TEST_IS_SORTED.test_10:57 expected:<false> but was:<true>",
    "test_result": "FAIL"
}