{
    "patch": "    try {\n        for (int i = 0; i < count; i++) {\n            millis = savedFields[i].set(millis, resetFields);\n            if (millis == Long.MAX_VALUE) {\n                if (text != null) {\n                    throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": maximum value exceeded\");\n                } else {\n                    throw new IllegalArgumentException(\"maximum value exceeded\");\n                }\n            }\n            if (millis == Long.MIN_VALUE) {\n                if (text != null) {\n                    throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": minimum value exceeded\");\n                } else {\n                    throw new IllegalArgumentException(\"minimum value exceeded\");\n                }\n            }\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..3640d035 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,30 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+    try {\n+        for (int i = 0; i < count; i++) {\n+            millis = savedFields[i].set(millis, resetFields);\n+            if (millis == Long.MAX_VALUE) {\n+                if (text != null) {\n+                    throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": maximum value exceeded\");\n+                } else {\n+                    throw new IllegalArgumentException(\"maximum value exceeded\");\n+                }\n+            }\n+            if (millis == Long.MIN_VALUE) {\n+                if (text != null) {\n+                    throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": minimum value exceeded\");\n+                } else {\n+                    throw new IllegalArgumentException(\"minimum value exceeded\");\n+                }\n+            }\n+        }\n+    } catch (IllegalFieldValueException e) {\n+        if (text != null) {\n+            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+        }\n+        throw e;\n+    }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Cannot parse \"2005-10 BC\": minimum value exceeded",
    "test_result": "FAIL"
}