{
    "patch": "                long prevLocal = previousTransition(instantAdjusted);\n                int offsetPrev = getOffset(prevLocal);\n\n                long nextLocal = nextTransition(instantAdjusted);\n                int offsetNext = getOffset(nextLocal);\n\n                if (offsetNext > offsetLocal) {\n                    return offsetNext;\n                } else if (offsetPrev < offsetLocal) {\n                    return offsetPrev;\n                } else { // (offsetPrev <= offsetLocal && offsetLocal <= offsetNext)\n                    if (offsetNext - offsetLocal > offsetLocal - offsetPrev) {\n                        return offsetPrev;\n                    } else if (offsetNext - offsetLocal < offsetLocal - offsetPrev) {\n                        return offsetNext;\n                    } else {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..ec4d8ba4 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,24 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long prevLocal = previousTransition(instantAdjusted);\n+                int offsetPrev = getOffset(prevLocal);\n+\n+                long nextLocal = nextTransition(instantAdjusted);\n+                int offsetNext = getOffset(nextLocal);\n+\n+                if (offsetNext > offsetLocal) {\n+                    return offsetNext;\n+                } else if (offsetPrev < offsetLocal) {\n+                    return offsetPrev;\n+                } else { // (offsetPrev <= offsetLocal && offsetLocal <= offsetNext)\n+                    if (offsetNext - offsetLocal > offsetLocal - offsetPrev) {\n+                        return offsetPrev;\n+                    } else if (offsetNext - offsetLocal < offsetLocal - offsetPrev) {\n+                        return offsetNext;\n+                    } else {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}