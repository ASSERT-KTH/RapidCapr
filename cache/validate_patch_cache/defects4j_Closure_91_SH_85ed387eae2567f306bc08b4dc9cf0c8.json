{
    "patch": "      if (NodeUtil.isGet(lhs) && !NodeUtil.isPrototypeProperty(lhs)) {\n        // Only traverse the right side if it's not an assignment to a prototype\n        // property or subproperty.\n        return true;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..bcb507d6 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,11 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(lhs) && !NodeUtil.isPrototypeProperty(lhs)) {\n+        // Only traverse the right side if it's not an assignment to a prototype\n+        // property or subproperty.\n+        return true;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}