{
    "patch": "return mayBeStringHelper(n) || (recurse && allResultsMatch(n, new Predicate<Node>() {\n  @Override\n  public boolean apply(Node node) {\n    return mayBeStringHelper(node);\n  }\n}));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eef27927..8507a310 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1414,7 +1414,12 @@ public final class NodeUtil {\n \n   static boolean mayBeString(Node n, boolean recurse) {\n     if (recurse) {\n-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n+return mayBeStringHelper(n) || (recurse && allResultsMatch(n, new Predicate<Node>() {\n+  @Override\n+  public boolean apply(Node node) {\n+    return mayBeStringHelper(node);\n+  }\n+}));\n     } else {\n       return mayBeStringHelper(n);\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}