{
    "patch": "            // begin infill\n            if (savedFields[0].iField.getType().equals(DateTimeFieldType.weekyear())) {\n                long weeks = 0;\n                long tempMillis = iChrono.year().set(0L, iDefaultYear) + iMillis;\n                for (int i = 0; i < count; i++) {\n                    DurationField fieldType = savedFields[i].iField.getDurationField();\n                    if (compareReverse(fieldType, DurationFieldType.weekyears()) < 0) {\n                        tempMillis = savedFields[i].set(tempMillis, resetFields);\n                    } else if (fieldType.equals(DurationFieldType.weekyears())) {\n                        weeks = savedFields[i].set(weeks, resetFields);\n                    }\n                }\n                tempMillis = setWeekyear(tempMillis, iChrono.weekyear().get(tempMillis));\n                tempMillis = setWeekOfWeekyear(tempMillis, 1);\n                millis = addWeeks(tempMillis, weeks);\n                saveField(DateTimeFieldType.weekyear(), getWeekyear(millis, iMillis));\n                saveField(DateTimeFieldType.weekOfWeekyear(), DateTimeConstants.MIN_WEEKS_IN_YEAR);\n                return millis;\n            }\n            // end infill",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..97415cb7 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            // begin infill\n+            if (savedFields[0].iField.getType().equals(DateTimeFieldType.weekyear())) {\n+                long weeks = 0;\n+                long tempMillis = iChrono.year().set(0L, iDefaultYear) + iMillis;\n+                for (int i = 0; i < count; i++) {\n+                    DurationField fieldType = savedFields[i].iField.getDurationField();\n+                    if (compareReverse(fieldType, DurationFieldType.weekyears()) < 0) {\n+                        tempMillis = savedFields[i].set(tempMillis, resetFields);\n+                    } else if (fieldType.equals(DurationFieldType.weekyears())) {\n+                        weeks = savedFields[i].set(weeks, resetFields);\n+                    }\n+                }\n+                tempMillis = setWeekyear(tempMillis, iChrono.weekyear().get(tempMillis));\n+                tempMillis = setWeekOfWeekyear(tempMillis, 1);\n+                millis = addWeeks(tempMillis, weeks);\n+                saveField(DateTimeFieldType.weekyear(), getWeekyear(millis, iMillis));\n+                saveField(DateTimeFieldType.weekOfWeekyear(), DateTimeConstants.MIN_WEEKS_IN_YEAR);\n+                return millis;\n+            }\n+            // end infill\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: method compareReverse in class DateTimeParserBucket cannot be applied to given types;",
    "test_result": "ERROR"
}