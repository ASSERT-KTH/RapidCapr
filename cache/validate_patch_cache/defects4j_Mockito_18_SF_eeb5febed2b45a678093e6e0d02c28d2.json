{
    "patch": "public static String reverseString(String s) {\n    if (s == null || s.length() == 0) {\n        return s;\n    }\n    char[] chars = s.toCharArray();\n    int i = 0, j = chars.length - 1;\n    while (i < j) {\n        char temp = chars[i];\n        chars[i++] = chars[j];\n        chars[j--] = temp;\n    }\n    return new String(chars);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..ee7c897c1 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,19 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static String reverseString(String s) {\n+    if (s == null || s.length() == 0) {\n+        return s;\n+    }\n+    char[] chars = s.toCharArray();\n+    int i = 0, j = chars.length - 1;\n+    while (i < j) {\n+        char temp = chars[i];\n+        chars[i++] = chars[j];\n+        chars[j--] = temp;\n+    }\n+    return new String(chars);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}