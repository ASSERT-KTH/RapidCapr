{
    "patch": "    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        int size = elementPairs.size();\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            Separator sep = null;\n            for (int i = size - 2; i >= 0; i -= 2) {\n                Object cur = elementPairs.get(i);\n                if (cur instanceof Separator && i != 0) {\n                    if (sep == null) {\n                        sep = (Separator) cur;\n                    } else {\n                        sep = sep.finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n                        comp = createComposite(elementPairs.subList(i + 1, size));\n                        sep = ((Separator) cur).finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n                    }\n                } else {\n                    if (sep != null) {\n                        sep = sep.finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n                        comp = createComposite(elementPairs.subList(i + 1, size));\n                        return new PeriodFormatter(sep.finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]), sep);\n                    } else {\n                        comp = createComposite(elementPairs.subList(i + 1, size));\n                        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n                    }\n                }\n            }\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..b8763a2e 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -796,18 +796,34 @@ public class PeriodFormatterBuilder {\n             throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n         }\n         int size = elementPairs.size();\n-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n-            Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n-        }\n         Object[] comp = createComposite(elementPairs);\n         if (notPrinter) {\n             return new PeriodFormatter(null, (PeriodParser) comp[1]);\n         } else if (notParser) {\n             return new PeriodFormatter((PeriodPrinter) comp[0], null);\n         } else {\n+            Separator sep = null;\n+            for (int i = size - 2; i >= 0; i -= 2) {\n+                Object cur = elementPairs.get(i);\n+                if (cur instanceof Separator && i != 0) {\n+                    if (sep == null) {\n+                        sep = (Separator) cur;\n+                    } else {\n+                        sep = sep.finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+                        comp = createComposite(elementPairs.subList(i + 1, size));\n+                        sep = ((Separator) cur).finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+                    }\n+                } else {\n+                    if (sep != null) {\n+                        sep = sep.finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+                        comp = createComposite(elementPairs.subList(i + 1, size));\n+                        return new PeriodFormatter(sep.finish((PeriodPrinter) comp[0], (PeriodParser) comp[1]), sep);\n+                    } else {\n+                        comp = createComposite(elementPairs.subList(i + 1, size));\n+                        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+                    }\n+                }\n+            }\n             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n         }\n     }",
    "result_reason": "java.lang.IndexOutOfBoundsException: Index: 1, Size: 1",
    "test_result": "FAIL"
}