{
    "patch": "public static List<Integer> parse_nested_parens(String paren_string) {\n    String[] paren_groups = paren_string.split(\" \");\n    List<Integer> result = new ArrayList<Integer>();\n\n    for (String paren_group : paren_groups) {\n        int depth = 0;\n        int max_depth = 0;\n        boolean isValid = true;\n        for (char c : paren_group.toCharArray()){\n            if (c == '('){\n                depth += 1;\n            }\n            else if (c == ')'){\n                depth -= 1;\n                if (depth < 0) {\n                    isValid = false;\n                    break;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\nindex 6bc914f..fa9b5ef 100644\n--- a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n+++ b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n@@ -4,22 +4,21 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class PARSE_NESTED_PARENS {\n-    public static List<Integer> parse_nested_parens(String paren_string) {\n-        String[] paren_groups = paren_string.split(\" \");\n-        List<Integer> result = new ArrayList<Integer>();\n+public static List<Integer> parse_nested_parens(String paren_string) {\n+    String[] paren_groups = paren_string.split(\" \");\n+    List<Integer> result = new ArrayList<Integer>();\n \n-        for (String paren_group : paren_groups) {\n-            int depth = 0;\n-            int max_depth = 0;\n-            for (char c : paren_group.toCharArray()){\n-                if (c == '('){\n-                    depth += 1;\n-                    max_depth = Math.max(depth, max_depth);\n-                }\n+    for (String paren_group : paren_groups) {\n+        int depth = 0;\n+        int max_depth = 0;\n+        boolean isValid = true;\n+        for (char c : paren_group.toCharArray()){\n+            if (c == '('){\n+                depth += 1;\n             }\n-            result.add(max_depth);\n-        }\n-\n-        return result;\n-    }\n+            else if (c == ')'){\n+                depth -= 1;\n+                if (depth < 0) {\n+                    isValid = false;\n+                    break;\n }",
    "result_reason": " /tmp/humaneval-PARSE_NESTED_PARENS/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java:[24,2] reached end of file while parsing",
    "test_result": "ERROR"
}