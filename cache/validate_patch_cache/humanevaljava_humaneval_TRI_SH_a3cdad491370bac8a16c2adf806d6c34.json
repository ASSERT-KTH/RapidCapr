{
    "patch": "public static int[] tri(int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"n must be non-negative\");\n    }\n    int[] sequence = new int[n + 1];\n    sequence[0] = 1;\n    if (n == 0) {\n        return sequence;\n    }\n    sequence[1] = 3;\n    for (int i = 2; i <= n; i++) {\n        if (i % 2 == 0) {\n            sequence[i] = sequence[i / 2] * sequence[i / 2];\n        } else {\n            sequence[i] = sequence[i - 1] + sequence[i - 2];\n        }\n    }\n    return sequence;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRI.java b/src/main/java/humaneval/buggy/TRI.java\nindex dc4d32a..a82458e 100644\n--- a/src/main/java/humaneval/buggy/TRI.java\n+++ b/src/main/java/humaneval/buggy/TRI.java\n@@ -27,10 +27,25 @@ public class TRI {\n             return sequence;\n         }\n         sequence[0] = 1;\n-        sequence[1] = -3;\n-        for(int i = 2; i < n - 1; i--) {\n-            if(i % 2 == 0) sequence[i] = i / 2 - 1;\n-            else sequence[i] = sequence[i - 1] - sequence[i - 2] - (i + 3) / 2;\n+public static int[] tri(int n) {\n+    if (n < 0) {\n+        throw new IllegalArgumentException(\"n must be non-negative\");\n+    }\n+    int[] sequence = new int[n + 1];\n+    sequence[0] = 1;\n+    if (n == 0) {\n+        return sequence;\n+    }\n+    sequence[1] = 3;\n+    for (int i = 2; i <= n; i++) {\n+        if (i % 2 == 0) {\n+            sequence[i] = sequence[i / 2] * sequence[i / 2];\n+        } else {\n+            sequence[i] = sequence[i - 1] + sequence[i - 2];\n+        }\n+    }\n+    return sequence;\n+}\n         }\n         return sequence;\n ",
    "result_reason": " /tmp/humaneval-TRI/src/main/java/humaneval/buggy/TRI.java:[30,1] illegal start of expression",
    "test_result": "ERROR"
}