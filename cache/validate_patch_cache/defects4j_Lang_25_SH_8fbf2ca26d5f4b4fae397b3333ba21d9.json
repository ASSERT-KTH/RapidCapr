{
    "patch": "StringBuilder sb = new StringBuilder();\nint i = 0;\nchar c;\nwhile (i < data.length) {\n    c = data[i++];\n    if (c == ESCAPE_CHAR) {\n        if (i < data.length) {\n            c = data[i++];\n            if (c == 'n') {\n                sb.append('\\n');\n            } else if (c == 'r') {\n                sb.append('\\r');\n            } else if (c == 't') {\n                sb.append('\\t');\n            } else if (c == 'f') {\n                sb.append('\\f');\n            } else if (c == ESCAPE_CHAR) {\n                sb.append(ESCAPE_CHAR);\n            }\n            // skip the unknown escape sequences\n        } else {\n            sb.append(ESCAPE_CHAR);\n        }\n    } else {\n        sb.append(c);\n    }\n}\nreturn sb.toString().getBytes(\"ISO-8859-1\");",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}