{
    "patch": "    Name name = functionNode.getFunctionName();\n    Node node = newNode(Token.FUNCTION);\n    \n    if (name == null) {\n        name = new Name();\n        name.setIdentifier(\"\");\n    }\n    \n    Node newName = transform(name);\n    int functionLineNo = functionNode.getLineno();\n    newName.setLineno(functionLineNo);\n    newName.setCharno(position2charno(functionNode.getAbsolutePosition()));\n    node.addChildToBack(newName);\n    \n    node.addChildToBack(newNode(Token.LP));\n    for (AstNode param : functionNode.getParams()) {\n        node.getLastChild().addChildToBack(transform(param));\n    }\n    node.getLastChild().addChildToBack(newNode(Token.RP));\n    node.addChildToBack(transform(functionNode.getBody()));\n    \n    return node;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..bdbfd91b 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,28 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+    Name name = functionNode.getFunctionName();\n+    Node node = newNode(Token.FUNCTION);\n+    \n+    if (name == null) {\n+        name = new Name();\n+        name.setIdentifier(\"\");\n+    }\n+    \n+    Node newName = transform(name);\n+    int functionLineNo = functionNode.getLineno();\n+    newName.setLineno(functionLineNo);\n+    newName.setCharno(position2charno(functionNode.getAbsolutePosition()));\n+    node.addChildToBack(newName);\n+    \n+    node.addChildToBack(newNode(Token.LP));\n+    for (AstNode param : functionNode.getParams()) {\n+        node.getLastChild().addChildToBack(transform(param));\n+    }\n+    node.getLastChild().addChildToBack(newNode(Token.RP));\n+    node.addChildToBack(transform(functionNode.getBody()));\n+    \n+    return node;\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}