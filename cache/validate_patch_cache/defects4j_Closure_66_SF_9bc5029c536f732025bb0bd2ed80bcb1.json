{
    "patch": "public double getTypedPercent(String json) {\n    double count = 0;\n    double total = 0;\n    JSONArray arr = new JSONArray(json);\n    \n    for (int i = 0; i < arr.length(); i++) {\n        JSONObject obj = arr.getJSONObject(i);\n        if (obj.getBoolean(\"typed\")) {\n            count++;\n        }\n        total++;\n    }\n    \n    return (count / total) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a5af7717 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String json) {\n+    double count = 0;\n+    double total = 0;\n+    JSONArray arr = new JSONArray(json);\n+    \n+    for (int i = 0; i < arr.length(); i++) {\n+        JSONObject obj = arr.getJSONObject(i);\n+        if (obj.getBoolean(\"typed\")) {\n+            count++;\n+        }\n+        total++;\n+    }\n+    \n+    return (count / total) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}