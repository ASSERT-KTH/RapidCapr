{
    "patch": "public double getTypedPercent(String json) {\n    int total = 0;\n    int typed = 0;\n    for (int i = 0; i < json.length(); i++) {\n        char c = json.charAt(i);\n        if (c == '{' || c == '}') {\n            continue;\n        }\n        if (c == 't' || c == 'f' || c == 'n') {\n            typed++;\n        }\n        total++;\n    }\n    return ((double) typed / total) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..b971ab15 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String json) {\n+    int total = 0;\n+    int typed = 0;\n+    for (int i = 0; i < json.length(); i++) {\n+        char c = json.charAt(i);\n+        if (c == '{' || c == '}') {\n+            continue;\n+        }\n+        if (c == 't' || c == 'f' || c == 'n') {\n+            typed++;\n+        }\n+        total++;\n+    }\n+    return ((double) typed / total) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}