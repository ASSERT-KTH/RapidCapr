{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (!result.trim().startsWith(\"/**\")) {\n        return null;\n    }\n    result = result.replaceAll(\"\\\\s*[*]/?\\\\s*\", \" \"); // remove any leading/trailing spaces and * or */\n    result = result.replaceFirst(\"/\\\\*\\\\*[ ]*\", \"\"); // remove opening /**\n    result = result.replaceAll(\"\\\\*/$\", \"\"); // remove any trailing */\n    result = result.replaceAll(\"\\\\s+\", \" \"); // replace multiple spaces with a single space\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..9d0e0f07 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,17 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+    if (!result.trim().startsWith(\"/**\")) {\n+        return null;\n+    }\n+    result = result.replaceAll(\"\\\\s*[*]/?\\\\s*\", \" \"); // remove any leading/trailing spaces and * or */\n+    result = result.replaceFirst(\"/\\\\*\\\\*[ ]*\", \"\"); // remove opening /**\n+    result = result.replaceAll(\"\\\\*/$\", \"\"); // remove any trailing */\n+    result = result.replaceAll(\"\\\\s+\", \" \"); // replace multiple spaces with a single space\n+    return result.trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}