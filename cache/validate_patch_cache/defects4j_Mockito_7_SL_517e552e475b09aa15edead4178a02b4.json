{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument != null) {\n    registerTypeVariablesOn(actualTypeArgument);\n}\n\nfor (Type type : typeVariable.getBounds()) {\n    if (type instanceof Class && ((Class<?>) type).isAssignableFrom(Object.class)) {\n        continue;\n    }\n    if (type instanceof TypeVariable) {\n        Type actualTypeArgumentForBound = getActualTypeArgumentFor((TypeVariable<?>) type);\n        if (actualTypeArgumentForBound != null) {\n            registerTypeVariablesOn(actualTypeArgumentForBound);\n        }\n    }\n    try {\n        registerTypeVariablesOn(type);\n    } catch (IllegalArgumentException e) {\n        continue;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..784e3ca42 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,32 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument != null) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+}\n+\n+for (Type type : typeVariable.getBounds()) {\n+    if (type instanceof Class && ((Class<?>) type).isAssignableFrom(Object.class)) {\n+        continue;\n+    }\n+    if (type instanceof TypeVariable) {\n+        Type actualTypeArgumentForBound = getActualTypeArgumentFor((TypeVariable<?>) type);\n+        if (actualTypeArgumentForBound != null) {\n+            registerTypeVariablesOn(actualTypeArgumentForBound);\n+        }\n+    }\n+    try {\n+        registerTypeVariablesOn(type);\n+    } catch (IllegalArgumentException e) {\n+        continue;\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}