{
    "patch": "    ControlFlowGraph<Node> cfg = NodeUtil.buildCfgFromNode(compiler, node);\n      boolean hasExceptionHandler = false;\n      for (BasicBlock<Node> block : cfg.getBlocks()) {\n        if (block.getFirstChild().isTry()) {\n          hasExceptionHandler = true;\n          break;\n        }\n      }\n      return hasExceptionHandler;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..c7c1d293 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,15 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+    ControlFlowGraph<Node> cfg = NodeUtil.buildCfgFromNode(compiler, node);\n+      boolean hasExceptionHandler = false;\n+      for (BasicBlock<Node> block : cfg.getBlocks()) {\n+        if (block.getFirstChild().isTry()) {\n+          hasExceptionHandler = true;\n+          break;\n+        }\n+      }\n+      return hasExceptionHandler;\n     return false;\n   }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}