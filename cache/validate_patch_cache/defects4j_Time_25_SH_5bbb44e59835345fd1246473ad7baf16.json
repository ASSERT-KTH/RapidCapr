{
    "patch": "final int delta = offsetLocal - offsetAdjusted;\nif (delta >= 0) {\n    // Find the next transition\n    long nextTransition = nextTransition(instantAdjusted);\n    long adjNextTransition = nextTransition(instantLocal - offsetAdjusted);\n    if (adjNextTransition != nextTransition) {\n        return offsetLocal;\n    }\n} else {\n    // Find the previous transition\n    long prevTransition = previousTransition(instantLocal - offsetAdjusted);\n    long adjPrevTransition = previousTransition(instantAdjusted);\n    int offsetPrev = getOffset(prevTransition);\n    int offsetBeforePrev = getOffset(previousTransition(prevTransition));\n    if (offsetBeforePrev < offsetPrev && offsetPrev < offsetAdjusted) {\n        // Use the previous transition and set the offset to the before-prev offset\n        return offsetBeforePrev;\n    } else if (offsetPrev < offsetAdjusted && offsetAdjusted < offsetLocal + delta) {\n        // Use the previous transition and set the offset to the new adjusted offset\n        return offsetAdjusted;\n    } else {\n        // Use the current transition and set the offset to the new adjusted offset\n        return offsetLocal + delta;\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..f369533f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,32 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+final int delta = offsetLocal - offsetAdjusted;\n+if (delta >= 0) {\n+    // Find the next transition\n+    long nextTransition = nextTransition(instantAdjusted);\n+    long adjNextTransition = nextTransition(instantLocal - offsetAdjusted);\n+    if (adjNextTransition != nextTransition) {\n+        return offsetLocal;\n+    }\n+} else {\n+    // Find the previous transition\n+    long prevTransition = previousTransition(instantLocal - offsetAdjusted);\n+    long adjPrevTransition = previousTransition(instantAdjusted);\n+    int offsetPrev = getOffset(prevTransition);\n+    int offsetBeforePrev = getOffset(previousTransition(prevTransition));\n+    if (offsetBeforePrev < offsetPrev && offsetPrev < offsetAdjusted) {\n+        // Use the previous transition and set the offset to the before-prev offset\n+        return offsetBeforePrev;\n+    } else if (offsetPrev < offsetAdjusted && offsetAdjusted < offsetLocal + delta) {\n+        // Use the previous transition and set the offset to the new adjusted offset\n+        return offsetAdjusted;\n+    } else {\n+        // Use the current transition and set the offset to the new adjusted offset\n+        return offsetLocal + delta;\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}