{
    "patch": "public static <T> ReturnValue<T> returnValueFor(Class<T> clazz) {\n    if (clazz == Iterable.class) {\n        return new IterableReturnValue<>(Collections.emptyList());\n    }\n    return null;\n}\n\nprivate static class IterableReturnValue<T> implements ReturnValue<Iterable<T>> {\n\n    private final Iterable<T> iterable;\n\n    public IterableReturnValue(Iterable<T> iterable) {\n        this.iterable = iterable;\n    }\n\n    @Override\n    public Iterable<T> getValue() {\n        return iterable;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..31e8d388f 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,26 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static <T> ReturnValue<T> returnValueFor(Class<T> clazz) {\n+    if (clazz == Iterable.class) {\n+        return new IterableReturnValue<>(Collections.emptyList());\n+    }\n+    return null;\n+}\n+\n+private static class IterableReturnValue<T> implements ReturnValue<Iterable<T>> {\n+\n+    private final Iterable<T> iterable;\n+\n+    public IterableReturnValue(Iterable<T> iterable) {\n+        this.iterable = iterable;\n+    }\n+\n+    @Override\n+    public Iterable<T> getValue() {\n+        return iterable;\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}