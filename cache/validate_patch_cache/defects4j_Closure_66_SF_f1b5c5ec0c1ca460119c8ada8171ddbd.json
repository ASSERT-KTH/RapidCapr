{
    "patch": "public double getTypedPercent(String jsonString) {\n    JsonArray jsonArray = JsonParser.parseString(jsonString).getAsJsonArray();\n    int typedCount = 0;\n\n    for(JsonElement element : jsonArray) {\n        JsonObject jsonObject = element.getAsJsonObject();\n        String type = jsonObject.get(\"type\").getAsString();\n        if(type.equals(\"typed\")) {\n            typedCount++;\n        }\n    }\n\n    return ((double) typedCount / jsonArray.size()) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..ddb3b97b 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String jsonString) {\n+    JsonArray jsonArray = JsonParser.parseString(jsonString).getAsJsonArray();\n+    int typedCount = 0;\n+\n+    for(JsonElement element : jsonArray) {\n+        JsonObject jsonObject = element.getAsJsonObject();\n+        String type = jsonObject.get(\"type\").getAsString();\n+        if(type.equals(\"typed\")) {\n+            typedCount++;\n+        }\n+    }\n+\n+    return ((double) typedCount / jsonArray.size()) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}