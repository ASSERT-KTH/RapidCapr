{
    "patch": "private void readTypeVariables() {\n    if (typeVariable instanceof TypeVariable) {\n        for (Type bound : ((TypeVariable) typeVariable).getBounds()) {\n            if (bound instanceof TypeVariable) {\n                registerTypeVariablesOn(getActualTypeArgumentFor(bound));\n            } else {\n                registerTypeVariablesOn(bound);\n            }\n        }\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..bfc53e9b5 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    if (typeVariable instanceof TypeVariable) {\n+        for (Type bound : ((TypeVariable) typeVariable).getBounds()) {\n+            if (bound instanceof TypeVariable) {\n+                registerTypeVariablesOn(getActualTypeArgumentFor(bound));\n+            } else {\n+                registerTypeVariablesOn(bound);\n+            }\n+        }\n+        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: incompatible types: Type cannot be converted to TypeVariable",
    "test_result": "ERROR"
}