{
    "patch": "public static String unescape(String str) {\n    StringBuffer buf = new StringBuffer(str.length());\n    for (int i=0; i<str.length(); i++) {\n        char ch = str.charAt(i);\n        if (ch == '\\\\' && i+1 < str.length()) { // check for escape character\n            char nextChar = str.charAt(i+1);\n            switch (nextChar) {\n                case 'n':  buf.append('\\n'); break;\n                case 'r':  buf.append('\\r'); break;\n                case 't':  buf.append('\\t'); break;\n                case '\"':  buf.append('\"'); break;\n                case '\\'': buf.append('\\''); break;\n                case '\\\\': buf.append('\\\\'); break;\n                default:   buf.append(ch);   break;\n            }\n            i++; // increment i to skip the escape character\n        }\n        else {\n            buf.append(ch);\n        }\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..4c9ba8e5 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,29 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str) {\n+    StringBuffer buf = new StringBuffer(str.length());\n+    for (int i=0; i<str.length(); i++) {\n+        char ch = str.charAt(i);\n+        if (ch == '\\\\' && i+1 < str.length()) { // check for escape character\n+            char nextChar = str.charAt(i+1);\n+            switch (nextChar) {\n+                case 'n':  buf.append('\\n'); break;\n+                case 'r':  buf.append('\\r'); break;\n+                case 't':  buf.append('\\t'); break;\n+                case '\"':  buf.append('\"'); break;\n+                case '\\'': buf.append('\\''); break;\n+                case '\\\\': buf.append('\\\\'); break;\n+                default:   buf.append(ch);   break;\n+            }\n+            i++; // increment i to skip the escape character\n+        }\n+        else {\n+            buf.append(ch);\n+        }\n+    }\n+    return buf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}