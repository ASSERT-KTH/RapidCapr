{
    "patch": "if (values.getException() == null) {\n    // Original code below\n    //assertEquals(expectedValue, values.returnValue());\n\n    // Fixed code\n    Object actualValue = values.returnValue();\n    if (expectedValue == null) {\n        assertNull(actualValue);\n    } else {\n        assertEquals(expectedValue.getClass(), actualValue.getClass());\n        assertEquals(expectedValue, actualValue);\n    }\n} else {\n    // Original code below\n    //fail(\"Test failed due to exception:\\n\" + values.getException());\n\n    // Fixed code\n    Throwable expectedException = values.getException();\n    assertNotNull(expectedException);\n    assertThat(expectedException).isInstanceOf(expectedExceptionClass);\n    assertEquals(expectedExceptionMessage, expectedException.getMessage());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}