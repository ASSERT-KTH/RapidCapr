{
    "patch": "    final Node functionNode = fnScope.getRootNode();\n    Preconditions.checkState(functionNode.isFunction());\n    if (NodeUtil.isGetOrSetKey(functionNode.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    // Get the function arguments list.\n    final Node argList = functionNode.getSecondChild();\n\n    // List of arguments that should be removed.\n    final List<Node> argsToRemove = new ArrayList<>();\n\n    // Traverse the arguments to find the ones that are unreferenced.\n    Node child = argList.getFirstChild();\n    while (child != null) {\n      final String argName = child.getString();\n      final Var var = fnScope.getVar(argName);\n      if (var == null || !referenced.contains(var)) {\n        argsToRemove.add(child);\n      }\n      child = child.getNext();\n    }\n\n    // Remove all the unreferenced arguments from the arguments list.\n    for (Node arg : argsToRemove) {\n      arg.detachFromParent();\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..33dd60ae 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,34 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    final Node functionNode = fnScope.getRootNode();\n+    Preconditions.checkState(functionNode.isFunction());\n+    if (NodeUtil.isGetOrSetKey(functionNode.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    // Get the function arguments list.\n+    final Node argList = functionNode.getSecondChild();\n+\n+    // List of arguments that should be removed.\n+    final List<Node> argsToRemove = new ArrayList<>();\n+\n+    // Traverse the arguments to find the ones that are unreferenced.\n+    Node child = argList.getFirstChild();\n+    while (child != null) {\n+      final String argName = child.getString();\n+      final Var var = fnScope.getVar(argName);\n+      if (var == null || !referenced.contains(var)) {\n+        argsToRemove.add(child);\n+      }\n+      child = child.getNext();\n+    }\n+\n+    // Remove all the unreferenced arguments from the arguments list.\n+    for (Node arg : argsToRemove) {\n+      arg.detachFromParent();\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}