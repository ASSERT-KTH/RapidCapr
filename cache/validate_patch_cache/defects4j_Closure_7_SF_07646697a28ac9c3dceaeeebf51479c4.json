{
    "patch": "public JSType caseObjectType(ObjectType type) {\n  if (value.equals(\"function\")) {\n    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n    return resultEqualsValue && ctorType != null && ctorType.isSubtype(type) ? ctorType : null;\n      // Objects are restricted to \"Function\", subtypes are left\n      // Only filter out subtypes of \"function\"\n  }\n  return matchesExpectation(\"object\") ? type : null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..4f9a26b3 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -607,15 +607,15 @@ public abstract class ChainableReverseAbstractInterpreter\n     }\n \n     @Override\n-    public JSType caseObjectType(ObjectType type) {\n-      if (value.equals(\"function\")) {\n-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n-          // Objects are restricted to \"Function\", subtypes are left\n-          // Only filter out subtypes of \"function\"\n-      }\n-      return matchesExpectation(\"object\") ? type : null;\n-    }\n+public JSType caseObjectType(ObjectType type) {\n+  if (value.equals(\"function\")) {\n+    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n+    return resultEqualsValue && ctorType != null && ctorType.isSubtype(type) ? ctorType : null;\n+      // Objects are restricted to \"Function\", subtypes are left\n+      // Only filter out subtypes of \"function\"\n+  }\n+  return matchesExpectation(\"object\") ? type : null;\n+}\n \n     @Override\n     public JSType caseStringType() {",
    "result_reason": "junit.framework.AssertionFailedError: Expected: (Object|boolean|number|string)",
    "test_result": "FAIL"
}