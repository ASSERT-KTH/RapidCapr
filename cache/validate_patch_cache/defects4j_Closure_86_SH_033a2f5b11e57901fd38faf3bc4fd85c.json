{
    "patch": "switch (value.getType()) {\n    case Token.NEW:\n    case Token.FUNCTION:\n    case Token.REGEXP:\n    case Token.ARRAYLIT:\n    case Token.OBJECTLIT:\n    case Token.IN:\n        // Interpret the value as ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex dd78f900..99444b75 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -2462,7 +2462,14 @@ public final class NodeUtil {\n         // TODO(nicksantos): This needs to be changed so that it\n         // returns true iff we're sure the value was never aliased from inside\n         // the constructor (similar to callHasLocalResult)\n-        return true;\n+switch (value.getType()) {\n+    case Token.NEW:\n+    case Token.FUNCTION:\n+    case Token.REGEXP:\n+    case Token.ARRAYLIT:\n+    case Token.OBJECTLIT:\n+    case Token.IN:\n+        // Interpret the value as \n       case Token.FUNCTION:\n       case Token.REGEXP:\n       case Token.ARRAYLIT:",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}