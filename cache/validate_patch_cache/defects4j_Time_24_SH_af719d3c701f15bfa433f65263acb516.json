{
    "patch": "        savedFields = savedFields.clone();\n        count = iSavedFieldsCount;\n        millis = iMillis;\n        boolean error = false;\n        for (int i = 0; i < count; i++) {\n            try {\n                if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                    throw new IllegalArgumentException(\"Weekyears can not be set\");\n                }\n                millis = savedFields[i].set(millis, resetFields);\n            } catch (IllegalArgumentException e) {\n                if (text != null) {\n                    StringBuilder buf = new StringBuilder();\n                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n                    buf.append(e.getMessage());\n                    throw new IllegalArgumentException(buf.toString(), e);\n                }\n                throw e;\n            } catch (RuntimeException e) {\n                error = true;\n            }\n        }\n        if (error) {\n            if (text != null) {\n                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": Invalid format\");\n            } else {\n                throw new IllegalArgumentException(\"Invalid format\");",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..aa9f3f09 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,33 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        savedFields = savedFields.clone();\n+        count = iSavedFieldsCount;\n+        millis = iMillis;\n+        boolean error = false;\n+        for (int i = 0; i < count; i++) {\n+            try {\n+                if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                    throw new IllegalArgumentException(\"Weekyears can not be set\");\n+                }\n+                millis = savedFields[i].set(millis, resetFields);\n+            } catch (IllegalArgumentException e) {\n+                if (text != null) {\n+                    StringBuilder buf = new StringBuilder();\n+                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n+                    buf.append(e.getMessage());\n+                    throw new IllegalArgumentException(buf.toString(), e);\n+                }\n+                throw e;\n+            } catch (RuntimeException e) {\n+                error = true;\n+            }\n+        }\n+        if (error) {\n+            if (text != null) {\n+                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\": Invalid format\");\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid format\");\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}