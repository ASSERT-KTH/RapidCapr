{
    "patch": "public ReturnValues execute(CallableProgram callableProgram, Map<String, Object> inputParameters) throws Exception {\n    ReturnValues values = new ReturnValues();\n    // Store the input parameters for later use\n    values.setInputParameters(inputParameters);\n    try {\n        // Invoke the program\n        Object returnValue = callableProgram.call();\n        // Store the return value for later use\n        values.setReturnValue(returnValue);\n        // Check if the program returned an Iterable and store an iterator for later use\n        if (returnValue instanceof Iterable) {\n            Iterator<?> iterator = ((Iterable<?>) returnValue).iterator();\n            values.putTemporaryVariable(ITERATOR_VARIABLE_NAME, iterator);\n        }\n    } catch (Exception e) {\n        // Store the exception for later use\n        values.setException(e);\n        // Set the return value to null\n        values.setReturnValue(null);\n    }\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}