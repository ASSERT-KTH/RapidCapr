{
    "patch": "    ObjectType thisObj = thisRegistry.getThisType();\n    if (thisObj != null && thisObj.isNominalSubtype(constraintObj)) {\n      for (String prop : constraintObj.getOwnPropertyNames()) {\n        if (!isPropertyTypeDeclared(prop)) {\n          defineInferredProperty(prop, constraintObj.getPropertyType(prop), null);\n        }\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..60dc75b7 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,14 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+    ObjectType thisObj = thisRegistry.getThisType();\n+    if (thisObj != null && thisObj.isNominalSubtype(constraintObj)) {\n+      for (String prop : constraintObj.getOwnPropertyNames()) {\n+        if (!isPropertyTypeDeclared(prop)) {\n+          defineInferredProperty(prop, constraintObj.getPropertyType(prop), null);\n+        }\n+      }\n+    }\n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}