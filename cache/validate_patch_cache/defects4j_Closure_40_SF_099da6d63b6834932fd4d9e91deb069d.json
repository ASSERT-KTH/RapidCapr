{
    "patch": "import com.google.javascript.jscomp.NodeUtil;\n\npublic void visit(NodeTraversal t, Node n, Node parent) {\n\n  // Record global variable and function declarations\n  if (t.inGlobalScope()) {\n    if (NodeUtil.isVarDeclaration(n)) {\n      try {\n        NameInformation ns = createNameInformation(t, n, parent);\n        Preconditions.checkNotNull(ns);\n        recordSet(ns.name, n);\n      } catch (NullPointerException e) {\n        // handle null values returned by createNameInformation\n        // or Preconditions.checkNotNull\n        System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n      }\n    } else if (NodeUtil.isFunctionDeclaration(n)) {\n      Node nameNode = n.getFirstChild();\n      try {\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null) {\n          JsName nameInfo = getName(nameNode.getString(), true);\n          recordSet(nameInfo.name, nameNode);\n        }\n      } catch (NullPointerException e) {\n        // handle null values returned by createNameInformation or getName\n        System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n      }\n    } else if (NodeUtil.isObjectLitKey(n, parent)) {\n      try {\n        NameInformation ns = createNameInformation(t, n, parent);\n        if (ns != null) {\n          recordSet(ns.name, n);\n        }\n      } catch (NullPointerException e) {\n        // handle null values returned by createNameInformation\n        System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n      }\n    }\n  }\n\n  // Record assignments and call sites\n  if (n.isAssign()) {\n    Node nameNode = n.getFirstChild();\n    try {\n      NameInformation ns = createNameInformation(t, nameNode, n);\n      if (ns != null) {\n        if (ns.isPrototype) {\n          recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);\n        } else {\n          recordSet(ns.name, nameNode);\n        }\n      }\n    } catch (NullPointerException e) {\n      System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n    }\n  } else if (n.isCall()) {\n    Node nameNode = n.getFirstChild();\n    try {\n      NameInformation ns = createNameInformation(t, nameNode, n);\n      if (ns != null && ns.onlyAffectsClassDef) {\n        JsName name = getName(ns.name, false);\n        if (name != null) {\n        refNodes.add(new ClassDefiningFunctionNode(\n            name, n, parent, parent.getParent()));\n        }\n      }\n    } catch (NullPointerException e) {\n      System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 088a9933..002c1144 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -593,53 +593,78 @@ final class NameAnalyzer implements CompilerPass {\n   private class FindDeclarationsAndSetters extends AbstractPostOrderCallback {\n \n     @Override\n-    public void visit(NodeTraversal t, Node n, Node parent) {\n+import com.google.javascript.jscomp.NodeUtil;\n+\n+public void visit(NodeTraversal t, Node n, Node parent) {\n \n-      // Record global variable and function declarations\n-      if (t.inGlobalScope()) {\n-        if (NodeUtil.isVarDeclaration(n)) {\n-          NameInformation ns = createNameInformation(t, n, parent);\n-          Preconditions.checkNotNull(ns);\n+  // Record global variable and function declarations\n+  if (t.inGlobalScope()) {\n+    if (NodeUtil.isVarDeclaration(n)) {\n+      try {\n+        NameInformation ns = createNameInformation(t, n, parent);\n+        Preconditions.checkNotNull(ns);\n+        recordSet(ns.name, n);\n+      } catch (NullPointerException e) {\n+        // handle null values returned by createNameInformation\n+        // or Preconditions.checkNotNull\n+        System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n+      }\n+    } else if (NodeUtil.isFunctionDeclaration(n)) {\n+      Node nameNode = n.getFirstChild();\n+      try {\n+        NameInformation ns = createNameInformation(t, nameNode, n);\n+        if (ns != null) {\n+          JsName nameInfo = getName(nameNode.getString(), true);\n+          recordSet(nameInfo.name, nameNode);\n+        }\n+      } catch (NullPointerException e) {\n+        // handle null values returned by createNameInformation or getName\n+        System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n+      }\n+    } else if (NodeUtil.isObjectLitKey(n, parent)) {\n+      try {\n+        NameInformation ns = createNameInformation(t, n, parent);\n+        if (ns != null) {\n           recordSet(ns.name, n);\n-        } else if (NodeUtil.isFunctionDeclaration(n)) {\n-          Node nameNode = n.getFirstChild();\n-          NameInformation ns = createNameInformation(t, nameNode, n);\n-          if (ns != null) {\n-            JsName nameInfo = getName(nameNode.getString(), true);\n-            recordSet(nameInfo.name, nameNode);\n-          }\n-        } else if (NodeUtil.isObjectLitKey(n, parent)) {\n-          NameInformation ns = createNameInformation(t, n, parent);\n-          if (ns != null) {\n-            recordSet(ns.name, n);\n-          }\n         }\n+      } catch (NullPointerException e) {\n+        // handle null values returned by createNameInformation\n+        System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n       }\n+    }\n+  }\n \n-      // Record assignments and call sites\n-      if (n.isAssign()) {\n-        Node nameNode = n.getFirstChild();\n-\n-        NameInformation ns = createNameInformation(t, nameNode, n);\n-        if (ns != null) {\n-          if (ns.isPrototype) {\n-            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);\n-          } else {\n-            recordSet(ns.name, nameNode);\n-          }\n+  // Record assignments and call sites\n+  if (n.isAssign()) {\n+    Node nameNode = n.getFirstChild();\n+    try {\n+      NameInformation ns = createNameInformation(t, nameNode, n);\n+      if (ns != null) {\n+        if (ns.isPrototype) {\n+          recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);\n+        } else {\n+          recordSet(ns.name, nameNode);\n         }\n-      } else if (n.isCall()) {\n-        Node nameNode = n.getFirstChild();\n-        NameInformation ns = createNameInformation(t, nameNode, n);\n-        if (ns != null && ns.onlyAffectsClassDef) {\n-          JsName name = getName(ns.name, false);\n-          if (name != null) {\n-          refNodes.add(new ClassDefiningFunctionNode(\n-              name, n, parent, parent.getParent()));\n-          }\n+      }\n+    } catch (NullPointerException e) {\n+      System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n+    }\n+  } else if (n.isCall()) {\n+    Node nameNode = n.getFirstChild();\n+    try {\n+      NameInformation ns = createNameInformation(t, nameNode, n);\n+      if (ns != null && ns.onlyAffectsClassDef) {\n+        JsName name = getName(ns.name, false);\n+        if (name != null) {\n+        refNodes.add(new ClassDefiningFunctionNode(\n+            name, n, parent, parent.getParent()));\n         }\n       }\n+    } catch (NullPointerException e) {\n+      System.err.println(\"Null pointer exception caught: \" + e.getMessage());\n     }\n+  }\n+}\n \n     /**\n      * Records the assignment of a value to a global name.",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}