{
    "patch": "            if (len >= 7 && str.charAt(5) == '_') {\n                if (len == 7 || len == 8 && str.charAt(6) == '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                } else if (len == 9) {\n                    if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7))) {\n                        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n                    } else {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                } else if (len == 10) {\n                    if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7)) &&\n                            str.charAt(8) == '_') {\n                        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 8));\n                    } else {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                } else if (len == 11) {\n                    if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7)) &&\n                            str.charAt(8) == '_' && (Character.isUpperCase(str.charAt(9)) ||\n                            Character.isLowerCase(str.charAt(9)))) {\n                        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 9) + str.substring(10));\n                    } else {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                }\n            } else {\n                return new Locale.Builder().setLanguageTag(str).build();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..c6dfc560 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,33 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            if (len >= 7 && str.charAt(5) == '_') {\n+                if (len == 7 || len == 8 && str.charAt(6) == '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                } else if (len == 9) {\n+                    if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7))) {\n+                        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                    } else {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                } else if (len == 10) {\n+                    if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7)) &&\n+                            str.charAt(8) == '_') {\n+                        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 8));\n+                    } else {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                } else if (len == 11) {\n+                    if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7)) &&\n+                            str.charAt(8) == '_' && (Character.isUpperCase(str.charAt(9)) ||\n+                            Character.isLowerCase(str.charAt(9)))) {\n+                        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 9) + str.substring(10));\n+                    } else {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                }\n+            } else {\n+                return new Locale.Builder().setLanguageTag(str).build();\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}