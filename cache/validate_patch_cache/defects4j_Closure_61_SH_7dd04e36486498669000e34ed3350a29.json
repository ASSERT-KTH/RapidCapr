{
    "patch": "// Functions in the \"Math\" namespace have no side effects.\nif (nameNode.isGetProp()) {\n  Node namespaceNode = nameNode.getFirstChild();\n  Node memberName = namespaceNode.getNext();\n  if (namespaceNode.isName() && \"Math\".equals(namespaceNode.getString())) {\n    if (memberName.isString() && !memberName.getString().isEmpty()) {\n      if (Objects.requireNonNull(memberName.getString()).matches(\"[a-zA-Z]+\")) {\n        return false;\n      }\n    }\n  }\n} else if (nameNode.isName() && \"Math\".equals(nameNode.getString())) {\n  return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..a8b265f4 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,20 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+// Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.isGetProp()) {\n+  Node namespaceNode = nameNode.getFirstChild();\n+  Node memberName = namespaceNode.getNext();\n+  if (namespaceNode.isName() && \"Math\".equals(namespaceNode.getString())) {\n+    if (memberName.isString() && !memberName.getString().isEmpty()) {\n+      if (Objects.requireNonNull(memberName.getString()).matches(\"[a-zA-Z]+\")) {\n+        return false;\n+      }\n+    }\n+  }\n+} else if (nameNode.isName() && \"Math\".equals(nameNode.getString())) {\n+  return false;\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}