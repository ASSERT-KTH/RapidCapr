{
    "patch": "public static double getTypedPercent(String[] js) {\n    double total = 0;\n    double typed = 0;\n    \n    for (int i = 0; i < js.length; i++) {\n        String[] parts = js[i].split(\": \");\n        total += Double.parseDouble(parts[1]);\n        if (parts[0].equals(\" typed\")) {\n            typed += Double.parseDouble(parts[1]);\n        }\n    }\n    \n    return typed / total * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..01509102 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String[] js) {\n+    double total = 0;\n+    double typed = 0;\n+    \n+    for (int i = 0; i < js.length; i++) {\n+        String[] parts = js[i].split(\": \");\n+        total += Double.parseDouble(parts[1]);\n+        if (parts[0].equals(\" typed\")) {\n+            typed += Double.parseDouble(parts[1]);\n+        }\n+    }\n+    \n+    return typed / total * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}