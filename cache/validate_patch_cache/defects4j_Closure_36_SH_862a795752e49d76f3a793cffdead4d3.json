{
    "patch": "          if (callNode.getFirstChild().matchesQualifiedName(\"(window|document)\")) {\n            String propName = NodeUtil.getStringValue(callNode.getSecondChild());\n            if (propName != null\n                && propName.equals(value.getLastChild().getString())) {\n              Node valueParent = value.getParent();\n              if (valueParent.isAssign()) {\n                value = valueParent;\n              }\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..72568f68 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,15 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (callNode.getFirstChild().matchesQualifiedName(\"(window|document)\")) {\n+            String propName = NodeUtil.getStringValue(callNode.getSecondChild());\n+            if (propName != null\n+                && propName.equals(value.getLastChild().getString())) {\n+              Node valueParent = value.getParent();\n+              if (valueParent.isAssign()) {\n+                value = valueParent;\n+              }\n+            }\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}