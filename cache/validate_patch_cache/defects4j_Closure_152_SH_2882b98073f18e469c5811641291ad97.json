{
    "patch": "JSType typeOfThisResolved = safeResolve(typeOfThis, t, scope);\nif (typeOfThisResolved == null) {\n  // Case 1: typeOfThis did not resolve to anything, set it to UNKNOWN_TYPE\n  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n} else if (typeOfThisResolved instanceof NamedType) {\n  // Case 2: typeOfThis resolved to a NamedType, use the referenced type\n  NamedType namedType = (NamedType) typeOfThisResolved;\n  JSType resolvedType = namedType.getReferencedType();\n  if (resolvedType instanceof ObjectType) {\n    typeOfThis = (ObjectType) resolvedType;\n  } else {\n    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n  }\n} else if (typeOfThisResolved instanceof ObjectType) {\n  // Case 3: typeOfThis resolved to an ObjectType\n  typeOfThis = (ObjectType) typeOfThisResolved;\n} else {\n  // Case 4: typeOfThis resolved to another type, set it to UNKNOWN_TYPE\n  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex fc2578d8..8e6a3c9d 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -868,7 +868,26 @@ public class FunctionType extends PrototypeObjectType {\n     // Warning about typeOfThis if it doesn't resolve to an ObjectType\n     // is handled further upstream.\n     // TODO(nicksantos): Handle this correctly if we have a UnionType.\n-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);\n+JSType typeOfThisResolved = safeResolve(typeOfThis, t, scope);\n+if (typeOfThisResolved == null) {\n+  // Case 1: typeOfThis did not resolve to anything, set it to UNKNOWN_TYPE\n+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n+} else if (typeOfThisResolved instanceof NamedType) {\n+  // Case 2: typeOfThis resolved to a NamedType, use the referenced type\n+  NamedType namedType = (NamedType) typeOfThisResolved;\n+  JSType resolvedType = namedType.getReferencedType();\n+  if (resolvedType instanceof ObjectType) {\n+    typeOfThis = (ObjectType) resolvedType;\n+  } else {\n+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n+  }\n+} else if (typeOfThisResolved instanceof ObjectType) {\n+  // Case 3: typeOfThis resolved to an ObjectType\n+  typeOfThis = (ObjectType) typeOfThisResolved;\n+} else {\n+  // Case 4: typeOfThis resolved to another type, set it to UNKNOWN_TYPE\n+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n+}\n \n     boolean changed = false;\n     ImmutableList.Builder<ObjectType> resolvedInterfaces =",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}