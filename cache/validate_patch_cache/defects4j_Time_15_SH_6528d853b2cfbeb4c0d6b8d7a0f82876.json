{
    "patch": "        long total = val1 * val2;\n        if (val2 < 0 ? val1 > 0 && total > Long.MIN_VALUE : val1 < 0 && total < Long.MIN_VALUE) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        switch (val2) {\n            case -1:\n                return -val1;\n            case 0:\n                return 0L;\n            case 1:\n                return val1;\n            default:\n                return total;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..c64f1745 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -135,6 +135,20 @@ public class FieldUtils {\n     public static long safeMultiply(long val1, int val2) {\n         switch (val2) {\n             case -1:\n+        long total = val1 * val2;\n+        if (val2 < 0 ? val1 > 0 && total > Long.MIN_VALUE : val1 < 0 && total < Long.MIN_VALUE) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+        switch (val2) {\n+            case -1:\n+                return -val1;\n+            case 0:\n+                return 0L;\n+            case 1:\n+                return val1;\n+            default:\n+                return total;\n+        }\n                 return -val1;\n             case 0:\n                 return 0L;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}