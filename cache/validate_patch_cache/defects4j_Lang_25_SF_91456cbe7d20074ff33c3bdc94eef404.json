{
    "patch": "public static String unescape(String str) {\n    StringBuilder buf = new StringBuilder(str.length());\n    int i = 0;\n    while (i < str.length()) {\n        char ch = str.charAt(i++);\n        if (ch == '\\\\') {\n            if (i == str.length()) {\n                throw new IllegalArgumentException(\"Invalid escape character at end of string\");\n            }\n            ch = str.charAt(i++);\n            if (ch == 't') {\n                ch = '\\t';\n            } else if (ch == 'r') {\n                ch = '\\r';\n            } else if (ch == 'n') {\n                ch = '\\n';\n            } else if (ch == 'f') {\n                ch = '\\f';\n            } else if (ch == '\\\\') {\n                ch = '\\\\';\n            } else if (ch == '\\'') {\n                ch = '\\'';\n            } else if (ch == '\\\"') {\n                ch = '\\\"';\n            } else if (ch >= '0' && ch <= '7') {\n                int octValue = Character.digit(ch, 8);\n                if (i < str.length() && str.charAt(i) >= '0' && str.charAt(i) <= '7') {\n                    octValue = octValue * 8 + Character.digit(str.charAt(i++), 8);\n                }\n                if (i < str.length() && str.charAt(i) >= '0' && str.charAt(i) <= '7') {\n                    octValue = octValue * 8 + Character.digit(str.charAt(i++), 8);\n                }\n                ch = (char) octValue;\n            } else {\n                throw new IllegalArgumentException(\"Invalid escape character '\" + ch + \"'\");\n            }\n        }\n        buf.append(ch);\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..411f997c 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,47 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str) {\n+    StringBuilder buf = new StringBuilder(str.length());\n+    int i = 0;\n+    while (i < str.length()) {\n+        char ch = str.charAt(i++);\n+        if (ch == '\\\\') {\n+            if (i == str.length()) {\n+                throw new IllegalArgumentException(\"Invalid escape character at end of string\");\n+            }\n+            ch = str.charAt(i++);\n+            if (ch == 't') {\n+                ch = '\\t';\n+            } else if (ch == 'r') {\n+                ch = '\\r';\n+            } else if (ch == 'n') {\n+                ch = '\\n';\n+            } else if (ch == 'f') {\n+                ch = '\\f';\n+            } else if (ch == '\\\\') {\n+                ch = '\\\\';\n+            } else if (ch == '\\'') {\n+                ch = '\\'';\n+            } else if (ch == '\\\"') {\n+                ch = '\\\"';\n+            } else if (ch >= '0' && ch <= '7') {\n+                int octValue = Character.digit(ch, 8);\n+                if (i < str.length() && str.charAt(i) >= '0' && str.charAt(i) <= '7') {\n+                    octValue = octValue * 8 + Character.digit(str.charAt(i++), 8);\n+                }\n+                if (i < str.length() && str.charAt(i) >= '0' && str.charAt(i) <= '7') {\n+                    octValue = octValue * 8 + Character.digit(str.charAt(i++), 8);\n+                }\n+                ch = (char) octValue;\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid escape character '\" + ch + \"'\");\n+            }\n+        }\n+        buf.append(ch);\n+    }\n+    return buf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}