{
    "patch": "        double maxY = Double.NEGATIVE_INFINITY; // keep track of maximum y value\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end && index < this.data.size(); index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                copy.add(clone); // copy the item to the copy's list\n\n                // update maximum y-value if needed\n                if (clone.getValue() != null) {\n                    double yValue = clone.getValue().doubleValue();\n                    if (yValue > maxY) {\n                        maxY = yValue;\n                    }\n                }\n\n            }\n        }\n        if (maxY > 101.0) {\n            throw new IllegalStateException(\"Max y-value exceeds 101.0: \" + maxY);",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..1f6360b 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,26 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        double maxY = Double.NEGATIVE_INFINITY; // keep track of maximum y value\n+        if (this.data.size() > 0) {\n+            for (int index = start; index <= end && index < this.data.size(); index++) {\n+                TimeSeriesDataItem item\n+                        = (TimeSeriesDataItem) this.data.get(index);\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                copy.add(clone); // copy the item to the copy's list\n+\n+                // update maximum y-value if needed\n+                if (clone.getValue() != null) {\n+                    double yValue = clone.getValue().doubleValue();\n+                    if (yValue > maxY) {\n+                        maxY = yValue;\n+                    }\n+                }\n+\n+            }\n+        }\n+        if (maxY > 101.0) {\n+            throw new IllegalStateException(\"Max y-value exceeds 101.0: \" + maxY);\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}