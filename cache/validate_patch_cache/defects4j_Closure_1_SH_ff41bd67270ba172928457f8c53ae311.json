{
    "patch": "Node function = fnScope.getRootNode();\nList<Node> params = NodeUtil.getFunctionParameters(function);\nif (params != null) {\n  for (int i = params.size() - 1; i >= 0; i--) {\n    Node param = params.get(i);\n    Var var = fnScope.getVar(param.getString());\n    if (!referenced.contains(var)) {\n      param.detach();\n      compiler.reportCodeChange();\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d709aec0 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,18 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+List<Node> params = NodeUtil.getFunctionParameters(function);\n+if (params != null) {\n+  for (int i = params.size() - 1; i >= 0; i--) {\n+    Node param = params.get(i);\n+    Var var = fnScope.getVar(param.getString());\n+    if (!referenced.contains(var)) {\n+      param.detach();\n+      compiler.reportCodeChange();\n+    }\n+  }\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}