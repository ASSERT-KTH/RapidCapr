{
    "patch": "      // Is this a normal property access, or are we trying to override\n      // an existing property?\n      boolean isOverride = t.inGlobalScope() &&\n          parent.getType() == Token.ASSIGN &&\n          parent.getFirstChild() == getprop;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..00c83e91 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -411,11 +411,15 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n     String propertyName = getprop.getLastChild().getString();\n \n     if (objectType != null) {\n+      // Is this a normal property access, or are we trying to override\n+      // an existing property?\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n       boolean isOverride = t.inGlobalScope() &&\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n+          parent.getType() == Token.ASSIGN &&\n+          parent.getFirstChild() == getprop;\n \n       // Find the lowest property defined on a class with visibility\n       // information.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}