{
    "patch": "@Test\npublic void testIssue301() {\n    final StringWriter out = new StringWriter();\n    try (PrintWriter writer = new PrintWriter(out)) {\n        final DiagnosticListener<JavaFileObject> listener = new SimpleJavaFileObjectDiagnosticListener(\n                writer);\n        final List<String> options = new ArrayList<>();\n        options.add(\"-proc:none\");\n        final CompilationUnitTree cut = JavacTestUtils\n                .compile(\"public class Foo { boolean test() { return new Empty().isEmptyType(); } }\",\n                        options, listener);\n        final boolean found = out.toString().contains(\"isEmptyType method is being called\");\n        assertFalse(\"expected no warning\", found);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..bacf10b0 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,21 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+@Test\n+public void testIssue301() {\n+    final StringWriter out = new StringWriter();\n+    try (PrintWriter writer = new PrintWriter(out)) {\n+        final DiagnosticListener<JavaFileObject> listener = new SimpleJavaFileObjectDiagnosticListener(\n+                writer);\n+        final List<String> options = new ArrayList<>();\n+        options.add(\"-proc:none\");\n+        final CompilationUnitTree cut = JavacTestUtils\n+                .compile(\"public class Foo { boolean test() { return new Empty().isEmptyType(); } }\",\n+                        options, listener);\n+        final boolean found = out.toString().contains(\"isEmptyType method is being called\");\n+        assertFalse(\"expected no warning\", found);\n+    }\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}