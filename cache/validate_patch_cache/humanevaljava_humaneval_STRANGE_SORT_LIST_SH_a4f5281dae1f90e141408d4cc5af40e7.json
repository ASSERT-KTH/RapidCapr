{
    "patch": "    public static List<Integer> strange_sort_list(List<Integer> lst) {\n        List<Integer> result = new ArrayList<Integer>(lst);\n        Collections.sort(result);\n        List<Integer> sorted = new ArrayList<Integer>();\n\n        int left = 0;\n        int right = result.size() - 1;\n        while(left <= right){\n            if(left == right) {\n                sorted.add(result.get(left));\n                break;\n            }\n            sorted.add(result.get(left));\n            sorted.add(result.get(right));\n            left++;\n            right--;\n        }\n        return sorted;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\nindex 094f5de..5dd2dbf 100644\n--- a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n+++ b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n@@ -24,6 +24,25 @@ public class STRANGE_SORT_LIST {\n             } else {\n                 result.add(Collections.max(lst));\n             }\n+    public static List<Integer> strange_sort_list(List<Integer> lst) {\n+        List<Integer> result = new ArrayList<Integer>(lst);\n+        Collections.sort(result);\n+        List<Integer> sorted = new ArrayList<Integer>();\n+\n+        int left = 0;\n+        int right = result.size() - 1;\n+        while(left <= right){\n+            if(left == right) {\n+                sorted.add(result.get(left));\n+                break;\n+            }\n+            sorted.add(result.get(left));\n+            sorted.add(result.get(right));\n+            left++;\n+            right--;\n+        }\n+        return sorted;\n+    }\n         }\n         return result;\n     }",
    "result_reason": " /tmp/humaneval-STRANGE_SORT_LIST/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java:[27,5] illegal start of expression",
    "test_result": "ERROR"
}