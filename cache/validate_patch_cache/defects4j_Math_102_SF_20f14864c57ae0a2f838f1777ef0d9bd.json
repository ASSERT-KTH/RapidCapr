{
    "patch": "public double chiSquare(double[] expected, long[] observed) {\n    if (expected.length != observed.length) {\n        throw new IllegalArgumentException(\"Input arrays must have the same length\");\n    }\n    double chiSquare = 0.0;\n    double totalObserved = 0;\n    double totalExpected = 0;\n    for (int i = 0; i < expected.length; i++) {\n        if (expected[i] < 0){\n            throw new IllegalArgumentException(\"Expected counts must be non-negative\");\n        }\n        if (observed[i] < 0){\n            throw new IllegalArgumentException(\"Observed counts must be non-negative\");\n        }\n        if (expected[i] == 0.0 && observed[i] > 0.0) {\n            throw new IllegalArgumentException(\"Invalid input arrays: observed count must be 0 if expected count is 0\");\n        }\n        double diff = observed[i] - expected[i];\n        chiSquare += diff * diff / expected[i];\n        totalObserved += observed[i];\n        totalExpected += expected[i];\n    }\n    if (totalExpected != 0.0 || totalObserved != 0.0) {\n        // avoid division by 0 in case all values are 0\n        if (totalExpected != totalObserved) {\n            throw new IllegalArgumentException(\"Totals do not match. Expected: \" + totalExpected + \", Observed: \" + totalObserved);\n        }\n    }\n    else if (chiSquare != 0.0) {\n        // if all values are 0 but chiSquare != 0, something is wrong\n        throw new IllegalArgumentException(\"Invalid input arrays: all values are 0 but chiSquare != 0\");\n    }\n\n    return chiSquare;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex c87b0101f..26c6ada2e 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -61,24 +61,41 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n      * @throws IllegalArgumentException if preconditions are not met\n      * or length is less than 2\n      */\n-    public double chiSquare(double[] expected, long[] observed)\n-        throws IllegalArgumentException {\n-        if ((expected.length < 2) || (expected.length != observed.length)) {\n-            throw new IllegalArgumentException(\n-                    \"observed, expected array lengths incorrect\");\n+public double chiSquare(double[] expected, long[] observed) {\n+    if (expected.length != observed.length) {\n+        throw new IllegalArgumentException(\"Input arrays must have the same length\");\n+    }\n+    double chiSquare = 0.0;\n+    double totalObserved = 0;\n+    double totalExpected = 0;\n+    for (int i = 0; i < expected.length; i++) {\n+        if (expected[i] < 0){\n+            throw new IllegalArgumentException(\"Expected counts must be non-negative\");\n         }\n-        if (!isPositive(expected) || !isNonNegative(observed)) {\n-            throw new IllegalArgumentException(\n-                \"observed counts must be non-negative and expected counts must be postive\");\n+        if (observed[i] < 0){\n+            throw new IllegalArgumentException(\"Observed counts must be non-negative\");\n         }\n-        double sumSq = 0.0d;\n-        double dev = 0.0d;\n-        for (int i = 0; i < observed.length; i++) {\n-                dev = ((double) observed[i] - expected[i]);\n-                sumSq += dev * dev / expected[i];\n+        if (expected[i] == 0.0 && observed[i] > 0.0) {\n+            throw new IllegalArgumentException(\"Invalid input arrays: observed count must be 0 if expected count is 0\");\n+        }\n+        double diff = observed[i] - expected[i];\n+        chiSquare += diff * diff / expected[i];\n+        totalObserved += observed[i];\n+        totalExpected += expected[i];\n+    }\n+    if (totalExpected != 0.0 || totalObserved != 0.0) {\n+        // avoid division by 0 in case all values are 0\n+        if (totalExpected != totalObserved) {\n+            throw new IllegalArgumentException(\"Totals do not match. Expected: \" + totalExpected + \", Observed: \" + totalObserved);\n         }\n-        return sumSq;\n     }\n+    else if (chiSquare != 0.0) {\n+        // if all values are 0 but chiSquare != 0, something is wrong\n+        throw new IllegalArgumentException(\"Invalid input arrays: all values are 0 but chiSquare != 0\");\n+    }\n+\n+    return chiSquare;\n+}\n \n     /**\n      * {@inheritDoc}",
    "result_reason": "java.lang.IllegalArgumentException: Totals do not match. Expected: 4.218677079E7, Observed: 2.9960554E7",
    "test_result": "FAIL"
}