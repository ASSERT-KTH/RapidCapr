{
    "patch": "        int idx = 1;\n        while (count <= index) {\n            count += idx;\n            ++idx;\n        }\n        --idx;\n        count -= (idx * (idx + 1)) / 2;\n        indices[last] = idx;\n        indices[last] += index - count;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..e8802ca56 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -235,12 +235,14 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n         }\n \n         int idx = 1;\n-        while (count < index) {\n+        while (count <= index) {\n             count += idx;\n             ++idx;\n         }\n         --idx;\n+        count -= (idx * (idx + 1)) / 2;\n         indices[last] = idx;\n+        indices[last] += index - count;\n \n         return indices;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Wrong multidimensional index for [0][2] expected:<0> but was:<1>",
    "test_result": "FAIL"
}