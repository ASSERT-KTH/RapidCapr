{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    int strLength = str.length();\n    if (strLength == 0) {\n        return false;\n    }\n    int searchLength = searchChars.length;\n    if (searchLength == 0) {\n        return false;\n    }\n\n    // Process the input String one code point (not char) at a time\n    for (int i = 0; i < strLength; ) {\n        int codePoint = str.codePointAt(i);\n        i += Character.charCount(codePoint); // Advance the index for this code point\n\n        // Check if the code point exists in the searchChars array\n        for (int j = 0; j < searchLength; j++) {\n            if (Character.codePointAt(searchChars, j) == codePoint) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..754e35ab 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    int strLength = str.length();\n+    if (strLength == 0) {\n+        return false;\n+    }\n+    int searchLength = searchChars.length;\n+    if (searchLength == 0) {\n+        return false;\n+    }\n+\n+    // Process the input String one code point (not char) at a time\n+    for (int i = 0; i < strLength; ) {\n+        int codePoint = str.codePointAt(i);\n+        i += Character.charCount(codePoint); // Advance the index for this code point\n+\n+        // Check if the code point exists in the searchChars array\n+        for (int j = 0; j < searchLength; j++) {\n+            if (Character.codePointAt(searchChars, j) == codePoint) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}