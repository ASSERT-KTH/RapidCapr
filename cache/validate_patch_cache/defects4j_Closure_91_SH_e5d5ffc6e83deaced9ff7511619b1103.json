{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isGet(parent) &&\n          parent.getNext() != null &&\n          parent.getNext().getType() == Token.ASSIGN) {\n        Node rootNode = NodeUtil.getRootOfQualifiedName(parent);\n        if (rootNode != null) {\n          Node grandparent = rootNode.getParent();\n          if (grandparent != null &&\n              NodeUtil.isExprAssign(grandparent) &&\n              grandparent.getFirstChild() != null &&\n              NodeUtil.isGet(grandparent.getFirstChild()) &&\n              NodeUtil.isPrototypeProperty(grandparent.getFirstChild())) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..dfc2d714 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,22 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent) &&\n+          parent.getNext() != null &&\n+          parent.getNext().getType() == Token.ASSIGN) {\n+        Node rootNode = NodeUtil.getRootOfQualifiedName(parent);\n+        if (rootNode != null) {\n+          Node grandparent = rootNode.getParent();\n+          if (grandparent != null &&\n+              NodeUtil.isExprAssign(grandparent) &&\n+              grandparent.getFirstChild() != null &&\n+              NodeUtil.isGet(grandparent.getFirstChild()) &&\n+              NodeUtil.isPrototypeProperty(grandparent.getFirstChild())) {\n+            return false;\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}