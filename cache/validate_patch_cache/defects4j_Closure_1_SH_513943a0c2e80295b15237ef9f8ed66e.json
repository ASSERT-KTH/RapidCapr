{
    "patch": "      // Add default parameter initializers for params that did not have initializers\n      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n        if (!arg.hasChildren()) {\n          Node defaultValue = new Node(Token.DEFAULT_VALUE, IR.name(\"[default]\"), IR.string(\"\"));\n          arg.addChildToBack(defaultValue);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..7a1def17 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,11 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // Add default parameter initializers for params that did not have initializers\n+      for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n+        if (!arg.hasChildren()) {\n+          Node defaultValue = new Node(Token.DEFAULT_VALUE, IR.name(\"[default]\"), IR.string(\"\"));\n+          arg.addChildToBack(defaultValue);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}