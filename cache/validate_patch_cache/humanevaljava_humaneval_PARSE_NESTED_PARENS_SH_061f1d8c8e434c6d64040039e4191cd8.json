{
    "patch": "                else if (c == ')') {\n                    depth -= 1;\n                    // Unbalanced closing parenthesis\n                    if (depth < 0) {\n                        return null;\n                    }\n                }\n            }\n            // Unbalanced opening parenthesis\n            if (depth != 0) {\n                return null;\n            }\n            // Add max_depth after for loop\n            result.add(max_depth);\n        }\n\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\nindex 6bc914f..d9c01dd 100644\n--- a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n+++ b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n@@ -15,6 +15,24 @@ public class PARSE_NESTED_PARENS {\n                 if (c == '('){\n                     depth += 1;\n                     max_depth = Math.max(depth, max_depth);\n+                else if (c == ')') {\n+                    depth -= 1;\n+                    // Unbalanced closing parenthesis\n+                    if (depth < 0) {\n+                        return null;\n+                    }\n+                }\n+            }\n+            // Unbalanced opening parenthesis\n+            if (depth != 0) {\n+                return null;\n+            }\n+            // Add max_depth after for loop\n+            result.add(max_depth);\n+        }\n+\n+        return result;\n+    }\n                 }\n             }\n             result.add(max_depth);",
    "result_reason": " /tmp/humaneval-PARSE_NESTED_PARENS/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java:[18,17] 'else' without 'if'",
    "test_result": "ERROR"
}