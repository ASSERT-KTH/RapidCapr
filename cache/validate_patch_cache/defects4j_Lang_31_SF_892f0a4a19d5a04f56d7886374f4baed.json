{
    "patch": "    public static boolean containsAny(CharSequence str, char[] searchChars) {\n        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        \n        int strLen = str.length();\n        int searchLen = searchChars.length;\n        int minSupplementaryCodePoint = Character.MIN_SUPPLEMENTARY_CODE_POINT;\n\n        for (int i = 0; i < strLen; i++) {\n            char ch = str.charAt(i);\n            if (ch >= minSupplementaryCodePoint) {\n                String chStr = toString(ch);\n                for (int j = 0; j < searchLen; j++) {\n                    String searchCharStr = toString(searchChars[j]);\n                    if (chStr.contains(searchCharStr)) {\n                        return true;\n                    }\n                }\n            } else if (ArrayUtils.contains(searchChars, ch)) {\n                return true;\n            }\n        }\n        \n        return false;\n    }\n    \n    private static String toString(char c) {\n        return new String(new char[]{c});\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..7fed379f 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,36 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+    public static boolean containsAny(CharSequence str, char[] searchChars) {\n+        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+            return false;\n+        }\n+        \n+        int strLen = str.length();\n+        int searchLen = searchChars.length;\n+        int minSupplementaryCodePoint = Character.MIN_SUPPLEMENTARY_CODE_POINT;\n+\n+        for (int i = 0; i < strLen; i++) {\n+            char ch = str.charAt(i);\n+            if (ch >= minSupplementaryCodePoint) {\n+                String chStr = toString(ch);\n+                for (int j = 0; j < searchLen; j++) {\n+                    String searchCharStr = toString(searchChars[j]);\n+                    if (chStr.contains(searchCharStr)) {\n+                        return true;\n+                    }\n+                }\n+            } else if (ArrayUtils.contains(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+        \n+        return false;\n+    }\n+    \n+    private static String toString(char c) {\n+        return new String(new char[]{c});\n+    }\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}