{
    "patch": "if (functionJSDocInfo != null && functionJSDocInfo.hasThisType()) {\n  // Check whether the call is using GETPROP or GETELEM to set the \"this\" type.\n  Node parent = n.getParent();\n  if (!(parent.isGetProp() || parent.isGetElem())) {\n    report(t, n, THIS_BEFORE_SUPER, childType.toString());\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..70a1120c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+if (functionJSDocInfo != null && functionJSDocInfo.hasThisType()) {\n+  // Check whether the call is using GETPROP or GETELEM to set the \"this\" type.\n+  Node parent = n.getParent();\n+  if (!(parent.isGetProp() || parent.isGetElem())) {\n+    report(t, n, THIS_BEFORE_SUPER, childType.toString());\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}