{
    "patch": "StringBuilder sb = new StringBuilder(input.length());\nfor (int i = 0; i < input.length(); i++) {\n    char ch = input.charAt(i);\n    if (ch == '<') {\n        sb.append(\"&lt;\");\n    } else if (ch == '>') {\n        sb.append(\"&gt;\");\n    } else if (ch == '&') {\n        sb.append(\"&amp;\");\n    } else if (ch == '\\'') {\n        sb.append(\"&apos;\");\n    } else if (ch == '\\\"') {\n        sb.append(\"&quot;\");\n    } else if (ch == '/') {\n        sb.append(\"&#47;\");\n    } else if (ch >= 32 && ch <= 126) {\n        sb.append(ch);\n    } else if (ch == '\\n') {\n        sb.append(\"<br>\\n\");\n    } else if (ch == '\\r') {\n        continue;\n    } else if (ch == '\\t') {\n        sb.append(\"\\u00A0\\u00A0\\u00A0\\u00A0\");\n    } else if (ch < 32 || ch >= 127) {\n        sb.append(\"&#\" + (int) ch + \";\");\n    } \n}\nString output = sb.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}