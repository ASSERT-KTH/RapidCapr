{
    "patch": "    public static int fib4(int n) {\n        if (n == 0) {\n            return 0;\n        } else if (n < 4) {\n            return 2;\n        } else {\n            int prev2 = 0, prev1 = 0, prev = 2, curr = 0;\n            for (int i = 4; i <= n; i += 1) {\n                curr = prev2 + prev1 + prev + curr;\n                prev2 = prev1;\n                prev1 = prev;\n                prev = curr;\n            }\n            return curr;\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB4.java b/src/main/java/humaneval/buggy/FIB4.java\nindex e4ae6f3..193089e 100644\n--- a/src/main/java/humaneval/buggy/FIB4.java\n+++ b/src/main/java/humaneval/buggy/FIB4.java\n@@ -18,19 +18,19 @@ Please write a function to efficiently compute the n-th element of the fib4 numb\n \n public class FIB4 {\n     public static int fib4(int n) {\n-        ArrayList<Integer> result = new ArrayList<Integer>(); \n-        result.add(0);\n-        result.add(0);\n-        result.add(2);\n-        result.add(0);\n-\n-        if (n < 4)\n-            return result.get(n);\n-        for (int i = 4; i < n + 1; i += 1) {\n-            result.add(\n-                result.get(0) + result.get(1) + result.get(2) + result.get(3)\n-            );\n+        if (n == 0) {\n+            return 0;\n+        } else if (n < 4) {\n+            return 2;\n+        } else {\n+            int prev2 = 0, prev1 = 0, prev = 2, curr = 0;\n+            for (int i = 4; i <= n; i += 1) {\n+                curr = prev2 + prev1 + prev + curr;\n+                prev2 = prev1;\n+                prev1 = prev;\n+                prev = curr;\n+            }\n+            return curr;\n         }\n-        return result.get(result.size() - 1);\n     }\n }",
    "result_reason": "   TEST_FIB4.test_0:7 expected:<6> but was:<4>",
    "test_result": "FAIL"
}