{
    "patch": "// Check if str is null or empty\nif (str == null || str.isEmpty()) {\n    return str;\n}\n\n// Check if lower is greater or equal to the length of the string, return the substring till the end or the appendToEnd value if given\nif (lower >= str.length()) {\n    return appendToEnd != null ? appendToEnd : str.substring(str.length());\n}\n\n// If upper is -1 or greater than the string length, set it to the string length\nif (upper == -1 || upper > str.length()) {\n    upper = str.length();\n}\n\n// If upper is less than lower, set it equal to lower\nif (upper < lower) {\n    upper = lower;\n}\n\n// Find the index of the space starting from lower index\nint index = StringUtils.indexOf(str, \" \", lower);\n\n// If index is -1 or greater than upper index, return substring from lower to upper index and append appendToEnd value\nif (index == -1 || index > upper) {\n    return str.substring(lower, upper) + StringUtils.defaultString(appendToEnd);\n}\n\n// Return substring from lower index to space and append appendToEnd value\nreturn str.substring(lower, index) + StringUtils.defaultString(appendToEnd);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..06727c3f 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,36 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// Check if str is null or empty\n+if (str == null || str.isEmpty()) {\n+    return str;\n+}\n+\n+// Check if lower is greater or equal to the length of the string, return the substring till the end or the appendToEnd value if given\n+if (lower >= str.length()) {\n+    return appendToEnd != null ? appendToEnd : str.substring(str.length());\n+}\n+\n+// If upper is -1 or greater than the string length, set it to the string length\n+if (upper == -1 || upper > str.length()) {\n+    upper = str.length();\n+}\n+\n+// If upper is less than lower, set it equal to lower\n+if (upper < lower) {\n+    upper = lower;\n+}\n+\n+// Find the index of the space starting from lower index\n+int index = StringUtils.indexOf(str, \" \", lower);\n+\n+// If index is -1 or greater than upper index, return substring from lower to upper index and append appendToEnd value\n+if (index == -1 || index > upper) {\n+    return str.substring(lower, upper) + StringUtils.defaultString(appendToEnd);\n+}\n+\n+// Return substring from lower index to space and append appendToEnd value\n+return str.substring(lower, index) + StringUtils.defaultString(appendToEnd);\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable index is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}