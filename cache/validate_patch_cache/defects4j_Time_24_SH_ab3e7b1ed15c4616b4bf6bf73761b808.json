{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        long newMillis = savedFields[i].set(millis, resetFields);\n        if (newMillis != millis) {\n            DateTimeField currentField = savedFields[i].iField;\n            boolean isYearField = (currentField.getType() == DateTimeFieldType.year());\n            if (isYearField && i == 0) {\n                throw new IllegalArgumentException(\"Illegal instant due to time zone offset transition (\" + iZone + ')');\n            } else if (isYearField && i > 0) {\n                // Re-parse the fields with the default year and return the computed millis\n                saveField(DateTimeFieldType.year(), iDefaultYear);\n                return computeMillis(resetFields, text);\n            } else {\n                // Continue to the next field\n                millis = newMillis;\n            }\n        } else {\n            // Continue to the next field\n            millis = newMillis;\n        }\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b696de4f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,33 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        long newMillis = savedFields[i].set(millis, resetFields);\n+        if (newMillis != millis) {\n+            DateTimeField currentField = savedFields[i].iField;\n+            boolean isYearField = (currentField.getType() == DateTimeFieldType.year());\n+            if (isYearField && i == 0) {\n+                throw new IllegalArgumentException(\"Illegal instant due to time zone offset transition (\" + iZone + ')');\n+            } else if (isYearField && i > 0) {\n+                // Re-parse the fields with the default year and return the computed millis\n+                saveField(DateTimeFieldType.year(), iDefaultYear);\n+                return computeMillis(resetFields, text);\n+            } else {\n+                // Continue to the next field\n+                millis = newMillis;\n+            }\n+        } else {\n+            // Continue to the next field\n+            millis = newMillis;\n+        }\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Illegal instant due to time zone offset transition (Europe/London)",
    "test_result": "FAIL"
}