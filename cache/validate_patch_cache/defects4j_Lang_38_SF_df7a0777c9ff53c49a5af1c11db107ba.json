{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        } else {\n            calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n            calendar.setTimeInMillis(calendar.getTimeInMillis() + \n                calendar.getTimeZone().getOffset(calendar.getTimeInMillis()));\n        }\n        return applyRules(calendar, buf);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..50b198fa 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -871,6 +871,10 @@ public class FastDateFormat extends Format {\n         if (mTimeZoneForced) {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n+        } else {\n+            calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n+            calendar.setTimeInMillis(calendar.getTimeInMillis() + \n+                calendar.getTimeZone().getOffset(calendar.getTimeInMillis()));\n         }\n         return applyRules(calendar, buf);\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<T1[0:11:12]> but was:<T1[9:32:56]>",
    "test_result": "FAIL"
}