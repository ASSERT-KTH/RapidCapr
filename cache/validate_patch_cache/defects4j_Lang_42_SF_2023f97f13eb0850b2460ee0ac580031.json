{
    "patch": "public void escape(Writer writer, String str) throws IOException {\n    int len = str.length();\n    StringBuilder sb = new StringBuilder(len);\n    for (int i = 0; i < len; i++) {\n        char c = str.charAt(i);\n        if (Character.isHighSurrogate(c)) {\n            if (++i < len) {\n                char low = str.charAt(i);\n                if (Character.isLowSurrogate(low)) {\n                    sb.appendCodePoint(Character.toCodePoint(c, low));\n                } else {\n                    sb.append(c).append(low);\n                }\n            } else {\n                sb.append(c);\n            }\n        } else if (Character.isLowSurrogate(c)) {\n            sb.append(c);\n        } else {\n            String entityName = this.entityName(c);\n            if (entityName == null) {\n                if (c > 0x7F) {\n                    sb.append(\"&#\");\n                    sb.append(Integer.toString(c, 10));\n                    sb.append(';');\n                } else {\n                    sb.append(c);\n                }\n            } else {\n                sb.append('&');\n                sb.append(entityName);\n                sb.append(';');\n            }\n        }\n    }\n    writer.write(sb.toString());\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java\nindex 900e1a89..15cbd436 100644\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n@@ -822,26 +822,43 @@ class Entities {\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void escape(Writer writer, String str) throws IOException {\n-        int len = str.length();\n-        for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n+public void escape(Writer writer, String str) throws IOException {\n+    int len = str.length();\n+    StringBuilder sb = new StringBuilder(len);\n+    for (int i = 0; i < len; i++) {\n+        char c = str.charAt(i);\n+        if (Character.isHighSurrogate(c)) {\n+            if (++i < len) {\n+                char low = str.charAt(i);\n+                if (Character.isLowSurrogate(low)) {\n+                    sb.appendCodePoint(Character.toCodePoint(c, low));\n+                } else {\n+                    sb.append(c).append(low);\n+                }\n+            } else {\n+                sb.append(c);\n+            }\n+        } else if (Character.isLowSurrogate(c)) {\n+            sb.append(c);\n+        } else {\n             String entityName = this.entityName(c);\n             if (entityName == null) {\n                 if (c > 0x7F) {\n-                    writer.write(\"&#\");\n-                    writer.write(Integer.toString(c, 10));\n-                    writer.write(';');\n+                    sb.append(\"&#\");\n+                    sb.append(Integer.toString(c, 10));\n+                    sb.append(';');\n                 } else {\n-                    writer.write(c);\n+                    sb.append(c);\n                 }\n             } else {\n-                writer.write('&');\n-                writer.write(entityName);\n-                writer.write(';');\n+                sb.append('&');\n+                sb.append(entityName);\n+                sb.append(';');\n             }\n         }\n     }\n+    writer.write(sb.toString());\n+}\n \n     /**\n      * <p>",
    "result_reason": "junit.framework.ComparisonFailure: High unicode was not escaped correctly expected:<[&#119650;]> but was:<[\ud834\udf62]>",
    "test_result": "FAIL"
}