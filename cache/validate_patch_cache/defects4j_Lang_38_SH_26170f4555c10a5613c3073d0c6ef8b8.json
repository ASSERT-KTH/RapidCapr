{
    "patch": "public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    Calendar originalCalendar = calendar;\n    if (mTimeZoneForced) {\n        calendar = (Calendar) calendar.clone();\n        calendar.setTimeZone(mTimeZone);\n    }\n    StringBuffer result = applyRules(calendar, buf);\n    if (mTimeZoneForced) {\n        calendar.setTimeZone(originalCalendar.getTimeZone());\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..279d83ec 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,18 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+public StringBuffer format(Calendar calendar, StringBuffer buf) {\n+    Calendar originalCalendar = calendar;\n+    if (mTimeZoneForced) {\n+        calendar = (Calendar) calendar.clone();\n+        calendar.setTimeZone(mTimeZone);\n+    }\n+    StringBuffer result = applyRules(calendar, buf);\n+    if (mTimeZoneForced) {\n+        calendar.setTimeZone(originalCalendar.getTimeZone());\n+    }\n+    return result;\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}