{
    "patch": "    public static int can_arrange(int[] arr) {\n        int[] count = new int[3];\n        for (int i = 0; i < arr.length; i++) {\n            count[arr[i] + 1]++;\n        }\n        int max = count[0];\n        int ind = -1;\n        for (int i = 1; i < count.length; i++) {\n            if (count[i] >= max) {\n                max = count[i];\n                ind = i - 1;\n            }\n        }\n        return ind;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CAN_ARRANGE.java b/src/main/java/humaneval/buggy/CAN_ARRANGE.java\nindex 8bb1b11..df4b6e0 100644\n--- a/src/main/java/humaneval/buggy/CAN_ARRANGE.java\n+++ b/src/main/java/humaneval/buggy/CAN_ARRANGE.java\n@@ -14,9 +14,17 @@ package humaneval.buggy;\n \n public class CAN_ARRANGE {\n     public static int can_arrange(int[] arr) {\n-        int ind = 1;\n-        for(int i = 0; i < arr.length - 1; i++) {\n-            if(arr[i] < arr[i + 1]) ind = i + 1;\n+        int[] count = new int[3];\n+        for (int i = 0; i < arr.length; i++) {\n+            count[arr[i] + 1]++;\n+        }\n+        int max = count[0];\n+        int ind = -1;\n+        for (int i = 1; i < count.length; i++) {\n+            if (count[i] >= max) {\n+                max = count[i];\n+                ind = i - 1;\n+            }\n         }\n         return ind;\n     }",
    "result_reason": "   TEST_CAN_ARRANGE.test_4:27 expected:<-1> but was:<1>",
    "test_result": "FAIL"
}