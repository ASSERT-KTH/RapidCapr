{
    "patch": "Node first = n.getFirstChild();\nif (NodeUtil.isName(first) && \"eval\".equals(first.getString())) {\n  first.putBooleanProp(Node.DIRECT_EVAL, true);\n  return;\n}\nwhile (first.isCast()) {\n  first = first.getFirstChild();\n}\nif (!NodeUtil.isGet(first)) {\n  n.putBooleanProp(Node.FREE_CALL, true);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..d14c9670 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,17 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+Node first = n.getFirstChild();\n+if (NodeUtil.isName(first) && \"eval\".equals(first.getString())) {\n+  first.putBooleanProp(Node.DIRECT_EVAL, true);\n+  return;\n+}\n+while (first.isCast()) {\n+  first = first.getFirstChild();\n+}\n+if (!NodeUtil.isGet(first)) {\n+  n.putBooleanProp(Node.FREE_CALL, true);\n+}\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}