{
    "patch": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock = n.getLastChild();\n  tryMinimizeExits(finallyBlock, exitType, labelName);\n  // After processing the finally block,\n  // try minimizing any remaining exits (if there is a next sibling).\n  Node nextNode = n.getNext();\n  if (nextNode != null) {\n    tryMinimizeExits(nextNode, exitType, labelName);\n  }\n  return;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..aec5594a 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,10 +138,17 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+if (NodeUtil.hasFinally(n)) {\n+  Node finallyBlock = n.getLastChild();\n+  tryMinimizeExits(finallyBlock, exitType, labelName);\n+  // After processing the finally block,\n+  // try minimizing any remaining exits (if there is a next sibling).\n+  Node nextNode = n.getNext();\n+  if (nextNode != null) {\n+    tryMinimizeExits(nextNode, exitType, labelName);\n+  }\n+  return;\n+}\n     }\n \n     // Just a 'label'.",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}