{
    "patch": "double p = tDistribution.cumulativeProbability(-Math.abs(t)) * 2;\nout[i][j] = Math.max(0, Math.min(1, p)); // Ensure p-value is between 0 and 1 inclusive",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..bfcf27f56 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,8 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+double p = tDistribution.cumulativeProbability(-Math.abs(t)) * 2;\n+out[i][j] = Math.max(0, Math.min(1, p)); // Ensure p-value is between 0 and 1 inclusive\n                 }\n             }\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}