{
    "patch": "if (getPopulationSize() <= 0 || getSampleSize() <= 0) {\n    return 0.0;\n}\ndouble mean = ((double) getNumberOfSuccesses() / (double) getPopulationSize()) * getSampleSize();\nreturn Math.max(mean, 0.0);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..055176395 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -264,9 +264,11 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * For population size {@code N}, number of successes {@code m}, and sample\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n-    public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n-    }\n+if (getPopulationSize() <= 0 || getSampleSize() <= 0) {\n+    return 0.0;\n+}\n+double mean = ((double) getNumberOfSuccesses() / (double) getPopulationSize()) * getSampleSize();\n+return Math.max(mean, 0.0);\n \n     /**\n      * {@inheritDoc}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}