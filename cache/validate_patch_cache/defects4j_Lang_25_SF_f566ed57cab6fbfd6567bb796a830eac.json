{
    "patch": "public static String decode(String s) \n        throws UnsupportedEncodingException {\n\n    StringBuffer sb = new StringBuffer();\n    for (int i=0; i<s.length(); i++) {\n        char c = s.charAt(i);\n        switch (c) {\n            case '+':\n                sb.append(' ');\n                break;\n            case '%':\n                try {\n                    sb.append((char) Integer.parseInt(\n                        s.substring(i+1,i+3),16));\n                } catch (NumberFormatException e) {\n                    throw new UnsupportedEncodingException();\n                }\n                i += 2;\n                break;\n            default:\n                sb.append(c);\n                break;\n        }\n    }\n    return new String(sb.toString().getBytes(\"ISO-8859-1\"), \"UTF-8\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..f72dd20a 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,32 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String s) \n+        throws UnsupportedEncodingException {\n+\n+    StringBuffer sb = new StringBuffer();\n+    for (int i=0; i<s.length(); i++) {\n+        char c = s.charAt(i);\n+        switch (c) {\n+            case '+':\n+                sb.append(' ');\n+                break;\n+            case '%':\n+                try {\n+                    sb.append((char) Integer.parseInt(\n+                        s.substring(i+1,i+3),16));\n+                } catch (NumberFormatException e) {\n+                    throw new UnsupportedEncodingException();\n+                }\n+                i += 2;\n+                break;\n+            default:\n+                sb.append(c);\n+                break;\n+        }\n+    }\n+    return new String(sb.toString().getBytes(\"ISO-8859-1\"), \"UTF-8\");\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}