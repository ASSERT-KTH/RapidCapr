{
    "patch": "                int diff = TransitionUtils.getStandardOffset(nextLocal, getWallOffset(nextLocal));\n                diff -= offsetLocal;\n                if (diff >= 0) {\n                    diff = 1 - diff;\n                }\n                long next = nextTransition(nextAdjusted - (diff * (DateTimeConstants.MILLIS_PER_HOUR / 2)));\n                if (next == nextAdjusted) {\n                    return offsetLocal;\n                }\n                return getOffset(next - (diff * (DateTimeConstants.MILLIS_PER_HOUR / 2)));",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..58ea1ad4 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                int diff = TransitionUtils.getStandardOffset(nextLocal, getWallOffset(nextLocal));\n+                diff -= offsetLocal;\n+                if (diff >= 0) {\n+                    diff = 1 - diff;\n+                }\n+                long next = nextTransition(nextAdjusted - (diff * (DateTimeConstants.MILLIS_PER_HOUR / 2)));\n+                if (next == nextAdjusted) {\n+                    return offsetLocal;\n+                }\n+                return getOffset(next - (diff * (DateTimeConstants.MILLIS_PER_HOUR / 2)));\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}