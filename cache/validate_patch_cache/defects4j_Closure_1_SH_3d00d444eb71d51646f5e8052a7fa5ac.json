{
    "patch": "    List<Node> argsToRemove = new ArrayList<>();\n    int numArgs = argList.getChildCount();\n    for (int i = 0; i < numArgs; i++) {\n      Var var = fnScope.getVar(argList.getChildAtIndex(i).getString());\n      if (!referenced.contains(var)) {\n        argsToRemove.add(argList.getChildAtIndex(i));\n      }\n    }\n    for (Node arg : argsToRemove) {\n      argList.removeChild(arg);\n      compiler.reportCodeChange();\n    }\n    if (modifyCallers) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..f6d1287d 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,19 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    List<Node> argsToRemove = new ArrayList<>();\n+    int numArgs = argList.getChildCount();\n+    for (int i = 0; i < numArgs; i++) {\n+      Var var = fnScope.getVar(argList.getChildAtIndex(i).getString());\n+      if (!referenced.contains(var)) {\n+        argsToRemove.add(argList.getChildAtIndex(i));\n+      }\n+    }\n+    for (Node arg : argsToRemove) {\n+      argList.removeChild(arg);\n+      compiler.reportCodeChange();\n+    }\n+    if (modifyCallers) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}