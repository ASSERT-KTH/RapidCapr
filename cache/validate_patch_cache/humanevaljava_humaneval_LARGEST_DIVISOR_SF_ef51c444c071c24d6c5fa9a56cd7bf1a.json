{
    "patch": " public static int largest_divisor(int n) {\n        if (n <= 0) {\n            throw new IllegalArgumentException(\"Input must be positive\");\n        }\n        for (int i = (int) Math.sqrt(n); i >= 1; i --){\n            if (n % i == 0)\n                return n / i;\n        }\n        return 1;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\nindex e93b282..d899f17 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n@@ -1,10 +1,13 @@\n package humaneval.buggy;\n \n public class LARGEST_DIVISOR {\n-    public static int largest_divisor(int n) {\n-        for (int i = n; i >= 0; i -= 1){\n+ public static int largest_divisor(int n) {\n+        if (n <= 0) {\n+            throw new IllegalArgumentException(\"Input must be positive\");\n+        }\n+        for (int i = (int) Math.sqrt(n); i >= 1; i --){\n             if (n % i == 0)\n-                return i;\n+                return n / i;\n         }\n         return 1;\n     }",
    "result_reason": "   TEST_LARGEST_DIVISOR.test_0:7 expected:<3> but was:<1>",
    "test_result": "FAIL"
}