{
    "patch": "public static int starts_one_ends(int n) {\n    if (n < 1) {\n        throw new IllegalArgumentException(\"n must be a positive integer.\");\n    } else if (n == 1) {\n        return 1;\n    } else {\n        String numString = \"1\" + \"0\".repeat(n - 2) + \"8\";\n        return Integer.parseInt(numString);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\nindex b8a4679..632442f 100644\n--- a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n+++ b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n@@ -4,9 +4,14 @@ package humaneval.buggy;\n positive integers that start or end with 1. */\n \n public class STARTS_ONE_ENDS {\n-    public static int starts_one_ends(int n) {\n-        if (n == 1)\n-            return 1;\n-        return (int) ((10 + 9) * Math.pow(10, n - 2));\n+public static int starts_one_ends(int n) {\n+    if (n < 1) {\n+        throw new IllegalArgumentException(\"n must be a positive integer.\");\n+    } else if (n == 1) {\n+        return 1;\n+    } else {\n+        String numString = \"1\" + \"0\".repeat(n - 2) + \"8\";\n+        return Integer.parseInt(numString);\n     }\n }\n+}",
    "result_reason": " /tmp/humaneval-STARTS_ONE_ENDS/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java:[13,37] cannot find symbol",
    "test_result": "ERROR"
}