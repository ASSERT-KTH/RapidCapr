{
    "patch": "        TimeSeries clone = (TimeSeries) super.clone();\n        clone.timePeriodClass = timePeriodClass;\n        int itemCount = getItemCount();\n        if (itemCount > 0) {\n            clone.data = new java.util.ArrayList(itemCount);\n            for (int i = 0; i < itemCount; i++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) getDataItem(i).clone();\n                clone.add(item);\n            }\n        }\n        else {\n            clone.data = null;\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..b018046 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,19 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        TimeSeries clone = (TimeSeries) super.clone();\n+        clone.timePeriodClass = timePeriodClass;\n+        int itemCount = getItemCount();\n+        if (itemCount > 0) {\n+            clone.data = new java.util.ArrayList(itemCount);\n+            for (int i = 0; i < itemCount; i++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) getDataItem(i).clone();\n+                clone.add(item);\n+            }\n+        }\n+        else {\n+            clone.data = null;\n+        }\n         return clone;\n     }\n ",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}