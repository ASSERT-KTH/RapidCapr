{
    "patch": "public double[] repairAndDecode(final double[] x) {\n    double[] repaired = repair(x);\n    if (repaired == null) {\n        return x;\n    }\n    double[] decoded = decode(repaired);\n    if (decoded == null || decoded.length != x.length) {\n        return x;\n    }\n    return decoded;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 4b7dbf6bb..8604dc2db 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -917,10 +917,17 @@ public class CMAESOptimizer\n          * @param x Normalized objective variables.\n          * @return the original objective variables, possibly repaired.\n          */\n-        public double[] repairAndDecode(final double[] x) {\n-            return\n-                decode(x);\n-        }\n+public double[] repairAndDecode(final double[] x) {\n+    double[] repaired = repair(x);\n+    if (repaired == null) {\n+        return x;\n+    }\n+    double[] decoded = decode(repaired);\n+    if (decoded == null || decoded.length != x.length) {\n+        return x;\n+    }\n+    return decoded;\n+}\n \n         /**\n          * @param x Normalized objective variables.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}