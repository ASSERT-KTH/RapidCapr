{
    "patch": "  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    boolean resolved = resolveViaRegistry(t, enclosing);\n    boolean hadRegistryWarning = t.hadError();\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n    }\n\n    if (resolved) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    t.resetErrors();\n    resolveViaProperties(t, enclosing);\n    boolean hadPropertyWarning = t.hadError();\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n    }\n\n    super.resolveInternal(t, enclosing);\n\n    if (isResolved()) {\n      finishPropertyContinuations();\n    }\n\n    if (hadRegistryWarning && !hadPropertyWarning) {\n      t.reportWarning(JSError.make(getNameNode(),\n          JSC_IMPLEMENTS_NON_INTERFACE, getName()));\n    }\n    return registry.isLastGeneration() ?\n        getReferencedType() : this;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/NamedType.java b/src/com/google/javascript/rhino/jstype/NamedType.java\nindex 70142c45..0515856f 100644\n--- a/src/com/google/javascript/rhino/jstype/NamedType.java\n+++ b/src/com/google/javascript/rhino/jstype/NamedType.java\n@@ -182,11 +182,8 @@ class NamedType extends ProxyObjectType {\n    */\n   @Override\n   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n-    // TODO(user): Investigate whether it is really necessary to keep two\n-    // different mechanisms for resolving named types, and if so, which order\n-    // makes more sense. Now, resolution via registry is first in order to\n-    // avoid triggering the warnings built into the resolution via properties.\n     boolean resolved = resolveViaRegistry(t, enclosing);\n+    boolean hadRegistryWarning = t.hadError();\n     if (detectImplicitPrototypeCycle()) {\n       handleTypeCycle(t);\n     }\n@@ -198,15 +195,23 @@ class NamedType extends ProxyObjectType {\n           getReferencedType() : this;\n     }\n \n+    t.resetErrors();\n     resolveViaProperties(t, enclosing);\n+    boolean hadPropertyWarning = t.hadError();\n     if (detectImplicitPrototypeCycle()) {\n       handleTypeCycle(t);\n     }\n \n     super.resolveInternal(t, enclosing);\n+\n     if (isResolved()) {\n       finishPropertyContinuations();\n     }\n+\n+    if (hadRegistryWarning && !hadPropertyWarning) {\n+      t.reportWarning(JSError.make(getNameNode(),\n+          JSC_IMPLEMENTS_NON_INTERFACE, getName()));\n+    }\n     return registry.isLastGeneration() ?\n         getReferencedType() : this;\n   }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}