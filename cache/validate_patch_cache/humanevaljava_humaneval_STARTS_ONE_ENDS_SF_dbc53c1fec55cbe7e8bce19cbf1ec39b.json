{
    "patch": "public static int starts_one_ends(int n) {\n    if (n < 1) {\n        throw new IllegalArgumentException(\"n must be a positive integer.\");\n    } else {\n        int result = 0;\n        for (int i = 0; i < n - 1; i++) {\n            result = result * 10 + 1;\n        }\n        return result * 10 + 8;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\nindex b8a4679..82819a5 100644\n--- a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n+++ b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n@@ -4,9 +4,15 @@ package humaneval.buggy;\n positive integers that start or end with 1. */\n \n public class STARTS_ONE_ENDS {\n-    public static int starts_one_ends(int n) {\n-        if (n == 1)\n-            return 1;\n-        return (int) ((10 + 9) * Math.pow(10, n - 2));\n+public static int starts_one_ends(int n) {\n+    if (n < 1) {\n+        throw new IllegalArgumentException(\"n must be a positive integer.\");\n+    } else {\n+        int result = 0;\n+        for (int i = 0; i < n - 1; i++) {\n+            result = result * 10 + 1;\n+        }\n+        return result * 10 + 8;\n     }\n }\n+}",
    "result_reason": "   TEST_STARTS_ONE_ENDS.test_0:7 expected:<8> but was:<1>",
    "test_result": "FAIL"
}