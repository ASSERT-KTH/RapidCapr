{
    "patch": "  private Node parseContextTypeExpression(JsDocToken token) {\n    if (token.getType() == JsDocToken.Type.PAREN) {\n      return parseParenExpression();\n    } else if (token.getType() == JsDocToken.Type.NAME) {\n      return parseTypeName(token);\n    } else if (token.getType() == JsDocToken.Type.EQUALS) {\n      return parseTypeExpression();\n    } else if (token.getType() == JsDocToken.Type.PIPE) {\n      return parseUnionTypeExpression();\n    } else if (token.getType() == JsDocToken.Type.BANG) {\n      return parseNonNullableExpression();\n    } else {\n      warning(\"Bad type annotation. type not recognized due to syntax error\");\n      return null;\n    }\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..13b1346a 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,22 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+  private Node parseContextTypeExpression(JsDocToken token) {\n+    if (token.getType() == JsDocToken.Type.PAREN) {\n+      return parseParenExpression();\n+    } else if (token.getType() == JsDocToken.Type.NAME) {\n+      return parseTypeName(token);\n+    } else if (token.getType() == JsDocToken.Type.EQUALS) {\n+      return parseTypeExpression();\n+    } else if (token.getType() == JsDocToken.Type.PIPE) {\n+      return parseUnionTypeExpression();\n+    } else if (token.getType() == JsDocToken.Type.BANG) {\n+      return parseNonNullableExpression();\n+    } else {\n+      warning(\"Bad type annotation. type not recognized due to syntax error\");\n+      return null;\n+    }\n+  }\n   }\n \n   /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}