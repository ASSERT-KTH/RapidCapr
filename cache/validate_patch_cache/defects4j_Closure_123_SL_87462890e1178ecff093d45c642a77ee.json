{
    "patch": "Context lhsContext = (getContextStack().peek());\nif (lhsContext == Context.INDEX || lhsContext == Context.ELEMENT || lhsContext == Context.CONTROL_STRUCTURE) {\n    Context rhsContext = Context.OTHER_OP;\n    getContextStack().push(rhsContext);\n    Condition condition = new Condition(conditionStr, rhsContext);\n    conditions.add(condition);\n    return conditionStr;\n} else {\n    throw new UnsupportedOperationException(\"Invalid context reached at InfixExpression line 283: \" + lhsContext);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}