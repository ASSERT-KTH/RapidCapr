{
    "patch": "StringBuilder sb = new StringBuilder();\nfor (int i = 0; i < s.length(); i++) {\n    char ch = s.charAt(i);\n    switch (ch) {\n        case '<':\n            sb.append(\"&lt;\");\n            break;\n        case '>':\n            sb.append(\"&gt;\");\n            break;\n        case '\\'':\n            sb.append(\"&apos;\");\n            break;\n        case '\\\"':\n            sb.append(\"&quot;\");\n            break;\n        case '&':\n            sb.append(\"&amp;\");\n            break;\n        case '\\\\':\n            sb.append(\"\\\\\\\\\");\n            break;\n        case '\\n':\n            sb.append(\"\\\\n\");\n            break;\n        case '\\r':\n            sb.append(\"\\\\r\");\n            break;\n        case '\\t':\n            sb.append(\"\\\\t\");\n            break;\n        default:\n            if (ch > 0x7f) {\n                sb.append(\"\\\\u\");\n                String hex = Integer.toHexString(ch);\n                for (int j = 0; j < 4 - hex.length(); j++) {\n                    sb.append('0');\n                }\n                sb.append(hex);\n            } else if (!Charset.forName(\"ISO-8859-1\").newEncoder().canEncode(ch)) {\n                sb.append(\"\\\\u\");\n                String hex = Integer.toHexString(ch);\n                for (int j = 0; j < 4 - hex.length(); j++) {\n                    sb.append('0');\n                }\n                sb.append(hex);\n            } else {\n                sb.append(ch);\n            }\n            break;\n    }\n}\nString output = sb.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}