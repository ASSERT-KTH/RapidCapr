{
    "patch": "import org.apache.commons.math3.special.Gamma;\n\npublic class MyClass {\n    \n    public static double compute(double x, double alpha, double lambda) {\n        double result = 0.0;\n        if (x > 0 && alpha > 0 && lambda > 0) {\n            result = (Gamma.regularizedGammaQ(alpha, lambda / x) * Math.pow(lambda / x, alpha)) / x;\n        }\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..56d2f1a12 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,18 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+\n+public class MyClass {\n+    \n+    public static double compute(double x, double alpha, double lambda) {\n+        double result = 0.0;\n+        if (x > 0 && alpha > 0 && lambda > 0) {\n+            result = (Gamma.regularizedGammaQ(alpha, lambda / x) * Math.pow(lambda / x, alpha)) / x;\n+        }\n+        return result;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}