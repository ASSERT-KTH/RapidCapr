{
    "patch": "for (int i = 0; i < len && success; i++) {\n    char ch = B[i];\n    if (ch < 0) {\n        ch += 256; // Fix added here\n    }\n    if (isSet(convertSet, ch)) {\n        if (ch == ESCAPE) {\n            sb.append(ch);\n        }\n        sb.append(ch);\n    } else if (ch == ESCAPE) {\n        sb.append(ESCAPE);\n        sb.append(ESCAPE);\n    } else if (ch > 0x7f) {\n        success = false;\n    } else {\n        sb.append(ch);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}