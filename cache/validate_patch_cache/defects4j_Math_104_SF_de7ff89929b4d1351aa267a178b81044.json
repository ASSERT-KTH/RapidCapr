{
    "patch": "public static double regularizedGammaQ(double a, double x) {\n    if (a <= 0.0 || x < 0.0) {\n        throw new IllegalArgumentException();\n    }\n\n    double b = x + 1.0 - a;\n    double c = 1.0 / 1.0e-30;\n    double d = 1.0 / b;\n    double h = d;\n    double an;\n    for (int i = 1; i <= 100; i++) {\n        an = -i * (i - a);\n        b += 2.0;\n        d = an * d + b;\n        if (Math.abs(d) < 1.0e-30) {\n            d = 1.0 / 1.0e-30;\n        }\n        c = b + an / c;\n        if (Math.abs(c) < 1.0e-30) {\n            c = 1.0 / 1.0e-30;\n        }\n        d = 1.0 / d;\n        double del = d * c;\n        h *= del;\n        if (Math.abs(del - 1.0) <= 10e-15) {\n            break;\n        }\n    }\n\n    double result;\n    if (x != 0.0 && a + x > Double.MAX_VALUE) {\n        result = 1.0;\n    } else if (a + x < Double.MIN_VALUE) {\n        result = 0.0;\n    } else if (x == 0.0) {\n        result = 1.0;\n    } else {\n        result = Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * h;\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..c3ca29a62 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,48 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaQ(double a, double x) {\n+    if (a <= 0.0 || x < 0.0) {\n+        throw new IllegalArgumentException();\n+    }\n+\n+    double b = x + 1.0 - a;\n+    double c = 1.0 / 1.0e-30;\n+    double d = 1.0 / b;\n+    double h = d;\n+    double an;\n+    for (int i = 1; i <= 100; i++) {\n+        an = -i * (i - a);\n+        b += 2.0;\n+        d = an * d + b;\n+        if (Math.abs(d) < 1.0e-30) {\n+            d = 1.0 / 1.0e-30;\n+        }\n+        c = b + an / c;\n+        if (Math.abs(c) < 1.0e-30) {\n+            c = 1.0 / 1.0e-30;\n+        }\n+        d = 1.0 / d;\n+        double del = d * c;\n+        h *= del;\n+        if (Math.abs(del - 1.0) <= 10e-15) {\n+            break;\n+        }\n+    }\n+\n+    double result;\n+    if (x != 0.0 && a + x > Double.MAX_VALUE) {\n+        result = 1.0;\n+    } else if (a + x < Double.MIN_VALUE) {\n+        result = 0.0;\n+    } else if (x == 0.0) {\n+        result = 1.0;\n+    } else {\n+        result = Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * h;\n+    }\n+\n+    return result;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}