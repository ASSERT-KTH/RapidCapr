{
    "patch": "public static double[] calculateDistribution(double[] values) {\n    int len = values.length;\n    double[] distribution = new double[len];\n    double sum = 0.0;\n    \n    for (double value : values) {\n        sum += value;\n    }\n    \n    if (sum == 0.0) {\n        return distribution;\n    }\n\n    double max_value = Double.NEGATIVE_INFINITY;\n\n    // Find the maximum value in the array\n    for (int i = 0; i < len; i++) {\n        if (values[i] > max_value) {\n            max_value = values[i];\n        }\n    }\n\n    double scaling_factor = 0.0;\n    boolean max_value_found = false;\n\n    for (int i = 0; i < len; i++) {\n        if (values[i] == max_value) {\n            distribution[i] = 0.0;\n            max_value_found = true;\n        } else {\n            distribution[i] = values[i] / (sum - max_value);\n            scaling_factor += distribution[i];\n        }\n    }\n\n    if (max_value_found) {\n        distribution = scaleDistribution(distribution, scaling_factor);\n        for (int i = 0; i < len; i++) {\n            if (values[i] == max_value) {\n                distribution[i] = 1.0;\n            }\n        }\n    }\n\n    return distribution;\n}\n\nprivate static double[] scaleDistribution(double[] distribution, double scaling_factor) {\n    int len = distribution.length;\n    double[] scaled_distribution = new double[len];\n    for (int i = 0; i < len; i++) {\n        scaled_distribution[i] = distribution[i] / scaling_factor;\n    }\n    return scaled_distribution;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}