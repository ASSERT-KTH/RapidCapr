{
    "patch": "        for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {\n          if (block.isFunction || block.isLoop) {\n            if (block.isFunction && ref.getBasicBlock() != block) {\n              return false;\n            }\n            break;\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..6172247c 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {\n+          if (block.isFunction || block.isLoop) {\n+            if (block.isFunction && ref.getBasicBlock() != block) {\n+              return false;\n+            }\n+            break;\n+          }\n+        }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: variable block is already defined in method isAssignedOnceInLifetime()",
    "test_result": "ERROR"
}