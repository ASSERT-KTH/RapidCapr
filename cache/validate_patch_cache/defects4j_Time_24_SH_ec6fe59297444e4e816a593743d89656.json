{
    "patch": "            } catch (IllegalArgumentException ex) {\n                IllegalFieldValueException e;\n                if (ex instanceof IllegalFieldValueException) {\n                    e = (IllegalFieldValueException) ex;\n                } else {\n                    e = new IllegalFieldValueException(\n                            ex.getMessage(), text, ex);\n                }\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n\n                throw e;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..610886c3 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,20 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalArgumentException ex) {\n+                IllegalFieldValueException e;\n+                if (ex instanceof IllegalFieldValueException) {\n+                    e = (IllegalFieldValueException) ex;\n+                } else {\n+                    e = new IllegalFieldValueException(\n+                            ex.getMessage(), text, ex);\n+                }\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+\n+                throw e;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}