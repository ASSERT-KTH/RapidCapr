{
    "patch": "try {\n    byte[] bytes = inputString.getBytes(\"ISO-8859-1\");\n    StringBuilder output = new StringBuilder();\n    for (byte aByte : bytes) {\n        if (aByte == escapeChar) {\n            output.append(escapeChar);\n            continue;\n        }\n        output.append((char)aByte);\n    }\n    success = output.toString().equals(expectedResult);\n} catch (UnsupportedEncodingException e) {\n    System.out.println(\"ISO-8859-1 not supported on this system\");\n    success = false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}