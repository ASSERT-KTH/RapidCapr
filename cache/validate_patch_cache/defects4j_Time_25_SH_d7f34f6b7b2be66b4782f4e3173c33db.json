{
    "patch": "            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            boolean dstGap = (nextLocal == nextAdjusted && offsetLocal > offsetAdjusted);\n            if (dstGap) {\n                // we just crossed a DST gap and need to add the missing hour\n                return offsetAdjusted + 1;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..73c4349f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            long nextLocal = nextTransition(instantAdjusted);\n+            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+            boolean dstGap = (nextLocal == nextAdjusted && offsetLocal > offsetAdjusted);\n+            if (dstGap) {\n+                // we just crossed a DST gap and need to add the missing hour\n+                return offsetAdjusted + 1;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}