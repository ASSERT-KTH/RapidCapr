{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    Gson gson = new Gson();\n    JsonElement element = gson.fromJson(jsonStr, JsonElement.class);\n    JsonObject obj = element.getAsJsonObject();\n    JsonPrimitive primitive = obj.getAsJsonPrimitive(\"typed\");\n    double typed = primitive.getAsDouble();\n    primitive = obj.getAsJsonPrimitive(\"total\");\n    double total = primitive.getAsDouble();\n    double percent = (typed / total) * 100.0;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..6bfc2e4f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    Gson gson = new Gson();\n+    JsonElement element = gson.fromJson(jsonStr, JsonElement.class);\n+    JsonObject obj = element.getAsJsonObject();\n+    JsonPrimitive primitive = obj.getAsJsonPrimitive(\"typed\");\n+    double typed = primitive.getAsDouble();\n+    primitive = obj.getAsJsonPrimitive(\"total\");\n+    double total = primitive.getAsDouble();\n+    double percent = (typed / total) * 100.0;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}