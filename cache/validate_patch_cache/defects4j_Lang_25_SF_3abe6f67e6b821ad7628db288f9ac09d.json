{
    "patch": "public static String unEscapeISO8859_1(String source) {\n    StringBuffer sb = new StringBuffer();\n    int i = 0;\n    while (i < source.length()) {\n        char c = source.charAt(i++);\n        if (c == '\\\\') {\n            if (i < source.length()) {\n                c = source.charAt(i++);\n                if (c == 'n')\n                    sb.append('\\n');\n                else if (c == 'r')\n                    sb.append('\\r');\n                else if (c == 't')\n                    sb.append('\\t');\n                else if (c == 'f')\n                    sb.append('\\f');\n                else if (c == '\\\\')\n                    sb.append('\\\\');\n                else if (c == '\\\"')\n                    sb.append('\\\"');\n                else if (c == '\\'')\n                    sb.append('\\'');\n                else {\n                    sb.append('\\\\');\n                    sb.append(c);\n                }\n            } else {\n                sb.append('\\\\');\n            }\n        } else {\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..92d6c82f 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,41 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unEscapeISO8859_1(String source) {\n+    StringBuffer sb = new StringBuffer();\n+    int i = 0;\n+    while (i < source.length()) {\n+        char c = source.charAt(i++);\n+        if (c == '\\\\') {\n+            if (i < source.length()) {\n+                c = source.charAt(i++);\n+                if (c == 'n')\n+                    sb.append('\\n');\n+                else if (c == 'r')\n+                    sb.append('\\r');\n+                else if (c == 't')\n+                    sb.append('\\t');\n+                else if (c == 'f')\n+                    sb.append('\\f');\n+                else if (c == '\\\\')\n+                    sb.append('\\\\');\n+                else if (c == '\\\"')\n+                    sb.append('\\\"');\n+                else if (c == '\\'')\n+                    sb.append('\\'');\n+                else {\n+                    sb.append('\\\\');\n+                    sb.append(c);\n+                }\n+            } else {\n+                sb.append('\\\\');\n+            }\n+        } else {\n+            sb.append(c);\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}