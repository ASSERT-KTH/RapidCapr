{
    "patch": "/**\n * Returns true if this type is empty, i.e., it has no meaningful content.\n * An empty type is defined as any of the following:\n *   - NoType\n *   - NoObjectType\n *   - NullType\n *   - UnknownType\n *   - VoidType\n *   - NoResolvedType\n */\npublic final boolean isEmptyType() {\n    return isNoType() || isNoObjectType() || isNullType() || isUnknownType() || isVoidType() || isNoResolvedType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..d4454634 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,19 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+/**\n+ * Returns true if this type is empty, i.e., it has no meaningful content.\n+ * An empty type is defined as any of the following:\n+ *   - NoType\n+ *   - NoObjectType\n+ *   - NullType\n+ *   - UnknownType\n+ *   - VoidType\n+ *   - NoResolvedType\n+ */\n+public final boolean isEmptyType() {\n+    return isNoType() || isNoObjectType() || isNullType() || isUnknownType() || isVoidType() || isNoResolvedType();\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}