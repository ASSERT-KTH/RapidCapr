{
    "patch": "public static List<Integer> removeDuplicates(List<Integer> list) {\n    if (list == null || list.size() == 0) {\n        return Collections.emptyList();\n    }\n    \n    Set<Integer> set = new HashSet<>();\n    List<Integer> result = new ArrayList<>();\n\n    for (Integer num : list) {\n        if (!set.contains(num)) {\n            set.add(num);\n            result.add(num);\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..6c6d84109 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,23 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static List<Integer> removeDuplicates(List<Integer> list) {\n+    if (list == null || list.size() == 0) {\n+        return Collections.emptyList();\n+    }\n+    \n+    Set<Integer> set = new HashSet<>();\n+    List<Integer> result = new ArrayList<>();\n+\n+    for (Integer num : list) {\n+        if (!set.contains(num)) {\n+            set.add(num);\n+            result.add(num);\n+        }\n+    }\n+\n+    return result;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}