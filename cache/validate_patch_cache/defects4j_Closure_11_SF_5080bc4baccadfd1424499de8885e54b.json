{
    "patch": "public void testGetprop4() {\n    String key = \"myKey\";\n    String value = \"myValue\";\n    System.setProperty(key, value);\n    try {\n        String[] warnings = new String[0];\n        Configuration config = new Configuration();\n        config.getProps().setProperty(\"foo\", \"bar\");\n        config.getProps().setProperty(key, \"${\" + key + \"}\");\n        config.reloadConfiguration();\n\n        assertTrue(\"expected a warning\", warnings.length > 0);\n    } finally {\n        System.clearProperty(key);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..07210b4f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() {\n+    String key = \"myKey\";\n+    String value = \"myValue\";\n+    System.setProperty(key, value);\n+    try {\n+        String[] warnings = new String[0];\n+        Configuration config = new Configuration();\n+        config.getProps().setProperty(\"foo\", \"bar\");\n+        config.getProps().setProperty(key, \"${\" + key + \"}\");\n+        config.reloadConfiguration();\n+\n+        assertTrue(\"expected a warning\", warnings.length > 0);\n+    } finally {\n+        System.clearProperty(key);\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}