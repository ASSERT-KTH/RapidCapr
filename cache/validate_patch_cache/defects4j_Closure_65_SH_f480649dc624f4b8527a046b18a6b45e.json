{
    "patch": "case '\\0':\n                char nextChar = (i+1 < s.length()) ? s.charAt(i+1) : '\\0';\n                if (nextChar == 'r') {\n                    sb.append(\"\\\\0r\");\n                }\n                else if (nextChar == 'n') {\n                    sb.append(\"\\\\0n\");\n                }\n                else if (nextChar == 't') {\n                    sb.append(\"\\\\0t\");\n                } else {\n                    sb.append(\"\\\\0\");\n                }\n                break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 6117a89b..7d0cf9ae 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1012,7 +1012,20 @@ class CodeGenerator {\n     for (int i = 0; i < s.length(); i++) {\n       char c = s.charAt(i);\n       switch (c) {\n-        case '\\0': sb.append(\"\\\\0\"); break;\n+case '\\0':\n+                char nextChar = (i+1 < s.length()) ? s.charAt(i+1) : '\\0';\n+                if (nextChar == 'r') {\n+                    sb.append(\"\\\\0r\");\n+                }\n+                else if (nextChar == 'n') {\n+                    sb.append(\"\\\\0n\");\n+                }\n+                else if (nextChar == 't') {\n+                    sb.append(\"\\\\0t\");\n+                } else {\n+                    sb.append(\"\\\\0\");\n+                }\n+                break;\n         case '\\n': sb.append(\"\\\\n\"); break;\n         case '\\r': sb.append(\"\\\\r\"); break;\n         case '\\t': sb.append(\"\\\\t\"); break;",
    "result_reason": "junit.framework.ComparisonFailure: expected:<var x=\"\\0[00]\"> but was:<var x=\"\\0[]\">",
    "test_result": "FAIL"
}