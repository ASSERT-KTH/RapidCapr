{
    "patch": "public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n    ReturnValue values = new ReturnValue();\n    for (MockBehavior impl : behaviors) {\n        // Check if this behavior applies to this invocation\n        if (impl.matches(method, args)) {\n            // If it does, execute the behavior\n            try {\n                return impl.invoke(method, args, values);\n            } catch (Throwable t) {\n                // If it throws an exception, try the next behavior\n                continue;\n            }\n        }\n    }\n    // If no behavior applies, return a default value\n    return values.returnValueFor(method.getReturnType());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}