{
    "patch": "JSType thisType = functionType.getTypeOfThis();\nif (thisType != null && !NodeUtil.isGet(n.getParent()) && !NodeUtil.isGetProp(n.getParent())) {\n  Node grandParent = n.getParent().getParent();\n  if (grandParent == null || !NodeUtil.isGet(grandParent) && !NodeUtil.isGetProp(grandParent)) {\n    report(t, n, EXPECTED_THIS_TYPE);\n    ensureTyped(t, n.getParent());\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..9ba11d7a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+JSType thisType = functionType.getTypeOfThis();\n+if (thisType != null && !NodeUtil.isGet(n.getParent()) && !NodeUtil.isGetProp(n.getParent())) {\n+  Node grandParent = n.getParent().getParent();\n+  if (grandParent == null || !NodeUtil.isGet(grandParent) && !NodeUtil.isGetProp(grandParent)) {\n+    report(t, n, EXPECTED_THIS_TYPE);\n+    ensureTyped(t, n.getParent());\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_EXPECTED_THIS_TYPE. \"{0}\" must be called with a \"this\" type at testcode line 1 : 164 expected:<0> but was:<1>",
    "test_result": "FAIL"
}