{
    "patch": "public double chiSquare(double[] expected, long[] observed)\n        throws IllegalArgumentException {\n        if ((expected.length < 2) || (expected.length != observed.length)) {\n            throw new IllegalArgumentException(\n                    \"observed, expected array lengths incorrect\");\n        }\n        if (!isPositive(expected) || !isNonNegative(observed)) {\n            throw new IllegalArgumentException(\n                \"observed counts must be non-negative and expected counts must be positive\");\n        }\n        double sumSq = 0.0d;\n        double dev = 0.0d;\n        for (int i = 0; i < observed.length; i++) {\n            if (expected[i] == 0.0d) {\n                if (observed[i] != 0L) {\n                    throw new IllegalArgumentException(\n                        \"found an observed count of \" + observed[i]\n                        + \" but expected count was 0.0\");\n                } else {\n                    continue;\n                }\n            }\n            dev = ((double) observed[i] - expected[i]);\n            sumSq += dev * dev / expected[i];",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex c87b0101f..c7a210e73 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -61,7 +61,7 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n      * @throws IllegalArgumentException if preconditions are not met\n      * or length is less than 2\n      */\n-    public double chiSquare(double[] expected, long[] observed)\n+public double chiSquare(double[] expected, long[] observed)\n         throws IllegalArgumentException {\n         if ((expected.length < 2) || (expected.length != observed.length)) {\n             throw new IllegalArgumentException(\n@@ -69,16 +69,22 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n         }\n         if (!isPositive(expected) || !isNonNegative(observed)) {\n             throw new IllegalArgumentException(\n-                \"observed counts must be non-negative and expected counts must be postive\");\n+                \"observed counts must be non-negative and expected counts must be positive\");\n         }\n         double sumSq = 0.0d;\n         double dev = 0.0d;\n         for (int i = 0; i < observed.length; i++) {\n-                dev = ((double) observed[i] - expected[i]);\n-                sumSq += dev * dev / expected[i];\n-        }\n-        return sumSq;\n-    }\n+            if (expected[i] == 0.0d) {\n+                if (observed[i] != 0L) {\n+                    throw new IllegalArgumentException(\n+                        \"found an observed count of \" + observed[i]\n+                        + \" but expected count was 0.0\");\n+                } else {\n+                    continue;\n+                }\n+            }\n+            dev = ((double) observed[i] - expected[i]);\n+            sumSq += dev * dev / expected[i];\n \n     /**\n      * {@inheritDoc}",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}