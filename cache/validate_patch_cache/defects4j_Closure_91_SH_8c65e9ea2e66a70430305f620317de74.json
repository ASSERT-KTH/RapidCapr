{
    "patch": "      if (NodeUtil.isGet(parent) &&\n          parent.getNext() != null &&\n          parent.getNext().getType() == Token.ASSIGN &&\n          NodeUtil.isGet(parent.getNext().getFirstChild()) &&\n          parent.getNext().getFirstChild().getType() == Token.GETPROP &&\n          \"prototype\".equals(parent.getNext().getFirstChild().getLastChild().getString())) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..b9b90baa 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,12 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent) &&\n+          parent.getNext() != null &&\n+          parent.getNext().getType() == Token.ASSIGN &&\n+          NodeUtil.isGet(parent.getNext().getFirstChild()) &&\n+          parent.getNext().getFirstChild().getType() == Token.GETPROP &&\n+          \"prototype\".equals(parent.getNext().getFirstChild().getLastChild().getString())) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}