{
    "patch": "            for (int i = 1; i < count; i++) {\n                int cmp = savedFields[i-1].compareTo(savedFields[i]);\n                if (cmp > 0) {\n                    long newMillis = savedFields[i-1].set(millis, resetFields);\n                    if (newMillis != millis) {\n                        throw new IllegalArgumentException(\"Illegal instant due to disallowed field combination\");\n                    }\n                    millis = newMillis;\n                    i = 0; // start again\n                } else if (cmp == 0 && !savedFields[i-1].equals(savedFields[i])) {\n                    throw new IllegalArgumentException(\"Two fields resolved to the same result\");\n                }\n            }\n            if (count > 0) {\n                // last field\n                long newMillis = savedFields[count-1].set(millis, resetFields);\n                if (newMillis != millis) {\n                    throw new IllegalArgumentException(\"Illegal instant due to disallowed field combination\");\n                }\n                millis = newMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..aeb7caef 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            for (int i = 1; i < count; i++) {\n+                int cmp = savedFields[i-1].compareTo(savedFields[i]);\n+                if (cmp > 0) {\n+                    long newMillis = savedFields[i-1].set(millis, resetFields);\n+                    if (newMillis != millis) {\n+                        throw new IllegalArgumentException(\"Illegal instant due to disallowed field combination\");\n+                    }\n+                    millis = newMillis;\n+                    i = 0; // start again\n+                } else if (cmp == 0 && !savedFields[i-1].equals(savedFields[i])) {\n+                    throw new IllegalArgumentException(\"Two fields resolved to the same result\");\n+                }\n+            }\n+            if (count > 0) {\n+                // last field\n+                long newMillis = savedFields[count-1].set(millis, resetFields);\n+                if (newMillis != millis) {\n+                    throw new IllegalArgumentException(\"Illegal instant due to disallowed field combination\");\n+                }\n+                millis = newMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}