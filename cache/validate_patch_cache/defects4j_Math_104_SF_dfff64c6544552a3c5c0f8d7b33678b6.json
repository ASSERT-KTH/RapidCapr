{
    "patch": "import static org.junit.Assert.assertEquals;\nimport org.apache.commons.math3.special.*;\n\nimport org.junit.Test;\n\npublic class MyClass {\n    @Test\n    public void testRegularizedGammaPositivePositive() {\n        double a = 1.49, x = 0.62;\n\n        double expected = Gamma.regularizedGammaP(a, x);\n        double actualP = new RegularizedGamma.P(a, 1E-15, 1000).value(x);\n\n        assertEquals(expected, actualP, 1E-15);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..043926ecd 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,22 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import static org.junit.Assert.assertEquals;\n+import org.apache.commons.math3.special.*;\n+\n+import org.junit.Test;\n+\n+public class MyClass {\n+    @Test\n+    public void testRegularizedGammaPositivePositive() {\n+        double a = 1.49, x = 0.62;\n+\n+        double expected = Gamma.regularizedGammaP(a, x);\n+        double actualP = new RegularizedGamma.P(a, 1E-15, 1000).value(x);\n+\n+        assertEquals(expected, actualP, 1E-15);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}