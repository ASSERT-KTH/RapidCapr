{
    "patch": "public static boolean is_nested(String brackets) {\n    int opening_brackets = 0;\n    int cnt = 0;\n    boolean is_nested = false; // new variable to track nesting\n    for (char ch : brackets.toCharArray()) {\n        if (ch == '[') {\n            opening_brackets++;\n            if (opening_brackets > 1) {\n                is_nested = true;\n            }\n        } else if (ch == ']') {\n            opening_brackets--;\n            if (opening_brackets < 0) {\n                return false;\n            } else if (opening_brackets == 1) { // only increment cnt if we've closed a pair of nested brackets\n                cnt++;\n            }\n        }\n    }\n    return cnt >= 2 && is_nested; // return true only if there are at least 2 pairs of nested brackets and at least one of them is actually nested\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_NESTED.java b/src/main/java/humaneval/buggy/IS_NESTED.java\nindex 28b9704..9f8152e 100644\n--- a/src/main/java/humaneval/buggy/IS_NESTED.java\n+++ b/src/main/java/humaneval/buggy/IS_NESTED.java\n@@ -18,21 +18,25 @@ import java.util.Collections;\n  */\n \n public class IS_NESTED {\n-    public static boolean is_nested(String brackets) {\n-        ArrayList<Integer> opening_brackets = new ArrayList<>();\n-        ArrayList<Integer> closing_brackets = new ArrayList<>();\n-        for(int i = 0; i < brackets.length(); i++) {\n-            if(brackets.charAt(i) == '[') opening_brackets.add(i);\n-            else closing_brackets.add(i);\n-        }\n-        Collections.reverse(opening_brackets);\n-        int cnt = 0, i = 0, l = opening_brackets.size();\n-        for(int idx : closing_brackets) {\n-            if(i < l || idx >= opening_brackets.get(i)) {\n-                i++;\n+public static boolean is_nested(String brackets) {\n+    int opening_brackets = 0;\n+    int cnt = 0;\n+    boolean is_nested = false; // new variable to track nesting\n+    for (char ch : brackets.toCharArray()) {\n+        if (ch == '[') {\n+            opening_brackets++;\n+            if (opening_brackets > 1) {\n+                is_nested = true;\n+            }\n+        } else if (ch == ']') {\n+            opening_brackets--;\n+            if (opening_brackets < 0) {\n+                return false;\n+            } else if (opening_brackets == 1) { // only increment cnt if we've closed a pair of nested brackets\n                 cnt++;\n             }\n         }\n-        return cnt >= 2;\n     }\n+    return cnt >= 2 && is_nested; // return true only if there are at least 2 pairs of nested brackets and at least one of them is actually nested\n+}\n }",
    "result_reason": "   TEST_IS_NESTED.test_0:6 expected:<true> but was:<false>",
    "test_result": "FAIL"
}