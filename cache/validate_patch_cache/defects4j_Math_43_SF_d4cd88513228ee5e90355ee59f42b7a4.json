{
    "patch": "public void addValue(double value) {\n    if (Double.isNaN(value)) {\n        return;\n    }\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden, we need to increment these\n    if (meanImpl.getClass().equals(Mean.class)) {\n        meanImpl.increment(value);\n    } else if (meanImpl == null) {\n        meanImpl = new Mean();\n        meanImpl.increment(value);\n    } else {\n        Mean newMeanImpl = new Mean();\n        newMeanImpl.increment(value);\n        double oldMean = meanImpl.getResult();\n        double oldN = n;\n        meanImpl.increment((oldMean * oldN - oldMean + value) / oldN);\n    }\n    if (varianceImpl.getClass().equals(Variance.class)) {\n        varianceImpl.increment(value);\n    } else if (varianceImpl == null) {\n        varianceImpl = new Variance();\n        varianceImpl.increment(value);\n    } else {\n        Variance newVarianceImpl = new Variance();\n        newVarianceImpl.increment(value);\n        double oldVariance = varianceImpl.getResult();\n        double oldN = n;\n        varianceImpl.increment((oldVariance * oldN - oldVariance) / (oldN - 1) \n                                + (newVarianceImpl.getResult() * (1 - n) / (n - 1))\n                                + Math.pow(meanImpl.getResult() - newMeanImpl.getResult(), 2) * oldN / (n * (n - 1)));\n    }\n    if (geoMeanImpl.getClass().equals(GeometricMean.class) && value > 0.0) {\n        geoMeanImpl.increment(value);\n    } else if (geoMeanImpl instanceof GeometricMean == false) {\n        geoMeanImpl = new GeometricMean();\n        if (value > 0.0) {\n            geoMeanImpl.increment(value);\n        }\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..2043a892e 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,53 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+public void addValue(double value) {\n+    if (Double.isNaN(value)) {\n+        return;\n+    }\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden, we need to increment these\n+    if (meanImpl.getClass().equals(Mean.class)) {\n+        meanImpl.increment(value);\n+    } else if (meanImpl == null) {\n+        meanImpl = new Mean();\n+        meanImpl.increment(value);\n+    } else {\n+        Mean newMeanImpl = new Mean();\n+        newMeanImpl.increment(value);\n+        double oldMean = meanImpl.getResult();\n+        double oldN = n;\n+        meanImpl.increment((oldMean * oldN - oldMean + value) / oldN);\n+    }\n+    if (varianceImpl.getClass().equals(Variance.class)) {\n+        varianceImpl.increment(value);\n+    } else if (varianceImpl == null) {\n+        varianceImpl = new Variance();\n+        varianceImpl.increment(value);\n+    } else {\n+        Variance newVarianceImpl = new Variance();\n+        newVarianceImpl.increment(value);\n+        double oldVariance = varianceImpl.getResult();\n+        double oldN = n;\n+        varianceImpl.increment((oldVariance * oldN - oldVariance) / (oldN - 1) \n+                                + (newVarianceImpl.getResult() * (1 - n) / (n - 1))\n+                                + Math.pow(meanImpl.getResult() - newMeanImpl.getResult(), 2) * oldN / (n * (n - 1)));\n+    }\n+    if (geoMeanImpl.getClass().equals(GeometricMean.class) && value > 0.0) {\n+        geoMeanImpl.increment(value);\n+    } else if (geoMeanImpl instanceof GeometricMean == false) {\n+        geoMeanImpl = new GeometricMean();\n+        if (value > 0.0) {\n             geoMeanImpl.increment(value);\n         }\n-        n++;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}