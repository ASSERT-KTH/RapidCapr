{
    "patch": "public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n    String str = text.substring(position);\n    Matcher matcher = TIME_ZONE_PATTERN.matcher(str);\n    if (matcher.find()) {\n        String id = matcher.group(0);\n        bucket.setZone(DateTimeZone.forID(id));\n        return position + matcher.end();\n    }\n    return ~position;\n}\n\nprivate static final Pattern TIME_ZONE_PATTERN = Pattern.compile(\"[-+][0-9]{2}:?[0-9]{2}|Z|(?:GMT|UTC)(?:[+-][0-9]{1,2})(?::[0-9]{2})?|(?:[A-Za-z]+/){2,}[A-Za-z_]+\");",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex 558a5864..7b407df2 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2537,16 +2537,18 @@ public class DateTimeFormatterBuilder {\n             return MAX_LENGTH;\n         }\n \n-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n-            String str = text.substring(position);\n-            for (String id : ALL_IDS) {\n-                if (str.startsWith(id)) {\n-                    bucket.setZone(DateTimeZone.forID(id));\n-                    return position + id.length();\n-                }\n-            }\n-            return ~position;\n-        }\n+public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n+    String str = text.substring(position);\n+    Matcher matcher = TIME_ZONE_PATTERN.matcher(str);\n+    if (matcher.find()) {\n+        String id = matcher.group(0);\n+        bucket.setZone(DateTimeZone.forID(id));\n+        return position + matcher.end();\n+    }\n+    return ~position;\n+}\n+\n+private static final Pattern TIME_ZONE_PATTERN = Pattern.compile(\"[-+][0-9]{2}:?[0-9]{2}|Z|(?:GMT|UTC)(?:[+-][0-9]{1,2})(?::[0-9]{2})?|(?:[A-Za-z]+/){2,}[A-Za-z_]+\");\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}