{
    "patch": "    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        int size = elementPairs.size();\n        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n            Separator sep = (Separator) elementPairs.get(0);\n            List<Object> subList = elementPairs.subList(1, size);\n            List<Object> subList2 = new ArrayList<>(subList.size());\n            for (Object obj : subList) {\n                if (obj instanceof Separator) {\n                    subList2.add(obj);\n                } else {\n                    Object[] inner = (Object[]) obj;\n                    inner[3] = toFormatter((List<Object>) inner[3],!notPrinter, !notParser);\n                    subList2.add(inner);\n                }\n            }\n            sep = sep.finish(toFormatter(subList2, !notPrinter, !notParser).getPrinter(), \n                    toFormatter(subList2, !notPrinter, !notParser).getParser());\n            return new PeriodFormatter(sep, sep);\n        }\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..e4b4f3f3 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -798,9 +798,20 @@ public class PeriodFormatterBuilder {\n         int size = elementPairs.size();\n         if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n             Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n+            List<Object> subList = elementPairs.subList(1, size);\n+            List<Object> subList2 = new ArrayList<>(subList.size());\n+            for (Object obj : subList) {\n+                if (obj instanceof Separator) {\n+                    subList2.add(obj);\n+                } else {\n+                    Object[] inner = (Object[]) obj;\n+                    inner[3] = toFormatter((List<Object>) inner[3],!notPrinter, !notParser);\n+                    subList2.add(inner);\n+                }\n+            }\n+            sep = sep.finish(toFormatter(subList2, !notPrinter, !notParser).getPrinter(), \n+                    toFormatter(subList2, !notPrinter, !notParser).getParser());\n+            return new PeriodFormatter(sep, sep);\n         }\n         Object[] comp = createComposite(elementPairs);\n         if (notPrinter) {",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}