{
    "patch": "public class MyClass {\n    \n    public static List<String> filterList(List<String> list) {\n        if (list == null || list.size() == 0) {\n            return Collections.emptyList();\n        }\n        List<String> filteredList = new ArrayList<>();\n        for (String s : list) {\n            if (s.startsWith(\"a\") && s.length() == 3) {\n                filteredList.add(s);\n            }\n        }\n        return filteredList;\n    }\n    \n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..f22b79d68 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,22 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public class MyClass {\n+    \n+    public static List<String> filterList(List<String> list) {\n+        if (list == null || list.size() == 0) {\n+            return Collections.emptyList();\n+        }\n+        List<String> filteredList = new ArrayList<>();\n+        for (String s : list) {\n+            if (s.startsWith(\"a\") && s.length() == 3) {\n+                filteredList.add(s);\n+            }\n+        }\n+        return filteredList;\n+    }\n+    \n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}