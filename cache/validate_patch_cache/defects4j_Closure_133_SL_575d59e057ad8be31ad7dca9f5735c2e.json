{
    "patch": "try {\n    result = stream.getRemainingJSDocLine();\n    while(result.contains(\"@{\")) {\n        int start = result.indexOf(\"@{\");\n        int end = result.indexOf(\"}\", start);\n        result = result.substring(0, start) + result.substring(end + 1);\n    }\n} catch (IllegalStateException e) {\n    // If there is an exception, return an empty string\n    result = \"\";\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..28074b35 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,17 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+try {\n+    result = stream.getRemainingJSDocLine();\n+    while(result.contains(\"@{\")) {\n+        int start = result.indexOf(\"@{\");\n+        int end = result.indexOf(\"}\", start);\n+        result = result.substring(0, start) + result.substring(end + 1);\n+    }\n+} catch (IllegalStateException e) {\n+    // If there is an exception, return an empty string\n+    result = \"\";\n+}\n     return result;\n   }\n ",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_TYPE_PARSE_ERROR. Bad type annotation. Unknown type T at externs line 11 : 14",
    "test_result": "FAIL"
}