{
    "patch": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour,\n            int secondOfMinute, int millisOfSecond) throws IllegalArgumentException {\n        Chronology base = getBase();\n        if (base != null) {\n            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute,\n                    millisOfSecond);\n        }\n\n        if (year == 1582 && monthOfYear == 10 && dayOfMonth >= 5 && dayOfMonth <= 14) {\n            // Throw an exception if the date is within the cutover gap\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n\n        long instant = 0;\n        if (year < 1582) {\n            // Use the Julian calendar for dates before the cutover\n            instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour,\n                    secondOfMinute, millisOfSecond);\n        } else if (year > 1582 || (monthOfYear > 10 || (monthOfYear == 10 && dayOfMonth >= 15))) {\n            // Use the Gregorian calendar for dates after the cutover\n            instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour,\n                    secondOfMinute, millisOfSecond);\n        } else {\n            // Date is within the cutover gap, throw an exception\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n\n        return instant;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 29e559d4..bb0ccb58 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -347,33 +347,33 @@ public final class GJChronology extends AssembledChronology {\n         return instant;\n     }\n \n-    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n-                                  int hourOfDay, int minuteOfHour,\n-                                  int secondOfMinute, int millisOfSecond)\n-        throws IllegalArgumentException\n-    {\n-        Chronology base;\n-        if ((base = getBase()) != null) {\n-            return base.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour,\n+            int secondOfMinute, int millisOfSecond) throws IllegalArgumentException {\n+        Chronology base = getBase();\n+        if (base != null) {\n+            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute,\n+                    millisOfSecond);\n+        }\n+\n+        if (year == 1582 && monthOfYear == 10 && dayOfMonth >= 5 && dayOfMonth <= 14) {\n+            // Throw an exception if the date is within the cutover gap\n+            throw new IllegalArgumentException(\"Specified date does not exist\");\n+        }\n+\n+        long instant = 0;\n+        if (year < 1582) {\n+            // Use the Julian calendar for dates before the cutover\n+            instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour,\n+                    secondOfMinute, millisOfSecond);\n+        } else if (year > 1582 || (monthOfYear > 10 || (monthOfYear == 10 && dayOfMonth >= 15))) {\n+            // Use the Gregorian calendar for dates after the cutover\n+            instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour,\n+                    secondOfMinute, millisOfSecond);\n+        } else {\n+            // Date is within the cutover gap, throw an exception\n+            throw new IllegalArgumentException(\"Specified date does not exist\");\n         }\n \n-        // Assume date is Gregorian.\n-        long instant;\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        if (instant < iCutoverMillis) {\n-            // Maybe it's Julian.\n-            instant = iJulianChronology.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                // Okay, it's in the illegal cutover gap.\n-                throw new IllegalArgumentException(\"Specified date does not exist\");\n-            }\n-        }\n         return instant;\n     }\n ",
    "result_reason": "java.lang.IllegalArgumentException: Specified date does not exist",
    "test_result": "FAIL"
}