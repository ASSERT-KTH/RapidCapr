{
    "patch": "public double getTypedPercent(String s) {\n    int totalChars = s.length();\n    int typedChars = 0;\n\n    for (int i = 0; i < totalChars; i++) {\n        if (s.charAt(i) != ' ') {\n            typedChars++;\n        }\n    }\n\n    return ((double) typedChars / totalChars) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..44010a39 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String s) {\n+    int totalChars = s.length();\n+    int typedChars = 0;\n+\n+    for (int i = 0; i < totalChars; i++) {\n+        if (s.charAt(i) != ' ') {\n+            typedChars++;\n+        }\n+    }\n+\n+    return ((double) typedChars / totalChars) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}