{
    "patch": "        if (len == 7 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6)))) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n        if (len > 7) {\n            if (str.charAt(5) != '_' || !Character.isUpperCase(str.charAt(6))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String country = str.substring(3, 5);\n            String variant = str.substring(6);\n            for (int i = 7; i < len;) {\n                if (str.charAt(i) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                i++;\n                int nextIndex = str.indexOf('_', i);\n                if (nextIndex == -1) {\n                    nextIndex = len;\n                }\n                String segment = str.substring(i, nextIndex);\n                if (segment.isEmpty()) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (i + segment.length() < nextIndex && !Character.isUpperCase(str.charAt(i + segment.length()))) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                i += segment.length();\n                if (nextIndex < len && nextIndex - i == 2 && Character.isUpperCase(str.charAt(i)) && Character.isUpperCase(str.charAt(i + 1))) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (nextIndex < len || (!segment.isEmpty() && Character.isUpperCase(segment.charAt(0)))) {\n                    country = segment;\n                } else {\n                    variant = segment;\n                }\n            }\n            return new Locale(str.substring(0, 2), country, variant);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..8eee7343 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,42 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        if (len == 7 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6)))) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n+        if (len > 7) {\n+            if (str.charAt(5) != '_' || !Character.isUpperCase(str.charAt(6))) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            String country = str.substring(3, 5);\n+            String variant = str.substring(6);\n+            for (int i = 7; i < len;) {\n+                if (str.charAt(i) != '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                i++;\n+                int nextIndex = str.indexOf('_', i);\n+                if (nextIndex == -1) {\n+                    nextIndex = len;\n+                }\n+                String segment = str.substring(i, nextIndex);\n+                if (segment.isEmpty()) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (i + segment.length() < nextIndex && !Character.isUpperCase(str.charAt(i + segment.length()))) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                i += segment.length();\n+                if (nextIndex < len && nextIndex - i == 2 && Character.isUpperCase(str.charAt(i)) && Character.isUpperCase(str.charAt(i + 1))) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (nextIndex < len || (!segment.isEmpty() && Character.isUpperCase(segment.charAt(0)))) {\n+                    country = segment;\n+                } else {\n+                    variant = segment;\n+                }\n+            }\n+            return new Locale(str.substring(0, 2), country, variant);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}