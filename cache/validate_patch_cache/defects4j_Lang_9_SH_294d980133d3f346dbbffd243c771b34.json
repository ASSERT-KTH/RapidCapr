{
    "patch": "        currentFormatField = patternMatcher.group();\n        currentStrategy = getStrategy(currentFormatField);\n\n        while (patternMatcher.find()) {\n            String nextFormatField = patternMatcher.group();\n            nextStrategy = getStrategy(nextFormatField);\n\n            if (currentStrategy == null || currentStrategy != nextStrategy) {\n                if (currentStrategy != null) {\n                    if (!currentStrategy.addRegex(this, regex)) {\n                        throw new IllegalArgumentException(\"Invalid pattern\");\n                    }\n                    collector.add(currentStrategy);\n                }\n                currentFormatField = nextFormatField;\n                currentStrategy = nextStrategy;\n            } else {\n                currentFormatField = currentFormatField.concat(nextFormatField);\n            }\n        }\n\n        if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        } else if (collector.isEmpty()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n\n        currentFormatField = null;\n        strategies = collector.toArray(new Strategy[collector.size()]);\n        parsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..aba0bcb2 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,36 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        currentFormatField = patternMatcher.group();\n+        currentStrategy = getStrategy(currentFormatField);\n+\n+        while (patternMatcher.find()) {\n+            String nextFormatField = patternMatcher.group();\n+            nextStrategy = getStrategy(nextFormatField);\n+\n+            if (currentStrategy == null || currentStrategy != nextStrategy) {\n+                if (currentStrategy != null) {\n+                    if (!currentStrategy.addRegex(this, regex)) {\n+                        throw new IllegalArgumentException(\"Invalid pattern\");\n+                    }\n+                    collector.add(currentStrategy);\n+                }\n+                currentFormatField = nextFormatField;\n+                currentStrategy = nextStrategy;\n+            } else {\n+                currentFormatField = currentFormatField.concat(nextFormatField);\n+            }\n+        }\n+\n+        if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        } else if (collector.isEmpty()) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+\n+        currentFormatField = null;\n+        strategies = collector.toArray(new Strategy[collector.size()]);\n+        parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "java.lang.ExceptionInInitializerError",
    "test_result": "FAIL"
}