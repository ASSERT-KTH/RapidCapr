{
    "patch": "public int compareTo(Fraction object) {\n    int commonDenominator = denominator * object.getDenominator();\n    int thisNumerator = numerator * object.getDenominator();\n    int otherNumerator = object.getNumerator() * denominator;\n\n    return Integer.compare(thisNumerator, otherNumerator);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..2cf86b1f7 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,13 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+public int compareTo(Fraction object) {\n+    int commonDenominator = denominator * object.getDenominator();\n+    int thisNumerator = numerator * object.getDenominator();\n+    int otherNumerator = object.getNumerator() * denominator;\n+\n+    return Integer.compare(thisNumerator, otherNumerator);\n+}\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}