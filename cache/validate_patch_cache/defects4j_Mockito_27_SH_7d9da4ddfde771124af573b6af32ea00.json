{
    "patch": "\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n\n        if(mock instanceof Factory) {\n            Factory factory = (Factory) mock;\n            Callback[] callbacks = new Callback[factory.getCallbacks().length + 1];\n            callbacks[0] = newFilter;\n            System.arraycopy(factory.getCallbacks(), 0, callbacks, 1, factory.getCallbacks().length);\n            factory.setCallbacks(callbacks);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..90fb312b8 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,20 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+\n+        if(mock instanceof Factory) {\n+            Factory factory = (Factory) mock;\n+            Callback[] callbacks = new Callback[factory.getCallbacks().length + 1];\n+            callbacks[0] = newFilter;\n+            System.arraycopy(factory.getCallbacks(), 0, callbacks, 1, factory.getCallbacks().length);\n+            factory.setCallbacks(callbacks);\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Problems initiating spied field initializedSpy",
    "test_result": "FAIL"
}