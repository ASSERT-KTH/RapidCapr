{
    "patch": "if (offsetLocal < offsetAdjusted) {\n    // we need to ensure that time is always after the DST gap\n    // this happens naturally for positive offsets, but not for negative\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal != nextAdjusted) {\n        int checkOffset = getOffset(nextAdjusted - offsetAdjusted);\n        if (checkOffset == offsetAdjusted) {\n            return offsetAdjusted;\n        }\n    }\n} else if (offsetAdjusted < offsetLocal) {\n    // we need to ensure that time is always after the DST gap\n    // this happens naturally for positive offsets, but not for negative\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal != nextAdjusted) {\n        int checkOffset = getOffset(nextLocal - offsetLocal);\n        if (checkOffset != offsetLocal) {\n            return offsetLocal;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..029ae21d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,29 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal < offsetAdjusted) {\n+    // we need to ensure that time is always after the DST gap\n+    // this happens naturally for positive offsets, but not for negative\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal != nextAdjusted) {\n+        int checkOffset = getOffset(nextAdjusted - offsetAdjusted);\n+        if (checkOffset == offsetAdjusted) {\n+            return offsetAdjusted;\n+        }\n+    }\n+} else if (offsetAdjusted < offsetLocal) {\n+    // we need to ensure that time is always after the DST gap\n+    // this happens naturally for positive offsets, but not for negative\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal != nextAdjusted) {\n+        int checkOffset = getOffset(nextLocal - offsetLocal);\n+        if (checkOffset != offsetLocal) {\n+            return offsetLocal;\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}