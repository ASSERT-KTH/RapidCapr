{
    "patch": "String[] entitiesToShow = {\"\\u00e4\", \"\\u00c4\", \"\\u00f6\", \"\\u00d6\", \"\\u00fc\", \"\\u00dc\", \"\\u00df\"};\nfor (int i = 0; entitiesToShow.length; i++) {\n    String entityToShow = entitiesToShow[i];\n    try {\n        String encoded = ESAPI.encoder().encodeForHTML(entityToShow);\n        assertTrue(\"Failed to encode \" + entityToShow, !entityToShow.equals(encoded));\n        String decoded = ESAPI.encoder().decodeFromHTML(encoded);\n        assertTrue(\"Failed to decode \" + encoded + \" (encoded from \" + entityToShow + \")\", entityToShow.equals(decoded));\n    } catch( Exception e ) {\n        System.out.println(\"failed for \" + entityToShow);\n        e.printStackTrace();\n        assertTrue(\"Failed to encode/decode \" + entityToShow, false);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}