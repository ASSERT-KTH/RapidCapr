{
    "patch": "public static ArrayList<String> words_strings(String s) {\n    ArrayList<String> result = new ArrayList<String>();\n    String[] split = s.split(\"[,\\\\s]+\"); // split by comma or space\n    for(String s1 : split) {\n        String trimmed = s1.trim();\n        if(!trimmed.isEmpty()) { // if trimmed string is not empty, add to result arraylist\n            result.add(trimmed);\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/WORDS_STRINGS.java b/src/main/java/humaneval/buggy/WORDS_STRINGS.java\nindex e98a5f0..1b766a8 100644\n--- a/src/main/java/humaneval/buggy/WORDS_STRINGS.java\n+++ b/src/main/java/humaneval/buggy/WORDS_STRINGS.java\n@@ -12,20 +12,15 @@ import java.util.ArrayList;\n  */\n \n public class WORDS_STRINGS {\n-\tpublic static ArrayList<String> words_strings(String s) {\n-\t\tArrayList<String> result = new ArrayList<String>();\n-\t\tString s_list = \"\";\n-\t\tfor(char c : s.toCharArray()) {\n-\t\t\tif(c == ',') {\n-\t\t\t\ts_list += ' ';\n-\t\t\t} else {\n-\t\t\t\ts_list += c;\n-\t\t\t}\n-\t\t}\n-\t\tString[] result_array = s_list.trim().split(\"\\\\s+\");\n-\t\tfor(String r : result_array) {\n-\t\t\tresult.add(r);\n-\t\t}\n-\t\treturn result;\n-\t}\n+public static ArrayList<String> words_strings(String s) {\n+    ArrayList<String> result = new ArrayList<String>();\n+    String[] split = s.split(\"[,\\\\s]+\"); // split by comma or space\n+    for(String s1 : split) {\n+        String trimmed = s1.trim();\n+        if(!trimmed.isEmpty()) { // if trimmed string is not empty, add to result arraylist\n+            result.add(trimmed);\n+        }\n+    }\n+    return result;\n }\n+",
    "result_reason": " /tmp/humaneval-WORDS_STRINGS/src/main/java/humaneval/buggy/WORDS_STRINGS.java:[25,2] reached end of file while parsing",
    "test_result": "ERROR"
}