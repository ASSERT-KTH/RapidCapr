{
    "patch": "        if (start >= this.data.size()) {\n            throw new IllegalArgumentException(\"Requires start < \" + this.data.size());\n        }\n        if (end >= this.data.size()) {\n            end = this.data.size() - 1;\n        }\n        if (start > end) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        copy.data = new java.util.ArrayList();\n        for (int index = start; index <= end; index++) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index).clone();\n            try {\n                copy.add(item);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..fbe9458 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start >= this.data.size()) {\n+            throw new IllegalArgumentException(\"Requires start < \" + this.data.size());\n+        }\n+        if (end >= this.data.size()) {\n+            end = this.data.size() - 1;\n+        }\n+        if (start > end) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+        copy.data = new java.util.ArrayList();\n+        for (int index = start; index <= end; index++) {\n+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index).clone();\n+            try {\n+                copy.add(item);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: clone() has protected access in Object",
    "test_result": "ERROR"
}