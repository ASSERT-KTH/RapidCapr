{
    "patch": "static boolean isSimpleNumber(String s) {\n    if (s == null || s.isEmpty() || s.charAt(0) == '-') {\n        return false;\n    }\n    int len = s.length();\n    boolean foundNonZeroDigit = false;\n    for (int i = 0; i < len; i++) {\n        char c = s.charAt(i);\n        if (c < '0' || c > '9') {\n            return false;\n        }\n        if (!foundNonZeroDigit && c == '0') {\n            if (i + 1 < len && s.charAt(i + 1) != '0') {\n                foundNonZeroDigit = true;\n            } else {\n                return false;\n            }\n        } else {\n            foundNonZeroDigit = true;\n        }\n    }\n    return foundNonZeroDigit;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 2270c172..593235a8 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -780,16 +780,29 @@ class CodeGenerator {\n     } while (current != n);\n   }\n \n-  static boolean isSimpleNumber(String s) {\n-    int len = s.length();\n-    for (int index = 0; index < len; index++) {\n-      char c = s.charAt(index);\n-      if (c < '0' || c > '9') {\n+static boolean isSimpleNumber(String s) {\n+    if (s == null || s.isEmpty() || s.charAt(0) == '-') {\n         return false;\n-      }\n     }\n-    return len > 0 && s.charAt(0) != '0';\n-  }\n+    int len = s.length();\n+    boolean foundNonZeroDigit = false;\n+    for (int i = 0; i < len; i++) {\n+        char c = s.charAt(i);\n+        if (c < '0' || c > '9') {\n+            return false;\n+        }\n+        if (!foundNonZeroDigit && c == '0') {\n+            if (i + 1 < len && s.charAt(i + 1) != '0') {\n+                foundNonZeroDigit = true;\n+            } else {\n+                return false;\n+            }\n+        } else {\n+            foundNonZeroDigit = true;\n+        }\n+    }\n+    return foundNonZeroDigit;\n+}\n \n   static double getSimpleNumber(String s) {\n     if (isSimpleNumber(s)) {",
    "result_reason": "junit.framework.ComparisonFailure: expected:<var x={[\"010\"]:1}> but was:<var x={[10]:1}>",
    "test_result": "FAIL"
}