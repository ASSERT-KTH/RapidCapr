{
    "patch": "        int idx = 0;\n        while (count <= index) {\n            ++idx;\n            count += uniCounterOffset[last-idx];\n        }\n        --idx;\n        count -= uniCounterOffset[last-idx];\n        indices[last-idx-1] = idx;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..26e063dae 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,14 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n+        int idx = 0;\n+        while (count <= index) {\n             ++idx;\n+            count += uniCounterOffset[last-idx];\n         }\n         --idx;\n-        indices[last] = idx;\n+        count -= uniCounterOffset[last-idx];\n+        indices[last-idx-1] = idx;\n \n         return indices;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Wrong multidimensional index for [1][2] expected:<1> but was:<0>",
    "test_result": "FAIL"
}