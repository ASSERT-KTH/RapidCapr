{
    "patch": "public static double getTypedPercent(String js) {\n    double total = 0.0;\n    double typed = 0.0;\n    for (char c : js.toCharArray()) {\n        if (c == '{' || c == '[') {\n            total++;\n        } else if (c == '\"' && (total == 0.0 || js.charAt(js.indexOf(c, js.indexOf(c) + 1) + 1) == ':')) {\n            total++;\n            typed++;\n        } else if (c == ':') {\n            typed--;\n        }\n    }\n    return (typed / total) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..28a38074 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    double total = 0.0;\n+    double typed = 0.0;\n+    for (char c : js.toCharArray()) {\n+        if (c == '{' || c == '[') {\n+            total++;\n+        } else if (c == '\"' && (total == 0.0 || js.charAt(js.indexOf(c, js.indexOf(c) + 1) + 1) == ':')) {\n+            total++;\n+            typed++;\n+        } else if (c == ':') {\n+            typed--;\n+        }\n+    }\n+    return (typed / total) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}