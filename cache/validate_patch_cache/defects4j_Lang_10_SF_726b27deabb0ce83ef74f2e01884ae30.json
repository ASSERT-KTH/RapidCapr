{
    "patch": "private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n    boolean wasWhite = false;\n    regex.ensureCapacity(value.length() * 2);\n    boolean lastCharEscape = false;\n    for (int i = 0; i < value.length(); ++i) {\n        char c = value.charAt(i);\n        if (c == '\\\\' && !lastCharEscape) {\n            lastCharEscape = true;\n            regex.append(c);\n            continue;\n        }\n        lastCharEscape = false;\n        switch (c) {\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n                regex.append('\\\\');\n            }\n            regex.append(c);\n        }\n        return regex;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..d4913560 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,27 +300,19 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n+private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n+    boolean wasWhite = false;\n+    regex.ensureCapacity(value.length() * 2);\n+    boolean lastCharEscape = false;\n+    for (int i = 0; i < value.length(); ++i) {\n+        char c = value.charAt(i);\n+        if (c == '\\\\' && !lastCharEscape) {\n+            lastCharEscape = true;\n+            regex.append(c);\n+            continue;\n+        }\n+        lastCharEscape = false;\n+        switch (c) {\n             case '?':\n             case '[':\n             case ']':\n@@ -328,7 +320,6 @@ public class FastDateParser implements DateParser, Serializable {\n             case ')':\n             case '{':\n             case '}':\n-            case '\\\\':\n             case '|':\n             case '*':\n             case '+':",
    "result_reason": "java.text.ParseException: Unparseable date: \"'20030210A'B153320989'\" does not match ''(\\p{IsNd}{4}+)(\\p{IsNd}{2}+)(\\p{IsNd}++)A''B(\\p{IsNd}{2}+)(\\p{IsNd}{2}+)(\\p{IsNd}{2}+)(\\p{IsNd}++)''",
    "test_result": "FAIL"
}