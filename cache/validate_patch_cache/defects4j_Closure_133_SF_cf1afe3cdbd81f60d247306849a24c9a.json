{
    "patch": "private String getRemainingJSDocLine() {\n  String result = null;\n  try {\n    result = stream.getRemainingJSDocLine().trim();\n  } catch (NullPointerException e) {\n    // The stream.getRemainingJSDocLine() can return null\n    return null;\n  }\n  if (result.isEmpty()) {\n    result = null;\n  } else if (result.charAt(0) == '*' && result.length() > 1) {\n    result = result.substring(1).trim();\n  }\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..cc9de586 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,21 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+private String getRemainingJSDocLine() {\n+  String result = null;\n+  try {\n+    result = stream.getRemainingJSDocLine().trim();\n+  } catch (NullPointerException e) {\n+    // The stream.getRemainingJSDocLine() can return null\n+    return null;\n+  }\n+  if (result.isEmpty()) {\n+    result = null;\n+  } else if (result.charAt(0) == '*' && result.length() > 1) {\n+    result = result.substring(1).trim();\n   }\n+  return result;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}