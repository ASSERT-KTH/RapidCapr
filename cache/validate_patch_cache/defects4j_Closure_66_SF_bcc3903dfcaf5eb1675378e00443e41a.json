{
    "patch": "public static double getTypedPercent(String json) {\n    int total = 0;\n    int typed = 0;\n    try {\n        JSONObject obj = new JSONObject(json);\n        JSONArray stats = obj.getJSONArray(\"stats\");\n        for (int i = 0; i < stats.length(); i++) {\n            JSONObject s = stats.getJSONObject(i);\n            if (s.getString(\"name\").equals(\"total\")) {\n                total = s.getInt(\"value\");\n            } else if (s.getString(\"name\").equals(\"typed\")) {\n                typed = s.getInt(\"value\");\n            }\n        }\n        return ((double) typed / total) * 100.0;\n    } catch (Exception e) {\n        System.out.println(\"Error: \" + e);\n    }\n    return 0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..29905514 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,26 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    int total = 0;\n+    int typed = 0;\n+    try {\n+        JSONObject obj = new JSONObject(json);\n+        JSONArray stats = obj.getJSONArray(\"stats\");\n+        for (int i = 0; i < stats.length(); i++) {\n+            JSONObject s = stats.getJSONObject(i);\n+            if (s.getString(\"name\").equals(\"total\")) {\n+                total = s.getInt(\"value\");\n+            } else if (s.getString(\"name\").equals(\"typed\")) {\n+                typed = s.getInt(\"value\");\n+            }\n+        }\n+        return ((double) typed / total) * 100.0;\n+    } catch (Exception e) {\n+        System.out.println(\"Error: \" + e);\n+    }\n+    return 0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}