{
    "patch": "      if (name.globalSets == 1 && name.localSets == 0 &&\n          name.aliasingGets == 0 && name.getDeclaration() != null &&\n          !name.getDeclaration().isVar()) {\n        // {@code name} meets condition (b).\n        boolean newDefinition = false;\n        for (Ref ref : name.getRefs()) {\n          if (ref.type == Type.DECLARATION) {\n            newDefinition = true;\n            break;\n          }\n        }\n\n        if (newDefinition) {\n          continue;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..a436c6e1 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -170,6 +170,20 @@ class CollapseProperties implements CompilerPass {\n       }\n \n       if (name.globalSets == 1 && name.localSets == 0 &&\n+          name.aliasingGets == 0 && name.getDeclaration() != null &&\n+          !name.getDeclaration().isVar()) {\n+        // {@code name} meets condition (b).\n+        boolean newDefinition = false;\n+        for (Ref ref : name.getRefs()) {\n+          if (ref.type == Type.DECLARATION) {\n+            newDefinition = true;\n+            break;\n+          }\n+        }\n+\n+        if (newDefinition) {\n+          continue;\n+        }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}