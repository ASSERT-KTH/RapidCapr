{
    "patch": "if (NodeUtil.isFunctionDeclaration(n)) {\n    defineDeclaredFunction(n, parent);\n    return;\n}\n\nswitch (n.getType()) {\n    case Token.CATCH:\n        defineCatch(n, parent);\n        break;\n    case Token.VAR:\n        defineVar(n, parent);\n        break;\n    case Token.LP:\n        Node firstChild = parent.getFirstChild();\n        if (firstChild != null && firstChild.getType() == Token.FUNCTION) {\n            handleFunctionInputs(firstChild);\n        }\n        break;\n    default:\n        break;\n}\n\nattachLiteralTypes(n);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..7c41846f 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1448,21 +1448,29 @@ final class TypedScopeCreator implements ScopeCreator {\n         return;\n       }\n \n-      attachLiteralTypes(n);\n-      switch (n.getType()) {\n-        case Token.FUNCTION:\n-          if (parent.getType() == Token.NAME) {\n-            return;\n-          }\n-          defineDeclaredFunction(n, parent);\n-          break;\n-        case Token.CATCH:\n-          defineCatch(n, parent);\n-          break;\n-        case Token.VAR:\n-          defineVar(n, parent);\n-          break;\n-      }\n+if (NodeUtil.isFunctionDeclaration(n)) {\n+    defineDeclaredFunction(n, parent);\n+    return;\n+}\n+\n+switch (n.getType()) {\n+    case Token.CATCH:\n+        defineCatch(n, parent);\n+        break;\n+    case Token.VAR:\n+        defineVar(n, parent);\n+        break;\n+    case Token.LP:\n+        Node firstChild = parent.getFirstChild();\n+        if (firstChild != null && firstChild.getType() == Token.FUNCTION) {\n+            handleFunctionInputs(firstChild);\n+        }\n+        break;\n+    default:\n+        break;\n+}\n+\n+attachLiteralTypes(n);\n     }\n \n     /** Handle bleeding functions and function parameters. */",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}