{
    "patch": "    Node args = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n      Node lastArg = args.getLastChild();\n      Set<String> referredArgs = new HashSet<>();\n      for (Var var : referenced) {\n        if (var.isParam()) {\n          referredArgs.add(var.getName());\n        }\n      }\n\n      while (lastArg != null && !referredArgs.contains(lastArg.getString())) {\n        args.removeChild(lastArg);\n        lastArg = args.getLastChild();\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0775734b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,23 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node args = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+      Node lastArg = args.getLastChild();\n+      Set<String> referredArgs = new HashSet<>();\n+      for (Var var : referenced) {\n+        if (var.isParam()) {\n+          referredArgs.add(var.getName());\n+        }\n+      }\n+\n+      while (lastArg != null && !referredArgs.contains(lastArg.getString())) {\n+        args.removeChild(lastArg);\n+        lastArg = args.getLastChild();\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}