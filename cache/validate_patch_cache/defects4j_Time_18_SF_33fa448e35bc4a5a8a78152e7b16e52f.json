{
    "patch": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        // Check if the date is before Gregorian reform. 1582-10-04 is\n        // Julian, all later dates are Gregorian. This is valid only for\n        // the Gregorian chronology.\n        if (year == 1582 && monthOfYear == 10) {\n            if (dayOfMonth >= 5 && dayOfMonth <= 14) {\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n        }\n        boolean isJulianBeforeCutover = false;\n        boolean isGregorianAfterCutover = false;\n        if (year < 1582) {\n            // Date is Julian\n            isJulianBeforeCutover = true;\n        } else if (year > 1582) {\n            // Date is Gregorian\n            isGregorianAfterCutover = true;\n        } else {\n            if (monthOfYear < 10) {\n                // Date is before cutover, use Julian.\n                isJulianBeforeCutover = true;\n            } else if (monthOfYear > 10) {\n                // Date is after cutover, use Gregorian.\n                isGregorianAfterCutover = true;\n            } else {\n                if (dayOfMonth < 5) {\n                    // Date is before cutover, use Julian.\n                    isJulianBeforeCutover = true;\n                } else if (dayOfMonth > 14) {\n                    // Date is after cutover, use Gregorian.\n                    isGregorianAfterCutover = true;\n                } else {\n                    // Date is within cutover gap. Throw exception.\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n            }\n        }\n\n        long instant;\n        if (isJulianBeforeCutover) {\n            instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } else if (isGregorianAfterCutover) {\n            instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } else {\n            // Date is within valid range of both calendars.\n            long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            long gregorianInstant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n            if (julianInstant < iCutoverMillis && gregorianInstant >= iCutoverMillis) {\n                // Julian calendar was in effect, but the date is in the cutover gap. Throw exception.\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            } else if (julianInstant >= iCutoverMillis && gregorianInstant < iCutoverMillis) {\n                // Gregorian calendar was in effect, but the date is in the cutover gap. Throw exception.\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            } else if (julianInstant >= iCutoverMillis) {\n                instant = gregorianInstant;\n            } else {\n                instant = julianInstant;\n            }\n        }\n        return instant;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 29e559d4..8624f02c 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -347,31 +347,77 @@ public final class GJChronology extends AssembledChronology {\n         return instant;\n     }\n \n-    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n-                                  int hourOfDay, int minuteOfHour,\n-                                  int secondOfMinute, int millisOfSecond)\n+public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n+                              int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)\n         throws IllegalArgumentException\n     {\n         Chronology base;\n         if ((base = getBase()) != null) {\n-            return base.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n+                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+        }\n+\n+        // Check if the date is before Gregorian reform. 1582-10-04 is\n+        // Julian, all later dates are Gregorian. This is valid only for\n+        // the Gregorian chronology.\n+        if (year == 1582 && monthOfYear == 10) {\n+            if (dayOfMonth >= 5 && dayOfMonth <= 14) {\n+                throw new IllegalArgumentException(\"Specified date does not exist\");\n+            }\n+        }\n+        boolean isJulianBeforeCutover = false;\n+        boolean isGregorianAfterCutover = false;\n+        if (year < 1582) {\n+            // Date is Julian\n+            isJulianBeforeCutover = true;\n+        } else if (year > 1582) {\n+            // Date is Gregorian\n+            isGregorianAfterCutover = true;\n+        } else {\n+            if (monthOfYear < 10) {\n+                // Date is before cutover, use Julian.\n+                isJulianBeforeCutover = true;\n+            } else if (monthOfYear > 10) {\n+                // Date is after cutover, use Gregorian.\n+                isGregorianAfterCutover = true;\n+            } else {\n+                if (dayOfMonth < 5) {\n+                    // Date is before cutover, use Julian.\n+                    isJulianBeforeCutover = true;\n+                } else if (dayOfMonth > 14) {\n+                    // Date is after cutover, use Gregorian.\n+                    isGregorianAfterCutover = true;\n+                } else {\n+                    // Date is within cutover gap. Throw exception.\n+                    throw new IllegalArgumentException(\"Specified date does not exist\");\n+                }\n+            }\n         }\n \n-        // Assume date is Gregorian.\n         long instant;\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        if (instant < iCutoverMillis) {\n-            // Maybe it's Julian.\n-            instant = iJulianChronology.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                // Okay, it's in the illegal cutover gap.\n+        if (isJulianBeforeCutover) {\n+            instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n+                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+        } else if (isGregorianAfterCutover) {\n+            instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n+                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+        } else {\n+            // Date is within valid range of both calendars.\n+            long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n+                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+            long gregorianInstant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n+                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+\n+            if (julianInstant < iCutoverMillis && gregorianInstant >= iCutoverMillis) {\n+                // Julian calendar was in effect, but the date is in the cutover gap. Throw exception.\n                 throw new IllegalArgumentException(\"Specified date does not exist\");\n+            } else if (julianInstant >= iCutoverMillis && gregorianInstant < iCutoverMillis) {\n+                // Gregorian calendar was in effect, but the date is in the cutover gap. Throw exception.\n+                throw new IllegalArgumentException(\"Specified date does not exist\");\n+            } else if (julianInstant >= iCutoverMillis) {\n+                instant = gregorianInstant;\n+            } else {\n+                instant = julianInstant;\n             }\n         }\n         return instant;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}