{
    "patch": "public double[] distributionClone(double[] genotypeProbabilities, int M, int D, int N) {\n    double[] result = new double[N+1];\n    double[] currDistr = new double[M];\n    double[] nextDistr = new double[M];\n    double[] tmp;\n    currDistr[0] = 1.0;\n    for (int i = 0; i < D; i++) {\n        for (int j = 0; j < M; j++) {\n            for (int k = 0; k < M; k++) {\n                nextDistr[getDominant(j, k, M)] += currDistr[j] * genotypeProbabilities[k];\n            }\n        }\n        tmp = currDistr;\n        currDistr = nextDistr;\n        nextDistr = tmp;\n        Arrays.fill(nextDistr, 0.0);\n    }\n\n    for (int i = 0; i < M; i++) {\n        result[populationCount(i)] += currDistr[i];\n    }\n\n    for (int i = 1; i <= N; i++) {\n        result[i] /= Math.pow(M, D);\n    }\n\n    return result;\n}\n\nprivate int getDominant(int i, int j, int M) {\n    if (j > i)\n        return getDominant(j, i, M);\n    return (i*(i+1))/2+j;\n}\n\nprivate int populationCount(int i) {\n    int count = 0;\n    while (i > 0) {\n        count += i & 1;\n        i >>>= 1;\n    }\n    return count;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}