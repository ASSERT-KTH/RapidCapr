{
    "patch": "    public static int smallest_change(int[] arr) {\n        int result = 0;\n        for (int i = 0; i < arr.length; i += 1) {\n            if (i > 0 && arr[i] != arr[i-1]) {\n                result += 1;\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java b/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java\nindex 4ab2c82..6cd01ae 100644\n--- a/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java\n+++ b/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java\n@@ -10,10 +10,17 @@ package humaneval.buggy;\n // smallest_change([1, 2, 3, 2, 1]) == 0\n \n public class SMALLEST_CHANGE {\n+    public static int smallest_change(int[] arr) {\n+        int result = 0;\n     public static int smallest_change(int[] arr) {\n         int result = 0;\n         for (int i = 0; i < arr.length; i += 1) {\n-            if (arr[i] != arr[arr.length - i])\n+            if (i > 0 && arr[i] != arr[i-1]) {\n+                result += 1;\n+            }\n+        }\n+        return result;\n+    }\n                 result += 1;\n         }\n ",
    "result_reason": " /tmp/humaneval-SMALLEST_CHANGE/src/main/java/humaneval/buggy/SMALLEST_CHANGE.java:[15,5] illegal start of expression",
    "test_result": "ERROR"
}