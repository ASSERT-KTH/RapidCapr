{
    "patch": "public static String fixCode(String code, int line) {\n   String[] lines = code.split(\"\\n\");\n   String fixedCode = \"\";\n   int currentLine = 1;\n   for (String current : lines) {\n       if (currentLine == line) {\n           int index = current.lastIndexOf(\":\");\n           String start = current.substring(0, index);\n           String end = current.substring(index + 1);\n           fixedCode += start + \"?\" + end + \";\\n\";\n       } else {\n           fixedCode += current + \"\\n\";\n       }\n       currentLine += 1;\n   }\n   return fixedCode;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..2367c10c 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,23 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code, int line) {\n+   String[] lines = code.split(\"\\n\");\n+   String fixedCode = \"\";\n+   int currentLine = 1;\n+   for (String current : lines) {\n+       if (currentLine == line) {\n+           int index = current.lastIndexOf(\":\");\n+           String start = current.substring(0, index);\n+           String end = current.substring(index + 1);\n+           fixedCode += start + \"?\" + end + \";\\n\";\n+       } else {\n+           fixedCode += current + \"\\n\";\n+       }\n+       currentLine += 1;\n+   }\n+   return fixedCode;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}