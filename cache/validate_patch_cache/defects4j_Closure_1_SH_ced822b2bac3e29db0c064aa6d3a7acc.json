{
    "patch": "    // Remove unreferenced args from the beginning of the argument list.\n    while (argList.hasChildren()) {\n      Node firstArg = argList.getFirstChild();\n      Var var = fnScope.getVar(firstArg.getString());\n      if (!referenced.contains(var)) {\n        argList.removeChild(firstArg);\n        compiler.reportCodeChange();\n      } else {\n        break;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..9d6fcb31 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,17 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Remove unreferenced args from the beginning of the argument list.\n+    while (argList.hasChildren()) {\n+      Node firstArg = argList.getFirstChild();\n+      Var var = fnScope.getVar(firstArg.getString());\n+      if (!referenced.contains(var)) {\n+        argList.removeChild(firstArg);\n+        compiler.reportCodeChange();\n+      } else {\n+        break;\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}