{
    "patch": "        if (gcd == denominator) {\n            numerator = numerator / denominator;\n            denominator = 1;\n        } else if (gcd > 1) {\n            numerator = numerator / gcd;\n            denominator = denominator / gcd;\n        }\n        return this;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..5750448f 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,14 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        if (gcd == denominator) {\n+            numerator = numerator / denominator;\n+            denominator = 1;\n+        } else if (gcd > 1) {\n+            numerator = numerator / gcd;\n+            denominator = denominator / gcd;\n+        }\n+        return this;\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}