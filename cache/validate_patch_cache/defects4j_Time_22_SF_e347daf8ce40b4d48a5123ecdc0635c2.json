{
    "patch": "protected BasePeriod(long duration) {\n    PeriodType periodType = PeriodType.standard().withTicksRemoved().withMillisRemoved().withSecondsRemoved()\n            .withMonthsRemoved().withYearsRemoved();\n    Period period = new Duration(duration).toPeriod(periodType);\n    int weeks = (int) Math.floor(duration / (7 * 24 * 60 * 60 * 1000.0));\n    this(weeks, period.getDays(), period.getHours(), period.getMinutes(),\n            period.getSeconds(), period.getMillis(), periodType, null);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..14f79574 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,14 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    PeriodType periodType = PeriodType.standard().withTicksRemoved().withMillisRemoved().withSecondsRemoved()\n+            .withMonthsRemoved().withYearsRemoved();\n+    Period period = new Duration(duration).toPeriod(periodType);\n+    int weeks = (int) Math.floor(duration / (7 * 24 * 60 * 60 * 1000.0));\n+    this(weeks, period.getDays(), period.getHours(), period.getMinutes(),\n+            period.getSeconds(), period.getMillis(), periodType, null);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}