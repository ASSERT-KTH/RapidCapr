{
    "patch": "public JSType caseObjectType(ObjectType type) {\n  switch(value) {\n    case \"function\":\n      JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n      if (ctorType.isSubtype(type)) {\n        return resultEqualsValue ? ctorType : type;\n      }\n      break;\n    default:\n      if (matchesExpectation(\"object\")) {\n        return type;\n      }\n      break;\n  }\n  return null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..8373cc77 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -607,15 +607,22 @@ public abstract class ChainableReverseAbstractInterpreter\n     }\n \n     @Override\n-    public JSType caseObjectType(ObjectType type) {\n-      if (value.equals(\"function\")) {\n-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n-          // Objects are restricted to \"Function\", subtypes are left\n-          // Only filter out subtypes of \"function\"\n+public JSType caseObjectType(ObjectType type) {\n+  switch(value) {\n+    case \"function\":\n+      JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n+      if (ctorType.isSubtype(type)) {\n+        return resultEqualsValue ? ctorType : type;\n+      }\n+      break;\n+    default:\n+      if (matchesExpectation(\"object\")) {\n+        return type;\n       }\n-      return matchesExpectation(\"object\") ? type : null;\n-    }\n+      break;\n+  }\n+  return null;\n+}\n \n     @Override\n     public JSType caseStringType() {",
    "result_reason": "error: strings in switch are not supported in -source 1.6",
    "test_result": "ERROR"
}