{
    "patch": "        long nOd = numerator * (long)object.denominator - (long)object.numerator * denominator;\n        if(nOd < Integer.MIN_VALUE || nOd > Integer.MAX_VALUE) {\n            return (int)Math.signum(numerator * object.doubleValue() - denominator * doubleValue());\n        }\n        long dOn = denominator * (long)object.numerator - (long)numerator * object.denominator;\n        if(dOn < Integer.MIN_VALUE || dOn > Integer.MAX_VALUE) {\n            return (int)Math.signum(numerator * object.doubleValue() - denominator * doubleValue());\n        }\n        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..1b74526ce 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,15 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+        long nOd = numerator * (long)object.denominator - (long)object.numerator * denominator;\n+        if(nOd < Integer.MIN_VALUE || nOd > Integer.MAX_VALUE) {\n+            return (int)Math.signum(numerator * object.doubleValue() - denominator * doubleValue());\n+        }\n+        long dOn = denominator * (long)object.numerator - (long)numerator * object.denominator;\n+        if(dOn < Integer.MIN_VALUE || dOn > Integer.MAX_VALUE) {\n+            return (int)Math.signum(numerator * object.doubleValue() - denominator * doubleValue());\n+        }\n+        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}