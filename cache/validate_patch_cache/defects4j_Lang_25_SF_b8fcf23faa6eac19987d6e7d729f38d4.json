{
    "patch": "public static String escape(String s) {\n    StringBuffer sbuf = new StringBuffer();\n    boolean changed = false;\n    for(int i=0;i<s.length();i++) {\n        char ch = s.charAt(i);\n        String hex;\n        switch(ch) {\n            case ' ':\n                sbuf.append('+');\n                changed = true; // Fix for the compilation error\n                break;\n            case '!': case '*': case '\\'':\n            case '(': case ')': case ';':\n            case ':': case '@': case '&':\n            case '=': case '+': case '$':\n            case ',': case '/': case '?':\n            case '#': case '[': case ']':\n                hex = toHex(ch);\n                sbuf.append('%');\n                sbuf.append(hex);\n                changed = true;\n                break;\n            default:\n                sbuf.append(ch);\n                break;\n        }\n    }\n    return (changed ? sbuf.toString() : s);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..8809d502 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,35 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String s) {\n+    StringBuffer sbuf = new StringBuffer();\n+    boolean changed = false;\n+    for(int i=0;i<s.length();i++) {\n+        char ch = s.charAt(i);\n+        String hex;\n+        switch(ch) {\n+            case ' ':\n+                sbuf.append('+');\n+                changed = true; // Fix for the compilation error\n+                break;\n+            case '!': case '*': case '\\'':\n+            case '(': case ')': case ';':\n+            case ':': case '@': case '&':\n+            case '=': case '+': case '$':\n+            case ',': case '/': case '?':\n+            case '#': case '[': case ']':\n+                hex = toHex(ch);\n+                sbuf.append('%');\n+                sbuf.append(hex);\n+                changed = true;\n+                break;\n+            default:\n+                sbuf.append(ch);\n+                break;\n+        }\n+    }\n+    return (changed ? sbuf.toString() : s);\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}