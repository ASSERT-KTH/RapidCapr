{
    "patch": "            if (savedFields[i].iLeapDurationField != null) {\n                millis = savedFields[i].iLeapDurationField.addDuration(savedFields[i + savedFields[i].iLeapDurationFieldType).getField(savedFields[i + savedFields[i].iLeapDurationFieldIndex).get(millis), 1);\n            } else {\n                millis = savedFields[i].iField.add(millis, savedFields[i].iValue);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..7f017a05 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,10 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iLeapDurationField != null) {\n+                millis = savedFields[i].iLeapDurationField.addDuration(savedFields[i + savedFields[i].iLeapDurationFieldType).getField(savedFields[i + savedFields[i].iLeapDurationFieldIndex).get(millis), 1);\n+            } else {\n+                millis = savedFields[i].iField.add(millis, savedFields[i].iValue);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: ']' expected",
    "test_result": "ERROR"
}