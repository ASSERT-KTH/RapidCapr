{
    "patch": "public class DECODE_CYCLIC {\n    String decode_cyclic(String s) {\n        ArrayList<String> groups = new ArrayList<String>();\n        for (int i = 0; i < s.length(); i += 3) {\n            if (i + 3 <= s.length()) {\n                groups.add(s.substring(i, i + 3));\n            } else {\n                groups.add(s.substring(i));\n            }\n        }\n        String result = \"\";\n        for (String group : groups) {\n            result += group.substring(group.length() - 1) + group.substring(0, group.length() - 1);\n        }\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..d17fcaa 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -8,7 +8,23 @@ public class DECODE_CYCLIC {\n             String encode_cyclic(String s) {\n                 ArrayList<String> groups = new ArrayList<String>();\n \n-                for (int i = 0; i < s.length(); i += 3){\n+public class DECODE_CYCLIC {\n+    String decode_cyclic(String s) {\n+        ArrayList<String> groups = new ArrayList<String>();\n+        for (int i = 0; i < s.length(); i += 3) {\n+            if (i + 3 <= s.length()) {\n+                groups.add(s.substring(i, i + 3));\n+            } else {\n+                groups.add(s.substring(i));\n+            }\n+        }\n+        String result = \"\";\n+        for (String group : groups) {\n+            result += group.substring(group.length() - 1) + group.substring(0, group.length() - 1);\n+        }\n+        return result;\n+    }\n+}\n                     groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n                 }\n                 int remain = s.length() % 3;",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[11,1] illegal start of expression",
    "test_result": "ERROR"
}