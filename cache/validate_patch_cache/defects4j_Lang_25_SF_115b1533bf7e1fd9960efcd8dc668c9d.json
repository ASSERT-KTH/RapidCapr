{
    "patch": "public static String unescapeISO8859_1(String s) {\n    StringBuffer sb = new StringBuffer(s.length());\n    int i = 0;\n    while (i < s.length()) {\n        char c = s.charAt(i);\n        if (c == '\\\\') {\n            if (i < s.length() - 1 && s.charAt(i+1) == 'x') {\n                try {\n                    sb.append((char) Integer.parseInt(s.substring(i + 2, i + 4), 16));\n                    i += 4;\n                } catch (NumberFormatException e) {\n                    sb.append(c);\n                    i++;\n                }\n            } else {\n                sb.append(c);\n                i++;\n            }\n        } else {\n            sb.append(c);\n            i++;\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..3315c9bd 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,31 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescapeISO8859_1(String s) {\n+    StringBuffer sb = new StringBuffer(s.length());\n+    int i = 0;\n+    while (i < s.length()) {\n+        char c = s.charAt(i);\n+        if (c == '\\\\') {\n+            if (i < s.length() - 1 && s.charAt(i+1) == 'x') {\n+                try {\n+                    sb.append((char) Integer.parseInt(s.substring(i + 2, i + 4), 16));\n+                    i += 4;\n+                } catch (NumberFormatException e) {\n+                    sb.append(c);\n+                    i++;\n+                }\n+            } else {\n+                sb.append(c);\n+                i++;\n+            }\n+        } else {\n+            sb.append(c);\n+            i++;\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}