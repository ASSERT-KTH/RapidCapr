{
    "patch": "                pos += consumed;\n                // contract with translators is that they have to understand codepoints \n                // and they just took care of a surrogate pair\n                if (pos < len && Character.isHighSurrogate(input.charAt(pos))) {\n                    int codePoint = Character.toCodePoint(input.charAt(pos - 1), input.charAt(pos));\n                    pos++;\n                    out.write(codePoint);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..83d204e0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,14 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                pos += consumed;\n+                // contract with translators is that they have to understand codepoints \n+                // and they just took care of a surrogate pair\n+                if (pos < len && Character.isHighSurrogate(input.charAt(pos))) {\n+                    int codePoint = Character.toCodePoint(input.charAt(pos - 1), input.charAt(pos));\n+                    pos++;\n+                    out.write(codePoint);\n+                }\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: unescape(String) failed: expected '\\ntest\\b' actual '\\nst\\b' expected:<",
    "test_result": "FAIL"
}