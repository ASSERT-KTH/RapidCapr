{
    "patch": "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<?> typeToMock = typeToMock(settings);\n        Class<?>[] extraInterfaces = extraInterfaces(settings);\n        CachedMockBytecodeGenerator.CacheKey cacheKey = new CachedMockBytecodeGenerator.CacheKey(typeToMock, extraInterfaces, settings.getSpiedInstance() != null);\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(cacheKey, new CachedMockBytecodeGenerator.MockPowerMockMaker(typeToMock, extraInterfaces, settings.isSerializableEnabled())); \n        T mockInstance = null;\n        try {\n            mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            ((MockMethodInterceptor) ((MockAccess) mockInstance).getMockitoInterceptor()).setInstance(mockInstance);\n\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            String cause = \"\";\n            if (e.getCause() != null) {\n                cause = Joiner.on(\"\\n\").join(\n                        \"\",\n                        \"Cause:\",\n                        Exceptions.appendStackTrace(e.getCause(), 0)\n                );\n            }\n            throw new MockitoException(join(\n                    \"Mockito cannot mock this class: \" + typeToMock + \".\",\n                    \"Can not instantiate proxy of class: \" + mockedProxyType.getSimpleName() + \".\",\n                    \"Please note that mocking primitive types is not supported, if you're trying to mock a primitive type then replace it with it's wrapper class.\",\n                    \"If you are still not sure why you're getting this error message then please report it to the mockito mailing list.\",\n                    cause,\n                    \"\"\n            ), e);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockInstance),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\nindex 9dc44e663..3ecef4585 100644\n--- a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n+++ b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n@@ -25,17 +25,35 @@ public class ByteBuddyMockMaker implements MockMaker {\n         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n             throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n         }\n-        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n-                settings.getTypeToMock(),\n-                settings.getExtraInterfaces()\n-        );\n+        Class<?> typeToMock = typeToMock(settings);\n+        Class<?>[] extraInterfaces = extraInterfaces(settings);\n+        CachedMockBytecodeGenerator.CacheKey cacheKey = new CachedMockBytecodeGenerator.CacheKey(typeToMock, extraInterfaces, settings.getSpiedInstance() != null);\n+        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(cacheKey, new CachedMockBytecodeGenerator.MockPowerMockMaker(typeToMock, extraInterfaces, settings.isSerializableEnabled())); \n         T mockInstance = null;\n         try {\n             mockInstance = classInstantiator.instantiate(mockedProxyType);\n             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n+            ((MockMethodInterceptor) ((MockAccess) mockInstance).getMockitoInterceptor()).setInstance(mockInstance);\n \n             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n+        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n+            String cause = \"\";\n+            if (e.getCause() != null) {\n+                cause = Joiner.on(\"\\n\").join(\n+                        \"\",\n+                        \"Cause:\",\n+                        Exceptions.appendStackTrace(e.getCause(), 0)\n+                );\n+            }\n+            throw new MockitoException(join(\n+                    \"Mockito cannot mock this class: \" + typeToMock + \".\",\n+                    \"Can not instantiate proxy of class: \" + mockedProxyType.getSimpleName() + \".\",\n+                    \"Please note that mocking primitive types is not supported, if you're trying to mock a primitive type then replace it with it's wrapper class.\",\n+                    \"If you are still not sure why you're getting this error message then please report it to the mockito mailing list.\",\n+                    cause,\n+                    \"\"\n+            ), e);\n         } catch (ClassCastException cce) {\n             throw new MockitoException(join(\n                     \"ClassCastException occurred while creating the mockito mock :\",\n@@ -47,8 +65,6 @@ public class ByteBuddyMockMaker implements MockMaker {\n                     \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                     \"\"\n             ),cce);\n-        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n-            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}