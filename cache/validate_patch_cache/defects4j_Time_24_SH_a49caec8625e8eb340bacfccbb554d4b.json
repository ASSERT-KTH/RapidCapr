{
    "patch": "        } catch (ArithmeticException e) {\n            if (text != null) {\n                e = new IllegalFieldValueException(\n                        \"Cannot parse \\\"\" + text + \"\\\": Value \" + e.getMessage() +\n                        \" exceeds range of valid values: \" + savedFields[i].iField.getName(),\n                        e);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..404ede8d 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (ArithmeticException e) {\n+            if (text != null) {\n+                e = new IllegalFieldValueException(\n+                        \"Cannot parse \\\"\" + text + \"\\\": Value \" + e.getMessage() +\n+                        \" exceeds range of valid values: \" + savedFields[i].iField.getName(),\n+                        e);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}