{
    "patch": "import java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\n\npublic class URLDecoderBug {\n\n    public static String decode(String encodedStr, String charset) throws UnsupportedEncodingException {\n        int i = 0;\n        byte[] bytes = new byte[encodedStr.length() / 3];\n        int pos = 0;\n        while (i < encodedStr.length()) {\n            char c = encodedStr.charAt(i);\n            if (c == '+') {\n                bytes[pos++] = 32;\n            } else if (c == '%') {\n                if (i + 2 >= encodedStr.length()) {\n                    throw new IllegalArgumentException(\"Invalid encoded string: \" + encodedStr);\n                }\n                bytes[pos++] = (byte) Integer.parseInt(encodedStr.substring(i + 1, i + 3), 16);\n                i += 2;\n            } else {\n                bytes[pos++] = (byte) c;\n            }\n            i++;\n        }\n        return new String(bytes, 0, pos, charset);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..123b1c86 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,33 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+\n+public class URLDecoderBug {\n+\n+    public static String decode(String encodedStr, String charset) throws UnsupportedEncodingException {\n+        int i = 0;\n+        byte[] bytes = new byte[encodedStr.length() / 3];\n+        int pos = 0;\n+        while (i < encodedStr.length()) {\n+            char c = encodedStr.charAt(i);\n+            if (c == '+') {\n+                bytes[pos++] = 32;\n+            } else if (c == '%') {\n+                if (i + 2 >= encodedStr.length()) {\n+                    throw new IllegalArgumentException(\"Invalid encoded string: \" + encodedStr);\n+                }\n+                bytes[pos++] = (byte) Integer.parseInt(encodedStr.substring(i + 1, i + 3), 16);\n+                i += 2;\n+            } else {\n+                bytes[pos++] = (byte) c;\n+            }\n+            i++;\n+        }\n+        return new String(bytes, 0, pos, charset);\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}