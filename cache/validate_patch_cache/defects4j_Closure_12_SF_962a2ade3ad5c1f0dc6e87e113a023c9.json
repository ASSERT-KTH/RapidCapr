{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode == null || cfgNode.isScript()) {\n        return false;\n    }\n    if (cfgNode.isTry()) {\n        if (cfgNode.getFirstChild() != null && cfgNode.getFirstChild().isCatch()) {\n            return true;\n        }\n    }\n    return hasExceptionHandler(cfgNode.getParent());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..1240efb5 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,17 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n-  }\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode == null || cfgNode.isScript()) {\n+        return false;\n+    }\n+    if (cfgNode.isTry()) {\n+        if (cfgNode.getFirstChild() != null && cfgNode.getFirstChild().isCatch()) {\n+            return true;\n+        }\n+    }\n+    return hasExceptionHandler(cfgNode.getParent());\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}