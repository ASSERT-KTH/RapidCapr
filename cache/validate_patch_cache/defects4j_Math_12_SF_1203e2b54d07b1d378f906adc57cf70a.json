{
    "patch": "import java.util.Arrays;\nimport java.util.Random;\n\npublic class DistributionUtils {\n\n    public static double[] clone(double[] array) {\n        if (array == null) {\n            return null;\n        }\n        double[] newArray = new double[array.length];\n        System.arraycopy(array, 0, newArray, 0, array.length);\n        return newArray;\n    }\n\n    public static double[] normalize(double[] array) {\n        if (array == null) {\n            return null;\n        }\n        double sum = 0;\n        for (double d : array) {\n            sum += d;\n        }\n        if (sum == 0) {\n            return new double[array.length];\n        }\n        double[] result = new double[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i] / sum;\n        }\n        return result;\n    }\n\n    public static double[] random(int size) {\n        if (size <= 0) {\n            return null;\n        }\n        double[] result = new double[size];\n        Random random = new Random();\n        double sum = 0;\n        for (int i = 0; i < size; i++) {\n            double value = random.nextDouble();\n            result[i] = value;\n            sum += value;\n        }\n        for (int i = 0; i < size; i++) {\n            result[i] /= sum;\n        }\n        return result;\n    }\n  \n    public static double[] add(double[] d1, double[] d2) {\n        if (d1 == null || d2 == null || d1.length != d2.length) {\n            return null;\n        }\n        double[] result = new double[d1.length]; \n        for (int i = 0; i < result.length; i++) {\n            result[i] = d1[i] + d2[i];\n        }\n        return result;\n    }\n  \n    public static double[] subtract(double[] d1, double[] d2) {\n        if (d1 == null || d2 == null || d1.length != d2.length) {\n            return null;\n        }\n        double[] result = new double[d1.length]; \n        for (int i = 0; i < result.length; i++) {\n            result[i] = d1[i] - d2[i];\n        }\n        return result;\n    }\n  \n    public static double dotProduct(double[] d1, double[] d2) {\n        if (d1 == null || d2 == null || d1.length != d2.length) {\n            return -1;\n        }\n        double result = 0; \n        for (int i = 0; i < d1.length; i++) {\n            result += d1[i] * d2[i];\n        }\n        return result;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}