{
    "patch": "public int getTypedCount(JSONObject event) {\n    JSONArray dialogs = event.getJSONArray(\"dialogs\");\n    int count = 0;\n    for (int i = 0; i < dialogs.length(); i++) {\n        JSONObject dialog = dialogs.getJSONObject(i);\n        if (dialog.has(\"output\") && dialog.getJSONObject(\"output\").has(\"text\")) {\n            JSONArray textArr = dialog.getJSONObject(\"output\").getJSONArray(\"text\");\n            for (int j = 0; j < textArr.length(); j++) {\n                String text = textArr.getString(j);\n                if (!text.equals(\"\") && !text.contains(\"Please type\")) {\n                    count++;\n                    break;\n                }\n            }\n        }\n    }\n    return count;\n}\n\npublic double getTypedPercent(JSONObject event) {\n    int totalCount = event.getJSONArray(\"dialogs\").length();\n    if (totalCount == 0) {\n        return 0.0;\n    }\n    int typedCount = getTypedCount(event);\n    double percent = ((double) typedCount / (double) totalCount) * 100;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..bfb23356 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,34 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public int getTypedCount(JSONObject event) {\n+    JSONArray dialogs = event.getJSONArray(\"dialogs\");\n+    int count = 0;\n+    for (int i = 0; i < dialogs.length(); i++) {\n+        JSONObject dialog = dialogs.getJSONObject(i);\n+        if (dialog.has(\"output\") && dialog.getJSONObject(\"output\").has(\"text\")) {\n+            JSONArray textArr = dialog.getJSONObject(\"output\").getJSONArray(\"text\");\n+            for (int j = 0; j < textArr.length(); j++) {\n+                String text = textArr.getString(j);\n+                if (!text.equals(\"\") && !text.contains(\"Please type\")) {\n+                    count++;\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+    return count;\n+}\n+\n+public double getTypedPercent(JSONObject event) {\n+    int totalCount = event.getJSONArray(\"dialogs\").length();\n+    if (totalCount == 0) {\n+        return 0.0;\n+    }\n+    int typedCount = getTypedCount(event);\n+    double percent = ((double) typedCount / (double) totalCount) * 100;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}