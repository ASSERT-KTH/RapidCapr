{
    "patch": "            if (millis < iMillis) {\n                for (int i = 0; i < count; i++) {\n                    try {\n                        millis = savedFields[i].set(millis, resetFields);\n                    } catch (IllegalFieldValueException e) {\n                        if (text != null) {\n                            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                        }\n                        throw e;\n                    }\n                }\n            } else {\n                for (int i = count - 1; i >= 0; i--) {\n                    try {\n                        millis = savedFields[i].set(millis, resetFields);\n                    } catch (IllegalFieldValueException e) {\n                        if (text != null) {\n                            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                        }\n                        throw e;\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fdf276d0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,29 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (millis < iMillis) {\n+                for (int i = 0; i < count; i++) {\n+                    try {\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    } catch (IllegalFieldValueException e) {\n+                        if (text != null) {\n+                            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                        }\n+                        throw e;\n+                    }\n+                }\n+            } else {\n+                for (int i = count - 1; i >= 0; i--) {\n+                    try {\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    } catch (IllegalFieldValueException e) {\n+                        if (text != null) {\n+                            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                        }\n+                        throw e;\n+                    }\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-06-30T00:00:00.000+01:00> but was:<2010-01-01T00:00:00.000Z>",
    "test_result": "FAIL"
}