{
    "patch": "    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        final double eps = 1e-10;\n        final double[] lb = {eps, eps, eps};\n        return curveFitter.withStartPoint(guess)\n                          .withParameterLowerBound(0, eps)\n                          .withParameterLowerBound(1, eps)\n                          .withParameterLowerBound(2, eps)\n                          .fit(new Gaussian.Parametric(), getObservations());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..3cb1f33e3 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,13 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final double eps = 1e-10;\n+        final double[] lb = {eps, eps, eps};\n+        return curveFitter.withStartPoint(guess)\n+                          .withParameterLowerBound(0, eps)\n+                          .withParameterLowerBound(1, eps)\n+                          .withParameterLowerBound(2, eps)\n+                          .fit(new Gaussian.Parametric(), getObservations());\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}