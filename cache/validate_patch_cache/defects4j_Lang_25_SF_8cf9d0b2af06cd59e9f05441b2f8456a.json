{
    "patch": "public static String decode(String encoded) {\n    StringBuilder result = new StringBuilder();\n    int index = 0;\n    while (index < encoded.length()) {\n        char current = encoded.charAt(index++);\n        if (current == ESCAPE_CHAR) {\n            int charCode = Integer.parseInt(encoded.substring(index, index + 2), RADIX);\n            result.append((char) charCode);\n            index += 2;\n        } else {\n            result.append(current);\n        }\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..8882e7ee 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,21 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String encoded) {\n+    StringBuilder result = new StringBuilder();\n+    int index = 0;\n+    while (index < encoded.length()) {\n+        char current = encoded.charAt(index++);\n+        if (current == ESCAPE_CHAR) {\n+            int charCode = Integer.parseInt(encoded.substring(index, index + 2), RADIX);\n+            result.append((char) charCode);\n+            index += 2;\n+        } else {\n+            result.append(current);\n+        }\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}