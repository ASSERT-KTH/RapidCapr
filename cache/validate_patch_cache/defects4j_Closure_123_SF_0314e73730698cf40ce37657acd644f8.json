{
    "patch": "public static String fixCode(String code) {\n    String oldCondOp = \"?\";\n    String newCondOp = \"!==null&&\";\n    String oldInOperator = \"in\";\n    String newInOperator = \"not in\";\n    String[] lines = code.split(\"\\n\");\n    String result = \"\";\n    for (String line : lines) {\n        if (line.contains(oldCondOp)) {\n            line = line.replace(oldCondOp, newCondOp);\n        }\n        if (line.contains(oldInOperator)) {\n            line = line.replace(oldInOperator, newInOperator);\n            int index = line.indexOf(newInOperator) + 2;\n            if (line.charAt(index) != '\\'' && line.charAt(index) != '\\\"') {\n                line = line.substring(0, index) + \"'\" + line.substring(index) + \"'\";\n            }\n        }\n        result += line + \"\\n\";\n    }\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..aa1c8ac4 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,28 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String oldCondOp = \"?\";\n+    String newCondOp = \"!==null&&\";\n+    String oldInOperator = \"in\";\n+    String newInOperator = \"not in\";\n+    String[] lines = code.split(\"\\n\");\n+    String result = \"\";\n+    for (String line : lines) {\n+        if (line.contains(oldCondOp)) {\n+            line = line.replace(oldCondOp, newCondOp);\n+        }\n+        if (line.contains(oldInOperator)) {\n+            line = line.replace(oldInOperator, newInOperator);\n+            int index = line.indexOf(newInOperator) + 2;\n+            if (line.charAt(index) != '\\'' && line.charAt(index) != '\\\"') {\n+                line = line.substring(0, index) + \"'\" + line.substring(index) + \"'\";\n+            }\n+        }\n+        result += line + \"\\n\";\n+    }\n+    return result.trim();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}