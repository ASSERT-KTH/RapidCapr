{
    "patch": "success = true;\nfor (int i = 0; i < encoded.length(); i++) {\n    char c = encoded.charAt(i);\n    if (c == '_') {\n        // translated escape sequence\n        out.append(' ');\n    } else if (c == '~') {\n        if (encoded.charAt(i + 1) != '{') {\n            throw new IllegalArgumentException(\"Invalid sequence '~' not followed by '{'\");\n        }\n        int end = encoded.indexOf('}', i + 1);\n        if ((end == -1) || ((end - i) <= 0)) {\n            throw new IllegalArgumentException(\"Incomplete escape sequence\");\n        }\n        String esc = encoded.substring(i + 2, end);\n        try {\n            int num = Integer.parseInt(esc);\n            out.append((char) num);\n        } catch (NumberFormatException e) {\n            throw new IllegalArgumentException(\"Illegal character reference: &#\" + esc + \";\");\n        }\n        i = end;\n    } else if (c == '&') {\n        if (!encoded.startsWith(\"&amp;\", i)) {\n            throw new IllegalArgumentException(\"Invalid sequence '&'\");\n        }\n        out.append('&');\n        i += 4;\n    } else if ((c == '<') || (c == '>')) {\n        out.append(c);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}