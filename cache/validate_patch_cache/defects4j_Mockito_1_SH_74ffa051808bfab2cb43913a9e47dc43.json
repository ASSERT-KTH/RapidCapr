{
    "patch": "public void captureArgumentsFrom(Invocation invocation) {\n    Object[] rawArguments = invocation.getRawArguments();\n    for (int i = 0; i < rawArguments.length; i++) {\n        Object rawArgument = rawArguments[i];\n        for (int j = 0; j < matchers.size(); j++) {\n            Matcher matcher = matchers.get(j);\n            if (matcher instanceof CapturesArguments) {\n                if (j == i || (matcher instanceof VarargMatcher && j <= i)) {\n                    ((CapturesArguments) matcher).captureFrom(rawArgument);\n                }\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex 7b877b1e2..5a2368542 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -120,7 +120,20 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF\n     public void captureArgumentsFrom(Invocation invocation) {\n         if (invocation.getMethod().isVarArgs()) {\n             int indexOfVararg = invocation.getRawArguments().length - 1;\n-            throw new UnsupportedOperationException();\n+public void captureArgumentsFrom(Invocation invocation) {\n+    Object[] rawArguments = invocation.getRawArguments();\n+    for (int i = 0; i < rawArguments.length; i++) {\n+        Object rawArgument = rawArguments[i];\n+        for (int j = 0; j < matchers.size(); j++) {\n+            Matcher matcher = matchers.get(j);\n+            if (matcher instanceof CapturesArguments) {\n+                if (j == i || (matcher instanceof VarargMatcher && j <= i)) {\n+                    ((CapturesArguments) matcher).captureFrom(rawArgument);\n+                }\n+            }\n+        }\n+    }\n+}\n \n         } else {\n             for (int position = 0; position < matchers.size(); position++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}