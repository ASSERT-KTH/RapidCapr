{
    "patch": "public double getTypedPercent(JSONObject js) {\n    int count = 0;\n    int total = js.length();\n    for (String key : JSONObject.getNames(js)) {\n        try {\n            Double.parseDouble(js.getString(key));\n            count++;\n        } catch (Exception e) {\n            // ignore non-numerical values\n        }\n    }\n    return (count / (double) total) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..6b01f586 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JSONObject js) {\n+    int count = 0;\n+    int total = js.length();\n+    for (String key : JSONObject.getNames(js)) {\n+        try {\n+            Double.parseDouble(js.getString(key));\n+            count++;\n+        } catch (Exception e) {\n+            // ignore non-numerical values\n+        }\n+    }\n+    return (count / (double) total) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}