{
    "patch": "public double regularizedGamma(double a, double x) {\n    double gammaValue = new Gamma().gamma(a);\n    ContinuedFraction fraction = new ContinuedFraction() {\n        @Override\n        protected double getB(int n, double x) {\n            if (n % 2 == 0) {\n                int m = n / 2;\n                return m * (a - m) * x / ((m - 1) + 2 + a + x);\n            } else {\n                int m = (n - 1) / 2;\n                return -(a + m) * (a + x + m) * x / ((m + 1) + 2 + a + x);\n            }\n        }\n\n        @Override\n        protected double getA(int n, double x) {\n            return 1;\n        }\n    };\n    double regularizedGammaValue =\n            Math.exp(-x + (a * Math.log(x)) - Math.log(fraction.evaluate(x) / a) - gammaValue);\n    return regularizedGammaValue;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..a894270bb 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public double regularizedGamma(double a, double x) {\n+    double gammaValue = new Gamma().gamma(a);\n+    ContinuedFraction fraction = new ContinuedFraction() {\n+        @Override\n+        protected double getB(int n, double x) {\n+            if (n % 2 == 0) {\n+                int m = n / 2;\n+                return m * (a - m) * x / ((m - 1) + 2 + a + x);\n+            } else {\n+                int m = (n - 1) / 2;\n+                return -(a + m) * (a + x + m) * x / ((m + 1) + 2 + a + x);\n+            }\n+        }\n+\n+        @Override\n+        protected double getA(int n, double x) {\n+            return 1;\n+        }\n+    };\n+    double regularizedGammaValue =\n+            Math.exp(-x + (a * Math.log(x)) - Math.log(fraction.evaluate(x) / a) - gammaValue);\n+    return regularizedGammaValue;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}