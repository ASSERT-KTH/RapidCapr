{
    "patch": "        TimeZone originalTimeZone = null;\n        if (mTimeZoneForced) {\n            originalTimeZone = calendar.getTimeZone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        applyRules(calendar, buf);\n        if (mTimeZoneForced) {\n            calendar.setTimeZone(originalTimeZone);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..9fb9e385 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,15 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        TimeZone originalTimeZone = null;\n+        if (mTimeZoneForced) {\n+            originalTimeZone = calendar.getTimeZone();\n+            calendar.setTimeZone(mTimeZone);\n+        }\n+        applyRules(calendar, buf);\n+        if (mTimeZoneForced) {\n+            calendar.setTimeZone(originalTimeZone);\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08:42:16.000Z2009-10-16T08]:42:16.000Z>",
    "test_result": "FAIL"
}