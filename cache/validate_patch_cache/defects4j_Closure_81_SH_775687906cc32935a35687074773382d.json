{
    "patch": "if (name == null) {\n    name = new Name(\"\");\n    isUnnamedFunction = true;\n  } else if (name instanceof Symbol && ((Symbol) name).getDeclType() == Token.GETPROP) {\n    // Arrow functions with complex names (`this.method1 = () => {}`) are stored as\n    // dot expressions, rather than as a function name. In this case we convert to a\n    // Name so we can handle them in the same way as other functions.\n    name = Node.newString(((Symbol) name).getQualifiedName());\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..e1cc0035 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,15 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+if (name == null) {\n+    name = new Name(\"\");\n+    isUnnamedFunction = true;\n+  } else if (name instanceof Symbol && ((Symbol) name).getDeclType() == Token.GETPROP) {\n+    // Arrow functions with complex names (`this.method1 = () => {}`) are stored as\n+    // dot expressions, rather than as a function name. In this case we convert to a\n+    // Name so we can handle them in the same way as other functions.\n+    name = Node.newString(((Symbol) name).getQualifiedName());\n+  }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: no suitable constructor found for Name(String)",
    "test_result": "ERROR"
}