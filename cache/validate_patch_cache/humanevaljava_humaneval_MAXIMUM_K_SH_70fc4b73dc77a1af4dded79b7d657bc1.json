{
    "patch": "        int kMax = Math.min(k, arr.size());\n        int startIndex = arr.size() - kMax;\n        ArrayList<Integer> result = new ArrayList<>();\n        if (kMax == 0) {\n             return result;\n        }\n        for (int i = arr.size() - 1; i >= startIndex; i--) {\n            result.add(arr.get(i));\n        }\n        return result;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..66d4152 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -32,7 +32,16 @@ public class MAXIMUM_K {\n     public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n         Collections.sort(arr);\n         ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n+        int kMax = Math.min(k, arr.size());\n+        int startIndex = arr.size() - kMax;\n+        ArrayList<Integer> result = new ArrayList<>();\n+        if (kMax == 0) {\n+             return result;\n+        }\n+        for (int i = arr.size() - 1; i >= startIndex; i--) {\n+            result.add(arr.get(i));\n+        }\n+        return result;\n             result.add(arr.get(i));\n         }\n         return result;",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[47,9] illegal start of type",
    "test_result": "ERROR"
}