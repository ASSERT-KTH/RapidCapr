{
    "patch": "import java.io.UnsupportedEncodingException;\n\npublic class StringUtils {\n    \n    public static String escapeISO8859_1(String input) {\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < input.length(); i++) {\n            char c = input.charAt(i);\n            if ((c >= 0 && c <= 31) || c == 127 || (c >= 128 && c <= 159)) { // control characters and non-printable characters\n                result.append(\"\\\\u\");\n                result.append(String.format(\"%04X\", (int) c));\n            } else {\n                result.append(c);\n            }\n        }\n        return result.toString();\n    }\n\n    public static String unescapeISO8859_1(String input) throws UnsupportedEncodingException {\n        StringBuilder result = new StringBuilder();\n        int i = 0;\n        while (i < input.length()) {\n            char c = input.charAt(i);\n            if (c == '\\\\') {\n                if (i < input.length() - 5) {\n                    if (input.charAt(i + 1) == 'u') {\n                        // Unescape Unicode character\n                        int codePoint = Integer.parseInt(input.substring(i + 2, i + 6), 16);\n                        result.append((char) codePoint);\n                        i += 6;\n                        continue;\n                    }\n                }\n            }\n            result.append(c);\n            i++;\n        }\n        return result.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d2af1c31 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,46 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.UnsupportedEncodingException;\n+\n+public class StringUtils {\n+    \n+    public static String escapeISO8859_1(String input) {\n+        StringBuilder result = new StringBuilder();\n+        for (int i = 0; i < input.length(); i++) {\n+            char c = input.charAt(i);\n+            if ((c >= 0 && c <= 31) || c == 127 || (c >= 128 && c <= 159)) { // control characters and non-printable characters\n+                result.append(\"\\\\u\");\n+                result.append(String.format(\"%04X\", (int) c));\n+            } else {\n+                result.append(c);\n+            }\n+        }\n+        return result.toString();\n+    }\n+\n+    public static String unescapeISO8859_1(String input) throws UnsupportedEncodingException {\n+        StringBuilder result = new StringBuilder();\n+        int i = 0;\n+        while (i < input.length()) {\n+            char c = input.charAt(i);\n+            if (c == '\\\\') {\n+                if (i < input.length() - 5) {\n+                    if (input.charAt(i + 1) == 'u') {\n+                        // Unescape Unicode character\n+                        int codePoint = Integer.parseInt(input.substring(i + 2, i + 6), 16);\n+                        result.append((char) codePoint);\n+                        i += 6;\n+                        continue;\n+                    }\n+                }\n+            }\n+            result.append(c);\n+            i++;\n+        }\n+        return result.toString();\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}