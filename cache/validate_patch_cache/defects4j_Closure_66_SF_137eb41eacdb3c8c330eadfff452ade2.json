{
    "patch": "public static double getTypedPercent(String js) {\n    int numTyped = 0;\n    int numChars = js.length();\n\n    for (int i = 0; i < numChars; i++) {\n        char currentChar = js.charAt(i);\n        if (currentChar == ';') {\n            numTyped++;\n        }\n    }\n\n    double percentTyped = ((double) numTyped / (double) (numChars - js.lastIndexOf('{') - 1)) * 100.0;\n    return percentTyped;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..d04bb846 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int numTyped = 0;\n+    int numChars = js.length();\n+\n+    for (int i = 0; i < numChars; i++) {\n+        char currentChar = js.charAt(i);\n+        if (currentChar == ';') {\n+            numTyped++;\n+        }\n+    }\n+\n+    double percentTyped = ((double) numTyped / (double) (numChars - js.lastIndexOf('{') - 1)) * 100.0;\n+    return percentTyped;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}