{
    "patch": "      if (NodeUtil.isGet(lhs)) {\n        // Don't traverse functions that are assigned to prototype properties.\n        if (lhs.getType() == Token.GETPROP && lhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n\n        Node llhs = lhs.getFirstChild();\n        if (llhs.getType() == Token.GETPROP && llhs.getLastChild().getString().equals(\"prototype\")) {\n          // Don't traverse functions whose object is being assigned to a prototype property.\n          return false;\n        }\n\n        // Don't traverse function expressions that are not assigned to an object.\n        if (NodeUtil.isFunctionExpression(n) && !NodeUtil.isGet(lhs)) {\n          return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..f75f4857 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,21 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(lhs)) {\n+        // Don't traverse functions that are assigned to prototype properties.\n+        if (lhs.getType() == Token.GETPROP && lhs.getLastChild().getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+\n+        Node llhs = lhs.getFirstChild();\n+        if (llhs.getType() == Token.GETPROP && llhs.getLastChild().getString().equals(\"prototype\")) {\n+          // Don't traverse functions whose object is being assigned to a prototype property.\n+          return false;\n+        }\n+\n+        // Don't traverse function expressions that are not assigned to an object.\n+        if (NodeUtil.isFunctionExpression(n) && !NodeUtil.isGet(lhs)) {\n+          return false;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}