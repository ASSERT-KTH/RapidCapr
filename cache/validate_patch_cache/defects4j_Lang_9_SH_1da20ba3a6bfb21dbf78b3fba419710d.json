{
    "patch": "        boolean addedCurrent = false;\n        if (currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n            addedCurrent = true;\n        }\n        if (nextStrategy != null) {\n            currentFormatField= nextStrategy.pattern();\n        } else {\n            if (!addedCurrent) {\n                collector.add(currentStrategy);       \n            }\n            currentFormatField= null;\n        }\n        currentStrategy = nextStrategy;\n        strategies= collector.toArray(new Strategy[collector.size()]);\n        parsePattern= Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..c87cdbf4 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,22 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        boolean addedCurrent = false;\n+        if (currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+            addedCurrent = true;\n+        }\n+        if (nextStrategy != null) {\n+            currentFormatField= nextStrategy.pattern();\n+        } else {\n+            if (!addedCurrent) {\n+                collector.add(currentStrategy);       \n+            }\n+            currentFormatField= null;\n+        }\n+        currentStrategy = nextStrategy;\n+        strategies= collector.toArray(new Strategy[collector.size()]);\n+        parsePattern= Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}