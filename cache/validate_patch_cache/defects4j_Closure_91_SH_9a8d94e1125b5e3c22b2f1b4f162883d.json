{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent != null && NodeUtil.isGet(parent) &&\n          \"prototype\".equals(parent.getLastChild().getString())) {\n        Node root = NodeUtil.getRootOfQualifiedName(parent);\n        if (root != null) {\n          Node grandparent = root.getParent();\n          if (grandparent != null && grandparent.getType() == Token.ASSIGN) {\n            Node greatGrandparent = grandparent.getParent();\n            if (greatGrandparent != null && greatGrandparent.getType() == Token.EXPR_RESULT) {\n              return false;;\n            }\n          }\n        }\n      } else if (NodeUtil.isGet(parent) &&\n                 parent.getNext() != null &&\n                 parent.getNext().getType() == Token.ASSIGN &&\n                 NodeUtil.isGet(parent.getNext().getFirstChild()) &&\n                 parent.getNext().getFirstChild().getType() == Token.GETPROP &&\n                 \"prototype\".equals(parent.getNext().getFirstChild().getLastChild().getString())) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..69b45279 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,27 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && NodeUtil.isGet(parent) &&\n+          \"prototype\".equals(parent.getLastChild().getString())) {\n+        Node root = NodeUtil.getRootOfQualifiedName(parent);\n+        if (root != null) {\n+          Node grandparent = root.getParent();\n+          if (grandparent != null && grandparent.getType() == Token.ASSIGN) {\n+            Node greatGrandparent = grandparent.getParent();\n+            if (greatGrandparent != null && greatGrandparent.getType() == Token.EXPR_RESULT) {\n+              return false;;\n+            }\n+          }\n+        }\n+      } else if (NodeUtil.isGet(parent) &&\n+                 parent.getNext() != null &&\n+                 parent.getNext().getType() == Token.ASSIGN &&\n+                 NodeUtil.isGet(parent.getNext().getFirstChild()) &&\n+                 parent.getNext().getFirstChild().getType() == Token.GETPROP &&\n+                 \"prototype\".equals(parent.getNext().getFirstChild().getLastChild().getString())) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}