{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted && instantAdjusted + ONE_DAY < nextLocal) {\n                    return offsetLocal;\n                }\n            } else if ((offsetLocal - offsetAdjusted) > 0) {\n                long nextAdjusted = nextTransition(instantAdjusted);\n                long nextLocal = nextTransition(instantLocal - offsetLocal);\n                if (instantAdjusted < nextAdjusted && nextAdjusted <= instantLocal) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..b247a115 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted && instantAdjusted + ONE_DAY < nextLocal) {\n+                    return offsetLocal;\n+                }\n+            } else if ((offsetLocal - offsetAdjusted) > 0) {\n+                long nextAdjusted = nextTransition(instantAdjusted);\n+                long nextLocal = nextTransition(instantLocal - offsetLocal);\n+                if (instantAdjusted < nextAdjusted && nextAdjusted <= instantLocal) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}