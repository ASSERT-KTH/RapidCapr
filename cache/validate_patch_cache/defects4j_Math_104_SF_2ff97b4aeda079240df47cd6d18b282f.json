{
    "patch": "import org.apache.commons.math3.special.Gamma;\n\npublic class Main {\n    public static double regularizedGammaP(double a, double x) {\n        double tolerance = 10e-15;\n        double maxIterations = 1000000;\n\n        double result = Gamma.regularizedGammaP(a, x, tolerance, (int) maxIterations);\n\n        return result;\n    }\n    \n    public static void main(String[] args) {\n        double expected = 0.632120558828558;\n        double actualP = regularizedGammaP(0.5, 1);\n        TestUtils.assertEquals(expected, actualP, 10e-15);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..2d2eddd3c 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,24 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+\n+public class Main {\n+    public static double regularizedGammaP(double a, double x) {\n+        double tolerance = 10e-15;\n+        double maxIterations = 1000000;\n+\n+        double result = Gamma.regularizedGammaP(a, x, tolerance, (int) maxIterations);\n+\n+        return result;\n+    }\n+    \n+    public static void main(String[] args) {\n+        double expected = 0.632120558828558;\n+        double actualP = regularizedGammaP(0.5, 1);\n+        TestUtils.assertEquals(expected, actualP, 10e-15);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}