{
    "patch": "        if (offsetLocal <= 0) {\n            long prev = previousTransition(instantAdjusted);\n            int offsetPrev = getOffset(prev);\n            if (offsetPrev < 0 && offsetLocal >= 0) {\n                return offsetLocal;\n            }\n            int diff = offsetPrev - offsetLocal;\n            if (instantAdjusted - prev <= diff) {\n                return offsetPrev;\n            }\n        } else {\n            long next = nextTransition(instantAdjusted);\n            int offsetNext = getOffset(next);\n            if (offsetNext < 0 && offsetAdjusted >= 0) {\n                return offsetNext;\n            }\n            if ((next - instantAdjusted) <= (offsetLocal - offsetNext)) {\n                return offsetLocal;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..c1107d2b 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,26 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+        if (offsetLocal <= 0) {\n+            long prev = previousTransition(instantAdjusted);\n+            int offsetPrev = getOffset(prev);\n+            if (offsetPrev < 0 && offsetLocal >= 0) {\n+                return offsetLocal;\n+            }\n+            int diff = offsetPrev - offsetLocal;\n+            if (instantAdjusted - prev <= diff) {\n+                return offsetPrev;\n+            }\n+        } else {\n+            long next = nextTransition(instantAdjusted);\n+            int offsetNext = getOffset(next);\n+            if (offsetNext < 0 && offsetAdjusted >= 0) {\n+                return offsetNext;\n+            }\n+            if ((next - instantAdjusted) <= (offsetLocal - offsetNext)) {\n+                return offsetLocal;\n+            }\n+        }\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...1-10-30T01:15:00.000[+01:00]> but was:<...1-10-30T01:15:00.000[Z]>",
    "test_result": "FAIL"
}