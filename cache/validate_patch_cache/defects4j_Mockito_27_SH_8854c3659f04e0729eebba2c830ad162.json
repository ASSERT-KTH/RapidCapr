{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMockSettings settings = Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS);\nMockitoSession session = Mockito.framework().mockitoSession().startMocking();\nT newMock = session.mock(mock.getClass(), settings);\n((Mockito) newMock).setHandler(newMockHandler);\n((Factory) mock).setCallbacks(new Callback[] { newMock });",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..251455b4b 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,15 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MockSettings settings = Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS);\n+MockitoSession session = Mockito.framework().mockitoSession().startMocking();\n+T newMock = session.mock(mock.getClass(), settings);\n+((Mockito) newMock).setHandler(newMockHandler);\n+((Factory) mock).setCallbacks(new Callback[] { newMock });\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}