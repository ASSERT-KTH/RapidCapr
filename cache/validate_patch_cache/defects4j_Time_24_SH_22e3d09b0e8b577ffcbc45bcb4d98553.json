{
    "patch": "        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            // fix start\n            SavedField field = e.getIllegalFieldValue();\n            if (field != null && (field.getType() == DateTimeFieldType.year() || field.getType() == DateTimeFieldType.weekyear())) {\n                // DateTimeFormatterBuilder processes weekyears and years differently\n                int old = field.getDifference();\n                int newYear = resolveYear(old);\n                try {\n                    field = new SavedField(field.getType(), field.getDurationFieldType(), newYear, field.getZone());\n                    millis = field.set(millis, resetFields);\n                } catch (IllegalFieldValueException ex) {\n                    throw e;\n                }\n            } else {\n                throw e;\n            }\n            // fix end\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c6ba9c98 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            // fix start\n+            SavedField field = e.getIllegalFieldValue();\n+            if (field != null && (field.getType() == DateTimeFieldType.year() || field.getType() == DateTimeFieldType.weekyear())) {\n+                // DateTimeFormatterBuilder processes weekyears and years differently\n+                int old = field.getDifference();\n+                int newYear = resolveYear(old);\n+                try {\n+                    field = new SavedField(field.getType(), field.getDurationFieldType(), newYear, field.getZone());\n+                    millis = field.set(millis, resetFields);\n+                } catch (IllegalFieldValueException ex) {\n+                    throw e;\n+                }\n+            } else {\n+                throw e;\n+            }\n+            // fix end\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}