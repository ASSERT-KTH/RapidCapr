{
    "patch": "    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a\n      // translations file, they might reasonably try to write their own\n      // implementation of goog.getMsg that makes the substitution at\n      // run-time.\n      //\n      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,\n      // so we might as well inline it. But shut off the i18n warnings,\n      // because the user didn't really ask for i18n.\n      options.messageBundle = new EmptyMessageBundle();\n      options.setWarningLevel(DiagnosticGroups.MSG_CONVENTIONS, CheckLevel.OFF);\n    }\n\n    return options;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..050f0cc6 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,22 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n+      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a\n+      // translations file, they might reasonably try to write their own\n+      // implementation of goog.getMsg that makes the substitution at\n+      // run-time.\n+      //\n+      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,\n+      // so we might as well inline it. But shut off the i18n warnings,\n+      // because the user didn't really ask for i18n.\n+      options.messageBundle = new EmptyMessageBundle();\n+      options.setWarningLevel(DiagnosticGroups.MSG_CONVENTIONS, CheckLevel.OFF);\n+    }\n+\n+    return options;\n+  }\n+}\n     }\n \n     return options;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}