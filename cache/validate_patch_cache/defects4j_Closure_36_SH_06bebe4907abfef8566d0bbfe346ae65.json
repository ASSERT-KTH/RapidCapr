{
    "patch": "          String methodName = NodeUtil.getName(value);\n          for (SubclassRelationship rel : convention.getSingletonGetterCallbacks()) {\n            if (rel.getAccessorMemberName().equals(methodName)\n                && rel.getBaseClassNode().matchesQualifiedName(callNode.getFirstChild())) {\n              return false;\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..feeddae3 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,12 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          String methodName = NodeUtil.getName(value);\n+          for (SubclassRelationship rel : convention.getSingletonGetterCallbacks()) {\n+            if (rel.getAccessorMemberName().equals(methodName)\n+                && rel.getBaseClassNode().matchesQualifiedName(callNode.getFirstChild())) {\n+              return false;\n+            }\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}