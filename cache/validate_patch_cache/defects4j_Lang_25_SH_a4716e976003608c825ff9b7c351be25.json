{
    "patch": "// Convert input to ASCII Hex\nStringBuilder sb = new StringBuilder();\nfor (int i = 0; i < input.length(); i++) {\n    char ch = input.charAt(i);\n    if (ch <= 0xFF) {\n        sb.append(String.format(\"%02X\", ch));\n    } else {\n        success = false;\n        break;  // stop processing the input at first non-ASCII character\n    }\n}\n\n// Assert that the ASCII Hex conversion succeeded\nif (success) {\n    assertEquals(expectedOutput, sb.toString());\n} else {\n    fail(\"Input contains non-ASCII character(s)\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}