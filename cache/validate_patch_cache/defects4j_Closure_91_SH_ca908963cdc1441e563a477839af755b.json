{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (parent != null && (parent.getType() == Token.ASSIGN ||\n                       NodeUtil.isUnaryAssign(parent))) {\n  Node lhs = null;\n  if (parent.getType() == Token.ASSIGN) {\n    lhs = parent.getFirstChild();\n  } else {\n    lhs = parent.getLastChild();\n  }\n  if (NodeUtil.isGet(lhs) && lhs.getLastChild() != null &&\n      lhs.getLastChild().getString().equals(\"prototype\")) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..e0c15070 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,20 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (parent != null && (parent.getType() == Token.ASSIGN ||\n+                       NodeUtil.isUnaryAssign(parent))) {\n+  Node lhs = null;\n+  if (parent.getType() == Token.ASSIGN) {\n+    lhs = parent.getFirstChild();\n+  } else {\n+    lhs = parent.getLastChild();\n+  }\n+  if (NodeUtil.isGet(lhs) && lhs.getLastChild() != null &&\n+      lhs.getLastChild().getString().equals(\"prototype\")) {\n+    return false;\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}