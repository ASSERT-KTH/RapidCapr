{
    "patch": "    public static int digit_sum(String s) {\n        int result = 0;\n        boolean encounteredSpace = false;\n        for (char c : s.toCharArray()) {\n            if (encounteredSpace) {\n                break;\n            }\n            if (Character.isDigit(c)) {\n                result += Character.getNumericValue(c);\n            } else if (c == ' ') {\n                encounteredSpace = true;\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DIGIT_SUM.java b/src/main/java/humaneval/buggy/DIGIT_SUM.java\nindex df6658a..3bc77dc 100644\n--- a/src/main/java/humaneval/buggy/DIGIT_SUM.java\n+++ b/src/main/java/humaneval/buggy/DIGIT_SUM.java\n@@ -16,8 +16,21 @@ public class DIGIT_SUM {\n     public static int digit_sum(String s) {\n         int result = 0;\n         for (char c : s.toCharArray()) {\n-            if (c == ' ')\n+    public static int digit_sum(String s) {\n+        int result = 0;\n+        boolean encounteredSpace = false;\n+        for (char c : s.toCharArray()) {\n+            if (encounteredSpace) {\n                 break;\n+            }\n+            if (Character.isDigit(c)) {\n+                result += Character.getNumericValue(c);\n+            } else if (c == ' ') {\n+                encounteredSpace = true;\n+            }\n+        }\n+        return result;\n+    }\n             if ('A' <= c && c <= 'Z')\n                 result += (int) c;\n         }",
    "result_reason": " /tmp/humaneval-DIGIT_SUM/src/main/java/humaneval/buggy/DIGIT_SUM.java:[19,5] illegal start of expression",
    "test_result": "ERROR"
}