{
    "patch": "public static boolean is_sorted(int[] lst) {\n    for (int i = 0; i < lst.length - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            // Check if adjacent elements are in decreasing order\n            for (int j = i + 1; j < lst.length - 1; j++) {\n                if (lst[j] > lst[j + 1]) {\n                    return false;\n                }\n            }\n            // Check if there are any duplicates and if they are in order\n            for (int j = i; j < lst.length - 1; j++) {\n                if (lst[i] == lst[j + 1]) {\n                    i = j;\n                    break;\n                } else {\n                    return false;\n                }\n            }\n        } else if (lst[i] == lst[i + 1]) {\n            // Skip over duplicates\n            continue;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..4a07b2c 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,29 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n+public static boolean is_sorted(int[] lst) {\n+    for (int i = 0; i < lst.length - 1; i++) {\n+        if (lst[i] > lst[i + 1]) {\n+            // Check if adjacent elements are in decreasing order\n+            for (int j = i + 1; j < lst.length - 1; j++) {\n+                if (lst[j] > lst[j + 1]) {\n+                    return false;\n+                }\n+            }\n+            // Check if there are any duplicates and if they are in order\n+            for (int j = i; j < lst.length - 1; j++) {\n+                if (lst[i] == lst[j + 1]) {\n+                    i = j;\n+                    break;\n+                } else {\n+                    return false;\n+                }\n+            }\n+        } else if (lst[i] == lst[i + 1]) {\n+            // Skip over duplicates\n+            continue;\n         }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n-        }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n-        }\n-        return true;\n     }\n+    return true;\n+}\n }",
    "result_reason": "   TEST_IS_SORTED.test_10:57 expected:<false> but was:<true>",
    "test_result": "FAIL"
}