{
    "patch": "            } catch (IllegalFieldValueException e) {\n                // Try to diagnose the problem\n                Chronology chrono = getChronology();\n                DateTimeZone zone = getZone();\n                int year = 0;\n                int monthOfYear = 0;\n                int dayOfMonth = 0;\n                for (int i = 0, isize = savedFields.length; i < isize; i++) {\n                    try {\n                        int field = savedFields[i].iField.getType();\n                        if (field == DateTimeFieldType.monthOfYear()) {\n                            monthOfYear = savedFields[i].iValue;\n                        } else if (field == DateTimeFieldType.dayOfMonth()) {\n                            dayOfMonth = savedFields[i].iValue;\n                        } else if (field == DateTimeFieldType.year()) {\n                            year = savedFields[i].iValue;\n                        }\n                    } catch (ArrayIndexOutOfBoundsException ex) {\n                        iSavedFields = savedFields;\n                        throw e;\n                    }\n                }\n                if (monthOfYear > 12 || monthOfYear <= 0) {\n                    throw new IllegalFieldValueException(\n                        DateTimeFieldType.monthOfYear(), String.valueOf(monthOfYear));\n                }\n                if (dayOfMonth > 31 || dayOfMonth <= 0) {\n                    throw new IllegalFieldValueException(\n                        DateTimeFieldType.dayOfMonth(), String.valueOf(dayOfMonth));\n                }\n                if (year <= 0 || year >= 10000) {\n                    throw new IllegalFieldValueException(\n                        DateTimeFieldType.year(), String.valueOf(year));\n                }\n\n                // Try to use the chronology to find out the problem\n                long instant = computeMillis(true, text);\n                if (instant < iChrono.year().set(0, year) ||\n                        instant > iChrono.year().set(0, year + 1) - DurationFieldType.millis().getField(iChrono).getUnitMillis() ) {\n                    throw e;\n                }\n                // Problem is some sort of unrecognized field.\n                throw new IllegalFieldValueException(e.getFieldType(), String.valueOf(e.getIllegalValue()), e.getLocalizedMessage());\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1f4db925 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,50 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException e) {\n+                // Try to diagnose the problem\n+                Chronology chrono = getChronology();\n+                DateTimeZone zone = getZone();\n+                int year = 0;\n+                int monthOfYear = 0;\n+                int dayOfMonth = 0;\n+                for (int i = 0, isize = savedFields.length; i < isize; i++) {\n+                    try {\n+                        int field = savedFields[i].iField.getType();\n+                        if (field == DateTimeFieldType.monthOfYear()) {\n+                            monthOfYear = savedFields[i].iValue;\n+                        } else if (field == DateTimeFieldType.dayOfMonth()) {\n+                            dayOfMonth = savedFields[i].iValue;\n+                        } else if (field == DateTimeFieldType.year()) {\n+                            year = savedFields[i].iValue;\n+                        }\n+                    } catch (ArrayIndexOutOfBoundsException ex) {\n+                        iSavedFields = savedFields;\n+                        throw e;\n+                    }\n+                }\n+                if (monthOfYear > 12 || monthOfYear <= 0) {\n+                    throw new IllegalFieldValueException(\n+                        DateTimeFieldType.monthOfYear(), String.valueOf(monthOfYear));\n+                }\n+                if (dayOfMonth > 31 || dayOfMonth <= 0) {\n+                    throw new IllegalFieldValueException(\n+                        DateTimeFieldType.dayOfMonth(), String.valueOf(dayOfMonth));\n+                }\n+                if (year <= 0 || year >= 10000) {\n+                    throw new IllegalFieldValueException(\n+                        DateTimeFieldType.year(), String.valueOf(year));\n+                }\n+\n+                // Try to use the chronology to find out the problem\n+                long instant = computeMillis(true, text);\n+                if (instant < iChrono.year().set(0, year) ||\n+                        instant > iChrono.year().set(0, year + 1) - DurationFieldType.millis().getField(iChrono).getUnitMillis() ) {\n+                    throw e;\n+                }\n+                // Problem is some sort of unrecognized field.\n+                throw new IllegalFieldValueException(e.getFieldType(), String.valueOf(e.getIllegalValue()), e.getLocalizedMessage());\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}