{
    "patch": "protected BasePeriod(long duration) {\n    super();\n    iPeriodType = new PeriodType(\n            new PeriodType(DurationFieldType.seconds()),\n            new PeriodType(DurationFieldType.minutes()),\n            new PeriodType(DurationFieldType.hours()),\n            new PeriodType(DurationFieldType.days()),\n            new PeriodType(DurationFieldType.weeks()),\n            new PeriodType(DurationFieldType.months()),\n            new PeriodType(DurationFieldType.years()),\n            new PeriodType(DurationFieldType.centuries()),\n            new PeriodType(DurationFieldType.eras())\n    );\n    iValues = new int[PeriodType.size()];\n    setPeriodInternal(duration);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..fcb81e58 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,22 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super();\n+    iPeriodType = new PeriodType(\n+            new PeriodType(DurationFieldType.seconds()),\n+            new PeriodType(DurationFieldType.minutes()),\n+            new PeriodType(DurationFieldType.hours()),\n+            new PeriodType(DurationFieldType.days()),\n+            new PeriodType(DurationFieldType.weeks()),\n+            new PeriodType(DurationFieldType.months()),\n+            new PeriodType(DurationFieldType.years()),\n+            new PeriodType(DurationFieldType.centuries()),\n+            new PeriodType(DurationFieldType.eras())\n+    );\n+    iValues = new int[PeriodType.size()];\n+    setPeriodInternal(duration);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}