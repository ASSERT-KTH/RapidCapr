{
    "patch": "Name name = functionNode.getFunctionName();\nBoolean isUnnamedFunction = false;\nif (name == null) {\n    // If the function is unnamed, create an empty name identifier.\n    // The use of `new Name()` causes ScriptRuntime.typeError (Rhino) and\n    // \"TypeError: Cannot read property 'identifier' of null\" (V8).\n    // So instead we must create a  new Name(\"\").\n    name = new Name();\n    name.setIdentifier(\"\");\n    isUnnamedFunction = true;\n}\nNode node = newNode(Token.FUNCTION);\nNode newName = transform(name);\nif (isUnnamedFunction) {\n    // Old Rhino tagged the empty name node with the line number of the\n    // declaration.\n    newName.setLineno(functionNode.getLineno());\n    // TODO(bowdidge) Mark line number of paren correctly.\n    // Same problem as below - the left paren might not be on the\n    // same line as the function keyword.\n    int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n    newName.setCharno(position2charno(lpColumn));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..4a018d03 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,29 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+Boolean isUnnamedFunction = false;\n+if (name == null) {\n+    // If the function is unnamed, create an empty name identifier.\n+    // The use of `new Name()` causes ScriptRuntime.typeError (Rhino) and\n+    // \"TypeError: Cannot read property 'identifier' of null\" (V8).\n+    // So instead we must create a  new Name(\"\").\n+    name = new Name();\n+    name.setIdentifier(\"\");\n+    isUnnamedFunction = true;\n+}\n+Node node = newNode(Token.FUNCTION);\n+Node newName = transform(name);\n+if (isUnnamedFunction) {\n+    // Old Rhino tagged the empty name node with the line number of the\n+    // declaration.\n+    newName.setLineno(functionNode.getLineno());\n+    // TODO(bowdidge) Mark line number of paren correctly.\n+    // Same problem as below - the left paren might not be on the\n+    // same line as the function keyword.\n+    int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n+    newName.setCharno(position2charno(lpColumn));\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}