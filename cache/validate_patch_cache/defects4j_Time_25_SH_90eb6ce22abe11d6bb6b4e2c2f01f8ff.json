{
    "patch": "            long prevAdjusted = previousTransition(instantAdjusted);\n            if (prevAdjusted == instantAdjusted) {\n                // we're at the start of the interval\n                prevAdjusted = prevTransition(instantAdjusted - 1);\n            }\n            int offsetPrev = getOffset(prevAdjusted);\n            if (offsetLocal > offsetAdjusted && offsetLocal > offsetPrev) {\n                // We have just passed a DST boundary going forward,\n                // so we need to add an extra hour\n                return offsetAdjusted + 3600;\n            }\n            if (offsetLocal < offsetAdjusted && offsetAdjusted == offsetPrev) {\n                // We have just passed a DST boundary going backward,\n                // so we need to subtract an hour\n                return offsetAdjusted - 3600;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a0488f33 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,21 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            long prevAdjusted = previousTransition(instantAdjusted);\n+            if (prevAdjusted == instantAdjusted) {\n+                // we're at the start of the interval\n+                prevAdjusted = prevTransition(instantAdjusted - 1);\n+            }\n+            int offsetPrev = getOffset(prevAdjusted);\n+            if (offsetLocal > offsetAdjusted && offsetLocal > offsetPrev) {\n+                // We have just passed a DST boundary going forward,\n+                // so we need to add an extra hour\n+                return offsetAdjusted + 3600;\n+            }\n+            if (offsetLocal < offsetAdjusted && offsetAdjusted == offsetPrev) {\n+                // We have just passed a DST boundary going backward,\n+                // so we need to subtract an hour\n+                return offsetAdjusted - 3600;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}