{
    "patch": "private static String escapeRegex(String s, boolean unquote) {\n    StringBuilder regex = new StringBuilder();\n    regex.append(\"^\"); // add start of string anchor\n    boolean wasWhite = false;\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (Character.isWhitespace(c)) {\n            if (!wasWhite) {\n                wasWhite = true;\n                regex.append(\"\\\\s*\");\n            }\n            continue;\n        }\n        wasWhite = false;\n        switch (c) {\n            case '\\'':\n                if (unquote) {\n                    if (++i == s.length()) {\n                        return \"\";\n                    }\n                    c = s.charAt(i);\n                }\n                break;\n            // escape regular expression special characters with a backslash\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '.':\n                regex.append('\\\\');\n                break;\n        }\n        regex.append(c);\n    }\n    regex.append(\"$\"); // add end of string anchor\n    return regex.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..7ea73118 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,27 +300,30 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n+private static String escapeRegex(String s, boolean unquote) {\n+    StringBuilder regex = new StringBuilder();\n+    regex.append(\"^\"); // add start of string anchor\n+    boolean wasWhite = false;\n+    for (int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        if (Character.isWhitespace(c)) {\n+            if (!wasWhite) {\n+                wasWhite = true;\n+                regex.append(\"\\\\s*\");\n             }\n-            wasWhite= false;\n-            switch(c) {\n+            continue;\n+        }\n+        wasWhite = false;\n+        switch (c) {\n             case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n+                if (unquote) {\n+                    if (++i == s.length()) {\n+                        return \"\";\n                     }\n-                    c= value.charAt(i);\n+                    c = s.charAt(i);\n                 }\n                 break;\n+            // escape regular expression special characters with a backslash\n             case '?':\n             case '[':\n             case ']':\n@@ -332,15 +335,15 @@ public class FastDateParser implements DateParser, Serializable {\n             case '|':\n             case '*':\n             case '+':\n-            case '^':\n-            case '$':\n             case '.':\n                 regex.append('\\\\');\n-            }\n-            regex.append(c);\n+                break;\n         }\n-        return regex;\n+        regex.append(c);\n     }\n+    regex.append(\"$\"); // add end of string anchor\n+    return regex.toString();\n+}\n \n     /**\n      * A class to store Key / Value pairs",
    "result_reason": "error: method escapeRegex in class FastDateParser cannot be applied to given types;",
    "test_result": "ERROR"
}