{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.MathUtils;\n\npublic class MyClass {\n\n  /**\n   * Compute the regularized gamma function P(a,x).\n   *\n   * @param a the a parameter.\n   * @param x the x parameter.\n   * @return the regularized gamma function P(a,x).\n   */\n  public static double computeRegularizedGamma(double a, double x) {\n    if (a <= 0 || x < 0) {\n      throw new IllegalArgumentException(\"a must be positive and x must be non-negative.\");\n    }\n\n    if (x == 0) {\n      return 0;\n    }\n\n    double c = Gamma.regularizedGammaQ(a, x);\n    double p = Gamma.gamma(a);\n    double g = Gamma.gamma(a + 1);\n\n    return c * p / g;\n  }\n\n  public static void main(String[] args) {\n    double expected = 0.632120558828558;\n    double actualP = computeRegularizedGamma(1.5, 1);\n    TestUtils.assertEquals(expected, actualP, 10e-15);\n  }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..213f80147 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,40 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.MathUtils;\n+\n+public class MyClass {\n+\n+  /**\n+   * Compute the regularized gamma function P(a,x).\n+   *\n+   * @param a the a parameter.\n+   * @param x the x parameter.\n+   * @return the regularized gamma function P(a,x).\n+   */\n+  public static double computeRegularizedGamma(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+      throw new IllegalArgumentException(\"a must be positive and x must be non-negative.\");\n+    }\n+\n+    if (x == 0) {\n+      return 0;\n+    }\n+\n+    double c = Gamma.regularizedGammaQ(a, x);\n+    double p = Gamma.gamma(a);\n+    double g = Gamma.gamma(a + 1);\n+\n+    return c * p / g;\n+  }\n+\n+  public static void main(String[] args) {\n+    double expected = 0.632120558828558;\n+    double actualP = computeRegularizedGamma(1.5, 1);\n+    TestUtils.assertEquals(expected, actualP, 10e-15);\n+  }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}