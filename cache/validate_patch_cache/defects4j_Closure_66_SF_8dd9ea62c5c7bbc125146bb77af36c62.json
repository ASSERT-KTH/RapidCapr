{
    "patch": "public static double getTypedPercent(String js) {\n    int counter = 0;\n    int length = js.length();\n    int index = 0;\n\n    while (index < length) {\n        char ch = js.charAt(index);\n        \n        if (ch == '{' || ch == '}') {\n            counter++;\n        }\n\n        index++;\n\n        if (counter == 2) {\n            break;\n        }\n    }\n\n    String substring = js.substring(0, index);\n    String trimmed = substring.replaceAll(\"\\\\s+\",\"\");\n    int percentIndex = trimmed.indexOf(\"percentTyped:\");\n\n    if (percentIndex == -1) {\n        return 0.0;\n    } \n\n    int endIndex = trimmed.indexOf(\",\", percentIndex);\n    String percentString = trimmed.substring(percentIndex + 13, endIndex);\n    return Double.parseDouble(percentString);                   \n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..94b25c8d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,37 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int counter = 0;\n+    int length = js.length();\n+    int index = 0;\n+\n+    while (index < length) {\n+        char ch = js.charAt(index);\n+        \n+        if (ch == '{' || ch == '}') {\n+            counter++;\n+        }\n+\n+        index++;\n+\n+        if (counter == 2) {\n+            break;\n+        }\n+    }\n+\n+    String substring = js.substring(0, index);\n+    String trimmed = substring.replaceAll(\"\\\\s+\",\"\");\n+    int percentIndex = trimmed.indexOf(\"percentTyped:\");\n+\n+    if (percentIndex == -1) {\n+        return 0.0;\n+    } \n+\n+    int endIndex = trimmed.indexOf(\",\", percentIndex);\n+    String percentString = trimmed.substring(percentIndex + 13, endIndex);\n+    return Double.parseDouble(percentString);                   \n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}