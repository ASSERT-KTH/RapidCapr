{
    "patch": "public Object returnValueFor(Class clazz) {\n    if (clazz == int.class || clazz == Integer.class) {\n        return intValue;\n    } else if (clazz == long.class || clazz == Long.class) {\n        return longValue;\n    } else if (clazz == double.class || clazz == Double.class) {\n        return doubleValue;\n    } else if (clazz == boolean.class || clazz == Boolean.class) {\n        return booleanValue;\n    } else if (clazz == Iterable.class) {\n        return Collections.emptyList();\n    } else {\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}