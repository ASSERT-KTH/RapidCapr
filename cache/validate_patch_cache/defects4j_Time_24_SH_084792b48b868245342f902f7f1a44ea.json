{
    "patch": "            if (savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n                savedFields[0].iField = DateTimeFieldType.year();\n                millis = savedFields[0].set(millis, resetFields);\n                for (int i = 1; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } else {\n                throw e;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..41d78372 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n+                savedFields[0].iField = DateTimeFieldType.year();\n+                millis = savedFields[0].set(millis, resetFields);\n+                for (int i = 1; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } else {\n+                throw e;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}