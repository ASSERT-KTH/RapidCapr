{
    "patch": "    public double cumulativeProbability(double x) throws MathException {\n        double ret;\n        if (x == Double.NEGATIVE_INFINITY) {\n            ret =  0.0;\n        } else if (x == Double.POSITIVE_INFINITY) {\n            ret = 1.0;\n        } else {\n            ret = 0.5 * Erf.erfc(-0.7071067811865476 * (x - mean) /\n                    standardDeviation);\n        }\n        return ret;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\nindex 02810e142..3492d94b2 100644\n--- a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n@@ -106,8 +106,16 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution\n      * convergence exception is caught and 0 or 1 is returned.\n      */\n     public double cumulativeProbability(double x) throws MathException {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n-                    (standardDeviation * Math.sqrt(2.0))));\n+        double ret;\n+        if (x == Double.NEGATIVE_INFINITY) {\n+            ret =  0.0;\n+        } else if (x == Double.POSITIVE_INFINITY) {\n+            ret = 1.0;\n+        } else {\n+            ret = 0.5 * Erf.erfc(-0.7071067811865476 * (x - mean) /\n+                    standardDeviation);\n+        }\n+        return ret;\n     }\n     \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}