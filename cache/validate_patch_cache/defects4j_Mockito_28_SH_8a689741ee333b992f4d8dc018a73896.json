{
    "patch": "            List<MockCandidate> candidates = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            if (!candidates.isEmpty()) {\n                MockCandidate bestCandidate = candidates.get(0);\n                for (MockCandidate candidate : candidates) {\n                    if (candidate.getTypeDistance() < bestCandidate.getTypeDistance()) {\n                        bestCandidate = candidate;\n                    }\n                }\n                bestCandidate.thenInject();\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..9c0a15eb2 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,19 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            List<MockCandidate> candidates = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            if (!candidates.isEmpty()) {\n+                MockCandidate bestCandidate = candidates.get(0);\n+                for (MockCandidate candidate : candidates) {\n+                    if (candidate.getTypeDistance() < bestCandidate.getTypeDistance()) {\n+                        bestCandidate = candidate;\n+                    }\n+                }\n+                bestCandidate.thenInject();\n+            }\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}