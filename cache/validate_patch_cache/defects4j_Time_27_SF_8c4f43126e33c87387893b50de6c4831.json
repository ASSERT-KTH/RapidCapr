{
    "patch": "private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n    int size = elementPairs.size();\n    if (size == 0) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        return new PeriodFormatter(null, null);\n    }\n\n    Separator currentSeparator = null;\n    int currentSeparatorIndex = -1;\n    for (int i = 0; i < size; i++) {\n        if (elementPairs.get(i) instanceof Separator) {\n            currentSeparator = (Separator) elementPairs.get(i);\n            currentSeparatorIndex = i;\n        } else if (currentSeparator != null) {\n            List<Object> beforeSeparatorList = elementPairs.subList(0, currentSeparatorIndex);\n            List<Object> afterSeparatorList = elementPairs.subList(i, size);\n\n            PeriodFormatter beforeFormatter = toFormatter(beforeSeparatorList, notPrinter, notParser);\n            PeriodFormatter afterFormatter = toFormatter(afterSeparatorList, notPrinter, notParser);\n\n            Separator sep = currentSeparator.finish(beforeFormatter.getPrinter(), afterFormatter.getParser());\n            if (notPrinter) {\n                return new PeriodFormatter(null, (PeriodParser) sep);\n            } else if (notParser) {\n                return new PeriodFormatter((PeriodPrinter) sep, null);\n            } else {\n                return new PeriodFormatter(sep, sep);\n            }\n        }\n    }\n\n    Object[] comp = createComposite(elementPairs);\n    if (notPrinter) {\n        return new PeriodFormatter(null, (PeriodParser) comp[1]);\n    } else if (notParser) {\n        return new PeriodFormatter((PeriodPrinter) comp[0], null);\n    } else {\n        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..b8bae448 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -791,27 +791,49 @@ public class PeriodFormatterBuilder {\n     }\n \n     //-----------------------------------------------------------------------\n-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n+private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n+    int size = elementPairs.size();\n+    if (size == 0) {\n         if (notPrinter && notParser) {\n             throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n         }\n-        int size = elementPairs.size();\n-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n-            Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n+        return new PeriodFormatter(null, null);\n+    }\n+\n+    Separator currentSeparator = null;\n+    int currentSeparatorIndex = -1;\n+    for (int i = 0; i < size; i++) {\n+        if (elementPairs.get(i) instanceof Separator) {\n+            currentSeparator = (Separator) elementPairs.get(i);\n+            currentSeparatorIndex = i;\n+        } else if (currentSeparator != null) {\n+            List<Object> beforeSeparatorList = elementPairs.subList(0, currentSeparatorIndex);\n+            List<Object> afterSeparatorList = elementPairs.subList(i, size);\n+\n+            PeriodFormatter beforeFormatter = toFormatter(beforeSeparatorList, notPrinter, notParser);\n+            PeriodFormatter afterFormatter = toFormatter(afterSeparatorList, notPrinter, notParser);\n+\n+            Separator sep = currentSeparator.finish(beforeFormatter.getPrinter(), afterFormatter.getParser());\n+            if (notPrinter) {\n+                return new PeriodFormatter(null, (PeriodParser) sep);\n+            } else if (notParser) {\n+                return new PeriodFormatter((PeriodPrinter) sep, null);\n+            } else {\n                 return new PeriodFormatter(sep, sep);\n+            }\n         }\n-        Object[] comp = createComposite(elementPairs);\n-        if (notPrinter) {\n-            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n-        } else if (notParser) {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n-        } else {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n-        }\n     }\n \n+    Object[] comp = createComposite(elementPairs);\n+    if (notPrinter) {\n+        return new PeriodFormatter(null, (PeriodParser) comp[1]);\n+    } else if (notParser) {\n+        return new PeriodFormatter((PeriodPrinter) comp[0], null);\n+    } else {\n+        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+    }\n+}\n+\n     private static Object[] createComposite(List<Object> elementPairs) {\n         switch (elementPairs.size()) {\n             case 0:",
    "result_reason": "java.lang.IndexOutOfBoundsException: Index: 1, Size: 1",
    "test_result": "FAIL"
}