{
    "patch": "        Callback[] callbacks = ((Factory) mock).getCallbacks();\n        for (int i = 0; i < callbacks.length; i++) {\n            if (callbacks[i] instanceof MethodInterceptorFilter) {\n                MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n                callbacks[i] = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().spiedInstance(mock).defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n                ((Factory) mock).setCallbacks(callbacks);\n                break;\n            }\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..b2174b6a2 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,18 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        Callback[] callbacks = ((Factory) mock).getCallbacks();\n+        for (int i = 0; i < callbacks.length; i++) {\n+            if (callbacks[i] instanceof MethodInterceptorFilter) {\n+                MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+                callbacks[i] = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().spiedInstance(mock).defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+                ((Factory) mock).setCallbacks(callbacks);\n+                break;\n+            }\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}