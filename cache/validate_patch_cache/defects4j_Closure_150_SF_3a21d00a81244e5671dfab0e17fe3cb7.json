{
    "patch": "    // Note: Only the buggy hunk has been removed\n\n    @Override public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n == scope.getRootNode()) return;\n\n      if (n.getType() == Token.LP && parent == scope.getRootNode()) {\n        handleFunctionInputs(parent);\n        return;\n      }\n\n      if (NodeUtil.isFunctionDeclaration(n) && !NodeUtil.isStatement(parent)) {\n        defineDeclaredFunction(n, parent);\n        return;\n      }\n\n      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n        default:\n          break;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..f6a5cfd6 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1440,6 +1440,8 @@ final class TypedScopeCreator implements ScopeCreator {\n      * @param n The node being visited.\n      * @param parent The parent of n\n      */\n+    // Note: Only the buggy hunk has been removed\n+\n     @Override public void visit(NodeTraversal t, Node n, Node parent) {\n       if (n == scope.getRootNode()) return;\n \n@@ -1448,20 +1450,21 @@ final class TypedScopeCreator implements ScopeCreator {\n         return;\n       }\n \n+      if (NodeUtil.isFunctionDeclaration(n) && !NodeUtil.isStatement(parent)) {\n+        defineDeclaredFunction(n, parent);\n+        return;\n+      }\n+\n       attachLiteralTypes(n);\n       switch (n.getType()) {\n-        case Token.FUNCTION:\n-          if (parent.getType() == Token.NAME) {\n-            return;\n-          }\n-          defineDeclaredFunction(n, parent);\n-          break;\n         case Token.CATCH:\n           defineCatch(n, parent);\n           break;\n         case Token.VAR:\n           defineVar(n, parent);\n           break;\n+        default:\n+          break;\n       }\n     }\n ",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}