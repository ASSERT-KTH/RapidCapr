{
    "patch": "public static boolean containsAny(final char[] str, final char[] searchChars) {\n    if (str == null || searchChars == null) {\n      // if either input is null, return false\n      return false;\n    }\n    final int searchCharsLength = searchChars.length;\n    final int strLength = str.length;\n    if (searchCharsLength == 0 || strLength == 0) {\n      // if either input is empty, return false\n      return false;\n    }\n    if (searchCharsLength == 1) {\n      // if searchChars contains only one character, use faster method\n      for (final char searchChar : str) {\n        if (searchChar == searchChars[0]) {\n          return true;\n        }\n      }\n      return false;\n    }\n    final boolean[] search = new boolean[Character.MAX_VALUE + 1];\n    for (final char searchChar : searchChars) {\n      search[searchChar] = true;\n    }\n    for (final char strChar : str) {\n      if (strChar < Character.MAX_VALUE + 1 && search[strChar]) {\n        return true;\n      }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..6c61057c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,37 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final char[] str, final char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+      // if either input is null, return false\n+      return false;\n+    }\n+    final int searchCharsLength = searchChars.length;\n+    final int strLength = str.length;\n+    if (searchCharsLength == 0 || strLength == 0) {\n+      // if either input is empty, return false\n+      return false;\n+    }\n+    if (searchCharsLength == 1) {\n+      // if searchChars contains only one character, use faster method\n+      for (final char searchChar : str) {\n+        if (searchChar == searchChars[0]) {\n+          return true;\n+        }\n+      }\n+      return false;\n+    }\n+    final boolean[] search = new boolean[Character.MAX_VALUE + 1];\n+    for (final char searchChar : searchChars) {\n+      search[searchChar] = true;\n+    }\n+    for (final char strChar : str) {\n+      if (strChar < Character.MAX_VALUE + 1 && search[strChar]) {\n+        return true;\n+      }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}