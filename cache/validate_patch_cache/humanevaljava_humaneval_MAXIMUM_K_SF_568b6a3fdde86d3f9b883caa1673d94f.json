{
    "patch": "public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n    PriorityQueue<Integer> pq = new PriorityQueue<>();\n    for (int num : arr) {\n        if (pq.size() < k) {\n            pq.offer(num);\n        } else if (num > pq.peek()) {\n            pq.poll();\n            pq.offer(num);\n        }\n    }\n    ArrayList<Integer> result = new ArrayList<>(pq);\n    Collections.sort(result, Collections.reverseOrder()); // sort in descending order\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..8280ff9 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -29,12 +29,18 @@ import java.util.Collections;\n  */\n \n public class MAXIMUM_K {\n-    public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n-        Collections.sort(arr);\n-        ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n-            result.add(arr.get(i));\n+public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n+    PriorityQueue<Integer> pq = new PriorityQueue<>();\n+    for (int num : arr) {\n+        if (pq.size() < k) {\n+            pq.offer(num);\n+        } else if (num > pq.peek()) {\n+            pq.poll();\n+            pq.offer(num);\n         }\n-        return result;\n     }\n+    ArrayList<Integer> result = new ArrayList<>(pq);\n+    Collections.sort(result, Collections.reverseOrder()); // sort in descending order\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[33,5] cannot find symbol",
    "test_result": "ERROR"
}