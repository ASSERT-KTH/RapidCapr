{
    "patch": "            SavedField field = e.getIllegalFieldValueHolder();\n            if (text == null) {\n                text = String.valueOf(field.getHumanReadableValue());\n            }\n            int i;\n            for (i = 0; i < count; i++) {\n                if (savedFields[i] == field) {\n                    break;\n                }\n            }\n            invalidateFields(field.getType(), i);\n            if (i >= count) {\n                throw e;\n            }\n            computeMillis(true, text);  // retry",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..3839dd6f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,21 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            SavedField field = e.getIllegalFieldValueHolder();\n+            if (text == null) {\n+                text = String.valueOf(field.getHumanReadableValue());\n+            }\n+            int i;\n+            for (i = 0; i < count; i++) {\n+                if (savedFields[i] == field) {\n+                    break;\n+                }\n+            }\n+            invalidateFields(field.getType(), i);\n+            if (i >= count) {\n+                throw e;\n+            }\n+            computeMillis(true, text);  // retry\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}