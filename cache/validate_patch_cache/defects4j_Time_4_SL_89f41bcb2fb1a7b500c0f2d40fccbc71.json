{
    "patch": "            try {\n                newPartial = newPartial.withChronologyRetainFields(iChronology);\n            } catch (UnsupportedOperationException ex) {\n                // withChronologyRetainFields fails if chronology isn't changed but\n                // clear method below will correct the fields so OK to ignore error\n            }\n            newPartial.clearCache();",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..b1d3ec80 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,13 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            try {\n+                newPartial = newPartial.withChronologyRetainFields(iChronology);\n+            } catch (UnsupportedOperationException ex) {\n+                // withChronologyRetainFields fails if chronology isn't changed but\n+                // clear method below will correct the fields so OK to ignore error\n+            }\n+            newPartial.clearCache();\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}