{
    "patch": "    List<BasicBlock> blocks = new ArrayList<>();\n    for (BasicBlock block = ref.getBasicBlock();\n         block != null; block = block.getParent()) {\n      blocks.add(block);\n      if (block.isFunction) {\n        break;\n      }\n    }\n    Collections.reverse(blocks);\n\n    int numAssignments = 0;\n    for (BasicBlock block : blocks) {\n      for (int i = 0; i < block.getInstructions().size(); i++) {\n        Node insn = block.getInstructions().get(i);\n        if (insn.matchesQualifiedName(ref.getIdentifier())\n            && insn.isExprResult()) {\n          if (++numAssignments > 1) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..07b8e67f 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,30 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+    List<BasicBlock> blocks = new ArrayList<>();\n+    for (BasicBlock block = ref.getBasicBlock();\n+         block != null; block = block.getParent()) {\n+      blocks.add(block);\n+      if (block.isFunction) {\n+        break;\n+      }\n+    }\n+    Collections.reverse(blocks);\n+\n+    int numAssignments = 0;\n+    for (BasicBlock block : blocks) {\n+      for (int i = 0; i < block.getInstructions().size(); i++) {\n+        Node insn = block.getInstructions().get(i);\n+        if (insn.matchesQualifiedName(ref.getIdentifier())\n+            && insn.isExprResult()) {\n+          if (++numAssignments > 1) {\n+            return false;\n+          }\n+        }\n+      }\n+    }\n+\n+    return true;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}