{
    "patch": "public static int[] largest_smallest_integers(int[] lst) {\n    int max_negative = Integer.MIN_VALUE, min_positive = Integer.MAX_VALUE;\n    boolean has_negatives = false, has_positives = false;\n    for(int i = 0; i < lst.length; i++) {\n        if(lst[i] < 0) {\n            has_negatives = true;\n            max_negative = Math.max(max_negative, lst[i]);\n        } else if(lst[i] > 0) {\n            has_positives = true;\n            min_positive = Math.min(min_positive, lst[i]);\n        }\n    }\n    if(!has_negatives) max_negative = 0;\n    if(!has_positives) min_positive = 0;\n    if (max_negative == Integer.MIN_VALUE && min_positive == Integer.MAX_VALUE) {\n         return new int[]{0, 0};\n     }\n     else if (max_negative == Integer.MIN_VALUE) {\n         return new int[]{0, min_positive};\n     }\n     else if (min_positive == Integer.MAX_VALUE) {\n         return new int[]{max_negative, 0};\n     }\n     else {\n         return new int[]{max_negative, min_positive};\n     }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java b/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java\nindex 0f5a219..a80a2cd 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java\n@@ -13,21 +13,31 @@ package humaneval.buggy;\n  */\n \n public class LARGEST_SMALLEST_INTEGERS {\n-    public static int[] largest_smallest_integers(int[] lst) {\n-        boolean negative = true, positive = true;\n-        int max_negative = Integer.MAX_VALUE, min_positive = Integer.MIN_VALUE; \n-        for(int i = 1; i < lst.length; i++) {\n-            if(lst[i] < 0) {\n-                negative = false;\n-                max_negative = Math.min(max_negative, lst[i]);\n-            } else if(lst[i] > 0) {\n-                positive = true;\n-                min_positive = Math.min(min_positive, lst[i]);\n-            }\n+public static int[] largest_smallest_integers(int[] lst) {\n+    int max_negative = Integer.MIN_VALUE, min_positive = Integer.MAX_VALUE;\n+    boolean has_negatives = false, has_positives = false;\n+    for(int i = 0; i < lst.length; i++) {\n+        if(lst[i] < 0) {\n+            has_negatives = true;\n+            max_negative = Math.max(max_negative, lst[i]);\n+        } else if(lst[i] > 0) {\n+            has_positives = true;\n+            min_positive = Math.min(min_positive, lst[i]);\n         }\n-        if(!negative) max_negative = 0;\n-        if(!positive) min_positive = 0;\n-        int[] result = {max_negative, min_positive};\n-        return result;\n     }\n+    if(!has_negatives) max_negative = 0;\n+    if(!has_positives) min_positive = 0;\n+    if (max_negative == Integer.MIN_VALUE && min_positive == Integer.MAX_VALUE) {\n+         return new int[]{0, 0};\n+     }\n+     else if (max_negative == Integer.MIN_VALUE) {\n+         return new int[]{0, min_positive};\n+     }\n+     else if (min_positive == Integer.MAX_VALUE) {\n+         return new int[]{max_negative, 0};\n+     }\n+     else {\n+         return new int[]{max_negative, min_positive};\n+     }\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}