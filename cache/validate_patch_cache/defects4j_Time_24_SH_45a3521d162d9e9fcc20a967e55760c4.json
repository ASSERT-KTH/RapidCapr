{
    "patch": "            long newMillis = savedFields[i].set(millis, resetFields);\n            if (newMillis != millis) {\n                String message = \"Illegal instant due to disallowed field combination (\" +\n                        savedFields[i].iField.getType() + \" and \" +\n                        savedFields[i - 1].iField.getType() + ')';\n                if (text != null) {\n                    message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n                }\n                throw new IllegalArgumentException(message);\n            }\n            millis = newMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..dfb2b4a0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            long newMillis = savedFields[i].set(millis, resetFields);\n+            if (newMillis != millis) {\n+                String message = \"Illegal instant due to disallowed field combination (\" +\n+                        savedFields[i].iField.getType() + \" and \" +\n+                        savedFields[i - 1].iField.getType() + ')';\n+                if (text != null) {\n+                    message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n+                }\n+                throw new IllegalArgumentException(message);\n+            }\n+            millis = newMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}