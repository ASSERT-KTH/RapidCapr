{
    "patch": "copy.data = new ArrayList<>();\nif (this.data.size() > 0) {\n    for (int index = 0; index < data.size(); index++) {\n        if (index >= start && index <= end) {\n            TimeSeriesDataItem item = data.get(index);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        } else if (index > end) {\n            break;\n        }\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..3bd46cf 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,22 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new ArrayList<>();\n+if (this.data.size() > 0) {\n+    for (int index = 0; index < data.size(); index++) {\n+        if (index >= start && index <= end) {\n+            TimeSeriesDataItem item = data.get(index);\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+            try {\n+                copy.add(clone);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        } else if (index > end) {\n+            break;\n+        }\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}