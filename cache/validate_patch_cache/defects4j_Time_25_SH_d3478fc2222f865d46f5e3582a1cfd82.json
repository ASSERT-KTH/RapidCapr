{
    "patch": "            int offsetDiff = offsetLocal - offsetAdjusted;\n            if (offsetDiff < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    int newOffsetLocal = getOffset(nextLocal);\n                    int totalAdjustment = offsetAdjusted - newOffsetLocal;\n                    return totalAdjustment + newOffsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..c8c89fae 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            int offsetDiff = offsetLocal - offsetAdjusted;\n+            if (offsetDiff < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    int newOffsetLocal = getOffset(nextLocal);\n+                    int totalAdjustment = offsetAdjusted - newOffsetLocal;\n+                    return totalAdjustment + newOffsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}