{
    "patch": "        if(nextStrategy != null && !currentStrategy.isNumerical() &&\n                nextStrategy.isNumerical()) {\n            currentFormatField = currentFormatField + SEPARATOR + nextStrategy.toString();\n        } else {\n            if(currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n            }\n        }\n        if(currentStrategy != null) {\n            currentFormatField= null;\n            strategies= collector.toArray(new Strategy[collector.size()]);\n            parsePattern= Pattern.compile(regex.toString());\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..d4ac1f3f 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        if(nextStrategy != null && !currentStrategy.isNumerical() &&\n+                nextStrategy.isNumerical()) {\n+            currentFormatField = currentFormatField + SEPARATOR + nextStrategy.toString();\n+        } else {\n+            if(currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+            }\n+        }\n+        if(currentStrategy != null) {\n+            currentFormatField= null;\n+            strategies= collector.toArray(new Strategy[collector.size()]);\n+            parsePattern= Pattern.compile(regex.toString());\n+        }\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}