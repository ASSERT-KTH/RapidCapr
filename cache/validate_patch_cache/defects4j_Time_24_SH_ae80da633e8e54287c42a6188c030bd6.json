{
    "patch": "        try {\n            int i = 0;\n            while (i < count) {\n                long newMillis = savedFields[i].set(millis, resetFields);\n                if (millis > 0 && newMillis < 0) {\n                    throw new IllegalArgumentException(\"The datetime is too large to be represented\");\n                }\n                if (millis < 0 && newMillis > 0) {\n                    throw new IllegalArgumentException(\"The datetime is too small to be represented\");\n                }\n                millis = newMillis;\n                i++;\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a0de5e70 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            int i = 0;\n+            while (i < count) {\n+                long newMillis = savedFields[i].set(millis, resetFields);\n+                if (millis > 0 && newMillis < 0) {\n+                    throw new IllegalArgumentException(\"The datetime is too large to be represented\");\n+                }\n+                if (millis < 0 && newMillis > 0) {\n+                    throw new IllegalArgumentException(\"The datetime is too small to be represented\");\n+                }\n+                millis = newMillis;\n+                i++;\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: The datetime is too large to be represented",
    "test_result": "FAIL"
}