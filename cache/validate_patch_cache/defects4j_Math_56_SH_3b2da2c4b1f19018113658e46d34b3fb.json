{
    "patch": "int idx = 1;\nint countBefore = 0;\nfor (int i = 0; i < last; i++) {\n    final int offset = uniCounterOffset[i];\n    while (countBefore + offset <= index) {\n        ++idx;\n        countBefore += offset;\n    }\n    indices[i] = idx - 1;\n}\n\n--idx;\ncountBefore -= (idx * (idx - 1)) / 2;\nint remainingCount = index - countBefore - 1;\n\nfor (int i = last - 1; i >= 0; --i) {\n    if (remainingCount >= uniCounterOffset[i]) {\n        int increments = remainingCount / uniCounterOffset[i];\n        indices[i] += increments;\n        remainingCount -= increments * uniCounterOffset[i];\n    }\n}\n\nreturn indices;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..0979bd7fa 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,30 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n-        }\n-        --idx;\n-        indices[last] = idx;\n+int idx = 1;\n+int countBefore = 0;\n+for (int i = 0; i < last; i++) {\n+    final int offset = uniCounterOffset[i];\n+    while (countBefore + offset <= index) {\n+        ++idx;\n+        countBefore += offset;\n+    }\n+    indices[i] = idx - 1;\n+}\n+\n+--idx;\n+countBefore -= (idx * (idx - 1)) / 2;\n+int remainingCount = index - countBefore - 1;\n+\n+for (int i = last - 1; i >= 0; --i) {\n+    if (remainingCount >= uniCounterOffset[i]) {\n+        int increments = remainingCount / uniCounterOffset[i];\n+        indices[i] += increments;\n+        remainingCount -= increments * uniCounterOffset[i];\n+    }\n+}\n+\n+return indices;\n \n         return indices;\n     }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}