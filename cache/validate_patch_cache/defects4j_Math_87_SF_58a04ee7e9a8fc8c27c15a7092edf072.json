{
    "patch": "    private Integer getBasicRow(final int col) {\n        boolean foundBasicVariable = false;\n        Integer basicRow = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            final double entry = getEntry(i, col);\n            if (MathUtils.equals(entry, 1.0, epsilon)) {\n                if (foundBasicVariable) {\n                    return null;\n                }\n                basicRow = i;\n                foundBasicVariable = true;\n            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {\n                return null;\n            }\n        }\n        return basicRow;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex 0ab790cd6..1a501e042 100644\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -270,17 +270,21 @@ class SimplexTableau implements Serializable {\n      * @return the row that the variable is basic in.  null if the column is not basic\n      */\n     private Integer getBasicRow(final int col) {\n-        Integer row = null;\n+        boolean foundBasicVariable = false;\n+        Integer basicRow = null;\n         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-                if (row == null) {\n-                row = i;\n-                } else {\n-                return null;\n+            final double entry = getEntry(i, col);\n+            if (MathUtils.equals(entry, 1.0, epsilon)) {\n+                if (foundBasicVariable) {\n+                    return null;\n                 }\n+                basicRow = i;\n+                foundBasicVariable = true;\n+            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {\n+                return null;\n             }\n         }\n-        return row;\n+        return basicRow;\n     }\n \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}