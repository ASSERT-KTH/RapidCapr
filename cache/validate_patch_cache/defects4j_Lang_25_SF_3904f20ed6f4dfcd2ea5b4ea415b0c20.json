{
    "patch": "import java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.nio.charset.Charset;\nimport java.nio.charset.StandardCharsets;\n\npublic class StringEscapeUtils {\n\n    private static final char CSV_DELIMITER = ',';\n    private static final char ESCAPE_CHAR = '\\\\';\n\n    public static String escapeCsv(String input) {\n        if (input == null) {\n            return null;\n        }\n        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n             OutputStreamWriter osw = new OutputStreamWriter(baos, StandardCharsets.UTF_8)) {\n            for (int i = 0; i < input.length(); i++) {\n                char c = input.charAt(i);\n                if (c == CSV_DELIMITER || c == ESCAPE_CHAR) {\n                    osw.append(ESCAPE_CHAR);\n                }\n                osw.append(c);\n            }\n            osw.flush();\n            return new String(baos.toByteArray(), StandardCharsets.UTF_8);\n        } catch (IOException e) {\n            throw new RuntimeException(\"Error while escaping CSV string\", e);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..ad5a710e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,37 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStreamWriter;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+\n+public class StringEscapeUtils {\n+\n+    private static final char CSV_DELIMITER = ',';\n+    private static final char ESCAPE_CHAR = '\\\\';\n+\n+    public static String escapeCsv(String input) {\n+        if (input == null) {\n+            return null;\n+        }\n+        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+             OutputStreamWriter osw = new OutputStreamWriter(baos, StandardCharsets.UTF_8)) {\n+            for (int i = 0; i < input.length(); i++) {\n+                char c = input.charAt(i);\n+                if (c == CSV_DELIMITER || c == ESCAPE_CHAR) {\n+                    osw.append(ESCAPE_CHAR);\n+                }\n+                osw.append(c);\n+            }\n+            osw.flush();\n+            return new String(baos.toByteArray(), StandardCharsets.UTF_8);\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Error while escaping CSV string\", e);\n+        }\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}