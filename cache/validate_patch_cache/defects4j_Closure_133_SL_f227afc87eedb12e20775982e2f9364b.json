{
    "patch": "String temp = null;\ntry {\n    if (stream != null) {\n        temp = stream.getRemainingJSDocLine();\n    }\n    if (temp == null || temp.isEmpty() || temp.trim().contains(\"Unknown type\")) {\n        throw new IllegalStateException(\"Bad type annotation.\");\n    }\n} catch (IllegalStateException e) {\n    throw e;\n} catch (Exception e) {\n    throw new IllegalStateException(\"Recorded bad position information\", e);\n}\nresult = temp.trim();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..be3a1fac 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,20 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+String temp = null;\n+try {\n+    if (stream != null) {\n+        temp = stream.getRemainingJSDocLine();\n+    }\n+    if (temp == null || temp.isEmpty() || temp.trim().contains(\"Unknown type\")) {\n+        throw new IllegalStateException(\"Bad type annotation.\");\n+    }\n+} catch (IllegalStateException e) {\n+    throw e;\n+} catch (Exception e) {\n+    throw new IllegalStateException(\"Recorded bad position information\", e);\n+}\n+result = temp.trim();\n     return result;\n   }\n ",
    "result_reason": "java.lang.RuntimeException: java.lang.IllegalStateException: Bad type annotation.",
    "test_result": "FAIL"
}