{
    "patch": "public static Properties loadProps(String fileName) {\n    Properties props = new Properties();\n    try (FileInputStream fileInputStream = new FileInputStream(fileName)) {\n        props.load(fileInputStream);\n    } catch (IOException e) {\n        System.err.println(\"Unable to load properties file \" + fileName);\n        return new Properties(); // Return empty properties object on error\n    }\n    String value;\n    if ((value = props.getProperty(\"propertyName\")) == null || value.equals(\"\")) {\n        System.err.println(\"Warning: Missing 'propertyName' in \" + fileName);\n    }\n    return props;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..2fa88dae 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static Properties loadProps(String fileName) {\n+    Properties props = new Properties();\n+    try (FileInputStream fileInputStream = new FileInputStream(fileName)) {\n+        props.load(fileInputStream);\n+    } catch (IOException e) {\n+        System.err.println(\"Unable to load properties file \" + fileName);\n+        return new Properties(); // Return empty properties object on error\n+    }\n+    String value;\n+    if ((value = props.getProperty(\"propertyName\")) == null || value.equals(\"\")) {\n+        System.err.println(\"Warning: Missing 'propertyName' in \" + fileName);\n+    }\n+    return props;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}