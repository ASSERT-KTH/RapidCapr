{
    "patch": "if(!collector.isEmpty()) {\n    strategies= collector.toArray(new Strategy[collector.size()]);\n    parsePattern= Pattern.compile(regex.toString());\n    currentFormatField = null;\n} else {\n    strategies= new Strategy[0];\n    parsePattern= null;\n    if (patternMatcher.regionStart() == patternMatcher.regionEnd()) {\n        currentFormatField = null;\n    } else {\n        throw new IllegalArgumentException(\"Invalid pattern\");\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..f33adb51 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(!collector.isEmpty()) {\n+    strategies= collector.toArray(new Strategy[collector.size()]);\n+    parsePattern= Pattern.compile(regex.toString());\n+    currentFormatField = null;\n+} else {\n+    strategies= new Strategy[0];\n+    parsePattern= null;\n+    if (patternMatcher.regionStart() == patternMatcher.regionEnd()) {\n+        currentFormatField = null;\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid pattern\");\n+    }\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}