{
    "patch": "public static int closest_integer(String value) {\n    if (value == null || value.isEmpty()) {\n        return 0;\n    }\n\n    // Remove trailing zeroes if decimal point present\n    if (value.contains(\".\")) {\n        while (value.endsWith(\"0\")) {\n            value = value.substring(0, value.length() - 1);\n        }\n        if (value.endsWith(\".\")) {\n            value = value.substring(0, value.length() - 1);\n        }\n    }\n\n    double num = Double.parseDouble(value);\n\n    int result;\n    if (num < 0) {\n        result = (int) Math.ceil(num - 0.5);\n    } else if (num > 0) {\n        result = (int) Math.floor(num + 0.5);\n    } else { // num == 0\n        result = 0;\n    }\n\n    // Special case where the number is exactly halfway between two integers and the result\n    // should be rounded up to the even integer\n    if (Math.abs(num - result) == 0.5 && result % 2 == 0) {\n        result = (result < 0) ? result - 1 : result + 1;\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..8ed98ac 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -17,20 +17,38 @@ package humaneval.buggy;\n // return 15 and closest_integer(\"-14.5\") should return -15.\n \n public class CLOSEST_INTEGER {\n-    public static int closest_integer(String value) {\n-        if (value.indexOf('.') >= 0) {\n-            while (value.charAt(value.length() - 1) == '0')\n-                value = value.substring(0, value.length() - 1);\n-        }\n+public static int closest_integer(String value) {\n+    if (value == null || value.isEmpty()) {\n+        return 0;\n+    }\n \n-        double num = Double.parseDouble(value);\n-        int result = 0;\n-        if (value.substring(value.length() - 2).equals(\".5\")) {\n-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n-        } else if (value.length() > 0){\n-            result = (int)Math.round(num);\n+    // Remove trailing zeroes if decimal point present\n+    if (value.contains(\".\")) {\n+        while (value.endsWith(\"0\")) {\n+            value = value.substring(0, value.length() - 1);\n+        }\n+        if (value.endsWith(\".\")) {\n+            value = value.substring(0, value.length() - 1);\n         }\n+    }\n+\n+    double num = Double.parseDouble(value);\n \n-        return result;\n+    int result;\n+    if (num < 0) {\n+        result = (int) Math.ceil(num - 0.5);\n+    } else if (num > 0) {\n+        result = (int) Math.floor(num + 0.5);\n+    } else { // num == 0\n+        result = 0;\n     }\n+\n+    // Special case where the number is exactly halfway between two integers and the result\n+    // should be rounded up to the even integer\n+    if (Math.abs(num - result) == 0.5 && result % 2 == 0) {\n+        result = (result < 0) ? result - 1 : result + 1;\n+    }\n+\n+    return result;\n+}\n }",
    "result_reason": "   TEST_CLOSEST_INTEGER.test_2:23 expected:<-17> but was:<-16>",
    "test_result": "FAIL"
}