{
    "patch": "public static Locale toLocale(String str) {\n   if (str == null) {\n       return null;\n   }\n   int len = str.length();\n   if (len < 2) {\n       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n   }\n   int pos = str.indexOf('_');\n   if (pos == -1) {\n       if (len != 2 && len != 5) {\n           throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n       }\n       return len == 2 ? new Locale(str) : new Locale(str.substring(0, 2), str.substring(3, 5));\n   }\n   if (pos == len - 1) {\n       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n   }\n   String language = str.substring(0, pos);\n   pos++;\n   int nextPos = str.indexOf('_', pos);\n   if (nextPos == -1) {\n       String country = str.substring(pos);\n       if (country.length() != 2) {\n           throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n       }\n       return new Locale(language, country);\n   }\n   String country = str.substring(pos, nextPos);\n   if (country.length() != 2) {\n       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n   }\n   pos = nextPos + 1;\n   nextPos = str.indexOf('_', pos);\n   if (nextPos == -1) {\n       return new Locale(language, country, str.substring(pos));\n   }\n   String variant = str.substring(pos, nextPos);\n   pos = nextPos + 1;\n   if (pos == len || str.indexOf('_', pos) != -1) {\n       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n   }\n   return new Locale(language, country, variant + '_' + str.substring(pos));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..d3ba0a65 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,50 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n-        }\n-    }\n+public static Locale toLocale(String str) {\n+   if (str == null) {\n+       return null;\n+   }\n+   int len = str.length();\n+   if (len < 2) {\n+       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+   }\n+   int pos = str.indexOf('_');\n+   if (pos == -1) {\n+       if (len != 2 && len != 5) {\n+           throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+       }\n+       return len == 2 ? new Locale(str) : new Locale(str.substring(0, 2), str.substring(3, 5));\n+   }\n+   if (pos == len - 1) {\n+       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+   }\n+   String language = str.substring(0, pos);\n+   pos++;\n+   int nextPos = str.indexOf('_', pos);\n+   if (nextPos == -1) {\n+       String country = str.substring(pos);\n+       if (country.length() != 2) {\n+           throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+       }\n+       return new Locale(language, country);\n+   }\n+   String country = str.substring(pos, nextPos);\n+   if (country.length() != 2) {\n+       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+   }\n+   pos = nextPos + 1;\n+   nextPos = str.indexOf('_', pos);\n+   if (nextPos == -1) {\n+       return new Locale(language, country, str.substring(pos));\n+   }\n+   String variant = str.substring(pos, nextPos);\n+   pos = nextPos + 1;\n+   if (pos == len || str.indexOf('_', pos) != -1) {\n+       throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+   }\n+   return new Locale(language, country, variant + '_' + str.substring(pos));\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}