{
    "patch": "        Arrays.sort(savedFields, 0, count);\n        for (int i = 0; i < count; i++) {\n            try {\n                millis = savedFields[i].set(millis, resetFields);\n            } catch (IllegalArgumentException e) {\n                if (text != null) {\n                    String message = \"Cannot parse \\\"\" + text + '\"';\n                    if (e.getMessage() != null && !e.getMessage().isEmpty()) {\n                        message = message + \": \" + e.getMessage();\n                    }\n                    throw new IllegalArgumentException(message, e);\n                } else {\n                    throw e;\n                }\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2938a0a7 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,25 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        Arrays.sort(savedFields, 0, count);\n+        for (int i = 0; i < count; i++) {\n+            try {\n+                millis = savedFields[i].set(millis, resetFields);\n+            } catch (IllegalArgumentException e) {\n+                if (text != null) {\n+                    String message = \"Cannot parse \\\"\" + text + '\"';\n+                    if (e.getMessage() != null && !e.getMessage().isEmpty()) {\n+                        message = message + \": \" + e.getMessage();\n+                    }\n+                    throw new IllegalArgumentException(message, e);\n+                } else {\n+                    throw e;\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}