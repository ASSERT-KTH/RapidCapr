{
    "patch": "public static double getTypedPercent(String json) throws JSONException {\n    double countTyped = 0.0;\n    double totalCount = 0.0;\n    JSONObject obj = new JSONObject(json);\n    JSONArray questions = obj.getJSONArray(\"questions\");\n    for(int i = 0; i < questions.length(); i++) {\n        JSONObject q = questions.getJSONObject(i);\n        JSONArray choices = q.getJSONArray(\"choices\");\n        for(int j = 0; j < choices.length(); j++) {\n            JSONObject c = choices.getJSONObject(j);\n            if(c.has(\"typedValue\")) {\n                countTyped++;\n            }\n            totalCount++;\n        }\n    }\n    return (countTyped / totalCount) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..2da5aeed 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) throws JSONException {\n+    double countTyped = 0.0;\n+    double totalCount = 0.0;\n+    JSONObject obj = new JSONObject(json);\n+    JSONArray questions = obj.getJSONArray(\"questions\");\n+    for(int i = 0; i < questions.length(); i++) {\n+        JSONObject q = questions.getJSONObject(i);\n+        JSONArray choices = q.getJSONArray(\"choices\");\n+        for(int j = 0; j < choices.length(); j++) {\n+            JSONObject c = choices.getJSONObject(j);\n+            if(c.has(\"typedValue\")) {\n+                countTyped++;\n+            }\n+            totalCount++;\n+        }\n+    }\n+    return (countTyped / totalCount) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}