{
    "patch": "\n        String pat = b + b;\n        for (int i = 0; i < a.length(); i += 1) {\n            if (a.charAt(i) != pat.charAt(i) || a.charAt((i + l) % a.length()) != pat.charAt(i + l)) {\n                continue;\n            }\n            for (int j = i + 1; j < i + l; j++) {\n                if (a.charAt(j) != pat.charAt(j + l)) {\n                    break;\n                } else if (j == i + l - 1) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..400e372 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -11,9 +11,21 @@ package humaneval.buggy;\n public class CYCPATTERN_CHECK {\n     public static boolean cycpattern_check(String a, String b) {\n         int l = b.length();\n-        String pat = b;\n+\n+        String pat = b + b;\n         for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n+            if (a.charAt(i) != pat.charAt(i) || a.charAt((i + l) % a.length()) != pat.charAt(i + l)) {\n+                continue;\n+            }\n+            for (int j = i + 1; j < i + l; j++) {\n+                if (a.charAt(j) != pat.charAt(j + l)) {\n+                    break;\n+                } else if (j == i + l - 1) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n                 if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n             }\n         }",
    "result_reason": " /tmp/humaneval-CYCPATTERN_CHECK/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java:[32,9] class, interface, or enum expected",
    "test_result": "ERROR"
}