{
    "patch": "protected BasePeriod(long duration) {\n    this(duration, PeriodType.standard().withYearsRemoved()\n                                    .withMonthsRemoved()\n                                    .withMillisRemoved(), null);\n    // handle week field separately\n    long weeks = duration / DateTimeConstants.MILLIS_PER_WEEK;\n    if (weeks != 0) {\n        this.iPeriod = this.iPeriod.withWeeks((int) weeks);\n        this.iDuration = this.iDuration.minus(weeks * DateTimeConstants.MILLIS_PER_WEEK);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..69bdc0f8 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    this(duration, PeriodType.standard().withYearsRemoved()\n+                                    .withMonthsRemoved()\n+                                    .withMillisRemoved(), null);\n+    // handle week field separately\n+    long weeks = duration / DateTimeConstants.MILLIS_PER_WEEK;\n+    if (weeks != 0) {\n+        this.iPeriod = this.iPeriod.withWeeks((int) weeks);\n+        this.iDuration = this.iDuration.minus(weeks * DateTimeConstants.MILLIS_PER_WEEK);\n     }\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}