{
    "patch": "public String fixBug(String input) {\n    // Replace (x in y) with (y.hasOwnProperty(x))\n    input = input.replaceAll(\"\\\\((.*)\\\\sin\\\\s(.*?)\\\\)\", \"($2.hasOwnProperty($1))\");\n    // Replace for (x in y) with for (var x in y)\n    input = input.replaceAll(\"for\\\\s*\\\\(\\\\s*(.*\\\\sin\\\\s.*?)\\\\s*\\\\)\", \"for (var $1)\");\n    return input;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..4ffaee8e 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,13 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixBug(String input) {\n+    // Replace (x in y) with (y.hasOwnProperty(x))\n+    input = input.replaceAll(\"\\\\((.*)\\\\sin\\\\s(.*?)\\\\)\", \"($2.hasOwnProperty($1))\");\n+    // Replace for (x in y) with for (var x in y)\n+    input = input.replaceAll(\"for\\\\s*\\\\(\\\\s*(.*\\\\sin\\\\s.*?)\\\\s*\\\\)\", \"for (var $1)\");\n+    return input;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}