{
    "patch": "for (int i = 0; i < count; i++) {\n    SavedField savedField = savedFields[i];\n    DateTimeField field = savedField.iField;\n    int value = savedField.iValue;\n    try {\n        millis = field.set(millis, value);\n    } catch (IllegalArgumentException e) {\n        if (text != null) {\n            e = new IllegalFieldValueException(\n                    \"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage(), e);\n        }\n        throw e;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a79213fc 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,20 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    SavedField savedField = savedFields[i];\n+    DateTimeField field = savedField.iField;\n+    int value = savedField.iValue;\n+    try {\n+        millis = field.set(millis, value);\n+    } catch (IllegalArgumentException e) {\n+        if (text != null) {\n+            e = new IllegalFieldValueException(\n+                    \"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage(), e);\n+        }\n+        throw e;\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: no suitable constructor found for IllegalFieldValueException(String,IllegalArgumentException)",
    "test_result": "ERROR"
}