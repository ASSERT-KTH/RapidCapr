{
    "patch": "    public double getPct(Object v) {\n        if (v instanceof Integer) {\n            return getCumPct((Integer) v);\n        } else if (v instanceof String) {\n            return getCumPct(v.toString());\n        } else {\n            return 0.0;\n        }\n    }\n\n    private double getCumPct(Comparable<?> v) {\n        // implementation of getCumPct that accepts Comparable objects\n    }\n\n    private double getCumPct(int v) {\n        // implementation of getCumPct that accepts int\n    }\n\n    private double getCumPct(String v) {\n        // implementation of getCumPct that accepts String\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..a3cf496be 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,25 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+        if (v instanceof Integer) {\n+            return getCumPct((Integer) v);\n+        } else if (v instanceof String) {\n+            return getCumPct(v.toString());\n+        } else {\n+            return 0.0;\n+        }\n+    }\n+\n+    private double getCumPct(Comparable<?> v) {\n+        // implementation of getCumPct that accepts Comparable objects\n+    }\n+\n+    private double getCumPct(int v) {\n+        // implementation of getCumPct that accepts int\n+    }\n+\n+    private double getCumPct(String v) {\n+        // implementation of getCumPct that accepts String\n     }\n \n     /**",
    "result_reason": "error: method getCumPct(Comparable<?>) is already defined in class Frequency",
    "test_result": "ERROR"
}