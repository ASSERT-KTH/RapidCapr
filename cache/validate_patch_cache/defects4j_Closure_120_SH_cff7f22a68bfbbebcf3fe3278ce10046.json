{
    "patch": "        } else if (maybeInit != null &&\n            maybeInit.isSimpleAssignmentToName() &&\n            maybeInit.getNameNode().equals(maybeDecl.getNode())) {\n          return maybeInit;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..f16a837e 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,10 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        } else if (maybeInit != null &&\n+            maybeInit.isSimpleAssignmentToName() &&\n+            maybeInit.getNameNode().equals(maybeDecl.getNode())) {\n+          return maybeInit;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}