{
    "patch": "            // Abort early if the normalization will overflow (cf. \"encode\" method).\n            if (!AbstractLeastSquaresOptimizer.isSymmetric(inputCovariance)) {\n                throw new NonPositiveDefiniteMatrixException();\n            }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 51d1c6428..15a53034c 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -537,6 +537,10 @@ public class CMAESOptimizer\n                 boundaries[1] = uB;\n \n                 // Abort early if the normalization will overflow (cf. \"encode\" method).\n+            // Abort early if the normalization will overflow (cf. \"encode\" method).\n+            if (!AbstractLeastSquaresOptimizer.isSymmetric(inputCovariance)) {\n+                throw new NonPositiveDefiniteMatrixException();\n+            }\n             }\n         } else {\n             // Convert API to internal handling of boundaries.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}