{
    "patch": "    if (NodeUtil.isFunctionExpression(n)) {\n      return true;\n    }\n    if (!NodeUtil.isCall(n)) {\n      return false;\n    }\n    Node target = n.getFirstChild();\n    if (!NodeUtil.isName(target)) {\n      return false;\n    }\n    String targetName = target.getString();\n    // check for known reduce-able functions\n    switch (targetName) {\n      case \"Object\":\n      case \"Array\":\n      case \"Number\":\n      case \"Boolean\":\n      case \"String\":\n        return true;\n      default:\n        return false;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..dc3cb1ed 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,28 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    if (NodeUtil.isFunctionExpression(n)) {\n+      return true;\n+    }\n+    if (!NodeUtil.isCall(n)) {\n+      return false;\n+    }\n+    Node target = n.getFirstChild();\n+    if (!NodeUtil.isName(target)) {\n+      return false;\n+    }\n+    String targetName = target.getString();\n+    // check for known reduce-able functions\n+    switch (targetName) {\n+      case \"Object\":\n+      case \"Array\":\n+      case \"Number\":\n+      case \"Boolean\":\n+      case \"String\":\n+        return true;\n+      default:\n+        return false;\n+    }\n   }\n \n   /**",
    "result_reason": "error: strings in switch are not supported in -source 1.6",
    "test_result": "ERROR"
}