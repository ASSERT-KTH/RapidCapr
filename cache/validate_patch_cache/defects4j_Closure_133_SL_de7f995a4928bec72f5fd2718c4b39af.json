{
    "patch": "String result = stream.getRemainingJSDocLine();\nif (result != null) {\n  if (result.contains(\"@type\")) {\n    result += stream.getRemainingJSDocLine();\n  }\n  try {\n    jsdocParser.parseTypeString(result);\n  } catch (TypeParseError e) {\n    // Ignore the parse error and return an empty string instead of result\n    result = \"\";\n  }\n} else {\n  result = \"\";\n}\nreturn result;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..583826d8 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,21 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+String result = stream.getRemainingJSDocLine();\n+if (result != null) {\n+  if (result.contains(\"@type\")) {\n+    result += stream.getRemainingJSDocLine();\n+  }\n+  try {\n+    jsdocParser.parseTypeString(result);\n+  } catch (TypeParseError e) {\n+    // Ignore the parse error and return an empty string instead of result\n+    result = \"\";\n+  }\n+} else {\n+  result = \"\";\n+}\n+return result;\n     return result;\n   }\n ",
    "result_reason": "error: variable result is already defined in method getRemainingJSDocLine()",
    "test_result": "ERROR"
}