{
    "patch": " for (int pt = 0; pt < consumed; ) {\n        int codePoint = Character.codePointAt(input, pos + pt);\n        int charCount = Character.charCount(codePoint);\n        pt += charCount;\n        boolean translated = translate(codePoint, out);\n        if (!translated) {\n            out.write(new String(Character.toChars(codePoint)));\n        }\n }\n",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..49eedff2 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,16 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+ for (int pt = 0; pt < consumed; ) {\n+        int codePoint = Character.codePointAt(input, pos + pt);\n+        int charCount = Character.charCount(codePoint);\n+        pt += charCount;\n+        boolean translated = translate(codePoint, out);\n+        if (!translated) {\n+            out.write(new String(Character.toChars(codePoint)));\n+        }\n+ }\n+\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}