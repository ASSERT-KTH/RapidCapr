{
    "patch": "try {\n    Object returnValue = method.invoke(object, args);\n    Result values = new Result(returnValue);\n    for (Class<?> type : method.getExceptionTypes()) {\n        values.setExceptionValueFor(type, null);\n    }\n    return values;\n} catch (Throwable throwable) {\n    Result values = new Result(null);\n    for (Class<?> type : method.getExceptionTypes()) {\n        if (type.isInstance(throwable)) {\n            values.setExceptionValueFor(type, throwable);\n        } else {\n            values.setExceptionValueFor(type, null);\n        }\n    }\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}