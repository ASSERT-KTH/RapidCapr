{
    "patch": "try {\n   // setting \"ISO8859_1\", however javadoc https://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html\n   // states that \"ISO-8859-1\" is the standard name (with hyphen)\n   byte[] bytes = syntax.getBytes(\"ISO-8859-1\"); //change \"ISO8859_1\" to \"ISO-8859-1\"\n   String str = new String(bytes, \"UTF-8\");\n   // Test str contains only ASCII characters\n   assertTrue(\"String format should contain only ASCII characters\",\n          Charset.forName(\"US-ASCII\").newEncoder().canEncode(str));\n   success = true;\n} catch (UnsupportedEncodingException e) {\n   e.printStackTrace();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}