{
    "patch": "for (int i = start; i < pattern.length(); i++) {\n    pos.setIndex(i); // update index to current position\n    if (escapingOn && c[i] == QUOTE) {\n        next(pos); // move index past the quote\n        return appendTo == null ? null : appendTo.append(QUOTE);\n    }\n    // remaining code unchanged\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..3fd8b380 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,14 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+for (int i = start; i < pattern.length(); i++) {\n+    pos.setIndex(i); // update index to current position\n+    if (escapingOn && c[i] == QUOTE) {\n+        next(pos); // move index past the quote\n+        return appendTo == null ? null : appendTo.append(QUOTE);\n+    }\n+    // remaining code unchanged\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "junit.framework.ComparisonFailure: format Pattern=[1: {0,date,short}], locale=[null] expected:<1: [1/23]/07> but was:<1: [23/01]/07>",
    "test_result": "FAIL"
}