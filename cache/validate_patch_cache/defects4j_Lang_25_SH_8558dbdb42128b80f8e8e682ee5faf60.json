{
    "patch": "// start of the original buggy hunk\nStringBuilder tmp = new StringBuilder(str.length() + 16);\nfor (int i = 0; i < str.length(); i++) {\n    char c2 = str.charAt(i);\n    if (c2 == '\\r') {\n        continue;\n    }\n    if (c2 == '\\\"') {\n        tmp.append(\"\\\\\\\"\");\n    } else if (c2 == '\\\\') {\n        tmp.append(\"\\\\\\\\\");\n    } else if (c2 == '\\t') {\n        tmp.append(\"\\\\t\");\n    } else if (c2 == '\\n') {\n        tmp.append(\"\\\\n\");\n    } else if (c2 == '\\b') {\n        tmp.append(\"\\\\b\");\n    } else if (c2 == '\\f') {\n        tmp.append(\"\\\\f\");\n    } else if ((c2 > 0x001f) && (c2 < 0x007f)) {\n        tmp.append(c2);\n    } else {\n        tmp.append(\"\\\\u\");\n        tmp.append(hexDigit((c2 >> 12) & 0xF));\n        tmp.append(hexDigit((c2 >> 8) & 0xF));\n        tmp.append(hexDigit((c2 >> 4) & 0xF));\n        tmp.append(hexDigit(c2 & 0xF));\n    }\n    String result = tmp.toString();\n}\n// end of the original buggy hunk",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}