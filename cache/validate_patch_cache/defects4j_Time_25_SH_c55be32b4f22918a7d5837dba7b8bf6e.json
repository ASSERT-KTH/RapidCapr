{
    "patch": "            if (offsetLocal != offsetAdjusted) {\n                long nextLocal = nextTransition(instantLocal - offsetAdjusted);\n                long nextAdjusted = nextTransition(instantAdjusted);\n\n                if (nextLocal == nextAdjusted && offsetLocal > offsetAdjusted) {\n                    return offsetAdjusted;\n                }\n\n                int dst = 0;\n                if (offsetLocal > offsetAdjusted) {\n                    dst = 1;\n                } else if (offsetLocal < offsetAdjusted) {\n                    dst = -1;\n                } else if (instantLocal > nextLocal && instantAdjusted < nextAdjusted) {\n                    dst = -1;\n                } else if (instantLocal < nextLocal && instantAdjusted > nextAdjusted) {\n                    dst = 1;\n                }\n\n                return offsetAdjusted + dst;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..f6f95f5a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,27 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal != offsetAdjusted) {\n+                long nextLocal = nextTransition(instantLocal - offsetAdjusted);\n+                long nextAdjusted = nextTransition(instantAdjusted);\n+\n+                if (nextLocal == nextAdjusted && offsetLocal > offsetAdjusted) {\n+                    return offsetAdjusted;\n+                }\n+\n+                int dst = 0;\n+                if (offsetLocal > offsetAdjusted) {\n+                    dst = 1;\n+                } else if (offsetLocal < offsetAdjusted) {\n+                    dst = -1;\n+                } else if (instantLocal > nextLocal && instantAdjusted < nextAdjusted) {\n+                    dst = -1;\n+                } else if (instantLocal < nextLocal && instantAdjusted > nextAdjusted) {\n+                    dst = 1;\n+                }\n+\n+                return offsetAdjusted + dst;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}