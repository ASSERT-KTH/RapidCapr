{
    "patch": "private static String unescape(String str, boolean strict) {\n    int len = str.length();\n    StringBuilder sb = new StringBuilder(len);\n    boolean success = true;\n    int i = 0;\n    while (i < len) {\n        char c = str.charAt(i++);\n        if (c == '\\\\') {\n            if (i < len) {\n                c = str.charAt(i++);\n                switch (c) {\n                    case '\\\\':\n                        sb.append('\\\\');\n                        break;\n                    case '\\'':\n                        sb.append('\\'');\n                        break;\n                    case '\\\"':\n                        sb.append('\"');\n                        break;\n                    case 'r':\n                        sb.append('\\r');\n                        break;\n                    case 'f':\n                        sb.append('\\f');\n                        break;\n                    case 't':\n                        sb.append('\\t');\n                        break;\n                    case 'n':\n                        sb.append('\\n');\n                        break;\n                    case 'b':\n                        sb.append('\\b');\n                        break;\n                    case 'u':\n                        if (i + 4 <= len) {\n                            // Unicode character\n                            String unicode = str.substring(i, i + 4);\n                            try {\n                                char cc = (char) Integer.parseInt(unicode, 16);\n                                sb.append(cc);\n                                i += 4;\n                            } catch (NumberFormatException e) {\n                                success = false;\n                                i += 4;\n                            }\n                        } else {\n                            success = false;\n                            i += 4;\n                        }\n                        break;\n                    // ISO8859_1 Character\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                        int continueAt = i - 1;  // handle first char outside of loop\n                        int octal = Character.digit(c, 8);\n                        c = 0;\n                        while (i < len) {\n                            c = str.charAt(i);\n                            if (c < '0' || c > '7') {\n                                break;\n                            }\n                            octal = octal * 8 + Character.digit(c, 8);\n                            i++;\n                        }\n                        sb.append((char) octal);\n                        i = (c == '\\\\' && i < len) ? i + 1 : i;\n                        break;\n                    default:\n                        if (strict) {\n                            success = false;\n                            break;\n                        }\n                        sb.append(c);\n                        break;\n                }\n            } else {\n                if (strict) {\n                    success = false;\n                    break;\n                }\n                sb.append('\\\\');\n            }\n        } else {\n            sb.append(c);\n        }\n    }\n    return success ? sb.toString() : null;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}