{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null) {\n        throw new IllegalStateException(\"JSDoc line is null\");\n    }\n    result = result.trim();\n    if (result.isEmpty()) {\n        return \"\";\n    }\n    // Remove any leading asterisk\n    if (result.charAt(0) == '*') {\n        result = result.substring(1).trim();\n    }\n    // If the line ends with a `.` or a `;`, remove it\n    char lastChar = result.charAt(result.length() - 1);\n    if (lastChar == '.' || lastChar == ';') {\n        result = result.substring(0, result.length() - 1).trim();\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..66bafde8 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,26 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+    if (result == null) {\n+        throw new IllegalStateException(\"JSDoc line is null\");\n+    }\n+    result = result.trim();\n+    if (result.isEmpty()) {\n+        return \"\";\n+    }\n+    // Remove any leading asterisk\n+    if (result.charAt(0) == '*') {\n+        result = result.substring(1).trim();\n+    }\n+    // If the line ends with a `.` or a `;`, remove it\n+    char lastChar = result.charAt(result.length() - 1);\n+    if (lastChar == '.' || lastChar == ';') {\n+        result = result.substring(0, result.length() - 1).trim();\n+    }\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "junit.framework.ComparisonFailure: expected:<Another[ function.]> but was:<Another[function]>",
    "test_result": "FAIL"
}