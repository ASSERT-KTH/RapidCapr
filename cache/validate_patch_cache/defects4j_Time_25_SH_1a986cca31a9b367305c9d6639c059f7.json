{
    "patch": "else if (offsetLocal > offsetAdjusted) {\n    // We are in the period stretching from the end of daylight saving\n    // time to the next non-daylight saving period.\n    // In this period, the time units fall back an hour.  \n    long prevLocal = previousTransition(instantAdjusted);\n    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n    if (prevLocal == prevAdjusted) {\n        return offsetAdjusted;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..37eed54b 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+else if (offsetLocal > offsetAdjusted) {\n+    // We are in the period stretching from the end of daylight saving\n+    // time to the next non-daylight saving period.\n+    // In this period, the time units fall back an hour.  \n+    long prevLocal = previousTransition(instantAdjusted);\n+    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+    if (prevLocal == prevAdjusted) {\n+        return offsetAdjusted;\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}