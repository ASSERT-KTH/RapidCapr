{
    "patch": "        if (n.isScript()) {\n          return false;\n        }\n\n        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {\n          return true;\n        }\n\n        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {\n          return true;\n        }\n\n        boolean sideEffect = false;\n        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n          if (apply(c)) {\n            sideEffect = true;\n            if (!ControlFlowGraph.isEnteringNewCfgNode(c)) {\n              return true;\n            }\n          }\n        }\n\n        return sideEffect && !n.isExprResult();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..0f60ce90 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,29 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isScript()) {\n+          return false;\n+        }\n+\n+        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {\n+          return true;\n+        }\n+\n+        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {\n+          return true;\n+        }\n+\n+        boolean sideEffect = false;\n+        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n+          if (apply(c)) {\n+            sideEffect = true;\n+            if (!ControlFlowGraph.isEnteringNewCfgNode(c)) {\n+              return true;\n+            }\n+          }\n+        }\n+\n+        return sideEffect && !n.isExprResult();\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}