{
    "patch": "public class StringUtils {\n\n    public static boolean containsAny(final char[] str, final char[] searchChars) {\n        if (isEmpty(str) || isEmpty(searchChars)) {\n            return false;\n        }\n        final Set<Character> set = new HashSet<>(Arrays.asList(toObject(searchChars)));\n        for (final char c : str) {\n            if (set.contains(c)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static Character[] toObject(final char[] chars) {\n        final int length = chars.length;\n        final Character[] array = new Character[length];\n        for (int i = 0; i < length; i++) {\n            array[i] = chars[i];\n        }\n        return array;\n    }\n\n    public static boolean isEmpty(final CharSequence cs) {\n        return cs == null || cs.length() == 0;\n    }\n\n    public static boolean isEmpty(final char[] array) {\n        return array == null || array.length == 0;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..3ea96ae0 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,38 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+\n+    public static boolean containsAny(final char[] str, final char[] searchChars) {\n+        if (isEmpty(str) || isEmpty(searchChars)) {\n+            return false;\n+        }\n+        final Set<Character> set = new HashSet<>(Arrays.asList(toObject(searchChars)));\n+        for (final char c : str) {\n+            if (set.contains(c)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static Character[] toObject(final char[] chars) {\n+        final int length = chars.length;\n+        final Character[] array = new Character[length];\n+        for (int i = 0; i < length; i++) {\n+            array[i] = chars[i];\n+        }\n+        return array;\n+    }\n+\n+    public static boolean isEmpty(final CharSequence cs) {\n+        return cs == null || cs.length() == 0;\n+    }\n+\n+    public static boolean isEmpty(final char[] array) {\n+        return array == null || array.length == 0;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}