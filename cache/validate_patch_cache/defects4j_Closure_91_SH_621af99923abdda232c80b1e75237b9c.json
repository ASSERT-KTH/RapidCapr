{
    "patch": "if (NodeUtil.isNameDeclaration(parent)) {\n  // Don't traverse functions that are getting lent to a prototype.\n  String name = NodeUtil.getBestLValueName(n);\n  Var var = t.getScope().getVar(name);\n  if (var == null || !var.isLvalue()) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..99d3bf81 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,14 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+if (NodeUtil.isNameDeclaration(parent)) {\n+  // Don't traverse functions that are getting lent to a prototype.\n+  String name = NodeUtil.getBestLValueName(n);\n+  Var var = t.getScope().getVar(name);\n+  if (var == null || !var.isLvalue()) {\n+    return false;\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}