{
    "patch": "        // check if the initial guess is a bracket\n        double yInitial = f.value(initial);\n        double yMin = f.value(min);\n        double yMax = f.value(max);\n        if ((yInitial - yMin) * (yInitial - yMax) > 0) {\n            throw new IllegalArgumentException(\"Initialization with endpoints that do not bracket the root is not supported. \"\n                    + \"[min, initial, max] = [\" + min + \", \" + initial + \", \" + max + \"], \"\n                    + \"[f(min), f(initial), f(max)] = [\" + yMin + \", \" + yInitial + \", \" + yMax + \"]\");\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..e30c4b474 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,15 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // check if the initial guess is a bracket\n+        double yInitial = f.value(initial);\n+        double yMin = f.value(min);\n+        double yMax = f.value(max);\n+        if ((yInitial - yMin) * (yInitial - yMax) > 0) {\n+            throw new IllegalArgumentException(\"Initialization with endpoints that do not bracket the root is not supported. \"\n+                    + \"[min, initial, max] = [\" + min + \", \" + initial + \", \" + max + \"], \"\n+                    + \"[f(min), f(initial), f(max)] = [\" + yMin + \", \" + yInitial + \", \" + yMax + \"]\");\n+        }\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: variable yInitial is already defined in method solve(UnivariateRealFunction,double,double,double)",
    "test_result": "ERROR"
}