{
    "patch": "      Node grandparent = NodeUtil.getEnclosingFunction(parent);\n      if (grandparent != null) {\n        JSDocInfo grandparentJsDoc = getFunctionJsDocInfo(grandparent);\n        if (grandparentJsDoc != null && grandparentJsDoc.isConstructor()) {\n          return false;\n        }\n      }\n\n      return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..1bdd6590 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,15 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = NodeUtil.getEnclosingFunction(parent);\n+      if (grandparent != null) {\n+        JSDocInfo grandparentJsDoc = getFunctionJsDocInfo(grandparent);\n+        if (grandparentJsDoc != null && grandparentJsDoc.isConstructor()) {\n+          return false;\n+        }\n+      }\n+\n+      return true;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}