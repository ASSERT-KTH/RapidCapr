{
    "patch": "import com.ibm.icu.text.MessageFormat;\nimport com.ibm.icu.text.SearchIterator;\nimport com.ibm.icu.util.LocaleData;\n\npublic static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n\n    int start = 0;\n    int matchLength = 0;\n    int slen = str.length();\n    SearchIterator itr = StringSearch.prepareSearchIterator(searchStr, true, LocaleData.IRREGULAR_SEPARATOR, false);\n    for (int i = 0; i < slen; i += matchLength) {\n        itr.setTarget(str);\n        itr.setIndex(i);\n        matchLength = itr.next();\n        if (matchLength != SearchIterator.DONE) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..b452f673 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,29 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+import com.ibm.icu.text.MessageFormat;\n+import com.ibm.icu.text.SearchIterator;\n+import com.ibm.icu.util.LocaleData;\n+\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if (str == null || searchStr == null) {\n+        return false;\n+    }\n+\n+    int start = 0;\n+    int matchLength = 0;\n+    int slen = str.length();\n+    SearchIterator itr = StringSearch.prepareSearchIterator(searchStr, true, LocaleData.IRREGULAR_SEPARATOR, false);\n+    for (int i = 0; i < slen; i += matchLength) {\n+        itr.setTarget(str);\n+        itr.setIndex(i);\n+        matchLength = itr.next();\n+        if (matchLength != SearchIterator.DONE) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n     }\n \n     // IndexOfAny chars",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}