{
    "patch": "public static double triangle_area(double a, double h) {\n    if (a <= 0 || h <= 0) {\n        throw new IllegalArgumentException(\"Input values must be positive\");\n    }\n    double area = 0;\n    try {\n        area = Math.multiplyExact(a, h);\n        area = Math.floorDiv(area, 2);\n    } catch (ArithmeticException e) {\n        throw new IllegalArgumentException(\"Input values result in arithmetic overflow\");\n    }\n    return area;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIANGLE_AREA.java b/src/main/java/humaneval/buggy/TRIANGLE_AREA.java\nindex a34dabc..29db126 100644\n--- a/src/main/java/humaneval/buggy/TRIANGLE_AREA.java\n+++ b/src/main/java/humaneval/buggy/TRIANGLE_AREA.java\n@@ -5,7 +5,17 @@ package humaneval.buggy;\n 7.5 */\n \n public class TRIANGLE_AREA {\n-    public static double triangle_area(double a, double h) {\n-        return a * h;\n+public static double triangle_area(double a, double h) {\n+    if (a <= 0 || h <= 0) {\n+        throw new IllegalArgumentException(\"Input values must be positive\");\n     }\n+    double area = 0;\n+    try {\n+        area = Math.multiplyExact(a, h);\n+        area = Math.floorDiv(area, 2);\n+    } catch (ArithmeticException e) {\n+        throw new IllegalArgumentException(\"Input values result in arithmetic overflow\");\n+    }\n+    return area;\n+}\n }",
    "result_reason": " /tmp/humaneval-TRIANGLE_AREA/src/main/java/humaneval/buggy/TRIANGLE_AREA.java:[14,20] no suitable method found for multiplyExact(double,double)",
    "test_result": "ERROR"
}