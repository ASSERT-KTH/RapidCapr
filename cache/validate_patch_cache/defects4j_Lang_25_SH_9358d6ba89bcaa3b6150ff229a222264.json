{
    "patch": "if (ch < 0x20) {\n    strbuf.append('\\\\');\n    strbuf.append('u');\n    if (ch < 0x10) {\n        strbuf.append('0');\n        strbuf.append('0');\n        strbuf.append(HEX_CHARS[ch]);\n    } else {\n        strbuf.append('0');\n        strbuf.append(HEX_CHARS[ch >>> 4]);\n        strbuf.append(HEX_CHARS[ch & 0x0f]);\n    }\n} else if (ch < 0x7f) {\n    if (ch == '\\\\' || ch == '\\\"') {\n        strbuf.append('\\\\');\n    }\n    strbuf.append((char) ch);\n} else if (ch == 0x2028) {\n    strbuf.append(\"\\\\u2028\");\n} else if (ch == 0x2029) {\n    strbuf.append(\"\\\\u2029\");\n} else if (ch <= 0xff) {\n    strbuf.append(\"\\\\u00\");\n    strbuf.append(HEX_CHARS[ch >>> 4]);\n    strbuf.append(HEX_CHARS[ch & 0x0f]);\n} else {\n    strbuf.append(\"\\\\u\");\n    strbuf.append(HEX_CHARS[ch >>> 12]);\n    strbuf.append(HEX_CHARS[(ch >>> 8) & 0x0f]);\n    strbuf.append(HEX_CHARS[(ch >>> 4) & 0x0f]);\n    strbuf.append(HEX_CHARS[ch & 0x0f]);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}