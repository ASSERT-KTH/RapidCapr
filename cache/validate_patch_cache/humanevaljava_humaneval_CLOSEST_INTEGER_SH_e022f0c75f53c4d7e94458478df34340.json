{
    "patch": "        double num = Double.parseDouble(value);\n        int result = 0;\n        if (value.substring(value.length() - 2).equals(\".5\")) {\n            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n        } else if (value.length() > 0){\n            result = (int)Math.round(num);\n        }\n\n        return result;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..c518dc6 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -23,6 +23,8 @@ public class CLOSEST_INTEGER {\n                 value = value.substring(0, value.length() - 1);\n         }\n \n+        double num = Double.parseDouble(value);\n+        int result = 0;\n         double num = Double.parseDouble(value);\n         int result = 0;\n         if (value.substring(value.length() - 2).equals(\".5\")) {\n@@ -31,6 +33,11 @@ public class CLOSEST_INTEGER {\n             result = (int)Math.round(num);\n         }\n \n+        return result;\n+        } else if (value.length() > 0){\n+            result = (int)Math.round(num);\n+        }\n+\n         return result;\n     }\n }",
    "result_reason": " /tmp/humaneval-CLOSEST_INTEGER/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java:[37,11] illegal start of type",
    "test_result": "ERROR"
}