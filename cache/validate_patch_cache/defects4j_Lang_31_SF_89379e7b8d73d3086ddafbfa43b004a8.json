{
    "patch": "public static boolean containsAny(CharSequence str, char... searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    int len = str.length();\n    if (searchChars.length == 0) {\n        return false;\n    }\n    boolean[] chars = new boolean[Character.MAX_VALUE + 1];\n    for (char searchChar : searchChars) {\n        if (Character.isHighSurrogate(searchChar)) {\n            continue;\n        }\n        chars[searchChar] = true;\n    }\n    for (int i = 0; i < len; i++) {\n        char ch = str.charAt(i);\n        if (Character.isHighSurrogate(ch)) {\n            if (i + 1 >= len) {\n                return false;\n            }\n            char ch2 = str.charAt(i + 1);\n            int codePoint = Character.toCodePoint(ch, ch2);\n            if (chars[codePoint]) {\n                return true;\n            }\n            i++;\n        } else if (chars[ch]) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..e2ad48a3 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,39 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char... searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    int len = str.length();\n+    if (searchChars.length == 0) {\n+        return false;\n+    }\n+    boolean[] chars = new boolean[Character.MAX_VALUE + 1];\n+    for (char searchChar : searchChars) {\n+        if (Character.isHighSurrogate(searchChar)) {\n+            continue;\n+        }\n+        chars[searchChar] = true;\n+    }\n+    for (int i = 0; i < len; i++) {\n+        char ch = str.charAt(i);\n+        if (Character.isHighSurrogate(ch)) {\n+            if (i + 1 >= len) {\n+                return false;\n+            }\n+            char ch2 = str.charAt(i + 1);\n+            int codePoint = Character.toCodePoint(ch, ch2);\n+            if (chars[codePoint]) {\n+                return true;\n+            }\n+            i++;\n+        } else if (chars[ch]) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}