{
    "patch": "public int countOccurrences(String str, char c) {\n    int count = 0; \n    for (int i = 0; i < str.length(); i++) {\n        if (str.charAt(i) == c) {\n            count++;\n        }\n    }\n    return count;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..0d88058eb 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,15 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public int countOccurrences(String str, char c) {\n+    int count = 0; \n+    for (int i = 0; i < str.length(); i++) {\n+        if (str.charAt(i) == c) {\n+            count++;\n+        }\n+    }\n+    return count;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}