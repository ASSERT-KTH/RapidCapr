{
    "patch": "@Override\npublic ReturnValue execute(Class<?> returnType, Object... args) {\n    ReturnValue result = new ReturnValue();\n    try {\n        Object returnValue = method.invoke(targetObject, args);\n        result.setReturnValue(returnValue);\n    } catch (InvocationTargetException e) {\n        result.setExceptionThrown(true);\n        result.setExceptionType(e.getCause().getClass());\n        result.setExceptionMessage(e.getCause().getMessage());\n    } catch (IllegalAccessException e) {\n        result.setExceptionThrown(true);\n        result.setExceptionType(e.getClass());\n        result.setExceptionMessage(e.getMessage());\n    }\n    if (returnType == Iterable.class) {\n        result.setReturnValue(Collections.emptySet());\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}