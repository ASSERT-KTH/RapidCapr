{
    "patch": "    public static int fib(int n) {\n        int[] memo = new int[n + 1];\n        return memoizedFib(n, memo);\n    }\n\n    private static int memoizedFib(int n, int[] memo) {\n        if (n <= 1) {\n            return n;\n        }\n        if (memo[n] == 0) {\n            memo[n] = memoizedFib(n - 1, memo) + memoizedFib(n - 2, memo);\n        }\n        return memo[n];\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB.java b/src/main/java/humaneval/buggy/FIB.java\nindex fdc9c32..227c8b9 100644\n--- a/src/main/java/humaneval/buggy/FIB.java\n+++ b/src/main/java/humaneval/buggy/FIB.java\n@@ -10,6 +10,20 @@ package humaneval.buggy;\n \n public class FIB {\n     public static int fib(int n) {\n+    public static int fib(int n) {\n+        int[] memo = new int[n + 1];\n+        return memoizedFib(n, memo);\n+    }\n+\n+    private static int memoizedFib(int n, int[] memo) {\n+        if (n <= 1) {\n+            return n;\n+        }\n+        if (memo[n] == 0) {\n+            memo[n] = memoizedFib(n - 1, memo) + memoizedFib(n - 2, memo);\n+        }\n+        return memo[n];\n+    }\n         return fib(n - 1) + fib(n - 2);\n     }\n }",
    "result_reason": " /tmp/humaneval-FIB/src/main/java/humaneval/buggy/FIB.java:[13,5] illegal start of expression",
    "test_result": "ERROR"
}