{
    "patch": "        super();\n        iDuration = duration;\n        // Bug fix [3264409]:\n        long seconds = duration / DateTimeConstants.MILLIS_PER_SECOND;\n        long minutes = seconds / DateTimeConstants.SECONDS_PER_MINUTE;\n        long hours = minutes / DateTimeConstants.MINUTES_PER_HOUR;\n        int days = (int) (duration / DateTimeConstants.MILLIS_PER_DAY);\n        int weeks = 0;\n        if (days >= 7) {\n            weeks = days / 7;\n            days -= weeks * 7;\n        }\n        iYears = 0;\n        iMonths = 0;\n        iDays = days;\n        iHours = (int) (hours % 24);\n        iMinutes = (int) (minutes % 60);\n        iSeconds = (int) (seconds % 60);\n        iMillis = (int) (duration % 1000);\n        iEndInterval = true;\n        iWeeks = weeks;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..c8f72638 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,27 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        super();\n+        iDuration = duration;\n+        // Bug fix [3264409]:\n+        long seconds = duration / DateTimeConstants.MILLIS_PER_SECOND;\n+        long minutes = seconds / DateTimeConstants.SECONDS_PER_MINUTE;\n+        long hours = minutes / DateTimeConstants.MINUTES_PER_HOUR;\n+        int days = (int) (duration / DateTimeConstants.MILLIS_PER_DAY);\n+        int weeks = 0;\n+        if (days >= 7) {\n+            weeks = days / 7;\n+            days -= weeks * 7;\n+        }\n+        iYears = 0;\n+        iMonths = 0;\n+        iDays = days;\n+        iHours = (int) (hours % 24);\n+        iMinutes = (int) (minutes % 60);\n+        iSeconds = (int) (seconds % 60);\n+        iMillis = (int) (duration % 1000);\n+        iEndInterval = true;\n+        iWeeks = weeks;\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}