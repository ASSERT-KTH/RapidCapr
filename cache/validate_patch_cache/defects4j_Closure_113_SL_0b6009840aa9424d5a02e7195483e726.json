{
    "patch": "        if (provided == null || (!provided.isExplicitlyProvided() && !providedNames.containsKey(ns))) {\n          unrecognizedRequires.add(\n              new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else if (provided.explicitModule != null && provided.explicitModule != t.getModule()) {\n          JSModule module = t.getModule();\n          JSModule explicitModule = provided.explicitModule;\n          if (moduleGraph != null && !moduleGraph.dependsOn(module, explicitModule)) {\n            compiler.report(\n              t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n                  explicitModule.getName(),\n                  module.getName()));\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..86d7ec22 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,18 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+        if (provided == null || (!provided.isExplicitlyProvided() && !providedNames.containsKey(ns))) {\n+          unrecognizedRequires.add(\n+              new UnrecognizedRequire(n, ns, t.getSourceName()));\n+        } else if (provided.explicitModule != null && provided.explicitModule != t.getModule()) {\n+          JSModule module = t.getModule();\n+          JSModule explicitModule = provided.explicitModule;\n+          if (moduleGraph != null && !moduleGraph.dependsOn(module, explicitModule)) {\n+            compiler.report(\n+              t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n+                  explicitModule.getName(),\n+                  module.getName()));\n+          }\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}