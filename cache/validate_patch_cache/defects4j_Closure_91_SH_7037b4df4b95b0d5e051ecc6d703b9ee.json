{
    "patch": "if (parent != null && parent.getType() == Token.NEW) {\n  JSDocInfo jsDoc = NodeUtil.getBestJSDocInfo(n);\n  if (jsDoc != null && jsDoc.hasThisType() && jsDoc.hasType(\"Function\")) {\n    return false;\n  }\n}\n\nif (parent != null && NodeUtil.isGet(parent)) {\n  Node property = parent.getLastChild();\n  // Don't traverse Object methods.\n  if (property.isString() && OBJECT_METHODS.contains(property.getString())) {\n    return false;\n  }\n  // Don't traverse functions that are getting lent to a prototype.\n  if (property.isString() && \"prototype\".equals(property.getString())) {\n    if (parent.getParent() != null && NodeUtil.isGet(parent.getParent())) {\n      Node pparent = parent.getParent();\n      Node property2 = pparent.getLastChild();\n      if (property2.isString() &&\n          \"constructor\".equals(property2.getString())) {\n        return false;\n      }\n    }\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..f599cd36 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,32 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+if (parent != null && parent.getType() == Token.NEW) {\n+  JSDocInfo jsDoc = NodeUtil.getBestJSDocInfo(n);\n+  if (jsDoc != null && jsDoc.hasThisType() && jsDoc.hasType(\"Function\")) {\n+    return false;\n+  }\n+}\n+\n+if (parent != null && NodeUtil.isGet(parent)) {\n+  Node property = parent.getLastChild();\n+  // Don't traverse Object methods.\n+  if (property.isString() && OBJECT_METHODS.contains(property.getString())) {\n+    return false;\n+  }\n+  // Don't traverse functions that are getting lent to a prototype.\n+  if (property.isString() && \"prototype\".equals(property.getString())) {\n+    if (parent.getParent() != null && NodeUtil.isGet(parent.getParent())) {\n+      Node pparent = parent.getParent();\n+      Node property2 = pparent.getLastChild();\n+      if (property2.isString() &&\n+          \"constructor\".equals(property2.getString())) {\n+        return false;\n+      }\n+    }\n+    return false;\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: variable jsDoc is already defined in method shouldTraverse(NodeTraversal,Node,Node)",
    "test_result": "ERROR"
}