{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    if ((offsetLocal - offsetAdjusted) < 0) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantAdjusted - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            return offsetLocal;\n        }\n        offsetAdjusted = getOffset(nextLocal - offsetLocal);\n    } else { // added else clause\n        long prevLocal = prevTransition(instantAdjusted);\n        long prevAdjusted = prevTransition(instantAdjusted - offsetAdjusted);\n        if (prevLocal != prevAdjusted) {\n            return offsetLocal;\n        }\n        offsetAdjusted = getOffset(prevLocal - offsetLocal);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a2ef6eb9 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,23 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    if ((offsetLocal - offsetAdjusted) < 0) {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantAdjusted - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            return offsetLocal;\n+        }\n+        offsetAdjusted = getOffset(nextLocal - offsetLocal);\n+    } else { // added else clause\n+        long prevLocal = prevTransition(instantAdjusted);\n+        long prevAdjusted = prevTransition(instantAdjusted - offsetAdjusted);\n+        if (prevLocal != prevAdjusted) {\n+            return offsetLocal;\n+        }\n+        offsetAdjusted = getOffset(prevLocal - offsetLocal);\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable offsetAdjusted",
    "test_result": "ERROR"
}