{
    "patch": "        currentFormatField = null;\n        boolean hasStrategy = false;\n        for (Strategy s : strategies) {\n            if (s != null && s.addRegex(this, regex)) {\n                hasStrategy = true;\n                break;\n            }\n        }\n        if (!hasStrategy) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n        parsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..c71b1500 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,18 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        currentFormatField = null;\n+        boolean hasStrategy = false;\n+        for (Strategy s : strategies) {\n+            if (s != null && s.addRegex(this, regex)) {\n+                hasStrategy = true;\n+                break;\n+            }\n+        }\n+        if (!hasStrategy) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+        parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "java.lang.ExceptionInInitializerError",
    "test_result": "FAIL"
}