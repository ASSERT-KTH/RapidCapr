{
    "patch": "// Functions with explicit 'this' types must be called in a GETPROP\n// or GETELEM.\nif (functionType.getThisType() != null) {\n  Node parent = n.getParent();\n  boolean isGetElement = parent.isGetElem();\n  boolean isGetProp = parent.isGetProp();\n  boolean isCall = parent.isCall();\n  boolean isVar = parent.isName();\n  if (!isGetElement && !isGetProp && !isCall && !isVar) {\n    report(t, n, UNSAFE_THIS, childType.toString());\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..a8c74b54 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+// Functions with explicit 'this' types must be called in a GETPROP\n+// or GETELEM.\n+if (functionType.getThisType() != null) {\n+  Node parent = n.getParent();\n+  boolean isGetElement = parent.isGetElem();\n+  boolean isGetProp = parent.isGetProp();\n+  boolean isCall = parent.isCall();\n+  boolean isVar = parent.isName();\n+  if (!isGetElement && !isGetProp && !isCall && !isVar) {\n+    report(t, n, UNSAFE_THIS, childType.toString());\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}