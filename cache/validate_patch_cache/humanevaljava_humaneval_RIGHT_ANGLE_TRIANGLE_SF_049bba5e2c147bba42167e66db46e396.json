{
    "patch": "public static boolean right_angle_triangle(int a, int b, int c) {\n    if (a <= 0 || b <= 0 || c <= 0) { // check if any of the sides are less than or equal to zero\n        return false;\n    }\n    // Sort the sides in ascending order\n    int[] sides = {a, b, c};\n    Arrays.sort(sides);\n    return Math.pow(sides[2], 2) == (Math.pow(sides[0], 2) + Math.pow(sides[1], 2)) && (sides[0] + sides[1] > sides[2]); // Check if the sides form a right-angled triangle and satisfy the triangle inequality\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..d838721 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -9,7 +9,13 @@ package humaneval.buggy;\n // right_angle_triangle(1, 2, 3) == False\n \n public class RIGHT_ANGLE_TRIANGLE {\n-    public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+public static boolean right_angle_triangle(int a, int b, int c) {\n+    if (a <= 0 || b <= 0 || c <= 0) { // check if any of the sides are less than or equal to zero\n+        return false;\n     }\n+    // Sort the sides in ascending order\n+    int[] sides = {a, b, c};\n+    Arrays.sort(sides);\n+    return Math.pow(sides[2], 2) == (Math.pow(sides[0], 2) + Math.pow(sides[1], 2)) && (sides[0] + sides[1] > sides[2]); // Check if the sides form a right-angled triangle and satisfy the triangle inequality\n+}\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[18,5] cannot find symbol",
    "test_result": "ERROR"
}