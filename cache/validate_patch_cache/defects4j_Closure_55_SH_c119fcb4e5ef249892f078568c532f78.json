{
    "patch": "    return NodeUtil.isFunctionExpression(n) \n            && !NodeUtil.isFunctionDeclaration(n)\n            && !NodeUtil.isClassExpression(n.getParentNode());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..9ee3100a 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,9 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    return NodeUtil.isFunctionExpression(n) \n+            && !NodeUtil.isFunctionDeclaration(n)\n+            && !NodeUtil.isClassExpression(n.getParentNode());\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}