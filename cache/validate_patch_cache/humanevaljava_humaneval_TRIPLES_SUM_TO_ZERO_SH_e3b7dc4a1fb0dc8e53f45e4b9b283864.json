{
    "patch": "for (int j = 0; j < numbers.length; j += 1) {\n    for (int k = j + 1; k < numbers.length; k += 1) {\n        if (numbers[i] + numbers[j] + numbers[k] == 0) {\n            return true;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\nindex e851652..5458284 100644\n--- a/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n+++ b/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java\n@@ -20,8 +20,13 @@ False\n public class TRIPLES_SUM_TO_ZERO {\n     public static boolean triples_sum_to_zero(int[] numbers) {\n         for (int i = 0; i < numbers.length; i += 1) {\n-            for (int j = i; j < numbers.length; j += 1) {\n-                for (int k = j; k < numbers.length; k += 1) {\n+for (int j = 0; j < numbers.length; j += 1) {\n+    for (int k = j + 1; k < numbers.length; k += 1) {\n+        if (numbers[i] + numbers[j] + numbers[k] == 0) {\n+            return true;\n+        }\n+    }\n+}\n                     if (numbers[i] + numbers[j] + numbers[k] == 0)\n                         return true;\n                 }",
    "result_reason": " /tmp/humaneval-TRIPLES_SUM_TO_ZERO/src/main/java/humaneval/buggy/TRIPLES_SUM_TO_ZERO.java:[35,9] class, interface, or enum expected",
    "test_result": "ERROR"
}