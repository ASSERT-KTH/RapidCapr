{
    "patch": "import org.apache.commons.math3.util.MathUtils;\n\npublic class MyClass {\n    public static double regularizedGamma(double a, double x) {\n        final int maxIterations = 1000;\n        final double epsilon = MathUtils.EPSILON;\n        final double factor = Math.exp(a * Math.log(x) - x - MathUtils.logGamma(a));\n        double aplus = a;\n        double sum = 1 / aplus;\n        double delta = sum;\n        \n        for (int i = 1; i < maxIterations; i++) {\n            aplus += 1;\n            delta *= x / aplus;\n            sum += delta;\n            if (Math.abs(delta) < Math.abs(sum) * epsilon) {\n                return sum * factor;\n            }\n        }\n        throw new RuntimeException(\"Max iterations reached\");\n    }\n}\n",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..6e7b6de17 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.util.MathUtils;\n+\n+public class MyClass {\n+    public static double regularizedGamma(double a, double x) {\n+        final int maxIterations = 1000;\n+        final double epsilon = MathUtils.EPSILON;\n+        final double factor = Math.exp(a * Math.log(x) - x - MathUtils.logGamma(a));\n+        double aplus = a;\n+        double sum = 1 / aplus;\n+        double delta = sum;\n+        \n+        for (int i = 1; i < maxIterations; i++) {\n+            aplus += 1;\n+            delta *= x / aplus;\n+            sum += delta;\n+            if (Math.abs(delta) < Math.abs(sum) * epsilon) {\n+                return sum * factor;\n+            }\n+        }\n+        throw new RuntimeException(\"Max iterations reached\");\n+    }\n+}\n+\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}