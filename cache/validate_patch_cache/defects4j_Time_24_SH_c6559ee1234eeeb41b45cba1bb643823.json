{
    "patch": "            for (int i = 0; i < count; i++) {\n                try {\n                    savedFields[i].set(millis, resetFields);\n                    millis = savedFields[i].getValue();\n                } catch (IllegalFieldValueException e) {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    throw e;\n                }\n                if (savedFields[i].getFieldType().equals(DateTimeFieldType.monthOfYear()) && savedFields[i].getValue() == 0) {\n                    // Wrap month around to December of previous year\n                    DateTimeField yearField = iChrono.year();\n                    int year = yearField.get(millis);\n                    millis = yearField.set(millis, year - 1);\n                    millis = savedFields[i].set(millis, 12);\n                }\n                if (millis < iMillis) {\n                    throw new IllegalArgumentException(\"The parsed date is before the supported date range\");\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1eab6994 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            for (int i = 0; i < count; i++) {\n+                try {\n+                    savedFields[i].set(millis, resetFields);\n+                    millis = savedFields[i].getValue();\n+                } catch (IllegalFieldValueException e) {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    throw e;\n+                }\n+                if (savedFields[i].getFieldType().equals(DateTimeFieldType.monthOfYear()) && savedFields[i].getValue() == 0) {\n+                    // Wrap month around to December of previous year\n+                    DateTimeField yearField = iChrono.year();\n+                    int year = yearField.get(millis);\n+                    millis = yearField.set(millis, year - 1);\n+                    millis = savedFields[i].set(millis, 12);\n+                }\n+                if (millis < iMillis) {\n+                    throw new IllegalArgumentException(\"The parsed date is before the supported date range\");\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}