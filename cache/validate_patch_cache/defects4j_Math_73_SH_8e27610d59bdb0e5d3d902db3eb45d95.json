{
    "patch": "        // ensure initial guess is within the given interval\n        if (initial < min || initial > max) {\n            throw new IllegalArgumentException(\"Initial guess is outside of the given interval. Interval: [\" + min + \",\" + max + \"], Initial guess value: \" + initial);\n        }\n\n        // return the initial guess if it is good enough\n        double yInitial = f.value(initial);\n        if (Math.abs(yInitial) <= functionValueAccuracy) {\n            setResult(initial, 0);\n            return result;\n        }\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(min);\n        if (Math.abs(yMin) <= functionValueAccuracy) {\n            setResult(yMin, 0);\n            return result;\n        }\n\n        // return the second endpoint if it is good enough\n        double yMax = f.value(max);\n        if (Math.abs(yMax) <= functionValueAccuracy) {\n            setResult(yMax, 0);\n            return result;\n        }\n\n        // ensure that min and max bracket the root\n        if ((yMin > 0 && yMax > 0) || (yMin < 0 && yMax < 0)) {\n            throw new IllegalArgumentException(\"Function values at endpoints do not have different signs. Endpoints: [\" + min + \",\" + max + \"], Values: [\" + yMin + \",\" + yMax + \"]\");\n        }\n\n        // full Brent algorithm starting with provided initial guess\n        return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..616cd5763 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,39 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // ensure initial guess is within the given interval\n+        if (initial < min || initial > max) {\n+            throw new IllegalArgumentException(\"Initial guess is outside of the given interval. Interval: [\" + min + \",\" + max + \"], Initial guess value: \" + initial);\n+        }\n+\n+        // return the initial guess if it is good enough\n+        double yInitial = f.value(initial);\n+        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+            setResult(initial, 0);\n+            return result;\n+        }\n+\n+        // return the first endpoint if it is good enough\n+        double yMin = f.value(min);\n+        if (Math.abs(yMin) <= functionValueAccuracy) {\n+            setResult(yMin, 0);\n+            return result;\n+        }\n+\n+        // return the second endpoint if it is good enough\n+        double yMax = f.value(max);\n+        if (Math.abs(yMax) <= functionValueAccuracy) {\n+            setResult(yMax, 0);\n+            return result;\n+        }\n+\n+        // ensure that min and max bracket the root\n+        if ((yMin > 0 && yMax > 0) || (yMin < 0 && yMax < 0)) {\n+            throw new IllegalArgumentException(\"Function values at endpoints do not have different signs. Endpoints: [\" + min + \",\" + max + \"], Values: [\" + yMin + \",\" + yMax + \"]\");\n+        }\n+\n+        // full Brent algorithm starting with provided initial guess\n+        return solve(f, min, yMin, max, yMax, initial, yInitial);\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: variable yInitial is already defined in method solve(UnivariateRealFunction,double,double,double)",
    "test_result": "ERROR"
}