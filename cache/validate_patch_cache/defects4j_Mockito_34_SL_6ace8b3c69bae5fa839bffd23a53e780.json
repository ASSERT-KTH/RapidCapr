{
    "patch": "    public void captureArgumentsFrom(Invocation i) {\n        int k = 0;\n        for (Object arg : i.getArguments()) {\n            Matcher m = matchers[k];\n            if (m instanceof CapturesArguments) {\n                ((CapturesArguments) m).captureFrom(arg);\n            }\n            k++;\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex c72b119dd..cfb6e4dc6 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -103,10 +103,19 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n     public void captureArgumentsFrom(Invocation i) {\n         int k = 0;\n         for (Matcher m : matchers) {\n+    public void captureArgumentsFrom(Invocation i) {\n+        int k = 0;\n+        for (Object arg : i.getArguments()) {\n+            Matcher m = matchers[k];\n             if (m instanceof CapturesArguments) {\n+                ((CapturesArguments) m).captureFrom(arg);\n+            }\n+            k++;\n+        }\n+    }\n                 ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n             }\n             k++;\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}