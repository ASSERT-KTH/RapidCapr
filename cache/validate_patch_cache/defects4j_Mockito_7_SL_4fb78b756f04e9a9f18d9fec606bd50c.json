{
    "patch": "Type[] actualTypeArgs = getActualTypeArguments(typeVariable);\nif (actualTypeArgs != null) {\n    for (Type actualType : actualTypeArgs) {\n        registerTypeVariablesOn(actualType);\n    }\n} else {\n    registerTypeVariablesOn(typeVariable);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..7c787ee70 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] actualTypeArgs = getActualTypeArguments(typeVariable);\n+if (actualTypeArgs != null) {\n+    for (Type actualType : actualTypeArgs) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+} else {\n+    registerTypeVariablesOn(typeVariable);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}