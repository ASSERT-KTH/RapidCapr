{
    "patch": "        if (len < 2) {\n            // Language code should consist of at least two characters\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        }\n        if (len == 5) {\n            if (str.charAt(2) != '-') {\n                // Separator should be '-' for language and region codes\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n        if (len < 7) {\n            // Language, region and variant codes should consist of at least two characters\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '-' || str.charAt(5) != '_') {\n            // Separator should be '-' for language and region codes, and '_' for region and variant codes\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String language = str.substring(0, 2);\n        String region = str.substring(3, 5);\n        String variant = str.substring(6);\n        if (region.isEmpty() || variant.isEmpty()) {\n            // Language, region and variant codes should consist of at least two characters\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (!Character.isUpperCase(region.charAt(0)) || !Character.isUpperCase(region.charAt(1))) {\n            // Region code should start with two uppercase letters\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (!Character.isDigit(variant.charAt(0))) {\n            // Variant code should start with a digit\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, region, variant);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..8910a07c 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,44 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        if (len < 2) {\n+            // Language code should consist of at least two characters\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 2) {\n+            return new Locale(str, \"\");\n+        }\n+        if (len == 5) {\n+            if (str.charAt(2) != '-') {\n+                // Separator should be '-' for language and region codes\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        }\n+        if (len < 7) {\n+            // Language, region and variant codes should consist of at least two characters\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (str.charAt(2) != '-' || str.charAt(5) != '_') {\n+            // Separator should be '-' for language and region codes, and '_' for region and variant codes\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        String language = str.substring(0, 2);\n+        String region = str.substring(3, 5);\n+        String variant = str.substring(6);\n+        if (region.isEmpty() || variant.isEmpty()) {\n+            // Language, region and variant codes should consist of at least two characters\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (!Character.isUpperCase(region.charAt(0)) || !Character.isUpperCase(region.charAt(1))) {\n+            // Region code should start with two uppercase letters\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (!Character.isDigit(variant.charAt(0))) {\n+            // Variant code should start with a digit\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        return new Locale(language, region, variant);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}