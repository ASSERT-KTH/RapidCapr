{
    "patch": "private static RealMatrix squareRoot(final RealMatrix m) {\n    final int n = m.getRowDimension();\n    final RealMatrix i = MatrixUtils.createRealIdentityMatrix(n);\n    final RealMatrix mNorm = m.scalarMultiply(1.0 / n);\n\n    // Initial guess for the inverse square root\n    RealMatrix x = new CholeskyDecomposition(mNorm).getSolver().getInverse().scalarMultiply(Math.sqrt(n));\n\n    // Perform Newton-Schulz iterations\n    for (int iIter = 0; iIter < 10; ++iIter) {\n        final RealMatrix eyeMinusxm = i.subtract(x.multiply(m));\n        final RealMatrix inv2x = new CholeskyDecomposition(eyeMinusxm).getSolver().getInverse().scalarMultiply(0.5);\n        x = x.add(inv2x).multiply(inv2x.multiply(x));\n    }\n\n    // Compute the square root of the matrix\n    return x.multiply(new CholeskyDecomposition(mNorm).getL());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..6fbbeab0e 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,22 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private static RealMatrix squareRoot(final RealMatrix m) {\n+    final int n = m.getRowDimension();\n+    final RealMatrix i = MatrixUtils.createRealIdentityMatrix(n);\n+    final RealMatrix mNorm = m.scalarMultiply(1.0 / n);\n+\n+    // Initial guess for the inverse square root\n+    RealMatrix x = new CholeskyDecomposition(mNorm).getSolver().getInverse().scalarMultiply(Math.sqrt(n));\n+\n+    // Perform Newton-Schulz iterations\n+    for (int iIter = 0; iIter < 10; ++iIter) {\n+        final RealMatrix eyeMinusxm = i.subtract(x.multiply(m));\n+        final RealMatrix inv2x = new CholeskyDecomposition(eyeMinusxm).getSolver().getInverse().scalarMultiply(0.5);\n+        x = x.add(inv2x).multiply(inv2x.multiply(x));\n     }\n+\n+    // Compute the square root of the matrix\n+    return x.multiply(new CholeskyDecomposition(mNorm).getL());\n+}\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}