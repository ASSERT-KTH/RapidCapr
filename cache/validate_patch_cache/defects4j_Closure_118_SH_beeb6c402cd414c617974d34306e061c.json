{
    "patch": "        if (!(child.isString() || NodeUtil.isGetterDef(child)\n            || NodeUtil.isSetterDef(child))) {\n          // This should never happen.\n          throw new RuntimeException(\n              \"Unexpected OBJECTLIT property type: \" + child.getToken());\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..34650244 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,12 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        if (!(child.isString() || NodeUtil.isGetterDef(child)\n+            || NodeUtil.isSetterDef(child))) {\n+          // This should never happen.\n+          throw new RuntimeException(\n+              \"Unexpected OBJECTLIT property type: \" + child.getToken());\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}