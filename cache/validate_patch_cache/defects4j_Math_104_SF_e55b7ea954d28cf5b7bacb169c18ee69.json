{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    if(x < 0.0 || a <= 0.0) {\n        throw new IllegalArgumentException();\n    }\n    if(x == 0.0) {\n        return 0.0;\n    }\n    double igf = new RegularizedGammaIncomplete().value(a, x);\n    return 1.0 - igf;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..f1e016caf 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,16 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    if(x < 0.0 || a <= 0.0) {\n+        throw new IllegalArgumentException();\n+    }\n+    if(x == 0.0) {\n+        return 0.0;\n+    }\n+    double igf = new RegularizedGammaIncomplete().value(a, x);\n+    return 1.0 - igf;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}