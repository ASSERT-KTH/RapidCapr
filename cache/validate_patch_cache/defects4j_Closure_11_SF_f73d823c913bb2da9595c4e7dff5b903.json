{
    "patch": "public void testGetprop4() throws Exception {\n    String[] warnings = {};\n    ConfigurationParser cp = new ConfigurationParser(warnings);\n    Configuration config = cp.parseConfiguration(Resources.getResourceAsStream(\"mybatis-config.xml\"));\n    assertEquals(1, config.getMapperRegistry().getMappers().size());\n    assertTrue(config.getMapperRegistry().hasMapper(BlogMapper.class));\n    assertEquals(\"com.someone.mapper.BlogMapper\", config.getMapperRegistry().getMapperClassName(BlogMapper.class));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..9400be00 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() throws Exception {\n+    String[] warnings = {};\n+    ConfigurationParser cp = new ConfigurationParser(warnings);\n+    Configuration config = cp.parseConfiguration(Resources.getResourceAsStream(\"mybatis-config.xml\"));\n+    assertEquals(1, config.getMapperRegistry().getMappers().size());\n+    assertTrue(config.getMapperRegistry().hasMapper(BlogMapper.class));\n+    assertEquals(\"com.someone.mapper.BlogMapper\", config.getMapperRegistry().getMapperClassName(BlogMapper.class));\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}