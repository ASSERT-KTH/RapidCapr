{
    "patch": "protected BasePeriod(long duration) {\n    int totalHours = (int) (duration / HOUR_MILLIS);\n    this.weeks = totalHours / WEEK_HOURS;\n    this.days = (totalHours - (weeks * WEEK_HOURS)) / DAY_HOURS;\n    int remainingHours = totalHours - (weeks * WEEK_HOURS) - (days * DAY_HOURS);\n    this.hours = remainingHours;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..33695df4 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,13 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    int totalHours = (int) (duration / HOUR_MILLIS);\n+    this.weeks = totalHours / WEEK_HOURS;\n+    this.days = (totalHours - (weeks * WEEK_HOURS)) / DAY_HOURS;\n+    int remainingHours = totalHours - (weeks * WEEK_HOURS) - (days * DAY_HOURS);\n+    this.hours = remainingHours;\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}