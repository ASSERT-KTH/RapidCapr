{
    "patch": "      if (NodeUtil.isLValue(n) && NodeUtil.getBestJSDocInfo(n).isConstructor()) {\n        return false;\n      }\n      // Do not traverse function literals.\n      return (n.getType() != Token.FUNCTION);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..95619d65 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,11 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isLValue(n) && NodeUtil.getBestJSDocInfo(n).isConstructor()) {\n+        return false;\n+      }\n+      // Do not traverse function literals.\n+      return (n.getType() != Token.FUNCTION);\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}