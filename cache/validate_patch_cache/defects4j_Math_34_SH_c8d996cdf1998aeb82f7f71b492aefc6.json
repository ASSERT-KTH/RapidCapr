{
    "patch": "public Iterator<Chromosome> iterator() {\n    return new Iterator<Chromosome>() {\n        private Iterator<Chromosome> internal = chromosomes.iterator();\n        public boolean hasNext() {\n            return internal.hasNext();\n        }\n        public Chromosome next() {\n            return internal.next();\n        }\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\nindex 1eb005316..9fb00063d 100644\n--- a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n@@ -206,6 +206,19 @@ public abstract class ListPopulation implements Population {\n      * @return chromosome iterator\n      */\n     public Iterator<Chromosome> iterator() {\n-        return chromosomes.iterator();\n+public Iterator<Chromosome> iterator() {\n+    return new Iterator<Chromosome>() {\n+        private Iterator<Chromosome> internal = chromosomes.iterator();\n+        public boolean hasNext() {\n+            return internal.hasNext();\n+        }\n+        public Chromosome next() {\n+            return internal.next();\n+        }\n+        public void remove() {\n+            throw new UnsupportedOperationException();\n+        }\n+    };\n+}\n     }\n }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}