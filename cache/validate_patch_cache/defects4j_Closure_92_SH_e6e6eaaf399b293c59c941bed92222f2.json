{
    "patch": "int lastDotIndex = namespace == null ? -1 : namespace.lastIndexOf('.');\nif (lastDotIndex == 0 || lastDotIndex == namespace.length() - 1) {\n  // If the dot is at the start or end of the namespace, look for the previous dot.\n  lastDotIndex = namespace.lastIndexOf('.', lastDotIndex - 1);\n}\nint indexOfDot = lastDotIndex;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..f5754569 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -786,7 +786,12 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+int lastDotIndex = namespace == null ? -1 : namespace.lastIndexOf('.');\n+if (lastDotIndex == 0 || lastDotIndex == namespace.length() - 1) {\n+  // If the dot is at the start or end of the namespace, look for the previous dot.\n+  lastDotIndex = namespace.lastIndexOf('.', lastDotIndex - 1);\n+}\n+int indexOfDot = lastDotIndex;\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}