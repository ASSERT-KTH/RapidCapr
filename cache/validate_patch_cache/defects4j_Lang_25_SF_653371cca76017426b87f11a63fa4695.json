{
    "patch": "import java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\n\npublic class Main {\n    public static String decodeURL(String s, String enc) throws UnsupportedEncodingException {\n        return URLDecoder.decode(s, enc);\n    }\n\n    public static void main(String[] args) throws UnsupportedEncodingException {\n        String s = \"%C3%A9\";\n        String expected = \"\\u00e9\";\n        String result = decodeURL(s, \"UTF-8\");\n\n        if (!result.equals(expected)) {\n            System.out.println(\"Failed to decode string.\");\n        } else {\n            System.out.println(\"String successfully decoded.\");\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..9783be90 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,26 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+\n+public class Main {\n+    public static String decodeURL(String s, String enc) throws UnsupportedEncodingException {\n+        return URLDecoder.decode(s, enc);\n+    }\n+\n+    public static void main(String[] args) throws UnsupportedEncodingException {\n+        String s = \"%C3%A9\";\n+        String expected = \"\\u00e9\";\n+        String result = decodeURL(s, \"UTF-8\");\n+\n+        if (!result.equals(expected)) {\n+            System.out.println(\"Failed to decode string.\");\n+        } else {\n+            System.out.println(\"String successfully decoded.\");\n+        }\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}