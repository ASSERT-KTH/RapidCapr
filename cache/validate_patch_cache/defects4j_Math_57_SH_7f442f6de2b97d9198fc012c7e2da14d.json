{
    "patch": "final double[] dx2 = new double[pointSet.size()];\ndouble sum = 0;\nwhile (resultSet.size() < k) {\n    // For each data point x, compute D(x), the distance between x and\n    // the nearest center that has already been chosen.\n    for (int i = 0; i < pointSet.size(); i++) {\n        final T p = pointSet.get(i);\n        final Cluster<T> nearest = getNearestCluster(resultSet, p);\n        final double d = p.distanceFrom(nearest.getCenter());\n        sum += d * d;\n        dx2[i] = sum;\n    }\n\n    // Add one new data point as a center. Each point x is chosen with\n    // probability proportional to D(x)2\n    final double r = random.nextDouble() * sum;\n    for (int i = 0 ; i < dx2.length; i++) {\n        if (dx2[i] >= r) {\n            final T p = pointSet.remove(i);\n            resultSet.add(new Cluster<T>(p));\n            break;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java b/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java\nindex b73ac9d3e..d23ee4a7c 100644\n--- a/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java\n+++ b/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java\n@@ -172,7 +172,30 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {\n         while (resultSet.size() < k) {\n             // For each data point x, compute D(x), the distance between x and\n             // the nearest center that has already been chosen.\n-            int sum = 0;\n+final double[] dx2 = new double[pointSet.size()];\n+double sum = 0;\n+while (resultSet.size() < k) {\n+    // For each data point x, compute D(x), the distance between x and\n+    // the nearest center that has already been chosen.\n+    for (int i = 0; i < pointSet.size(); i++) {\n+        final T p = pointSet.get(i);\n+        final Cluster<T> nearest = getNearestCluster(resultSet, p);\n+        final double d = p.distanceFrom(nearest.getCenter());\n+        sum += d * d;\n+        dx2[i] = sum;\n+    }\n+\n+    // Add one new data point as a center. Each point x is chosen with\n+    // probability proportional to D(x)2\n+    final double r = random.nextDouble() * sum;\n+    for (int i = 0 ; i < dx2.length; i++) {\n+        if (dx2[i] >= r) {\n+            final T p = pointSet.remove(i);\n+            resultSet.add(new Cluster<T>(p));\n+            break;\n+        }\n+    }\n+}\n             for (int i = 0; i < pointSet.size(); i++) {\n                 final T p = pointSet.get(i);\n                 final Cluster<T> nearest = getNearestCluster(resultSet, p);",
    "result_reason": "error: variable dx2 is already defined in method <T>chooseInitialCenters(Collection<T>,int,Random)",
    "test_result": "ERROR"
}