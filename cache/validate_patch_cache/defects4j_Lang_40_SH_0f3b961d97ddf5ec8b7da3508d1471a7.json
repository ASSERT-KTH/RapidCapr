{
    "patch": "    public static boolean containsIgnoreCase(String str, String searchStr) {\n        if (str == null || searchStr == null) {\n            return false;\n        }\n        final int length = searchStr.length();\n        if (length == 0) {\n            return true;\n        }\n        for (int i = 0, j = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            if (ch == searchStr.charAt(j) || ch == searchStr.charAt(j) + 32 || ch == searchStr.charAt(j) - 32 ) {\n                if (++j == length) {\n                    return true;\n                }\n            } else if (ch == searchStr.charAt(0) || ch == searchStr.charAt(0) + 32 || ch == searchStr.charAt(0) - 32) {\n                j = 1;\n            } else {\n                j = 0;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..ecee021c 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,28 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+    public static boolean containsIgnoreCase(String str, String searchStr) {\n+        if (str == null || searchStr == null) {\n+            return false;\n+        }\n+        final int length = searchStr.length();\n+        if (length == 0) {\n+            return true;\n+        }\n+        for (int i = 0, j = 0; i < str.length(); i++) {\n+            char ch = str.charAt(i);\n+            if (ch == searchStr.charAt(j) || ch == searchStr.charAt(j) + 32 || ch == searchStr.charAt(j) - 32 ) {\n+                if (++j == length) {\n+                    return true;\n+                }\n+            } else if (ch == searchStr.charAt(0) || ch == searchStr.charAt(0) + 32 || ch == searchStr.charAt(0) - 32) {\n+                j = 1;\n+            } else {\n+                j = 0;\n+            }\n+        }\n+        return false;\n+    }\n     }\n \n     // IndexOfAny chars",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}