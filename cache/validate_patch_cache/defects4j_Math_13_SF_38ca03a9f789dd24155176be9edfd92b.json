{
    "patch": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.SingularValueDecomposition;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    // Compute singular value decomposition of input matrix\n    SingularValueDecomposition svd = new SingularValueDecomposition(m);\n\n    // Compute square root of singular values\n    RealMatrix s = MatrixUtils.createRealDiagonalMatrix(\n        svd.getSingularValues().stream()\n            .mapToDouble(d -> Math.sqrt(d))\n            .toArray()\n    );\n\n    // Compute square root of matrix using SVD\n    RealMatrix u = svd.getU();\n    RealMatrix v = svd.getVT();\n    return u.multiply(s).multiply(v);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..60219a0af 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,24 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+import org.apache.commons.math3.linear.MatrixUtils;\n+import org.apache.commons.math3.linear.RealMatrix;\n+import org.apache.commons.math3.linear.SingularValueDecomposition;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    // Compute singular value decomposition of input matrix\n+    SingularValueDecomposition svd = new SingularValueDecomposition(m);\n+\n+    // Compute square root of singular values\n+    RealMatrix s = MatrixUtils.createRealDiagonalMatrix(\n+        svd.getSingularValues().stream()\n+            .mapToDouble(d -> Math.sqrt(d))\n+            .toArray()\n+    );\n+\n+    // Compute square root of matrix using SVD\n+    RealMatrix u = svd.getU();\n+    RealMatrix v = svd.getVT();\n+    return u.multiply(s).multiply(v);\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}