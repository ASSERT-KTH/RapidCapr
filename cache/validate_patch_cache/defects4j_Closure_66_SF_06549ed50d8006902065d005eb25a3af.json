{
    "patch": "public double getTypedPercent(String js) {\n    int totalChars = js.length();\n    int numOfChars = 0;\n    boolean isInString = false;\n    for (int i = 0; i < totalChars; i++) {\n        char c = js.charAt(i);\n        if (c == '\\'' || c == '\\\"') {\n            isInString = !isInString;\n        } else if (c == '%') {\n            if (!isInString) {\n                numOfChars++;\n            }\n        }\n    }\n    return (double) numOfChars / (double) totalChars * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a1c9d247 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    int totalChars = js.length();\n+    int numOfChars = 0;\n+    boolean isInString = false;\n+    for (int i = 0; i < totalChars; i++) {\n+        char c = js.charAt(i);\n+        if (c == '\\'' || c == '\\\"') {\n+            isInString = !isInString;\n+        } else if (c == '%') {\n+            if (!isInString) {\n+                numOfChars++;\n+            }\n+        }\n+    }\n+    return (double) numOfChars / (double) totalChars * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}