{
    "patch": "        if (offsetLocal != offsetAdjusted) {\n            // check if the instant is in a DST gap and return old offset\n            if (offsetLocal < offsetAdjusted) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n            } else {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }\n            \n            // check if time is on the transition\n            if (offsetLocal >= 0 && offsetAdjusted < 0) {\n                // if time is before the gap of transition\n                if (instantLocal + offsetLocal < 0) {\n                    return offsetLocal;\n                }\n            }\n            \n            // check if time is on a transition\n            if (offsetLocal <= 0 && offsetAdjusted > 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                final int offsetNext = getOffset(nextLocal);\n                if (offsetLocal != offsetNext && offsetAdjusted == offsetNext) {\n                    return offsetLocal;\n                }\n            }\n        }\n        \n        return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..40f8e6a7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,41 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if (offsetLocal != offsetAdjusted) {\n+            // check if the instant is in a DST gap and return old offset\n+            if (offsetLocal < offsetAdjusted) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long prevLocal = previousTransition(instantAdjusted);\n+                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                if (prevLocal != prevAdjusted) {\n+                    return offsetLocal;\n+                }\n+            }\n+            \n+            // check if time is on the transition\n+            if (offsetLocal >= 0 && offsetAdjusted < 0) {\n+                // if time is before the gap of transition\n+                if (instantLocal + offsetLocal < 0) {\n+                    return offsetLocal;\n+                }\n+            }\n+            \n+            // check if time is on a transition\n+            if (offsetLocal <= 0 && offsetAdjusted > 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                final int offsetNext = getOffset(nextLocal);\n+                if (offsetLocal != offsetNext && offsetAdjusted == offsetNext) {\n+                    return offsetLocal;\n+                }\n+            }\n+        }\n+        \n+        return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}