{
    "patch": "    // collect ids of unreferenced args\n    Set<String> unused = new HashSet<>();\n    Node arg = argList.getFirstChild();\n    while (arg != null) {\n      String argName = arg.getString();\n      Var var = fnScope.getVar(argName);\n      if (!referenced.contains(var)) {\n        unused.add(argName);\n      }\n      arg = arg.getNext();\n    }\n\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n      Node lastArg;\n      while ((lastArg = argList.getLastChild()) != null) {\n        Var var = fnScope.getVar(lastArg.getString());\n        if (unused.contains(var.getName())) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..8a898e4d 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,24 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // collect ids of unreferenced args\n+    Set<String> unused = new HashSet<>();\n+    Node arg = argList.getFirstChild();\n+    while (arg != null) {\n+      String argName = arg.getString();\n+      Var var = fnScope.getVar(argName);\n+      if (!referenced.contains(var)) {\n+        unused.add(argName);\n+      }\n+      arg = arg.getNext();\n+    }\n+\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+      Node lastArg;\n+      while ((lastArg = argList.getLastChild()) != null) {\n+        Var var = fnScope.getVar(lastArg.getString());\n+        if (unused.contains(var.getName())) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}