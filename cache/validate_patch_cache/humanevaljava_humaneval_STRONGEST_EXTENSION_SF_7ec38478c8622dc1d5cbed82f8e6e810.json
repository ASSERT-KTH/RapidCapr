{
    "patch": "public static String strongest_extension(String class_name, String[] extensions) {\n    String strongest = null;\n    int max_diff = Integer.MIN_VALUE;\n\n    for (String extension : extensions) {\n        int num_uppers = 0;\n        int num_lowers = 0;\n        for (char c : extension.toCharArray()) {\n            if (Character.isUpperCase(c)) num_uppers++;\n            else if (Character.isLowerCase(c)) num_lowers++;\n        }\n        int diff = num_uppers - num_lowers;\n        if (diff > max_diff) {\n            max_diff = diff;\n            strongest = extension;\n        }\n    }\n\n    if (strongest != null) {\n        return class_name + \".\" + strongest;\n    } else {\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\nindex 7ff1563..1f6d064 100644\n--- a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n+++ b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n@@ -17,20 +17,28 @@ package humaneval.buggy;\n // for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n \n public class STRONGEST_EXTENSION {\n-    public static String strongest_extension(String class_name, String[] extensions) {\n-        String strong = null;\n-        int val = Integer.MIN_VALUE;\n+public static String strongest_extension(String class_name, String[] extensions) {\n+    String strongest = null;\n+    int max_diff = Integer.MIN_VALUE;\n \n-        for (String s : extensions) {\n-            int CAP = 0;\n-            int SM = 0;\n-            for (char c : s.toCharArray()) {\n-                if (Character.toUpperCase(c) == c) SM += 1;\n-                if (Character.toLowerCase(c) == c) CAP += 1;\n-            }\n-            val = CAP - SM;\n-            strong = s;\n+    for (String extension : extensions) {\n+        int num_uppers = 0;\n+        int num_lowers = 0;\n+        for (char c : extension.toCharArray()) {\n+            if (Character.isUpperCase(c)) num_uppers++;\n+            else if (Character.isLowerCase(c)) num_lowers++;\n         }\n-        return class_name + \".\" + strong;\n+        int diff = num_uppers - num_lowers;\n+        if (diff > max_diff) {\n+            max_diff = diff;\n+            strongest = extension;\n+        }\n+    }\n+\n+    if (strongest != null) {\n+        return class_name + \".\" + strongest;\n+    } else {\n+        return null;\n     }\n }\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}