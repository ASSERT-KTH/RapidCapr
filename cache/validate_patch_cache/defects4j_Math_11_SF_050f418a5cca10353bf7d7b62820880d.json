{
    "patch": "public double density(final double[] vals) throws DimensionMismatchException {\n    final int dim = getDimension();\n    if (vals.length != dim) {\n        throw new DimensionMismatchException(dim, vals.length);\n    }\n\n    double normalization = FastMath.pow(2 * FastMath.PI, -dim / 2.0) * \n        FastMath.pow(covarianceMatrixDeterminant, -0.5);\n\n    double exponent = -0.5 * new ArrayRealVector(vals)\n        .subtract(meanVector)\n        .walkInOptimizedOrder(new RealVectorPreservingVisitor() {\n            private int idx;\n            private double result;\n\n            @Override\n            public void start(int i, int i1, int i2) {\n                idx = 0;\n                result = 0.0;\n            }\n\n            @Override\n            public void visit(int i, double d) {\n                result += invCovarianceMatrix.data[idx][idx++] * d;\n            }\n\n            @Override\n            public double end() {\n                return result;\n            }\n        });\n        \n    return normalization * FastMath.exp(exponent);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\nindex 15706811b..7c73c5bd9 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\n@@ -174,17 +174,41 @@ public class MultivariateNormalDistribution\n     }\n \n     /** {@inheritDoc} */\n-    public double density(final double[] vals) throws DimensionMismatchException {\n-        final int dim = getDimension();\n-        if (vals.length != dim) {\n-            throw new DimensionMismatchException(vals.length, dim);\n-        }\n-\n-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n-            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n-            getExponentTerm(vals);\n+public double density(final double[] vals) throws DimensionMismatchException {\n+    final int dim = getDimension();\n+    if (vals.length != dim) {\n+        throw new DimensionMismatchException(dim, vals.length);\n     }\n \n+    double normalization = FastMath.pow(2 * FastMath.PI, -dim / 2.0) * \n+        FastMath.pow(covarianceMatrixDeterminant, -0.5);\n+\n+    double exponent = -0.5 * new ArrayRealVector(vals)\n+        .subtract(meanVector)\n+        .walkInOptimizedOrder(new RealVectorPreservingVisitor() {\n+            private int idx;\n+            private double result;\n+\n+            @Override\n+            public void start(int i, int i1, int i2) {\n+                idx = 0;\n+                result = 0.0;\n+            }\n+\n+            @Override\n+            public void visit(int i, double d) {\n+                result += invCovarianceMatrix.data[idx][idx++] * d;\n+            }\n+\n+            @Override\n+            public double end() {\n+                return result;\n+            }\n+        });\n+        \n+    return normalization * FastMath.exp(exponent);\n+}\n+\n     /**\n      * Gets the square root of each element on the diagonal of the covariance\n      * matrix.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}