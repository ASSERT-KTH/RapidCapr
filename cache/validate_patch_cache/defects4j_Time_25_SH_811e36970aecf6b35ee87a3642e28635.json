{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n<<<<<<< Updated upstream\n                    int diff = offsetAdjusted - offsetLocal;\n                    return (getOffset(instantAdjusted + diff) == offsetLocal ? offsetAdjusted : offsetLocal);\n=======\n                    return offsetLocal;\n>>>>>>> Stashed changes\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..10a8dc46 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+<<<<<<< Updated upstream\n+                    int diff = offsetAdjusted - offsetLocal;\n+                    return (getOffset(instantAdjusted + diff) == offsetLocal ? offsetAdjusted : offsetLocal);\n+=======\n+                    return offsetLocal;\n+>>>>>>> Stashed changes\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}