{
    "patch": "public class ShapeList extends AbstractObjectList {\n\n    // existing code here...\n\n    /**\n     * Returns <code>true</code> if this list contains the specified element.\n     *\n     * @param o  the object to check.\n     *\n     * @return A boolean.\n     */\n    public boolean contains(Object o) {\n        return (indexOf(o) >= 0);\n    }\n\n    /**\n     * Returns the index of the specified element, or -1 if the list does not\n     * contain the element.\n     *\n     * @param o  the object.\n     *\n     * @return The index or -1.\n     */\n    public int indexOf(Object o) {\n        Validate.notNull(o, \"Null 'object' argument.\");\n        int result = -1;\n        for (int i = 0; i < size(); i++) {\n            if (this.get(i).equals(o)) {\n                result = i;\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns a hash code for an object of this class.\n     *\n     * @return A hash code.\n     */\n    public int hashCode() {\n        return super.hashCode();\n    }\n\n    /**\n     * Tests this list for equality with another object.\n     *\n     * @param obj  the object (<code>null</code> permitted).\n     *\n     * @return <code>true</code> or <code>false</code>.\n     */\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        ShapeList that = (ShapeList) obj;\n        if (size() != that.size()) {\n            return false;\n        }\n        for (int i = 0; i < size(); i++) {\n            Object o1 = get(i);\n            Object o2 = that.get(i);\n            if (!ObjectUtilities.equal(o1, o2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..cebd653 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -100,18 +100,80 @@ public class ShapeList extends AbstractObjectList {\n      *\n      * @return A boolean.\n      */\n-    public boolean equals(Object obj) {\n+public class ShapeList extends AbstractObjectList {\n+\n+    // existing code here...\n+\n+    /**\n+     * Returns <code>true</code> if this list contains the specified element.\n+     *\n+     * @param o  the object to check.\n+     *\n+     * @return A boolean.\n+     */\n+    public boolean contains(Object o) {\n+        return (indexOf(o) >= 0);\n+    }\n+\n+    /**\n+     * Returns the index of the specified element, or -1 if the list does not\n+     * contain the element.\n+     *\n+     * @param o  the object.\n+     *\n+     * @return The index or -1.\n+     */\n+    public int indexOf(Object o) {\n+        Validate.notNull(o, \"Null 'object' argument.\");\n+        int result = -1;\n+        for (int i = 0; i < size(); i++) {\n+            if (this.get(i).equals(o)) {\n+                result = i;\n+                break;\n+            }\n+        }\n+        return result;\n+    }\n+\n+    /**\n+     * Returns a hash code for an object of this class.\n+     *\n+     * @return A hash code.\n+     */\n+    public int hashCode() {\n+        return super.hashCode();\n+    }\n \n+    /**\n+     * Tests this list for equality with another object.\n+     *\n+     * @param obj  the object (<code>null</code> permitted).\n+     *\n+     * @return <code>true</code> or <code>false</code>.\n+     */\n+    public boolean equals(Object obj) {\n         if (obj == this) {\n             return true;\n         }\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n-\n+        ShapeList that = (ShapeList) obj;\n+        if (size() != that.size()) {\n+            return false;\n+        }\n+        for (int i = 0; i < size(); i++) {\n+            Object o1 = get(i);\n+            Object o2 = that.get(i);\n+            if (!ObjectUtilities.equal(o1, o2)) {\n+                return false;\n+            }\n+        }\n+        return true;\n     }\n \n+}\n+\n     /**\n      * Returns a hash code value for the object.\n      *\n@@ -169,4 +231,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: class ShapeList is already defined in package org.jfree.chart.util",
    "test_result": "ERROR"
}