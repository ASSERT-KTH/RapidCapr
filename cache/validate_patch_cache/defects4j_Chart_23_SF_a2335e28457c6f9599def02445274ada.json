{
    "patch": "public class Rectangle {\n    private int width;\n    private int length;\n\n    public Rectangle(int width, int length) {\n        this.width = width;\n        this.length = length;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public int getLength() {\n        return length;\n    }\n\n    public int getArea() {\n        return width * length;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n\n        if (obj == null || obj.getClass() != this.getClass()) {\n            return false;\n        }\n\n        Rectangle rect = (Rectangle) obj;\n        return (width == rect.width && length == rect.length);\n    }\n\n    @Override\n    public int hashCode() {\n        int result = 17;\n        result = 31 * result + width;\n        result = 31 * result + length;\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\nindex bbd5ddb..6dab024 100644\n--- a/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java\n@@ -327,7 +327,49 @@ public class MinMaxCategoryRenderer extends AbstractCategoryItemRenderer {\n      * @param column  the column index (zero-based).\n      * @param pass  the pass index.\n      */\n-    public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n+public class Rectangle {\n+    private int width;\n+    private int length;\n+\n+    public Rectangle(int width, int length) {\n+        this.width = width;\n+        this.length = length;\n+    }\n+\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    public int getLength() {\n+        return length;\n+    }\n+\n+    public int getArea() {\n+        return width * length;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (obj == null || obj.getClass() != this.getClass()) {\n+            return false;\n+        }\n+\n+        Rectangle rect = (Rectangle) obj;\n+        return (width == rect.width && length == rect.length);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = 17;\n+        result = 31 * result + width;\n+        result = 31 * result + length;\n+        return result;\n+    }\n+}\n             Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n             ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n             int pass) {",
    "result_reason": "error: annotations are not supported in -source 1.4",
    "test_result": "ERROR"
}