{
    "patch": "public static int largest_prime_factor(int n) {\n    if (n <= 1) {\n        return -1; //or throw an exception for invalid input\n    }\n    int largest = 2;\n    while (n > largest) {\n        if (n % largest == 0) {\n            n = n / largest;\n        } else {\n            largest++;\n        }\n    }\n    return largest;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java b/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\nindex 794cf2e..18b2b1d 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_PRIME_FACTOR.java\n@@ -17,13 +17,18 @@ public class LARGEST_PRIME_FACTOR {\n         return true;\n     }\n \n-    public static int largest_prime_factor(int n) {\n-        int largest = 1;\n-        for (int j = 2; j < n; j += 1) {\n-            if (is_prime(j)){\n-                largest = n % j;\n-            }\n+public static int largest_prime_factor(int n) {\n+    if (n <= 1) {\n+        return -1; //or throw an exception for invalid input\n+    }\n+    int largest = 2;\n+    while (n > largest) {\n+        if (n % largest == 0) {\n+            n = n / largest;\n+        } else {\n+            largest++;\n         }\n-        return largest;\n     }\n+    return largest;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}