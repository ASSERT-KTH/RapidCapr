{
    "patch": "      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          defineDeclaredFunction(n, parent);\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n        case Token.LABEL:\n          // Labels have implicit declaration of unknown type.\n          Var var =\n              scope.getSlot(n.getFirstChild().getString(), null /* no type yet */, true /* var */);\n          assignSlotType(var, JSTypeNative.UNKNOWN_TYPE);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..c530a7c1 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1462,6 +1462,11 @@ final class TypedScopeCreator implements ScopeCreator {\n         case Token.VAR:\n           defineVar(n, parent);\n           break;\n+        case Token.LABEL:\n+          // Labels have implicit declaration of unknown type.\n+          Var var =\n+              scope.getSlot(n.getFirstChild().getString(), null /* no type yet */, true /* var */);\n+          assignSlotType(var, JSTypeNative.UNKNOWN_TYPE);\n       }\n     }\n ",
    "result_reason": "error: method getSlot in class Scope cannot be applied to given types;",
    "test_result": "ERROR"
}