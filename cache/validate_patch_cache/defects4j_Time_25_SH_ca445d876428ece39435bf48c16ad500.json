{
    "patch": "            if (offsetLocal >= 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n            } else {\n                long previousLocal = previousTransition(instantAdjusted);\n                long previousAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (previousLocal != previousAdjusted) {\n                    return getOffset(previousLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..de64abca 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,17 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal >= 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long previousLocal = previousTransition(instantAdjusted);\n+                long previousAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                if (previousLocal != previousAdjusted) {\n+                    return getOffset(previousLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}