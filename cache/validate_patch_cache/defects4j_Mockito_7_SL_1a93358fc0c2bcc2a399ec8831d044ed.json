{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument != null) {\n    if (actualTypeArgument instanceof Class) {\n        registerTypeVariablesOn(actualTypeArgument);\n    } else if (actualTypeArgument instanceof ParameterizedType) {\n        for (Type type : ((ParameterizedType) actualTypeArgument).getActualTypeArguments()) {\n            registerTypeVariablesOn(type);\n        }\n    } else if (actualTypeArgument instanceof WildcardType) {\n        boolean hasUpperBound = ((WildcardType) actualTypeArgument).getUpperBounds().length > 0;\n        if (hasUpperBound) {\n            Type upperBound = ((WildcardType) actualTypeArgument).getUpperBounds()[0];\n            registerTypeVariablesOn(upperBound);\n        }\n    } else {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n} else {\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b03dc4865 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,33 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument != null) {\n+    if (actualTypeArgument instanceof Class) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    } else if (actualTypeArgument instanceof ParameterizedType) {\n+        for (Type type : ((ParameterizedType) actualTypeArgument).getActualTypeArguments()) {\n+            registerTypeVariablesOn(type);\n+        }\n+    } else if (actualTypeArgument instanceof WildcardType) {\n+        boolean hasUpperBound = ((WildcardType) actualTypeArgument).getUpperBounds().length > 0;\n+        if (hasUpperBound) {\n+            Type upperBound = ((WildcardType) actualTypeArgument).getUpperBounds()[0];\n+            registerTypeVariablesOn(upperBound);\n+        }\n+    } else {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    }\n+} else {\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}