{
    "patch": "double nOd = (double)numerator / denominator - (double)object.numerator / object.denominator;\ndouble dOn = 0.0;\nif (nOd > 0.0) {\n    dOn = 1.0;\n} else if (nOd < 0.0) {\n    dOn = -1.0;\n}\nreturn (int)(nOd / Math.abs(nOd) * dOn);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..a978cc1f7 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,14 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+double nOd = (double)numerator / denominator - (double)object.numerator / object.denominator;\n+double dOn = 0.0;\n+if (nOd > 0.0) {\n+    dOn = 1.0;\n+} else if (nOd < 0.0) {\n+    dOn = -1.0;\n+}\n+return (int)(nOd / Math.abs(nOd) * dOn);\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}