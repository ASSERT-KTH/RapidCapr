{
    "patch": "    Set<Var> referenced = getAllVarsDeclaredInFunction(fnScope);\n    if (referenced == null) {\n      // If there are any continue statements inside function's loop structure\n      // that target a label outside the function, we cannot determine which\n      // variables are really referenced, so do nothing.\n      return;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..350996ad 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,13 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Set<Var> referenced = getAllVarsDeclaredInFunction(fnScope);\n+    if (referenced == null) {\n+      // If there are any continue statements inside function's loop structure\n+      // that target a label outside the function, we cannot determine which\n+      // variables are really referenced, so do nothing.\n+      return;\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}