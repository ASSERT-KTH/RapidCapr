{
    "patch": "public static String decode_shift(String string) {\n    StringBuilder sb = new StringBuilder();\n    int alphabetSize = 26;\n    int shift = 5;\n    for (char c : string.toCharArray()) {\n        if (Character.isLetter(c)) {\n            int charStart = Character.isLowerCase(c) ? (int) 'a' : (int) 'A'; // determine the starting value of the alphabet character\n            int shiftedChar = ((c - shift - charStart) % alphabetSize + alphabetSize) % alphabetSize + charStart;\n            // shift the character, handle values less than 0 and greater than alphabet size, obtain the new character value and add the starting value of the character\n            sb.append((char) shiftedChar);\n        } else {\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_SHIFT.java b/src/main/java/humaneval/buggy/DECODE_SHIFT.java\nindex c8aba74..6264584 100644\n--- a/src/main/java/humaneval/buggy/DECODE_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/DECODE_SHIFT.java\n@@ -13,12 +13,20 @@ public class DECODE_SHIFT {\n         return sb.toString();\n     }\n \n-    public static String decode_shift(String string) {\n-        StringBuilder sb = new StringBuilder();\n-        for (char c : string.toCharArray()) {\n-            c = (char)((((int) c - 5 - (int)('a')) % 26) + (int)('a'));\n+public static String decode_shift(String string) {\n+    StringBuilder sb = new StringBuilder();\n+    int alphabetSize = 26;\n+    int shift = 5;\n+    for (char c : string.toCharArray()) {\n+        if (Character.isLetter(c)) {\n+            int charStart = Character.isLowerCase(c) ? (int) 'a' : (int) 'A'; // determine the starting value of the alphabet character\n+            int shiftedChar = ((c - shift - charStart) % alphabetSize + alphabetSize) % alphabetSize + charStart;\n+            // shift the character, handle values less than 0 and greater than alphabet size, obtain the new character value and add the starting value of the character\n+            sb.append((char) shiftedChar);\n+        } else {\n             sb.append(c);\n         }\n-        return sb.toString();\n     }\n+    return sb.toString();\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}