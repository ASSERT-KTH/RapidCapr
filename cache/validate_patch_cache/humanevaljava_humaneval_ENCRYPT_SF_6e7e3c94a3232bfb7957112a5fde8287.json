{
    "patch": "public static String encrypt(String s) {\n    StringBuilder sb = new StringBuilder();\n    String alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    int shift = 4;\n    for (char c : s.toCharArray()) {\n        int index = alphabet.indexOf(Character.toLowerCase(c));\n        if (index != -1) { // If character is a letter\n            int shiftedIndex = (index + shift) % 26;\n            char encryptedChar = alphabet.charAt(shiftedIndex);\n            if (Character.isUpperCase(c)) {\n                encryptedChar = Character.toUpperCase(encryptedChar);\n            }\n            sb.append(encryptedChar);\n        } else { // If character is not a letter\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ENCRYPT.java b/src/main/java/humaneval/buggy/ENCRYPT.java\nindex 84c720b..1582bbf 100644\n--- a/src/main/java/humaneval/buggy/ENCRYPT.java\n+++ b/src/main/java/humaneval/buggy/ENCRYPT.java\n@@ -11,18 +11,23 @@ encrypt('gf') returns 'kj'\n encrypt('et') returns 'ix' */\n \n public class ENCRYPT {\n-    public static String encrypt(String s) {\n-        StringBuilder sb = new StringBuilder();\n-        String d = \"abcdefghijklmnopqrstuvwxyz\";\n-        for (char c : s.toCharArray()){\n-            if ('a' <= c && c <= 'z'){\n-                sb.append(\n-                    d.charAt(s.indexOf((int) c) + 2 * 2)\n-                );\n-            } else {\n-                sb.append(c);\n+public static String encrypt(String s) {\n+    StringBuilder sb = new StringBuilder();\n+    String alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n+    int shift = 4;\n+    for (char c : s.toCharArray()) {\n+        int index = alphabet.indexOf(Character.toLowerCase(c));\n+        if (index != -1) { // If character is a letter\n+            int shiftedIndex = (index + shift) % 26;\n+            char encryptedChar = alphabet.charAt(shiftedIndex);\n+            if (Character.isUpperCase(c)) {\n+                encryptedChar = Character.toUpperCase(encryptedChar);\n             }\n+            sb.append(encryptedChar);\n+        } else { // If character is not a letter\n+            sb.append(c);\n         }\n-        return sb.toString();\n     }\n+    return sb.toString();\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}