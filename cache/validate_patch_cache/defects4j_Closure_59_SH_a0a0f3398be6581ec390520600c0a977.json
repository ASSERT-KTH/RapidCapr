{
    "patch": "      options.setWarningLevel(\n          DiagnosticGroups.GLOBAL_THIS,\n          options.checkGlobalThisLevel.isOn() ? CheckLevel.WARNING : CheckLevel.OFF);\n    }\n\n    if (options.getLanguageIn() == LanguageMode.ECMASCRIPT5_STRICT) {\n      options.setWarningLevel(\n          DiagnosticGroups.ES5_STRICT,\n          CheckLevel.ERROR);\n    }\n    \n    // Initialize the warnings guard.\n    List<WarningsGuard> guards = Lists.newArrayList();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..caa43c0a 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,19 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+      options.setWarningLevel(\n+          DiagnosticGroups.GLOBAL_THIS,\n+          options.checkGlobalThisLevel.isOn() ? CheckLevel.WARNING : CheckLevel.OFF);\n+    }\n+\n+    if (options.getLanguageIn() == LanguageMode.ECMASCRIPT5_STRICT) {\n+      options.setWarningLevel(\n+          DiagnosticGroups.ES5_STRICT,\n+          CheckLevel.ERROR);\n+    }\n+    \n+    // Initialize the warnings guard.\n+    List<WarningsGuard> guards = Lists.newArrayList();\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}