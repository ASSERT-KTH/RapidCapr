{
    "patch": "          if (!value.getLastChild().isBlock()) {\n            return false;\n          }\n\n          Node block = value.getLastChild();\n          Node child = block.getFirstChild();\n          if (child == null || !child.getNext().isNull() ||\n              !child.isReturn()) {\n            return false;\n          }\n          Preconditions.checkState(child.getFirstChild() != null);\n          if (child.getFirstChild().getNext().isNonNullish()) {\n            return false;\n          }\n\n          if (convention.isSingletonGetter(block.getParent(), block)) {\n            return false;\n          }\n\n          if (canRemoveExterns && containsExternValueType(initialization)) {\n            return false;\n          }\n          return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..6dfad4c4 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,29 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (!value.getLastChild().isBlock()) {\n+            return false;\n+          }\n+\n+          Node block = value.getLastChild();\n+          Node child = block.getFirstChild();\n+          if (child == null || !child.getNext().isNull() ||\n+              !child.isReturn()) {\n+            return false;\n+          }\n+          Preconditions.checkState(child.getFirstChild() != null);\n+          if (child.getFirstChild().getNext().isNonNullish()) {\n+            return false;\n+          }\n+\n+          if (convention.isSingletonGetter(block.getParent(), block)) {\n+            return false;\n+          }\n+\n+          if (canRemoveExterns && containsExternValueType(initialization)) {\n+            return false;\n+          }\n+          return true;\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}