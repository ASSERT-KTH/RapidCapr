{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n        if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        for (int i = 0; i < sequence.length(); i++) {\n            final char ch = sequence.charAt(i);\n            for (final char searchChar : searchChars) {\n                if (ch == searchChar) {\n                    if (Character.isHighSurrogate(ch)) {\n                        if (i < sequence.length() - 1) {\n                            final char ch2 = sequence.charAt(i + 1);\n                            if (ch2 == Character.lowSurrogate(searchChar)) {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..45b0cd66 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+        if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+            return false;\n+        }\n+        for (int i = 0; i < sequence.length(); i++) {\n+            final char ch = sequence.charAt(i);\n+            for (final char searchChar : searchChars) {\n+                if (ch == searchChar) {\n+                    if (Character.isHighSurrogate(ch)) {\n+                        if (i < sequence.length() - 1) {\n+                            final char ch2 = sequence.charAt(i + 1);\n+                            if (ch2 == Character.lowSurrogate(searchChar)) {\n+                                return true;\n+                            }\n+                        }\n+                    } else {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}