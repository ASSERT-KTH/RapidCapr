{
    "patch": "public static double getTypedPercent(String jsonString) {\n    double result = 0;\n    try {\n        JSONObject object = new JSONObject(jsonString);\n        String typed = object.getString(\"typed\");\n        String total = object.getString(\"total\");\n        if (!total.equals(\"0\")) {\n            result = Double.parseDouble(typed) * 100 / Double.parseDouble(total);\n        }\n    } catch (JSONException e) {\n        System.out.println(\"Invalid JSON string\");\n        e.printStackTrace();\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..db82887c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonString) {\n+    double result = 0;\n+    try {\n+        JSONObject object = new JSONObject(jsonString);\n+        String typed = object.getString(\"typed\");\n+        String total = object.getString(\"total\");\n+        if (!total.equals(\"0\")) {\n+            result = Double.parseDouble(typed) * 100 / Double.parseDouble(total);\n+        }\n+    } catch (JSONException e) {\n+        System.out.println(\"Invalid JSON string\");\n+        e.printStackTrace();\n+    }\n+    return result;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}