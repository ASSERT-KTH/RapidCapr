{
    "patch": "        MethodInterceptorFilter newFilter = null;\n        try {\n            MockHandler<T> newMockHandler = new MockHandler<T>((MockHandlerInterface<T>)oldMockHandler);\n            newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n            ((Factory) mock).setCallbacks(new Callback[] { newFilter });\n        } catch (Throwable t){\n            throw new RuntimeException(t);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..d43e146a9 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,17 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MethodInterceptorFilter newFilter = null;\n+        try {\n+            MockHandler<T> newMockHandler = new MockHandler<T>((MockHandlerInterface<T>)oldMockHandler);\n+            newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+            ((Factory) mock).setCallbacks(new Callback[] { newFilter });\n+        } catch (Throwable t){\n+            throw new RuntimeException(t);\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Problems initiating spied field initializedSpy",
    "test_result": "FAIL"
}