{
    "patch": "                int end = begin + length;\n                double sumWts = 0;\n                for (int i = begin; i < end; i++) {\n                    sumWts += weights[i];\n                }\n                \n                if (isBiasCorrected) {\n                    var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0);\n                } else {\n                    var = (accum - (accum2 * accum2 / sumWts)) / sumWts;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java b/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java\nindex e5518e31a..ae9e45199 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java\n@@ -517,7 +517,17 @@ public class Variance extends AbstractStorelessUnivariateStatistic implements Se\n                 }\n \n                 double sumWts = 0;\n-                for (int i = 0; i < weights.length; i++) {\n+                int end = begin + length;\n+                double sumWts = 0;\n+                for (int i = begin; i < end; i++) {\n+                    sumWts += weights[i];\n+                }\n+                \n+                if (isBiasCorrected) {\n+                    var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0);\n+                } else {\n+                    var = (accum - (accum2 * accum2 / sumWts)) / sumWts;\n+                }\n                     sumWts += weights[i];\n                 }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}