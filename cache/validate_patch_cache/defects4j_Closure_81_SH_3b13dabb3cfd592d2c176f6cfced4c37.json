{
    "patch": "if (name == null) {\n    name = new Name();\n    name.setIdentifier(\"\");\n    isUnnamedFunction = true;\n    // Set the line number of the empty name node to the line number of the entire function.\n    // Because the parser in Rhino does not always tag the function node with the correct line number.\n    name.setLineno(functionNode.getLineno());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..09e61a9c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,14 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+if (name == null) {\n+    name = new Name();\n+    name.setIdentifier(\"\");\n+    isUnnamedFunction = true;\n+    // Set the line number of the empty name node to the line number of the entire function.\n+    // Because the parser in Rhino does not always tag the function node with the correct line number.\n+    name.setLineno(functionNode.getLineno());\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}