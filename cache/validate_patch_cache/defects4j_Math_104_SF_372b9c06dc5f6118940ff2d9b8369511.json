{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.*;\n\npublic class GammaCalculator {\n\n    // Calculates a regularized gamma value\n    public static double regularizedGamma(double x, double a, double epsilon) {\n        int maxIterations = 1000;\n        double sum = 0.0;\n        double term = 1.0 / a;\n        double n = 1;\n        while (Math.abs(term) > epsilon && n < maxIterations) {\n            sum += term;\n            a++;\n            term *= x / a;\n            n++;\n        }\n        double gammaX = Gamma.gamma(x);\n        return sum * Math.pow(x, a - x - 1) / gammaX;\n    }\n\n    // Sample test case\n    public static void main(String[] args) {\n        double x = 2.0;\n        double a = 3.0;\n        double epsilon = 10e-15;\n        double expected = 0.632120558828558;\n        double actual = regularizedGamma(x, a, epsilon);\n        TestUtils.assertEquals(expected, actual, epsilon);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..cf11e25c7 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,37 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.*;\n+\n+public class GammaCalculator {\n+\n+    // Calculates a regularized gamma value\n+    public static double regularizedGamma(double x, double a, double epsilon) {\n+        int maxIterations = 1000;\n+        double sum = 0.0;\n+        double term = 1.0 / a;\n+        double n = 1;\n+        while (Math.abs(term) > epsilon && n < maxIterations) {\n+            sum += term;\n+            a++;\n+            term *= x / a;\n+            n++;\n+        }\n+        double gammaX = Gamma.gamma(x);\n+        return sum * Math.pow(x, a - x - 1) / gammaX;\n+    }\n+\n+    // Sample test case\n+    public static void main(String[] args) {\n+        double x = 2.0;\n+        double a = 3.0;\n+        double epsilon = 10e-15;\n+        double expected = 0.632120558828558;\n+        double actual = regularizedGamma(x, a, epsilon);\n+        TestUtils.assertEquals(expected, actual, epsilon);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}