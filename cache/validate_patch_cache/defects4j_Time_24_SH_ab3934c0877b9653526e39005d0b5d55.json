{
    "patch": "            try {\n                for (int i = 0; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            } catch (IllegalArgumentException ex) {\n                if (text != null) {\n                    StringBuilder buf = new StringBuilder();\n                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n                    buf.append(ex.getMessage());\n                    throw new IllegalArgumentException(buf.toString(), ex);\n                }\n                throw ex;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..aaa2f0ba 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            try {\n+                for (int i = 0; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            } catch (IllegalArgumentException ex) {\n+                if (text != null) {\n+                    StringBuilder buf = new StringBuilder();\n+                    buf.append(\"Cannot parse \\\"\" + text + \"\\\": \");\n+                    buf.append(ex.getMessage());\n+                    throw new IllegalArgumentException(buf.toString(), ex);\n+                }\n+                throw ex;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}