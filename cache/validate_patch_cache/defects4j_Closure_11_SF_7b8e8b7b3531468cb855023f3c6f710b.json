{
    "patch": "public boolean getprop(String propName) {\n    String result = \"\";\n    try {\n        Process p = Runtime.getRuntime().exec(\"getprop \" + propName);\n        InputStream is = p.getInputStream();\n        InputStreamReader isr = new InputStreamReader(is);\n        BufferedReader br = new BufferedReader(isr);\n\n        String line;\n        while ((line = br.readLine()) != null) {\n            result += line;\n        }\n\n        br.close();\n        isr.close();\n        is.close();\n\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n\n    return Boolean.parseBoolean(result.trim());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..2b101612 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,29 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public boolean getprop(String propName) {\n+    String result = \"\";\n+    try {\n+        Process p = Runtime.getRuntime().exec(\"getprop \" + propName);\n+        InputStream is = p.getInputStream();\n+        InputStreamReader isr = new InputStreamReader(is);\n+        BufferedReader br = new BufferedReader(isr);\n+\n+        String line;\n+        while ((line = br.readLine()) != null) {\n+            result += line;\n+        }\n+\n+        br.close();\n+        isr.close();\n+        is.close();\n+\n+    } catch (IOException e) {\n+        e.printStackTrace();\n+    }\n+\n+    return Boolean.parseBoolean(result.trim());\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}