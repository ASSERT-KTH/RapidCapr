{
    "patch": "            pType == Token.OBJECTLIT ||\n            pType == Token.ARRAYLIT ||\n            pType == Token.ASSIGN ||\n            pType == Token.CALL ||\n            pType == Token.NEW ||\n            pType == Token.CAST ||\n            pType == Token.COMMA)) {\n        return false;\n      }\n\n      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.getEnclosingType(n, Token.OBJECTLIT) != null &&\n          NodeUtil.getEnclosingType(parent, Token.ASSIGN) != null &&\n          NodeUtil.getEnclosingType(parent, Token.OBJECTLIT) != null) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..e8530258 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,20 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+            pType == Token.OBJECTLIT ||\n+            pType == Token.ARRAYLIT ||\n+            pType == Token.ASSIGN ||\n+            pType == Token.CALL ||\n+            pType == Token.NEW ||\n+            pType == Token.CAST ||\n+            pType == Token.COMMA)) {\n+        return false;\n+      }\n+\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.getEnclosingType(n, Token.OBJECTLIT) != null &&\n+          NodeUtil.getEnclosingType(parent, Token.ASSIGN) != null &&\n+          NodeUtil.getEnclosingType(parent, Token.OBJECTLIT) != null) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}