{
    "patch": "                    // if the local instant is after the next transition,\n                    // use this transition as the divider, otherwise\n                    // use the current transition\n                    long next = instantLocal >= nextAdjusted ? nextLocal : instantAdjusted - offsetLocal;\n                    // find out if the new offset is before or after the transition\n                    int offset = getOffset(next);\n                    if (offset == offsetLocal) {\n                        return offsetLocal;\n                    } else {\n                        return offset;\n                    }\n                }\n                offsetLocal --;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..69da9de0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    // if the local instant is after the next transition,\n+                    // use this transition as the divider, otherwise\n+                    // use the current transition\n+                    long next = instantLocal >= nextAdjusted ? nextLocal : instantAdjusted - offsetLocal;\n+                    // find out if the new offset is before or after the transition\n+                    int offset = getOffset(next);\n+                    if (offset == offsetLocal) {\n+                        return offsetLocal;\n+                    } else {\n+                        return offset;\n+                    }\n+                }\n+                offsetLocal --;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}