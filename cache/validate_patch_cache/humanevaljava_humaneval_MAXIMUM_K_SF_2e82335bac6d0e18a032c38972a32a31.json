{
    "patch": "    public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n        PriorityQueue<Integer> heap = new PriorityQueue<>(Collections.reverseOrder());\n        for(int num: arr) {\n            heap.add(num);\n        }\n        ArrayList<Integer> result = new ArrayList<>();\n        int count = 0;\n        while(count < k) {\n            result.add(heap.poll());\n            count++;\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..2b5692c 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -30,10 +30,15 @@ import java.util.Collections;\n \n public class MAXIMUM_K {\n     public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n-        Collections.sort(arr);\n+        PriorityQueue<Integer> heap = new PriorityQueue<>(Collections.reverseOrder());\n+        for(int num: arr) {\n+            heap.add(num);\n+        }\n         ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n-            result.add(arr.get(i));\n+        int count = 0;\n+        while(count < k) {\n+            result.add(heap.poll());\n+            count++;\n         }\n         return result;\n     }",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[33,9] cannot find symbol",
    "test_result": "ERROR"
}