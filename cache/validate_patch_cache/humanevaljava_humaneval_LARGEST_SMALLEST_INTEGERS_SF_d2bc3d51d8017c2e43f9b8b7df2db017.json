{
    "patch": "public static int[] largest_smallest_integers(int[] lst) {\n    boolean negative = false, positive = false;\n    int max_negative = Integer.MIN_VALUE, min_positive = Integer.MAX_VALUE; \n    for(int i = 0; i < lst.length; i++) {\n        if(lst[i] < 0) {\n            negative = true;\n            max_negative = Math.max(max_negative, lst[i]);\n        } else if(lst[i] > 0) {\n            positive = true;\n            min_positive = Math.min(min_positive, lst[i]);\n        }\n    }\n    if(!negative && !positive) {\n        // if list contains only zeros\n        int[] result = {0, 0};\n        return result;\n    }\n    if(!negative) max_negative = min_positive;\n    if(!positive) min_positive = max_negative;\n    int[] result = {max_negative, min_positive};\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java b/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java\nindex 0f5a219..906c47a 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_SMALLEST_INTEGERS.java\n@@ -13,21 +13,26 @@ package humaneval.buggy;\n  */\n \n public class LARGEST_SMALLEST_INTEGERS {\n-    public static int[] largest_smallest_integers(int[] lst) {\n-        boolean negative = true, positive = true;\n-        int max_negative = Integer.MAX_VALUE, min_positive = Integer.MIN_VALUE; \n-        for(int i = 1; i < lst.length; i++) {\n-            if(lst[i] < 0) {\n-                negative = false;\n-                max_negative = Math.min(max_negative, lst[i]);\n-            } else if(lst[i] > 0) {\n-                positive = true;\n-                min_positive = Math.min(min_positive, lst[i]);\n-            }\n+public static int[] largest_smallest_integers(int[] lst) {\n+    boolean negative = false, positive = false;\n+    int max_negative = Integer.MIN_VALUE, min_positive = Integer.MAX_VALUE; \n+    for(int i = 0; i < lst.length; i++) {\n+        if(lst[i] < 0) {\n+            negative = true;\n+            max_negative = Math.max(max_negative, lst[i]);\n+        } else if(lst[i] > 0) {\n+            positive = true;\n+            min_positive = Math.min(min_positive, lst[i]);\n         }\n-        if(!negative) max_negative = 0;\n-        if(!positive) min_positive = 0;\n-        int[] result = {max_negative, min_positive};\n+    }\n+    if(!negative && !positive) {\n+        // if list contains only zeros\n+        int[] result = {0, 0};\n         return result;\n     }\n+    if(!negative) max_negative = min_positive;\n+    if(!positive) min_positive = max_negative;\n+    int[] result = {max_negative, min_positive};\n+    return result;\n+}\n }",
    "result_reason": "   TEST_LARGEST_SMALLEST_INTEGERS.test_0:8 arrays first differed at element [0]; expected:<0> but was:<1>",
    "test_result": "FAIL"
}