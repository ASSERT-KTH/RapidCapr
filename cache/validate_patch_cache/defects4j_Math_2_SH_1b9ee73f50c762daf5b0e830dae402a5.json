{
    "patch": "if (getSampleSize() <= 0 || getPopulationSize() <= 0 || getNumberOfSuccesses() < 0) {\n    return 0.0;\n}\ndouble successRatio = ((double) getNumberOfSuccesses()) / ((double) getPopulationSize());\ndouble mean = successRatio * ((double) getSampleSize());\nreturn mean > 0.0 ? mean : 0.0;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..5dc880218 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -265,7 +265,12 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+if (getSampleSize() <= 0 || getPopulationSize() <= 0 || getNumberOfSuccesses() < 0) {\n+    return 0.0;\n+}\n+double successRatio = ((double) getNumberOfSuccesses()) / ((double) getPopulationSize());\n+double mean = successRatio * ((double) getSampleSize());\n+return mean > 0.0 ? mean : 0.0;\n     }\n \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}