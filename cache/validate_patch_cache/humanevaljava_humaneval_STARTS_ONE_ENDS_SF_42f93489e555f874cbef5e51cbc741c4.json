{
    "patch": "public static int starts_one_ends(int n) {\n    if (n <= 0) {\n        throw new IllegalArgumentException(\"n must be a positive integer.\");\n    } else if (n == 1) {\n        return 1;\n    } else {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1\");\n        for (int i = 0; i < n - 2; i++) {\n            sb.append(\"0\");\n        }\n        sb.append(\"8\");\n        return Integer.parseInt(sb.toString());\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\nindex b8a4679..c7c575e 100644\n--- a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n+++ b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n@@ -4,9 +4,19 @@ package humaneval.buggy;\n positive integers that start or end with 1. */\n \n public class STARTS_ONE_ENDS {\n-    public static int starts_one_ends(int n) {\n-        if (n == 1)\n-            return 1;\n-        return (int) ((10 + 9) * Math.pow(10, n - 2));\n+public static int starts_one_ends(int n) {\n+    if (n <= 0) {\n+        throw new IllegalArgumentException(\"n must be a positive integer.\");\n+    } else if (n == 1) {\n+        return 1;\n+    } else {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"1\");\n+        for (int i = 0; i < n - 2; i++) {\n+            sb.append(\"0\");\n+        }\n+        sb.append(\"8\");\n+        return Integer.parseInt(sb.toString());\n     }\n }\n+}",
    "result_reason": "   TEST_STARTS_ONE_ENDS.test_2:23 expected:<108> but was:<180>",
    "test_result": "FAIL"
}