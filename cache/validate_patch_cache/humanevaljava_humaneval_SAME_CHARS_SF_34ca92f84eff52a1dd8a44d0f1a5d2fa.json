{
    "patch": "public static boolean same_chars(String s0, String s1) {\n    if (s0.length() != s1.length()) {\n        return false;\n    }\n\n    Map<Character, Integer> charCounts = new HashMap<>();\n\n    for (char c : s0.toCharArray()) {\n        charCounts.merge(c, 1, Integer::sum);\n    }\n\n    for (char c : s1.toCharArray()) {\n        if (!charCounts.containsKey(c)) {\n            return false;\n        }\n\n        charCounts.merge(c, -1, Integer::sum);\n\n        if (charCounts.get(c) == 0) {\n            charCounts.remove(c);\n        }\n    }\n\n    return charCounts.isEmpty();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SAME_CHARS.java b/src/main/java/humaneval/buggy/SAME_CHARS.java\nindex 9367e85..1d32045 100644\n--- a/src/main/java/humaneval/buggy/SAME_CHARS.java\n+++ b/src/main/java/humaneval/buggy/SAME_CHARS.java\n@@ -17,16 +17,29 @@ False\n False */\n \n public class SAME_CHARS {\n-    public static boolean same_chars(String s0, String s1) {\n-        ArrayList<Character> set0 = new ArrayList<Character>();\n-        ArrayList<Character> set1 = new ArrayList<Character>();\n+public static boolean same_chars(String s0, String s1) {\n+    if (s0.length() != s1.length()) {\n+        return false;\n+    }\n+\n+    Map<Character, Integer> charCounts = new HashMap<>();\n+\n+    for (char c : s0.toCharArray()) {\n+        charCounts.merge(c, 1, Integer::sum);\n+    }\n \n-        for (char c0 : s0.toCharArray()) {\n-            set0.add(c0);\n+    for (char c : s1.toCharArray()) {\n+        if (!charCounts.containsKey(c)) {\n+            return false;\n         }\n-        for (char c1 : s1.toCharArray()) {\n-            set1.add(c1);\n+\n+        charCounts.merge(c, -1, Integer::sum);\n+\n+        if (charCounts.get(c) == 0) {\n+            charCounts.remove(c);\n         }\n-        return set0.equals(set1);\n     }\n+\n+    return charCounts.isEmpty();\n+}\n }",
    "result_reason": "   TEST_SAME_CHARS.test_0:7 expected:<false> but was:<true>",
    "test_result": "FAIL"
}