{
    "patch": "public ReturnObject apply(Method method) {\n    if(method.getReturnType().isAssignableFrom(ArrayList.class)) {\n        return new ReturnObject(new ArrayList<>());\n    } else if (method.getReturnType().isAssignableFrom(LinkedList.class)) {\n        return new ReturnObject(new LinkedList<>());\n    } else if (method.getReturnType().isAssignableFrom(HashSet.class)) {\n        return new ReturnObject(new HashSet<>());\n    } else if (method.getReturnType().isAssignableFrom(TreeSet.class)) {\n        return new ReturnObject(new TreeSet<>());\n    } else if (method.getReturnType().isAssignableFrom(HashMap.class)) {\n        return new ReturnObject(new HashMap<>());\n    } else if (method.getReturnType().isAssignableFrom(TreeMap.class)) {\n        return new ReturnObject(new TreeMap<>());\n    }\n    return new ReturnObject(null);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}