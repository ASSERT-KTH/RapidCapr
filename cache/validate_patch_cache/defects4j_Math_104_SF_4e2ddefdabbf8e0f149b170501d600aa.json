{
    "patch": "public static double regularizedGamma(double a, double x, double eps, int maxIterations) {\n    if ((a <= 0.0) || (x < 0.0)) {\n        throw new IllegalArgumentException();\n    }\n\n    if (x == 0.0) {\n        return 0.0;\n    }\n\n    final double big = Double.MAX_VALUE * 0.5;\n    double num = 0.0;\n    double den = Double.POSITIVE_INFINITY;\n    double sum = num / den;\n    double ap = a;\n    double del = 1.0 / ap;\n    int n = 1;\n    boolean cont = true;\n    while (cont && (n <= maxIterations)) {\n        num += del;\n        den = x + ap * den;\n        if (Math.abs(den) < eps) {\n            den = eps;\n        }\n        del = num / den;\n        sum += del;\n        if (Math.abs(del / sum) < eps) {\n            cont = false;\n        }\n        ap += 1.0;\n        n += 1;\n    }\n    if (n > maxIterations) {\n        throw new RuntimeException(\"Maximum number of iterations exceeded\");\n    }\n    return Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..500696660 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,42 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x, double eps, int maxIterations) {\n+    if ((a <= 0.0) || (x < 0.0)) {\n+        throw new IllegalArgumentException();\n+    }\n+\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+\n+    final double big = Double.MAX_VALUE * 0.5;\n+    double num = 0.0;\n+    double den = Double.POSITIVE_INFINITY;\n+    double sum = num / den;\n+    double ap = a;\n+    double del = 1.0 / ap;\n+    int n = 1;\n+    boolean cont = true;\n+    while (cont && (n <= maxIterations)) {\n+        num += del;\n+        den = x + ap * den;\n+        if (Math.abs(den) < eps) {\n+            den = eps;\n+        }\n+        del = num / den;\n+        sum += del;\n+        if (Math.abs(del / sum) < eps) {\n+            cont = false;\n+        }\n+        ap += 1.0;\n+        n += 1;\n+    }\n+    if (n > maxIterations) {\n+        throw new RuntimeException(\"Maximum number of iterations exceeded\");\n+    }\n+    return Math.exp(-x + a * Math.log(x) - Gamma.logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}