{
    "patch": "        } else if ((parent.isAssign() && n.getFirstChild().isName() && n.getFirstChild().getString().equals(\"arguments\"))\n            || (parent.isCall() || parent.isNew() || NodeUtil.isExpressionResultUsed(parent))\n              && parent.getFirstChild() == n) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..9fd5eb46 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,9 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+        } else if ((parent.isAssign() && n.getFirstChild().isName() && n.getFirstChild().getString().equals(\"arguments\"))\n+            || (parent.isCall() || parent.isNew() || NodeUtil.isExpressionResultUsed(parent))\n+              && parent.getFirstChild() == n) {\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}