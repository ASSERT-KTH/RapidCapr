{
    "patch": "public double getTypedPercent(JSONObject jsonObject) {\n    double click1 = 0.0, click2 = 0.0, click3 = 0.0, allClicks = 0.0;\n    try {\n        click1 = Double.parseDouble(jsonObject.getString(\"click1\"));\n        click2 = Double.parseDouble(jsonObject.getString(\"click2\"));\n        click3 = Double.parseDouble(jsonObject.getString(\"click3\"));\n        allClicks = Double.parseDouble(jsonObject.getString(\"allClicks\"));\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n    double percent = (click1 + click2 + click3) / allClicks * 100;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..51a1baf0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JSONObject jsonObject) {\n+    double click1 = 0.0, click2 = 0.0, click3 = 0.0, allClicks = 0.0;\n+    try {\n+        click1 = Double.parseDouble(jsonObject.getString(\"click1\"));\n+        click2 = Double.parseDouble(jsonObject.getString(\"click2\"));\n+        click3 = Double.parseDouble(jsonObject.getString(\"click3\"));\n+        allClicks = Double.parseDouble(jsonObject.getString(\"allClicks\"));\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+    double percent = (click1 + click2 + click3) / allClicks * 100;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}