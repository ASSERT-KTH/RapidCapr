{
    "patch": "            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n                throw new IllegalFieldValueException(\n                        DateTimeFieldType.year(), \"Invalid year of \" + millis,\n                        e);\n            } else if (e.getDurationFieldType() == DurationFieldType.months()) {\n                throw new IllegalFieldValueException(\n                        DateTimeFieldType.monthOfYear(), \"Invalid month of \" + millis,\n                        e);\n            } else if (e.getDurationFieldType() == DurationFieldType.weeks()) {\n                throw new IllegalFieldValueException(\n                        DateTimeFieldType.weekOfWeekyear(), \"Invalid week of \" + millis,\n                        e);\n            } else if (e.getDurationFieldType() == DurationFieldType.days()) {\n                throw new IllegalFieldValueException(\n                        DateTimeFieldType.dayOfMonth(), \"Invalid day of \" + millis,\n                        e);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fda6f326 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n+                throw new IllegalFieldValueException(\n+                        DateTimeFieldType.year(), \"Invalid year of \" + millis,\n+                        e);\n+            } else if (e.getDurationFieldType() == DurationFieldType.months()) {\n+                throw new IllegalFieldValueException(\n+                        DateTimeFieldType.monthOfYear(), \"Invalid month of \" + millis,\n+                        e);\n+            } else if (e.getDurationFieldType() == DurationFieldType.weeks()) {\n+                throw new IllegalFieldValueException(\n+                        DateTimeFieldType.weekOfWeekyear(), \"Invalid week of \" + millis,\n+                        e);\n+            } else if (e.getDurationFieldType() == DurationFieldType.days()) {\n+                throw new IllegalFieldValueException(\n+                        DateTimeFieldType.dayOfMonth(), \"Invalid day of \" + millis,\n+                        e);\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}