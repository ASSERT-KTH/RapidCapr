{
    "patch": "MockSettingsImpl settings = (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.CALLS_REAL_METHODS).serializable();\nMockHandler<? super T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\nT proxiedMock = mockMaker.createMock(settings, invocationContainer);\n((Factory) proxy()).setCallbacks(new Callback[] { newFilter });",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..33366a57d 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,14 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockSettingsImpl settings = (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.CALLS_REAL_METHODS).serializable();\n+MockHandler<? super T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\n+T proxiedMock = mockMaker.createMock(settings, invocationContainer);\n+((Factory) proxy()).setCallbacks(new Callback[] { newFilter });\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}