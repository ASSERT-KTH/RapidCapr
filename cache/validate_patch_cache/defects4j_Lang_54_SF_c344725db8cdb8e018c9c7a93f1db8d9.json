{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int separatorPos = str.indexOf(str.charAt(2), 3);\n        if (separatorPos == -1) {\n            if (len - 2 > 0) {\n                return new Locale(str.substring(0, 2), str.substring(3));\n            } else {\n                return new Locale(str.substring(0, 2));\n            }\n        } else {\n            if (separatorPos - 2 == 0) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else {\n                char ch3 = str.charAt(3);\n                if (ch3 == '-' || ch3 == '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (separatorPos == len - 1) {\n                    return new Locale(str.substring(0, 2), str.substring(3, separatorPos));\n                } else {\n                    if (str.charAt(separatorPos + 1) == '_') {\n                        return new Locale(str.substring(0, 2), str.substring(3, separatorPos), str.substring(separatorPos + 2));\n                    } else {\n                        if (len - separatorPos - 1 > 1) {\n                            return new Locale(str.substring(0, 2), str.substring(3, separatorPos), str.substring(separatorPos + 1));\n                        } else {\n                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..04a6744b 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,57 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    } else {\n+        if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        int separatorPos = str.indexOf(str.charAt(2), 3);\n+        if (separatorPos == -1) {\n+            if (len - 2 > 0) {\n+                return new Locale(str.substring(0, 2), str.substring(3));\n+            } else {\n+                return new Locale(str.substring(0, 2));\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+        } else {\n+            if (separatorPos - 2 == 0) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n             } else {\n-                if (str.charAt(5) != '_') {\n+                char ch3 = str.charAt(3);\n+                if (ch3 == '-' || ch3 == '_') {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                if (separatorPos == len - 1) {\n+                    return new Locale(str.substring(0, 2), str.substring(3, separatorPos));\n+                } else {\n+                    if (str.charAt(separatorPos + 1) == '_') {\n+                        return new Locale(str.substring(0, 2), str.substring(3, separatorPos), str.substring(separatorPos + 2));\n+                    } else {\n+                        if (len - separatorPos - 1 > 1) {\n+                            return new Locale(str.substring(0, 2), str.substring(3, separatorPos), str.substring(separatorPos + 1));\n+                        } else {\n+                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                        }\n+                    }\n+                }\n             }\n         }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}