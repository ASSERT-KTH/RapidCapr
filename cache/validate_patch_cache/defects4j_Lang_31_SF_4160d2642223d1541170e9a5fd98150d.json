{
    "patch": "import java.util.Arrays;\n\npublic class StringUtils {\n\n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n        int strLength = str.length();\n        int searchLength = searchChars.length;\n        int max = Integer.MIN_VALUE;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < strLength; i++) {\n            int ch = str.charAt(i);\n            if (isSupplementaryCodePoint(ch)) {\n                i++;\n            }\n            if (contains(searchChars, ch)) {\n                return true;\n            }\n            if (isSupplementaryCodePoint(ch)) {\n                i++;\n            }\n        }\n        return false;\n    }\n\n    private static boolean contains(char[] array, int valueToFind) {\n        for (int i = 0; i < array.length; i++) {\n            if (array[i] == valueToFind) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static boolean isSupplementaryCodePoint(int codePoint) {\n        return codePoint >= 0x10000 && codePoint <= 0x10FFFF;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..2f324e39 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,46 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.util.Arrays;\n+\n+public class StringUtils {\n+\n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+        int strLength = str.length();\n+        int searchLength = searchChars.length;\n+        int max = Integer.MIN_VALUE;\n+        int min = Integer.MAX_VALUE;\n+        for (int i = 0; i < strLength; i++) {\n+            int ch = str.charAt(i);\n+            if (isSupplementaryCodePoint(ch)) {\n+                i++;\n+            }\n+            if (contains(searchChars, ch)) {\n+                return true;\n+            }\n+            if (isSupplementaryCodePoint(ch)) {\n+                i++;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean contains(char[] array, int valueToFind) {\n+        for (int i = 0; i < array.length; i++) {\n+            if (array[i] == valueToFind) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean isSupplementaryCodePoint(int codePoint) {\n+        return codePoint >= 0x10000 && codePoint <= 0x10FFFF;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}