{
    "patch": "if (len == 2 || (len == 5 && str.charAt(2) == '_') || (len > 5 && str.charAt(2) == '_' && str.charAt(5) == '_')) {\n    for (int i = 0; i < len; i++) {\n        char ch = str.charAt(i);\n        if (i == 0 && (ch < 'a' || ch > 'z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if (i == 1 && (ch < 'a' || ch > 'z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if (i == 3 && ch != '_' && (ch < 'A' || ch > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if (i == 4 && ch != '_' && (ch < 'A' || ch > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if (i == 6 && ch != '_' && (ch < 'a' || ch > 'z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if (i > 6 && (ch < 'a' || ch > 'z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    switch (len) {\n        case 2:\n            return new Locale(str);\n        case 5:\n            if (str.charAt(2) == '_') {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            }\n            break;\n        default:\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }\n}\nthrow new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..65dec458 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,36 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len == 2 || (len == 5 && str.charAt(2) == '_') || (len > 5 && str.charAt(2) == '_' && str.charAt(5) == '_')) {\n+    for (int i = 0; i < len; i++) {\n+        char ch = str.charAt(i);\n+        if (i == 0 && (ch < 'a' || ch > 'z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if (i == 1 && (ch < 'a' || ch > 'z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if (i == 3 && ch != '_' && (ch < 'A' || ch > 'Z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if (i == 4 && ch != '_' && (ch < 'A' || ch > 'Z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if (i == 6 && ch != '_' && (ch < 'a' || ch > 'z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if (i > 6 && (ch < 'a' || ch > 'z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    }\n+    switch (len) {\n+        case 2:\n+            return new Locale(str);\n+        case 5:\n+            if (str.charAt(2) == '_') {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            }\n+            break;\n+        default:\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+    }\n+}\n+throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}