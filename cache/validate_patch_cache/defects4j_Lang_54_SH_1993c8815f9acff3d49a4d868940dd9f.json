{
    "patch": "if (len == 5 || len == 7) {\n    if (str.charAt(2) != '_' || !Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    if (len == 7 && (str.charAt(5) != '_' || str.charAt(6) == '_')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    } else {\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 7));\n    }\n} else if (len >= 1 && len <= 2 || len >= 4 && len <= 6) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n} else {\n    int index = str.indexOf(\"_\", 2);\n\n    if (index == -1 || index == len - 1) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    String language = str.substring(0, index);\n    String country = str.substring(index + 1);\n\n    if (language.length() != 2 || !Character.isLowerCase(language.charAt(0)) || !Character.isLowerCase(language.charAt(1))) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (country.length() != 2 || !Character.isUpperCase(country.charAt(0)) || !Character.isUpperCase(country.charAt(1))) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    return new Locale(language, country);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..7ec1749d 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,42 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len == 5 || len == 7) {\n+    if (str.charAt(2) != '_' || !Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    \n+    if (len == 7 && (str.charAt(5) != '_' || str.charAt(6) == '_')) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 5) {\n+        return new Locale(str.substring(0, 2), str.substring(3, 5));\n+    } else {\n+        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, 7));\n+    }\n+} else if (len >= 1 && len <= 2 || len >= 4 && len <= 6) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+} else {\n+    int index = str.indexOf(\"_\", 2);\n+\n+    if (index == -1 || index == len - 1) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    \n+    String language = str.substring(0, index);\n+    String country = str.substring(index + 1);\n+\n+    if (language.length() != 2 || !Character.isLowerCase(language.charAt(0)) || !Character.isLowerCase(language.charAt(1))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (country.length() != 2 || !Character.isUpperCase(country.charAt(0)) || !Character.isUpperCase(country.charAt(1))) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    return new Locale(language, country);\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}