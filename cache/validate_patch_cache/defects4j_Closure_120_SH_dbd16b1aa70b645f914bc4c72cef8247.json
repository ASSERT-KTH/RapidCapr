{
    "patch": "        if (block.isFunction) {\n          FunctionScope functionScope = block.getScope();\n          if (functionScope.isDeclared(name)) {\n            return false;\n          }\n          break;\n        } else if (block.isLoop) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..892df71b 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        if (block.isFunction) {\n+          FunctionScope functionScope = block.getScope();\n+          if (functionScope.isDeclared(name)) {\n+            return false;\n+          }\n+          break;\n+        } else if (block.isLoop) {\n+          return false;\n+        }\n+      }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}