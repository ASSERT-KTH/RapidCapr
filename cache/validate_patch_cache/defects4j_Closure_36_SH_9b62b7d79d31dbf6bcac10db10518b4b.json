{
    "patch": "          if (value.isFunction()\n              && (convention.getSingletonGetterClassName(value) != null\n                  || convention.getSingletonGetterClassName(reference) != null)) {\n            // Don't inline a non-constructor getter if it's not called with 'new'.\n            // Issue https://github.com/google/closure-compiler/issues/372\n            if (!callNode.isNew()) {\n              return false;\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..8e4e545e 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,15 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (value.isFunction()\n+              && (convention.getSingletonGetterClassName(value) != null\n+                  || convention.getSingletonGetterClassName(reference) != null)) {\n+            // Don't inline a non-constructor getter if it's not called with 'new'.\n+            // Issue https://github.com/google/closure-compiler/issues/372\n+            if (!callNode.isNew()) {\n+              return false;\n+            }\n+          }\n         }\n       }\n ",
    "result_reason": "error: method getSingletonGetterClassName in interface CodingConvention cannot be applied to given types;",
    "test_result": "ERROR"
}