{
    "patch": "          if (topType.isStruct()) {\n            ObjectType objType = topType.toMaybeObjectType();\n            if (objType.hasProperty(\"length\")) {\n              ObjectType arrayType = registry.getNativeObjectType(JSTypeNative.ARRAY_FUNCTION_TYPE);\n              if (arrayType != null) {\n                return arrayType;\n              }\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..12345c1e 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,15 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+          if (topType.isStruct()) {\n+            ObjectType objType = topType.toMaybeObjectType();\n+            if (objType.hasProperty(\"length\")) {\n+              ObjectType arrayType = registry.getNativeObjectType(JSTypeNative.ARRAY_FUNCTION_TYPE);\n+              if (arrayType != null) {\n+                return arrayType;\n+              }\n+            }\n+          }\n         }\n \n         @Override",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}