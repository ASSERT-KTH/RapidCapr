{
    "patch": "private Node parseContextTypeExpression(JsDocToken token) {\n   // parse the type expression\n   Node typeExpression = parseTypeExpression(token);\n   if (typeExpression == null) {\n      return parseTypeName(token);\n   } else {\n      return typeExpression;\n   }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..0fb8b623 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1904,9 +1904,15 @@ public final class JsDocInfoParser {\n    * ContextTypeExpression := BasicTypeExpression | '?'\n    * For expressions on the right hand side of a this: or new:\n    */\n-  private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n-  }\n+private Node parseContextTypeExpression(JsDocToken token) {\n+   // parse the type expression\n+   Node typeExpression = parseTypeExpression(token);\n+   if (typeExpression == null) {\n+      return parseTypeName(token);\n+   } else {\n+      return typeExpression;\n+   }\n+}\n \n   /**\n    * BasicTypeExpression := '*' | 'null' | 'undefined' | TypeName",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}