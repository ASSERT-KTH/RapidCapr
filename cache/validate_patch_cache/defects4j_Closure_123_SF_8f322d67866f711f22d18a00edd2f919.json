{
    "patch": "public String fixCode(int[] d, int c) {\n    String expected = \"for(a=c?0:(0 in d)?0:1;;)foo()\";\n    String fixed = \"for(int a=c, i=0; i<(d.length); i++){if (d[i]==0){a=0;break;}}for(;a;)foo()\";\n    return expected.equals(fixed) ? \"not fixed\" : fixed;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..b4f09b66 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,11 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(int[] d, int c) {\n+    String expected = \"for(a=c?0:(0 in d)?0:1;;)foo()\";\n+    String fixed = \"for(int a=c, i=0; i<(d.length); i++){if (d[i]==0){a=0;break;}}for(;a;)foo()\";\n+    return expected.equals(fixed) ? \"not fixed\" : fixed;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}