{
    "patch": "      // parse the type expression\n      Node typeExpression = parseTypeExpression(token);\n      if (typeExpression == null) {\n          // if type expression can't be parsed, try parsing as type name\n          return parseTypeName(token);\n      } else {\n          return typeExpression;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..b09dff1d 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,14 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n+      // parse the type expression\n+      Node typeExpression = parseTypeExpression(token);\n+      if (typeExpression == null) {\n+          // if type expression can't be parsed, try parsing as type name\n           return parseTypeName(token);\n+      } else {\n+          return typeExpression;\n+      }\n   }\n \n   /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}