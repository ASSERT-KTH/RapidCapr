{
    "patch": "return (Double.isNaN(min) || Double.isNaN(max) || f.value(min) * f.value(max) > 0) ? Double.NaN : solve(f, min, max, (min + max) / 2.0);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..3d000025b 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+return (Double.isNaN(min) || Double.isNaN(max) || f.value(min) * f.value(max) > 0) ? Double.NaN : solve(f, min, max, (min + max) / 2.0);\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "java.lang.StackOverflowError",
    "test_result": "FAIL"
}