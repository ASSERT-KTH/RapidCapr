{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n                // if the previous transition puts us in the other DST offset, return that offset,\n                // otherwise return the original offset as we are still in the same DST offset\n                if (prevLocal != prevAdjusted) {\n                    return getOffset(prevAdjusted);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..5a3f54ca 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long prevLocal = previousTransition(instantAdjusted);\n+                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+                // if the previous transition puts us in the other DST offset, return that offset,\n+                // otherwise return the original offset as we are still in the same DST offset\n+                if (prevLocal != prevAdjusted) {\n+                    return getOffset(prevAdjusted);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}