{
    "patch": "    if (NodeUtil.isGet(parent) && NodeUtil.isGet(parent.getFirstChild())) {\n      Node lhs = parent.getFirstChild();\n      Node llhs = lhs.getFirstChild();\n      if (llhs.getType() == Token.NAME && \"Object\".equals(llhs.getString())) {\n        String propName = lhs.getLastChild().getString();\n        if (\"create\".equals(propName)) {\n          return false;\n        } else if (\"defineProperties\".equals(propName)) {\n          // We can't always tell if defineProperties is being called on an object literal,\n          // so we don't restrict it.\n        } else if (\"assign\".equals(propName)) {\n          return false;\n        }\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..d664b0ac 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,21 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+    if (NodeUtil.isGet(parent) && NodeUtil.isGet(parent.getFirstChild())) {\n+      Node lhs = parent.getFirstChild();\n+      Node llhs = lhs.getFirstChild();\n+      if (llhs.getType() == Token.NAME && \"Object\".equals(llhs.getString())) {\n+        String propName = lhs.getLastChild().getString();\n+        if (\"create\".equals(propName)) {\n+          return false;\n+        } else if (\"defineProperties\".equals(propName)) {\n+          // We can't always tell if defineProperties is being called on an object literal,\n+          // so we don't restrict it.\n+        } else if (\"assign\".equals(propName)) {\n+          return false;\n+        }\n+      }\n+    }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}