{
    "patch": "public String getProp(String name, String defaultValue) {\n    try {\n        FileInputStream fileInputStream = new FileInputStream(\"config.properties\");\n        Properties properties = new Properties();\n        properties.load(fileInputStream);\n        fileInputStream.close();\n        String value = properties.getProperty(name, defaultValue);\n        if (value == null || value.equals(\"\")) {\n            throw new IllegalArgumentException(\"Value is null or empty\");\n        }\n        return value;\n    } catch (IOException | IllegalArgumentException e) {\n        System.err.println(e.getMessage());\n        return defaultValue;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..eaae69c7 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getProp(String name, String defaultValue) {\n+    try {\n+        FileInputStream fileInputStream = new FileInputStream(\"config.properties\");\n+        Properties properties = new Properties();\n+        properties.load(fileInputStream);\n+        fileInputStream.close();\n+        String value = properties.getProperty(name, defaultValue);\n+        if (value == null || value.equals(\"\")) {\n+            throw new IllegalArgumentException(\"Value is null or empty\");\n+        }\n+        return value;\n+    } catch (IOException | IllegalArgumentException e) {\n+        System.err.println(e.getMessage());\n+        return defaultValue;\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: multi-catch statement is not supported in -source 1.6",
    "test_result": "ERROR"
}