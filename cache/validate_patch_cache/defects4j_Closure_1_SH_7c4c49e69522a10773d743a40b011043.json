{
    "patch": "Set<String> referenced = new HashSet<>();\nNodeTraversal.traverse(compiler, fnScope.getRootNode(),\n    new CollectNamedVariables(referenced, false));\n\n// Remove unused function arguments\nNode function = fnScope.getRootNode();\nPreconditions.checkState(function.isFunction());\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n  // The parameters object literal setters can not be removed.\n  return;\n}\n\nNode argList = NodeUtil.getFunctionParameters(function);\nboolean modifyCallers = modifyCallSites\n    && callSiteOptimizer.canModifyCallers(function);\nif (!modifyCallers) {\n  // Strip unreferenced args off the end of the function declaration.\n  Node lastArg;\n  while ((lastArg = argList.getLastChild()) != null) {\n    Var var = fnScope.getVar(lastArg.getString());\n    if (!referenced.contains(var.getName())) {\n      argList.removeChild(lastArg);\n      compiler.reportCodeChange();\n    } else {\n      break;\n    }\n  }\n} else {\n  callSiteOptimizer.optimize(fnScope, referenced);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d9c44da3 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,36 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Set<String> referenced = new HashSet<>();\n+NodeTraversal.traverse(compiler, fnScope.getRootNode(),\n+    new CollectNamedVariables(referenced, false));\n+\n+// Remove unused function arguments\n+Node function = fnScope.getRootNode();\n+Preconditions.checkState(function.isFunction());\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+  // The parameters object literal setters can not be removed.\n+  return;\n+}\n+\n+Node argList = NodeUtil.getFunctionParameters(function);\n+boolean modifyCallers = modifyCallSites\n+    && callSiteOptimizer.canModifyCallers(function);\n+if (!modifyCallers) {\n+  // Strip unreferenced args off the end of the function declaration.\n+  Node lastArg;\n+  while ((lastArg = argList.getLastChild()) != null) {\n+    Var var = fnScope.getVar(lastArg.getString());\n+    if (!referenced.contains(var.getName())) {\n+      argList.removeChild(lastArg);\n+      compiler.reportCodeChange();\n+    } else {\n+      break;\n+    }\n+  }\n+} else {\n+  callSiteOptimizer.optimize(fnScope, referenced);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}