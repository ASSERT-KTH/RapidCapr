{
    "patch": "int depth = 0;\nint max_depth = 0;\nfor (char c : paren_group.toCharArray()){\n    if (c == '('){\n        depth += 1;\n        max_depth = Math.max(depth, max_depth);\n    } else if (c == ')') {\n        depth -= 1;\n        if (depth < 0) {\n            throw new IllegalArgumentException(\"Invalid input: unbalanced parentheses\");\n        }\n    }\n}\nresult.add(max_depth);",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\nindex 6bc914f..94ca789 100644\n--- a/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n+++ b/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java\n@@ -15,6 +15,20 @@ public class PARSE_NESTED_PARENS {\n                 if (c == '('){\n                     depth += 1;\n                     max_depth = Math.max(depth, max_depth);\n+int depth = 0;\n+int max_depth = 0;\n+for (char c : paren_group.toCharArray()){\n+    if (c == '('){\n+        depth += 1;\n+        max_depth = Math.max(depth, max_depth);\n+    } else if (c == ')') {\n+        depth -= 1;\n+        if (depth < 0) {\n+            throw new IllegalArgumentException(\"Invalid input: unbalanced parentheses\");\n+        }\n+    }\n+}\n+result.add(max_depth);\n                 }\n             }\n             result.add(max_depth);",
    "result_reason": " /tmp/humaneval-PARSE_NESTED_PARENS/src/main/java/humaneval/buggy/PARSE_NESTED_PARENS.java:[18,5] variable depth is already defined in method parse_nested_parens(java.lang.String)",
    "test_result": "ERROR"
}