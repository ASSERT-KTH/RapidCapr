{
    "patch": "                // if the offsets differ by more than 1 hour, we must be near a DST boundary\n                if (Math.abs(offsetLocal - offsetAdjusted) > 1) {\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    // if the next transition times differ, return the offsetLocal\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..877e6f1a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // if the offsets differ by more than 1 hour, we must be near a DST boundary\n+                if (Math.abs(offsetLocal - offsetAdjusted) > 1) {\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    // if the next transition times differ, return the offsetLocal\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}