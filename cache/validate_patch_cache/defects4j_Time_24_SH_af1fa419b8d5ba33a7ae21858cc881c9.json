{
    "patch": "            if (savedFields[i].getValue() < savedFields[i].getMinimumValue() || savedFields[i].getValue() > savedFields[i].getMaximumValue()) {\n                if (text != null) {\n                    throw new IllegalFieldValueException(\"Value \" + savedFields[i].getValue() + \" for \" + savedFields[i].getName() +\n                            \" is not supported: \" + text, savedFields[i].getFieldType(), savedFields[i].getValue(), null);\n                } else {\n                    throw new IllegalFieldValueException(\"Value \" + savedFields[i].getValue() + \" for \" + savedFields[i].getName() +\n                            \" is not supported\", savedFields[i].getFieldType(), savedFields[i].getValue(), null);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..eff65259 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].getValue() < savedFields[i].getMinimumValue() || savedFields[i].getValue() > savedFields[i].getMaximumValue()) {\n+                if (text != null) {\n+                    throw new IllegalFieldValueException(\"Value \" + savedFields[i].getValue() + \" for \" + savedFields[i].getName() +\n+                            \" is not supported: \" + text, savedFields[i].getFieldType(), savedFields[i].getValue(), null);\n+                } else {\n+                    throw new IllegalFieldValueException(\"Value \" + savedFields[i].getValue() + \" for \" + savedFields[i].getName() +\n+                            \" is not supported\", savedFields[i].getFieldType(), savedFields[i].getValue(), null);\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}