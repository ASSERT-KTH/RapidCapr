{
    "patch": "StringBuilder result = new StringBuilder(input.length());\nfor(int i=0;i<input.length();i++) {\n    char c = input.charAt(i);\n    if(c == '\\\\') {\n        switch(input.charAt(i+1)) {\n            case 'n': result.append('\\n'); i++; break;\n            case 'r': result.append('\\r'); i++; break;\n            case 't': result.append('\\t'); i++; break;\n            case '\"': result.append('\"'); i++; break;\n            case '\\\\': result.append('\\\\'); i++; break;\n            case 'b': result.append('\\b'); i++; break;\n            case 'f': result.append('\\f'); i++; break;\n            case 'u':\n                try {\n                    result.append((char) Integer.parseInt(input.substring(i+2, i+6), 16));\n                    i += 5;\n                    break;\n                } catch(NumberFormatException e) {\n                    break;\n                }\n            default: result.append('\\\\'); break;\n        }\n    } else {\n        result.append(c);\n    }\n}\nString rebuilt = result.toString();\nassertTrue(\"One or more errors detected\", input.equals(rebuilt)); // comparing the original input to the rebuilt string",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}