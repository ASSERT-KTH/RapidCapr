{
    "patch": "import java.nio.charset.Charset;\n\npublic class StringUtils {\n  \n  public static boolean containsIso8859_1EscapeCharacters(String s) {\n    Charset iso8859_1 = Charset.forName(\"ISO-8859-1\");\n    byte[] bytes = s.getBytes(iso8859_1);\n    for (byte b : bytes) {\n      if (b == 27) {  // ESC character\n        return true;\n      }\n    }\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e8fd89ca 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,21 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.nio.charset.Charset;\n+\n+public class StringUtils {\n+  \n+  public static boolean containsIso8859_1EscapeCharacters(String s) {\n+    Charset iso8859_1 = Charset.forName(\"ISO-8859-1\");\n+    byte[] bytes = s.getBytes(iso8859_1);\n+    for (byte b : bytes) {\n+      if (b == 27) {  // ESC character\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}