{
    "patch": "    protected BasePeriod(long duration) {\n        this(duration, PeriodType.standard());\n    }\n    \n    protected BasePeriod(long duration, PeriodType type) {\n        iType = type;\n        iValues = new int[type.size()];\n        setPeriod(duration);\n    }\n    \n    private void setPeriod(long duration) {\n        long remainder = duration;\n        for (int i = 0, isize = iType.size(); i < isize; i++) {\n            int value = iType.getFieldType(i).getField(this).getDurationField().getDifference(remainder, DurationFieldType.millis());\n            remainder -= iType.getFieldType(i).getField(this).roundFloor(duration + value);\n            iValues[i] = value;\n        }\n\n        if (remainder != 0) {\n            throw new IllegalArgumentException(\"Duration must be positive or zero: \" + duration);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..823c9fcb 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,8 +219,26 @@ public abstract class BasePeriod\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(duration, PeriodType.standard());\n+    }\n+    \n+    protected BasePeriod(long duration, PeriodType type) {\n+        iType = type;\n+        iValues = new int[type.size()];\n+        setPeriod(duration);\n+    }\n+    \n+    private void setPeriod(long duration) {\n+        long remainder = duration;\n+        for (int i = 0, isize = iType.size(); i < isize; i++) {\n+            int value = iType.getFieldType(i).getField(this).getDurationField().getDifference(remainder, DurationFieldType.millis());\n+            remainder -= iType.getFieldType(i).getField(this).roundFloor(duration + value);\n+            iValues[i] = value;\n+        }\n+\n+        if (remainder != 0) {\n+            throw new IllegalArgumentException(\"Duration must be positive or zero: \" + duration);\n+        }\n     }\n \n     /**",
    "result_reason": "error: method getField in class DurationFieldType cannot be applied to given types;",
    "test_result": "ERROR"
}