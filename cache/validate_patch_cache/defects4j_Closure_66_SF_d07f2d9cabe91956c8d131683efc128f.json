{
    "patch": "public static double getTypedPercent(String json) {\n    Gson gson = new Gson();\n    TypeToken<Map<String, Object>> token = new TypeToken<Map<String, Object>>() {};\n    Map<String, Object> map = gson.fromJson(json, token.getType());\n    double n = ((Number) map.get(\"typed\")).doubleValue();\n    double t = ((Number) map.get(\"total\")).doubleValue();\n    return n / t * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..96c7cf97 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    Gson gson = new Gson();\n+    TypeToken<Map<String, Object>> token = new TypeToken<Map<String, Object>>() {};\n+    Map<String, Object> map = gson.fromJson(json, token.getType());\n+    double n = ((Number) map.get(\"typed\")).doubleValue();\n+    double t = ((Number) map.get(\"total\")).doubleValue();\n+    return n / t * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}