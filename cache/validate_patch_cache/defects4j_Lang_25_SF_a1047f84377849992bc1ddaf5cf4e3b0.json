{
    "patch": "public static String unescape(String str){\n    StringBuilder result = new StringBuilder();\n    int length = str.length();\n    for(int i=0;i<length;i++){\n        char ch = str.charAt(i);\n        if(ch == '\\\\'){\n            if(i+1<length){\n                char nextChar = str.charAt(i+1);\n                switch (nextChar){\n                    case '\\\"':\n                        result.append('\\\"');\n                        break;\n                    case '\\\\':\n                        result.append('\\\\');\n                        break;\n                    case 'n':\n                        result.append('\\n');\n                        break;\n                    case 'r':\n                        result.append('\\r');\n                        break;\n                    case 't':\n                        result.append('\\t');\n                        break;\n                    case 'b':\n                        result.append('\\b');\n                        break;\n                    case 'f':\n                        result.append('\\f');\n                        break;\n                    case 'u':\n                        if(i+5<length){ \n                            char[] hexChars = new char[4];\n                            str.getChars(i+2,i+6,hexChars,0);\n                            char unicodeChar = (char)Integer.parseInt(new String(hexChars),16);\n                            result.append(unicodeChar);\n                            i+=5;\n                        }else{\n                            result.append(ch);\n                        }\n                        break;\n                    default:\n                        result.append(ch);\n                        break;\n                }\n            }else{\n                result.append(ch);\n            }\n        }else{\n            result.append(ch);\n        }\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..b751dba6 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,60 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str){\n+    StringBuilder result = new StringBuilder();\n+    int length = str.length();\n+    for(int i=0;i<length;i++){\n+        char ch = str.charAt(i);\n+        if(ch == '\\\\'){\n+            if(i+1<length){\n+                char nextChar = str.charAt(i+1);\n+                switch (nextChar){\n+                    case '\\\"':\n+                        result.append('\\\"');\n+                        break;\n+                    case '\\\\':\n+                        result.append('\\\\');\n+                        break;\n+                    case 'n':\n+                        result.append('\\n');\n+                        break;\n+                    case 'r':\n+                        result.append('\\r');\n+                        break;\n+                    case 't':\n+                        result.append('\\t');\n+                        break;\n+                    case 'b':\n+                        result.append('\\b');\n+                        break;\n+                    case 'f':\n+                        result.append('\\f');\n+                        break;\n+                    case 'u':\n+                        if(i+5<length){ \n+                            char[] hexChars = new char[4];\n+                            str.getChars(i+2,i+6,hexChars,0);\n+                            char unicodeChar = (char)Integer.parseInt(new String(hexChars),16);\n+                            result.append(unicodeChar);\n+                            i+=5;\n+                        }else{\n+                            result.append(ch);\n+                        }\n+                        break;\n+                    default:\n+                        result.append(ch);\n+                        break;\n+                }\n+            }else{\n+                result.append(ch);\n+            }\n+        }else{\n+            result.append(ch);\n+        }\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}