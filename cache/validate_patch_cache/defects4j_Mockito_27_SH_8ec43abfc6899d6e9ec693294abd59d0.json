{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\nT proxyMock = createMockWithHandler((Class<T>) mock.getClass(), newMockHandler);\nField[] fields = mock.getClass().getDeclaredFields();\ntry {\n    for (Field field : fields) {\n        field.setAccessible(true);\n        Object original = field.get(mock);\n        if (original instanceof Factory) {\n            ((Factory) original).setCallback(0, new MockDelegate(proxyMock));\n            field.set(mock, original);\n            break;\n        }\n    }\n} catch (IllegalAccessException e) {\n    e.printStackTrace();\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..97975c405 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,25 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\n+T proxyMock = createMockWithHandler((Class<T>) mock.getClass(), newMockHandler);\n+Field[] fields = mock.getClass().getDeclaredFields();\n+try {\n+    for (Field field : fields) {\n+        field.setAccessible(true);\n+        Object original = field.get(mock);\n+        if (original instanceof Factory) {\n+            ((Factory) original).setCallback(0, new MockDelegate(proxyMock));\n+            field.set(mock, original);\n+            break;\n+        }\n+    }\n+} catch (IllegalAccessException e) {\n+    e.printStackTrace();\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}