{
    "patch": "public static int fruit_distribution(String s, int n) {\n    int result = n;\n    String[] parts = s.split(\" \");\n\n    for (String part : parts) {\n        try {\n            int cnt = Integer.parseInt(part);\n            if (cnt < 0) {\n                throw new IllegalArgumentException(\"Negative count\");\n            }\n            result -= cnt;\n        } catch (NumberFormatException e) {\n            // ignore non-integer tokens\n        } catch (IllegalArgumentException e) {\n            throw e;\n        }\n    }\n\n    if (result < 0) {\n        throw new IllegalArgumentException(\"Not enough fruit to distribute\");\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java b/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java\nindex 93d0852..5421907 100644\n--- a/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java\n+++ b/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java\n@@ -12,13 +12,28 @@ fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 - 3 = 95\n fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19 */\n \n public class FRUIT_DISTRIBUTION {\n-    public static int fruit_distribution(String s, int n) {\n-        int result = n;\n+public static int fruit_distribution(String s, int n) {\n+    int result = n;\n+    String[] parts = s.split(\" \");\n \n-        for (String str : s.split(\" \")) {\n-            int cnt = Integer.parseInt(str);\n+    for (String part : parts) {\n+        try {\n+            int cnt = Integer.parseInt(part);\n+            if (cnt < 0) {\n+                throw new IllegalArgumentException(\"Negative count\");\n+            }\n             result -= cnt;\n+        } catch (NumberFormatException e) {\n+            // ignore non-integer tokens\n+        } catch (IllegalArgumentException e) {\n+            throw e;\n         }\n-        return result;\n     }\n+\n+    if (result < 0) {\n+        throw new IllegalArgumentException(\"Not enough fruit to distribute\");\n+    }\n+\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}