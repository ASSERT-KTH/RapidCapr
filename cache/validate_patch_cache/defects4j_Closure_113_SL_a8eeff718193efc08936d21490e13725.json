{
    "patch": "if ((provided = providedNames.get(ns)) == null || \n      (!provided.isExplicitlyProvided() && \n       (provided.explicitModule == null || provided.explicitModule != t.getModule()))) {\n  unrecognizedRequires.add(\n      new UnrecognizedRequire(n, ns, t.getSourceName()));\n} else if (moduleGraph != null &&\n           t.getModule() != provided.explicitModule &&\n           !moduleGraph.dependsOn(t.getModule(), provided.explicitModule)) {\n  compiler.report(\n      t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n          provided.explicitModule.getName(),\n          t.getModule().getName()));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..4c280f95 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,19 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+if ((provided = providedNames.get(ns)) == null || \n+      (!provided.isExplicitlyProvided() && \n+       (provided.explicitModule == null || provided.explicitModule != t.getModule()))) {\n+  unrecognizedRequires.add(\n+      new UnrecognizedRequire(n, ns, t.getSourceName()));\n+} else if (moduleGraph != null &&\n+           t.getModule() != provided.explicitModule &&\n+           !moduleGraph.dependsOn(t.getModule(), provided.explicitModule)) {\n+  compiler.report(\n+      t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n+          provided.explicitModule.getName(),\n+          t.getModule().getName()));\n+}\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}