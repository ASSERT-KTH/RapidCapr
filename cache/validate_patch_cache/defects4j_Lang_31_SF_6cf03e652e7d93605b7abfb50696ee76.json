{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    // handle input edge cases\n    if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n        return false;\n    }\n\n    // iterate over each character in the searchChars array\n    for (int i = 0; i < searchChars.length; i++) {\n        char searchChar = searchChars[i];\n        if (Character.isHighSurrogate(searchChar) && i < searchChars.length - 1) {\n            char nextChar = searchChars[i + 1];\n            if (Character.isLowSurrogate(nextChar)) {\n                int codePoint = Character.toCodePoint(searchChar, nextChar);\n                if (str.indexOf(codePoint) >= 0) {\n                    return true;\n                }\n                i++;\n                continue;\n            }\n        }\n        if (str.indexOf(searchChar) >= 0) {\n            return true;\n        }\n    }\n\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..11456570 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    // handle input edge cases\n+    if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n+        return false;\n+    }\n+\n+    // iterate over each character in the searchChars array\n+    for (int i = 0; i < searchChars.length; i++) {\n+        char searchChar = searchChars[i];\n+        if (Character.isHighSurrogate(searchChar) && i < searchChars.length - 1) {\n+            char nextChar = searchChars[i + 1];\n+            if (Character.isLowSurrogate(nextChar)) {\n+                int codePoint = Character.toCodePoint(searchChar, nextChar);\n+                if (str.indexOf(codePoint) >= 0) {\n+                    return true;\n+                }\n+                i++;\n+                continue;\n+            }\n+        }\n+        if (str.indexOf(searchChar) >= 0) {\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}