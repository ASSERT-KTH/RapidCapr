{
    "patch": "public ReturnValue execute(Class<?> returnType, Object... args) {\n    switch (returnType.getSimpleName()) {\n        case \"int\":\n            return new ReturnValue(0);\n        case \"boolean\":\n            return new ReturnValue(false);\n        case \"double\":\n            return new ReturnValue(0.0);\n        case \"String\":\n            return new ReturnValue(\"\");\n        case \"Iterable\":\n            return new ReturnValue(Collections.emptyList()); // use emptyList() to return empty iterable\n        default: // handle the default case\n            return new ReturnValue(null);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}