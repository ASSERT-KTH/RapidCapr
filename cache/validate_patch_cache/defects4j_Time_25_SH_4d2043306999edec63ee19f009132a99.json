{
    "patch": "            if (offsetLocal < offsetAdjusted) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextAdjusted <= instantAdjusted || nextLocal > instantLocal) {\n                    return offsetLocal;\n                }\n            } else {\n                long nextLocal = nextTransition(instantLocal - offsetAdjusted + DateTimeConstants.MILLIS_PER_DAY);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted - DateTimeConstants.MILLIS_PER_DAY);\n                if (nextLocal < instantLocal && nextAdjusted >= instantLocal) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..7e766a84 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal < offsetAdjusted) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextAdjusted <= instantAdjusted || nextLocal > instantLocal) {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                long nextLocal = nextTransition(instantLocal - offsetAdjusted + DateTimeConstants.MILLIS_PER_DAY);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted - DateTimeConstants.MILLIS_PER_DAY);\n+                if (nextLocal < instantLocal && nextAdjusted >= instantLocal) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}