{
    "patch": "      boolean isOverride = parent != null &&\n          (parent.getType() == Token.ASSIGN ||\n           parent.getType() == Token.ASSIGN_ADD ||\n           parent.getType() == Token.ASSIGN_BITOR ||\n           parent.getType() == Token.ASSIGN_BITXOR ||\n           parent.getType() == Token.ASSIGN_BITAND ||\n           parent.getType() == Token.ASSIGN_SHL ||\n           parent.getType() == Token.ASSIGN_SHR ||\n           parent.getType() == Token.ASSIGN_SAR) &&\n          parent.getFirstChild() == getprop &&\n          t.getScope().getParent() == null;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..4db0e93b 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -413,7 +413,17 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n     if (objectType != null) {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n-      boolean isOverride = t.inGlobalScope() &&\n+      boolean isOverride = parent != null &&\n+          (parent.getType() == Token.ASSIGN ||\n+           parent.getType() == Token.ASSIGN_ADD ||\n+           parent.getType() == Token.ASSIGN_BITOR ||\n+           parent.getType() == Token.ASSIGN_BITXOR ||\n+           parent.getType() == Token.ASSIGN_BITAND ||\n+           parent.getType() == Token.ASSIGN_SHL ||\n+           parent.getType() == Token.ASSIGN_SHR ||\n+           parent.getType() == Token.ASSIGN_SAR) &&\n+          parent.getFirstChild() == getprop &&\n+          t.getScope().getParent() == null;\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}