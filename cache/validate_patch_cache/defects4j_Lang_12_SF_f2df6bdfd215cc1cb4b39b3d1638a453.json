{
    "patch": "    public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                                char[] chars, Random random) {\n\n        if (count < 0) {\n            throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n        }\n\n        if(start > end) {\n            int temp = start;\n            start = end;\n            end = temp;\n        }\n\n        if (chars == null && (start == 0 && end == 0)) {\n            if (!letters && !numbers) {\n                end = Integer.MAX_VALUE;\n            } else {\n                end = Character.MAX_VALUE;\n                start = '-';\n            }\n        } else if (chars != null && chars.length == 0) {\n            throw new IllegalArgumentException(\"The chars array must not be empty\");\n        }\n\n        char[] buffer = new char[count];\n        int gap = end - start;\n\n        while (count-- != 0) {\n            char ch;\n            if (chars == null) {\n                ch = (char) (random.nextInt(gap) + start);\n            } else {\n                ch = chars[random.nextInt(gap) + start];\n            }\n            if (letters && Character.isLetter(ch)\n                    || numbers && Character.isDigit(ch)\n                    || !letters && !numbers) {\n                if (ch >= 56320 && ch <= 57343) {\n                    if (count == 0) {\n                        count++;\n                    } else {\n                        // low surrogate, insert high surrogate after putting it in\n                        buffer[count] = ch;\n                        count--;\n                        buffer[count] = (char) (55296 + random.nextInt(128));\n                    }\n                } else if (ch >= 55296 && ch <= 56191) {\n                    if (count == 0) {\n                        count++;\n                    } else {\n                        // high surrogate, insert low surrogate before putting it in\n                        buffer[count] = (char) (56320 + random.nextInt(128));\n                        count--;\n                        buffer[count] = ch;\n                    }\n                } else if (ch >= 56192 && ch <= 56319) {\n                    // private high surrogate, no effing clue, so skip it\n                    count++;\n                } else {\n                    buffer[count] = ch;\n                }\n            } else {\n                count++;\n            }\n        }\n        return new String(buffer);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex b200223d..889d3693 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -222,19 +222,26 @@ public class RandomStringUtils {\n      */\n     public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                                 char[] chars, Random random) {\n-        if (count == 0) {\n-            return \"\";\n-        } else if (count < 0) {\n+\n+        if (count < 0) {\n             throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n         }\n \n-        if (start == 0 && end == 0) {\n-                if (!letters && !numbers) {\n-                    end = Integer.MAX_VALUE;\n-                } else {\n-                    end = 'z' + 1;\n-                    start = ' ';                \n-                }\n+        if(start > end) {\n+            int temp = start;\n+            start = end;\n+            end = temp;\n+        }\n+\n+        if (chars == null && (start == 0 && end == 0)) {\n+            if (!letters && !numbers) {\n+                end = Integer.MAX_VALUE;\n+            } else {\n+                end = Character.MAX_VALUE;\n+                start = '-';\n+            }\n+        } else if (chars != null && chars.length == 0) {\n+            throw new IllegalArgumentException(\"The chars array must not be empty\");\n         }\n \n         char[] buffer = new char[count];\n@@ -250,8 +257,8 @@ public class RandomStringUtils {\n             if (letters && Character.isLetter(ch)\n                     || numbers && Character.isDigit(ch)\n                     || !letters && !numbers) {\n-                if(ch >= 56320 && ch <= 57343) {\n-                    if(count == 0) {\n+                if (ch >= 56320 && ch <= 57343) {\n+                    if (count == 0) {\n                         count++;\n                     } else {\n                         // low surrogate, insert high surrogate after putting it in\n@@ -259,8 +266,8 @@ public class RandomStringUtils {\n                         count--;\n                         buffer[count] = (char) (55296 + random.nextInt(128));\n                     }\n-                } else if(ch >= 55296 && ch <= 56191) {\n-                    if(count == 0) {\n+                } else if (ch >= 55296 && ch <= 56191) {\n+                    if (count == 0) {\n                         count++;\n                     } else {\n                         // high surrogate, insert low surrogate before putting it in\n@@ -268,7 +275,7 @@ public class RandomStringUtils {\n                         count--;\n                         buffer[count] = ch;\n                     }\n-                } else if(ch >= 56192 && ch <= 56319) {\n+                } else if (ch >= 56192 && ch <= 56319) {\n                     // private high surrogate, no effing clue, so skip it\n                     count++;\n                 } else {",
    "result_reason": "java.lang.IllegalArgumentException: bound must be positive",
    "test_result": "FAIL"
}