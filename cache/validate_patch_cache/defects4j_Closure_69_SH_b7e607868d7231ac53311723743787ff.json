{
    "patch": "import com.google.javascript.jscomp.NodeUtil;\nimport com.google.javascript.rhino.JSFunction;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.TypeI;\nimport com.google.javascript.rhino.jstype.FunctionType;\nimport com.google.javascript.rhino.jstype.JSType;\nimport com.google.javascript.rhino.jstype.JSTypeRegistry;\nimport com.google.javascript.rhino.jstype.JSTypeWithPropertyMembers;\nimport com.google.javascript.rhino.jstype.NamedType;\nimport com.google.javascript.rhino.jstype.StaticScope;\nimport com.google.javascript.rhino.jstype.TemplateType;\n\nimport java.util.regex.Pattern;\n\nimport static com.google.javascript.jscomp.TypeCheck.NOT_CALLABLE;\nimport static com.google.javascript.jscomp.TypeCheck.INCOMPLETE_PROPERTY;\nimport static com.google.javascript.jscomp.TypeCheck.CONSTRUCTOR_NOT_CALLABLE;\nimport static com.google.javascript.jscomp.TypeCheck.INVALID_THIS_TYPE;\n\n...\n\nif (functionType.getThisType() != null) {\n  Node parent = n.getParent();\n  Node gramps = parent.getParent();\n  boolean isGetPropOrGetElem =\n      (parent.isGetProp() && n == parent.getLastChild()) || parent.isGetElem();\n  boolean isCallWithGet =\n      isGetPropOrGetElem && (gramps.isCall() || gramps.isNew());\n  boolean isMethodCallWithCorrectThis =\n      gramps.isCall() && gramps.getFirstChild().matchesQualifiedName(\"goog.bind\") && \n        isGetPropOrGetElem && gramps.getChildAtIndex(2) == parent;\n\n  if (!isCallWithGet && !isMethodCallWithCorrectThis) {\n    report(t, n, INVALID_THIS_TYPE, functionType.getThisType().toString());\n    ensureTyped(t, n);\n    return;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..60f71dc9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,44 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+import com.google.javascript.jscomp.NodeUtil;\n+import com.google.javascript.rhino.JSFunction;\n+import com.google.javascript.rhino.Node;\n+import com.google.javascript.rhino.TypeI;\n+import com.google.javascript.rhino.jstype.FunctionType;\n+import com.google.javascript.rhino.jstype.JSType;\n+import com.google.javascript.rhino.jstype.JSTypeRegistry;\n+import com.google.javascript.rhino.jstype.JSTypeWithPropertyMembers;\n+import com.google.javascript.rhino.jstype.NamedType;\n+import com.google.javascript.rhino.jstype.StaticScope;\n+import com.google.javascript.rhino.jstype.TemplateType;\n+\n+import java.util.regex.Pattern;\n+\n+import static com.google.javascript.jscomp.TypeCheck.NOT_CALLABLE;\n+import static com.google.javascript.jscomp.TypeCheck.INCOMPLETE_PROPERTY;\n+import static com.google.javascript.jscomp.TypeCheck.CONSTRUCTOR_NOT_CALLABLE;\n+import static com.google.javascript.jscomp.TypeCheck.INVALID_THIS_TYPE;\n+\n+...\n+\n+if (functionType.getThisType() != null) {\n+  Node parent = n.getParent();\n+  Node gramps = parent.getParent();\n+  boolean isGetPropOrGetElem =\n+      (parent.isGetProp() && n == parent.getLastChild()) || parent.isGetElem();\n+  boolean isCallWithGet =\n+      isGetPropOrGetElem && (gramps.isCall() || gramps.isNew());\n+  boolean isMethodCallWithCorrectThis =\n+      gramps.isCall() && gramps.getFirstChild().matchesQualifiedName(\"goog.bind\") && \n+        isGetPropOrGetElem && gramps.getChildAtIndex(2) == parent;\n+\n+  if (!isCallWithGet && !isMethodCallWithCorrectThis) {\n+    report(t, n, INVALID_THIS_TYPE, functionType.getThisType().toString());\n+    ensureTyped(t, n);\n+    return;\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}