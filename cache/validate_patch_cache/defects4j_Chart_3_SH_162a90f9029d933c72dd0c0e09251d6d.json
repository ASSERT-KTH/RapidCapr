{
    "patch": "        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        int lastIndex = Math.min(end, this.data.size() - 1);\n        if (start <= lastIndex) {\n            for (int index = start; index <= lastIndex; index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                } catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n            // Update min and max values\n            double[] yValues = copy.getYValues().toArray();\n            if (yValues.length > 0) {\n                copy.minY = DoubleStream.of(yValues).min().getAsDouble();\n                copy.maxY = DoubleStream.of(yValues).max().getAsDouble();\n            } else {\n                copy.minY = Double.NaN;\n                copy.maxY = Double.NaN;\n            }\n        } else {\n            copy.minY = Double.NaN;\n            copy.maxY = Double.NaN;\n        }\n        return copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..3e48add 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,39 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start < 0) {\n+            throw new IllegalArgumentException(\"Requires start >= 0.\");\n+        }\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        int lastIndex = Math.min(end, this.data.size() - 1);\n+        if (start <= lastIndex) {\n+            for (int index = start; index <= lastIndex; index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                try {\n+                    copy.add(clone);\n+                } catch (SeriesException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+            // Update min and max values\n+            double[] yValues = copy.getYValues().toArray();\n+            if (yValues.length > 0) {\n+                copy.minY = DoubleStream.of(yValues).min().getAsDouble();\n+                copy.maxY = DoubleStream.of(yValues).max().getAsDouble();\n+            } else {\n+                copy.minY = Double.NaN;\n+                copy.maxY = Double.NaN;\n+            }\n+        } else {\n+            copy.minY = Double.NaN;\n+            copy.maxY = Double.NaN;\n+        }\n+        return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: variable copy is already defined in method createCopy(int,int)",
    "test_result": "ERROR"
}