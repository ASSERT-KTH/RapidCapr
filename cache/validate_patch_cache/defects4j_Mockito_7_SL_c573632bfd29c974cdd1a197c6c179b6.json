{
    "patch": "            if (typeVariable.getBounds().length == 0) {\n                return;\n            }\n            for (Type type : typeVariable.getBounds()) {\n                registerTypeVariablesOn(type);\n                if (type instanceof TypeVariable) {\n                    Type actualTypeArgument = getActualTypeArgumentFor((TypeVariable<?>) type);\n                    if (actualTypeArgument != null) {\n                        registerTypeVariablesOn(actualTypeArgument);\n                    }\n                }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..c261b290c 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,22 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+            if (typeVariable.getBounds().length == 0) {\n+                return;\n+            }\n+            for (Type type : typeVariable.getBounds()) {\n+                registerTypeVariablesOn(type);\n+                if (type instanceof TypeVariable) {\n+                    Type actualTypeArgument = getActualTypeArgumentFor((TypeVariable<?>) type);\n+                    if (actualTypeArgument != null) {\n+                        registerTypeVariablesOn(actualTypeArgument);\n+                    }\n+                }\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}