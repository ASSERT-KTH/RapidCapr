{
    "patch": "import org.apache.commons.math3.special.Gamma;\n\npublic class GammaFunction {\n    /**\n     * Compute the regularized gamma function P(a, x).\n     *\n     * @param a the shape parameter.\n     * @param x the integration end point.\n     * @return the regularized gamma function P(a, x).\n     */\n    public static double regularizedGamma(double a, double x) {\n        if (x < 0 || a <= 0) {\n            throw new IllegalArgumentException(\"Invalid arguments for gamma function.\");\n        }\n\n        double epsilon = 10e-15;\n\n        double sum = 0;\n        double term = 1 / a;\n\n        while (term >= epsilon * sum) {\n            sum += term;\n            a++;\n            term *= x / a;\n        }\n\n        return sum * Math.pow(x, a - 1) * Math.exp(-x) / Gamma.gamma(a);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..2e28a45f5 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,35 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+\n+public class GammaFunction {\n+    /**\n+     * Compute the regularized gamma function P(a, x).\n+     *\n+     * @param a the shape parameter.\n+     * @param x the integration end point.\n+     * @return the regularized gamma function P(a, x).\n+     */\n+    public static double regularizedGamma(double a, double x) {\n+        if (x < 0 || a <= 0) {\n+            throw new IllegalArgumentException(\"Invalid arguments for gamma function.\");\n+        }\n+\n+        double epsilon = 10e-15;\n+\n+        double sum = 0;\n+        double term = 1 / a;\n+\n+        while (term >= epsilon * sum) {\n+            sum += term;\n+            a++;\n+            term *= x / a;\n+        }\n+\n+        return sum * Math.pow(x, a - 1) * Math.exp(-x) / Gamma.gamma(a);\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}