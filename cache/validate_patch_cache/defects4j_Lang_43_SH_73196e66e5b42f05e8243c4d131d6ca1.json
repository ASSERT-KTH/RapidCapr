{
    "patch": "if (escapingOn && c[pos.getIndex()] == QUOTE) {\n    // check if the next character is also a quote\n    if (pos.getIndex() + 1 < pattern.length() && c[pos.getIndex()+1] == QUOTE) {\n        next(pos);\n        next(pos);\n        return appendTo == null ? null : appendTo.append(QUOTE);\n    } else {\n        // if not, treat the quote as the end of the quoted string\n        return appendTo == null ? null : appendTo;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..a5222f6c 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,17 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+if (escapingOn && c[pos.getIndex()] == QUOTE) {\n+    // check if the next character is also a quote\n+    if (pos.getIndex() + 1 < pattern.length() && c[pos.getIndex()+1] == QUOTE) {\n+        next(pos);\n+        next(pos);\n+        return appendTo == null ? null : appendTo.append(QUOTE);\n+    } else {\n+        // if not, treat the quote as the end of the quoted string\n+        return appendTo == null ? null : appendTo;\n+    }\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}