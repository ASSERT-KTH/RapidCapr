{
    "patch": "            if (offsetLocal > offsetAdjusted) {\n                // we need to ensure that time is always after the DST gap\n                long nextLocal = previousTransition(instantAdjusted);\n                long nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (nextLocal == nextAdjusted) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..272b82d8 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal > offsetAdjusted) {\n+                // we need to ensure that time is always after the DST gap\n+                long nextLocal = previousTransition(instantAdjusted);\n+                long nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal == nextAdjusted) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}