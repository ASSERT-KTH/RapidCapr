{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent != null && parent.getType() == Token.ASSIGN) {\n        Node lhs = parent.getFirstChild();\n        if (lhs != null && NodeUtil.isGet(lhs) &&\n            lhs.getLastChild().getString().equals(\"prototype\")) {\n          // Check if the assignment is directly to the prototype\n          if (lhs.getParent().getType() == Token.ASSIGN) {\n            return lhs.getParent().getFirstChild() != lhs.getLastChild();\n          }\n          // Check if the assignment is to a sub-property of the prototype\n          if (lhs.getParent().getType() == Token.GETPROP) {\n            Node llhs = lhs.getParent().getFirstChild();\n            return llhs != null && llhs.getLastChild().getString().equals(\"prototype\");\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..542464d0 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,22 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && parent.getType() == Token.ASSIGN) {\n+        Node lhs = parent.getFirstChild();\n+        if (lhs != null && NodeUtil.isGet(lhs) &&\n+            lhs.getLastChild().getString().equals(\"prototype\")) {\n+          // Check if the assignment is directly to the prototype\n+          if (lhs.getParent().getType() == Token.ASSIGN) {\n+            return lhs.getParent().getFirstChild() != lhs.getLastChild();\n+          }\n+          // Check if the assignment is to a sub-property of the prototype\n+          if (lhs.getParent().getType() == Token.GETPROP) {\n+            Node llhs = lhs.getParent().getFirstChild();\n+            return llhs != null && llhs.getLastChild().getString().equals(\"prototype\");\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}