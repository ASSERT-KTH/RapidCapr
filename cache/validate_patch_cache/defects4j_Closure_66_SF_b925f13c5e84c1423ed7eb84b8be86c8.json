{
    "patch": "public double getTypedPercent(String jsonString) {\n    Gson gson = new Gson();\n    Type type = new TypeToken<Map<String, Object>>(){}.getType();\n    Map<String, Object> map = gson.fromJson(jsonString, type);\n    int typed = ((Double) map.get(\"typed\")).intValue();\n    int total = ((Double) map.get(\"total\")).intValue();\n    double percent = ((double) typed / (double) total) * 100.0;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..42c67a45 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String jsonString) {\n+    Gson gson = new Gson();\n+    Type type = new TypeToken<Map<String, Object>>(){}.getType();\n+    Map<String, Object> map = gson.fromJson(jsonString, type);\n+    int typed = ((Double) map.get(\"typed\")).intValue();\n+    int total = ((Double) map.get(\"total\")).intValue();\n+    double percent = ((double) typed / (double) total) * 100.0;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}