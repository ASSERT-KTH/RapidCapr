{
    "patch": "PathIterator iterator2 = p2.getPathIterator(null);\nwhile(!iterator1.isDone() && !iterator2.isDone()) {\n    if (iterator1.currentSegment(d1) != iterator2.currentSegment(d2) || !Arrays.equals(d1, d2)) {\n        return false;\n    }\n    iterator1.next();\n    iterator2.next();\n}\nreturn iterator1.isDone() && iterator2.isDone();",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeUtilities.java b/source/org/jfree/chart/util/ShapeUtilities.java\nindex 31aa6c6..9e9339c 100644\n--- a/source/org/jfree/chart/util/ShapeUtilities.java\n+++ b/source/org/jfree/chart/util/ShapeUtilities.java\n@@ -272,7 +272,15 @@ public class ShapeUtilities {\n             return false;\n         }\n         PathIterator iterator1 = p1.getPathIterator(null);\n-        PathIterator iterator2 = p1.getPathIterator(null);\n+PathIterator iterator2 = p2.getPathIterator(null);\n+while(!iterator1.isDone() && !iterator2.isDone()) {\n+    if (iterator1.currentSegment(d1) != iterator2.currentSegment(d2) || !Arrays.equals(d1, d2)) {\n+        return false;\n+    }\n+    iterator1.next();\n+    iterator2.next();\n+}\n+return iterator1.isDone() && iterator2.isDone();\n         double[] d1 = new double[6];\n         double[] d2 = new double[6];\n         boolean done = iterator1.isDone() && iterator2.isDone();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}