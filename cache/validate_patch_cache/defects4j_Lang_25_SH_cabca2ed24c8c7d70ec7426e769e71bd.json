{
    "patch": "char c = in.charAt(i);\nif (c == '\\\\') {\n    switch (c = in.charAt(++i)) {\n        case 'n':\n            buf.append('\\n');\n            break;\n        case 't':\n            buf.append('\\t');\n            break;\n        case 'r':\n            buf.append('\\r');\n            break;\n        case 'f':\n            buf.append('\\f');\n            break;\n        case '\\\\':\n            buf.append('\\\\');\n            break;\n        default:\n            buf.append(c);\n            break;\n        }\n}\nelse {\n    buf.append(c);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}