{
    "patch": "List<Node> callSites = Lists.newArrayList();\n    NodeUtil.getCallNodeUses(fnScope.getRootNode(), callSites);\n    if (!referenced.isEmpty() && !callSites.isEmpty()) {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    } else {\n      removeUnreferencedFunctionParams(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d93ce38c 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,13 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+List<Node> callSites = Lists.newArrayList();\n+    NodeUtil.getCallNodeUses(fnScope.getRootNode(), callSites);\n+    if (!referenced.isEmpty() && !callSites.isEmpty()) {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    } else {\n+      removeUnreferencedFunctionParams(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}