{
    "patch": "public static boolean containsAny(CharSequence cs, char... searchChars) {\n    if (cs == null || searchChars == null) {\n        return false;\n    }\n    int strLength = cs.length();\n    int searchLength = searchChars.length;\n    if (strLength == 0 || searchLength == 0) {\n        return false;\n    }\n    int[] search = toCodePoints(searchChars);\n    if (search == null || search.length == 0) {\n        return false;\n    }\n    for (int i = 0; i < strLength;) {\n        int codepoint = Character.codePointAt(cs, i);\n        for (int j = 0; j < search.length; j++) {\n            if (search[j] == codepoint) {\n                return true;\n            }\n        }\n        i += Character.charCount(codepoint);\n    }\n    return false;\n}\n\nprivate static int[] toCodePoints(char[] chars) {\n    if (chars == null || chars.length == 0) {\n        return null;\n    }\n    StringBuilder builder = new StringBuilder();\n    for (char c : chars) {\n        builder.appendCodePoint(c);\n    }\n    String s = builder.toString();\n    return s.codePoints().toArray();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..cf1bfaa4 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,42 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char... searchChars) {\n+    if (cs == null || searchChars == null) {\n+        return false;\n+    }\n+    int strLength = cs.length();\n+    int searchLength = searchChars.length;\n+    if (strLength == 0 || searchLength == 0) {\n+        return false;\n+    }\n+    int[] search = toCodePoints(searchChars);\n+    if (search == null || search.length == 0) {\n+        return false;\n+    }\n+    for (int i = 0; i < strLength;) {\n+        int codepoint = Character.codePointAt(cs, i);\n+        for (int j = 0; j < search.length; j++) {\n+            if (search[j] == codepoint) {\n+                return true;\n+            }\n+        }\n+        i += Character.charCount(codepoint);\n+    }\n+    return false;\n+}\n+\n+private static int[] toCodePoints(char[] chars) {\n+    if (chars == null || chars.length == 0) {\n+        return null;\n+    }\n+    StringBuilder builder = new StringBuilder();\n+    for (char c : chars) {\n+        builder.appendCodePoint(c);\n+    }\n+    String s = builder.toString();\n+    return s.codePoints().toArray();\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}