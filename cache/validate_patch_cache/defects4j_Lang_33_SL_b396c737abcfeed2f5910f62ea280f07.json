{
    "patch": "private static Class<?> boxPrimitiveClass(Class<?> clazz) {\n    if (clazz == null) {\n        return null;\n    } else if (clazz.isPrimitive()) {\n        if (clazz == boolean.class) {\n            return Boolean.class;\n        } else if (clazz == byte.class) {\n            return Byte.class;\n        } else if (clazz == char.class) {\n            return Character.class;\n        } else if (clazz == short.class) {\n            return Short.class;\n        } else if (clazz == int.class) {\n            return Integer.class;\n        } else if (clazz == long.class) {\n            return Long.class;\n        } else if (clazz == float.class) {\n            return Float.class;\n        } else if (clazz == double.class) {\n            return Double.class;\n        }\n    }\n    return clazz;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/ClassUtils.java b/src/main/java/org/apache/commons/lang3/ClassUtils.java\nindex 615e4a9a..a98252f7 100644\n--- a/src/main/java/org/apache/commons/lang3/ClassUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ClassUtils.java\n@@ -907,7 +907,30 @@ public class ClassUtils {\n         }\n         Class<?>[] classes = new Class[array.length];\n         for (int i = 0; i < array.length; i++) {\n-            classes[i] = array[i].getClass();\n+private static Class<?> boxPrimitiveClass(Class<?> clazz) {\n+    if (clazz == null) {\n+        return null;\n+    } else if (clazz.isPrimitive()) {\n+        if (clazz == boolean.class) {\n+            return Boolean.class;\n+        } else if (clazz == byte.class) {\n+            return Byte.class;\n+        } else if (clazz == char.class) {\n+            return Character.class;\n+        } else if (clazz == short.class) {\n+            return Short.class;\n+        } else if (clazz == int.class) {\n+            return Integer.class;\n+        } else if (clazz == long.class) {\n+            return Long.class;\n+        } else if (clazz == float.class) {\n+            return Float.class;\n+        } else if (clazz == double.class) {\n+            return Double.class;\n+        }\n+    }\n+    return clazz;\n+}\n         }\n         return classes;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}