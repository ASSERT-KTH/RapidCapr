{
    "patch": "        final ParametricFunction function = new Gaussian.Parametric();\n        final double[] min = new double[guess.length];\n        final double[] max = new double[guess.length];\n        Arrays.fill(min, Double.NEGATIVE_INFINITY);\n        Arrays.fill(max, Double.POSITIVE_INFINITY);\n        return fit(function.withStartPoint(guess), min, max);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..1ff888b12 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,12 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final ParametricFunction function = new Gaussian.Parametric();\n+        final double[] min = new double[guess.length];\n+        final double[] max = new double[guess.length];\n+        Arrays.fill(min, Double.NEGATIVE_INFINITY);\n+        Arrays.fill(max, Double.POSITIVE_INFINITY);\n+        return fit(function.withStartPoint(guess), min, max);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}