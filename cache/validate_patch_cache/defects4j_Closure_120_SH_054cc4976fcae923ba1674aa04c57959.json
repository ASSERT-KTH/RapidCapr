{
    "patch": "          for (int i = i = references.indexOf(ref)+1; i < size; i++) {\n            if (references.get(i).isAssignmentTo(ref)) {\n              return false;\n            }\n          }\n          return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..f6201f02 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,12 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          for (int i = i = references.indexOf(ref)+1; i < size; i++) {\n+            if (references.get(i).isAssignmentTo(ref)) {\n+              return false;\n+            }\n+          }\n+          return true;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}