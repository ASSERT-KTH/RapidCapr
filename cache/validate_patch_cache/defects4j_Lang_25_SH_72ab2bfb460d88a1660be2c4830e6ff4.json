{
    "patch": "private String ESCAPE(String data, char ch) {\n    StringBuffer out = new StringBuffer(\"\");\n    boolean found = false;\n    for(int i = 0; i < data.length(); i++) {\n        char aChar = data.charAt(i);\n        if(aChar == ch) {\n            out.append(ch);\n            found = true;\n        } else if(aChar == '\\\"') {\n            out.append(\"\\\\\\\"\");\n            found = true;\n        } else if(aChar == '\\\\') {\n            out.append(\"\\\\\\\\\");\n            found = true;\n        } else if(aChar == '\\n') {\n            out.append(\"\\\\n\");\n            found = true;\n        } else if(aChar == '\\r') {\n            out.append(\"\\\\r\");\n            found = true;\n        } else if(aChar == '\\t') {\n            out.append(\"\\\\t\");\n            found = true;\n        } else if(aChar == '\\f') {\n            out.append(\"\\\\f\");\n            found = true;\n        } else if(aChar == '\\b') {\n            out.append(\"\\\\b\");\n            found = true;\n        } else {\n            out.append(aChar);\n       }\n    }\n    if(found) {\n        data = out.toString();\n    }\n    return data;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}