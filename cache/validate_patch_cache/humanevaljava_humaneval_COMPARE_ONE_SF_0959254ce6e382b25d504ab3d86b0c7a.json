{
    "patch": "public static Object compare_one(Object a, Object b) {\n    if (a == null || b == null) { // check for null inputs\n        return null;\n    } else if (a.equals(b)) { // check for equal inputs\n        return null;\n    }\n    \n    double valA, valB;\n    try {\n        valA = Double.parseDouble(a.toString().replace(',', '.')); // parse a as double\n    } catch (NumberFormatException e) {\n        valA = a instanceof Number ? ((Number) a).doubleValue() : Double.NaN; // if not a valid number, try to use a a",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMPARE_ONE.java b/src/main/java/humaneval/buggy/COMPARE_ONE.java\nindex cdf822c..8397906 100644\n--- a/src/main/java/humaneval/buggy/COMPARE_ONE.java\n+++ b/src/main/java/humaneval/buggy/COMPARE_ONE.java\n@@ -14,24 +14,16 @@ package humaneval.buggy;\n  */\n \n public class COMPARE_ONE {\n-    public static Object compare_one(Object a, Object b) {\n-        double temp_a = 0, temp_b = 0;\n-        if(a instanceof String) {\n-            String temp_a_string = a.toString();\n-            temp_a_string = temp_a_string.replace(',', '.');\n-            temp_a = Double.parseDouble(temp_a_string);\n-        }\n-        if(b instanceof String) {\n-            String temp_b_string = b.toString();\n-            temp_b_string = temp_b_string.replace(',', '.');\n-            temp_b = Double.parseDouble(temp_b_string);\n-        }\n-        if(a instanceof Double) temp_a = ((Integer) b).doubleValue();\n-        if(b instanceof Double) temp_b = ((Integer) a).doubleValue();\n-        if(a instanceof Integer) temp_a = (Double) a;\n-        if(b instanceof Integer) temp_b = (Double) b;\n-        if(temp_a == temp_b) return null;\n-        if(temp_a > temp_b) return a;\n-        else return b;\n+public static Object compare_one(Object a, Object b) {\n+    if (a == null || b == null) { // check for null inputs\n+        return null;\n+    } else if (a.equals(b)) { // check for equal inputs\n+        return null;\n     }\n+    \n+    double valA, valB;\n+    try {\n+        valA = Double.parseDouble(a.toString().replace(',', '.')); // parse a as double\n+    } catch (NumberFormatException e) {\n+        valA = a instanceof Number ? ((Number) a).doubleValue() : Double.NaN; // if not a valid number, try to use a a\n }",
    "result_reason": " /tmp/humaneval-COMPARE_ONE/src/main/java/humaneval/buggy/COMPARE_ONE.java:[29,2] reached end of file while parsing",
    "test_result": "ERROR"
}