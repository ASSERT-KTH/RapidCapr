{
    "patch": "if (options.checkGlobalThisLevel != null) {\n      if (options.checkGlobalThisLevel == CheckLevel.OFF) {\n        options.setWarningLevel(\n          DiagnosticGroups.GLOBAL_THIS,\n          CheckLevel.OFF);\n      } else {\n        CheckLevel globalThisLevel = options.checkGlobalThisLevel.isOn() ? CheckLevel.ERROR : CheckLevel.WARNING;\n        options.setWarningLevel(\n          DiagnosticGroups.GLOBAL_THIS,\n          globalThisLevel);\n      }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..e5595b53 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,18 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+      if (options.checkGlobalThisLevel == CheckLevel.OFF) {\n+        options.setWarningLevel(\n+          DiagnosticGroups.GLOBAL_THIS,\n+          CheckLevel.OFF);\n+      } else {\n+        CheckLevel globalThisLevel = options.checkGlobalThisLevel.isOn() ? CheckLevel.ERROR : CheckLevel.WARNING;\n+        options.setWarningLevel(\n+          DiagnosticGroups.GLOBAL_THIS,\n+          globalThisLevel);\n+      }\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}