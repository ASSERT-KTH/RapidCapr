{
    "patch": "    // Check if the node is null.\n    if (n == null) {\n      return false;\n    }\n\n    // Check for function calls and constructor calls (new).\n    if ((n.isCall() || n.isNew()) && !NodeUtil.isImmutableValue(n.getFirstChild())) {\n      return true;\n    }\n\n    // Check for the delete operator.\n    if (n.isDelProp()) {\n      return true;\n    }\n\n    // Check for dynamic property access.\n    if (n.isGetElem() && !n.getLastChild().isString()) {\n      return true;\n    }\n\n    // Recurse on child nodes.\n    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {\n        return true;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..5693f8f5 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,32 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+    // Check if the node is null.\n+    if (n == null) {\n+      return false;\n+    }\n+\n+    // Check for function calls and constructor calls (new).\n+    if ((n.isCall() || n.isNew()) && !NodeUtil.isImmutableValue(n.getFirstChild())) {\n+      return true;\n+    }\n+\n+    // Check for the delete operator.\n+    if (n.isDelProp()) {\n+      return true;\n+    }\n+\n+    // Check for dynamic property access.\n+    if (n.isGetElem() && !n.getLastChild().isString()) {\n+      return true;\n+    }\n+\n+    // Recurse on child nodes.\n+    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n+      if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {\n+        return true;\n+      }\n+    }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}