{
    "patch": "if (b == 43) {\n    byteArrayOutputStream.write(32);\n} else if (b == 37) {\n    try {\n        byte parseByte = (byte) ((parseHexDigit(charArray[i+1]) << 4) = parseHexDigit(charArray[i+2])); \n        byteArrayOutputStream.write(parseByte);\n        i += 2;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new IllegalArgumentException(\"Invalid encoded sequence: insufficient number of characters\", e);\n    } catch (NumberFormatException e) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Invalid encoded sequence: bad hexadecimal digit '\");\n        sb.append(charArray[i+1]);\n        sb.append(charArray[i+2]);\n        sb.append(\"'\");\n        throw new IllegalArgumentException(sb.toString(), e);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}