{
    "patch": "    public static double[] bracket(UnivariateRealFunction function,\n            double initial, double lowerBound, double upperBound,\n            int maximumIterations) throws ConvergenceException,\n            FunctionEvaluationException {\n\n        if (function == null) {\n            throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n        }\n        if (maximumIterations <= 0)  {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"bad value for maximum iterations number: {0}\", maximumIterations);\n        }\n        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                  lowerBound, initial, upperBound);\n        }\n        double a = initial;\n        double b = initial;\n        double fa;\n        double fb;\n        int numIterations = 0 ;\n\n        do {\n            a = Math.max(a - 1.0, lowerBound);\n            b = Math.min(b + 1.0, upperBound);\n            fa = function.value(a);\n\n            fb = function.value(b);\n            numIterations++ ;\n        } while ((fa * fb >= 0.0) && (numIterations < maximumIterations) &&\n                ((a > lowerBound) || (b < upperBound)));\n\n        if (fa * fb >= 0.0 ) {\n            throw new ConvergenceException(\n                      \"number of iterations={0}, maximum iterations={1}, \" +\n                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n                      numIterations, maximumIterations, initial,\n                      lowerBound, upperBound, a, b, fa, fb);\n        }\n\n        return new double[]{a, b};\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\nindex bf3e4bf53..c17865bf8 100644\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n@@ -163,10 +163,10 @@ public class UnivariateRealSolverUtils {\n      * is not positive, or initial is not between lowerBound and upperBound\n      */\n     public static double[] bracket(UnivariateRealFunction function,\n-            double initial, double lowerBound, double upperBound, \n-            int maximumIterations) throws ConvergenceException, \n+            double initial, double lowerBound, double upperBound,\n+            int maximumIterations) throws ConvergenceException,\n             FunctionEvaluationException {\n-        \n+\n         if (function == null) {\n             throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n         }\n@@ -184,17 +184,17 @@ public class UnivariateRealSolverUtils {\n         double fa;\n         double fb;\n         int numIterations = 0 ;\n-    \n+\n         do {\n             a = Math.max(a - 1.0, lowerBound);\n             b = Math.min(b + 1.0, upperBound);\n             fa = function.value(a);\n-            \n+\n             fb = function.value(b);\n             numIterations++ ;\n-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n+        } while ((fa * fb >= 0.0) && (numIterations < maximumIterations) &&\n                 ((a > lowerBound) || (b < upperBound)));\n-   \n+\n         if (fa * fb >= 0.0 ) {\n             throw new ConvergenceException(\n                       \"number of iterations={0}, maximum iterations={1}, \" +\n@@ -203,7 +203,7 @@ public class UnivariateRealSolverUtils {\n                       numIterations, maximumIterations, initial,\n                       lowerBound, upperBound, a, b, fa, fb);\n         }\n-        \n+\n         return new double[]{a, b};\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2.0> but was:<2.0000000034677345>",
    "test_result": "FAIL"
}