{
    "patch": "public static String decode(String input, String encoding) throws UnsupportedEncodingException {\n    byte[] inputBytes = input.getBytes(encoding);\n    StringBuilder output = new StringBuilder(inputBytes.length);\n    for (int i = 0; i < inputBytes.length; i++) {\n        int currentByte = inputBytes[i] & 0xFF;\n        if (currentByte == '%') {\n            if (i < inputBytes.length - 2) {\n                int firstHex = Character.digit((char) inputBytes[++i], 16);\n                int secondHex = Character.digit((char) inputBytes[++i], 16);\n                if (firstHex != -1 && secondHex != -1) {\n                    output.append((char) ((firstHex << 4) + secondHex));\n                } else {\n                    output.append('%').append(Character.toChars(firstHex))\n                        .append(Character.toChars(secondHex));\n                }\n            } else {\n                output.append('%');\n            }\n        } else {\n            output.append((char) currentByte);\n        }\n    }\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..ceb2fc60 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,30 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String input, String encoding) throws UnsupportedEncodingException {\n+    byte[] inputBytes = input.getBytes(encoding);\n+    StringBuilder output = new StringBuilder(inputBytes.length);\n+    for (int i = 0; i < inputBytes.length; i++) {\n+        int currentByte = inputBytes[i] & 0xFF;\n+        if (currentByte == '%') {\n+            if (i < inputBytes.length - 2) {\n+                int firstHex = Character.digit((char) inputBytes[++i], 16);\n+                int secondHex = Character.digit((char) inputBytes[++i], 16);\n+                if (firstHex != -1 && secondHex != -1) {\n+                    output.append((char) ((firstHex << 4) + secondHex));\n+                } else {\n+                    output.append('%').append(Character.toChars(firstHex))\n+                        .append(Character.toChars(secondHex));\n+                }\n+            } else {\n+                output.append('%');\n+            }\n+        } else {\n+            output.append((char) currentByte);\n+        }\n+    }\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}