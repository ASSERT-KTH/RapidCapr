{
    "patch": "import java.util.*;\n\npublic class StringUtils {\n    \n    private static Set<Locale> cAvailableLocaleSet;\n    \n    public static boolean isAvailableLocale(Locale locale) {\n        return availableLocaleSet().contains(locale);\n    }\n    \n    private static Set<Locale> availableLocaleSet() {\n        if (cAvailableLocaleSet == null) {\n            cAvailableLocaleSet = new HashSet<>();\n            cAvailableLocaleSet.addAll(Arrays.asList(Locale.getAvailableLocales()));\n        }\n        return cAvailableLocaleSet;\n    }\n  \n    public static boolean equals(CharSequence cs1, CharSequence cs2) {\n        if (cs1 == cs2) {\n            return true;\n        }\n        if (cs1 == null || cs2 == null) {\n            return false;\n        }\n        return cs1.toString().equals(cs2.toString());\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex 535a3f24..54594753 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -778,6 +778,24 @@ public class StringUtils {\n      * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}\n      * @since 3.0 Changed signature from equals(String, String) to equals(CharSequence, CharSequence)\n      */\n+import java.util.*;\n+\n+public class StringUtils {\n+    \n+    private static Set<Locale> cAvailableLocaleSet;\n+    \n+    public static boolean isAvailableLocale(Locale locale) {\n+        return availableLocaleSet().contains(locale);\n+    }\n+    \n+    private static Set<Locale> availableLocaleSet() {\n+        if (cAvailableLocaleSet == null) {\n+            cAvailableLocaleSet = new HashSet<>();\n+            cAvailableLocaleSet.addAll(Arrays.asList(Locale.getAvailableLocales()));\n+        }\n+        return cAvailableLocaleSet;\n+    }\n+  \n     public static boolean equals(CharSequence cs1, CharSequence cs2) {\n         if (cs1 == cs2) {\n             return true;\n@@ -785,8 +803,9 @@ public class StringUtils {\n         if (cs1 == null || cs2 == null) {\n             return false;\n         }\n-            return cs1.equals(cs2);\n+        return cs1.toString().equals(cs2.toString());\n     }\n+}\n \n     /**\n      * <p>Compares two CharSequences, returning {@code true} if they represent",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}