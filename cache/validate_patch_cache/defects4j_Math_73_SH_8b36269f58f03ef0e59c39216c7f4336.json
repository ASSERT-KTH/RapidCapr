{
    "patch": "        // check that the root is bracketed\n        double sign = yMin < 0 ? 1 : -1;\n        if ((yMax * sign) >= 0) {\n            throw new IllegalArgumentException(\"Function values at endpoints do not have opposite signs. Endpoints: [\"+min+\", \"+max+\"], Values: [\"+yMin+\", \"+yMax+\"]\");\n        }\n\n        // full Brent algorithm starting with provided initial guess\n        return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..1fc60c28d 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,14 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // check that the root is bracketed\n+        double sign = yMin < 0 ? 1 : -1;\n+        if ((yMax * sign) >= 0) {\n+            throw new IllegalArgumentException(\"Function values at endpoints do not have opposite signs. Endpoints: [\"+min+\", \"+max+\"], Values: [\"+yMin+\", \"+yMax+\"]\");\n+        }\n+\n+        // full Brent algorithm starting with provided initial guess\n+        return solve(f, min, yMin, max, yMax, initial, yInitial);\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}