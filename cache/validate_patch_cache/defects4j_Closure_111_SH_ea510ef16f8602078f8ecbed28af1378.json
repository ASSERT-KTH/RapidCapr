{
    "patch": "           // if lhs is a type we can transform rhs into (e.g., ? or bot),\n           // then do so, but return lhs\n           if (rhs.isEquivalentTo(JSType.UNKNOWN) || rhs.isBottom()) {\n             return lhs;\n           }\n           return topType;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..4f3ec995 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,12 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+           // if lhs is a type we can transform rhs into (e.g., ? or bot),\n+           // then do so, but return lhs\n+           if (rhs.isEquivalentTo(JSType.UNKNOWN) || rhs.isBottom()) {\n+             return lhs;\n+           }\n+           return topType;\n         }\n \n         @Override",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}