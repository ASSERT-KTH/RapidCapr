{
    "patch": "return cfgNode.getType() != null && cfgNode.getType().isFunctionType() && cfgNode.getType().isFunctionType() &&\n       cfgNode.getType().toMaybeFunctionType().getReturnType() != null &&\n       cfgNode.getType().toMaybeFunctionType().getReturnType().isNumberValueType();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..9162dea9 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,9 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+return cfgNode.getType() != null && cfgNode.getType().isFunctionType() && cfgNode.getType().isFunctionType() &&\n+       cfgNode.getType().toMaybeFunctionType().getReturnType() != null &&\n+       cfgNode.getType().toMaybeFunctionType().getReturnType().isNumberValueType();\n     return false;\n   }\n ",
    "result_reason": "error: incomparable types: int and <null>",
    "test_result": "ERROR"
}