{
    "patch": "        if (n.isIf()) {\n          Node ifBlock = n.getLastChild();\n          Node elseBlock = ifBlock.getNext();\n          boolean hasIfBlock = apply(ifBlock);\n          boolean hasElseBlock = elseBlock != null && apply(elseBlock);\n          return hasIfBlock && hasElseBlock;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..b1e47155 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,12 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isIf()) {\n+          Node ifBlock = n.getLastChild();\n+          Node elseBlock = ifBlock.getNext();\n+          boolean hasIfBlock = apply(ifBlock);\n+          boolean hasElseBlock = elseBlock != null && apply(elseBlock);\n+          return hasIfBlock && hasElseBlock;\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: invalid method declaration; return type required",
    "test_result": "ERROR"
}