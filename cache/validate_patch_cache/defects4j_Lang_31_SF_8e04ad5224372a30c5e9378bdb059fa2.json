{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int strLen = sequence.length();\n    final int searchLen = searchChars.length;\n    final int strLast = strLen - 1;\n    final int searchLast = searchLen - 1;\n    for (int i = 0; i < strLen; i++) {\n        final char ch = sequence.charAt(i);\n        if (searchChars[0] == ch) {\n            if (searchLen == 1) {\n                // The search string has only one character and it matches the\n                // current character, so we have found a match.\n                return true;\n            } else if (i + searchLen > strLen) {\n                // The search string has more than one character, but we have\n                // reached the end of the string and there are no more characters\n                // left to search, so we cannot find a match.\n                return false;\n            } else {\n                // Compare the remaining characters in the search string and\n                // the remaining characters in the input string to see if they match.\n                int j = 1;\n                while (j < searchLen && sequence.charAt(i + j) == searchChars[j]) {\n                    j++;\n                }\n                if (j == searchLen) {\n                    // We found a match.\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..b440e406 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,42 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int strLen = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int strLast = strLen - 1;\n+    final int searchLast = searchLen - 1;\n+    for (int i = 0; i < strLen; i++) {\n+        final char ch = sequence.charAt(i);\n+        if (searchChars[0] == ch) {\n+            if (searchLen == 1) {\n+                // The search string has only one character and it matches the\n+                // current character, so we have found a match.\n+                return true;\n+            } else if (i + searchLen > strLen) {\n+                // The search string has more than one character, but we have\n+                // reached the end of the string and there are no more characters\n+                // left to search, so we cannot find a match.\n+                return false;\n+            } else {\n+                // Compare the remaining characters in the search string and\n+                // the remaining characters in the input string to see if they match.\n+                int j = 1;\n+                while (j < searchLen && sequence.charAt(i + j) == searchChars[j]) {\n+                    j++;\n+                }\n+                if (j == searchLen) {\n+                    // We found a match.\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}