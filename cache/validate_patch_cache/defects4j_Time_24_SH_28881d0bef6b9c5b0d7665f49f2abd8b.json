{
    "patch": "            \n            if (iZone == null) {\n                millis -= iOffset;\n            } else {\n                int offset = iZone.getOffsetFromLocal(millis);\n                millis = iZone.convertLocalToUTC(millis, false, iOffset);\n                int offset2 = iZone.getOffset(millis);\n                if (offset != offset2) {\n                    String message =\n                        \"Illegal instant due to time zone offset transition: \" +\n                        DateTimeFormat.forPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\").print(new DateTime(millis, iZone)) +\n                        offsetStr(offset) + \" to \" + offsetStr(offset2);\n                    if (text != null) {\n                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n                    }\n                    throw new IllegalArgumentException(message);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..1b1fba44 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,22 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            \n+            if (iZone == null) {\n+                millis -= iOffset;\n+            } else {\n+                int offset = iZone.getOffsetFromLocal(millis);\n+                millis = iZone.convertLocalToUTC(millis, false, iOffset);\n+                int offset2 = iZone.getOffset(millis);\n+                if (offset != offset2) {\n+                    String message =\n+                        \"Illegal instant due to time zone offset transition: \" +\n+                        DateTimeFormat.forPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\").print(new DateTime(millis, iZone)) +\n+                        offsetStr(offset) + \" to \" + offsetStr(offset2);\n+                    if (text != null) {\n+                        message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n+                    }\n+                    throw new IllegalArgumentException(message);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}