{
    "patch": "        if (currentStrategy != null) {\n            currentStrategy.addRegex(this, regex);\n            collector.add(currentStrategy);\n        }\n\n        if (collector.size() > 0) {\n            currentFormatField = null;\n            strategies = collector.toArray(new Strategy[collector.size()]);\n            parsePattern = Pattern.compile(regex.toString());\n        } else {\n            currentFormatField = null;\n            strategies = new Strategy[0];\n            parsePattern = null;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..6c94397e 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        if (currentStrategy != null) {\n+            currentStrategy.addRegex(this, regex);\n+            collector.add(currentStrategy);\n+        }\n+\n+        if (collector.size() > 0) {\n+            currentFormatField = null;\n+            strategies = collector.toArray(new Strategy[collector.size()]);\n+            parsePattern = Pattern.compile(regex.toString());\n+        } else {\n+            currentFormatField = null;\n+            strategies = new Strategy[0];\n+            parsePattern = null;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}