{
    "patch": "public Line revert() {\n    final Vector2D invertedDirection = direction.negate();\n    final Point2D endPoint = startPoint.add(invertedDirection);\n    return new Line(endPoint, startPoint);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..73bd52f4a 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,11 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+public Line revert() {\n+    final Vector2D invertedDirection = direction.negate();\n+    final Point2D endPoint = startPoint.add(invertedDirection);\n+    return new Line(endPoint, startPoint);\n+}\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}