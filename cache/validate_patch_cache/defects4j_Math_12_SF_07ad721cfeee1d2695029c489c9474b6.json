{
    "patch": "public double[] distributionClone(double[] genotypeProbabilities, int M, int D, int N) {\n    double[][] dp = new double[D + 1][M];\n    dp[0][0] = 1;\n\n    for (int i = 1; i <= D; i++) {\n        for (int j = 0; j < M; j++) {\n            for (int k = 0; k < M; k++) {\n                int dominant = getDominant(j, k, M);\n                dp[i][j] += dp[i-1][k] * genotypeProbabilities[dominant];\n            }\n        }\n    }\n\n    double[] result = new double[N+1];\n    for (int i = 0; i < M; i++) {\n        result[populationCount(i)] += dp[D][i];\n    }\n\n    for (int i = 0; i <= N; i++) {\n        result[i] /= Math.pow(M, D);\n    }\n\n    return result;\n}\n\n\nprivate int getDominant(int a, int b, int M) {\n    if (b > a) {\n        return getDominant(b, a, M);\n    }\n\n    int result = 0;\n    for (int i = 0; i < b; i++) {\n        result += M - i;\n    }\n    result += a - b;\n    return result;\n}\n\nprivate int populationCount(int bits) {\n    int count = 0;\n    while (bits > 0) {\n        count += bits & 1;\n        bits >>= 1;\n    }\n    return count;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}