{
    "patch": "            if (getStandardOffset(instantAdjusted) < getStandardOffset(instantAdjusted + 1)) {\n                long transition = nextTransition(instantAdjusted);\n                if (transition == instantAdjusted) {\n                    transition = nextTransition(transition + 1);\n                }\n                return getOffset(transition);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..26f80bc5 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (getStandardOffset(instantAdjusted) < getStandardOffset(instantAdjusted + 1)) {\n+                long transition = nextTransition(instantAdjusted);\n+                if (transition == instantAdjusted) {\n+                    transition = nextTransition(transition + 1);\n+                }\n+                return getOffset(transition);\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}