{
    "patch": "public static double getTypedPercent(JSONObject object) {\n    double count = object.keySet().size();\n    double typed = object.values().stream().filter(value -> value instanceof String).count();\n    return (typed / count) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..4e45fd14 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,11 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject object) {\n+    double count = object.keySet().size();\n+    double typed = object.values().stream().filter(value -> value instanceof String).count();\n+    return (typed / count) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}