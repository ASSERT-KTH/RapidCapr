{
    "patch": "public class MyClass {\n  public static Object returnValueFor(Class<?> clazz) {\n    if (clazz.equals(String.class)) {\n      return \"myString\";\n    } else if (clazz.equals(Integer.class)) {\n      return 42;\n    } else {\n      return null;\n    }\n  }\n\n  public static void main(String[] args) {\n    System.out.println(returnValueFor(String.class));\n    System.out.println(returnValueFor(Integer.class));\n        \n    // This code was previously unreachable, but is now fixed\n    Iterable<Object> iterable = (Iterable<Object>) returnValueFor(Iterable.class);\n    if (iterable == null || !iterable.iterator().hasNext()) {\n      System.out.println(\"Empty Iterable\");\n    } else {\n      System.out.println(\"Non-empty Iterable\");\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}