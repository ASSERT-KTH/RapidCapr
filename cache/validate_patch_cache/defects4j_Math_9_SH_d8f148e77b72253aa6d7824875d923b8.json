{
    "patch": "        Vector3D zero = Vector3D.ZERO;\n        Vector3D revertedDirection = direction.negate().normalize();\n\n        if (Double.isNaN(revertedDirection.getX()) || Double.isNaN(revertedDirection.getY()) || Double.isNaN(revertedDirection.getZ())) {\n            revertedDirection = direction.negate();\n        }\n        \n        Line reverted = new Line(zero, revertedDirection);\n        \n        // Check if the vector and the reverted vector are equal within a small tolerance\n        if (reverted.getDirection().angle(direction) > 1e-6) {\n            throw new IllegalStateException(\"Failed to revert line\");\n        }\n",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..89da6b564 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,20 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+        Vector3D zero = Vector3D.ZERO;\n+        Vector3D revertedDirection = direction.negate().normalize();\n+\n+        if (Double.isNaN(revertedDirection.getX()) || Double.isNaN(revertedDirection.getY()) || Double.isNaN(revertedDirection.getZ())) {\n+            revertedDirection = direction.negate();\n+        }\n+        \n+        Line reverted = new Line(zero, revertedDirection);\n+        \n+        // Check if the vector and the reverted vector are equal within a small tolerance\n+        if (reverted.getDirection().angle(direction) > 1e-6) {\n+            throw new IllegalStateException(\"Failed to revert line\");\n+        }\n+\n         return reverted;\n     }\n ",
    "result_reason": "error: method angle in class Vector3D cannot be applied to given types;",
    "test_result": "ERROR"
}