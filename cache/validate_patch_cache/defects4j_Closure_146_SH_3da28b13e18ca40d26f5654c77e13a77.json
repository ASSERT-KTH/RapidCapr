{
    "patch": "if (this.isSubtypeOf(that) == TRUTHY) {\n    return new TypePair(that, this);\n} else if (that.isSubtypeOf(this) == TRUTHY) {\n    return new TypePair(this, that);\n} else {\n    return new TypePair(null, null);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..11568fc3 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,13 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+if (this.isSubtypeOf(that) == TRUTHY) {\n+    return new TypePair(that, this);\n+} else if (that.isSubtypeOf(this) == TRUTHY) {\n+    return new TypePair(this, that);\n+} else {\n+    return new TypePair(null, null);\n+}\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}