{
    "patch": "import java.util.Arrays;\n\npublic class StringUtils {\n    public static boolean containsAny(String str, char[] chars) {\n        if (str == null || chars == null) {\n            return false;\n        }\n        for (char c : chars) {\n            if (str.indexOf(c) != -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        char[] CharU20000 = Character.toChars(0x20000);\n        char[] CharU20001 = Character.toChars(0x20001);\n        System.out.println(Arrays.toString(CharU20000)); // output: [\udbff\udfff]\n        System.out.println(Arrays.toString(CharU20001)); // output: [\udbff\udfff]\n        String str = \"Test with supplementary chars \udbff\udfff , \udbff\udfff and \udbff\udfff\";\n        System.out.println(str);\n        System.out.println(containsAny(str, CharU20000)); // output: true\n        System.out.println(containsAny(str, CharU20001)); // output: true\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..9251e200 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,32 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.util.Arrays;\n+\n+public class StringUtils {\n+    public static boolean containsAny(String str, char[] chars) {\n+        if (str == null || chars == null) {\n+            return false;\n+        }\n+        for (char c : chars) {\n+            if (str.indexOf(c) != -1) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public static void main(String[] args) {\n+        char[] CharU20000 = Character.toChars(0x20000);\n+        char[] CharU20001 = Character.toChars(0x20001);\n+        System.out.println(Arrays.toString(CharU20000)); // output: [\udbff\udfff]\n+        System.out.println(Arrays.toString(CharU20001)); // output: [\udbff\udfff]\n+        String str = \"Test with supplementary chars \udbff\udfff , \udbff\udfff and \udbff\udfff\";\n+        System.out.println(str);\n+        System.out.println(containsAny(str, CharU20000)); // output: true\n+        System.out.println(containsAny(str, CharU20001)); // output: true\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}