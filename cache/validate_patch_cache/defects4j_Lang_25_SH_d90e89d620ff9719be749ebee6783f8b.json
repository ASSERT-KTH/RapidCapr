{
    "patch": "String escaped = \"\";\nfor (int i = 0; i < input.length(); i++) {\n    char ch = input.charAt(i);\n    if (ch > 255) {\n        escaped += UNICODE_ESCAPE_PREFIX + Integer.toHexString(ch) + \";\";\n    } else if (ch == '<') {\n        escaped += \"&lt;\";\n    } else if (ch == '>') {\n        escaped += \"&gt;\";\n    } else if (ch == '&') {\n        escaped += \"&amp;\";\n    } else if (ch == '\"') {\n        escaped += \"&quot;\";\n    } else if (ch == '\\'') {\n        escaped += \"&#039;\";\n    } else {\n        escaped += ch;\n    }\n}\nreturn escaped;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}