{
    "patch": "if (options.checkGlobalThisLevel != null) {\n      if (options.checkGlobalThisLevel.isOn()) {\n        options.setWarningLevel(\n            DiagnosticGroups.GLOBAL_THIS,\n            CheckLevel.WARNING);\n      } else if (options.checkGlobalThisLevel == CheckLevel.OFF) {\n        options.setWarningLevel(\n            DiagnosticGroups.GLOBAL_THIS,\n            CheckLevel.OFF);\n      } else {\n        // When a CheckLevel other than ON or OFF is specified,\n        // we set the warning level to that level and enable the\n        // checkGlobalThis pass so that it will report the warnings\n        // at that level.\n        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS,\n            options.checkGlobalThisLevel);\n        options.setCheckGlobalThis(true);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..3e43897d 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,25 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+      if (options.checkGlobalThisLevel.isOn()) {\n+        options.setWarningLevel(\n+            DiagnosticGroups.GLOBAL_THIS,\n+            CheckLevel.WARNING);\n+      } else if (options.checkGlobalThisLevel == CheckLevel.OFF) {\n+        options.setWarningLevel(\n+            DiagnosticGroups.GLOBAL_THIS,\n+            CheckLevel.OFF);\n+      } else {\n+        // When a CheckLevel other than ON or OFF is specified,\n+        // we set the warning level to that level and enable the\n+        // checkGlobalThis pass so that it will report the warnings\n+        // at that level.\n+        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS,\n+            options.checkGlobalThisLevel);\n+        options.setCheckGlobalThis(true);\n+      }\n+    }\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}