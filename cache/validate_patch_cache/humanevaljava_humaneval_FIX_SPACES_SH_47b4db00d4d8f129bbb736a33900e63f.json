{
    "patch": "public static String fix_spaces(String text) {\n    StringBuilder new_text = new StringBuilder();\n    \n    for (int i = 0; i < text.length(); i++) {\n        if (text.charAt(i) == ' ') {\n            if (i > 0 && i < text.length()-1) {\n                char prevChar = text.charAt(i-1);\n                char nextChar = text.charAt(i+1);\n                if (prevChar != ' ' && nextChar != ' ') {\n                    new_text.append(\"_\");\n                } else if (prevChar != ' ' && nextChar == ' ') {\n                    new_text.append(\"-\");\n                }\n            }\n        } else {\n            new_text.append(text.charAt(i));\n        }\n    }\n\n    return new_text.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..b29ab00 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -33,6 +33,27 @@ public class FIX_SPACES {\n             i += 1;\n         }\n \n+public static String fix_spaces(String text) {\n+    StringBuilder new_text = new StringBuilder();\n+    \n+    for (int i = 0; i < text.length(); i++) {\n+        if (text.charAt(i) == ' ') {\n+            if (i > 0 && i < text.length()-1) {\n+                char prevChar = text.charAt(i-1);\n+                char nextChar = text.charAt(i+1);\n+                if (prevChar != ' ' && nextChar != ' ') {\n+                    new_text.append(\"_\");\n+                } else if (prevChar != ' ' && nextChar == ' ') {\n+                    new_text.append(\"-\");\n+                }\n+            }\n+        } else {\n+            new_text.append(text.charAt(i));\n+        }\n+    }\n+\n+    return new_text.toString();\n+}\n         return new_text;\n     }\n }",
    "result_reason": " /tmp/humaneval-FIX_SPACES/src/main/java/humaneval/buggy/FIX_SPACES.java:[36,1] illegal start of expression",
    "test_result": "ERROR"
}