{
    "patch": "if (boundaries != null) {\n    for (double[] bound : boundaries) {\n        for (double b : bound) {\n            if (!Double.isFinite(b)) {\n                throw new NumberIsTooLargeException(b, 0, false);\n            }\n        }\n    }\n    for (int i = 0; ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 51d1c6428..5f82eb0f5 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -537,6 +537,15 @@ public class CMAESOptimizer\n                 boundaries[1] = uB;\n \n                 // Abort early if the normalization will overflow (cf. \"encode\" method).\n+if (boundaries != null) {\n+    for (double[] bound : boundaries) {\n+        for (double b : bound) {\n+            if (!Double.isFinite(b)) {\n+                throw new NumberIsTooLargeException(b, 0, false);\n+            }\n+        }\n+    }\n+    for (int i = 0; \n             }\n         } else {\n             // Convert API to internal handling of boundaries.",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}