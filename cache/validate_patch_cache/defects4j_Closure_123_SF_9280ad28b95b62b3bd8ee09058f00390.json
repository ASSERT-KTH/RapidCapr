{
    "patch": "public String fixCode(String code) {\n    String regex = \"for\\\\((.*?);(.*?);(.*?)\\\\)\";\n    Pattern pattern = Pattern.compile(regex);\n    Matcher matcher = pattern.matcher(code);\n\n    StringBuffer sb = new StringBuffer();\n\n    while (matcher.find()) {\n        String init = matcher.group(1);\n        String condition = matcher.group(2);\n        String update = matcher.group(3);\n        String newCondition = condition;\n\n        if (!condition.contains(\"in\")) {\n            continue;\n        }\n\n        String[] tokens = condition.split(\"\\\\s+\");\n\n        for (int i = 0; i < tokens.length - 2; i++) {\n            if (tokens[i].equals(\"in\")) {\n                String collection = tokens[i + 1];\n                newCondition = newCondition.replace(collection, \"(\" + collection + \" instanceof java.util.Collection ? \" + collection + \".toArray() : \" + collection + \")\");\n                break;\n            }\n        }\n\n        String fixedLoop = \"for (\" + init + \";\" + newCondition + \";\" + update + \")\";\n        matcher.appendReplacement(sb, Matcher.quoteReplacement(fixedLoop));\n    }\n\n    matcher.appendTail(sb);\n\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..b9546e07 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,41 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    String regex = \"for\\\\((.*?);(.*?);(.*?)\\\\)\";\n+    Pattern pattern = Pattern.compile(regex);\n+    Matcher matcher = pattern.matcher(code);\n+\n+    StringBuffer sb = new StringBuffer();\n+\n+    while (matcher.find()) {\n+        String init = matcher.group(1);\n+        String condition = matcher.group(2);\n+        String update = matcher.group(3);\n+        String newCondition = condition;\n+\n+        if (!condition.contains(\"in\")) {\n+            continue;\n+        }\n+\n+        String[] tokens = condition.split(\"\\\\s+\");\n+\n+        for (int i = 0; i < tokens.length - 2; i++) {\n+            if (tokens[i].equals(\"in\")) {\n+                String collection = tokens[i + 1];\n+                newCondition = newCondition.replace(collection, \"(\" + collection + \" instanceof java.util.Collection ? \" + collection + \".toArray() : \" + collection + \")\");\n+                break;\n+            }\n+        }\n+\n+        String fixedLoop = \"for (\" + init + \";\" + newCondition + \";\" + update + \")\";\n+        matcher.appendReplacement(sb, Matcher.quoteReplacement(fixedLoop));\n+    }\n+\n+    matcher.appendTail(sb);\n+\n+    return sb.toString();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}