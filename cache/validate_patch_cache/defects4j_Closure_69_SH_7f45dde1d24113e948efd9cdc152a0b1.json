{
    "patch": "JSType thisType = functionType.getTypeOfThis();\nif (thisType != null && !(\n        n.getParent().isGetProp() || \n        n.getParent().isGetElem() ||\n        (n.getParent().isCall() && n.getPrevious() == null))) {\n    report(t, n, EXPECTED_THIS_TYPE);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..39e0470d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+JSType thisType = functionType.getTypeOfThis();\n+if (thisType != null && !(\n+        n.getParent().isGetProp() || \n+        n.getParent().isGetElem() ||\n+        (n.getParent().isCall() && n.getPrevious() == null))) {\n+    report(t, n, EXPECTED_THIS_TYPE);\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}