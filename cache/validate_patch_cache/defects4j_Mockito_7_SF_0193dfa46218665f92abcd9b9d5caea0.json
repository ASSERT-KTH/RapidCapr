{
    "patch": "Type[] bounds = typeVariable.getBounds();\nif (bounds.length > 0) {\n    for (Type bound : bounds) {\n        registerTypeVariablesOn(bound);\n    }\n} else {\n    registerTypeVariablesOn(typeVariable);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..25ae6006e 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,15 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+Type[] bounds = typeVariable.getBounds();\n+if (bounds.length > 0) {\n+    for (Type bound : bounds) {\n+        registerTypeVariablesOn(bound);\n+    }\n+} else {\n+    registerTypeVariablesOn(typeVariable);\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}