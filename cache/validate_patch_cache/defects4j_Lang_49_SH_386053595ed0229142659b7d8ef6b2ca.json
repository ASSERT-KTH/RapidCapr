{
    "patch": "        int absNum = numerator / gcd;\n        int absDen = denominator / gcd;\n        if (absDen < 0) {\n            absNum = -absNum;\n            absDen = -absDen;\n        }\n        return getFraction(absNum, absDen);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..e6c69a6e 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,13 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        int absNum = numerator / gcd;\n+        int absDen = denominator / gcd;\n+        if (absDen < 0) {\n+            absNum = -absNum;\n+            absDen = -absDen;\n+        }\n+        return getFraction(absNum, absDen);\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}