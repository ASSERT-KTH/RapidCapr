{
    "patch": "        // Old Rhino tagged the empty name node with the line number of the\n        // declaration.\n        newName.setLineno(functionNode.getLineno());\n        newName.setCharno(functionNode.getPosition() + functionNode.getLp());\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..39ad089c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,11 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+        // Old Rhino tagged the empty name node with the line number of the\n+        // declaration.\n+        newName.setLineno(functionNode.getLineno());\n+        newName.setCharno(functionNode.getPosition() + functionNode.getLp());\n+      }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}