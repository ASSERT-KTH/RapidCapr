{
    "patch": "      if (fnName != null) {\n        lp.setLineno(fnName.getLineno());\n        lp.setCharno(position2charno(fnName.getEnd() + 1));\n      } else {\n        lp.setLineno(functionNode.getLineno());\n        lp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLength() + 1));\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..1c199850 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,13 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      if (fnName != null) {\n+        lp.setLineno(fnName.getLineno());\n+        lp.setCharno(position2charno(fnName.getEnd() + 1));\n+      } else {\n+        lp.setLineno(functionNode.getLineno());\n+        lp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLength() + 1));\n+      }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}