{
    "patch": "public static boolean isJSIdentifier(String s) {\n    int length = s.length();\n    if (length == 0 || !isASCIILetter(s.charAt(0))) {\n        return false;\n    }\n    for (int i = 1; i < length; i++) {\n        char c = s.charAt(i);\n        if (!isASCIIIdentifierPart(c)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean isASCIILetter(char c) {\n    return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');\n}\n\nprivate static boolean isASCIIDigit(char c) {\n    return c >= '0' && c <= '9';\n}\n\nprivate static boolean isASCIIIdentifierPart(char c) {\n    return isASCIILetter(c) || isASCIIDigit(c) || c == '_' || c == '$';\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/TokenStream.java b/src/com/google/javascript/rhino/TokenStream.java\nindex 144a4adc..534950be 100644\n--- a/src/com/google/javascript/rhino/TokenStream.java\n+++ b/src/com/google/javascript/rhino/TokenStream.java\n@@ -187,21 +187,29 @@ public class TokenStream {\n         return id;\n     }\n \n-    public static boolean isJSIdentifier(String s) {\n-      int length = s.length();\n-\n-      if (length == 0 ||\n-          !Character.isJavaIdentifierStart(s.charAt(0))) {\n+public static boolean isJSIdentifier(String s) {\n+    int length = s.length();\n+    if (length == 0 || !isASCIILetter(s.charAt(0))) {\n         return false;\n-      }\n-\n-      for (int i = 1; i < length; i++) {\n-        if (\n-            !Character.isJavaIdentifierPart(s.charAt(i))) {\n-          return false;\n+    }\n+    for (int i = 1; i < length; i++) {\n+        char c = s.charAt(i);\n+        if (!isASCIIIdentifierPart(c)) {\n+            return false;\n         }\n-      }\n-\n-      return true;\n     }\n+    return true;\n+}\n+\n+private static boolean isASCIILetter(char c) {\n+    return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');\n+}\n+\n+private static boolean isASCIIDigit(char c) {\n+    return c >= '0' && c <= '9';\n+}\n+\n+private static boolean isASCIIIdentifierPart(char c) {\n+    return isASCIILetter(c) || isASCIIDigit(c) || c == '_' || c == '$';\n+}\n }",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}