{
    "patch": "Name name = functionNode.getFunctionName();\nNode newName;\nif (name == null) {\n  newName = newNode(Token.NAME, \"\");\n  newName.setLineno(functionNode.getLineno());\n} else {\n  newName = transform(name);\n  newName.setLineno(functionNode.getLineno());\n}\nnewName.setCharno(position2charno(functionNode.getAbsolutePosition()));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..efffbc3a 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,16 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+Node newName;\n+if (name == null) {\n+  newName = newNode(Token.NAME, \"\");\n+  newName.setLineno(functionNode.getLineno());\n+} else {\n+  newName = transform(name);\n+  newName.setLineno(functionNode.getLineno());\n+}\n+newName.setCharno(position2charno(functionNode.getAbsolutePosition()));\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}