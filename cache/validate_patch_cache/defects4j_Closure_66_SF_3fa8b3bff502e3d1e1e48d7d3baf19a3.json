{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    double count = 0;\n    double total = 0;\n    try {\n        JSONArray jsonArray = new JSONArray(jsonStr);\n        for (int i = 0; i < jsonArray.length(); i++) {\n            JSONObject obj = jsonArray.getJSONObject(i);\n            if (obj.has(\"type\") && obj.has(\"value\")) {\n                String type = obj.getString(\"type\");\n                if (type.equals(\"int\") || type.equals(\"double\")) {\n                    count++;\n                }\n                total++;\n            }\n        }\n        return (count / total) * 100;\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n    return 0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..51170ca8 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    double count = 0;\n+    double total = 0;\n+    try {\n+        JSONArray jsonArray = new JSONArray(jsonStr);\n+        for (int i = 0; i < jsonArray.length(); i++) {\n+            JSONObject obj = jsonArray.getJSONObject(i);\n+            if (obj.has(\"type\") && obj.has(\"value\")) {\n+                String type = obj.getString(\"type\");\n+                if (type.equals(\"int\") || type.equals(\"double\")) {\n+                    count++;\n+                }\n+                total++;\n+            }\n+        }\n+        return (count / total) * 100;\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+    return 0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}