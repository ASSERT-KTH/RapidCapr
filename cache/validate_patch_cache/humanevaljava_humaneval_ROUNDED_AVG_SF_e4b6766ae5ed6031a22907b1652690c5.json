{
    "patch": "public static String rounded_avg(int n, int m) {\n    if(m < n) return \"-1\";\n    long summation = 0;\n    for(int i=n;i<=m;i++)\n        summation+=i;\n    long avg = summation/(m-n+1);\n    if(summation%(m-n+1)!=0 && (double)((summatin%(m-n+1))*2)/(double)(m-n+1) >= 1)\n        avg++;\n    return Integer.toBinaryString((int)avg);    \n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROUNDED_AVG.java b/src/main/java/humaneval/buggy/ROUNDED_AVG.java\nindex 4f7aba3..bf2af0d 100644\n--- a/src/main/java/humaneval/buggy/ROUNDED_AVG.java\n+++ b/src/main/java/humaneval/buggy/ROUNDED_AVG.java\n@@ -12,20 +12,14 @@ package humaneval.buggy;\n  */\n \n public class ROUNDED_AVG {\n-    public static String rounded_avg(int n, int m) {\n-        if(m < n) return \"-1\";\n-        int summation = 0;\n-        for(int i = n; i < m + 1; i++) {\n-            summation += i;\n-        }\n-        double avg = ((double) summation)/((double) (m - n + 1));\n-        double rem = avg - Math.floor(avg);\n-        int avg_rounded = 0;\n-        if(rem <= 0.5) {\n-            avg_rounded = (int) Math.ceil(avg);\n-        } else {\n-            avg_rounded = (int) Math.ceil(avg);\n-        }\n-        return Integer.toBinaryString(avg_rounded);\n-    }\n+public static String rounded_avg(int n, int m) {\n+    if(m < n) return \"-1\";\n+    long summation = 0;\n+    for(int i=n;i<=m;i++)\n+        summation+=i;\n+    long avg = summation/(m-n+1);\n+    if(summation%(m-n+1)!=0 && (double)((summatin%(m-n+1))*2)/(double)(m-n+1) >= 1)\n+        avg++;\n+    return Integer.toBinaryString((int)avg);    \n+}\n }",
    "result_reason": " /tmp/humaneval-ROUNDED_AVG/src/main/java/humaneval/buggy/ROUNDED_AVG.java:[21,42] cannot find symbol",
    "test_result": "ERROR"
}