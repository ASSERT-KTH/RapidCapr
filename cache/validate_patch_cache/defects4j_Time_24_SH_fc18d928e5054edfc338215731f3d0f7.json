{
    "patch": "        SavedField lastDateField = null;\n        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            Chronology chrono = savedField.iField.getChronology();\n            if (lastDateField != null && savedField.iField.getType().equals(DateTimeFieldType.weekyear())) {\n                int value = (int)lastDateField.iValue;\n                Partial lastDate = new Partial(DurationFieldType.year(), lastDateField.getYearValue(chrono)+value);\n                try {\n                    lastDate = lastDate.with(DateTimeFieldType.weekyear(), savedField.getYearValue(chrono));\n                } catch (IllegalArgumentException ex) {\n                    if (ex.getMessage().startsWith(\"Value \")) {\n                        ex = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    throw ex;\n                }\n                savedFields[i - 1] = savedFields[i]; // Move to correct location.\n                for (int j = i; j < (count - 1); j++) {\n                    savedFields[j] = savedFields[j + 1];\n                }\n                savedFields[count - 1] = lastDateField;\n                i--;  // Retry this index.\n                continue;\n            }\n            lastDateField = savedField;\n            millis = savedField.set(millis, resetFields);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a71e1af5 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,31 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        SavedField lastDateField = null;\n+        for (int i = 0; i < count; i++) {\n+            SavedField savedField = savedFields[i];\n+            Chronology chrono = savedField.iField.getChronology();\n+            if (lastDateField != null && savedField.iField.getType().equals(DateTimeFieldType.weekyear())) {\n+                int value = (int)lastDateField.iValue;\n+                Partial lastDate = new Partial(DurationFieldType.year(), lastDateField.getYearValue(chrono)+value);\n+                try {\n+                    lastDate = lastDate.with(DateTimeFieldType.weekyear(), savedField.getYearValue(chrono));\n+                } catch (IllegalArgumentException ex) {\n+                    if (ex.getMessage().startsWith(\"Value \")) {\n+                        ex = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    throw ex;\n+                }\n+                savedFields[i - 1] = savedFields[i]; // Move to correct location.\n+                for (int j = i; j < (count - 1); j++) {\n+                    savedFields[j] = savedFields[j + 1];\n+                }\n+                savedFields[count - 1] = lastDateField;\n+                i--;  // Retry this index.\n+                continue;\n+            }\n+            lastDateField = savedField;\n+            millis = savedField.set(millis, resetFields);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}