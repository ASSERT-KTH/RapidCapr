{
    "patch": "public static double getTypedPercent(String js) {\n    double converted = 0.0;\n    try {\n        Object obj = new ScriptEngineManager().getEngineByName(\"javascript\").eval(js);\n        if (obj instanceof Number) {\n            converted = ((Number)obj).doubleValue();\n        }\n    } catch (ScriptException e) {\n        e.printStackTrace();\n    }\n    return converted;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..df682380 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    double converted = 0.0;\n+    try {\n+        Object obj = new ScriptEngineManager().getEngineByName(\"javascript\").eval(js);\n+        if (obj instanceof Number) {\n+            converted = ((Number)obj).doubleValue();\n+        }\n+    } catch (ScriptException e) {\n+        e.printStackTrace();\n+    }\n+    return converted;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}