{
    "patch": "    public static boolean containsIgnoreCase(String str, String searchStr) {\n        if (str == null || searchStr == null || searchStr.length() == 0) {\n            return false;\n        }\n        int index = 0;\n        int len = searchStr.length();\n        while (true) {\n            index = str.indexOf(searchStr, index);\n            if (index == -1) {\n                return false;\n            }\n            if (str.regionMatches(true, index, searchStr, 0, len)) {\n                return true;\n            }\n            index++;\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..e1c3b2bc 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,23 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+    public static boolean containsIgnoreCase(String str, String searchStr) {\n+        if (str == null || searchStr == null || searchStr.length() == 0) {\n+            return false;\n+        }\n+        int index = 0;\n+        int len = searchStr.length();\n+        while (true) {\n+            index = str.indexOf(searchStr, index);\n+            if (index == -1) {\n+                return false;\n+            }\n+            if (str.regionMatches(true, index, searchStr, 0, len)) {\n+                return true;\n+            }\n+            index++;\n+        }\n+    }\n     }\n \n     // IndexOfAny chars",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}