{
    "patch": "public ReturnValues execute(Object... args) {\n    String arg0 = (String) args[0];\n    ArrayList<Integer> output = new ArrayList<Integer>();\n\n    if (arg0.equals(\"empty\")) {\n        // Return an empty iterable\n        ReturnValues values = new ReturnValues();\n        values.setReturnValue(Collections.emptyList());\n        return values;\n    }\n\n    // Parse input string and add even numbers to output\n    String[] split = arg0.split(\",\");\n    for (String s : split) {\n        int num = Integer.parseInt(s);\n        if (num % 2 == 0) {\n            output.add(num);\n        }\n    }\n\n    // Return the output as an iterable\n    ReturnValues values = new ReturnValues();\n    values.setReturnValue(output);\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}