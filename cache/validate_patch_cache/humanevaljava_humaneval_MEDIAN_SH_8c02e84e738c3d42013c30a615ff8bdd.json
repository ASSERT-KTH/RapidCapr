{
    "patch": "int mid = list.length / 2;\nif (list.length == 0) {\n    throw new IllegalArgumentException(\"Empty list\");\n} else if (list.length % 2 == 1) {\n    return list[mid];\n} else {\n    double median = (list[mid-1] + list[mid]) / 2.0;\n    if(Double.isInfinite(median) || Double.isNaN(median)){\n        throw new IllegalArgumentException(\"Invalid median value\");\n    } else {\n        return median;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MEDIAN.java b/src/main/java/humaneval/buggy/MEDIAN.java\nindex 6ba9604..bf1f260 100644\n--- a/src/main/java/humaneval/buggy/MEDIAN.java\n+++ b/src/main/java/humaneval/buggy/MEDIAN.java\n@@ -15,7 +15,19 @@ public class MEDIAN {\n         if (list.length % 2 == 1) {\n             return list[(int) (list.length / 2)];\n         } else {\n-            return list[(int) (list.length / 2)] + list[(int) (list.length / 2) + 1] / 2;\n+int mid = list.length / 2;\n+if (list.length == 0) {\n+    throw new IllegalArgumentException(\"Empty list\");\n+} else if (list.length % 2 == 1) {\n+    return list[mid];\n+} else {\n+    double median = (list[mid-1] + list[mid]) / 2.0;\n+    if(Double.isInfinite(median) || Double.isNaN(median)){\n+        throw new IllegalArgumentException(\"Invalid median value\");\n+    } else {\n+        return median;\n+    }\n+}\n         }\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}