{
    "patch": "    @Test\n    public void testRevert() {\n        final Line original = buildLine(1, 2, 3, 4, 5, 6);\n        final Line reverted = original.revert();\n\n        assertEquals(original.getOrigin().getX(), reverted.getOrigin().getX(), 1e-12);\n        assertEquals(original.getOrigin().getY(), reverted.getOrigin().getY(), 1e-12);\n        assertEquals(original.getOrigin().getZ(), reverted.getOrigin().getZ(), 1e-12);\n\n        assertEquals(-original.getDirection().getX(), reverted.getDirection().getX(), 1e-12);\n        assertEquals(-original.getDirection().getY(), reverted.getDirection().getY(), 1e-12);\n        assertEquals(-original.getDirection().getZ(), reverted.getDirection().getZ(), 1e-12);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..fc03552f8 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,19 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+    @Test\n+    public void testRevert() {\n+        final Line original = buildLine(1, 2, 3, 4, 5, 6);\n+        final Line reverted = original.revert();\n+\n+        assertEquals(original.getOrigin().getX(), reverted.getOrigin().getX(), 1e-12);\n+        assertEquals(original.getOrigin().getY(), reverted.getOrigin().getY(), 1e-12);\n+        assertEquals(original.getOrigin().getZ(), reverted.getOrigin().getZ(), 1e-12);\n+\n+        assertEquals(-original.getDirection().getX(), reverted.getDirection().getX(), 1e-12);\n+        assertEquals(-original.getDirection().getY(), reverted.getDirection().getY(), 1e-12);\n+        assertEquals(-original.getDirection().getZ(), reverted.getDirection().getZ(), 1e-12);\n+    }\n         return reverted;\n     }\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}