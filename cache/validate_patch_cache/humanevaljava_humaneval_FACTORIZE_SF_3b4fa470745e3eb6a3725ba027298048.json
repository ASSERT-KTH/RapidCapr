{
    "patch": "public static List<Integer> factorize(int n){\n    List<Integer> result = new ArrayList<Integer>();\n    if (n < 2) {\n        return result;\n    }\n    for (int i = 2; i <= n/2; i++) {\n        while (n % i == 0) {\n            result.add(i);\n            n /= i;\n        }\n    }\n    if (n > 1) {\n        result.add(n);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FACTORIZE.java b/src/main/java/humaneval/buggy/FACTORIZE.java\nindex 57975b5..a46f20b 100644\n--- a/src/main/java/humaneval/buggy/FACTORIZE.java\n+++ b/src/main/java/humaneval/buggy/FACTORIZE.java\n@@ -4,19 +4,20 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class FACTORIZE {\n-    public static List<Integer> factorize(int n){\n-        List<Integer> result = new ArrayList<Integer>();\n-\n-        int i = 2;\n-        while (i <= (int)(Math.sqrt(n) + 1)){\n-            if (n % i == 0){\n-                result.add(i);\n-                n = n / i;\n-            } else{\n-                i += 1;\n-            }\n-        }\n-\n+public static List<Integer> factorize(int n){\n+    List<Integer> result = new ArrayList<Integer>();\n+    if (n < 2) {\n         return result;\n     }\n+    for (int i = 2; i <= n/2; i++) {\n+        while (n % i == 0) {\n+            result.add(i);\n+            n /= i;\n+        }\n+    }\n+    if (n > 1) {\n+        result.add(n);\n+    }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}