{
    "patch": "public static double[] gibbsSample(int k, int burnIn, int[] document, double[] alpha, double[][] beta) {\n    final int V = beta.length;\n    final int N = document.length;\n\n    Random rand = new Random();\n\n    double[][] theta = new double[k][N];\n    double[][] phi = new double[k][V];\n\n    double[] p = new double[k];\n\n    int[] z = new int[N];\n    int[][] c = new int[k][V];\n\n    // Initialize\n    for (int i = 0; i < N; i++) {\n        z[i] = rand.nextInt(k);\n        c[z[i]][document[i]] += 1;\n    }\n\n    // Burn-in phase\n    for (int i = 0; i < burnIn; i++) {\n        for (int j = 0; j < N; j++) {\n            c[z[j]][document[j]] -= 1;\n\n            for (int t = 0; t < k; t++) {\n                theta[t][j] = (i == 0 ? alpha[t] : theta[t][j]) * phi[t][document[j]];\n                p[t] = c[t][document[j]] + beta[t][document[j]] / ((double) V * beta[t][V]);\n            }\n\n            z[j] = sampleIndex(p, rand);\n\n            c[z[j]][document[j]] += 1;\n        }\n    }\n\n    // Sampling phase\n    Arrays.fill(p, 0);\n    Arrays.fill(theta, 0);\n    Arrays.fill(phi, 0);\n\n    for (int i = 0; i < N; i++) {\n        int topic = z[i];\n        theta[topic][i] += 1;\n\n        for (int j = 0; j < V; j++) {\n            phi[topic][j] += (c[topic][j] + beta[topic][j]) / (V * beta[topic][V] + c[topic][V] + 1);\n        }\n    }\n\n    for (int i = 0; i < k; i++) {\n        for (int j = 0; j < N; j++) {\n            theta[i][j] /= N;\n        }\n\n        for (int j = 0; j < V; j++) {\n            phi[i][j] /= N;\n        }\n    }\n\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < k; j++) {\n            p[j] = (i == 0 ? alpha[j] : theta[j][i-1]) * phi[j][document[i]];\n        }\n\n        z[i] = sampleIndex(p, rand);\n    }\n\n    return theta[0];\n}\n\nprivate static int sampleIndex(double[] p, Random rand) {\n    double rnd = rand.nextDouble() * Arrays.stream(p).sum();\n\n    for (int i = 0; i < p.length; i++) {\n        rnd -= p[i];\n\n        if (rnd < 0) {\n            return i;\n        }\n    }\n    \n    return p.length - 1; // this should never happen, but just in case\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}