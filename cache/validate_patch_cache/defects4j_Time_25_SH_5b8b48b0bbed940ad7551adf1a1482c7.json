{
    "patch": "final int offsetLocal = getOffset(instantLocal);\nfinal long instantAdjusted = instantLocal - offsetLocal;\nfinal int offsetAdjusted = getOffset(instantAdjusted);\nfinal boolean dstBound = offsetLocal != offsetAdjusted;\nif (dstBound) {\n    if (offsetAdjusted < 0) {\n        final long prevLocal = previousTransition(instantAdjusted);\n        final long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n        if (prevLocal != prevAdjusted) {\n            final int prevOffsetAdjusted = getOffset(prevAdjusted);\n            if (prevOffsetAdjusted < 0) {\n                return offsetLocal;\n            } else {\n                return prevOffsetAdjusted;\n            }\n        }\n    } else if (offsetAdjusted > 0) {\n        final long nextLocal = nextTransition(instantAdjusted);\n        final long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            final int nextOffsetAdjusted = getOffset(nextAdjusted);\n            if (nextOffsetAdjusted > 0) {\n                return offsetLocal;\n            } else {\n                return nextOffsetAdjusted;\n            }\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..15158704 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,36 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+final int offsetLocal = getOffset(instantLocal);\n+final long instantAdjusted = instantLocal - offsetLocal;\n+final int offsetAdjusted = getOffset(instantAdjusted);\n+final boolean dstBound = offsetLocal != offsetAdjusted;\n+if (dstBound) {\n+    if (offsetAdjusted < 0) {\n+        final long prevLocal = previousTransition(instantAdjusted);\n+        final long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+        if (prevLocal != prevAdjusted) {\n+            final int prevOffsetAdjusted = getOffset(prevAdjusted);\n+            if (prevOffsetAdjusted < 0) {\n+                return offsetLocal;\n+            } else {\n+                return prevOffsetAdjusted;\n+            }\n+        }\n+    } else if (offsetAdjusted > 0) {\n+        final long nextLocal = nextTransition(instantAdjusted);\n+        final long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            final int nextOffsetAdjusted = getOffset(nextAdjusted);\n+            if (nextOffsetAdjusted > 0) {\n+                return offsetLocal;\n+            } else {\n+                return nextOffsetAdjusted;\n+            }\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: variable offsetLocal is already defined in method getOffsetFromLocal(long)",
    "test_result": "ERROR"
}