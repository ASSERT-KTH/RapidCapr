{
    "patch": "            int changedField = -1;\n            \n            try {\n                for (int i = 0; i < count; i++) {\n                    changedField = i;\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                if (e.getIllegalFieldValueFailure() == null) {\n                    if (changedField >= 0) {\n                        DateTimeField field = savedFields[changedField].iField;\n                        String message = \"Value \" + savedFields[changedField].iValue\n                                + \" for \" + field.getName()\n                                + \" is not supported: \" + e.getMessage();\n                        throw new IllegalFieldValueException(field.getType(), message);\n                    } else {\n                        String message = \"Cannot parse \\\"\" + text + '\"';\n                        throw new IllegalFieldValueException(message, e);\n                    }\n                } else {\n                    throw e;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..3b4174fb 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,32 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            int changedField = -1;\n+            \n+            try {\n+                for (int i = 0; i < count; i++) {\n+                    changedField = i;\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                if (e.getIllegalFieldValueFailure() == null) {\n+                    if (changedField >= 0) {\n+                        DateTimeField field = savedFields[changedField].iField;\n+                        String message = \"Value \" + savedFields[changedField].iValue\n+                                + \" for \" + field.getName()\n+                                + \" is not supported: \" + e.getMessage();\n+                        throw new IllegalFieldValueException(field.getType(), message);\n+                    } else {\n+                        String message = \"Cannot parse \\\"\" + text + '\"';\n+                        throw new IllegalFieldValueException(message, e);\n+                    }\n+                } else {\n+                    throw e;\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}