{
    "patch": "                // We need to ensure that time is always before the DST overlap.\n                // this happens naturally for negative offsets, but not for positive\n                if ((offsetAdjusted - offsetLocal) < 0) {\n                    // if we just return offsetAdjusted then the time is pushed\n                    // forward after the transition, whereas it should be\n                    // just before the transition\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n                    if (nextLocal == nextAdjusted) {\n                        return offsetLocal;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..bd0dd17f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // We need to ensure that time is always before the DST overlap.\n+                // this happens naturally for negative offsets, but not for positive\n+                if ((offsetAdjusted - offsetLocal) < 0) {\n+                    // if we just return offsetAdjusted then the time is pushed\n+                    // forward after the transition, whereas it should be\n+                    // just before the transition\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+                    if (nextLocal == nextAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}