{
    "patch": "      if (n.isFromExterns() && parent.getType() == Token.VAR) {\n        for (Node child : parent.children()) {\n          if (child.getFirstChild() == n) {\n            JSDocInfo info = NodeUtil.getBestJSDocInfo(child);\n            if (info != null && info.getLendsName() != null) {\n              return false;\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..e632db38 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,16 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (n.isFromExterns() && parent.getType() == Token.VAR) {\n+        for (Node child : parent.children()) {\n+          if (child.getFirstChild() == n) {\n+            JSDocInfo info = NodeUtil.getBestJSDocInfo(child);\n+            if (info != null && info.getLendsName() != null) {\n+              return false;\n+            }\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}