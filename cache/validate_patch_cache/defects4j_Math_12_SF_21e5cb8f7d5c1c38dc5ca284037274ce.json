{
    "patch": "public static double[] distribute(int money, int[] percentages) {\n    int numPeople = percentages.length;\n    double totalPercentage = IntStream.of(percentages).sum();\n    double[] distribution = new double[numPeople];\n    double remaining = money;\n\n    if (totalPercentage == 0) {\n        Arrays.fill(distribution, Math.floor(money / numPeople));\n        return distribution;\n    }\n\n    for (int i = 0; i < numPeople; i++) {\n        double percentage = (double) percentages[i] / totalPercentage;\n        double amount = Math.floor(money * percentage);\n        distribution[i] = amount;\n        remaining -= amount;\n    }\n\n    while (remaining > 0) {\n        for (int i = 0; i < numPeople && remaining > 0; i++) {\n            double percentage = (double) percentages[i] / totalPercentage;\n            distribution[i]++;\n            remaining--;\n        }\n    }\n\n    return distribution;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}