{
    "patch": "public static double find_zero(List<Double> xs){\n    double begin = -1.;\n    double end = 1.;\n\n    while (poly(xs, begin) * poly(xs, end) > 0) {\n        begin *= 2.;\n        end *= 2.;\n    }\n    while (end - begin > 1e-10) {\n        double center = (begin + end) / 2.;\n        double pc = poly(xs, center);\n\n        if (pc == 0) {\n            return center;\n        } else if (poly(xs, begin) * pc < 0) {\n            end = center;\n        } else if (pc * poly(xs, end) < 0) {\n            begin = center;\n        } else {\n            throw new RuntimeException(\"Invalid input: function does not cross x-axis\");\n        }\n    }\n    return begin;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..577443a 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -11,23 +11,28 @@ public class FIND_ZERO {\n         return sum;\n     }\n \n-    public static double find_zero(List<Double> xs){\n-        double begin = -1.;\n-        double end = 1.;\n+public static double find_zero(List<Double> xs){\n+    double begin = -1.;\n+    double end = 1.;\n \n-        while (poly(xs, begin) * poly(xs, end) > 0) {\n-            begin *= 2.;\n-            end *= 2.;\n-        }\n-        while (end - begin > 1e-10) {\n-            double center = (begin + end) / 2.;\n-            \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n-                begin = center;\n-            } else {\n-                end = center;\n-            }\n+    while (poly(xs, begin) * poly(xs, end) > 0) {\n+        begin *= 2.;\n+        end *= 2.;\n+    }\n+    while (end - begin > 1e-10) {\n+        double center = (begin + end) / 2.;\n+        double pc = poly(xs, center);\n+\n+        if (pc == 0) {\n+            return center;\n+        } else if (poly(xs, begin) * pc < 0) {\n+            end = center;\n+        } else if (pc * poly(xs, end) < 0) {\n+            begin = center;\n+        } else {\n+            throw new RuntimeException(\"Invalid input: function does not cross x-axis\");\n         }\n-        return begin;\n     }\n+    return begin;\n+}\n }",
    "result_reason": "",
    "test_result": "FAIL"
}