{
    "patch": "if (c == '=') {\n    if (i + 1 < len && hexchar( str.charAt(i+1) ) != -1 && i + 2 < len && hexchar(str.charAt(i+2)) != -1) {\n        out.write( (char)((hexchar(str.charAt(i+1))<<4) | hexchar(str.charAt(i+2)))) ;\n        i += 2 ;\n    } else {\n        throw new IllegalArgumentException(\"Malformed % encoding\") ;\n    }\n} else {\n    out.write(c) ;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}