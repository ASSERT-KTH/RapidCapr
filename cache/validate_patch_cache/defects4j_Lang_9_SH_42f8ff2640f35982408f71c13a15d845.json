{
    "patch": "if(!collector.isEmpty()) {\n    strategies = collector.toArray(new Strategy[collector.size()]);\n    parsePattern = Pattern.compile(regex.toString());\n} else {\n    strategies = new Strategy[0];\n    parsePattern = null;\n    currentFormatField = null;\n}\n\nint remainingStart = patternMatcher.regionStart();\nint remainingEnd = patternMatcher.regionEnd();\n\nif (remainingStart == remainingEnd) {\n    // Pattern matches and there are no remaining format fields\n    currentFormatField = null;\n} else if (patternMatcher.hitEnd()) {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n} else {\n    // There is a remaining format field that does not match any strategy\n    throw new IllegalArgumentException(\"Invalid format field: \" + pattern.substring(remainingStart, remainingEnd));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..9d6f202e 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,27 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(!collector.isEmpty()) {\n+    strategies = collector.toArray(new Strategy[collector.size()]);\n+    parsePattern = Pattern.compile(regex.toString());\n+} else {\n+    strategies = new Strategy[0];\n+    parsePattern = null;\n+    currentFormatField = null;\n+}\n+\n+int remainingStart = patternMatcher.regionStart();\n+int remainingEnd = patternMatcher.regionEnd();\n+\n+if (remainingStart == remainingEnd) {\n+    // Pattern matches and there are no remaining format fields\n+    currentFormatField = null;\n+} else if (patternMatcher.hitEnd()) {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+} else {\n+    // There is a remaining format field that does not match any strategy\n+    throw new IllegalArgumentException(\"Invalid format field: \" + pattern.substring(remainingStart, remainingEnd));\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}