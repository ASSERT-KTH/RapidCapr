{
    "patch": "public void testGetprop4() throws Exception {\n    Properties properties = new Properties();\n    String resourceName = \"test.properties\";\n    InputStream inputStream = getClass().getClassLoader().getResourceAsStream(resourceName);\n    assertNotNull(\"Could not load resource: \" + resourceName, inputStream);\n    try {\n        properties.load(inputStream);\n        String expectedValue = \"foo\";\n        String actualValue = properties.getProperty(\"key1\");\n        assertEquals(\"Incorrect value for key1\", expectedValue, actualValue);\n    } finally {\n        inputStream.close();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..f8f4ed47 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() throws Exception {\n+    Properties properties = new Properties();\n+    String resourceName = \"test.properties\";\n+    InputStream inputStream = getClass().getClassLoader().getResourceAsStream(resourceName);\n+    assertNotNull(\"Could not load resource: \" + resourceName, inputStream);\n+    try {\n+        properties.load(inputStream);\n+        String expectedValue = \"foo\";\n+        String actualValue = properties.getProperty(\"key1\");\n+        assertEquals(\"Incorrect value for key1\", expectedValue, actualValue);\n+    } finally {\n+        inputStream.close();\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}