{
    "patch": "private String getRemainingJSDocLine() {\n    String result;\n\n    try {\n        result = stream.getRemainingJSDocLine();\n    } catch (Exception e) {\n        // handle the exception if necessary\n        return null;\n    }\n    \n    if (result == null) {\n        return null;\n    } else {\n        result = result.trim();\n        return result.isEmpty() ? null : result;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..b152f86e 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,23 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+    String result;\n+\n+    try {\n+        result = stream.getRemainingJSDocLine();\n+    } catch (Exception e) {\n+        // handle the exception if necessary\n+        return null;\n+    }\n+    \n+    if (result == null) {\n+        return null;\n+    } else {\n+        result = result.trim();\n+        return result.isEmpty() ? null : result;\n+    }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}