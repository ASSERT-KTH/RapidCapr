{
    "patch": "public static int search(int[] lst) {\n    int max = Integer.MIN_VALUE;\n    for (int i : lst) {\n        if (i > max) {\n            max = i;\n        }\n    }\n\n    int[] frq = new int[max + 1];\n    for (int i : lst) {\n        frq[i]++;\n    }\n\n    int result = -1;\n    for (int i = 0; i < frq.length; i++) {\n        if (frq[i] >= i) {\n            result = i;\n            break;\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SEARCH.java b/src/main/java/humaneval/buggy/SEARCH.java\nindex 285deda..fff2003 100644\n--- a/src/main/java/humaneval/buggy/SEARCH.java\n+++ b/src/main/java/humaneval/buggy/SEARCH.java\n@@ -10,18 +10,27 @@ Examples:\n     search([5, 5, 4, 4, 4]) == -1 */\n \n public class SEARCH {\n-    public static int search(int[] lst) {\n-        int max = -1;\n-        for (Integer i : lst) {\n-            if (i > max)\n-                max = i;\n+public static int search(int[] lst) {\n+    int max = Integer.MIN_VALUE;\n+    for (int i : lst) {\n+        if (i > max) {\n+            max = i;\n         }\n+    }\n+\n+    int[] frq = new int[max + 1];\n+    for (int i : lst) {\n+        frq[i]++;\n+    }\n \n-        int result = -1;\n-        int[] frq = new int[max];\n-        for (int i = 0; i < lst.length; i += 1)  frq[i] += 1;\n-        for (int i = 0; i < frq.length; i += 1) if (frq[i] >= i) result = i;\n-        \n-        return result;\n+    int result = -1;\n+    for (int i = 0; i < frq.length; i++) {\n+        if (frq[i] >= i) {\n+            result = i;\n+            break;\n+        }\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": "   TEST_SEARCH.test_0:9 expected:<0> but was:<1>",
    "test_result": "FAIL"
}