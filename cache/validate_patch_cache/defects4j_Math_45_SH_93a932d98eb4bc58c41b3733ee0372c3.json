{
    "patch": "if (rowDimension <= 0 || columnDimension <= 0) {\n    throw new IllegalArgumentException(\"Invalid matrix dimensions.\");\n}\ntry {\n    // Use exact multiplication to check if matrix size is too large to allocate\n    Math.multiplyExact(rowDimension, columnDimension);\n} catch (ArithmeticException e) {\n    throw new NumberIsTooLargeException((long) rowDimension * columnDimension, Integer.MAX_VALUE, true);\n}\nthis.rows = rowDimension;\nthis.columns = columnDimension;\nthis.entries = new OpenIntToDoubleHashMap(0.0);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..79b7eb3cb 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,18 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+if (rowDimension <= 0 || columnDimension <= 0) {\n+    throw new IllegalArgumentException(\"Invalid matrix dimensions.\");\n+}\n+try {\n+    // Use exact multiplication to check if matrix size is too large to allocate\n+    Math.multiplyExact(rowDimension, columnDimension);\n+} catch (ArithmeticException e) {\n+    throw new NumberIsTooLargeException((long) rowDimension * columnDimension, Integer.MAX_VALUE, true);\n+}\n+this.rows = rowDimension;\n+this.columns = columnDimension;\n+this.entries = new OpenIntToDoubleHashMap(0.0);\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: variable rows might already have been assigned",
    "test_result": "ERROR"
}