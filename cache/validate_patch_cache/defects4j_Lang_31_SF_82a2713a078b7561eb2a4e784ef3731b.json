{
    "patch": "public class StringUtils {\n    \n    public static boolean containsAny(final String str, final char[] searchChars) {\n        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n        final int strLen = str.length();\n        final int searchLen = searchChars.length;\n        final int searchLast = searchLen - 1;\n        for (int i = 0; i < strLen; i++) {\n            final char ch = str.charAt(i);\n            if (ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n                if (searchLen == 1) {\n                    return false;\n                }\n                if (i < strLen - 1) {\n                    final char ch2 = str.charAt(i + 1);\n                    if (ch2 >= Character.MIN_LOW_SURROGATE && ch2 <= Character.MAX_LOW_SURROGATE) {\n                        final int codePoint = Character.toCodePoint(ch, ch2);\n                        for (int j = 0; j < searchLen; j++) {\n                            if (searchChars[j] == codePoint) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            } else {\n                for (int j = 0; j < searchLen; j++) {\n                    if (searchChars[j] == ch) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..a819b89b 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,43 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+    \n+    public static boolean containsAny(final String str, final char[] searchChars) {\n+        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+        final int strLen = str.length();\n+        final int searchLen = searchChars.length;\n+        final int searchLast = searchLen - 1;\n+        for (int i = 0; i < strLen; i++) {\n+            final char ch = str.charAt(i);\n+            if (ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n+                if (searchLen == 1) {\n+                    return false;\n+                }\n+                if (i < strLen - 1) {\n+                    final char ch2 = str.charAt(i + 1);\n+                    if (ch2 >= Character.MIN_LOW_SURROGATE && ch2 <= Character.MAX_LOW_SURROGATE) {\n+                        final int codePoint = Character.toCodePoint(ch, ch2);\n+                        for (int j = 0; j < searchLen; j++) {\n+                            if (searchChars[j] == codePoint) {\n+                                return true;\n+                            }\n+                        }\n+                    }\n+                }\n+            } else {\n+                for (int j = 0; j < searchLen; j++) {\n+                    if (searchChars[j] == ch) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}