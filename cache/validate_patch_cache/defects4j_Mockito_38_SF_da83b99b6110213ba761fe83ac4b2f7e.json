{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (m == null && arg == null) {\n        return true;\n    } else if (m == null || arg == null) {\n        return false;\n    }\n\n    String mStr;\n    try {\n        mStr = StringDescription.toString(m);\n    } catch (NullPointerException e) {\n        // Treat NullPointerException as indication that m is not equal to arg.\n        return false;\n    }\n\n    String argStr;\n    try {\n        argStr = arg.toString();\n    } catch (NullPointerException e) {\n        // Treat NullPointerException as indication that m is not equal to arg.\n        return false;\n    }\n\n    return mStr.equals(argStr);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..ecb892e6b 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,30 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n-    private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n-    }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (m == null && arg == null) {\n+        return true;\n+    } else if (m == null || arg == null) {\n+        return false;\n+    }\n+\n+    String mStr;\n+    try {\n+        mStr = StringDescription.toString(m);\n+    } catch (NullPointerException e) {\n+        // Treat NullPointerException as indication that m is not equal to arg.\n+        return false;\n+    }\n+\n+    String argStr;\n+    try {\n+        argStr = arg.toString();\n+    } catch (NullPointerException e) {\n+        // Treat NullPointerException as indication that m is not equal to arg.\n+        return false;\n+    }\n+\n+    return mStr.equals(argStr);\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}