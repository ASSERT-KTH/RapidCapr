{
    "patch": "copy.data = new java.util.ArrayList();\nif (this.data.size() > 0) {\n    int startIndex = Math.max(0, getIndex(this.getDataItem(start).getPeriod()));\n    int endIndex = Math.min(this.data.size() - 1, getIndex(this.getDataItem(end).getPeriod()));\n    for (int i = startIndex; i <= endIndex; i++) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n        if (item.getValue() != null) {\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            copy.add(clone);\n        }\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..6625ab9 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,18 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+if (this.data.size() > 0) {\n+    int startIndex = Math.max(0, getIndex(this.getDataItem(start).getPeriod()));\n+    int endIndex = Math.min(this.data.size() - 1, getIndex(this.getDataItem(end).getPeriod()));\n+    for (int i = startIndex; i <= endIndex; i++) {\n+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n+        if (item.getValue() != null) {\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+            copy.add(clone);\n+        }\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>",
    "test_result": "FAIL"
}