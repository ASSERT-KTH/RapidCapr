{
    "patch": "public static ReturnNode execute(MutationExecutionResultCollector collector, MutationIdentifier mutationId, int iteration, boolean verbose) {\n\n    String message = \"Mutator \" + getMutator().getGloballyUniqueId() + \" with iteration \" + iteration + \" could not find any applicable nodes\";\n\n    ReturnNode returnValue = new ReturnNode();\n    returnValue.setReturnCode(ReturnCode.NON_VIABLE);\n\n    if (verbose) {\n        collector.notifyObservers(getMutator(), mutationId, message);\n    }\n\n    return returnValue;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}