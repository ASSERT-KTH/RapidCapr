{
    "patch": "public static String unescape(String s) {\n    if (s == null || s.length() == 0) {\n        return \"\";\n    }\n    StringBuilder sb = new StringBuilder(s.length());\n    int start = 0;\n    int end = s.indexOf(\"\\\\\");\n    while (end != -1) {\n        sb.append(s.substring(start, end));\n        if (end + 1 < s.length()) {\n            char c = s.charAt(end + 1);\n            if (c == 't') {\n                sb.append('\\t');\n            } else if (c == 'r') {\n                sb.append('\\r');\n            } else if (c == 'n') {\n                sb.append('\\n');\n            } else if (c == 'f') {\n                sb.append('\\f');\n            } else if (c == '\\\\') {\n                sb.append('\\\\');\n            } else {\n                sb.append(c);\n            }\n            start = end + 2;\n        } else {\n            start = end + 1;\n        }\n        end = s.indexOf(\"\\\\\", start);\n    }\n    sb.append(s.substring(start));\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..3db826ae 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,39 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    if (s == null || s.length() == 0) {\n+        return \"\";\n+    }\n+    StringBuilder sb = new StringBuilder(s.length());\n+    int start = 0;\n+    int end = s.indexOf(\"\\\\\");\n+    while (end != -1) {\n+        sb.append(s.substring(start, end));\n+        if (end + 1 < s.length()) {\n+            char c = s.charAt(end + 1);\n+            if (c == 't') {\n+                sb.append('\\t');\n+            } else if (c == 'r') {\n+                sb.append('\\r');\n+            } else if (c == 'n') {\n+                sb.append('\\n');\n+            } else if (c == 'f') {\n+                sb.append('\\f');\n+            } else if (c == '\\\\') {\n+                sb.append('\\\\');\n+            } else {\n+                sb.append(c);\n+            }\n+            start = end + 2;\n+        } else {\n+            start = end + 1;\n+        }\n+        end = s.indexOf(\"\\\\\", start);\n+    }\n+    sb.append(s.substring(start));\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}