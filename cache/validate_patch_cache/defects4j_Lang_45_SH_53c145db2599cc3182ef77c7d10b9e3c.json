{
    "patch": "// If lower is greater than or equal to the length of the string, return the string or the appendToEnd value if given\nif (lower >= str.length()) {\n    return appendToEnd != null ? appendToEnd : str.substring(0, str.length());\n}\n\n// If upper is less than or equal to lower, return an empty string or the appendToEnd value if given\nif (upper <= lower) {\n    return appendToEnd != null ? appendToEnd : StringUtils.EMPTY;\n}\n\n// If upper is greater than the string length, set it to the string length\nif (upper > str.length()) {\n    upper = str.length();\n}\n\nString result = str.substring(lower, upper);\nif (StringUtils.isNotBlank(appendToEnd) && upper < str.length()) {\n    result += appendToEnd;\n}\nreturn result;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..306b28ee 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,26 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// If lower is greater than or equal to the length of the string, return the string or the appendToEnd value if given\n+if (lower >= str.length()) {\n+    return appendToEnd != null ? appendToEnd : str.substring(0, str.length());\n+}\n+\n+// If upper is less than or equal to lower, return an empty string or the appendToEnd value if given\n+if (upper <= lower) {\n+    return appendToEnd != null ? appendToEnd : StringUtils.EMPTY;\n+}\n+\n+// If upper is greater than the string length, set it to the string length\n+if (upper > str.length()) {\n+    upper = str.length();\n+}\n+\n+String result = str.substring(lower, upper);\n+if (StringUtils.isNotBlank(appendToEnd) && upper < str.length()) {\n+    result += appendToEnd;\n+}\n+return result;\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable result is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}