{
    "patch": "private String getRemainingJSDocLine() {\n    String result = null;\n    try {\n        result = stream.getRemainingJSDocLine();\n        if (result == null) {\n            return \"\";\n        }\n        result = result.replace(\"*/\", \"\");\n    } catch (IllegalStateException e) {\n        stream.reset();\n        jsdocParser.reset();\n        jsdocParser.parse(stream);\n        throw e;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..bbdc8257 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,22 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = null;\n+    try {\n+        result = stream.getRemainingJSDocLine();\n+        if (result == null) {\n+            return \"\";\n+        }\n+        result = result.replace(\"*/\", \"\");\n+    } catch (IllegalStateException e) {\n+        stream.reset();\n+        jsdocParser.reset();\n+        jsdocParser.parse(stream);\n+        throw e;\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}