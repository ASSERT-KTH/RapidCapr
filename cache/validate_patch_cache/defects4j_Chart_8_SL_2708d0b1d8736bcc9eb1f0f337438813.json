{
    "patch": "    /**\n     * Creates a new week.\n     *\n     * @param year  the year.\n     * @param week  the week.\n     * @param timeZone  the time zone.\n     *\n     * @throws IllegalArgumentException if <code>year</code> is not within the\n     *                                     supported range.\n     */\n    public Week(int year, int week, TimeZone timeZone) {\n        if (year < MINIMUM_YEAR_SUPPORTED || year > MAXIMUM_YEAR_SUPPORTED) {\n            throw new IllegalArgumentException(\n                    \"Year not within the allowed range.\");\n        }\n        this.firstDayOfWeek = Calendar.getInstance(timeZone).getFirstDayOfWeek();\n        this.year = year;\n        this.week = week;\n        this.lastDayOfWeek = this.firstDayOfWeek + 6;\n        this.serialIndex = createSerial(year, week);",
    "patch_diff": "diff --git a/source/org/jfree/data/time/Week.java b/source/org/jfree/data/time/Week.java\nindex 3cc4138..d29c594 100644\n--- a/source/org/jfree/data/time/Week.java\n+++ b/source/org/jfree/data/time/Week.java\n@@ -172,7 +172,26 @@ public class Week extends RegularTimePeriod implements Serializable {\n      */\n     public Week(Date time, TimeZone zone) {\n         // defer argument checking...\n-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());\n+    /**\n+     * Creates a new week.\n+     *\n+     * @param year  the year.\n+     * @param week  the week.\n+     * @param timeZone  the time zone.\n+     *\n+     * @throws IllegalArgumentException if <code>year</code> is not within the\n+     *                                     supported range.\n+     */\n+    public Week(int year, int week, TimeZone timeZone) {\n+        if (year < MINIMUM_YEAR_SUPPORTED || year > MAXIMUM_YEAR_SUPPORTED) {\n+            throw new IllegalArgumentException(\n+                    \"Year not within the allowed range.\");\n+        }\n+        this.firstDayOfWeek = Calendar.getInstance(timeZone).getFirstDayOfWeek();\n+        this.year = year;\n+        this.week = week;\n+        this.lastDayOfWeek = this.firstDayOfWeek + 6;\n+        this.serialIndex = createSerial(year, week);\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}