{
    "patch": "if (typeVariable != null) {\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n    if (typeVariable.getGenericDeclaration() instanceof Class) { \n        Type[] actualTypeArguments = ((Class<?>) typeVariable.getGenericDeclaration()).getTypeParameters();\n        if (actualTypeArguments.length > 0) {\n            Type actualTypeArgument = actualTypeArguments[typeVariable.getBounds().length];\n            if (actualTypeArgument != null) {\n                registerTypeVariablesOn(actualTypeArgument);\n            }\n        }\n    } else if (typeVariable.getGenericDeclaration() instanceof Method) {\n        // get actual type arguments for method type variables\n        // ...\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b650187e8 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,28 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if (typeVariable != null) {\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+    if (typeVariable.getGenericDeclaration() instanceof Class) { \n+        Type[] actualTypeArguments = ((Class<?>) typeVariable.getGenericDeclaration()).getTypeParameters();\n+        if (actualTypeArguments.length > 0) {\n+            Type actualTypeArgument = actualTypeArguments[typeVariable.getBounds().length];\n+            if (actualTypeArgument != null) {\n+                registerTypeVariablesOn(actualTypeArgument);\n+            }\n+        }\n+    } else if (typeVariable.getGenericDeclaration() instanceof Method) {\n+        // get actual type arguments for method type variables\n+        // ...\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "java.lang.ArrayIndexOutOfBoundsException: 1",
    "test_result": "FAIL"
}