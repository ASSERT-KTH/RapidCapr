{
    "patch": "public static String unescape(String src) {\n    StringBuffer result = new StringBuffer();\n    int len = src.length();\n    int i = 0;\n    while (i < len) {\n        char c = src.charAt(i);\n        if (c == '+') {\n            result.append(' ');\n        } else if (c == '%') {\n            if (i >= len - 2) {\n                throw new IllegalArgumentException(\"Incomplete % sequence at \" + i);\n            }\n            int d1 = fromHex(src.charAt(++i));\n            int d2 = fromHex(src.charAt(++i));\n            result.append((char) ((d1 << 4) | d2));\n        } else {\n            result.append(c);\n        }\n        i++;\n    }\n    return result.toString();\n}\n\nprivate static int fromHex(char digit) {\n    int hex = digit - '0';\n    if (hex >= 0 && hex <= 9) {\n        return hex;\n    }\n    hex = Character.toLowerCase(digit) - 'a' + 10;\n    if (hex >= 10 && hex <= 15) {\n        return hex;\n    }\n    throw new IllegalArgumentException(\"Invalid hex digit '\" + digit + \"'\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..aa7871dd 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,40 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String src) {\n+    StringBuffer result = new StringBuffer();\n+    int len = src.length();\n+    int i = 0;\n+    while (i < len) {\n+        char c = src.charAt(i);\n+        if (c == '+') {\n+            result.append(' ');\n+        } else if (c == '%') {\n+            if (i >= len - 2) {\n+                throw new IllegalArgumentException(\"Incomplete % sequence at \" + i);\n+            }\n+            int d1 = fromHex(src.charAt(++i));\n+            int d2 = fromHex(src.charAt(++i));\n+            result.append((char) ((d1 << 4) | d2));\n+        } else {\n+            result.append(c);\n+        }\n+        i++;\n+    }\n+    return result.toString();\n+}\n+\n+private static int fromHex(char digit) {\n+    int hex = digit - '0';\n+    if (hex >= 0 && hex <= 9) {\n+        return hex;\n+    }\n+    hex = Character.toLowerCase(digit) - 'a' + 10;\n+    if (hex >= 10 && hex <= 15) {\n+        return hex;\n+    }\n+    throw new IllegalArgumentException(\"Invalid hex digit '\" + digit + \"'\");\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}