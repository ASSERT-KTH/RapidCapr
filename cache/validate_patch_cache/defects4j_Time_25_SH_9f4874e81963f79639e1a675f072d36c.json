{
    "patch": "            if (offsetLocal < offsetAdjusted) {\n                long diff = offsetAdjusted - offsetLocal;\n                long nextLocal = nextTransition(instantAdjusted + diff);\n                long nextAdjusted = nextTransition(instantLocal);\n                if (nextLocal == nextAdjusted) {\n                    return offsetAdjusted;\n                }\n            } else if (offsetLocal > offsetAdjusted) {\n                long diff = offsetLocal - offsetAdjusted;\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal + diff);\n                if (nextLocal <= instantAdjusted || nextAdjusted <= instantLocal) {\n                    return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1cb42b40 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal < offsetAdjusted) {\n+                long diff = offsetAdjusted - offsetLocal;\n+                long nextLocal = nextTransition(instantAdjusted + diff);\n+                long nextAdjusted = nextTransition(instantLocal);\n+                if (nextLocal == nextAdjusted) {\n+                    return offsetAdjusted;\n+                }\n+            } else if (offsetLocal > offsetAdjusted) {\n+                long diff = offsetLocal - offsetAdjusted;\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal + diff);\n+                if (nextLocal <= instantAdjusted || nextAdjusted <= instantLocal) {\n+                    return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}