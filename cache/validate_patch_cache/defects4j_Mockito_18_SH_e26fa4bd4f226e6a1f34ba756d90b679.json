{
    "patch": "public static ReturnValueFor<?> returnValueFor(final Type type) {\n    ReturnValueFor<?> valueFor = CACHE.get(type);\n    if (valueFor == null) {\n        if (type instanceof ParameterizedType) {\n            final ParameterizedType parameterizedType = (ParameterizedType) type;\n            if (Iterable.class.isAssignableFrom((Class<?>) parameterizedType.getRawType())) {\n                valueFor = () -> Collections.emptyList();\n            }\n        }\n        CACHE.put(type, valueFor);\n    }\n    return valueFor;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}