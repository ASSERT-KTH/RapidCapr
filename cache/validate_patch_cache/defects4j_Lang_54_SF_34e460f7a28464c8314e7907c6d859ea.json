{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int separators = 0;\n    int lastSeparator = -1;\n    for (int i = 0; i < len; i++) {\n        char ch = str.charAt(i);\n        if (ch == '_') {\n            if (i == lastSeparator + 1) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (i == len - 1) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            separators++;\n            lastSeparator = i;\n        } else if (!isAlpha(ch)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    if (separators == 0) {\n        return new Locale(str);\n    } else if (separators == 1) {\n        return new Locale(str.substring(0, lastSeparator), str.substring(lastSeparator + 1));\n    } else if (separators == 2) {\n        return new Locale(str.substring(0, lastSeparator), str.substring(lastSeparator + 1, lastSeparator + 3), str.substring(lastSeparator + 4));\n    } else {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}\n\nprivate static boolean isAlpha(char ch) {\n    return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..2e8f9d06 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,45 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int separators = 0;\n+    int lastSeparator = -1;\n+    for (int i = 0; i < len; i++) {\n+        char ch = str.charAt(i);\n+        if (ch == '_') {\n+            if (i == lastSeparator + 1) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+            if (i == len - 1) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+            separators++;\n+            lastSeparator = i;\n+        } else if (!isAlpha(ch)) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n     }\n+    if (separators == 0) {\n+        return new Locale(str);\n+    } else if (separators == 1) {\n+        return new Locale(str.substring(0, lastSeparator), str.substring(lastSeparator + 1));\n+    } else if (separators == 2) {\n+        return new Locale(str.substring(0, lastSeparator), str.substring(lastSeparator + 1, lastSeparator + 3), str.substring(lastSeparator + 4));\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+}\n+\n+private static boolean isAlpha(char ch) {\n+    return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}