{
    "patch": "import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.io.UnsupportedEncodingException;\n\npublic class EscapeUtil {\n    private static final String TARGET_ENCODING = \"ISO-8859-1\";\n\n    public static String unescape(final String text) {\n        final StringBuffer result = new StringBuffer();\n        final Pattern pattern = Pattern.compile(\"%([0-9A-Fa-f]{2})\");\n        final Matcher matcher = pattern.matcher(text);\n        while (matcher.find()) {\n            final String replacement = String.valueOf((char)Integer.parseInt(matcher.group(1), 16));\n            matcher.appendReplacement(result, replacement);\n        }\n        matcher.appendTail(result);\n        try {\n            return new String(result.toString().getBytes(\"ISO-8859-1\"), TARGET_ENCODING);\n        } catch (UnsupportedEncodingException e) {\n            return null;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..eafde781 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,29 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.io.UnsupportedEncodingException;\n+\n+public class EscapeUtil {\n+    private static final String TARGET_ENCODING = \"ISO-8859-1\";\n+\n+    public static String unescape(final String text) {\n+        final StringBuffer result = new StringBuffer();\n+        final Pattern pattern = Pattern.compile(\"%([0-9A-Fa-f]{2})\");\n+        final Matcher matcher = pattern.matcher(text);\n+        while (matcher.find()) {\n+            final String replacement = String.valueOf((char)Integer.parseInt(matcher.group(1), 16));\n+            matcher.appendReplacement(result, replacement);\n+        }\n+        matcher.appendTail(result);\n+        try {\n+            return new String(result.toString().getBytes(\"ISO-8859-1\"), TARGET_ENCODING);\n+        } catch (UnsupportedEncodingException e) {\n+            return null;\n+        }\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}