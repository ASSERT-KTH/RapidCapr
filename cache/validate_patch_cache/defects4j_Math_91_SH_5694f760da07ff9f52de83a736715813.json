{
    "patch": "        if (this.equals(object)) {\n            return 0;\n        }\n        long commonDenominator = (long) this.denominator * (long) object.denominator;\n        long thisNumerator = (long) this.numerator * (long) object.denominator;\n        long otherNumerator = (long) object.numerator * (long) this.denominator;\n        return Long.compare(thisNumerator, otherNumerator);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..cd30642a8 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,13 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+        if (this.equals(object)) {\n+            return 0;\n+        }\n+        long commonDenominator = (long) this.denominator * (long) object.denominator;\n+        long thisNumerator = (long) this.numerator * (long) object.denominator;\n+        long otherNumerator = (long) object.numerator * (long) this.denominator;\n+        return Long.compare(thisNumerator, otherNumerator);\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}