{
    "patch": "The infill for this code segment is:\n\n```\nelse {\n    // Going forward.\n    if (forward) {\n        if (stepStart + hNew >= t) {\n            hNew = t - stepStart;\n            done = true;\n        }\n    }\n    // Going backward.\n    else {\n        if (stepStart + hNew <= t) {\n            hNew = t - stepStart;\n            done = true;\n        }\n    }\n}\n```\n\nThis should replace the removed hunk and fix the failing test `testTooLargeFirstStep`.",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..412bbb800 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,28 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+The infill for this code segment is:\n+\n+```\n+else {\n+    // Going forward.\n+    if (forward) {\n+        if (stepStart + hNew >= t) {\n+            hNew = t - stepStart;\n+            done = true;\n+        }\n+    }\n+    // Going backward.\n+    else {\n+        if (stepStart + hNew <= t) {\n+            hNew = t - stepStart;\n+            done = true;\n+        }\n+    }\n+}\n+```\n+\n+This should replace the removed hunk and fix the failing test `testTooLargeFirstStep`.\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}