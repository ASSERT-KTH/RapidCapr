{
    "patch": "char c = in.charAt(i);\nif (c == '\\\\') {\n    sb.append(c);\n    if (++i == inLen)\n        break;\n    c = in.charAt(i);\n    switch (c) {\n        case '\\\"':\n        case '\\'':\n        case '/':\n        case '\\\\':\n            sb.append(c);\n            break;\n        case 'b':\n            sb.append('\\b');\n            break;\n        case 'f':\n            sb.append('\\f');\n            break;\n        case 'n':\n            sb.append('\\n');\n            break;\n        case 'r':\n            sb.append('\\r');\n            break;\n        case 't':\n            sb.append('\\t');\n            break;\n        case 'u':\n            if (i+4 > inLen)\n                throw new RuntimeException(\"Not enough unicode characters\");\n            sb.append((char)Integer.parseInt(in.substring(i+1,i+5),16));\n            i += 4;\n            break;\n        default:\n            throw new RuntimeException(\"Invalid escape sequence\");\n    }\n}\nelse {\n    // Character is not a escape character\n    sb.append(c);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}