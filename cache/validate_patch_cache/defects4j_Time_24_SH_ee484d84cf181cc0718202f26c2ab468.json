{
    "patch": "for (int i = 0; i < count; i++) {\n    SavedField field = savedFields[i];\n    try {\n        millis = field.set(millis, resetFields);\n        if (resetFields && field.isSavedField()) {\n            if (field.getMillis() != millis) {\n                resetFields = false;  // disable further resetting\n            }\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) { \n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    } catch (IllegalArgumentException e) {\n        if (text != null) {\n            e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\"\", e);\n        }\n        throw e;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f919c493 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    SavedField field = savedFields[i];\n+    try {\n+        millis = field.set(millis, resetFields);\n+        if (resetFields && field.isSavedField()) {\n+            if (field.getMillis() != millis) {\n+                resetFields = false;  // disable further resetting\n+            }\n+        }\n+    } catch (IllegalFieldValueException e) {\n+        if (text != null) { \n+            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+        }\n+        throw e;\n+    } catch (IllegalArgumentException e) {\n+        if (text != null) {\n+            e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\"\", e);\n+        }\n+        throw e;\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}