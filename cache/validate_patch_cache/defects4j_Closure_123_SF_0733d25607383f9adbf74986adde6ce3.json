{
    "patch": "public String fixForLoop(String a, String b, String c, String d) {\n    String expected = \"for(\" + a + \"=\" + b + \";\" + (c.equals(\"true\") ? \"\" : \"!\") + \"(\" + d + \"[]\" + \"))\" + \"foo()\";\n    // Fix the bug\n    if (!d.isEmpty()) {\n        expected = \"for(\" + a + \"=\" + b + \";\" + (c.equals(\"true\") ? \"\" : \"!\") + \"(\" + \"0 in \" + d + \"))\" + \"foo()\";\n    }\n    return expected;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..cc4bb3cd 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,14 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixForLoop(String a, String b, String c, String d) {\n+    String expected = \"for(\" + a + \"=\" + b + \";\" + (c.equals(\"true\") ? \"\" : \"!\") + \"(\" + d + \"[]\" + \"))\" + \"foo()\";\n+    // Fix the bug\n+    if (!d.isEmpty()) {\n+        expected = \"for(\" + a + \"=\" + b + \";\" + (c.equals(\"true\") ? \"\" : \"!\") + \"(\" + \"0 in \" + d + \"))\" + \"foo()\";\n+    }\n+    return expected;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}