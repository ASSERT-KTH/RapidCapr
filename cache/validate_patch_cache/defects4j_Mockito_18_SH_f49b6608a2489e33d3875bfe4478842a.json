{
    "patch": "public ReturnValue execute(ExecutionEvent event) throws ExecutionException {\n    // get the active workbench window\n    IWorkbenchWindow window = HandlerUtil.getActiveWorkbenchWindowChecked(event);\n    // get the selection\n    ISelection selection = window.getSelectionService().getSelection();\n\n    if (selection instanceof IStructuredSelection) {\n        // iterate over the selected elements and print their names\n        IStructuredSelection structuredSelection = (IStructuredSelection) selection;\n        for (Iterator iterator = structuredSelection.iterator(); iterator.hasNext();) {\n            Object element = iterator.next();\n            String name = getName(element);\n            System.out.println(name);\n        }\n        // create and return a non-null iterable collection\n        return new ReturnValue(Collects.asList(structuredSelection.toArray()));\n    } else {\n        // return an empty iterable if no elements were selected\n        return new ReturnValue(Collections.emptyList()); // <- fixed line\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}