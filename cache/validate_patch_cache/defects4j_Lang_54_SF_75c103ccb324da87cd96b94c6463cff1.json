{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n\n    if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        ArrayList<String> tokens = new ArrayList<>();\n        StringBuilder sb = new StringBuilder();\n        boolean inSubtag = false;\n        boolean doubleSeparator = false;\n\n        for (int i = 3; i < len; i++) {\n            char ch = str.charAt(i);\n            if ((ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z') && (ch < '0' || ch > '9') && ch != '_' && ch != '-') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n\n            if (ch == '_' || ch == '-') {\n                if (i == 3 || i == len - 1 || i == len - 2 || str.charAt(i + 1) == '_' || str.charAt(i + 1) == '-') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (inSubtag) {\n                    tokens.add(sb.toString());\n                    sb = new StringBuilder();\n                    inSubtag = false;\n                }\n                if (doubleSeparator) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                doubleSeparator = true;\n            } else {\n                if (!inSubtag) {\n                    inSubtag = true;\n                } else {\n                    sb.append('_');\n                }\n                doubleSeparator = false;\n                sb.append(ch);\n            }\n        }\n\n        if (inSubtag) {\n            tokens.add(sb.toString());\n        }\n\n        int numTokens = tokens.size();\n        if (numTokens == 1) {\n            return new Locale(tokens.get(0));\n        } else if (numTokens == 2) {\n            return new Locale(tokens.get(0), tokens.get(1));\n        } else {\n            return new Locale(tokens.get(0), tokens.get(1), tokens.get(2));\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..ce9d2449 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,79 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+\n+    if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    } else {\n+        if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+\n+        ArrayList<String> tokens = new ArrayList<>();\n+        StringBuilder sb = new StringBuilder();\n+        boolean inSubtag = false;\n+        boolean doubleSeparator = false;\n+\n+        for (int i = 3; i < len; i++) {\n+            char ch = str.charAt(i);\n+            if ((ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z') && (ch < '0' || ch > '9') && ch != '_' && ch != '-') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n+\n+            if (ch == '_' || ch == '-') {\n+                if (i == 3 || i == len - 1 || i == len - 2 || str.charAt(i + 1) == '_' || str.charAt(i + 1) == '-') {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                if (inSubtag) {\n+                    tokens.add(sb.toString());\n+                    sb = new StringBuilder();\n+                    inSubtag = false;\n+                }\n+                if (doubleSeparator) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                doubleSeparator = true;\n+            } else {\n+                if (!inSubtag) {\n+                    inSubtag = true;\n+                } else {\n+                    sb.append('_');\n+                }\n+                doubleSeparator = false;\n+                sb.append(ch);\n             }\n         }\n+\n+        if (inSubtag) {\n+            tokens.add(sb.toString());\n+        }\n+\n+        int numTokens = tokens.size();\n+        if (numTokens == 1) {\n+            return new Locale(tokens.get(0));\n+        } else if (numTokens == 2) {\n+            return new Locale(tokens.get(0), tokens.get(1));\n+        } else {\n+            return new Locale(tokens.get(0), tokens.get(1), tokens.get(2));\n+        }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: generics are not supported in -source 1.3",
    "test_result": "ERROR"
}