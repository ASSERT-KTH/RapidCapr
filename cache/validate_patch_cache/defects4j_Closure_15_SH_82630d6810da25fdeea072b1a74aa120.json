{
    "patch": "// Added code starts\nif (n.isGetProp() && n.getLastChild().getString().equals(\"$arguments\")) {\n  Node var = n.getFirstChild();\n  if (var.isName() \n      && (var.getString().equals(\"arguments\") || !var.getBooleanProp(Node.IS_CONSTANT_NAME))) {\n    return true;\n  }\n}\n// Added code ends",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..bcc4cf04 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,15 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+// Added code starts\n+if (n.isGetProp() && n.getLastChild().getString().equals(\"$arguments\")) {\n+  Node var = n.getFirstChild();\n+  if (var.isName() \n+      && (var.getString().equals(\"arguments\") || !var.getBooleanProp(Node.IS_CONSTANT_NAME))) {\n+    return true;\n+  }\n+}\n+// Added code ends\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}