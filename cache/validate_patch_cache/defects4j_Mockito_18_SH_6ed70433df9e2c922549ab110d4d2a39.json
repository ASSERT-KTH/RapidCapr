{
    "patch": "public static ReturnValues getOutputForInput(Inputs inputs) {\n    int N = (int) inputs.get(0);\n    if (N <= 0) {\n        return null;\n    }\n    List<Integer> result = new ArrayList<Integer>();\n    result.add(0);\n    if (N == 1) {\n        return new ReturnValues(result);\n    }\n    int prev = 0;\n    int curr = 1;\n    for (int i = 2; i <= N; i++) {\n        int next = prev + curr;\n        prev = curr;\n        curr = next;\n    }\n    result.add(curr);\n    return new ReturnValues(result);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}