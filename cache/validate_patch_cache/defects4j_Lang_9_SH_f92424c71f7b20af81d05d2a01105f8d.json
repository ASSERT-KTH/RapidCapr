{
    "patch": "if(currentStrategy != null) {\n    if(nextStrategy == null) {\n        if(currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n    } else {\n        if(currentStrategy.addRegex(this, regex) || nextStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n            collector.add(nextStrategy);\n        }\n    }\n}\nstrategies = collector.toArray(new Strategy[collector.size()]);\nif(strategies.length == 0) {\n    parsePattern = null;\n} else {\n    parsePattern = Pattern.compile(regex.toString());\n}\ncurrentFormatField = null;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..ac3efbc1 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,25 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(currentStrategy != null) {\n+    if(nextStrategy == null) {\n+        if(currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        }\n+    } else {\n+        if(currentStrategy.addRegex(this, regex) || nextStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+            collector.add(nextStrategy);\n+        }\n+    }\n+}\n+strategies = collector.toArray(new Strategy[collector.size()]);\n+if(strategies.length == 0) {\n+    parsePattern = null;\n+} else {\n+    parsePattern = Pattern.compile(regex.toString());\n+}\n+currentFormatField = null;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0> but was:<100000>",
    "test_result": "FAIL"
}