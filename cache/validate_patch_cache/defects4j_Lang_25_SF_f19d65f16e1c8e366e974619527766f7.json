{
    "patch": "public static String decode(String str, Charset charset) {\n    String decodedString = null;\n    try {\n        CharsetEncoder encoder = charset.newEncoder();\n        ByteBuffer bb = ByteBuffer.wrap(str.getBytes());\n        CharBuffer cb = encoder.decode(bb);\n        decodedString = new String(cb.array());\n    } catch (CharacterCodingException e) {\n        e.printStackTrace();\n    }\n    return decodedString;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e8ed394c 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,18 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String str, Charset charset) {\n+    String decodedString = null;\n+    try {\n+        CharsetEncoder encoder = charset.newEncoder();\n+        ByteBuffer bb = ByteBuffer.wrap(str.getBytes());\n+        CharBuffer cb = encoder.decode(bb);\n+        decodedString = new String(cb.array());\n+    } catch (CharacterCodingException e) {\n+        e.printStackTrace();\n+    }\n+    return decodedString;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}