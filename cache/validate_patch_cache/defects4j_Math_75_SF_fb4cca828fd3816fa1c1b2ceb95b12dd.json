{
    "patch": "public double getPct(Object v) {\n    if(!(v instanceof Comparable<?>)) {\n        return 0.0;\n    }\n    @SuppressWarnings(\"unchecked\")\n    Comparable<Object> value = (Comparable<Object>) v;\n    return getCumPct(value);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..ec1bd746a 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,14 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n-    public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public double getPct(Object v) {\n+    if(!(v instanceof Comparable<?>)) {\n+        return 0.0;\n     }\n+    @SuppressWarnings(\"unchecked\")\n+    Comparable<Object> value = (Comparable<Object>) v;\n+    return getCumPct(value);\n+}\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>",
    "test_result": "FAIL"
}