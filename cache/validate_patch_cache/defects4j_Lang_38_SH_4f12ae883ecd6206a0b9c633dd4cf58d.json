{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            TimeZone defaultTimeZone = TimeZone.getDefault();\n            TimeZone.setDefault(mTimeZone);  // set the forced time zone as default\n            try {\n                return applyRules(calendar, buf);\n            } finally {\n                TimeZone.setDefault(defaultTimeZone);  // reset the time zone to the default\n            }\n        }\n        return applyRules(calendar, buf);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..04caa116 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,18 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n+        if (mTimeZoneForced) {\n+            TimeZone defaultTimeZone = TimeZone.getDefault();\n+            TimeZone.setDefault(mTimeZone);  // set the forced time zone as default\n+            try {\n+                return applyRules(calendar, buf);\n+            } finally {\n+                TimeZone.setDefault(defaultTimeZone);  // reset the time zone to the default\n+            }\n+        }\n+        return applyRules(calendar, buf);\n+    }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}