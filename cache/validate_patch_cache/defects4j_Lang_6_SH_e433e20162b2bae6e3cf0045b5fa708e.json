{
    "patch": "                int consumedCodePointCount = Character.codePointCount(input, pos, consumed);\n                if (consumedCodePointCount == 1) {\n                    for (int pt = 0; pt < consumed; pt++) {\n                        out.write(input.charAt(pos + pt));\n                    }\n                } else { //Surrogate pair\n                    out.write(replacement);\n                }\n                pos += consumedCodePointCount;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..ae40f79e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,15 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                int consumedCodePointCount = Character.codePointCount(input, pos, consumed);\n+                if (consumedCodePointCount == 1) {\n+                    for (int pt = 0; pt < consumed; pt++) {\n+                        out.write(input.charAt(pos + pt));\n+                    }\n+                } else { //Surrogate pair\n+                    out.write(replacement);\n+                }\n+                pos += consumedCodePointCount;\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}