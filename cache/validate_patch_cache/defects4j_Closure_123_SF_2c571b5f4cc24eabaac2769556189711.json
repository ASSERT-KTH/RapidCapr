{
    "patch": "public static String fixCode(String code) {\n    int index = code.indexOf(\"for(\");\n    if(index != -1) {\n        int endIndex = code.indexOf(\")\", index);\n        String forLoopStmt = code.substring(index, endIndex + 1);\n        String[] arr = forLoopStmt.split(\";\");\n        if(arr.length == 3) {\n            String condition = arr[1].trim();\n            if(condition.contains(\"in\")) {\n                condition = condition.substring(0, condition.indexOf(\"in\") + 2) + \"(\" + condition.substring(condition.indexOf(\"in\") + 2) + \")\";\n                forLoopStmt = arr[0] + \";\" + condition + \";\" + arr[2];\n                code = code.substring(0, index) + forLoopStmt + code.substring(endIndex + 1);\n            }\n        }\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..75cd3628 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,23 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    int index = code.indexOf(\"for(\");\n+    if(index != -1) {\n+        int endIndex = code.indexOf(\")\", index);\n+        String forLoopStmt = code.substring(index, endIndex + 1);\n+        String[] arr = forLoopStmt.split(\";\");\n+        if(arr.length == 3) {\n+            String condition = arr[1].trim();\n+            if(condition.contains(\"in\")) {\n+                condition = condition.substring(0, condition.indexOf(\"in\") + 2) + \"(\" + condition.substring(condition.indexOf(\"in\") + 2) + \")\";\n+                forLoopStmt = arr[0] + \";\" + condition + \";\" + arr[2];\n+                code = code.substring(0, index) + forLoopStmt + code.substring(endIndex + 1);\n+            }\n+        }\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}