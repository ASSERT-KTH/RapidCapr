{
    "patch": "public static List<String> getWordsStartingWithVowel(List<String> inputList) {\n    List<String> resultList = new ArrayList<>();\n\n    for (String str : inputList) {\n        char firstChar = str.charAt(0);\n        if (firstChar == 'a' || firstChar == 'e' || firstChar == 'i' || firstChar == 'o' || firstChar == 'u') {\n            resultList.add(str);\n        }\n    }\n\n    return resultList;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cc98df1e8 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,18 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static List<String> getWordsStartingWithVowel(List<String> inputList) {\n+    List<String> resultList = new ArrayList<>();\n+\n+    for (String str : inputList) {\n+        char firstChar = str.charAt(0);\n+        if (firstChar == 'a' || firstChar == 'e' || firstChar == 'i' || firstChar == 'o' || firstChar == 'u') {\n+            resultList.add(str);\n+        }\n+    }\n+\n+    return resultList;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}