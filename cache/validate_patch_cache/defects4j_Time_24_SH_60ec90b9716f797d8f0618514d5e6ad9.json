{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                try {\n                    millis = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    throw e;\n                } catch (RuntimeException ex) {\n                    if (text != null) {\n                        throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\"\", ex);\n                    }\n                    throw ex;\n                }\n            }\n        } catch (RuntimeException ex) {\n            if (text != null) {\n                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\"\", ex);\n            }\n            throw ex;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..84c5c821 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,28 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                try {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    throw e;\n+                } catch (RuntimeException ex) {\n+                    if (text != null) {\n+                        throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\"\", ex);\n+                    }\n+                    throw ex;\n+                }\n+            }\n+        } catch (RuntimeException ex) {\n+            if (text != null) {\n+                throw new IllegalArgumentException(\"Cannot parse \\\"\" + text + \"\\\"\", ex);\n+            }\n+            throw ex;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}