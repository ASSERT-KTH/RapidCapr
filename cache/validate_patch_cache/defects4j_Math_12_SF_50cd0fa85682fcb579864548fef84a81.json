{
    "patch": "import java.util.Random;\n\npublic class Distribution {\n    static Random rng = new Random();\n\n    public static double[] sampleNormal(int n, double mean, double var) {\n        double[] result = new double[n];\n        for (int i = 0; i < n; i++) {\n            double z = Math.sqrt(var) * rng.nextGaussian() + mean;\n            result[i] = z;\n        }\n        return result;\n    }\n\n    public static double[] sampleBeta(int n, double a, double b) {\n        double[] result = new double[n];\n        for (int i = 0; i < n; i++) {\n            double x = sampleGamma(1, a)[0];\n            double y = sampleGamma(1, b)[0];\n            result[i] = x / (x + y);\n        }\n        return result;\n    }\n\n    public static double[] sampleGamma(int n, double a) {\n        double[] result = new double[n];\n        double d = a - 1d / 3d;\n        double c = 1d / Math.sqrt(9d * d);\n        for (int i = 0; i < n; i++) {\n            while (true) {\n                double x = rng.nextGaussian();\n                double v = 1 + c * x;\n                if (v <= 0) {\n                    continue;\n                }\n                v = v * v * v;\n                double u = rng.nextDouble();\n                double xx = x * x;\n                if (u < 1 - 0.0331 * xx * xx || Math.log(u) < 0.5 * xx + d * (1 - v + Math.log(v))) {\n                    result[i] = d * v;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    public static double computeMean(double[] data) {\n        double sum = 0;\n        for (double val : data) {\n            sum += val;\n        }\n        return sum / data.length;\n    }\n\n    public static double computeVariance(double[] data, double mean) {\n        double sumSquaredDeviation = 0;\n        for (double val : data) {\n            sumSquaredDeviation += (val - mean) * (val - mean);\n        }\n        return sumSquaredDeviation / (data.length - 1);\n    }\n\n    public static double computeVariance(double[] data) {\n        double mean = computeMean(data);\n        return computeVariance(data, mean);\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}