{
    "patch": "stepSize = hNew;\nfinal double nextStepStart = stepStart + stepSize;\nif ((forward && nextStepStart >= t && nextStepStart - t > 1e-12) ||\n    (!forward && nextStepStart <= t && t - nextStepStart > 1e-12)) {\n    stepSize = t - stepStart;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..140848098 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,12 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+stepSize = hNew;\n+final double nextStepStart = stepStart + stepSize;\n+if ((forward && nextStepStart >= t && nextStepStart - t > 1e-12) ||\n+    (!forward && nextStepStart <= t && t - nextStepStart > 1e-12)) {\n+    stepSize = t - stepStart;\n+}\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}