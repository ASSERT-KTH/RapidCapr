{
    "patch": "    public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException {\n        if ((expected.length < 2) || (expected.length != observed.length)) {\n            throw new IllegalArgumentException(\"observed, expected array lengths incorrect\");\n        }\n        if (!isPositive(expected) || !isNonNegative(observed)) {\n            throw new IllegalArgumentException(\"observed counts must be non-negative and expected counts must be positive\");\n        }\n        double sumSq = 0.0d;\n        double dev = 0.0d;\n        for (int i = 0; i < observed.length; i++) {\n            if (expected[i] == 0) {\n                if (observed[i] != 0) {\n                    throw new IllegalArgumentException(\"observed count (\" + observed[i] + \") \" +\n                            \"cannot be positive if expected count is 0\");\n                } else {\n                    continue; // Both are 0, no contribution to sumSq\n                }\n            }\n            dev = ((double) observed[i] - expected[i]);\n            sumSq += dev * dev / expected[i];\n        }\n        return sumSq;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex c87b0101f..d92a755aa 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -61,21 +61,26 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n      * @throws IllegalArgumentException if preconditions are not met\n      * or length is less than 2\n      */\n-    public double chiSquare(double[] expected, long[] observed)\n-        throws IllegalArgumentException {\n+    public double chiSquare(double[] expected, long[] observed) throws IllegalArgumentException {\n         if ((expected.length < 2) || (expected.length != observed.length)) {\n-            throw new IllegalArgumentException(\n-                    \"observed, expected array lengths incorrect\");\n+            throw new IllegalArgumentException(\"observed, expected array lengths incorrect\");\n         }\n         if (!isPositive(expected) || !isNonNegative(observed)) {\n-            throw new IllegalArgumentException(\n-                \"observed counts must be non-negative and expected counts must be postive\");\n+            throw new IllegalArgumentException(\"observed counts must be non-negative and expected counts must be positive\");\n         }\n         double sumSq = 0.0d;\n         double dev = 0.0d;\n         for (int i = 0; i < observed.length; i++) {\n-                dev = ((double) observed[i] - expected[i]);\n-                sumSq += dev * dev / expected[i];\n+            if (expected[i] == 0) {\n+                if (observed[i] != 0) {\n+                    throw new IllegalArgumentException(\"observed count (\" + observed[i] + \") \" +\n+                            \"cannot be positive if expected count is 0\");\n+                } else {\n+                    continue; // Both are 0, no contribution to sumSq\n+                }\n+            }\n+            dev = ((double) observed[i] - expected[i]);\n+            sumSq += dev * dev / expected[i];\n         }\n         return sumSq;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: chi-square test statistic expected:<114875.90421929007> but was:<3624883.3429077636>",
    "test_result": "FAIL"
}