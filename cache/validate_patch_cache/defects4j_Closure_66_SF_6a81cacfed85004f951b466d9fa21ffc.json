{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    JsonElement jelement = new JsonParser().parse(jsonStr);\n    JsonObject jobject = jelement.getAsJsonObject();\n    jobject = jobject.getAsJsonObject(\"data\");\n    jobject = jobject.getAsJsonObject(\"stats\");\n    double total = jobject.get(\"total\").getAsDouble();\n    double typed = jobject.get(\"typed\").getAsDouble();\n    double percent = typed / total * 100;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..7c9a90c6 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    JsonElement jelement = new JsonParser().parse(jsonStr);\n+    JsonObject jobject = jelement.getAsJsonObject();\n+    jobject = jobject.getAsJsonObject(\"data\");\n+    jobject = jobject.getAsJsonObject(\"stats\");\n+    double total = jobject.get(\"total\").getAsDouble();\n+    double typed = jobject.get(\"typed\").getAsDouble();\n+    double percent = typed / total * 100;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}