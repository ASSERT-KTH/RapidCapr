{
    "patch": "        if (real == 0.0 && imaginary == 0.0) {\n            return NaN;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/complex/Complex.java b/src/main/java/org/apache/commons/math3/complex/Complex.java\nindex 22b23f24e..c693599ae 100644\n--- a/src/main/java/org/apache/commons/math3/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math3/complex/Complex.java\n@@ -301,9 +301,11 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n             return NaN;\n         }\n \n+        if (real == 0.0 && imaginary == 0.0) {\n         if (real == 0.0 && imaginary == 0.0) {\n             return NaN;\n         }\n+        }\n \n         if (isInfinite) {\n             return ZERO;",
    "result_reason": "junit.framework.AssertionFailedError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>",
    "test_result": "FAIL"
}