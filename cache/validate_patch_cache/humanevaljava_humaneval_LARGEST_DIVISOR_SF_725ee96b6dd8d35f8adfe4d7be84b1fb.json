{
    "patch": "    public static int largest_divisor(int n) {\n        if (n <= 0) {\n            throw new IllegalArgumentException(\"Input must be positive\");\n        }\n        for (int i = n/2; i >= 1; i --){\n            if (n % i == 0) {\n                return i;\n            }\n        }\n        return n; // If no divisor is found, the largest divisor is n itself\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\nindex e93b282..873dd88 100644\n--- a/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n+++ b/src/main/java/humaneval/buggy/LARGEST_DIVISOR.java\n@@ -2,10 +2,14 @@ package humaneval.buggy;\n \n public class LARGEST_DIVISOR {\n     public static int largest_divisor(int n) {\n-        for (int i = n; i >= 0; i -= 1){\n-            if (n % i == 0)\n+        if (n <= 0) {\n+            throw new IllegalArgumentException(\"Input must be positive\");\n+        }\n+        for (int i = n/2; i >= 1; i --){\n+            if (n % i == 0) {\n                 return i;\n+            }\n         }\n-        return 1;\n+        return n; // If no divisor is found, the largest divisor is n itself\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}