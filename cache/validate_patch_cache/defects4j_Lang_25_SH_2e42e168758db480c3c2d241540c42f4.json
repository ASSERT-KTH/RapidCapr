{
    "patch": "for (int i = 0; i < len; i++) {\n    char c = s.charAt(i);\n    if (c <= 127) {\n        if (escAsciiChar[c]) {\n            outBuffer.append('%');\n            outBuffer.append(upperHexChars[c >> 4]);\n            outBuffer.append(upperHexChars[c & 0xF]);\n            success = true;\n        } else {\n            outBuffer.append(c);\n        }\n    } else if (encodeSpecialChar(c, outBuffer)) {\n        success = true;\n    } else {\n        outBuffer.append(c);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}