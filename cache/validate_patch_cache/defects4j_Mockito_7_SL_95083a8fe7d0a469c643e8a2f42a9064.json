{
    "patch": "Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\nif (actualTypeArgument == null) {\n    actualTypeArgument = typeVariable.getBounds().length > 0 ? typeVariable.getBounds()[0] : typeVariable;\n}\nif (actualTypeArgument instanceof TypeVariable) {\n    Type[] bounds = ((TypeVariable<?>) actualTypeArgument).getBounds();\n    if (bounds.length == 0) {\n        registerTypeVariablesOn(actualTypeArgument);\n    } else if (bounds.length == 1) {\n        registerTypeVariablesOn(bounds[0]);\n    } else {\n        for (Type type : bounds) {\n            registerTypeVariablesOn(type);\n        }\n    }\n} else {\n    registerTypeVariablesOn(actualTypeArgument);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..0ee1566e2 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,29 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+if (actualTypeArgument == null) {\n+    actualTypeArgument = typeVariable.getBounds().length > 0 ? typeVariable.getBounds()[0] : typeVariable;\n+}\n+if (actualTypeArgument instanceof TypeVariable) {\n+    Type[] bounds = ((TypeVariable<?>) actualTypeArgument).getBounds();\n+    if (bounds.length == 0) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    } else if (bounds.length == 1) {\n+        registerTypeVariablesOn(bounds[0]);\n+    } else {\n+        for (Type type : bounds) {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+} else {\n+    registerTypeVariablesOn(actualTypeArgument);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}