{
    "patch": "public void addValue(double value) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        sumLogImpl.increment(value);\n        secondMoment.increment(value);\n        // If mean, variance or geomean have been overridden,\n        // need to increment these\n        if (meanImpl instanceof Mean) {\n            meanImpl.increment(value);\n        } else if (meanImpl != null) {\n            double delta = value - meanImpl.getResult();\n            meanImpl.increment(delta / n);\n            varianceImpl.increment((n - 1) * delta * delta / n);\n            geoMeanImpl.increment(value);\n        }\n        if (varianceImpl != null && !(varianceImpl instanceof Variance)) {\n            varianceImpl.increment(value);\n        }\n        if (geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n            geoMeanImpl.increment(value);\n        }\n        n++;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..b0c18370b 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,7 +146,7 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n@@ -155,13 +155,18 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         secondMoment.increment(value);\n         // If mean, variance or geomean have been overridden,\n         // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+        if (meanImpl instanceof Mean) {\n             meanImpl.increment(value);\n+        } else if (meanImpl != null) {\n+            double delta = value - meanImpl.getResult();\n+            meanImpl.increment(delta / n);\n+            varianceImpl.increment((n - 1) * delta * delta / n);\n+            geoMeanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+        if (varianceImpl != null && !(varianceImpl instanceof Variance)) {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+        if (geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n             geoMeanImpl.increment(value);\n         }\n         n++;",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2.213363839400643> but was:<NaN>",
    "test_result": "FAIL"
}