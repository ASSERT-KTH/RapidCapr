{
    "patch": "    private static String escapeRegex(String value, boolean unquote) {\n        StringBuilder regex = new StringBuilder();\n        boolean wasWhite= false;\n        for(int i= 0; i<value.length(); ++i) {\n            char c= value.charAt(i);\n            if(Character.isWhitespace(c)) {\n                if(!wasWhite) {\n                    wasWhite= true;\n                    regex.append(\"\\\\s*+\");\n                }\n                continue;\n            }\n            wasWhite= false;\n            switch(c) {\n            case '\\'':\n                if(unquote) {\n                    if(++i==value.length()) {\n                        return regex.toString();\n                    }\n                    c= value.charAt(i);\n                }\n                break;\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n                regex.append('\\\\');\n            }\n            regex.append(c);\n        }\n        return regex.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..813afeb6 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,7 +300,8 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n+    private static String escapeRegex(String value, boolean unquote) {\n+        StringBuilder regex = new StringBuilder();\n         boolean wasWhite= false;\n         for(int i= 0; i<value.length(); ++i) {\n             char c= value.charAt(i);\n@@ -316,7 +317,7 @@ public class FastDateParser implements DateParser, Serializable {\n             case '\\'':\n                 if(unquote) {\n                     if(++i==value.length()) {\n-                        return regex;\n+                        return regex.toString();\n                     }\n                     c= value.charAt(i);\n                 }\n@@ -339,8 +340,7 @@ public class FastDateParser implements DateParser, Serializable {\n             }\n             regex.append(c);\n         }\n-        return regex;\n-    }\n+        return regex.toString();\n \n     /**\n      * A class to store Key / Value pairs",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}