{
    "patch": "public boolean isPositive(int num) {\n    if (num > 0) {\n        return true;\n    } else {\n        return false;\n    }\n    // This statement would never execute and can be removed.\n    System.out.println(\"This statement is unreachable\");\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..978289c52 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,15 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public boolean isPositive(int num) {\n+    if (num > 0) {\n+        return true;\n+    } else {\n+        return false;\n+    }\n+    // This statement would never execute and can be removed.\n+    System.out.println(\"This statement is unreachable\");\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}