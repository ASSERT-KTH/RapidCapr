{
    "patch": "public static String words_in_sentence(String sentence) {\n    StringBuilder result = new StringBuilder();\n\n    for (String word : sentence.split(\" \")) {\n        boolean isPrime = true;\n        if (word.length() == 2 || word.length() == 3) {\n            result.append(word).append(\" \");\n            continue;\n        }\n        for (int i = 2; i <= word.length() / 2; i++){\n            if (word.length() % i == 0) {\n                isPrime = false;\n                break;\n            }\n        }\n        if (isPrime && word.length() > 1)\n            result.append(word).append(\" \");\n    }\n    return result.toString().trim();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java b/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java\nindex 2907f3f..be884e6 100644\n--- a/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java\n+++ b/src/main/java/humaneval/buggy/WORDS_IN_SENTENCE.java\n@@ -19,17 +19,24 @@ Constraints:\n     * sentence contains only letters */\n \n public class WORDS_IN_SENTENCE {\n-    public static String words_in_sentence(String sentence) {\n-        String result = \"\";\n+public static String words_in_sentence(String sentence) {\n+    StringBuilder result = new StringBuilder();\n \n-        for (String word : sentence.split(\" \")) {\n-            int flag = 0;\n-            for (int i = 2; i < word.length(); i += 1){\n-                if (word.length() % i == 0) flag = 1;\n+    for (String word : sentence.split(\" \")) {\n+        boolean isPrime = true;\n+        if (word.length() == 2 || word.length() == 3) {\n+            result.append(word).append(\" \");\n+            continue;\n+        }\n+        for (int i = 2; i <= word.length() / 2; i++){\n+            if (word.length() % i == 0) {\n+                isPrime = false;\n+                break;\n             }\n-            if (flag == 0 || word.length() == 2)\n-                result += word + \" \";\n         }\n-        return result.trim();\n+        if (isPrime && word.length() > 1)\n+            result.append(word).append(\" \");\n     }\n+    return result.toString().trim();\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}