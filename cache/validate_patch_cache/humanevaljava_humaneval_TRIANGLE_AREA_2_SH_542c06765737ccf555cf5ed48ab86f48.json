{
    "patch": " double maxSide = Math.max(Math.max(a, b), c);\n double remainingSidesSum = a + b + c - maxSide;\n if(Double.isNaN(remainingSidesSum) || Double.isInfinite(remainingSidesSum) || remainingSidesSum <= maxSide) {\n     return -1;\n }\n double result = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n if (Double.isNaN(result) || Double.isInfinite(result)) {\n     return -1;\n }\n return result;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java b/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\nindex 484c02b..5ed8a60 100644\n--- a/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\n+++ b/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\n@@ -18,7 +18,16 @@ public class TRIANGLE_AREA_2 {\n             return -1;\n         \n         double s = (a + b + c) / 2.;\n-        double result = Math.pow(s, 0.5);\n+ double maxSide = Math.max(Math.max(a, b), c);\n+ double remainingSidesSum = a + b + c - maxSide;\n+ if(Double.isNaN(remainingSidesSum) || Double.isInfinite(remainingSidesSum) || remainingSidesSum <= maxSide) {\n+     return -1;\n+ }\n+ double result = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n+ if (Double.isNaN(result) || Double.isInfinite(result)) {\n+     return -1;\n+ }\n+ return result;\n         \n         BigDecimal bd = BigDecimal.valueOf(result);\n         bd = bd.setScale(2, RoundingMode.HALF_UP);",
    "result_reason": " /tmp/humaneval-TRIANGLE_AREA_2/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java:[32,20] unreachable statement",
    "test_result": "ERROR"
}