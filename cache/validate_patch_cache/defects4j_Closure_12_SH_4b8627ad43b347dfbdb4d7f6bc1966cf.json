{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n   List<Node> handlers = cfgNode.getChildren(Utf8.EXCEPTION_HANDLER);\n   return handlers.size() > 0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..b6942309 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,10 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+   List<Node> handlers = cfgNode.getChildren(Utf8.EXCEPTION_HANDLER);\n+   return handlers.size() > 0;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}