{
    "patch": "private String getRemainingJSDocLine() {\n    JSDocInfoParser.StringStream stream = getStream();\n    String result = stream.getRemainingJSDocLine();\n    // fix the type annotation for `stream`\n    JSDocInfoParser.StringStream updatedStream = new JSDocInfoParser.StringStream(stream.getString());\n    updatedStream.skip(stream.getStart());\n    setStream(updatedStream);\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..f090c5c0 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,15 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    JSDocInfoParser.StringStream stream = getStream();\n+    String result = stream.getRemainingJSDocLine();\n+    // fix the type annotation for `stream`\n+    JSDocInfoParser.StringStream updatedStream = new JSDocInfoParser.StringStream(stream.getString());\n+    updatedStream.skip(stream.getStart());\n+    setStream(updatedStream);\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}