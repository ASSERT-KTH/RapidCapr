{
    "patch": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n    if (searchStr.length() > str.length()) {\n        return false;\n    }\n    int searchIndex = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (Character.toUpperCase(str.charAt(i)) == Character.toUpperCase(searchStr.charAt(searchIndex))) {\n            searchIndex++;\n            if (searchIndex == searchStr.length()) {\n                return true;\n            }\n        } else {\n            i -= searchIndex;\n            searchIndex = ",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..aec4b6ad 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1041,12 +1041,23 @@ public class StringUtils {\n      * @return true if the String contains the search String irrespective of\n      * case or false if not or <code>null</code> string input\n      */\n-    public static boolean containsIgnoreCase(String str, String searchStr) {\n-        if (str == null || searchStr == null) {\n-            return false;\n-        }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if (str == null || searchStr == null) {\n+        return false;\n     }\n+    if (searchStr.length() > str.length()) {\n+        return false;\n+    }\n+    int searchIndex = 0;\n+    for (int i = 0; i < str.length(); i++) {\n+        if (Character.toUpperCase(str.charAt(i)) == Character.toUpperCase(searchStr.charAt(searchIndex))) {\n+            searchIndex++;\n+            if (searchIndex == searchStr.length()) {\n+                return true;\n+            }\n+        } else {\n+            i -= searchIndex;\n+            searchIndex = \n \n     // IndexOfAny chars\n     //-----------------------------------------------------------------------",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}