{
    "patch": "public static String fixForLoop(String loop) {\n    String[] parts = loop.split(\";\");\n    String var = parts[0].substring(4).trim();\n    String cond = parts[1].trim();\n    String inc = parts[2].substring(0, parts[2].indexOf(\")\")).trim();\n    String body = parts[2].substring(parts[2].indexOf(\")\") + 1).trim();\n\n    if (cond.contains(\"in\")) {\n        String[] arr = cond.split(\" in \");\n        cond = arr[1] + \".hasOwnProperty(\" + arr[0] + \")\";\n    }\n\n    return \"for (\" + var + \"; \" + cond + \"; \" + inc + \")\" + body;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..a229005e 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,20 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixForLoop(String loop) {\n+    String[] parts = loop.split(\";\");\n+    String var = parts[0].substring(4).trim();\n+    String cond = parts[1].trim();\n+    String inc = parts[2].substring(0, parts[2].indexOf(\")\")).trim();\n+    String body = parts[2].substring(parts[2].indexOf(\")\") + 1).trim();\n+\n+    if (cond.contains(\"in\")) {\n+        String[] arr = cond.split(\" in \");\n+        cond = arr[1] + \".hasOwnProperty(\" + arr[0] + \")\";\n+    }\n+\n+    return \"for (\" + var + \"; \" + cond + \"; \" + inc + \")\" + body;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}