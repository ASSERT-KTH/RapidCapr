{
    "patch": "if (parent != null && NodeUtil.isGet(parent)) {\n  Node getTarget = parent.getFirstChild();\n  if (getTarget.getType() != Token.THIS &&\n      getTarget.getType() != Token.NAME &&\n      getTarget.getType() != Token.FUNCTION) {\n    Node parentCall = parent.getParent();\n    if (parentCall != null &&\n        parentCall.getType() == Token.CALL &&\n        getTarget.getLastChild().getString().equals(\"bind\")) {\n      return false; // Don't traverse .bind() calls.\n    } else {\n      Node property = parent.getLastChild();\n      if (property.getType() == Token.STRING &&\n          \"prototype\".equals(property.getString())) {\n        return false; // Don't traverse prototype assignments.\n      }\n    }\n  }\n}\n\nreturn true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..d50584e8 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,27 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+if (parent != null && NodeUtil.isGet(parent)) {\n+  Node getTarget = parent.getFirstChild();\n+  if (getTarget.getType() != Token.THIS &&\n+      getTarget.getType() != Token.NAME &&\n+      getTarget.getType() != Token.FUNCTION) {\n+    Node parentCall = parent.getParent();\n+    if (parentCall != null &&\n+        parentCall.getType() == Token.CALL &&\n+        getTarget.getLastChild().getString().equals(\"bind\")) {\n+      return false; // Don't traverse .bind() calls.\n+    } else {\n+      Node property = parent.getLastChild();\n+      if (property.getType() == Token.STRING &&\n+          \"prototype\".equals(property.getString())) {\n+        return false; // Don't traverse prototype assignments.\n+      }\n+    }\n+  }\n+}\n+\n+return true;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 46 expected:<0> but was:<1>",
    "test_result": "FAIL"
}