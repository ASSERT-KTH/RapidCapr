{
    "patch": "import org.json.JSONArray;\nimport org.json.JSONObject;\n\npublic class MyJsonParser {\n    public static double getTypedPercent(JSONObject json) {\n        int total = json.length();\n        int typed = 0;\n        for (String key : json.keySet()) {\n            Object value = json.get(key);\n            if (value instanceof JSONObject) {\n                typed += getTypedPercent((JSONObject) value);\n            } else if (value instanceof JSONArray) {\n                for (int i = 0; i < ((JSONArray) value).length(); i++) {\n                    Object arrayValue = ((JSONArray) value).get(i);\n                    if (arrayValue instanceof JSONObject) {\n                        typed += getTypedPercent((JSONObject) arrayValue);\n                    }\n                }\n            } else if (!value.equals(null)) {\n                typed++;\n            }\n        }\n        return (double) typed / total * 100;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..086200ad 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,31 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+public class MyJsonParser {\n+    public static double getTypedPercent(JSONObject json) {\n+        int total = json.length();\n+        int typed = 0;\n+        for (String key : json.keySet()) {\n+            Object value = json.get(key);\n+            if (value instanceof JSONObject) {\n+                typed += getTypedPercent((JSONObject) value);\n+            } else if (value instanceof JSONArray) {\n+                for (int i = 0; i < ((JSONArray) value).length(); i++) {\n+                    Object arrayValue = ((JSONArray) value).get(i);\n+                    if (arrayValue instanceof JSONObject) {\n+                        typed += getTypedPercent((JSONObject) arrayValue);\n+                    }\n+                }\n+            } else if (!value.equals(null)) {\n+                typed++;\n+            }\n+        }\n+        return (double) typed / total * 100;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}