{
    "patch": "public static String generateCodeSnippet(Object c, Object[] d, boolean e) {\n    String result;\n    if (c instanceof Integer) {\n        result = \"for(int a = \" + c + \"; a < \" + 10 + \"; a++) foo();\";\n    } else if (c instanceof Boolean) {\n        if (e) {\n            result = \"while(\" + c + \") foo();\";\n        } else {\n            result = \"if(\" + c + \") foo(); else bar();\";\n        }\n    } else {\n        boolean isIn = false; // Fixed line\n        for (Object obj : d) {\n            if (obj == c) {\n                isIn = true;\n                break;\n            }\n        }\n        if (isIn) {\n            result = \"foo();\";\n        } else {\n            Object[] arr = d;\n            Context rhsContext = Context.OTHER;\n            result = \"for(int a = \" + (rhsContext == Context.OTHER ? arr.length : 0) + \"; a < \" + arr.length + \"; a++) \" +\n                     \"if(a in \" + Arrays.toString(arr) + \") bar(); else foo();\";\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}