{
    "patch": "public static boolean containsAny(String str, char[] chars) {\n    if (str == null || chars == null) {\n        return false;\n    }\n    for (char c : chars) {\n        if (str.indexOf(c) >= 0) {\n            return true;\n        }\n    }\n    for (int i = 0; i < str.length(); ) {\n        int codePoint = str.codePointAt(i);\n        int charCount = Character.charCount(codePoint);\n        for (int j = 0; j < chars.length; j++) {\n            if (charCount == 2 && j + 1 < chars.length && codePoint == Character.toCodePoint(chars[j], chars[j + 1])) {\n                return true;\n            } else if (charCount == 1 && chars[j] == codePoint) {\n                return true;\n            }\n        }\n        i += charCount;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..0430d298 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] chars) {\n+    if (str == null || chars == null) {\n+        return false;\n+    }\n+    for (char c : chars) {\n+        if (str.indexOf(c) >= 0) {\n+            return true;\n+        }\n+    }\n+    for (int i = 0; i < str.length(); ) {\n+        int codePoint = str.codePointAt(i);\n+        int charCount = Character.charCount(codePoint);\n+        for (int j = 0; j < chars.length; j++) {\n+            if (charCount == 2 && j + 1 < chars.length && codePoint == Character.toCodePoint(chars[j], chars[j + 1])) {\n+                return true;\n+            } else if (charCount == 1 && chars[j] == codePoint) {\n+                return true;\n+            }\n+        }\n+        i += charCount;\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}