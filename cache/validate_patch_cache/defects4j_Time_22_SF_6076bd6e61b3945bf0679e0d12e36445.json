{
    "patch": "protected BasePeriod(long duration) {\n    if (duration >= 7) {\n        int weeks = (int) (duration / 7);\n        int restDays = (int) (duration % 7);\n        this.weeks = weeks;\n        this.days = restDays;\n    } else {\n        this.weeks = 0;\n        this.days = (int) duration;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..22b5ac8b 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    if (duration >= 7) {\n+        int weeks = (int) (duration / 7);\n+        int restDays = (int) (duration % 7);\n+        this.weeks = weeks;\n+        this.days = restDays;\n+    } else {\n+        this.weeks = 0;\n+        this.days = (int) duration;\n     }\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}