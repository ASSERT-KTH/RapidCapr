{
    "patch": "if (n < 1) {\n   throw new IllegalArgumentException(\"Invalid input! n should be a positive integer.\");\n} else if (n == 1) {\n   return 1;\n} else {\n   int start = (int) Math.pow(10, n - 1);\n   int end = (int) Math.pow(10, n) - 1;\n   int count = 0;\n   for (int i = start; i <= end; i++) {\n      if (String.valueOf(i).startsWith(\"1\") && String.valueOf(i).endsWith(\"1\")) {\n         count++;\n      }\n   }\n   return count;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\nindex b8a4679..af82688 100644\n--- a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n+++ b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n@@ -7,6 +7,20 @@ public class STARTS_ONE_ENDS {\n     public static int starts_one_ends(int n) {\n         if (n == 1)\n             return 1;\n-        return (int) ((10 + 9) * Math.pow(10, n - 2));\n+if (n < 1) {\n+   throw new IllegalArgumentException(\"Invalid input! n should be a positive integer.\");\n+} else if (n == 1) {\n+   return 1;\n+} else {\n+   int start = (int) Math.pow(10, n - 1);\n+   int end = (int) Math.pow(10, n) - 1;\n+   int count = 0;\n+   for (int i = start; i <= end; i++) {\n+      if (String.valueOf(i).startsWith(\"1\") && String.valueOf(i).endsWith(\"1\")) {\n+         count++;\n+      }\n+   }\n+   return count;\n+}\n     }\n }",
    "result_reason": "   TEST_STARTS_ONE_ENDS.test_1:15 expected:<1> but was:<18>",
    "test_result": "FAIL"
}