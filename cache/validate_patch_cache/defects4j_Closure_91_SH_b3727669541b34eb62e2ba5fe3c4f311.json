{
    "patch": "      if (parent != null && NodeUtil.isGet(parent) && NodeUtil.isGet(parent.getFirstChild()) &&\n          parent.getFirstChild().getLastChild().getString().equals(\"prototype\")) {\n        return false;\n      }\n\n      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isGet(parent.getParent()) &&\n          parent.getParent().getType() == Token.ASSIGN) {\n        Node grandparent = parent.getParent().getParent();\n        if (grandparent.getType() == Token.EXPR_RESULT &&\n            grandparent.getParent().getType() == Token.SCRIPT) {\n          Node rhs = parent.getNext();\n          if (rhs != null && rhs.getType() == Token.NAME &&\n              rhs.getString().equals(\"$jscomp$templatize\")) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..d364b764 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,27 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && NodeUtil.isGet(parent) && NodeUtil.isGet(parent.getFirstChild()) &&\n+          parent.getFirstChild().getLastChild().getString().equals(\"prototype\")) {\n+        return false;\n+      }\n+\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent.getParent()) &&\n+          parent.getParent().getType() == Token.ASSIGN) {\n+        Node grandparent = parent.getParent().getParent();\n+        if (grandparent.getType() == Token.EXPR_RESULT &&\n+            grandparent.getParent().getType() == Token.SCRIPT) {\n+          Node rhs = parent.getNext();\n+          if (rhs != null && rhs.getType() == Token.NAME &&\n+              rhs.getString().equals(\"$jscomp$templatize\")) {\n+            return true;\n+          }\n+        }\n+        return false;\n+      }\n+\n+      return true;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 46 expected:<0> but was:<1>",
    "test_result": "FAIL"
}