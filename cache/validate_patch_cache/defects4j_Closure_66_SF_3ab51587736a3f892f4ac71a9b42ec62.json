{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    Gson gson = new Gson();\n    Type type = new TypeToken<Map<String, Object>>() {}.getType();\n\n    Map<String, Object> map = gson.fromJson(jsonStr, type);\n    double totalCount = (double) map.get(\"total_count\");\n    double incompleteResults = (double) map.get(\"incomplete_results\");\n\n    double completeResults = totalCount - incompleteResults;\n    double percentComplete = (completeResults / totalCount) * 100;\n\n    return percentComplete;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..8068b632 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    Gson gson = new Gson();\n+    Type type = new TypeToken<Map<String, Object>>() {}.getType();\n+\n+    Map<String, Object> map = gson.fromJson(jsonStr, type);\n+    double totalCount = (double) map.get(\"total_count\");\n+    double incompleteResults = (double) map.get(\"incomplete_results\");\n+\n+    double completeResults = totalCount - incompleteResults;\n+    double percentComplete = (completeResults / totalCount) * 100;\n+\n+    return percentComplete;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}