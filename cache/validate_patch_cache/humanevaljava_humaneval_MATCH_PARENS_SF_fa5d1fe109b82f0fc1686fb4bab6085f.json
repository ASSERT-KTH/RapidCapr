{
    "patch": "public static boolean check(String s) {\n    if(s == null || s.isEmpty()) {\n        return true;\n    }\n    Deque<Character> stack = new ArrayDeque<>();\n    for(char c : s.toCharArray()) {\n        if(c == '(') {\n            stack.push('(');\n        } else if(c == ')') {\n            if(stack.isEmpty() || stack.pop() != '(') {\n                return false;\n            }\n        } else if (!Character.isWhitespace(c)) { // ignore spaces\n            return false; // unsupported characters\n        }\n    }\n    return stack.isEmpty();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MATCH_PARENS.java b/src/main/java/humaneval/buggy/MATCH_PARENS.java\nindex 0d0da0a..ee7efa7 100644\n--- a/src/main/java/humaneval/buggy/MATCH_PARENS.java\n+++ b/src/main/java/humaneval/buggy/MATCH_PARENS.java\n@@ -16,15 +16,24 @@ package humaneval.buggy;\n  */\n \n public class MATCH_PARENS {\n-    public static boolean check(String s) {\n-        int val = 0;\n-        for(int i = 0; i < s.length(); i++) {\n-            if(s.charAt(i) == '(') val--;\n-            else val++;\n-            if(val < 0) return false;\n+public static boolean check(String s) {\n+    if(s == null || s.isEmpty()) {\n+        return true;\n+    }\n+    Deque<Character> stack = new ArrayDeque<>();\n+    for(char c : s.toCharArray()) {\n+        if(c == '(') {\n+            stack.push('(');\n+        } else if(c == ')') {\n+            if(stack.isEmpty() || stack.pop() != '(') {\n+                return false;\n+            }\n+        } else if (!Character.isWhitespace(c)) { // ignore spaces\n+            return false; // unsupported characters\n         }\n-        return val == 0;\n     }\n+    return stack.isEmpty();\n+}\n     public static String match_parens(String[] lst) {\n         String S1 = lst[0] + lst[1];\n         String S2 = lst[1] + lst[0];",
    "result_reason": " /tmp/humaneval-MATCH_PARENS/src/main/java/humaneval/buggy/MATCH_PARENS.java:[23,5] cannot find symbol",
    "test_result": "ERROR"
}