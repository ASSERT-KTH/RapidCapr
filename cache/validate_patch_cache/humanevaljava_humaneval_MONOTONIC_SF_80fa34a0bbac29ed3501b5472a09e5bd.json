{
    "patch": "public static boolean monotonic(int[] l) {\n    if (l == null || l.length < 2) {\n        return true;\n    }\n\n    boolean nonDecreasing = true;\n    boolean nonIncreasing = true;\n\n    for (int i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            nonDecreasing = false;\n        }\n        if (l[i] > l[i - 1]) {\n            nonIncreasing = false;\n        }\n\n        if (!nonDecreasing && !nonIncreasing) {\n            return false;\n        }\n    }\n\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MONOTONIC.java b/src/main/java/humaneval/buggy/MONOTONIC.java\nindex f56e3bd..8dcd212 100644\n--- a/src/main/java/humaneval/buggy/MONOTONIC.java\n+++ b/src/main/java/humaneval/buggy/MONOTONIC.java\n@@ -11,19 +11,27 @@ import java.util.Arrays;\n // True\n \n public class MONOTONIC {\n-    public static boolean monotonic(int[] l) {\n-        int[] sorted = new int[l.length];\n-        int[] reverse_sorted = new int[l.length];\n+public static boolean monotonic(int[] l) {\n+    if (l == null || l.length < 2) {\n+        return true;\n+    }\n+\n+    boolean nonDecreasing = true;\n+    boolean nonIncreasing = true;\n+\n+    for (int i = 1; i < l.length; i++) {\n+        if (l[i] < l[i - 1]) {\n+            nonDecreasing = false;\n+        }\n+        if (l[i] > l[i - 1]) {\n+            nonIncreasing = false;\n+        }\n \n-        sorted = l;\n-        \n-        Arrays.sort(sorted);\n-        \n-        for (int i = 0; i < l.length; i += 1)\n-            reverse_sorted[i] = sorted[l.length - i - 1]; \n-        \n-        if (Arrays.equals(l, sorted) || Arrays.equals(l, reverse_sorted))\n-            return true;\n-        return false;\n+        if (!nonDecreasing && !nonIncreasing) {\n+            return false;\n+        }\n     }\n+\n+    return true;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}