{
    "patch": "public class StringUtils {\n  \n  public static boolean containsAny(char[] str, char[] searchChars) {\n    for (int i = 0; i < str.length; i++) {\n      char ch = str[i];\n      \n      for (int j = 0; j < searchChars.length; j++) {\n        if (searchChars[j] == ch) {\n          return true;\n        }\n        \n        if (Character.isHighSurrogate(ch)) {\n          if (j + 1 < searchChars.length && Character.isLowSurrogate(searchChars[j + 1])) {\n            int codePoint = Character.toCodePoint(ch, searchChars[j + 1]);\n            if (Character.charCount(codePoint) == 2) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    \n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..2de39b68 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+  \n+  public static boolean containsAny(char[] str, char[] searchChars) {\n+    for (int i = 0; i < str.length; i++) {\n+      char ch = str[i];\n+      \n+      for (int j = 0; j < searchChars.length; j++) {\n+        if (searchChars[j] == ch) {\n+          return true;\n+        }\n+        \n+        if (Character.isHighSurrogate(ch)) {\n+          if (j + 1 < searchChars.length && Character.isLowSurrogate(searchChars[j + 1])) {\n+            int codePoint = Character.toCodePoint(ch, searchChars[j + 1]);\n+            if (Character.charCount(codePoint) == 2) {\n+              return true;\n+            }\n+          }\n+        }\n+      }\n+    }\n+    \n+    return false;\n+  }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}