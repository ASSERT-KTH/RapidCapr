{
    "patch": "    public static boolean isAvailableLocale(Locale locale) {\n        Set<Locale> cAvailableLocaleSet = new HashSet<>();\n        // add available locales to the set\n        Locale[] availableLocales = Locale.getAvailableLocales();\n        for(Locale l : availableLocales) {\n            cAvailableLocaleSet.add(l);\n        }\n        return cAvailableLocaleSet.contains(locale);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex ceb886e8..38869f6b 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -220,8 +220,16 @@ public class LocaleUtils {\n      * @return true if the locale is a known locale\n      */\n     public static boolean isAvailableLocale(Locale locale) {\n+    public static boolean isAvailableLocale(Locale locale) {\n+        Set<Locale> cAvailableLocaleSet = new HashSet<>();\n+        // add available locales to the set\n+        Locale[] availableLocales = Locale.getAvailableLocales();\n+        for(Locale l : availableLocales) {\n+            cAvailableLocaleSet.add(l);\n+        }\n         return cAvailableLocaleSet.contains(locale);\n     }\n+    }\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}