{
    "patch": "                // check if we are near a DST transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal > instantLocal && nextAdjusted < instantAdjusted) {\n                    // we are near a DST transition and time is in the hour that is skipped\n                    // move the time one hour forward\n                    return offsetLocal + getStandardOffset(nextLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3b9fc6c7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // check if we are near a DST transition\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal > instantLocal && nextAdjusted < instantAdjusted) {\n+                    // we are near a DST transition and time is in the hour that is skipped\n+                    // move the time one hour forward\n+                    return offsetLocal + getStandardOffset(nextLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}