{
    "patch": "public void printInOperatorInForLoop(Object c, Object d) {\n    boolean cBoolean = (c instanceof Boolean) && (Boolean) c;\n    boolean dBoolean = (d instanceof Boolean) && (Boolean) d;\n\n    boolean inD = (d != null && d.getClass().isArray() && Array.getLength(d) > 0);\n    Object[] arrayD = null;\n    if (inD) {\n        int length = Array.getLength(d);\n        arrayD = new Object[length];\n        for (int i = 0; i < length; i++) {\n            arrayD[i] = Array.get(d, i);\n        }\n    }\n    StringBuilder stringBuilder = new StringBuilder();\n    stringBuilder.append(\"for(\");\n    stringBuilder.append(\"a=\");\n    stringBuilder.append(cBoolean ? \"0\" : \"[0 in d]\");\n    stringBuilder.append(\";\");\n    stringBuilder.append(\";\");\n    stringBuilder.append(\")foo()\");\n\n    String expected = stringBuilder.toString();\n    String actual = null;\n\n    stringBuilder.delete(stringBuilder.indexOf(\"=\") + 1, stringBuilder.indexOf(\"=\") + 2);\n    stringBuilder.insert(stringBuilder.indexOf(\"=\") + 1, dBoolean ? \"\" : \"!\");\n    actual = stringBuilder.toString();\n\n    assertEquals(expected, actual);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}