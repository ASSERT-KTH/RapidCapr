{
    "patch": "public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n    String str = text.substring(position);\n    for (String id : ALL_IDS) {\n        boolean matchFound = false;\n        for (int i = 0; i < str.length() - id.length() + 1; i++) {\n            if (str.substring(i, i + id.length()).equals(id)) {\n                if ((i + id.length() == str.length()) || Character.isWhitespace(str.charAt(i + id.length())) || str.charAt(i + id.length()) == '/') {\n                    bucket.setZone(DateTimeZone.forID(id));\n                    return i + position + id.length();\n                }\n            }\n        }\n    }\n    return ~position;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex 558a5864..91d4a077 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2537,17 +2537,22 @@ public class DateTimeFormatterBuilder {\n             return MAX_LENGTH;\n         }\n \n-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n-            String str = text.substring(position);\n-            for (String id : ALL_IDS) {\n-                if (str.startsWith(id)) {\n+public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n+    String str = text.substring(position);\n+    for (String id : ALL_IDS) {\n+        boolean matchFound = false;\n+        for (int i = 0; i < str.length() - id.length() + 1; i++) {\n+            if (str.substring(i, i + id.length()).equals(id)) {\n+                if ((i + id.length() == str.length()) || Character.isWhitespace(str.charAt(i + id.length())) || str.charAt(i + id.length()) == '/') {\n                     bucket.setZone(DateTimeZone.forID(id));\n-                    return position + id.length();\n+                    return i + position + id.length();\n                 }\n             }\n-            return ~position;\n         }\n     }\n+    return ~position;\n+}\n+    }\n \n     //-----------------------------------------------------------------------\n     static class Composite",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}