{
    "patch": "                    // gap is between instantLocal - offsetAdjusted and nextAdjusted\n                    // calculate instantLocal + overlap to get to next valid instant\n                    int offsetOverlap = getOffset(nextAdjusted);\n                    if (offsetAdjusted != offsetOverlap) {\n                        nextAdjusted -= offsetAdjusted - offsetOverlap;\n                    }\n                    return getOffset(nextAdjusted);\n                }\n                return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..39531d8c 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                    // gap is between instantLocal - offsetAdjusted and nextAdjusted\n+                    // calculate instantLocal + overlap to get to next valid instant\n+                    int offsetOverlap = getOffset(nextAdjusted);\n+                    if (offsetAdjusted != offsetOverlap) {\n+                        nextAdjusted -= offsetAdjusted - offsetOverlap;\n+                    }\n+                    return getOffset(nextAdjusted);\n+                }\n+                return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}