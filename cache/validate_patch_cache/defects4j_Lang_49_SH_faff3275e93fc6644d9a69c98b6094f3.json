{
    "patch": "public Fraction reduce() {\n    int num = numerator;\n    int den = denominator;\n    if (num == 0) {\n        return getZero();\n    } else {\n        int gcd = greatestCommonDivisor(Math.abs(num), den);\n        num /= gcd;\n        den /= gcd;\n        if (den < 0) {\n            num = -num;\n            den = -den;\n        }\n        return getFraction(num, den);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..5286e5b2 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,22 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+public Fraction reduce() {\n+    int num = numerator;\n+    int den = denominator;\n+    if (num == 0) {\n+        return getZero();\n+    } else {\n+        int gcd = greatestCommonDivisor(Math.abs(num), den);\n+        num /= gcd;\n+        den /= gcd;\n+        if (den < 0) {\n+            num = -num;\n+            den = -den;\n+        }\n+        return getFraction(num, den);\n+    }\n+}\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}