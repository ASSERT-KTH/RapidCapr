{
    "patch": "double p;\nif (Double.isNaN(t) || Double.isInfinite(t)) {\n    p = Double.NaN;\n} else {\n    double absT = Math.abs(t);\n    p = 2 * tDistribution.cumulativeProbability(-absT);\n    if (Double.isNaN(p)) {\n        p = 0.0;\n    }\n}\nout[i][j] = p;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..0f39e65ed 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,17 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+double p;\n+if (Double.isNaN(t) || Double.isInfinite(t)) {\n+    p = Double.NaN;\n+} else {\n+    double absT = Math.abs(t);\n+    p = 2 * tDistribution.cumulativeProbability(-absT);\n+    if (Double.isNaN(p)) {\n+        p = 0.0;\n+    }\n+}\n+out[i][j] = p;\n                 }\n             }\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}