{
    "patch": "    Collection<String> unreferencedParameters = getUnreferencedParameters(function, referenced);\n    if (!unreferencedParameters.isEmpty()) {\n      Set<Node> parametersToRemove = new HashSet<>();\n      Node argList = getFunctionArgList(function);\n      for (String parameterName : unreferencedParameters) {\n        Node parameter = argList.getFirstChild();\n        Preconditions.checkNotNull(parameter, \"Argument to remove not found: %s for %s\", parameterName, function);\n        Preconditions.checkState(parameter.isName(), \"Not a parameter: %s for %s\", parameterName, function);\n        Preconditions.checkState(parameter.getString().equals(parameterName), \"Wrong parameter: %s != %s for %s\",\n            parameter.getString(), parameterName, function);\n        parametersToRemove.add(parameter);\n      }\n      for (Node paramToRemove : parametersToRemove) {\n        NodeUtil.removeNodeAt(argList, paramToRemove);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..7060a64c 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,22 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Collection<String> unreferencedParameters = getUnreferencedParameters(function, referenced);\n+    if (!unreferencedParameters.isEmpty()) {\n+      Set<Node> parametersToRemove = new HashSet<>();\n+      Node argList = getFunctionArgList(function);\n+      for (String parameterName : unreferencedParameters) {\n+        Node parameter = argList.getFirstChild();\n+        Preconditions.checkNotNull(parameter, \"Argument to remove not found: %s for %s\", parameterName, function);\n+        Preconditions.checkState(parameter.isName(), \"Not a parameter: %s for %s\", parameterName, function);\n+        Preconditions.checkState(parameter.getString().equals(parameterName), \"Wrong parameter: %s != %s for %s\",\n+            parameter.getString(), parameterName, function);\n+        parametersToRemove.add(parameter);\n+      }\n+      for (Node paramToRemove : parametersToRemove) {\n+        NodeUtil.removeNodeAt(argList, paramToRemove);\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}