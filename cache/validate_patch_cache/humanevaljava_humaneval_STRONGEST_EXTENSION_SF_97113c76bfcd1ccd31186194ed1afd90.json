{
    "patch": "public static String strongest_extension(String class_name, String[] extensions) {\n    String strong = null;\n    int val = Integer.MIN_VALUE;\n\n    for (String s : extensions) {\n        int CAP = 0;\n        int SM = 0;\n        for (char c : s.toCharArray()) {\n            if (Character.toUpperCase(c) == c) SM += 1;\n            if (Character.toLowerCase(c) == c) CAP += 1;\n        }\n        int current_val = CAP - SM;\n        if (current_val > val) {\n            val = current_val;\n            strong = s;\n        }\n    }\n    return class_name + \".\" + strong;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\nindex 7ff1563..1969c0c 100644\n--- a/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n+++ b/src/main/java/humaneval/buggy/STRONGEST_EXTENSION.java\n@@ -17,20 +17,23 @@ package humaneval.buggy;\n // for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n \n public class STRONGEST_EXTENSION {\n-    public static String strongest_extension(String class_name, String[] extensions) {\n-        String strong = null;\n-        int val = Integer.MIN_VALUE;\n+public static String strongest_extension(String class_name, String[] extensions) {\n+    String strong = null;\n+    int val = Integer.MIN_VALUE;\n \n-        for (String s : extensions) {\n-            int CAP = 0;\n-            int SM = 0;\n-            for (char c : s.toCharArray()) {\n-                if (Character.toUpperCase(c) == c) SM += 1;\n-                if (Character.toLowerCase(c) == c) CAP += 1;\n-            }\n-            val = CAP - SM;\n+    for (String s : extensions) {\n+        int CAP = 0;\n+        int SM = 0;\n+        for (char c : s.toCharArray()) {\n+            if (Character.toUpperCase(c) == c) SM += 1;\n+            if (Character.toLowerCase(c) == c) CAP += 1;\n+        }\n+        int current_val = CAP - SM;\n+        if (current_val > val) {\n+            val = current_val;\n             strong = s;\n         }\n-        return class_name + \".\" + strong;\n     }\n+    return class_name + \".\" + strong;\n+}\n }",
    "result_reason": "   TEST_STRONGEST_EXTENSION.test_0:9 expected:<Watashi.[niNE]> but was:<Watashi.[eIGHt8OKe]>",
    "test_result": "FAIL"
}