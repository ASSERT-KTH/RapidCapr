{
    "patch": "public class Program {\n    public static void main(String[] args) {\n        Program program = new Program();\n        program.testPrintInOperatorInForLoop();\n    }\n\n    public void testPrintInOperatorInForLoop() {\n        String[] d = {\"Hello\", \"world\"};\n        String expected = \"for(a = c ? 0 : (0 in d); ; ) {foo();}\";\n\n        String a;\n        boolean c;\n\n        c = true;\n        a = \"\";\n        for (int i = 0; i < d.length; i++) {\n            if (c) {\n                a = i + \"\";\n            } else {\n                a += d[i];\n            }\n        }\n\n        String result = \"for(a = c ? 0 : (\" + \"0 in d\" + \"); ; ) {\" + \"foo();\" + \"}\";\n        assertEquals(expected, result);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..ddc1f58f 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,33 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class Program {\n+    public static void main(String[] args) {\n+        Program program = new Program();\n+        program.testPrintInOperatorInForLoop();\n+    }\n+\n+    public void testPrintInOperatorInForLoop() {\n+        String[] d = {\"Hello\", \"world\"};\n+        String expected = \"for(a = c ? 0 : (0 in d); ; ) {foo();}\";\n+\n+        String a;\n+        boolean c;\n+\n+        c = true;\n+        a = \"\";\n+        for (int i = 0; i < d.length; i++) {\n+            if (c) {\n+                a = i + \"\";\n+            } else {\n+                a += d[i];\n+            }\n+        }\n+\n+        String result = \"for(a = c ? 0 : (\" + \"0 in d\" + \"); ; ) {\" + \"foo();\" + \"}\";\n+        assertEquals(expected, result);\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}