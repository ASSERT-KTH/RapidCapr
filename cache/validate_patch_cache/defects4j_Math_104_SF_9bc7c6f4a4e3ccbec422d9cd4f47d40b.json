{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double gammaValue = Gamma.gamma(a);\n    double summation = 0;\n    double term = Math.exp(-x) * Math.pow(x, a);\n    double previous = 0;\n    for (int n = 1; n < 1000; n++) {\n        summation += term;\n        if (summation == previous) {\n            break;\n        }\n        previous = summation;\n        term *= x / (a + n);\n    }\n    return summation / gammaValue;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..858dcea7f 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,21 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double gammaValue = Gamma.gamma(a);\n+    double summation = 0;\n+    double term = Math.exp(-x) * Math.pow(x, a);\n+    double previous = 0;\n+    for (int n = 1; n < 1000; n++) {\n+        summation += term;\n+        if (summation == previous) {\n+            break;\n+        }\n+        previous = summation;\n+        term *= x / (a + n);\n+    }\n+    return summation / gammaValue;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}