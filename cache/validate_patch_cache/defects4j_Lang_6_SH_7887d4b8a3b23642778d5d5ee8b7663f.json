{
    "patch": "            int pt = -1;\n            for (int i = 0; i < consumed; i++) {\n                if (i == 0) {\n                    pt = Character.codePointAt(input, pos);\n                }\n                char[] translated = translate(pt);\n                if (translated == null) {\n                    if (Character.charCount(pt) == 2) {\n                        i--;\n                    }\n                    char[] c = Character.toChars(pt);\n                    out.write(c);\n                } else {\n                    out.write(translated);\n                    if (Character.charCount(pt) == 2) {\n                        i++;\n                    }\n                }\n                if (i < consumed - 1) {\n                    pt = Character.codePointAt(input, pos + Character.charCount(pt));\n                }\n            }\n            pos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..4914b5b9 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,29 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+            int pt = -1;\n+            for (int i = 0; i < consumed; i++) {\n+                if (i == 0) {\n+                    pt = Character.codePointAt(input, pos);\n+                }\n+                char[] translated = translate(pt);\n+                if (translated == null) {\n+                    if (Character.charCount(pt) == 2) {\n+                        i--;\n+                    }\n+                    char[] c = Character.toChars(pt);\n+                    out.write(c);\n+                } else {\n+                    out.write(translated);\n+                    if (Character.charCount(pt) == 2) {\n+                        i++;\n+                    }\n+                }\n+                if (i < consumed - 1) {\n+                    pt = Character.codePointAt(input, pos + Character.charCount(pt));\n+                }\n+            }\n+            pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}