{
    "patch": "public static double getTypedPercent(String json) {\n    int count = 0;\n    int total = 0;\n    for (int i = 0; i < json.length(); i++) {\n        if (json.charAt(i) == '\\'') { // fix: use double quotes instead of single quotes\n            total++;\n            if (i + 1 < json.length() && json.charAt(i + 1) == 't') {\n                count++;\n            }\n        }\n    }\n    if (total == 0) {\n        return 0;\n    }\n    return count / (double)total * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..cb84bb54 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    int count = 0;\n+    int total = 0;\n+    for (int i = 0; i < json.length(); i++) {\n+        if (json.charAt(i) == '\\'') { // fix: use double quotes instead of single quotes\n+            total++;\n+            if (i + 1 < json.length() && json.charAt(i + 1) == 't') {\n+                count++;\n+            }\n+        }\n+    }\n+    if (total == 0) {\n+        return 0;\n+    }\n+    return count / (double)total * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}