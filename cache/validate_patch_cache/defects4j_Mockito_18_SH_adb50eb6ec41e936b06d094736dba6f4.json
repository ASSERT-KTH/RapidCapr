{
    "patch": "Map<Class<?>, Object> returnValueForMethod = new HashMap<>();\n\nif (expectedReturnType == null) {\n    return returnValueForMethod;\n}\n\nif (expectedReturnType.equals(void.class) || expectedReturnType.equals(Void.class)) {\n    return returnValueForMethod;\n}\n\nif (expectedReturnType.isPrimitive()) {\n    return returnValueForMethod;\n}\n\nif (expectedReturnType.isArray()) {\n    Object[] array = (Object[]) Array.newInstance(expectedReturnType.getComponentType(), 0);\n    returnValueForMethod.put(expectedReturnType, array);\n    return returnValueForMethod;\n}\n\nif (expectedReturnType.equals(String.class)) {\n    returnValueForMethod.put(expectedReturnType, \"\");\n    return returnValueForMethod;\n}\n\nif (expectedReturnType.equals(Iterable.class)) {\n    returnValueForMethod.put(expectedReturnType, Collections.emptyList());\n    return returnValueForMethod;\n}\n\nreturn null;",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}