{
    "patch": "public static boolean is_multiply_prime(int a) {\n    boolean flag = true;\n    for (int i = 2; i < a; i++) {\n        if (!is_prime(i))\n            continue;\n        for (int j = i; j < a; j++) {\n            if (!is_prime(j))\n                continue;\n            for (int k = j; k < a; k++) {\n                if (!is_prime(k))\n                    continue;\n                if (i * j * k == a) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (!flag)\n                break;\n        }\n        if (!flag)\n            break;\n    }\n    return !flag;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_MULTIPLY_PRIME.java b/src/main/java/humaneval/buggy/IS_MULTIPLY_PRIME.java\nindex 2fe6456..0c4bc75 100644\n--- a/src/main/java/humaneval/buggy/IS_MULTIPLY_PRIME.java\n+++ b/src/main/java/humaneval/buggy/IS_MULTIPLY_PRIME.java\n@@ -16,17 +16,28 @@ public class IS_MULTIPLY_PRIME {\n         return true;\n     }\n \n-    public static boolean is_multiply_prime(int a) {\n-        for (int i = 2; i < a; i += 1){\n-            if (! is_prime(i)) continue;\n-            for (int j = i; j < a; j += 1) {\n-                for (int k = j; k < a; j += 1) {\n-                    if (! is_prime(k)) continue;\n-                    if (i * j * k == a)\n-                        return true;\n+public static boolean is_multiply_prime(int a) {\n+    boolean flag = true;\n+    for (int i = 2; i < a; i++) {\n+        if (!is_prime(i))\n+            continue;\n+        for (int j = i; j < a; j++) {\n+            if (!is_prime(j))\n+                continue;\n+            for (int k = j; k < a; k++) {\n+                if (!is_prime(k))\n+                    continue;\n+                if (i * j * k == a) {\n+                    flag = false;\n+                    break;\n                 }\n             }\n+            if (!flag)\n+                break;\n         }\n-        return false;\n+        if (!flag)\n+            break;\n     }\n+    return !flag;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}