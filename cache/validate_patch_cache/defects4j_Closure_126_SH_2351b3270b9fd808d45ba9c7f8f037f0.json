{
    "patch": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock = n.getLastChild();\n  tryMinimizeExits(finallyBlock, exitType, labelName);\n  if (n.isTry()) {\n    Node tryBlock = n.getFirstChild();\n    tryMinimizeExits(tryBlock, exitType, labelName);\n    Node catchBlock = NodeUtil.getCatchBlock(n);\n    if (catchBlock != null) {\n      Preconditions.checkState(catchBlock.hasOneChild());\n      Node catchNode = catchBlock.getFirstChild();\n      Node catchCodeBlock = catchNode.getLastChild();\n      tryMinimizeExits(catchCodeBlock, exitType, labelName);\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..17368488 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,10 +138,21 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+if (NodeUtil.hasFinally(n)) {\n+  Node finallyBlock = n.getLastChild();\n+  tryMinimizeExits(finallyBlock, exitType, labelName);\n+  if (n.isTry()) {\n+    Node tryBlock = n.getFirstChild();\n+    tryMinimizeExits(tryBlock, exitType, labelName);\n+    Node catchBlock = NodeUtil.getCatchBlock(n);\n+    if (catchBlock != null) {\n+      Preconditions.checkState(catchBlock.hasOneChild());\n+      Node catchNode = catchBlock.getFirstChild();\n+      Node catchCodeBlock = catchNode.getLastChild();\n+      tryMinimizeExits(catchCodeBlock, exitType, labelName);\n+    }\n+  }\n+}\n     }\n \n     // Just a 'label'.",
    "result_reason": "error: variable tryBlock is already defined in method tryMinimizeExits(Node,int,String)",
    "test_result": "ERROR"
}