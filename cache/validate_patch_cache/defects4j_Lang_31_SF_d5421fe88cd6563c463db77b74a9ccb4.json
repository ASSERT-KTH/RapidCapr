{
    "patch": "public static boolean containsAny(char[] str, char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    for (char c : searchChars) {\n        int i = 0;\n        while ((i = ArrayUtils.indexOf(str, c, i)) != -1) {\n            if (Character.isHighSurrogate(str[i])) {\n                if (i < str.length - 1 && Character.isLowSurrogate(str[i + 1])) {\n                    i++;\n                } else {\n                    continue;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..87a8511e 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,25 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(char[] str, char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    for (char c : searchChars) {\n+        int i = 0;\n+        while ((i = ArrayUtils.indexOf(str, c, i)) != -1) {\n+            if (Character.isHighSurrogate(str[i])) {\n+                if (i < str.length - 1 && Character.isLowSurrogate(str[i + 1])) {\n+                    i++;\n+                } else {\n+                    continue;\n+                }\n+            }\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}