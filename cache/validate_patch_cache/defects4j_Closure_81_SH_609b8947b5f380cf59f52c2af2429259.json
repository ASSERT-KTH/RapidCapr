{
    "patch": "Node newName = null;\nif (name != null) {\n  newName = transform(name);\n} else {\n  // If there is no name, we create an empty one with a specific position.\n  // We use a zero-length identifier like Rhino does.\n  newName = Node.newString(Token.NAME, \"\", 0);\n  newName.setLength(0);\n  newName.setLineno(functionNode.getLineno());\n  newName.setCharno(functionNode.getJsDocNode().getAbsolutePosition());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..f837a414 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,17 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Node newName = null;\n+if (name != null) {\n+  newName = transform(name);\n+} else {\n+  // If there is no name, we create an empty one with a specific position.\n+  // We use a zero-length identifier like Rhino does.\n+  newName = Node.newString(Token.NAME, \"\", 0);\n+  newName.setLength(0);\n+  newName.setLineno(functionNode.getLineno());\n+  newName.setCharno(functionNode.getJsDocNode().getAbsolutePosition());\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: no suitable method found for newString(int,String,int)",
    "test_result": "ERROR"
}