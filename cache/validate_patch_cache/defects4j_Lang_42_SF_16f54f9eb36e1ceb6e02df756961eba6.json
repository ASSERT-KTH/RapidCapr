{
    "patch": "public void escape(Writer writer, String str) throws IOException {\n    int len = str.length();\n    for (int i = 0; i < len; i++) {\n        char c = str.charAt(i);\n        String entityName = this.entityName(c);\n        if (entityName == null) {\n            if (c >= 0xD800 && c < 0xDC00 && i + 1 < len && str.charAt(i + 1) >= 0xDC00 && str.charAt(i + 1) < 0xE000) {\n                // Handle surrogate pair\n                int codePoint = ((c - 0xD800) << 10) + (str.charAt(i + 1) - 0xDC00) + 0x10000;\n                writer.write(\"&#\");\n                writer.write(Integer.toString(codePoint, 10));\n                writer.write(';');\n                i++;\n            } else if (c >= 0xE000) {\n                // Handle characters outside of BMP\n                writer.write(\"&#\");\n                writer.write(Integer.toString(c, 10));\n                writer.write(';');\n            } else {\n                writer.write(c);\n            }\n        } else {\n            writer.write('&');\n            writer.write(entityName);\n            writer.write(';');\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java\nindex 900e1a89..6232b487 100644\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n@@ -822,26 +822,34 @@ class Entities {\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void escape(Writer writer, String str) throws IOException {\n-        int len = str.length();\n-        for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n-            String entityName = this.entityName(c);\n-            if (entityName == null) {\n-                if (c > 0x7F) {\n-                    writer.write(\"&#\");\n-                    writer.write(Integer.toString(c, 10));\n-                    writer.write(';');\n-                } else {\n-                    writer.write(c);\n-                }\n-            } else {\n-                writer.write('&');\n-                writer.write(entityName);\n+public void escape(Writer writer, String str) throws IOException {\n+    int len = str.length();\n+    for (int i = 0; i < len; i++) {\n+        char c = str.charAt(i);\n+        String entityName = this.entityName(c);\n+        if (entityName == null) {\n+            if (c >= 0xD800 && c < 0xDC00 && i + 1 < len && str.charAt(i + 1) >= 0xDC00 && str.charAt(i + 1) < 0xE000) {\n+                // Handle surrogate pair\n+                int codePoint = ((c - 0xD800) << 10) + (str.charAt(i + 1) - 0xDC00) + 0x10000;\n+                writer.write(\"&#\");\n+                writer.write(Integer.toString(codePoint, 10));\n+                writer.write(';');\n+                i++;\n+            } else if (c >= 0xE000) {\n+                // Handle characters outside of BMP\n+                writer.write(\"&#\");\n+                writer.write(Integer.toString(c, 10));\n                 writer.write(';');\n+            } else {\n+                writer.write(c);\n             }\n+        } else {\n+            writer.write('&');\n+            writer.write(entityName);\n+            writer.write(';');\n         }\n     }\n+}\n \n     /**\n      * <p>",
    "result_reason": "junit.framework.ComparisonFailure: languages expected:<...ish,Fran&ccedil;ais,[&#26085;&#26412;&#35486;] (nihongo)> but was:<...ish,Fran&ccedil;ais,[\u65e5\u672c\u8a9e] (nihongo)>",
    "test_result": "FAIL"
}