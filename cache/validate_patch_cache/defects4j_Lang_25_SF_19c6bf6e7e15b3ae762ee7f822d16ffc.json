{
    "patch": "public static String unescape(String s) {\n    StringBuffer sb = new StringBuffer(s.length());\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c == '\\\\') {\n            if (++i >= s.length()) {\n                throw new IllegalArgumentException(\n                    \"Invalid escape sequence in input\");\n            }\n            c = s.charAt(i);\n            switch (c) {\n            case 'r':\n                sb.append('\\r');\n                break;\n            case 'n':\n                sb.append('\\n');\n                break;\n            case 't':\n                sb.append('\\t');\n                break;\n            case 'f':\n                sb.append('\\f');\n                break;\n            case 'b':\n                sb.append('\\b');\n                break;\n            case '\"':\n                sb.append('\"');\n                break;\n            case '\\'':\n                sb.append('\\'');\n                break;\n            case '\\\\':\n                sb.append('\\\\');\n                break;\n            // Hex Unicode: u???? \n            case 'u':\n                int hexValue = 0;\n                for (int j = 0; j < 4; j++) {\n                    if (++i >= s.length()) {\n                        throw new IllegalArgumentException(\n                            \"Invalid unicode sequence in input\");\n                    }\n                    char hexChar = s.charAt(i);\n                    hexValue = (hexValue << 4) + hexToInt(hexChar);\n                }\n                sb.append((char)hexValue);\n                break;\n            default:\n                throw new IllegalArgumentException(\n                    \"Unrecognized escape character: '\\\\\" + c + \"'\");\n            }\n        } else {\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}\n\nprivate static int hexToInt(char ch) {\n    if ('0' <= ch && ch <= '9') {\n        return ch - '0';\n    } else if ('a' <= ch && ch <= 'f') {\n        return ch - 'a' + 10;\n    } else if ('A' <= ch && ch <= 'F') {\n        return ch - 'A' + 10;\n    } else {\n        throw new IllegalArgumentException(\"Invalid hex digit: \" + ch);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..87401051 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,76 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    StringBuffer sb = new StringBuffer(s.length());\n+    for (int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        if (c == '\\\\') {\n+            if (++i >= s.length()) {\n+                throw new IllegalArgumentException(\n+                    \"Invalid escape sequence in input\");\n+            }\n+            c = s.charAt(i);\n+            switch (c) {\n+            case 'r':\n+                sb.append('\\r');\n+                break;\n+            case 'n':\n+                sb.append('\\n');\n+                break;\n+            case 't':\n+                sb.append('\\t');\n+                break;\n+            case 'f':\n+                sb.append('\\f');\n+                break;\n+            case 'b':\n+                sb.append('\\b');\n+                break;\n+            case '\"':\n+                sb.append('\"');\n+                break;\n+            case '\\'':\n+                sb.append('\\'');\n+                break;\n+            case '\\\\':\n+                sb.append('\\\\');\n+                break;\n+            // Hex Unicode: u???? \n+            case 'u':\n+                int hexValue = 0;\n+                for (int j = 0; j < 4; j++) {\n+                    if (++i >= s.length()) {\n+                        throw new IllegalArgumentException(\n+                            \"Invalid unicode sequence in input\");\n+                    }\n+                    char hexChar = s.charAt(i);\n+                    hexValue = (hexValue << 4) + hexToInt(hexChar);\n+                }\n+                sb.append((char)hexValue);\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\n+                    \"Unrecognized escape character: '\\\\\" + c + \"'\");\n+            }\n+        } else {\n+            sb.append(c);\n+        }\n+    }\n+    return sb.toString();\n+}\n+\n+private static int hexToInt(char ch) {\n+    if ('0' <= ch && ch <= '9') {\n+        return ch - '0';\n+    } else if ('a' <= ch && ch <= 'f') {\n+        return ch - 'a' + 10;\n+    } else if ('A' <= ch && ch <= 'F') {\n+        return ch - 'A' + 10;\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid hex digit: \" + ch);\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}