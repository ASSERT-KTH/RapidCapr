{
    "patch": "StringBuilder decoded = new StringBuilder();\nfor (int i = 0; i < arr.length; i++) {\n    if (arr[i] == ESCAPE) {\n        if (i == arr.length - 1) {\n            throw new IllegalArgumentException(\"Invalid escape character: \" + arr[i]);\n        }\n        char nextChar = (char) arr[++i];\n        if (nextChar == 't') {\n            decoded.append('\\t');\n        } else if (nextChar == 'r') {\n            decoded.append('\\r');\n        } else if (nextChar == 'n') {\n            decoded.append('\\n');\n        } else if (nextChar == 'f') {\n            decoded.append('\\f');\n        } else if (nextChar == ESCAPE) {\n            decoded.append(ESCAPE);\n        } else if (nextChar == POLICY_PREFIX) {\n            decoded.append(POLICY_PREFIX);\n        } else if (nextChar == '_') {\n            decoded.append(' ');\n        } else if (nextChar == '=') {\n            decoded.append('=');\n        } else {\n            throw new IllegalArgumentException(\"Invalid escape character: \" + nextChar);\n        }\n    } else {\n        decoded.append((char) arr[i]);\n    }\n}\nreturn decoded.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}