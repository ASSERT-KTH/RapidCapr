{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n\n    int strLength = str.length();\n    int searchLength = searchChars.length;\n\n    if (searchLength == 0) {\n        return false;\n    }\n\n    for (int i = 0; i < strLength; i++) {\n        char ch = str.charAt(i);\n\n        if (Character.isHighSurrogate(ch) && i < strLength - 1) {\n\t  int codePoint = Character.toCodePoint(ch, str.charAt(++i));\n\t  for (int j = 0; j < searchLength; j++) {\n\t      if (Character.toChars(searchChars[j])[0] == ch && \n\t\t  Character.toChars(searchChars[j])[1] == str.charAt(i)) {\n\t\t  return true;\n\t      }\n\t      if (codePoint == searchChars[j]) {\n\t\t  return true;\n\t      }\n\t  }\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                if (ch == searchChars[j]) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..38f4d16f 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,42 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+\n+    int strLength = str.length();\n+    int searchLength = searchChars.length;\n+\n+    if (searchLength == 0) {\n+        return false;\n+    }\n+\n+    for (int i = 0; i < strLength; i++) {\n+        char ch = str.charAt(i);\n+\n+        if (Character.isHighSurrogate(ch) && i < strLength - 1) {\n+\t  int codePoint = Character.toCodePoint(ch, str.charAt(++i));\n+\t  for (int j = 0; j < searchLength; j++) {\n+\t      if (Character.toChars(searchChars[j])[0] == ch && \n+\t\t  Character.toChars(searchChars[j])[1] == str.charAt(i)) {\n+\t\t  return true;\n+\t      }\n+\t      if (codePoint == searchChars[j]) {\n+\t\t  return true;\n+\t      }\n+\t  }\n+        } else {\n+            for (int j = 0; j < searchLength; j++) {\n+                if (ch == searchChars[j]) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}