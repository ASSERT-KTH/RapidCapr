{
    "patch": "        long saveMillis = millis;\n        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n                if (i == 0 && savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                    DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n                    if (compareReverse(savedFields[i].iField.getDurationField(), weeks) < 0) {\n                        long instant = iChrono.weekyear().roundFloor(millis);\n                        if (instant < millis) {\n                            millis = instant;\n                            continue;\n                        }\n                    }\n                }\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }\n        \n        if (iZone == null) {\n            millis -= iOffset;\n        } else {\n            int offset = iZone.getOffsetFromLocal(millis);\n            millis -= offset;\n            if (offset != iZone.getOffset(millis)) {\n                String message =\n                    \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n                if (text != null) {\n                    message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n                }\n                throw new IllegalArgumentException(message);\n            }\n        }\n\n        if (savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n            try {\n                millis = setWeekYear(millis, iChrono.weekyear().get(saveMillis));\n            } catch (IllegalFieldValueException e) {\n                // okay, ignore and try the normal approach",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2b444306 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,48 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        long saveMillis = millis;\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].set(millis, resetFields);\n+                if (i == 0 && savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                    DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n+                    if (compareReverse(savedFields[i].iField.getDurationField(), weeks) < 0) {\n+                        long instant = iChrono.weekyear().roundFloor(millis);\n+                        if (instant < millis) {\n+                            millis = instant;\n+                            continue;\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n+        \n+        if (iZone == null) {\n+            millis -= iOffset;\n+        } else {\n+            int offset = iZone.getOffsetFromLocal(millis);\n+            millis -= offset;\n+            if (offset != iZone.getOffset(millis)) {\n+                String message =\n+                    \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n+                if (text != null) {\n+                    message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n+                }\n+                throw new IllegalArgumentException(message);\n+            }\n+        }\n+\n+        if (savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n+            try {\n+                millis = setWeekYear(millis, iChrono.weekyear().get(saveMillis));\n+            } catch (IllegalFieldValueException e) {\n+                // okay, ignore and try the normal approach\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}