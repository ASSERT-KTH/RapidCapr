{
    "patch": "public String fixCode(String code) {\n    code = code.replaceAll(\"\\\\[\\\\s*(\\\\d+)\\\\s*\\\\]\\\\s*in\\\\s*([a-zA-Z][a-zA-Z0-9_$]*)\", \"($2.contains($1))\");\n    code = code.replaceAll(\"for\\\\s*\\\\(\\\\s*([^:]*?)\\\\s*:\\\\s*([^)]+?)\\\\s*\\\\)(\\\\s*[\\\\{;])\", \"for ($1 : $2)$3\");\n    code = code.replaceAll(\"\\\\b(\\\\d*[.]?\\\\d+f?)\\\\s*in\\\\s*([a-zA-Z][a-zA-Z0-9_$]*)\", \"$2.contains($1)\");\n\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..78242163 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,13 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    code = code.replaceAll(\"\\\\[\\\\s*(\\\\d+)\\\\s*\\\\]\\\\s*in\\\\s*([a-zA-Z][a-zA-Z0-9_$]*)\", \"($2.contains($1))\");\n+    code = code.replaceAll(\"for\\\\s*\\\\(\\\\s*([^:]*?)\\\\s*:\\\\s*([^)]+?)\\\\s*\\\\)(\\\\s*[\\\\{;])\", \"for ($1 : $2)$3\");\n+    code = code.replaceAll(\"\\\\b(\\\\d*[.]?\\\\d+f?)\\\\s*in\\\\s*([a-zA-Z][a-zA-Z0-9_$]*)\", \"$2.contains($1)\");\n+\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}