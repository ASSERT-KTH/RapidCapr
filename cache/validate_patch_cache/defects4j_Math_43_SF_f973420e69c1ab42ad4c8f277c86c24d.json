{
    "patch": "public void addValue(double value) {\n    if (Double.isFinite(value)) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        n++;\n\n        double logValue;\n        if (value > 0) {\n            logValue = Math.log(value);\n            sumLogImpl.increment(logValue);\n            secondMoment.increment(value);\n            if (geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n                ((GeometricMean) geoMeanImpl).increment(value);\n            }\n        } else {\n            logValue = Double.NaN;\n            if (geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n                ((GeometricMean) geoMeanImpl).increment(Double.NaN);\n            }\n        }\n\n        if (meanImpl != null && !(meanImpl instanceof Mean)) {\n            if (Double.isNaN(logValue)) {\n                ((Mean) meanImpl).increment(0.0);\n            } else {\n                ((Mean) meanImpl).increment(value);\n            }\n        }\n\n        if (varianceImpl != null && !(varianceImpl instanceof Variance)) {\n            if (Double.isNaN(logValue)) {\n                ((Variance) varianceImpl).increment(0.0);\n            } else {\n                ((Variance) varianceImpl).increment(value);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..282a422fa 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,46 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n+    if (Double.isFinite(value)) {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n         maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+        n++;\n+\n+        double logValue;\n+        if (value > 0) {\n+            logValue = Math.log(value);\n+            sumLogImpl.increment(logValue);\n+            secondMoment.increment(value);\n+            if (geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n+                ((GeometricMean) geoMeanImpl).increment(value);\n+            }\n+        } else {\n+            logValue = Double.NaN;\n+            if (geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n+                ((GeometricMean) geoMeanImpl).increment(Double.NaN);\n+            }\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+\n+        if (meanImpl != null && !(meanImpl instanceof Mean)) {\n+            if (Double.isNaN(logValue)) {\n+                ((Mean) meanImpl).increment(0.0);\n+            } else {\n+                ((Mean) meanImpl).increment(value);\n+            }\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+\n+        if (varianceImpl != null && !(varianceImpl instanceof Variance)) {\n+            if (Double.isNaN(logValue)) {\n+                ((Variance) varianceImpl).increment(0.0);\n+            } else {\n+                ((Variance) varianceImpl).increment(value);\n+            }\n         }\n-        n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}