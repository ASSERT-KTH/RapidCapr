{
    "patch": "            if (savedFields[i].isSaved()) {\n                DurationFieldType type = savedFields[i].iFieldType;\n                int val = savedFields[i].iValue;\n                DateTimeField field = cachedField(type.getField(iChrono));\n                millis = field.set(millis, val);\n                continue;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..99a9bc65 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].isSaved()) {\n+                DurationFieldType type = savedFields[i].iFieldType;\n+                int val = savedFields[i].iValue;\n+                DateTimeField field = cachedField(type.getField(iChrono));\n+                millis = field.set(millis, val);\n+                continue;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}