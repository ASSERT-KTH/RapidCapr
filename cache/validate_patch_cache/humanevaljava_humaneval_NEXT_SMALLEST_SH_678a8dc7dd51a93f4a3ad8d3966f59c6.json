{
    "patch": "\n        int smallest = Integer.MAX_VALUE;\n        for (int n : lst) {\n            if (n < smallest) {\n                smallest = n;\n            }\n        }\n        int secondSmallest = Integer.MAX_VALUE;\n        for (int n : lst) {\n            if (n < secondSmallest && n > smallest) {\n                secondSmallest = n;\n            }\n        }\n        return secondSmallest == Integer.MAX_VALUE ? null : secondSmallest;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\nindex 7791efd..d6c4265 100644\n--- a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\n+++ b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\n@@ -13,7 +13,20 @@ next_smallest([1, 1]) == None */\n \n public class NEXT_SMALLEST {\n     public static Integer next_smallest(int[] lst) {\n-        List<Integer> numbers = new ArrayList<Integer>();\n+\n+        int smallest = Integer.MAX_VALUE;\n+        for (int n : lst) {\n+            if (n < smallest) {\n+                smallest = n;\n+            }\n+        }\n+        int secondSmallest = Integer.MAX_VALUE;\n+        for (int n : lst) {\n+            if (n < secondSmallest && n > smallest) {\n+                secondSmallest = n;\n+            }\n+        }\n+        return secondSmallest == Integer.MAX_VALUE ? null : secondSmallest;\n         for (Integer n : lst)\n             numbers.add(n);\n         Integer[] no_duplicate = numbers.toArray(new Integer[] {});",
    "result_reason": " /tmp/humaneval-NEXT_SMALLEST/src/main/java/humaneval/buggy/NEXT_SMALLEST.java:[31,13] cannot find symbol",
    "test_result": "ERROR"
}