{
    "patch": "                // We need to ensure that we always get the correct offset for the\n                // local time, not simply one that is valid for the instant.\n                // This happens naturally for positive offsets, but not for negative.\n                if (offsetLocal < 0 && getOffset(instantAdjusted - 1) >= 0) {\n                    return getOffset(instantAdjusted - 1);\n                }\n>>> [ INFILL ] <<<",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..2a50b9ee 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,13 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // We need to ensure that we always get the correct offset for the\n+                // local time, not simply one that is valid for the instant.\n+                // This happens naturally for positive offsets, but not for negative.\n+                if (offsetLocal < 0 && getOffset(instantAdjusted - 1) >= 0) {\n+                    return getOffset(instantAdjusted - 1);\n+                }\n+>>> [ INFILL ] <<<\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}