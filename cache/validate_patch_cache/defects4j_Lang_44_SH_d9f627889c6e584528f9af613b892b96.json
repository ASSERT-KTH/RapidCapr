{
    "patch": "public static Number createNumber(String val) throws NumberFormatException {\n    if (val == null) {\n        return null;\n    }\n    if (val.length() == 0) {\n        throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n    }\n    if (val.startsWith(\"--\")) {\n        // this is protection for poorness in java.lang.BigDecimal.\n        // it accepts this as a legal value, but it does not appear\n        // to be in specification of class. OS X Java parses it to\n        // a wrong value.\n        return null;\n    }\n    if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n        return createInteger(val);\n    }\n    char lastChar = val.charAt(val.length() - 1);\n    String mant;\n    String dec;\n    String exp;\n    int decPos = val.indexOf('.');\n    int expPos = val.indexOf('e') + val.indexOf('E') + 1;\n    if (val.length() == 1) {\n        char ch = val.charAt(0);\n        if (ch < '0' || ch > '9') {\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        }\n    }\n    // Rest of the code follows\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..0da568ca 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,37 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+public static Number createNumber(String val) throws NumberFormatException {\n+    if (val == null) {\n+        return null;\n+    }\n+    if (val.length() == 0) {\n+        throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n+    }\n+    if (val.startsWith(\"--\")) {\n+        // this is protection for poorness in java.lang.BigDecimal.\n+        // it accepts this as a legal value, but it does not appear\n+        // to be in specification of class. OS X Java parses it to\n+        // a wrong value.\n+        return null;\n+    }\n+    if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n+        return createInteger(val);\n+    }\n+    char lastChar = val.charAt(val.length() - 1);\n+    String mant;\n+    String dec;\n+    String exp;\n+    int decPos = val.indexOf('.');\n+    int expPos = val.indexOf('e') + val.indexOf('E') + 1;\n+    if (val.length() == 1) {\n+        char ch = val.charAt(0);\n+        if (ch < '0' || ch > '9') {\n+            throw new NumberFormatException(val + \" is not a valid number.\");\n+        }\n+    }\n+    // Rest of the code follows\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}