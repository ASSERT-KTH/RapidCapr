{
    "patch": "// add this import statement\nimport java.util.Arrays;\n\n// replace this block of code\n// decode the url\nfor(int i=0; i<inputURL.length(); i++) {\n    char ch = inputURL.charAt(i);\n    if(ch == '%') {\n        try {\n            byte[] octets = new byte[(inputURL.length()-i)/3];\n            int index=0;\n            do {\n                if(i+2 >= inputURL.length()) {\n                    throw new IllegalArgumentException(\"invalid URL encoding\");\n                }\n                octets[index++] = (byte)Integer.parseInt(inputURL.substring(i+1,i+3),16);\n                i+= 3;\n            } while(i<inputURL.length() && inputURL.charAt(i) == '%');\n            decoded.append(new String(octets, 0, index, \"ISO-8859-1\"));\n        } catch(NumberFormatException nfe) {\n            throw new IllegalArgumentException(\"invalid URL encoding\");\n        } catch(UnsupportedEncodingException uee) {\n            assert false;\n        }\n        if(i >= inputURL.length()) {\n            break;\n        }\n    }\n    if(ch == '+') {\n        ch = ' ';\n    }\n    decoded.append(ch);\n}\n\n// with this stream operation\nString[] octets = inputURL.split(\"%\");\nfor (int i = 1; i < octets.length; i++) {\n    final int index = i - 1;\n    String octet = octets[i].substring(0, 2);\n    char ch = (char) Integer.parseInt(octet, 16);\n    octets[index] = String.valueOf(ch) + octets[i].substring(2);\n}\nString decoded = String.join(\"\", octets);\ndecoded = decoded.replace(\"+\", \" \");\ndecoded = new String(decoded.getBytes(\"ISO-8859-1\"), \"ISO-8859-1\");",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}