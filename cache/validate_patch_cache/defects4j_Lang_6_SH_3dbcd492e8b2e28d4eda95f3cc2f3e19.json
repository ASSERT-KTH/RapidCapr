{
    "patch": "int consumedCharCount;\nif (codepoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {\n    char[] chrs = { (char) codepoint };\n    consumedCharCount = translate(chrs, 0, 1, out);\n} else {\n    char[] chrs = Character.toChars(codepoint);\n    consumedCharCount = translate(chrs, 0, chrs.length, out);\n}\nif (consumedCharCount == 0) {\n    out.write(codepoint == ESCAPE_CSV_DELIMITER_CHAR ? ESCAPE_CSV_DELIMITER : replacementChar);\n    consumedCharCount = codepoint >= Character.MIN_SUPPLEMENTARY_CODE_POINT ? 2 : 1;\n}\npos += consumedCharCount;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..a61b71d9 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,19 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+int consumedCharCount;\n+if (codepoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {\n+    char[] chrs = { (char) codepoint };\n+    consumedCharCount = translate(chrs, 0, 1, out);\n+} else {\n+    char[] chrs = Character.toChars(codepoint);\n+    consumedCharCount = translate(chrs, 0, chrs.length, out);\n+}\n+if (consumedCharCount == 0) {\n+    out.write(codepoint == ESCAPE_CSV_DELIMITER_CHAR ? ESCAPE_CSV_DELIMITER : replacementChar);\n+    consumedCharCount = codepoint >= Character.MIN_SUPPLEMENTARY_CODE_POINT ? 2 : 1;\n+}\n+pos += consumedCharCount;\n             }\n         }\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}