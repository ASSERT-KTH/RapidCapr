{
    "patch": "public static boolean pairs_sum_to_zero(List<Integer> l) {\n    Set<Integer> set = new HashSet<>();\n    for (int i = 0; i < l.size(); i++) {\n        int num = l.get(i);\n        if (set.contains(-num)) {\n            return true;\n        }\n        set.add(num);\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java b/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java\nindex 7e806b9..abb6955 100644\n--- a/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java\n+++ b/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java\n@@ -7,13 +7,15 @@ it returns True if there are two distinct elements in the list that\n sum to zero, and False otherwise. */\n \n public class PAIRS_SUM_TO_ZERO {\n-    public static boolean pairs_sum_to_zero(List<Integer> l) {\n-        for (int i = 0; i < l.size(); i += 1) {\n-            for (int j = 0; j < l.size(); j += 1){\n-                if (l.get(i) + l.get(j) == 0)\n-                    return true;\n-            }\n+public static boolean pairs_sum_to_zero(List<Integer> l) {\n+    Set<Integer> set = new HashSet<>();\n+    for (int i = 0; i < l.size(); i++) {\n+        int num = l.get(i);\n+        if (set.contains(-num)) {\n+            return true;\n         }\n-        return false;\n+        set.add(num);\n     }\n+    return false;\n+}\n }",
    "result_reason": " /tmp/humaneval-PAIRS_SUM_TO_ZERO/src/main/java/humaneval/buggy/PAIRS_SUM_TO_ZERO.java:[11,5] cannot find symbol",
    "test_result": "ERROR"
}