{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n                if (millis < 0) {\n                    throw new IllegalFieldValueException(savedFields[i].iField.getType(), Long.valueOf(millis), null, null);\n                }\n            }\n            // Added code start\n            if (text == null && \n                    DateTimeFieldType.weekyear().getField(iChrono).get(millis) < 1) {\n                throw new IllegalFieldValueException(\n                        DateTimeFieldType.weekyear().getField(iChrono),\n                        Long.valueOf(DateTimeFieldType.weekyear().getField(iChrono).get(millis)),\n                        null, null\n                        );\n            }\n            // Added code end\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c3e12f4b 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,29 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].set(millis, resetFields);\n+                if (millis < 0) {\n+                    throw new IllegalFieldValueException(savedFields[i].iField.getType(), Long.valueOf(millis), null, null);\n+                }\n+            }\n+            // Added code start\n+            if (text == null && \n+                    DateTimeFieldType.weekyear().getField(iChrono).get(millis) < 1) {\n+                throw new IllegalFieldValueException(\n+                        DateTimeFieldType.weekyear().getField(iChrono),\n+                        Long.valueOf(DateTimeFieldType.weekyear().getField(iChrono).get(millis)),\n+                        null, null\n+                        );\n+            }\n+            // Added code end\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: no suitable constructor found for IllegalFieldValueException(DateTimeField,Long,<null>,<null>)",
    "test_result": "ERROR"
}