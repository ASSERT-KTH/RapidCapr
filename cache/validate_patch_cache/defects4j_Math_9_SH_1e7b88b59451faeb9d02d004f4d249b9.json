{
    "patch": "        final Vector3D newOrigin;\n        if (direction.getNorm() == 0) {\n            newOrigin = zero;\n        } else {\n            newOrigin = zero.add(direction.normalize());\n        }\n        final Line reverted = new Line(newOrigin, direction.negate().normalize());\n        return reverted;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..096ea25c2 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,14 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+        final Vector3D newOrigin;\n+        if (direction.getNorm() == 0) {\n+            newOrigin = zero;\n+        } else {\n+            newOrigin = zero.add(direction.normalize());\n+        }\n+        final Line reverted = new Line(newOrigin, direction.negate().normalize());\n+        return reverted;\n         return reverted;\n     }\n ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}