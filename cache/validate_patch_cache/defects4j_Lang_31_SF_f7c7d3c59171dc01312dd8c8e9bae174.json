{
    "patch": "public static boolean containsAny(char[] arr, char[] searchChars) {\n\n   if (arr == null || searchChars == null) {\n        return false;\n   }\n\n   int arrLength = arr.length;\n   int searchLength = searchChars.length;\n   int arrEnd = arrLength - 1;\n   int searchEnd = searchLength - 1;\n\n   for (int i = 0; i < arrLength; i++) {\n        char ch = arr[i];\n        for (int j = 0; j < searchLength; j++) {\n            if (searchChars[j] == ch) {\n                if (Character.isHighSurrogate(ch)) {\n                    if (j == searchEnd) {\n                        return false;\n                    }\n                    if (i < arrEnd && searchChars[j + 1] == arr[i + 1]) {\n                        return true;\n                    }\n                } else {\n                    return true;\n                }\n            }\n        }\n   }\n   return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..a64156ff 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,36 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(char[] arr, char[] searchChars) {\n+\n+   if (arr == null || searchChars == null) {\n+        return false;\n+   }\n+\n+   int arrLength = arr.length;\n+   int searchLength = searchChars.length;\n+   int arrEnd = arrLength - 1;\n+   int searchEnd = searchLength - 1;\n+\n+   for (int i = 0; i < arrLength; i++) {\n+        char ch = arr[i];\n+        for (int j = 0; j < searchLength; j++) {\n+            if (searchChars[j] == ch) {\n+                if (Character.isHighSurrogate(ch)) {\n+                    if (j == searchEnd) {\n+                        return false;\n+                    }\n+                    if (i < arrEnd && searchChars[j + 1] == arr[i + 1]) {\n+                        return true;\n+                    }\n+                } else {\n+                    return true;\n+                }\n+            }\n+        }\n+   }\n+   return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}