{
    "patch": "public Fraction reduce() {\n        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        int newNumerator = numerator, newDenominator = denominator;\n        if (gcd != 0) {\n            newNumerator = numerator / gcd;\n            newDenominator = denominator / gcd;\n        }\n        return new Fraction(newNumerator, newDenominator);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..9f686c65 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,12 +462,14 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n+public Fraction reduce() {\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n+        int newNumerator = numerator, newDenominator = denominator;\n+        if (gcd != 0) {\n+            newNumerator = numerator / gcd;\n+            newDenominator = denominator / gcd;\n         }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        return new Fraction(newNumerator, newDenominator);\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<-2/3> was not:<-2/3>",
    "test_result": "FAIL"
}