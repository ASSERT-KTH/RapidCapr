{
    "patch": "    boolean noType = isNoType();\n    boolean noObjectType = isNoObjectType();\n    boolean noResolvedType = isNoResolvedType();\n    boolean unionType = isUnionType();\n    boolean voidType = isVoidType();\n\n    boolean isEmpty = noType || noObjectType || noResolvedType;\n    isEmpty |= unionType && noType && noObjectType && noResolvedType;\n    isEmpty |= voidType && noType && isNoResolvedType();\n\n    return isEmpty;",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..3a48af0e 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,17 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+    boolean noType = isNoType();\n+    boolean noObjectType = isNoObjectType();\n+    boolean noResolvedType = isNoResolvedType();\n+    boolean unionType = isUnionType();\n+    boolean voidType = isVoidType();\n+\n+    boolean isEmpty = noType || noObjectType || noResolvedType;\n+    isEmpty |= unionType && noType && noObjectType && noResolvedType;\n+    isEmpty |= voidType && noType && isNoResolvedType();\n+\n+    return isEmpty;\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "junit.framework.AssertionFailedError: expected a warning",
    "test_result": "FAIL"
}