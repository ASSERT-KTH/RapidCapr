{
    "patch": "public static double getTypedPercent(JSONObject json) {\n    int total = 0;\n    int typed = 0;\n    JSONArray questions = json.getJSONArray(\"questions\");\n\n    for (int i = 0; i < questions.length(); i++) {\n        JSONObject question = questions.getJSONObject(i);\n        total++;\n\n        if (question.has(\"answer\") && !question.isNull(\"answer\")) {\n            typed++;\n        }\n    }\n\n    return (double) typed / total * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..5940c06a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject json) {\n+    int total = 0;\n+    int typed = 0;\n+    JSONArray questions = json.getJSONArray(\"questions\");\n+\n+    for (int i = 0; i < questions.length(); i++) {\n+        JSONObject question = questions.getJSONObject(i);\n+        total++;\n+\n+        if (question.has(\"answer\") && !question.isNull(\"answer\")) {\n+            typed++;\n+        }\n+    }\n+\n+    return (double) typed / total * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}