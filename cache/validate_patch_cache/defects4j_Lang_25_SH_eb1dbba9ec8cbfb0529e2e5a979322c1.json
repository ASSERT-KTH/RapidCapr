{
    "patch": "byte[] encoded = new byte[decoded.length];\nfor (int i = 0; i < decoded.length; i++) {\n    if (decoded[i] == escape) {\n        if (++i >= decoded.length) {\n            throw new IllegalArgumentException(\"Invalid escape sequence at index \" + (i - 1));\n        }\n        switch (decoded[i]) {\n            case 'A': encoded[i] = ISO8859_1_ESCAPE_A; break;\n            case 'B': encoded[i] = ISO8859_1_ESCAPE_B; break;\n            case 'C': encoded[i] = ISO8859_1_ESCAPE_C; break;\n            case 'D': encoded[i] = ISO8859_1_ESCAPE_D; break;\n            case 'E': encoded[i] = ISO8859_1_ESCAPE_E; break;\n            case 'F': encoded[i] = ISO8859_1_ESCAPE_F; break;\n            default: encoded[i] = decoded[i]; break;\n        }\n    } else {\n        encoded[i] = decoded[i];\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}