{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    if ((offsetLocal - offsetAdjusted) < 0) {\n        // moving closer to a DST transition\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            int checkOffset = getOffset(nextAdjusted);\n            if (checkOffset == offsetAdjusted) {\n                return offsetAdjusted;\n            } else if (checkOffset > offsetAdjusted) {\n                // it's a gap transition\n                return offsetLocal;\n            } else {\n                // it's an overlap transition, continue iterating\n                long next = nextAdjusted;\n                while (checkOffset < offsetAdjusted) {\n                    next = nextTransition(next);\n                    checkOffset = getOffset(next);\n                }\n                if (checkOffset > offsetAdjusted) {\n                    // it's a gap transition\n                    return offsetLocal;\n                }\n                return offsetAdjusted;\n            }\n        }\n    } else {\n        // moving away from a DST transition\n        long prevLocal = previousTransition(instantAdjusted);\n        long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n        if (prevLocal != prevAdjusted) {\n            int checkOffset = getOffset(prevAdjusted);\n            if (checkOffset == offsetLocal) {\n                return offsetLocal;\n            } else if (checkOffset < offsetLocal) {\n                // it's an overlap transition\n                return offsetLocal;\n            } else {\n                // it's a gap transition, continue iterating\n                long prev = prevAdjusted;\n                while (checkOffset > offsetLocal) {\n                    prev = previousTransition(prev - 1);\n                    checkOffset = getOffset(prev);\n                }\n                return getOffset(prev);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8d945cef 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,55 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    if ((offsetLocal - offsetAdjusted) < 0) {\n+        // moving closer to a DST transition\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            int checkOffset = getOffset(nextAdjusted);\n+            if (checkOffset == offsetAdjusted) {\n+                return offsetAdjusted;\n+            } else if (checkOffset > offsetAdjusted) {\n+                // it's a gap transition\n+                return offsetLocal;\n+            } else {\n+                // it's an overlap transition, continue iterating\n+                long next = nextAdjusted;\n+                while (checkOffset < offsetAdjusted) {\n+                    next = nextTransition(next);\n+                    checkOffset = getOffset(next);\n+                }\n+                if (checkOffset > offsetAdjusted) {\n+                    // it's a gap transition\n+                    return offsetLocal;\n+                }\n+                return offsetAdjusted;\n+            }\n+        }\n+    } else {\n+        // moving away from a DST transition\n+        long prevLocal = previousTransition(instantAdjusted);\n+        long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+        if (prevLocal != prevAdjusted) {\n+            int checkOffset = getOffset(prevAdjusted);\n+            if (checkOffset == offsetLocal) {\n+                return offsetLocal;\n+            } else if (checkOffset < offsetLocal) {\n+                // it's an overlap transition\n+                return offsetLocal;\n+            } else {\n+                // it's a gap transition, continue iterating\n+                long prev = prevAdjusted;\n+                while (checkOffset > offsetLocal) {\n+                    prev = previousTransition(prev - 1);\n+                    checkOffset = getOffset(prev);\n+                }\n+                return getOffset(prev);\n+            }\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}