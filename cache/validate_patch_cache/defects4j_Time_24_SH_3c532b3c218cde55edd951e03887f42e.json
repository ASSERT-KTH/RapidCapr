{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n            }\n        } catch (IllegalFieldValueException e) {\n            SavedField problematicField = savedFields[e.getFieldIndex()];\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n            }\n            String fieldName = problematicField.iField.getName();\n            e.prependMessage(\"The value of the field '\" + fieldName + \"' is \"\n                    + problematicField.getValue() + \" but it is not allowed.\");\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b6f8e4b1 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,20 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].set(millis, resetFields);\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            SavedField problematicField = savedFields[e.getFieldIndex()];\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n+            }\n+            String fieldName = problematicField.iField.getName();\n+            e.prependMessage(\"The value of the field '\" + fieldName + \"' is \"\n+                    + problematicField.getValue() + \" but it is not allowed.\");\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}