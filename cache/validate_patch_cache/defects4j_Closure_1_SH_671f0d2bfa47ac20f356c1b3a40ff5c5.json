{
    "patch": "    // Remove any default values for parameters removed in the last step.\n    for (Node arg : argList.children()) {\n      String argName = arg.getString();\n      if (!referenced.contains(fnScope.getVar(argName))) {\n        Node defaultValue = arg.getFirstChild();\n        if (defaultValue != null) {\n          arg.removeChild(defaultValue);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..8259dce9 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,13 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Remove any default values for parameters removed in the last step.\n+    for (Node arg : argList.children()) {\n+      String argName = arg.getString();\n+      if (!referenced.contains(fnScope.getVar(argName))) {\n+        Node defaultValue = arg.getFirstChild();\n+        if (defaultValue != null) {\n+          arg.removeChild(defaultValue);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}