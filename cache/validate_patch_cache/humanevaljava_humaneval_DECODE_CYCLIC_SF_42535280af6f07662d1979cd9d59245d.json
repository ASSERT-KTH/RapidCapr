{
    "patch": "class Cyclic {\n    String encode_cyclic(String s) {\n        if (s.isEmpty()) {\n            return \"\";\n        }\n\n        StringBuilder result = new StringBuilder();\n        int n = s.length();\n        int i = 0;\n        while (i < n) {\n            int j = Math.min(i + 3, n);\n            String group = s.substring(i, j);\n            if (group.length() < 3) {\n                group = group + \" \".repeat(3 - group.length());\n            }\n            result.append(group.charAt(1)).append(group.charAt(2)).append(group.charAt(0));\n            i +",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..ec91e26 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -4,27 +4,23 @@ import java.util.ArrayList;\n \n public class DECODE_CYCLIC {\n     public static String decode_cyclic(String str) {\n-        class Cyclic {\n-            String encode_cyclic(String s) {\n-                ArrayList<String> groups = new ArrayList<String>();\n-\n-                for (int i = 0; i < s.length(); i += 3){\n-                    groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n-                }\n-                int remain = s.length() % 3;\n-                \n-                String result = \"\";\n-                for (String group : groups){\n-                    result += group.substring(1) + group.substring(0, 1);\n-                }\n-\n-                if (remain > 0){\n-                    result += s.substring(s.length() - remain);\n-                }\n+class Cyclic {\n+    String encode_cyclic(String s) {\n+        if (s.isEmpty()) {\n+            return \"\";\n+        }\n \n-                return result;\n+        StringBuilder result = new StringBuilder();\n+        int n = s.length();\n+        int i = 0;\n+        while (i < n) {\n+            int j = Math.min(i + 3, n);\n+            String group = s.substring(i, j);\n+            if (group.length() < 3) {\n+                group = group + \" \".repeat(3 - group.length());\n             }\n-        }\n+            result.append(group.charAt(1)).append(group.charAt(2)).append(group.charAt(0));\n+            i +\n         \n         final Cyclic cyclic = new Cyclic();\n         return cyclic.encode_cyclic(cyclic.encode_cyclic(str));",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[25,9] illegal start of expression",
    "test_result": "ERROR"
}