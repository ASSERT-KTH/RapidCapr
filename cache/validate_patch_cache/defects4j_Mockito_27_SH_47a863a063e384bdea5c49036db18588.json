{
    "patch": "public <T> void resetMock(T mock) {\n     MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n     MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\n     MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, ((MockitoCore)mockitoCore).getDefaultAnswer());\n     Enhancer enhancer = new Enhancer();\n     enhancer.setSuperclass(mock.getClass());\n     enhancer.setInterfaces(new Class[] {Factory.class});\n     enhancer.setCallback(newFilter);\n     T newMock = (T) enhancer.create();\n     Whitebox.setInternalState(newMock, \"mockitoInterceptorHandler\", newMockHandler);\n     Whitebox.setInternalState(newMock, \"__mockito_interface_callback\", newFilter);\n     copyParentMockSettings(mock, newMock);\n     resetMock(mock, newMock);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..1d174269e 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,23 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+public <T> void resetMock(T mock) {\n+     MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+     MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);\n+     MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, ((MockitoCore)mockitoCore).getDefaultAnswer());\n+     Enhancer enhancer = new Enhancer();\n+     enhancer.setSuperclass(mock.getClass());\n+     enhancer.setInterfaces(new Class[] {Factory.class});\n+     enhancer.setCallback(newFilter);\n+     T newMock = (T) enhancer.create();\n+     Whitebox.setInternalState(newMock, \"mockitoInterceptorHandler\", newMockHandler);\n+     Whitebox.setInternalState(newMock, \"__mockito_interface_callback\", newFilter);\n+     copyParentMockSettings(mock, newMock);\n+     resetMock(mock, newMock);\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}