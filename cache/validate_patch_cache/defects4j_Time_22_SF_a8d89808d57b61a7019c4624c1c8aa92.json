{
    "patch": "        if (duration >= DateTimeConstants.MILLIS_PER_WEEK) {\n            this.weeks = (int) (duration / DateTimeConstants.MILLIS_PER_WEEK);\n            duration -= this.weeks * DateTimeConstants.MILLIS_PER_WEEK;\n        } else {\n            this.weeks = 0;\n        }\n        // bug [3264409]\n        super(duration, null, null);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..81618b67 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,14 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n+        if (duration >= DateTimeConstants.MILLIS_PER_WEEK) {\n+            this.weeks = (int) (duration / DateTimeConstants.MILLIS_PER_WEEK);\n+            duration -= this.weeks * DateTimeConstants.MILLIS_PER_WEEK;\n+        } else {\n+            this.weeks = 0;\n+        }\n         // bug [3264409]\n-    }\n+        super(duration, null, null);\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}