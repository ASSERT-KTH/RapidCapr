{
    "patch": "    // Strip unreferenced args off the end of the function declaration.\n    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n        // The parameters object literal setters can not be removed.\n        return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    int argCount = argList.getChildCount();\n    int deleteCount = 0;\n    for (int i = 0; i < argCount; i++) {\n        Node arg = argList.getChildAtIndex(i - deleteCount);\n        String argName = arg.getString();\n        Var var = fnScope.getVar(argName);\n        if (!referenced.contains(var)) {\n            argList.removeChild(arg);\n            deleteCount++;\n            compiler.reportCodeChange();\n            if (deleteCount == argCount) {\n                // All arguments have been deleted.\n                break;\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..c8422e70 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,31 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Strip unreferenced args off the end of the function declaration.\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+        // The parameters object literal setters can not be removed.\n+        return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    int argCount = argList.getChildCount();\n+    int deleteCount = 0;\n+    for (int i = 0; i < argCount; i++) {\n+        Node arg = argList.getChildAtIndex(i - deleteCount);\n+        String argName = arg.getString();\n+        Var var = fnScope.getVar(argName);\n+        if (!referenced.contains(var)) {\n+            argList.removeChild(arg);\n+            deleteCount++;\n+            compiler.reportCodeChange();\n+            if (deleteCount == argCount) {\n+                // All arguments have been deleted.\n+                break;\n+            }\n+        }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}