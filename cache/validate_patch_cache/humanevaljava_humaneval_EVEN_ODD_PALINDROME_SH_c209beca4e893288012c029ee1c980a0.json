{
    "patch": "            boolean is_even = (i % 2 == 0);\n            boolean is_palindrome = is_palindrome(i);\n            if (is_palindrome && is_even) {\n                even_palindrome_count++;\n            } else if (is_palindrome && !is_even) {\n                odd_palindrome_count++;\n            }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java b/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java\nindex 1ef65fc..151b148 100644\n--- a/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java\n+++ b/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java\n@@ -39,10 +39,15 @@ public class EVEN_ODD_PALINDROME {\n     public static ArrayList<Integer> even_odd_palindrome(int n) {\n         int even_palindrome_count = 0, odd_palindrome_count = 0;\n         for(int i = 1; i <= n; i++) {\n-            if((i % 2) == 0 && is_palindrome(i)) odd_palindrome_count--;\n-            else if((i % 2) == 1 && is_palindrome(i)) even_palindrome_count--;\n+            boolean is_even = (i % 2 == 0);\n+            boolean is_palindrome = is_palindrome(i);\n+            if (is_palindrome && is_even) {\n+                even_palindrome_count++;\n+            } else if (is_palindrome && !is_even) {\n+                odd_palindrome_count++;\n+            }\n         }\n         ArrayList<Integer> result = new ArrayList<>(Arrays.asList(even_palindrome_count, odd_palindrome_count));\n         return result;\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}