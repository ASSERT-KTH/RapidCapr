{
    "patch": "private static String escape(String str, String chars) {\n    StringBuffer retval = new StringBuffer();\n    int len = str.length();\n    boolean[] charSet = new boolean[256];\n    for (int i = 0; i < chars.length(); i++) {\n        charSet[chars.charAt(i)] = true;\n    }\n    for (int i = 0; i < len; i++) {\n        char ch = str.charAt(i);\n        if (ch < 256 && charSet[ch]) {\n            retval.append('%');\n            if (ch < 16) {\n                retval.append('0');\n            }\n            retval.append(Integer.toString(ch, 16));\n        } else {\n            retval.append(ch);\n        }\n    }\n    return retval.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}