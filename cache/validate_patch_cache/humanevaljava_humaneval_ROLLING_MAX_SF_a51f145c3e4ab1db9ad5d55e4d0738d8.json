{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    if(numbers == null) {\n        return null;\n    }\n    List<Integer> result = new ArrayList<>();\n    Integer runningMax = null;\n    for(int i = 0; i < numbers.size(); i++) {\n        final Integer current = numbers.get(i);\n        if(current == null) {\n            continue;\n        }\n        if(runningMax == null || current > runningMax) {\n            runningMax = current;\n        }\n        result.add(runningMax);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..7690b19 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,22 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n-\n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    if(numbers == null) {\n+        return null;\n+    }\n+    List<Integer> result = new ArrayList<>();\n+    Integer runningMax = null;\n+    for(int i = 0; i < numbers.size(); i++) {\n+        final Integer current = numbers.get(i);\n+        if(current == null) {\n+            continue;\n         }\n-        return result;\n+        if(runningMax == null || current > runningMax) {\n+            runningMax = current;\n+        }\n+        result.add(runningMax);\n     }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}