{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (n.isFromExterns()) {\n        return false;\n      }\n\n      Node nameNode = n.getFirstChild();\n      if (nameNode != null && isPrototypeProperty(nameNode)) {\n        return false;\n      }\n\n      Node next = nameNode.getNext();\n      if (next != null && next.getType() == Token.GETPROP &&\n          next.getLastChild().getString().equals(\"prototype\")) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..17646d71 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,21 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (n.isFromExterns()) {\n+        return false;\n+      }\n+\n+      Node nameNode = n.getFirstChild();\n+      if (nameNode != null && isPrototypeProperty(nameNode)) {\n+        return false;\n+      }\n+\n+      Node next = nameNode.getNext();\n+      if (next != null && next.getType() == Token.GETPROP &&\n+          next.getLastChild().getString().equals(\"prototype\")) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}