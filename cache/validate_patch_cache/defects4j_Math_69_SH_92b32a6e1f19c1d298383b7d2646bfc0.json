{
    "patch": "                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n                    if (Double.isNaN(out[i][j])) {\n                        throw new MathException(\"Failed to calculate correlation p-value due to NaN result.\");\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..3beab66fd 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -169,6 +169,9 @@ public class PearsonsCorrelation {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n                     out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+                    if (Double.isNaN(out[i][j])) {\n+                        throw new MathException(\"Failed to calculate correlation p-value due to NaN result.\");\n+                    }\n                 }\n             }\n         }",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}