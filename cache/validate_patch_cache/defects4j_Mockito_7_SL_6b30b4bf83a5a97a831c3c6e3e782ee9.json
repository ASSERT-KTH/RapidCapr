{
    "patch": "            if(typeVariable instanceof ParameterizedType) {\n                for(Type type : typeVariable.getBounds()) {\n                    registerTypeVariablesOn(type);\n                }\n                Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n                if(actualTypeArgument != null) {\n                    registerTypeVariablesOn(actualTypeArgument);\n                }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..8a61702b7 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,19 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+            if(typeVariable instanceof ParameterizedType) {\n+                for(Type type : typeVariable.getBounds()) {\n+                    registerTypeVariablesOn(type);\n+                }\n+                Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+                if(actualTypeArgument != null) {\n+                    registerTypeVariablesOn(actualTypeArgument);\n+                }\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}