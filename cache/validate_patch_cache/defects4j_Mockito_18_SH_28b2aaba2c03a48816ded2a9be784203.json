{
    "patch": "public ReturnValue execute(ExecutionEvent event) throws ExecutionException {\n    ISelection currentSelection = HandlerUtil.getCurrentSelection(event);\n    if (currentSelection == null || currentSelection.isEmpty())\n        return new ReturnValue(Status.OK_STATUS, \"\");\n\n    Object[] selectedObjects = ((StructuredSelection) currentSelection).toArray();\n    StringBuilder sb = new StringBuilder();\n\n    for (Object selectedObject : selectedObjects) {\n        if (selectedObject instanceof IAdaptable) {\n            Object adapter = ((IAdaptable) selectedObject).getAdapter(IFile.class);\n            if (adapter instanceof IFile) {\n                IFile file = (IFile) adapter;\n                sb.append(file.getName()).append(System.lineSeparator());\n            }\n        }\n    }\n\n    return new ReturnValue(Status.OK_STATUS, sb.toString());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}