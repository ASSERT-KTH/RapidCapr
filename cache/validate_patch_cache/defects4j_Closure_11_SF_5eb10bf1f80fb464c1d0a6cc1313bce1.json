{
    "patch": "private String getprop(String propertyName) {\n    Properties properties = System.getProperties();\n    String propertyValue = properties.getProperty(propertyName);\n    String[] warnings = this.logCapture.getWarnings();\n    if (warnings.length > 0) {\n        fail(\"Unexpected warning: \" + warnings[0]);\n    }\n    return propertyValue;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..d49c2a92 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+private String getprop(String propertyName) {\n+    Properties properties = System.getProperties();\n+    String propertyValue = properties.getProperty(propertyName);\n+    String[] warnings = this.logCapture.getWarnings();\n+    if (warnings.length > 0) {\n+        fail(\"Unexpected warning: \" + warnings[0]);\n+    }\n+    return propertyValue;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}