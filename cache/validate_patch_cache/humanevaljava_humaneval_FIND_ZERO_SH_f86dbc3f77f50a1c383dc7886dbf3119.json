{
    "patch": "        while (poly(xs, begin) * poly(xs, end) > 0) {\n            begin *= 2.;\n            end *= 2.;\n        }\n        \n        double mid;\n        while (end - begin > 1e-10) {\n            mid = (begin + end) / 2.;\n            if (poly(xs, mid) == 0.0) {\n                return mid;\n            }\n            if (poly(xs, begin) * poly(xs, mid) < 0) {\n                end = mid - 1e-10;\n            } else {\n                begin = mid + 1e-10;\n            }\n        }\n        return (begin + end) / 2;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..9b0f902 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -22,7 +22,24 @@ public class FIND_ZERO {\n         while (end - begin > 1e-10) {\n             double center = (begin + end) / 2.;\n             \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n+        while (poly(xs, begin) * poly(xs, end) > 0) {\n+            begin *= 2.;\n+            end *= 2.;\n+        }\n+        \n+        double mid;\n+        while (end - begin > 1e-10) {\n+            mid = (begin + end) / 2.;\n+            if (poly(xs, mid) == 0.0) {\n+                return mid;\n+            }\n+            if (poly(xs, begin) * poly(xs, mid) < 0) {\n+                end = mid - 1e-10;\n+            } else {\n+                begin = mid + 1e-10;\n+            }\n+        }\n+        return (begin + end) / 2;\n                 begin = center;\n             } else {\n                 end = center;",
    "result_reason": " /tmp/humaneval-FIND_ZERO/src/main/java/humaneval/buggy/FIND_ZERO.java:[44,15] 'else' without 'if'",
    "test_result": "ERROR"
}