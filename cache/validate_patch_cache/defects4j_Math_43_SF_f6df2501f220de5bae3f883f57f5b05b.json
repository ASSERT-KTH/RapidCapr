{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    // Check if any of the statistical measures return NaN or infinite; clear and reset all measures if so\n    if (Double.isNaN(sumImpl.getResult()) || Double.isInfinite(sumImpl.getResult())\n            || Double.isNaN(sumsqImpl.getResult()) || Double.isInfinite(sumsqImpl.getResult())\n            || Double.isNaN(minImpl.getResult()) || Double.isInfinite(minImpl.getResult())\n            || Double.isNaN(maxImpl.getResult()) || Double.isInfinite(maxImpl.getResult())\n            || Double.isNaN(sumLogImpl.getResult()) || Double.isInfinite(sumLogImpl.getResult())\n            || Double.isNaN(secondMoment.getResult()) || Double.isInfinite(secondMoment.getResult())\n            || Double.isNaN(getMean()) || Double.isInfinite(getMean())\n            || Double.isNaN(getVariance()) || Double.isInfinite(getVariance())\n            || Double.isNaN(getGeometricMean()) || Double.isInfinite(getGeometricMean())) {\n\n        // Reset all statistical measures to default values\n        sumImpl = new Sum();\n        sumsqImpl = new SumOfSquares();\n        minImpl = new Min();\n        maxImpl = new Max();\n        sumLogImpl = new SumOfLogs();\n        secondMoment = new SecondMoment();\n\n        meanImpl = new Mean();\n\n        varianceImpl = new Variance();\n\n        geoMeanImpl = new GeometricMean();\n\n        n = 0;\n\n    } else {\n        // Update overridden measures if they are not Mean, Variance, or GeometricMean\n        if (!(meanImpl instanceof Mean)) {\n            meanImpl.increment(value);\n        }\n        if (!(varianceImpl instanceof Variance)) {\n            varianceImpl.increment(value);\n        }\n        if (!(geoMeanImpl instanceof GeometricMean)) {\n            geoMeanImpl.increment(value);\n        }\n\n        n++;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..a22c63d51 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,15 +146,43 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    // Check if any of the statistical measures return NaN or infinite; clear and reset all measures if so\n+    if (Double.isNaN(sumImpl.getResult()) || Double.isInfinite(sumImpl.getResult())\n+            || Double.isNaN(sumsqImpl.getResult()) || Double.isInfinite(sumsqImpl.getResult())\n+            || Double.isNaN(minImpl.getResult()) || Double.isInfinite(minImpl.getResult())\n+            || Double.isNaN(maxImpl.getResult()) || Double.isInfinite(maxImpl.getResult())\n+            || Double.isNaN(sumLogImpl.getResult()) || Double.isInfinite(sumLogImpl.getResult())\n+            || Double.isNaN(secondMoment.getResult()) || Double.isInfinite(secondMoment.getResult())\n+            || Double.isNaN(getMean()) || Double.isInfinite(getMean())\n+            || Double.isNaN(getVariance()) || Double.isInfinite(getVariance())\n+            || Double.isNaN(getGeometricMean()) || Double.isInfinite(getGeometricMean())) {\n+\n+        // Reset all statistical measures to default values\n+        sumImpl = new Sum();\n+        sumsqImpl = new SumOfSquares();\n+        minImpl = new Min();\n+        maxImpl = new Max();\n+        sumLogImpl = new SumOfLogs();\n+        secondMoment = new SecondMoment();\n+\n+        meanImpl = new Mean();\n+\n+        varianceImpl = new Variance();\n+\n+        geoMeanImpl = new GeometricMean();\n+\n+        n = 0;\n+\n+    } else {\n+        // Update overridden measures if they are not Mean, Variance, or GeometricMean\n         if (!(meanImpl instanceof Mean)) {\n             meanImpl.increment(value);\n         }\n@@ -164,8 +192,10 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         if (!(geoMeanImpl instanceof GeometricMean)) {\n             geoMeanImpl.increment(value);\n         }\n+\n         n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}