{
    "patch": "public static String escape(String s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c <= 127) {\n            if (c == '%') {\n                sb.append(\"%25\");\n            } else if (c == '&') {\n                sb.append(\"%26\");\n            } else if (c == '+') {\n                sb.append(\"%2B\");\n            } else if (c == '=') {\n                sb.append(\"%3D\");\n            } else {\n                sb.append(c);\n            }\n        } else {\n            try {\n                byte[] bytes = String.valueOf(c).getBytes(\"ISO-8859-1\");\n                for (int j = 0; j < bytes.length; j++) {\n                    sb.append('%');\n                    sb.append(Integer.toHexString(bytes[j] & 0xff));\n                }\n            } catch (UnsupportedEncodingException e) {\n                throw new RuntimeException(\"ISO-8859-1 encoding is not supported.\", e);\n            }\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..8ac9a444 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,36 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String s) {\n+    StringBuilder sb = new StringBuilder();\n+    for (int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        if (c <= 127) {\n+            if (c == '%') {\n+                sb.append(\"%25\");\n+            } else if (c == '&') {\n+                sb.append(\"%26\");\n+            } else if (c == '+') {\n+                sb.append(\"%2B\");\n+            } else if (c == '=') {\n+                sb.append(\"%3D\");\n+            } else {\n+                sb.append(c);\n+            }\n+        } else {\n+            try {\n+                byte[] bytes = String.valueOf(c).getBytes(\"ISO-8859-1\");\n+                for (int j = 0; j < bytes.length; j++) {\n+                    sb.append('%');\n+                    sb.append(Integer.toHexString(bytes[j] & 0xff));\n+                }\n+            } catch (UnsupportedEncodingException e) {\n+                throw new RuntimeException(\"ISO-8859-1 encoding is not supported.\", e);\n+            }\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}