{
    "patch": "public double getTypedPercent(String js) {\n    double countTyped = 0;\n    double countTotal = 0;\n    for (int i = 0; i < js.length(); i++) {\n        if (js.charAt(i) == '\\'') {\n            while (js.charAt(++i) != '\\'') {\n                if (js.charAt(i) == '%') {\n                    countTotal++;\n                    if (js.charAt(i-1) != '\\\\') {\n                        countTyped++;\n                    }\n                }\n            }\n        }\n    }\n    if (countTotal == 0) {\n        return 0;\n    }\n    return (countTyped / countTotal) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..db40d66f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,26 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    double countTyped = 0;\n+    double countTotal = 0;\n+    for (int i = 0; i < js.length(); i++) {\n+        if (js.charAt(i) == '\\'') {\n+            while (js.charAt(++i) != '\\'') {\n+                if (js.charAt(i) == '%') {\n+                    countTotal++;\n+                    if (js.charAt(i-1) != '\\\\') {\n+                        countTyped++;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    if (countTotal == 0) {\n+        return 0;\n+    }\n+    return (countTyped / countTotal) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}