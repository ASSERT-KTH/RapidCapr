{
    "patch": "public static String circular_shift(int x, int shift) {\n    String s = String.valueOf(x);\n    \n    if (shift == 0 || shift == s.length()) {\n        return s;\n    } else if (shift < 0) {\n        shift = s.length() + shift;\n    } else if (shift > s.length()) {\n        shift %= s.length();\n        s = new StringBuilder(s).reverse().toString();\n    }\n    \n    return s.substring(s.length() - shift) + s.substring(0, ",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\nindex 9131a1c..6e9badb 100644\n--- a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n@@ -9,16 +9,17 @@ If shift > number of digits, return digits reversed.\n \"12\" */\n \n public class CIRCULAR_SHIFT {\n-    public static String circular_shift(int x, int shift) {\n-        String s = x + \"\";\n-\n-        if (shift > s.length()) {\n-            StringBuilder sb = new StringBuilder();\n-            for (int i = s.length() - 1; i >= 0; i -= 1)\n-                sb.append(s.charAt(i));\n-            return sb.toString();\n-        } else {\n-            return s.substring(s.length() - shift + 1) + s.substring(0, s.length() - shift - 1);\n-        }\n+public static String circular_shift(int x, int shift) {\n+    String s = String.valueOf(x);\n+    \n+    if (shift == 0 || shift == s.length()) {\n+        return s;\n+    } else if (shift < 0) {\n+        shift = s.length() + shift;\n+    } else if (shift > s.length()) {\n+        shift %= s.length();\n+        s = new StringBuilder(s).reverse().toString();\n     }\n+    \n+    return s.substring(s.length() - shift) + s.substring(0, \n }",
    "result_reason": " /tmp/humaneval-CIRCULAR_SHIFT/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java:[25,1] illegal start of expression",
    "test_result": "ERROR"
}