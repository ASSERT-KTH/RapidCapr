{
    "patch": "        boolean addedCurrent = false;\n        if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n            addedCurrent = true;\n        }\n        if (nextStrategy == null || (currentStrategy != null && currentStrategy != nextStrategy && currentStrategy.addRegex(this, regex))) {\n            if (!addedCurrent && currentStrategy != null) {\n                collector.add(currentStrategy);\n            }\n            currentFormatField = null;\n            strategies = collector.toArray(new Strategy[collector.size()]);\n            parsePattern = Pattern.compile(regex.toString());\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..ca4b180e 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        boolean addedCurrent = false;\n+        if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+            addedCurrent = true;\n+        }\n+        if (nextStrategy == null || (currentStrategy != null && currentStrategy != nextStrategy && currentStrategy.addRegex(this, regex))) {\n+            if (!addedCurrent && currentStrategy != null) {\n+                collector.add(currentStrategy);\n+            }\n+            currentFormatField = null;\n+            strategies = collector.toArray(new Strategy[collector.size()]);\n+            parsePattern = Pattern.compile(regex.toString());\n+        }\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0> but was:<100000>",
    "test_result": "FAIL"
}