{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        applyRules(calendar, buf);\n        if (mTimeZoneForced) {\n            buf.append('Z');\n        } else {\n            TimeZone timeZone = calendar.getTimeZone();\n            int offsetInMillis = timeZone.getOffset(calendar.getTimeInMillis());\n            int hours = offsetInMillis / 3600000;\n            int minutes = Math.abs((offsetInMillis % 3600000) / 60000);\n            \n            if (hours == 0 && minutes == 0) {\n                buf.append('Z');\n            } else {\n                buf.append(String.format(\"%+03d:%02d\", hours, minutes));\n            }\n        }\n        return buf;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..d97a9d76 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -872,7 +872,22 @@ public class FastDateFormat extends Format {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }\n-        return applyRules(calendar, buf);\n+        applyRules(calendar, buf);\n+        if (mTimeZoneForced) {\n+            buf.append('Z');\n+        } else {\n+            TimeZone timeZone = calendar.getTimeZone();\n+            int offsetInMillis = timeZone.getOffset(calendar.getTimeInMillis());\n+            int hours = offsetInMillis / 3600000;\n+            int minutes = Math.abs((offsetInMillis % 3600000) / 60000);\n+            \n+            if (hours == 0 && minutes == 0) {\n+                buf.append('Z');\n+            } else {\n+                buf.append(String.format(\"%+03d:%02d\", hours, minutes));\n+            }\n+        }\n+        return buf;\n     }\n \n     /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<T10:11:12[]> but was:<T10:11:12[-03:00]>",
    "test_result": "FAIL"
}