{
    "patch": "if (len >= 7 && str.charAt(5) == '_') {\n    if (len == 7 || len == 8 || len >= 9 && str.charAt(8) == '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    } else if (len >= 9) {\n        char ch7 = str.charAt(7);\n        char ch8 = str.charAt(8);\n        if (Character.isUpperCase(ch7) && Character.isUpperCase(ch8) && (len == 9 || len >= 10 && str.charAt(9) == '_')) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        } else if ((Character.isDigit(ch7) || Character.isWhitespace(ch7) || ch7 == '-') && (len == 9 || len >= 10 && str.charAt(9) == '_')) {\n            return new Locale.Builder().setLanguage(str.substring(0, 2)).setRegion(str.substring(3, 5)).setVariant(str.substring(6)).build();\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n} ",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..b240e18f 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,21 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len >= 7 && str.charAt(5) == '_') {\n+    if (len == 7 || len == 8 || len >= 9 && str.charAt(8) == '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    } else if (len >= 9) {\n+        char ch7 = str.charAt(7);\n+        char ch8 = str.charAt(8);\n+        if (Character.isUpperCase(ch7) && Character.isUpperCase(ch8) && (len == 9 || len >= 10 && str.charAt(9) == '_')) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        } else if ((Character.isDigit(ch7) || Character.isWhitespace(ch7) || ch7 == '-') && (len == 9 || len >= 10 && str.charAt(9) == '_')) {\n+            return new Locale.Builder().setLanguage(str.substring(0, 2)).setRegion(str.substring(3, 5)).setVariant(str.substring(6)).build();\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    }\n+} \n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}