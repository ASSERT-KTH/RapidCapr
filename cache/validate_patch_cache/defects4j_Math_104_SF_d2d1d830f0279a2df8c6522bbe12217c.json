{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.Precision;\n\npublic class MyClass {\n\n    public static double regularizedGammaP(double a, double x) {\n        return Gamma.regularizedGammaP(a, x);\n    }\n\n    public static void main(String[] args) {\n        double a = 1.49;\n        double x = 0.62;\n\n        double expected = Gamma.regularizedGammaP(a, x);\n        double actual = MyClass.regularizedGammaP(a, x);\n\n        if (Precision.equals(expected, actual, 10e-15)) {\n            System.out.println(\"Test passed\");\n        } else {\n            System.out.println(\"Test failed\");\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..c4ac78a23 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.Precision;\n+\n+public class MyClass {\n+\n+    public static double regularizedGammaP(double a, double x) {\n+        return Gamma.regularizedGammaP(a, x);\n+    }\n+\n+    public static void main(String[] args) {\n+        double a = 1.49;\n+        double x = 0.62;\n+\n+        double expected = Gamma.regularizedGammaP(a, x);\n+        double actual = MyClass.regularizedGammaP(a, x);\n+\n+        if (Precision.equals(expected, actual, 10e-15)) {\n+            System.out.println(\"Test passed\");\n+        } else {\n+            System.out.println(\"Test failed\");\n+        }\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}