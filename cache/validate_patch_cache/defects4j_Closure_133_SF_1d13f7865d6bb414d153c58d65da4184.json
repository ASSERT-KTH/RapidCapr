{
    "patch": "private String getRemainingJSDocLine() {\n  String result = stream.getRemainingJSDocLine();\n\n  if (StringUtils.isEmpty(result)) {\n    throw new IllegalStateException(\"Recorded bad position information\");\n  }\n\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..2b057871 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,11 +2396,16 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+private String getRemainingJSDocLine() {\n+  String result = stream.getRemainingJSDocLine();\n+\n+  if (StringUtils.isEmpty(result)) {\n+    throw new IllegalStateException(\"Recorded bad position information\");\n   }\n \n+  return result;\n+}\n+\n   /**\n    * Determines whether the parser has been populated with docinfo with a\n    * fileoverview tag.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}