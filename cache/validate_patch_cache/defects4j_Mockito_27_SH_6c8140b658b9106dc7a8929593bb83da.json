{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMethodInterceptorFilter newFilter;\nif (oldMockHandler instanceof MethodInterceptorFilter) {\n    newFilter = (MethodInterceptorFilter) oldMockHandler;\n    newFilter.setMockHandler(new MockHandler<>(newFilter.getMockHandler()));\n} else {\n    newFilter = new MethodInterceptorFilter(new MockHandler<>(oldMockHandler),\n            (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n    ((Factory) mock).setCallback(0, newFilter);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..7782c5045 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MethodInterceptorFilter newFilter;\n+if (oldMockHandler instanceof MethodInterceptorFilter) {\n+    newFilter = (MethodInterceptorFilter) oldMockHandler;\n+    newFilter.setMockHandler(new MockHandler<>(newFilter.getMockHandler()));\n+} else {\n+    newFilter = new MethodInterceptorFilter(new MockHandler<>(oldMockHandler),\n+            (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+    ((Factory) mock).setCallback(0, newFilter);\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}