{
    "patch": "        if (mock instanceof TypeMock) {\n            ((TypeMock) mock).getTypeMockHandler().resetFilters();\n            ((TypeMock) mock).getTypeMockHandler().addFilter(newFilter);\n        } else {\n            MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n            newMockHandler.addFilter(newFilter);\n            newMockHandler.setAnswersForStubbing(((TypeSafeDiagnosingMatcher<T>) new IsAnything<>()), org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues.INSTANCE);\n            ((MockitoMock) mock).setMockHandler(newMockHandler);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..a577de947 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,18 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        if (mock instanceof TypeMock) {\n+            ((TypeMock) mock).getTypeMockHandler().resetFilters();\n+            ((TypeMock) mock).getTypeMockHandler().addFilter(newFilter);\n+        } else {\n+            MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+            newMockHandler.addFilter(newFilter);\n+            newMockHandler.setAnswersForStubbing(((TypeSafeDiagnosingMatcher<T>) new IsAnything<>()), org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues.INSTANCE);\n+            ((MockitoMock) mock).setMockHandler(newMockHandler);\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}