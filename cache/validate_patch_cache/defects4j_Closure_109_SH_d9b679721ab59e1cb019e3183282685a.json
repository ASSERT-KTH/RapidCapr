{
    "patch": "     // check if the token is a type name\n     if (isTypeName(token)) {\n        return parseTypeName(token);\n     } else {\n        return parseTypeExpression(token);\n     }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..3d22715f 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,12 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+     // check if the token is a type name\n+     if (isTypeName(token)) {\n+        return parseTypeName(token);\n+     } else {\n+        return parseTypeExpression(token);\n+     }\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}