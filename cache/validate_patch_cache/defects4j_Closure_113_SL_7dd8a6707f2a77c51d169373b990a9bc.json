{
    "patch": "    if (provided == null || !provided.isExplicitlyProvided()) {\n      unrecognizedRequires.add(\n          new UnrecognizedRequire(n, ns, t.getSourceName()));\n    } else if (provided.explicitModule != null && provided.explicitModule != t.getModule()  &&\n        (!moduleGraph.hasModule(t.getModule()) ||\n            !moduleGraph.dependsOn(t.getModule(), provided.explicitModule))) {\n      compiler.report(\n          t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n              provided.explicitModule.getName(),\n              t.getModule().getName()));\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..74c24019 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,17 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+    if (provided == null || !provided.isExplicitlyProvided()) {\n+      unrecognizedRequires.add(\n+          new UnrecognizedRequire(n, ns, t.getSourceName()));\n+    } else if (provided.explicitModule != null && provided.explicitModule != t.getModule()  &&\n+        (!moduleGraph.hasModule(t.getModule()) ||\n+            !moduleGraph.dependsOn(t.getModule(), provided.explicitModule))) {\n+      compiler.report(\n+          t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n+              provided.explicitModule.getName(),\n+              t.getModule().getName()));\n+    }\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}