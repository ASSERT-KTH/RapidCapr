{
    "patch": "public static String escapeJava(String input) {\n    StringBuilder output = new StringBuilder(\"\");\n    for(int i = 0; i < input.length(); ) {\n        char ch = input.charAt(i++);\n        if(ch == '\\\\') {\n            output.append('\\\\'); output.append('\\\\');\n        } else if(ch == '\\\"')\n            output.append('\\\\').append('\\\"');\n        else if(ch == '\\n')\n            output.append('\\\\').append('n');\n        else if(ch == '\\r')\n            output.append('\\\\').append('r');\n        else if(ch == '\\t')\n            output.append('\\\\').append('t');\n        else if(ch >= '\\u0080') {\n            output.append('\\\\');\n            output.append('u');\n            output.append(toHex(ch >> 12));\n            output.append(toHex(ch >> 8));\n            output.append(toHex(ch >> 4));\n            output.append(toHex(ch));\n        } else\n            output.append(ch);\n    }\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..7771a31b 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,32 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escapeJava(String input) {\n+    StringBuilder output = new StringBuilder(\"\");\n+    for(int i = 0; i < input.length(); ) {\n+        char ch = input.charAt(i++);\n+        if(ch == '\\\\') {\n+            output.append('\\\\'); output.append('\\\\');\n+        } else if(ch == '\\\"')\n+            output.append('\\\\').append('\\\"');\n+        else if(ch == '\\n')\n+            output.append('\\\\').append('n');\n+        else if(ch == '\\r')\n+            output.append('\\\\').append('r');\n+        else if(ch == '\\t')\n+            output.append('\\\\').append('t');\n+        else if(ch >= '\\u0080') {\n+            output.append('\\\\');\n+            output.append('u');\n+            output.append(toHex(ch >> 12));\n+            output.append(toHex(ch >> 8));\n+            output.append(toHex(ch >> 4));\n+            output.append(toHex(ch));\n+        } else\n+            output.append(ch);\n+    }\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}