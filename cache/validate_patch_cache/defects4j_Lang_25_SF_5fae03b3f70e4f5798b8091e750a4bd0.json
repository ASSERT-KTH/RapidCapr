{
    "patch": "public static String unescape(String s) {\n    StringBuffer sbuf = new StringBuffer();\n    boolean precedingBackslash = false;\n    for (int i=0;i<s.length();i++) {\n        char ch = s.charAt(i);\n        if (precedingBackslash) {\n            switch (ch) {\n            case '\\\\':\n                sbuf.append('\\\\');\n                break;\n            case '\\'':\n                sbuf.append('\\'');\n                break;\n            case '\\\"':\n                sbuf.append('\"');\n                break;\n            case 'r':\n                sbuf.append('\\r');\n                break;\n            case 'f':\n                sbuf.append('\\f');\n                break;\n            case 't':\n                sbuf.append('\\t');\n                break;\n            case 'n':\n                sbuf.append('\\n');\n                break;\n            case 'b':\n                sbuf.append('\\b');\n                break;\n            case 'u':\n                // expect 4 hex digits\n                if (i+4 > s.length()) {\n                    throw new RuntimeException(\"Short unicode escape sequence: '\" + s + \"'\");\n                }\n                String unicode = s.substring(i+1,i+5);\n                try {\n                    char uniChar = (char)Integer.parseInt(unicode,16);\n                    sbuf.append(uniChar);\n                } catch (NumberFormatException e) {\n                    throw new RuntimeException(\"Invalid unicode escape sequence: '\" + s + \"'\");\n                }\n                i += 4;\n                break;\n            default:\n                sbuf.append('\\\\');\n                sbuf.append(ch);\n                break;\n            }\n            precedingBackslash = false;\n        } else {\n            if (ch == '\\\\') {\n                precedingBackslash = true;\n            } else {\n                sbuf.append(ch);\n            }\n        }\n    }\n    if (precedingBackslash) {\n        sbuf.append('\\\\');\n    }\n    return sbuf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..11fff9ff 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,70 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+    StringBuffer sbuf = new StringBuffer();\n+    boolean precedingBackslash = false;\n+    for (int i=0;i<s.length();i++) {\n+        char ch = s.charAt(i);\n+        if (precedingBackslash) {\n+            switch (ch) {\n+            case '\\\\':\n+                sbuf.append('\\\\');\n+                break;\n+            case '\\'':\n+                sbuf.append('\\'');\n+                break;\n+            case '\\\"':\n+                sbuf.append('\"');\n+                break;\n+            case 'r':\n+                sbuf.append('\\r');\n+                break;\n+            case 'f':\n+                sbuf.append('\\f');\n+                break;\n+            case 't':\n+                sbuf.append('\\t');\n+                break;\n+            case 'n':\n+                sbuf.append('\\n');\n+                break;\n+            case 'b':\n+                sbuf.append('\\b');\n+                break;\n+            case 'u':\n+                // expect 4 hex digits\n+                if (i+4 > s.length()) {\n+                    throw new RuntimeException(\"Short unicode escape sequence: '\" + s + \"'\");\n+                }\n+                String unicode = s.substring(i+1,i+5);\n+                try {\n+                    char uniChar = (char)Integer.parseInt(unicode,16);\n+                    sbuf.append(uniChar);\n+                } catch (NumberFormatException e) {\n+                    throw new RuntimeException(\"Invalid unicode escape sequence: '\" + s + \"'\");\n+                }\n+                i += 4;\n+                break;\n+            default:\n+                sbuf.append('\\\\');\n+                sbuf.append(ch);\n+                break;\n+            }\n+            precedingBackslash = false;\n+        } else {\n+            if (ch == '\\\\') {\n+                precedingBackslash = true;\n+            } else {\n+                sbuf.append(ch);\n+            }\n+        }\n+    }\n+    if (precedingBackslash) {\n+        sbuf.append('\\\\');\n+    }\n+    return sbuf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}