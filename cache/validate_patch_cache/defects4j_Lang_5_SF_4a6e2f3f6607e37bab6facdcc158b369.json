{
    "patch": "    public static Locale toLocale(final String str) {\n        if (str == null) {\n            return null;\n        }\n        final int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch0 = str.charAt(0);\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str);\n        } else if (len == 5 && str.charAt(2) == '_') {\n            final char ch3 = str.charAt(3);\n            final char ch4 = str.charAt(4);\n            if (Character.isUpperCase(ch3) && Character.isUpperCase(ch4)) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len >= 7 && str.charAt(2) == '_') {\n            int nextSeparator = str.indexOf('_', 3);\n            if (nextSeparator == -1) {\n                nextSeparator = len;\n            }\n            final char ch3 = str.charAt(3);\n            final char ch4 = str.charAt(4);\n            if (Character.isUpperCase(ch3) && Character.isUpperCase(ch4)) {\n                if (nextSeparator == 5) {\n                    return new Locale(str.substring(0, 2), str.substring(3, 5));\n                } else {\n                    String country = str.substring(3, 5);\n                    if (nextSeparator == len || (nextSeparator == len - 1 && str.charAt(len - 1) == '_')) {\n                        return new Locale(str.substring(0, 2), country, \"\");\n                    } else {\n                        final char ch5 = str.charAt(5);\n                        if (ch5 == '_') {\n                            return new Locale(str.substring(0, 2), country, str.substring(6));\n                        } else if (Character.isUpperCase(ch5)) {\n                            if (nextSeparator == len - 2) {\n                                return new Locale(str.substring(0, 2), country, str.substring(5));\n                            } else if (nextSeparator == len - 3 && str.charAt(5) == '_') {\n                                return new Locale(str.substring(0, 2), country, str.substring(6, len - 1));\n                            } else {\n                                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                            }\n                        } else {\n                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                        }\n                    }\n                }\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..b3f690ad 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -94,37 +94,57 @@ public class LocaleUtils {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n         final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n+        final char ch1 = str.charAt(1);\n+        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 2) {\n+            return new Locale(str);\n+        } else if (len == 5 && str.charAt(2) == '_') {\n             final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n             final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n+            if (Character.isUpperCase(ch3) && Character.isUpperCase(ch4)) {\n                 return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n+            } else {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(5) != '_') {\n+        } else if (len >= 7 && str.charAt(2) == '_') {\n+            int nextSeparator = str.indexOf('_', 3);\n+            if (nextSeparator == -1) {\n+                nextSeparator = len;\n+            }\n+            final char ch3 = str.charAt(3);\n+            final char ch4 = str.charAt(4);\n+            if (Character.isUpperCase(ch3) && Character.isUpperCase(ch4)) {\n+                if (nextSeparator == 5) {\n+                    return new Locale(str.substring(0, 2), str.substring(3, 5));\n+                } else {\n+                    String country = str.substring(3, 5);\n+                    if (nextSeparator == len || (nextSeparator == len - 1 && str.charAt(len - 1) == '_')) {\n+                        return new Locale(str.substring(0, 2), country, \"\");\n+                    } else {\n+                        final char ch5 = str.charAt(5);\n+                        if (ch5 == '_') {\n+                            return new Locale(str.substring(0, 2), country, str.substring(6));\n+                        } else if (Character.isUpperCase(ch5)) {\n+                            if (nextSeparator == len - 2) {\n+                                return new Locale(str.substring(0, 2), country, str.substring(5));\n+                            } else if (nextSeparator == len - 3 && str.charAt(5) == '_') {\n+                                return new Locale(str.substring(0, 2), country, str.substring(6, len - 1));\n+                            } else {\n+                                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                            }\n+                        } else {\n+                            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                        }\n+                    }\n+                }\n+            } else {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__P",
    "test_result": "FAIL"
}