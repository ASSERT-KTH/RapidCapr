{
    "patch": "import com.google.gson.JsonObject;\nimport com.google.gson.JsonParser;\n\npublic class ProgramFix {\n\n    public static double getTypedPercent(String json) {\n        JsonParser parser = new JsonParser();\n        JsonObject obj = parser.parse(json).getAsJsonObject();\n        String typed = obj.get(\"typed\").getAsString().replace(\"%\", \"\");\n        String total = obj.get(\"total\").getAsString().replace(\"%\", \"\");\n        double typedNum = Double.parseDouble(typed);\n        double totalNum = Double.parseDouble(total);\n        return Math.round((typedNum / totalNum) * 100.0 * 10.0) / 10.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..926dd4bb 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+public class ProgramFix {\n+\n+    public static double getTypedPercent(String json) {\n+        JsonParser parser = new JsonParser();\n+        JsonObject obj = parser.parse(json).getAsJsonObject();\n+        String typed = obj.get(\"typed\").getAsString().replace(\"%\", \"\");\n+        String total = obj.get(\"total\").getAsString().replace(\"%\", \"\");\n+        double typedNum = Double.parseDouble(typed);\n+        double totalNum = Double.parseDouble(total);\n+        return Math.round((typedNum / totalNum) * 100.0 * 10.0) / 10.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}