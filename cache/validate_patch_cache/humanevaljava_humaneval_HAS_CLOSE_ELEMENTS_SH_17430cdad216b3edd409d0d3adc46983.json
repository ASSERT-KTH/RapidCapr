{
    "patch": "public static boolean has_close_elements(List<Double> numbers, double threshold){\n    if (numbers == null || numbers.size() < 2){\n        return false;\n    }\n    for (int i = 0; i < numbers.size(); i += 1){\n        for (int j = i + 1; j < numbers.size(); j += 1){\n            double distance = Math.abs(numbers.get(i) - numbers.get(j));\n            if (distance <= threshold){\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\nindex b51eb14..4acf731 100644\n--- a/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java\n@@ -6,7 +6,20 @@ public class HAS_CLOSE_ELEMENTS {\n     public static boolean has_close_elements(List<Double> numbers, double threshold){\n         for (int i = 0; i < numbers.size(); i += 1){\n             for (int j = i + 1; j < numbers.size(); j += 1){\n-                double distance = numbers.get(i) - numbers.get(j);\n+public static boolean has_close_elements(List<Double> numbers, double threshold){\n+    if (numbers == null || numbers.size() < 2){\n+        return false;\n+    }\n+    for (int i = 0; i < numbers.size(); i += 1){\n+        for (int j = i + 1; j < numbers.size(); j += 1){\n+            double distance = Math.abs(numbers.get(i) - numbers.get(j));\n+            if (distance <= threshold){\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n                 if (distance < threshold)\n                     return true;\n             }",
    "result_reason": " /tmp/humaneval-HAS_CLOSE_ELEMENTS/src/main/java/humaneval/buggy/HAS_CLOSE_ELEMENTS.java:[9,1] illegal start of expression",
    "test_result": "ERROR"
}