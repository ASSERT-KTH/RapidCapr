{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nfinal MockSettingsImpl mockSettings = (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\nnewMockHandler.setMockSettings(mockSettings);\nInvocationInterceptor newInterceptor = new MockMethodInterceptor(newMockHandler, mockSettings);\ntry {\n    Field callbacksField = TypeUtils.getField(Factory.class, \"callbacks\");\n    if (callbacksField != null) {\n        List<Callback> callbacks = new ArrayList<Callback>();\n        callbacks.add(newInterceptor);\n        ((Factory) mock).setCallbacks(callbacks.toArray(new Callback[] {}));\n    } else {\n        ((Factory) mock).setCallback(0, newInterceptor);\n    }\n} catch (Throwable throwable) {\n    ((Factory) mock).setCallback(0, newInterceptor);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..0bc83402e 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,26 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+final MockSettingsImpl mockSettings = (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\n+newMockHandler.setMockSettings(mockSettings);\n+InvocationInterceptor newInterceptor = new MockMethodInterceptor(newMockHandler, mockSettings);\n+try {\n+    Field callbacksField = TypeUtils.getField(Factory.class, \"callbacks\");\n+    if (callbacksField != null) {\n+        List<Callback> callbacks = new ArrayList<Callback>();\n+        callbacks.add(newInterceptor);\n+        ((Factory) mock).setCallbacks(callbacks.toArray(new Callback[] {}));\n+    } else {\n+        ((Factory) mock).setCallback(0, newInterceptor);\n+    }\n+} catch (Throwable throwable) {\n+    ((Factory) mock).setCallback(0, newInterceptor);\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}