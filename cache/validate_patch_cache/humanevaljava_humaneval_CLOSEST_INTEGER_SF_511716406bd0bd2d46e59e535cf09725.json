{
    "patch": "public static int closest_integer(String value) {\n    if (value == null || value.isEmpty()) {\n        throw new IllegalArgumentException(\"Input value is null or empty\");\n    }\n    double num = Double.parseDouble(value);\n    double decimalPart = num - Math.floor(num);\n    int result;\n    if (decimalPart < 0.5) {\n        result = (int) Math.floor(num);\n    } else if (decimalPart > 0.5) {\n        result = (int) Math.ceil(num);\n    } else {\n        result = (int) Math.round(num);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\nindex 23630cd..94b1ab2 100644\n--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java\n@@ -17,20 +17,20 @@ package humaneval.buggy;\n // return 15 and closest_integer(\"-14.5\") should return -15.\n \n public class CLOSEST_INTEGER {\n-    public static int closest_integer(String value) {\n-        if (value.indexOf('.') >= 0) {\n-            while (value.charAt(value.length() - 1) == '0')\n-                value = value.substring(0, value.length() - 1);\n-        }\n-\n-        double num = Double.parseDouble(value);\n-        int result = 0;\n-        if (value.substring(value.length() - 2).equals(\".5\")) {\n-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);\n-        } else if (value.length() > 0){\n-            result = (int)Math.round(num);\n-        }\n-\n-        return result;\n+public static int closest_integer(String value) {\n+    if (value == null || value.isEmpty()) {\n+        throw new IllegalArgumentException(\"Input value is null or empty\");\n     }\n+    double num = Double.parseDouble(value);\n+    double decimalPart = num - Math.floor(num);\n+    int result;\n+    if (decimalPart < 0.5) {\n+        result = (int) Math.floor(num);\n+    } else if (decimalPart > 0.5) {\n+        result = (int) Math.ceil(num);\n+    } else {\n+        result = (int) Math.round(num);\n+    }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_CLOSEST_INTEGER.test_2:23 expected:<-15> but was:<-16>",
    "test_result": "FAIL"
}