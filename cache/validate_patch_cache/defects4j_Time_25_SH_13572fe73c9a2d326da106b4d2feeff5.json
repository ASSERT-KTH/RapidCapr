{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long prevAdjusted = previousTransition(instantAdjusted);\n                int offsetPrev = getOffset(prevAdjusted);\n                if (offsetPrev == offsetAdjusted) {\n                    return offsetAdjusted;\n                }\n                long nextAdjusted = nextTransition(instantAdjusted);\n                int offsetNext = getOffset(nextAdjusted);\n                if (offsetNext == offsetLocal) {\n                    return offsetAdjusted;\n                }\n            } else {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    int offsetNext = getOffset(nextLocal);\n                    int offsetNext2 = getOffset(nextAdjusted);\n                    if (offsetNext == offsetNext2) {\n                        return offsetNext;\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..ef34e799 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,28 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long prevAdjusted = previousTransition(instantAdjusted);\n+                int offsetPrev = getOffset(prevAdjusted);\n+                if (offsetPrev == offsetAdjusted) {\n+                    return offsetAdjusted;\n+                }\n+                long nextAdjusted = nextTransition(instantAdjusted);\n+                int offsetNext = getOffset(nextAdjusted);\n+                if (offsetNext == offsetLocal) {\n+                    return offsetAdjusted;\n+                }\n+            } else {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    int offsetNext = getOffset(nextLocal);\n+                    int offsetNext2 = getOffset(nextAdjusted);\n+                    if (offsetNext == offsetNext2) {\n+                        return offsetNext;\n+                    }\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<2007-0[4-01T01:00:00.000+03]:00> but was:<2007-0[3-31T23:00:00.000+02]:00>",
    "test_result": "FAIL"
}