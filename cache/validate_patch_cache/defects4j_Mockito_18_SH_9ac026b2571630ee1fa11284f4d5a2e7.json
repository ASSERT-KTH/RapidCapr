{
    "patch": "public static ReturnValue values(final String... values) {\n    return new ReturnValue() {\n        @Override\n        public <T> T returnValueFor(Class<T> clazz) {\n            if (clazz.equals(String.class)) {\n                return clazz.cast(values[0]);\n            } else if (clazz.equals(Integer.class)) {\n                return clazz.cast(Integer.parseInt(values[0]));\n            } else if (clazz.equals(Double.class)) {\n                return clazz.cast(Double.parseDouble(values[0]));\n            } else if (clazz.equals(Boolean.class)) {\n                return clazz.cast(Boolean.parseBoolean(values[0]));\n            } else if (clazz.equals(List.class)) {\n                return clazz.cast(Arrays.asList(values));\n            } else if (clazz.equals(Iterable.class)) {\n                return clazz.cast(Arrays.asList(values));\n            } else {\n                return null;\n            }\n        }\n    };\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}