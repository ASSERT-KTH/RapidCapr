{
    "patch": "            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n                next(pos);\n                return appendTo == null ? null : appendTo.append(QUOTE);\n            } else if (c[pos.getIndex()] == QUOTE) {\n                int len = pos.getIndex() - lastHold;\n                next(pos);\n                if (len == 0) {\n                    return appendQuotedString(pattern, pos, appendTo, escapingOn);\n                }\n                return appendTo == null ? null : appendTo.append(c, lastHold, len);\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..76981e26 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,17 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n+                next(pos);\n+                return appendTo == null ? null : appendTo.append(QUOTE);\n+            } else if (c[pos.getIndex()] == QUOTE) {\n+                int len = pos.getIndex() - lastHold;\n+                next(pos);\n+                if (len == 0) {\n+                    return appendQuotedString(pattern, pos, appendTo, escapingOn);\n+                }\n+                return appendTo == null ? null : appendTo.append(c, lastHold, len);\n+            }\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}