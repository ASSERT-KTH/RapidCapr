{
    "patch": "if (len >= 7 && str.charAt(5) == '_') {\n    int index = str.indexOf('_', 6);\n    if (index == -1) {\n        if (len == 7) {\n            return new Locale(str.substring(0, 2), \"\", str.substring(6));\n        } else if (len == 8) {\n            if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7))) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len == 9) {\n            if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7)) &&\n                Character.isUpperCase(str.charAt(8))) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else if (len >= 10) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    } else {\n        if (len == index + 1) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int index2 = str.indexOf('_', index + 1);\n        if (index2 == -1) {\n            if (len > index + 3 && Character.isUpperCase(str.charAt(index + 1)) &&\n                    Character.isUpperCase(str.charAt(index + 2))) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, index) + '-' +\n                        str.substring(index + 1));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        } else {\n            if (index2 == index + 1 || index2 == len - 1) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len > index2 + 1 && Character.isUpperCase(str.charAt(index + 1)) &&\n                    Character.isUpperCase(str.charAt(index + 2))) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, index) + '-' +\n                        str.substring(index + 1, index2) + '-' + str.substring(index2 + 1));\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }                          \n    }\n} else {\n    return new Locale.Builder().setLanguageTag(str).build();\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..da81e784 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,56 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len >= 7 && str.charAt(5) == '_') {\n+    int index = str.indexOf('_', 6);\n+    if (index == -1) {\n+        if (len == 7) {\n+            return new Locale(str.substring(0, 2), \"\", str.substring(6));\n+        } else if (len == 8) {\n+            if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7))) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else if (len == 9) {\n+            if (Character.isUpperCase(str.charAt(6)) && Character.isUpperCase(str.charAt(7)) &&\n+                Character.isUpperCase(str.charAt(8))) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else if (len >= 10) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    } else {\n+        if (len == index + 1) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        int index2 = str.indexOf('_', index + 1);\n+        if (index2 == -1) {\n+            if (len > index + 3 && Character.isUpperCase(str.charAt(index + 1)) &&\n+                    Character.isUpperCase(str.charAt(index + 2))) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, index) + '-' +\n+                        str.substring(index + 1));\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        } else {\n+            if (index2 == index + 1 || index2 == len - 1) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (len > index2 + 1 && Character.isUpperCase(str.charAt(index + 1)) &&\n+                    Character.isUpperCase(str.charAt(index + 2))) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, index) + '-' +\n+                        str.substring(index + 1, index2) + '-' + str.substring(index2 + 1));\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+        }                          \n+    }\n+} else {\n+    return new Locale.Builder().setLanguageTag(str).build();\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "java.util.IllformedLocaleException: Invalid subtag: fr__POSIX [at index 0]",
    "test_result": "FAIL"
}