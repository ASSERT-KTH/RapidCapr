{
    "patch": "StringBuilder regex= new StringBuilder();\nList<Strategy> collector = new ArrayList<>();\n\nMatcher patternMatcher= formatPattern.matcher(pattern);\n\nif (!patternMatcher.lookingAt()) {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}\n\nStrategy currentStrategy= null;\nStrategies[] strategies= new Strategies[patternMatcher.groupCount()];\n\nfor (int i = 0; i < strategies.length; i++) {\n    String match= patternMatcher.group(i + 1);\n    currentStrategy= getStrategy(match);\n    if(currentStrategy.addRegex(this, regex)) {\n        collector.add(currentStrategy);\n    }\n    strategies[i]= currentStrategy;\n}\n\ncurrentFormatField= null;\nthis.strategies= collector.toArray(new Strategy[collector.size()]);\n\nif (needToParse) {\n    parsePattern= Pattern.compile(regex.toString());\n}\n\nif (patterns == null) {\n    patterns= new ConcurrentHashMap<>();\n}\npatterns.put(pattern, this.strategies);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..c7c1eac3 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,38 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+StringBuilder regex= new StringBuilder();\n+List<Strategy> collector = new ArrayList<>();\n+\n+Matcher patternMatcher= formatPattern.matcher(pattern);\n+\n+if (!patternMatcher.lookingAt()) {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n+\n+Strategy currentStrategy= null;\n+Strategies[] strategies= new Strategies[patternMatcher.groupCount()];\n+\n+for (int i = 0; i < strategies.length; i++) {\n+    String match= patternMatcher.group(i + 1);\n+    currentStrategy= getStrategy(match);\n+    if(currentStrategy.addRegex(this, regex)) {\n+        collector.add(currentStrategy);\n+    }\n+    strategies[i]= currentStrategy;\n+}\n+\n+currentFormatField= null;\n+this.strategies= collector.toArray(new Strategy[collector.size()]);\n+\n+if (needToParse) {\n+    parsePattern= Pattern.compile(regex.toString());\n+}\n+\n+if (patterns == null) {\n+    patterns= new ConcurrentHashMap<>();\n+}\n+patterns.put(pattern, this.strategies);\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}