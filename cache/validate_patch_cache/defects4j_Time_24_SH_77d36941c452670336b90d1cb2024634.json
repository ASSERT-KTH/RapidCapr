{
    "patch": "            DateTimeFieldType type = savedFields[i].iField.getType();\n            Chronology chrono = savedFields[i].iField.getChronology();\n            int value = savedFields[i].iValue;\n            try {\n                millis = type.getField(chrono).set(millis, value);\n            } catch (IllegalArgumentException ex) {\n                IllegalFieldValueException fullEx = new IllegalFieldValueException(\n                        type, Integer.valueOf(value), ex.getMessage());\n                fullEx.initCause(ex);\n                throw fullEx;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b2ad9aed 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,17 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            DateTimeFieldType type = savedFields[i].iField.getType();\n+            Chronology chrono = savedFields[i].iField.getChronology();\n+            int value = savedFields[i].iValue;\n+            try {\n+                millis = type.getField(chrono).set(millis, value);\n+            } catch (IllegalArgumentException ex) {\n+                IllegalFieldValueException fullEx = new IllegalFieldValueException(\n+                        type, Integer.valueOf(value), ex.getMessage());\n+                fullEx.initCause(ex);\n+                throw fullEx;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}