{
    "patch": "    public void testRevert() {\n        final double eps = 1e-15;\n        final Vector3D p1 = new Vector3D(0.028581782127907646, -0.0920959807145879, -0.9953387627088531);\n        final Vector3D p2 = new Vector3D(0.028581782127907646, 0.0920959807145879, 0.9953387627088531);\n        final Line line = new Line(p1, p2);\n        final Line reverted = line.revert();\n        assertArrayEquals(p1.toArray(), reverted.getOrigin().toArray(), eps);\n        assertArrayEquals(p2.toArray(), reverted.getDirection().negate().toArray(), eps);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..650624424 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,15 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+    public void testRevert() {\n+        final double eps = 1e-15;\n+        final Vector3D p1 = new Vector3D(0.028581782127907646, -0.0920959807145879, -0.9953387627088531);\n+        final Vector3D p2 = new Vector3D(0.028581782127907646, 0.0920959807145879, 0.9953387627088531);\n+        final Line line = new Line(p1, p2);\n+        final Line reverted = line.revert();\n+        assertArrayEquals(p1.toArray(), reverted.getOrigin().toArray(), eps);\n+        assertArrayEquals(p2.toArray(), reverted.getDirection().negate().toArray(), eps);\n+    }\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}