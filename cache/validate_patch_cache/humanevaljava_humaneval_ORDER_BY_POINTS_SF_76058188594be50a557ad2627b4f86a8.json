{
    "patch": "public static Integer[] order_by_points(Integer[] nums) {\n    ArrayList<Integer> digits = new ArrayList<Integer>();\n    HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n\n    for (int i = 0; i < nums.length; i += 1){\n        int digit = 0;\n        int n = nums[i];\n        if (n < 0) {\n            n = -1 * n;\n        }\n        while (n > 0) {\n            digit += (n % 10);\n            n /= 10;\n        }\n        if (nums[i] < 0) {\n            digit *= -1;\n        }\n        digits.add(digit);\n        if (!digits_number.containsKey(digit))\n            digits_number.put(digit, new ArrayList<Integer>());\n        digits_number.get(digit).add(nums[i]);\n    }\n    Collections.sort(digits);\n\n    ArrayList<Integer> result = new ArrayList<Integer>();\n    for (int i = 0; i < digits.size(); i += 1) {\n        result.addAll(digits_number.get(digits.get(i)));\n    }\n\n    Integer[] finalResult = new Integer[result.size()];\n    int nonNegativesCount = 0, negativesCount = 0;\n    Integer[] nonNegatives = new Integer[result.size()];\n    Integer[] negatives = new Integer[result.size()];\n    for(int i=0;i<result.size();i++){\n        if(result.get(i)>=0) nonNegatives[nonNegativesCount++] = result.get(i);\n        else negatives[negativesCount++] = result.get(i);\n    }\n    Arrays.sort(nonNegatives, 0, nonNegativesCount);\n    Arrays.sort(negatives, 0, negativesCount, new Comparator<Integer>() {\n        @Override\n        public int compare(Integer a, Integer b) {\n            return Math.abs(a) - Math.abs(b);\n        }\n    });\n    System.arraycopy(nonNegatives, 0, finalResult, 0, nonNegativesCount);\n    System.arraycopy(negatives, 0, finalResult, nonNegativesCount, negativesCount);\n    return finalResult;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\nindex 4e6cd94..5b19a15 100644\n--- a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n+++ b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n@@ -14,32 +14,52 @@ For example:\n >>> order_by_points([]) == [] */\n \n public class ORDER_BY_POINTS {\n-    public static Integer[] order_by_points(Integer[] nums) {\n-        ArrayList<Integer> digits = new ArrayList<Integer>();\n-        HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n+public static Integer[] order_by_points(Integer[] nums) {\n+    ArrayList<Integer> digits = new ArrayList<Integer>();\n+    HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n \n-        for (int i = 0; i < nums.length; i += 1){\n-            int neg = 1;\n-            int n = nums[i];\n-            if (n < 0) {\n-                n = -1 * n;\n-                neg = -1;\n-            }\n-            int digit = 0;\n-            for (int j = 0; j < (n + \"\").toCharArray().length; j += 1){\n-                digit += ((n + \"\").toCharArray()[j] - '0') * neg;\n-            }\n-            digits.add(digit);\n-            if (! digits_number.containsKey(digit))\n-                digits_number.put(digit, new ArrayList<Integer>());\n-            digits_number.get(digit).add(nums[i]);\n+    for (int i = 0; i < nums.length; i += 1){\n+        int digit = 0;\n+        int n = nums[i];\n+        if (n < 0) {\n+            n = -1 * n;\n         }\n-        Collections.sort(digits);\n-        \n-        ArrayList<Integer> result = new ArrayList<Integer>();\n-        for (int i = 0; i < digits.size(); i += 1) {\n-            result.addAll(digits_number.get(digits.get(i)));\n+        while (n > 0) {\n+            digit += (n % 10);\n+            n /= 10;\n         }\n-        return result.toArray(new Integer[] {});\n+        if (nums[i] < 0) {\n+            digit *= -1;\n+        }\n+        digits.add(digit);\n+        if (!digits_number.containsKey(digit))\n+            digits_number.put(digit, new ArrayList<Integer>());\n+        digits_number.get(digit).add(nums[i]);\n+    }\n+    Collections.sort(digits);\n+\n+    ArrayList<Integer> result = new ArrayList<Integer>();\n+    for (int i = 0; i < digits.size(); i += 1) {\n+        result.addAll(digits_number.get(digits.get(i)));\n     }\n+\n+    Integer[] finalResult = new Integer[result.size()];\n+    int nonNegativesCount = 0, negativesCount = 0;\n+    Integer[] nonNegatives = new Integer[result.size()];\n+    Integer[] negatives = new Integer[result.size()];\n+    for(int i=0;i<result.size();i++){\n+        if(result.get(i)>=0) nonNegatives[nonNegativesCount++] = result.get(i);\n+        else negatives[negativesCount++] = result.get(i);\n+    }\n+    Arrays.sort(nonNegatives, 0, nonNegativesCount);\n+    Arrays.sort(negatives, 0, negativesCount, new Comparator<Integer>() {\n+        @Override\n+        public int compare(Integer a, Integer b) {\n+            return Math.abs(a) - Math.abs(b);\n+        }\n+    });\n+    System.arraycopy(nonNegatives, 0, finalResult, 0, nonNegativesCount);\n+    System.arraycopy(negatives, 0, finalResult, nonNegativesCount, negativesCount);\n+    return finalResult;\n+}\n }",
    "result_reason": " /tmp/humaneval-ORDER_BY_POINTS/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java:[54,5] cannot find symbol",
    "test_result": "ERROR"
}