{
    "patch": "      if (argList.hasMoreThanOneChild()) {\n        // Strip any trailing commas.\n        Node last = argList.getLastChild();\n        if (last.isString()) {\n          Node prev = last.getPrevious();\n          if (prev.isComma()) {\n            argList.removeChild(prev);\n            compiler.reportCodeChange();\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..664feb0b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,15 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      if (argList.hasMoreThanOneChild()) {\n+        // Strip any trailing commas.\n+        Node last = argList.getLastChild();\n+        if (last.isString()) {\n+          Node prev = last.getPrevious();\n+          if (prev.isComma()) {\n+            argList.removeChild(prev);\n+            compiler.reportCodeChange();\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}