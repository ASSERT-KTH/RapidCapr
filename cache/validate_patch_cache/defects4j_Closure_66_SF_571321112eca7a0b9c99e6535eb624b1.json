{
    "patch": "public static double getTypedPercent(JSONArray data) {\n    int numTyped = 0;\n    int numTotal = 0;\n\n    for (int i = 0; i < data.length(); i++) {\n        JSONObject datum = data.getJSONObject(i);\n\n        if (datum.has(\"type\")) {\n            numTotal++;\n            if (!datum.getString(\"type\").equals(\"null\")) {\n                numTyped++;\n            }\n        }\n    }\n\n    if (numTotal == 0) {\n        return 0.0;\n    } else {\n        return ((double)numTyped / numTotal) * 100.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..95afada2 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONArray data) {\n+    int numTyped = 0;\n+    int numTotal = 0;\n+\n+    for (int i = 0; i < data.length(); i++) {\n+        JSONObject datum = data.getJSONObject(i);\n+\n+        if (datum.has(\"type\")) {\n+            numTotal++;\n+            if (!datum.getString(\"type\").equals(\"null\")) {\n+                numTyped++;\n+            }\n+        }\n+    }\n+\n+    if (numTotal == 0) {\n+        return 0.0;\n+    } else {\n+        return ((double)numTyped / numTotal) * 100.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}