{
    "patch": "while (number > 0 && i >= 0) {\n    if (number >= num[i] && (i == 0 || number < num[i-1])) {\n        result += sym[i];\n        number -= num[i];\n    } else {\n        i--;\n    }\n}\nif (number > 0) {\n    throw new IllegalArgumentException(\"Number is too large to be represented in mini roman numerals.\");\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\nindex 0f3c881..88afcda 100644\n--- a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n+++ b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n@@ -19,7 +19,17 @@ public class INT_TO_MINI_ROMAN {\n         int i = 12;\n         String result = \"\";\n         while (number > 0) {\n-            result += sym[i];\n+while (number > 0 && i >= 0) {\n+    if (number >= num[i] && (i == 0 || number < num[i-1])) {\n+        result += sym[i];\n+        number -= num[i];\n+    } else {\n+        i--;\n+    }\n+}\n+if (number > 0) {\n+    throw new IllegalArgumentException(\"Number is too large to be represented in mini roman numerals.\");\n+}\n             number %= num[i];\n             i -= 1;\n         }",
    "result_reason": "   TEST_INT_TO_MINI_ROMAN.test_0:7 expected:<[iiiiiiiiiiiiiiiiiii]> but was:<[xix]>",
    "test_result": "FAIL"
}