{
    "patch": "public static String escapeText(String text, String encoding) {\n    boolean success = true;\n    StringBuffer sb = new StringBuffer(text.length());\n    StringCharacterIterator iterator = new StringCharacterIterator(text);\n    char character = iterator.current();\n  \n    // loop over the string, checking each character\n    while (character != StringCharacterIterator.DONE ){\n\n      if (character == '\\n') {\n        sb.append(\"\\\\n\");\n      }\n      else if (character == '\\r') {\n        sb.append(\"\\\\r\");\n      }\n      else if (character == '\\t') {\n        sb.append(\"\\\\t\");\n      }\n      else if (character == '\\\"') {\n        sb.append(\"\\\\\\\"\");\n      }\n      else if (character == '\\'') {\n        sb.append(\"\\\\\\'\");\n      }\n      else if (character == '\\\\') {\n        sb.append(\"\\\\\\\\\");\n      }\n      else if ((character < 0x0020) || (character > 0x007e)) {\n        // handle non-printable (unicode) characters\n        try {\n          byte[] bytes = Character.toString(character).getBytes(encoding);\n          for (int j = 0; j < bytes.length; ++j) {\n              sb.append('=');\n              sb.append(hexDigit(bytes[j] >> 4));\n              sb.append(hexDigit(bytes[j] & 0x0f));\n          }\n        }\n        catch (UnsupportedEncodingException e) {\n          success = false;\n        }\n      }\n      else {\n        sb.append(character);\n      }\n\n      character = iterator.next();\n    }\n\n    assertTrue(\"One or more errors detected\", success);\n    return sb.toString();\n  }\n\n  private static char hexDigit(int number) {\n    final int hexBase = 16;\n    if (0 <= number && number < hexBase) {\n        return \"0123456789abcdef\".charAt(number);\n    }\n    else {\n        return '?';\n    }\n  }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}