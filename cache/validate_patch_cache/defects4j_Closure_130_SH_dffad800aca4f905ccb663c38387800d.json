{
    "patch": "      if (name.globalSets == 1 && name.localSets == 0 && name.getRefs().size() == 1 &&\n          name.undeclared && name.aliasingGets > 0) {\n        // {@code name} meets condition (b).\n        for (Ref ref : name.getRefs()) {\n          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n            // {@code name} meets condition (c).\n            Node node = ref.node.getParent();\n            inlineAlias(name, ref);\n            compiler.reportChangeToEnclosingScope(node);\n            workList.add(name);\n            break; // Ensure we only inline one alias per pass.\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..77054646 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,20 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.globalSets == 1 && name.localSets == 0 && name.getRefs().size() == 1 &&\n+          name.undeclared && name.aliasingGets > 0) {\n+        // {@code name} meets condition (b).\n+        for (Ref ref : name.getRefs()) {\n+          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n+            // {@code name} meets condition (c).\n+            Node node = ref.node.getParent();\n+            inlineAlias(name, ref);\n+            compiler.reportChangeToEnclosingScope(node);\n+            workList.add(name);\n+            break; // Ensure we only inline one alias per pass.\n+          }\n+        }\n+      }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}