{
    "patch": "        if (start >= getItemCount() || start > end) {\n            return null;\n        }\n        if (end >= getItemCount()) {\n            end = getItemCount() - 1;\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        for (int i = start; i <= end; i++) {\n            TimeSeriesDataItem value = getDataItem(i);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) value.clone();\n            try {\n                copy.add(clone);\n            } catch (SeriesException e) {\n                System.err.println(\"Error adding replicated data.\");\n            }\n        }\n        return copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..8f2e0bb 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start >= getItemCount() || start > end) {\n+            return null;\n+        }\n+        if (end >= getItemCount()) {\n+            end = getItemCount() - 1;\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        for (int i = start; i <= end; i++) {\n+            TimeSeriesDataItem value = getDataItem(i);\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) value.clone();\n+            try {\n+                copy.add(clone);\n+            } catch (SeriesException e) {\n+                System.err.println(\"Error adding replicated data.\");\n+            }\n+        }\n+        return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: variable copy is already defined in method createCopy(int,int)",
    "test_result": "ERROR"
}