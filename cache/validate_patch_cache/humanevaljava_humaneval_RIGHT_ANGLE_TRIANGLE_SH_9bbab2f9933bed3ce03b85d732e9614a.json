{
    "patch": "if ((a <= 0) || (b <= 0) || (c <= 0)) {\n    return false;\n} else {\n    int[] sides = new int[]{a, b, c};\n    Arrays.sort(sides);\n    int hypotenuse = sides[2];\n    int sumSqrs = sides[0] * sides[0] + sides[1] * sides[1];\n    if (hypotenuse * hypotenuse == sumSqrs) {\n        return true;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..214348f 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,17 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+if ((a <= 0) || (b <= 0) || (c <= 0)) {\n+    return false;\n+} else {\n+    int[] sides = new int[]{a, b, c};\n+    Arrays.sort(sides);\n+    int hypotenuse = sides[2];\n+    int sumSqrs = sides[0] * sides[0] + sides[1] * sides[1];\n+    if (hypotenuse * hypotenuse == sumSqrs) {\n+        return true;\n+    }\n+    return false;\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-RIGHT_ANGLE_TRIANGLE/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java:[17,5] cannot find symbol",
    "test_result": "ERROR"
}