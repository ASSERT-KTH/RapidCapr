{
    "patch": "public static double find_zero(List<Double> xs){\n    double begin = -1.;\n    double end = 1.;\n\n    if (poly(xs, begin) == 0) {\n        return begin;\n    }\n\n    if (poly(xs, end) == 0) {\n        return end;\n    }\n\n    while (begin < end) {\n        double center = (begin + end) / 2.;\n        \n        if (poly(xs, begin) * poly(xs, center) <= 0) {\n            end = center;\n        } else {\n            begin = center;\n        }\n        \n        if (Math.abs(poly(xs, center)) < 1e-10) {\n            return center;\n        }\n    }\n\n    return (begin + end) / 2.;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..cbe02fd 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -11,23 +11,32 @@ public class FIND_ZERO {\n         return sum;\n     }\n \n-    public static double find_zero(List<Double> xs){\n-        double begin = -1.;\n-        double end = 1.;\n+public static double find_zero(List<Double> xs){\n+    double begin = -1.;\n+    double end = 1.;\n \n-        while (poly(xs, begin) * poly(xs, end) > 0) {\n-            begin *= 2.;\n-            end *= 2.;\n+    if (poly(xs, begin) == 0) {\n+        return begin;\n+    }\n+\n+    if (poly(xs, end) == 0) {\n+        return end;\n+    }\n+\n+    while (begin < end) {\n+        double center = (begin + end) / 2.;\n+        \n+        if (poly(xs, begin) * poly(xs, center) <= 0) {\n+            end = center;\n+        } else {\n+            begin = center;\n         }\n-        while (end - begin > 1e-10) {\n-            double center = (begin + end) / 2.;\n-            \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n-                begin = center;\n-            } else {\n-                end = center;\n-            }\n+        \n+        if (Math.abs(poly(xs, center)) < 1e-10) {\n+            return center;\n         }\n-        return begin;\n     }\n+\n+    return (begin + end) / 2.;\n+}\n }",
    "result_reason": "   TEST_FIND_ZERO.test_3:39",
    "test_result": "FAIL"
}