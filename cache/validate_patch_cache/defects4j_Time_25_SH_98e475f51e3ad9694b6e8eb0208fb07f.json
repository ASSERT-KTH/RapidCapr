{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    long prevTransition = previousTransition(instantAdjusted);\n    long nextTransition = nextTransition(instantAdjusted);\n    boolean isNearDstBoundary = (prevTransition != nextTransition);\n    if (!isNearDstBoundary) {\n        return offsetAdjusted;\n    }\n    long nearTransition = (offsetLocal > offsetAdjusted) ? prevTransition : nextTransition;\n    int nearTransitionOffset = getOffset(nearTransition);\n    if (offsetLocal == nearTransitionOffset || offsetAdjusted == nearTransitionOffset) {\n        return nearTransitionOffset;\n    }\n    if (offsetLocal < offsetAdjusted) {\n        long prevTransitionAdjusted = previousTransition(instantAdjusted);\n        if (prevTransitionAdjusted <= instantLocal - offsetLocal) {\n            return offsetAdjusted;\n        }\n    } else if (offsetLocal > offsetAdjusted) {\n        long nextTransitionAdjusted = nextTransition(instantAdjusted);\n        if (nextTransitionAdjusted <= instantLocal - offsetLocal) {\n            return offsetAdjusted;\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..579e1247 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,31 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    long prevTransition = previousTransition(instantAdjusted);\n+    long nextTransition = nextTransition(instantAdjusted);\n+    boolean isNearDstBoundary = (prevTransition != nextTransition);\n+    if (!isNearDstBoundary) {\n+        return offsetAdjusted;\n+    }\n+    long nearTransition = (offsetLocal > offsetAdjusted) ? prevTransition : nextTransition;\n+    int nearTransitionOffset = getOffset(nearTransition);\n+    if (offsetLocal == nearTransitionOffset || offsetAdjusted == nearTransitionOffset) {\n+        return nearTransitionOffset;\n+    }\n+    if (offsetLocal < offsetAdjusted) {\n+        long prevTransitionAdjusted = previousTransition(instantAdjusted);\n+        if (prevTransitionAdjusted <= instantLocal - offsetLocal) {\n+            return offsetAdjusted;\n+        }\n+    } else if (offsetLocal > offsetAdjusted) {\n+        long nextTransitionAdjusted = nextTransition(instantAdjusted);\n+        if (nextTransitionAdjusted <= instantLocal - offsetLocal) {\n+            return offsetAdjusted;\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}