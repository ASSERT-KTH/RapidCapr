{
    "patch": "public static String iso8859_1_ESCAPE(String text) {\n    StringBuffer out = new StringBuffer(\"\");\n    CharArrayWriter charArrayWriter = new CharArrayWriter();\n    if (text == null) {\n        return null;\n    }\n\n    try {\n        OutputStreamWriter writer = new OutputStreamWriter(charArrayWriter, \"ISO-8859-1\");\n        for (int i = 0; i < text.length(); i++) {\n            char ch = text.charAt(i);\n            if (ch <= 127) {\n                out.append(ch);\n            } else {\n                writer.write(ch);\n                writer.flush();\n                byte[] ba = charArrayWriter.toCharArray().toString().getBytes(\"ISO-8859-1\");\n                for (int j = 0; j < ba.length; j++) {\n                    out.append(\"%\");\n                    out.append(Integer.toHexString(ba[j] & 0xff));\n                }\n                charArrayWriter.reset();\n            }\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n        return null;\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d9d6e374 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,36 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String iso8859_1_ESCAPE(String text) {\n+    StringBuffer out = new StringBuffer(\"\");\n+    CharArrayWriter charArrayWriter = new CharArrayWriter();\n+    if (text == null) {\n+        return null;\n+    }\n+\n+    try {\n+        OutputStreamWriter writer = new OutputStreamWriter(charArrayWriter, \"ISO-8859-1\");\n+        for (int i = 0; i < text.length(); i++) {\n+            char ch = text.charAt(i);\n+            if (ch <= 127) {\n+                out.append(ch);\n+            } else {\n+                writer.write(ch);\n+                writer.flush();\n+                byte[] ba = charArrayWriter.toCharArray().toString().getBytes(\"ISO-8859-1\");\n+                for (int j = 0; j < ba.length; j++) {\n+                    out.append(\"%\");\n+                    out.append(Integer.toHexString(ba[j] & 0xff));\n+                }\n+                charArrayWriter.reset();\n+            }\n+        }\n+    } catch (IOException e) {\n+        e.printStackTrace();\n+        return null;\n+    }\n+    return out.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}