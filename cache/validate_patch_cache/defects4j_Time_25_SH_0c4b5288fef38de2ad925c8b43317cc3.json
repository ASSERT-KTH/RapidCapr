{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    long instantBefore;\n    if (offsetLocal > offsetAdjusted) {\n        instantBefore = previousTransition(instantAdjusted);\n        if ((instantLocal - instantBefore) < (offsetLocal - offsetAdjusted) * ((long) MILLIS_PER_MINUTE)) {\n            return offsetLocal;\n        }\n    } else {\n        instantBefore = previousTransition(instantLocal - offsetAdjusted);\n        if ((instantBefore - instantAdjusted) < (offsetAdjusted - offsetLocal) * ((long) MILLIS_PER_MINUTE)) {\n            return offsetLocal;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..351ff5d3 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    long instantBefore;\n+    if (offsetLocal > offsetAdjusted) {\n+        instantBefore = previousTransition(instantAdjusted);\n+        if ((instantLocal - instantBefore) < (offsetLocal - offsetAdjusted) * ((long) MILLIS_PER_MINUTE)) {\n+            return offsetLocal;\n+        }\n+    } else {\n+        instantBefore = previousTransition(instantLocal - offsetAdjusted);\n+        if ((instantBefore - instantAdjusted) < (offsetAdjusted - offsetLocal) * ((long) MILLIS_PER_MINUTE)) {\n+            return offsetLocal;\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}