{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        long next = savedFields[i].set(millis, resetFields);\n        if (next != millis) {\n            millis = next;\n            // Check for millis overflow after each field is set\n            if (millis < iMillis) {\n                throw new ArithmeticException(\"Value \" + millis + \" is too small for \" + text);\n            }\n        }\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..24a29949 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        long next = savedFields[i].set(millis, resetFields);\n+        if (next != millis) {\n+            millis = next;\n+            // Check for millis overflow after each field is set\n+            if (millis < iMillis) {\n+                throw new ArithmeticException(\"Value \" + millis + \" is too small for \" + text);\n+            }\n+        }\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.ArithmeticException: Value -4922899200000 is too small for 1814-04-30T00:00:00",
    "test_result": "FAIL"
}