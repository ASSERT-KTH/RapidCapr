{
    "patch": "public static int fib(int n) {\n    if (n == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    int prev1 = 0;\n    int prev2 = 1;\n    int result = 0;\n    for (int i = 2; i <= n; i++) {\n        result = prev1 + prev2;\n        prev1 = prev2;\n        prev2 = result;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIBFIB.java b/src/main/java/humaneval/buggy/FIBFIB.java\nindex 5e10ebb..46d1c07 100644\n--- a/src/main/java/humaneval/buggy/FIBFIB.java\n+++ b/src/main/java/humaneval/buggy/FIBFIB.java\n@@ -14,11 +14,19 @@ Please write a function to efficiently compute the n-th element of the fibfib nu\n 24 */\n \n public class FIBFIB {\n-    public static int fibfib(int n) {\n-        if (n == 0)\n-            return 0;\n-        if (n == 1)\n-            return 0;\n-        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n+public static int fib(int n) {\n+    if (n == 0)\n+        return 0;\n+    if (n == 1)\n+        return 1;\n+    int prev1 = 0;\n+    int prev2 = 1;\n+    int result = 0;\n+    for (int i = 2; i <= n; i++) {\n+        result = prev1 + prev2;\n+        prev1 = prev2;\n+        prev2 = result;\n     }\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-FIBFIB/src/test/java/humaneval/TEST_FIBFIB.java:[6,44] cannot find symbol",
    "test_result": "ERROR"
}