{
    "patch": "            // Obtain candidate from filter\n            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            \n            // Skip field if candidate is null\n            if (candidate == null) {\n                continue;\n            }\n            \n            // Attempt to set field value\n            field.setAccessible(true);\n            try {\n                field.set(fieldInstance, candidate);\n            } catch (IllegalArgumentException | IllegalAccessException e) {\n                // Field cannot be set, skip and continue\n                continue;\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..05c0dd526 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,25 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            // Obtain candidate from filter\n+            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            \n+            // Skip field if candidate is null\n+            if (candidate == null) {\n+                continue;\n+            }\n+            \n+            // Attempt to set field value\n+            field.setAccessible(true);\n+            try {\n+                field.set(fieldInstance, candidate);\n+            } catch (IllegalArgumentException | IllegalAccessException e) {\n+                // Field cannot be set, skip and continue\n+                continue;\n+            }\n         }\n     }\n ",
    "result_reason": "error: multi-catch statement is not supported in -source 1.5",
    "test_result": "ERROR"
}