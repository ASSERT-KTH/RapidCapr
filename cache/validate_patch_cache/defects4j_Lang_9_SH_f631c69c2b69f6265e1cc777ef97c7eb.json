{
    "patch": "        boolean currentFormatFieldProcessed = false;\n        if(currentStrategy != null) {\n            if(currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n                currentFormatFieldProcessed = true;\n            }\n        }\n        if (!collector.isEmpty() && !currentFormatFieldProcessed && nextStrategy == null) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n        currentFormatField = null;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..3740d18c 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,17 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        boolean currentFormatFieldProcessed = false;\n+        if(currentStrategy != null) {\n+            if(currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+                currentFormatFieldProcessed = true;\n+            }\n+        }\n+        if (!collector.isEmpty() && !currentFormatFieldProcessed && nextStrategy == null) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+        currentFormatField = null;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0> but was:<100000>",
    "test_result": "FAIL"
}