{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        else {\n            // Use calendar's timezone if not forced\n            calendar = new GregorianCalendar(calendar.getTimeZone());\n            calendar.setTimeInMillis(calendar.getTimeInMillis());\n        }\n        return applyRules(calendar, buf);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..b01829d7 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -872,6 +872,11 @@ public class FastDateFormat extends Format {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }\n+        else {\n+            // Use calendar's timezone if not forced\n+            calendar = new GregorianCalendar(calendar.getTimeZone());\n+            calendar.setTimeInMillis(calendar.getTimeInMillis());\n+        }\n         return applyRules(calendar, buf);\n     }\n ",
    "result_reason": "junit.framework.ComparisonFailure: expected:<T1[0:11:12]> but was:<T1[6:29:37]>",
    "test_result": "FAIL"
}