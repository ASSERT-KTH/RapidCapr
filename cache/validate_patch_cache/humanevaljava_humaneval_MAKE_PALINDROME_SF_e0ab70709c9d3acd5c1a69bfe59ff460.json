{
    "patch": "public static String make_palindrome(String str) {\n    if(str ==\"\" || is_palindrome(str)){\n      return str;\n    }\n    int suffix_start = str.length();\n    while(suffix_start > 0 && !is_palindrome(str.substring(0,suffix_start))){\n      suffix_start --;\n    }\n    String suffix = str.substring(suffix_start);\n    StringBuilder sb = new StringBuilder(str);\n    sb.reverse();\n    sb.delete(0, str.length() - suffix_start);\n    sb.append(suffix);\n    sb.append(str);\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAKE_PALINDROME.java b/src/main/java/humaneval/buggy/MAKE_PALINDROME.java\nindex 05f44d8..5648f90 100644\n--- a/src/main/java/humaneval/buggy/MAKE_PALINDROME.java\n+++ b/src/main/java/humaneval/buggy/MAKE_PALINDROME.java\n@@ -9,17 +9,20 @@ public class MAKE_PALINDROME {\n         return true;\n     }\n \n-    public static String make_palindrome(String str){\n-        if (str.length() == 0)\n-            return \"\";\n-\n-        int beginning_of_suffix = 0;\n-        while (! is_palindrome(str.substring(beginning_of_suffix))){\n-            beginning_of_suffix += 1;\n-        }\n-        \n-        String result = str;\n-        result += str.substring(0, beginning_of_suffix);\n-        return result;\n+public static String make_palindrome(String str) {\n+    if(str ==\"\" || is_palindrome(str)){\n+      return str;\n     }\n+    int suffix_start = str.length();\n+    while(suffix_start > 0 && !is_palindrome(str.substring(0,suffix_start))){\n+      suffix_start --;\n+    }\n+    String suffix = str.substring(suffix_start);\n+    StringBuilder sb = new StringBuilder(str);\n+    sb.reverse();\n+    sb.delete(0, str.length() - suffix_start);\n+    sb.append(suffix);\n+    sb.append(str);\n+    return sb.toString();\n+}\n }",
    "result_reason": "   TEST_MAKE_PALINDROME.test_2:23 expected:<xyz[xyz]> but was:<xyz[yx]>",
    "test_result": "FAIL"
}