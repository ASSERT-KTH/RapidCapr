{
    "patch": "public static String getProp(String name) throws IOException {\n    Properties props = new Properties();\n\n    try(InputStream in = TestClass.class.getClassLoader()\n            .getResourceAsStream(\"test.properties\")) {\n        props.load(in);\n    }\n\n    return props.getProperty(name);\n}```\n\nPlease let me know if any further changes need to be made",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..072b8818 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getProp(String name) throws IOException {\n+    Properties props = new Properties();\n+\n+    try(InputStream in = TestClass.class.getClassLoader()\n+            .getResourceAsStream(\"test.properties\")) {\n+        props.load(in);\n+    }\n+\n+    return props.getProperty(name);\n+}```\n+\n+Please let me know if any further changes need to be made\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}