{
    "patch": "public String format(Date date) {\n    Calendar c = new GregorianCalendar(mTimeZone);\n    c.setTime(date);\n    int year = c.get(Calendar.YEAR);\n    int week = c.get(Calendar.WEEK_OF_YEAR);\n    if(week == 53 && c.get(Calendar.DAY_OF_WEEK) < Calendar.THURSDAY) { // Week 53 starts with at least 4 days in the year\n        week = 1; // Set to first week of next year\n        year++; // Increment year\n    }\n    c.set(Calendar.WEEK_OF_YEAR, week);\n    c.set(Calendar.YEAR, year);\n    c.setFirstDayOfWeek(Calendar.MONDAY);\n    c.setMinimalDaysInFirstWeek(4);\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..e0040d5f 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -816,11 +816,21 @@ public class FastDateFormat extends Format {\n      * @param date  the date to format\n      * @return the formatted string\n      */\n-    public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n-        c.setTime(date);\n-        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+public String format(Date date) {\n+    Calendar c = new GregorianCalendar(mTimeZone);\n+    c.setTime(date);\n+    int year = c.get(Calendar.YEAR);\n+    int week = c.get(Calendar.WEEK_OF_YEAR);\n+    if(week == 53 && c.get(Calendar.DAY_OF_WEEK) < Calendar.THURSDAY) { // Week 53 starts with at least 4 days in the year\n+        week = 1; // Set to first week of next year\n+        year++; // Increment year\n     }\n+    c.set(Calendar.WEEK_OF_YEAR, week);\n+    c.set(Calendar.YEAR, year);\n+    c.setFirstDayOfWeek(Calendar.MONDAY);\n+    c.setMinimalDaysInFirstWeek(4);\n+    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+}\n \n     /**\n      * <p>Formats a <code>Calendar</code> object.</p>",
    "result_reason": "junit.framework.ComparisonFailure: expected:<2005-01-0[1]T12:00:00> but was:<2005-01-0[8]T12:00:00>",
    "test_result": "FAIL"
}