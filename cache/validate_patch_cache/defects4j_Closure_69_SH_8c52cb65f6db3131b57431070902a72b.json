{
    "patch": "JSType thisType = functionType.getTypeOfThis();\nif (thisType != null && !NodeUtil.isGet(n.getParent())) {\n    if (NodeUtil.isInvocation(n) || NodeUtil.isCall(n)) {\n        report(t, n, EXPECTED_THIS_TYPE, childType.toString());\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..8a9cea4a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,12 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+JSType thisType = functionType.getTypeOfThis();\n+if (thisType != null && !NodeUtil.isGet(n.getParent())) {\n+    if (NodeUtil.isInvocation(n) || NodeUtil.isCall(n)) {\n+        report(t, n, EXPECTED_THIS_TYPE, childType.toString());\n+    }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}