{
    "patch": "    Set<String> paramsToRemove = new HashSet<>();\n    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      for (Node arg : argList.children()) {\n        String argName = arg.getString();\n        if (!referenced.contains(fnScope.getVar(argName))) {\n          // collect unreferenced parameter names to remove them later\n          paramsToRemove.add(argName);\n        }\n      }\n\n      for (String paramNameToRemove : paramsToRemove) {\n        Node paramToRemove = NodeUtil.getFunctionParameterByName(argList, paramNameToRemove);\n        argList.removeChild(paramToRemove);\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2cff8b25 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,31 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Set<String> paramsToRemove = new HashSet<>();\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      for (Node arg : argList.children()) {\n+        String argName = arg.getString();\n+        if (!referenced.contains(fnScope.getVar(argName))) {\n+          // collect unreferenced parameter names to remove them later\n+          paramsToRemove.add(argName);\n+        }\n+      }\n+\n+      for (String paramNameToRemove : paramsToRemove) {\n+        Node paramToRemove = NodeUtil.getFunctionParameterByName(argList, paramNameToRemove);\n+        argList.removeChild(paramToRemove);\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}