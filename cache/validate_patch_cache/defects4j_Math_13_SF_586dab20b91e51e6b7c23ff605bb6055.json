{
    "patch": "        CholeskyDecomposition cd = new CholeskyDecomposition(m);\n        RealMatrix l = cd.getL();\n\n        int n = m.getRowDimension();\n        RealMatrix s = MatrixUtils.createRealMatrix(n, n);\n\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                double s_ij = l.getRow(i).dotProduct(l.getRow(j));\n                s.setEntry(i, j, s_ij);\n                s.setEntry(j, i, s_ij);\n            }\n        }\n\n        return s;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..746fb63c7 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,19 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+        CholeskyDecomposition cd = new CholeskyDecomposition(m);\n+        RealMatrix l = cd.getL();\n+\n+        int n = m.getRowDimension();\n+        RealMatrix s = MatrixUtils.createRealMatrix(n, n);\n+\n+        for (int i = 0; i < n; i++) {\n+            for (int j = i; j < n; j++) {\n+                double s_ij = l.getRow(i).dotProduct(l.getRow(j));\n+                s.setEntry(i, j, s_ij);\n+                s.setEntry(j, i, s_ij);\n+            }\n+        }\n+\n+        return s;\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}