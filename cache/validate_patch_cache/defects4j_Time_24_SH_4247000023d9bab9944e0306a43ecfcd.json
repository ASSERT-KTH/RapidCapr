{
    "patch": "        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            if (savedFields[0].getFieldType().equals(DateTimeFieldType.weekyear())) {\n                saveField(DateTimeFieldType.year(), iDefaultYear);\n                if (savedFields[1] != null && savedFields[1].getFieldType().equals(DateTimeFieldType.weekOfWeekyear())) {\n                    saveField(DateTimeFieldType.weekyear(), iDefaultYear);\n                }\n                return computeMillis(resetFields, text);\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..b046b6b9 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            if (savedFields[0].getFieldType().equals(DateTimeFieldType.weekyear())) {\n+                saveField(DateTimeFieldType.year(), iDefaultYear);\n+                if (savedFields[1] != null && savedFields[1].getFieldType().equals(DateTimeFieldType.weekOfWeekyear())) {\n+                    saveField(DateTimeFieldType.weekyear(), iDefaultYear);\n+                }\n+                return computeMillis(resetFields, text);\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}