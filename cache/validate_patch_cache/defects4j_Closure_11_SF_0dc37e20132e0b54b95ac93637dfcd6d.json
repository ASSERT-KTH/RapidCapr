{
    "patch": "public static void setSystemProperty(String key, String value) {\n    SecurityManager securityManager = new SecurityManager() {\n        @Override\n        public void checkPermission(Permission permission) {\n            if (permission.getName().startsWith(\"setProperty\")) {\n                throw new SecurityException(\"System property cannot be set\");\n            }\n        }\n    };\n    System.setSecurityManager(securityManager);\n    \n    try {\n        System.setProperty(key, value);\n    } catch (SecurityException e) {\n        String message = e.getMessage();\n        if (message != null && message.equals(\"System property cannot be set\")) {\n            System.err.println(\"Cannot set system property - \" + message);\n            return;\n        }\n        throw e;\n    } finally {\n        System.setSecurityManager(null);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..1f06daa0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,30 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static void setSystemProperty(String key, String value) {\n+    SecurityManager securityManager = new SecurityManager() {\n+        @Override\n+        public void checkPermission(Permission permission) {\n+            if (permission.getName().startsWith(\"setProperty\")) {\n+                throw new SecurityException(\"System property cannot be set\");\n+            }\n+        }\n+    };\n+    System.setSecurityManager(securityManager);\n+    \n+    try {\n+        System.setProperty(key, value);\n+    } catch (SecurityException e) {\n+        String message = e.getMessage();\n+        if (message != null && message.equals(\"System property cannot be set\")) {\n+            System.err.println(\"Cannot set system property - \" + message);\n+            return;\n+        }\n+        throw e;\n+    } finally {\n+        System.setSecurityManager(null);\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}