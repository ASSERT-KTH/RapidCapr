{
    "patch": "final long n1Long = (long) n1;\nfinal long n2Long = (long) n2;\nfinal long n1n2prod;\ntry {\n    n1n2prod = Math.multiplyExact(n1Long, n2Long);\n} catch (ArithmeticException e) {\n    n1n2prod = Long.MAX_VALUE;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\nindex ce694ce8f..c029b3e89 100644\n--- a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\n+++ b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\n@@ -170,7 +170,14 @@ public class MannWhitneyUTest {\n                                              final int n2)\n         throws ConvergenceException, MaxCountExceededException {\n \n-        final int n1n2prod = n1 * n2;\n+final long n1Long = (long) n1;\n+final long n2Long = (long) n2;\n+final long n1n2prod;\n+try {\n+    n1n2prod = Math.multiplyExact(n1Long, n2Long);\n+} catch (ArithmeticException e) {\n+    n1n2prod = Long.MAX_VALUE;\n+}\n \n         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n         final double EU = n1n2prod / 2.0;",
    "result_reason": "error: variable n1n2prod might already have been assigned",
    "test_result": "ERROR"
}