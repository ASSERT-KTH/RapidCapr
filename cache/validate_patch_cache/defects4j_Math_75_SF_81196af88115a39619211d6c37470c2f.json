{
    "patch": "public double getPct(Object v) {\n    if (values.isEmpty()) {\n        return Double.NaN;\n    } else if (v instanceof Comparable) {\n        double pos = getPosition((Comparable<?>) v);\n        return pos / values.size();\n    } else {\n        return Double.NaN;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..48dd6ff13 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,16 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n-    public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public double getPct(Object v) {\n+    if (values.isEmpty()) {\n+        return Double.NaN;\n+    } else if (v instanceof Comparable) {\n+        double pos = getPosition((Comparable<?>) v);\n+        return pos / values.size();\n+    } else {\n+        return Double.NaN;\n     }\n+}\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}