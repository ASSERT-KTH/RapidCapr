{
    "patch": "          if (lastArg.getJSDocInfo() != null) {\n            lastArg.setJSDocInfo(null);\n          }\n          if (lastArg.hasChildren()) {\n            lastArg.replaceWith(IR.placeholder().srcref(lastArg));\n          } else {\n            argList.removeChild(lastArg);\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..846d81f5 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,14 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+          if (lastArg.getJSDocInfo() != null) {\n+            lastArg.setJSDocInfo(null);\n+          }\n+          if (lastArg.hasChildren()) {\n+            lastArg.replaceWith(IR.placeholder().srcref(lastArg));\n+          } else {\n+            argList.removeChild(lastArg);\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}