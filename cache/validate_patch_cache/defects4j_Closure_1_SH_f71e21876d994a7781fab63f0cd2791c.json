{
    "patch": "Node function = fnScope.getRootNode();\n\nPreconditions.checkState(function.isFunction());\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n  // The parameters object literal setters can not be removed.\n  return;\n}\n\nNode argList = getFunctionArgList(function);\nboolean modifyCallers = modifyCallSites\n    && callSiteOptimizer.canModifyCallers(function);\nif (!modifyCallers) {\n  // Strip unreferenced args off the end of the function declaration.\n  Node lastArg;\n  int numArgs = 0;\n  // First, count the number of child arguments\n  for (Node currentArg = argList.getFirstChild(); currentArg != null;\n        currentArg = currentArg.getNext()) {\n    numArgs++;\n  }\n  // Second, remove unused parameters\n  while (numArgs > 0 && argList.hasChildren()) {\n    Node currentArg = argList.getLastChild();\n    Var var = fnScope.getVar(currentArg.getString());\n    if (!referenced.contains(var)) {\n      argList.removeChild(currentArg);\n      numArgs--;\n      compiler.reportCodeChange();\n    } else {\n      break;\n    }\n  }\n} else {\n  callSiteOptimizer.optimize(fnScope, referenced);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..13eca9b3 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,41 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+\n+Preconditions.checkState(function.isFunction());\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+  // The parameters object literal setters can not be removed.\n+  return;\n+}\n+\n+Node argList = getFunctionArgList(function);\n+boolean modifyCallers = modifyCallSites\n+    && callSiteOptimizer.canModifyCallers(function);\n+if (!modifyCallers) {\n+  // Strip unreferenced args off the end of the function declaration.\n+  Node lastArg;\n+  int numArgs = 0;\n+  // First, count the number of child arguments\n+  for (Node currentArg = argList.getFirstChild(); currentArg != null;\n+        currentArg = currentArg.getNext()) {\n+    numArgs++;\n+  }\n+  // Second, remove unused parameters\n+  while (numArgs > 0 && argList.hasChildren()) {\n+    Node currentArg = argList.getLastChild();\n+    Var var = fnScope.getVar(currentArg.getString());\n+    if (!referenced.contains(var)) {\n+      argList.removeChild(currentArg);\n+      numArgs--;\n+      compiler.reportCodeChange();\n+    } else {\n+      break;\n+    }\n+  }\n+} else {\n+  callSiteOptimizer.optimize(fnScope, referenced);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}