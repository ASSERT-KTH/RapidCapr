{
    "patch": "      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n    } else if (this.isNoType() || that.isNoType()) {\n      return getNativeType(JSTypeNative.NO_TYPE);\n    } else {\n      return getNativeType(JSTypeNative.NONE_TYPE); \n    }\n  }\n\n  /**",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/UnionType.java b/src/com/google/javascript/rhino/jstype/UnionType.java\nindex a9c9a0ae..59ff43dc 100644\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n@@ -288,7 +288,15 @@ public class UnionType extends JSType {\n       builder.addAlternate(that);\n     }\n     JSType result = builder.build();\n-    if (result != null) {\n+      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n+    } else if (this.isNoType() || that.isNoType()) {\n+      return getNativeType(JSTypeNative.NO_TYPE);\n+    } else {\n+      return getNativeType(JSTypeNative.NONE_TYPE); \n+    }\n+  }\n+\n+  /**\n       return result;\n     } else if (this.isObject() && that.isObject()) {\n       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}