{
    "patch": "public static int fibfib(int n) {\n    if (n == 0) {\n        return 0;\n    } else if (n == 1 || n == 2) {\n        return 1;\n    } else {\n        int prev2 = 1;\n        int prev1 = 1;\n        int current = 2;\n        for (int i = 3; i <= n; i++) {\n            current = prev1 + prev2 + 1;\n            prev2 = prev1;\n            prev1 = current - 1;\n        }\n        return current - 1;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIBFIB.java b/src/main/java/humaneval/buggy/FIBFIB.java\nindex 5e10ebb..8df49a2 100644\n--- a/src/main/java/humaneval/buggy/FIBFIB.java\n+++ b/src/main/java/humaneval/buggy/FIBFIB.java\n@@ -14,11 +14,21 @@ Please write a function to efficiently compute the n-th element of the fibfib nu\n 24 */\n \n public class FIBFIB {\n-    public static int fibfib(int n) {\n-        if (n == 0)\n-            return 0;\n-        if (n == 1)\n-            return 0;\n-        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n+public static int fibfib(int n) {\n+    if (n == 0) {\n+        return 0;\n+    } else if (n == 1 || n == 2) {\n+        return 1;\n+    } else {\n+        int prev2 = 1;\n+        int prev1 = 1;\n+        int current = 2;\n+        for (int i = 3; i <= n; i++) {\n+            current = prev1 + prev2 + 1;\n+            prev2 = prev1;\n+            prev1 = current - 1;\n+        }\n+        return current - 1;\n     }\n }\n+}",
    "result_reason": "   TEST_FIBFIB.test_1:15 expected:<1> but was:<0>",
    "test_result": "FAIL"
}