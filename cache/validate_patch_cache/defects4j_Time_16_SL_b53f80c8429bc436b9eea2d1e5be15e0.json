{
    "patch": "            new DateTimeFormatterBuilder().append(null, new ChronoParser(chrono)).appendOptional(\n                    new DateTimeFormatterBuilder().appendLiteral('[').appendOffset(\"+HH:MM\", \"\").appendLiteral(']').toParser()\n            ).appendOptional(\n                    new DateTimeFormatterBuilder().appendLiteral('[').appendZoneId().appendLiteral(']').toParser()\n            ).toFormatter().withLocale(iLocale).withPivotYear(iPivotYear).parseMillis(text);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..1662318b 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,11 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+            new DateTimeFormatterBuilder().append(null, new ChronoParser(chrono)).appendOptional(\n+                    new DateTimeFormatterBuilder().appendLiteral('[').appendOffset(\"+HH:MM\", \"\").appendLiteral(']').toParser()\n+            ).appendOptional(\n+                    new DateTimeFormatterBuilder().appendLiteral('[').appendZoneId().appendLiteral(']').toParser()\n+            ).toFormatter().withLocale(iLocale).withPivotYear(iPivotYear).parseMillis(text);\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}