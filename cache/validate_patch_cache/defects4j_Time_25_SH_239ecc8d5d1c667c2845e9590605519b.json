{
    "patch": "            if (offsetLocal != offsetAdjusted) {\n                final int minOffsetAdjusted = Math.min(offsetLocal, offsetAdjusted);\n                final int maxOffsetAdjusted = Math.max(offsetLocal, offsetAdjusted);\n                final long prevTransition = previousTransition(instantAdjusted);\n                if (prevTransition < instantLocal - maxOffsetAdjusted ||\n                        (prevTransition == instantLocal - maxOffsetAdjusted &&\n                        getOffset(prevTransition) < maxOffsetAdjusted)) {\n                    return minOffsetAdjusted;\n                }\n                final long nextTransition = nextTransition(instantAdjusted);\n                if (instantLocal + minOffsetAdjusted < nextTransition ||\n                        (instantLocal + minOffsetAdjusted == nextTransition &&\n                        getOffset(nextTransition) == maxOffsetAdjusted)) {\n                    return minOffsetAdjusted;\n                }\n                else {\n                    return maxOffsetAdjusted;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..e8a52642 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal != offsetAdjusted) {\n+                final int minOffsetAdjusted = Math.min(offsetLocal, offsetAdjusted);\n+                final int maxOffsetAdjusted = Math.max(offsetLocal, offsetAdjusted);\n+                final long prevTransition = previousTransition(instantAdjusted);\n+                if (prevTransition < instantLocal - maxOffsetAdjusted ||\n+                        (prevTransition == instantLocal - maxOffsetAdjusted &&\n+                        getOffset(prevTransition) < maxOffsetAdjusted)) {\n+                    return minOffsetAdjusted;\n+                }\n+                final long nextTransition = nextTransition(instantAdjusted);\n+                if (instantLocal + minOffsetAdjusted < nextTransition ||\n+                        (instantLocal + minOffsetAdjusted == nextTransition &&\n+                        getOffset(nextTransition) == maxOffsetAdjusted)) {\n+                    return minOffsetAdjusted;\n+                }\n+                else {\n+                    return maxOffsetAdjusted;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}