{
    "patch": "                // extra infill code to handle case when nextLocal == nextAdjusted\n                int diff = offsetAdjusted - getOffset(nextLocal);\n                if (diff != 0) {\n                    long prevTransition Adjusted = prevTransition(instantLocal - diff);\n                    if (prevTransitionAdjusted != instantLocal - offsetAdjusted) {\n                        return offsetLocal;\n                    }\n                }               ",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..26e1b9c9 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // extra infill code to handle case when nextLocal == nextAdjusted\n+                int diff = offsetAdjusted - getOffset(nextLocal);\n+                if (diff != 0) {\n+                    long prevTransition Adjusted = prevTransition(instantLocal - diff);\n+                    if (prevTransitionAdjusted != instantLocal - offsetAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                }               \n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}