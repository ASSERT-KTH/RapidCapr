{
    "patch": "public static boolean correct_bracketing(String brackets) {\n    Stack<Character> stack = new Stack<Character>();\n\n    for (char b : brackets.toCharArray()) {\n        if (b == '<') {\n            stack.push(b);\n        } else if (b == '>') {\n            if (stack.isEmpty() || stack.pop() != '<') {\n                return false;\n            }\n        }\n    }\n\n    return stack.isEmpty();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CORRECT_BRACKETING.java b/src/main/java/humaneval/buggy/CORRECT_BRACKETING.java\nindex 2df59fe..13e4415 100644\n--- a/src/main/java/humaneval/buggy/CORRECT_BRACKETING.java\n+++ b/src/main/java/humaneval/buggy/CORRECT_BRACKETING.java\n@@ -13,16 +13,19 @@ True\n False */\n \n public class CORRECT_BRACKETING {\n-    public static boolean correct_bracketing(String brackets) {\n-        int depth = 0;\n-        for (char b : brackets.toCharArray()) {\n-            if (b == '<')\n-                depth += 1;\n-            else\n-                depth -= 1;\n-            if (depth >= 0)\n-                return true;\n+public static boolean correct_bracketing(String brackets) {\n+    Stack<Character> stack = new Stack<Character>();\n+\n+    for (char b : brackets.toCharArray()) {\n+        if (b == '<') {\n+            stack.push(b);\n+        } else if (b == '>') {\n+            if (stack.isEmpty() || stack.pop() != '<') {\n+                return false;\n+            }\n         }\n-        return false;\n     }\n+\n+    return stack.isEmpty();\n+}\n }",
    "result_reason": " /tmp/humaneval-CORRECT_BRACKETING/src/main/java/humaneval/buggy/CORRECT_BRACKETING.java:[17,5] cannot find symbol",
    "test_result": "ERROR"
}