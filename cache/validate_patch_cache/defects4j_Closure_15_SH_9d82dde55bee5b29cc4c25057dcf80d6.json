{
    "patch": "        if (n.isString()) {\n          String value = n.getString();\n          if (Strings.isNullOrEmpty(value)) {\n            return false;\n          }\n          if (value.length() == 1) {\n            return true;\n          }\n          if (value.length() == 2 && value.charAt(0) == '\\\\') {\n            return true;\n          }\n          return (value.charAt(0) == '\\\\'\n              && !Token.stringEscapeCharToChar(value.charAt(1)).equals(value.substring(1)))\n              || value.contains(\"<\")\n              || value.contains(\">\");\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..daf797c4 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,22 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isString()) {\n+          String value = n.getString();\n+          if (Strings.isNullOrEmpty(value)) {\n+            return false;\n+          }\n+          if (value.length() == 1) {\n+            return true;\n+          }\n+          if (value.length() == 2 && value.charAt(0) == '\\\\') {\n+            return true;\n+          }\n+          return (value.charAt(0) == '\\\\'\n+              && !Token.stringEscapeCharToChar(value.charAt(1)).equals(value.substring(1)))\n+              || value.contains(\"<\")\n+              || value.contains(\">\");\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}