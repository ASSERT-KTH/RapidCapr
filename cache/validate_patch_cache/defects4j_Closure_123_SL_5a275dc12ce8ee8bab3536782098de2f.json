{
    "patch": "    public void printInOperatorInForLoop() {\n        boolean[] d = {true, true, false};\n        int c = 1;\n\n        String expected = \"for(a=c ? 0:[0 in d];;)foo()\";\n        String actual = \"for(a=c ? 0:[(0 in d)];;)foo()\";\n\n        Context lhsContext = Context.OTHER;\n        boolean isIn = 0 in d;     // fix\n        Context rhsContext = Context.OTHER;\n\n        AbstractSimpleInfixOperatorEmitter em = new ConditionalExpressionEmitter();\n        String result = em.toJavaString(lhsContext, isIn, rhsContext);\n\n        assertEquals(expected, result);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}