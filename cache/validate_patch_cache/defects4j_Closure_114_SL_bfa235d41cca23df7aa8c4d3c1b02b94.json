{
    "patch": "            // The rhs of the assignment is the caller, so it's used by the\n            // context. Don't associate it w/ the lhs.\n            // FYI: this fixes only the specific case where the assignment is the\n            // caller expression, but it could be nested deeper in the caller and\n            // we would still get a bug.\n            // See testAssignWithCall2 for an example of this.",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..e165e5b9 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,12 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+            // The rhs of the assignment is the caller, so it's used by the\n+            // context. Don't associate it w/ the lhs.\n+            // FYI: this fixes only the specific case where the assignment is the\n+            // caller expression, but it could be nested deeper in the caller and\n+            // we would still get a bug.\n+            // See testAssignWithCall2 for an example of this.\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}