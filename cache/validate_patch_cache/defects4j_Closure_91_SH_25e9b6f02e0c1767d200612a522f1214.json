{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.isInterface())) {\n        // Only traverse constructor and interface functions that are getting new'd or lent.\n        return NodeUtil.isNew(parent) || NodeUtil.isPrototypeProperty(parent.getParent());\n      }\n      \n      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isPrototypeProperty(parent.getParent())) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..191ab484 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,16 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.isInterface())) {\n+        // Only traverse constructor and interface functions that are getting new'd or lent.\n+        return NodeUtil.isNew(parent) || NodeUtil.isPrototypeProperty(parent.getParent());\n+      }\n+      \n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isPrototypeProperty(parent.getParent())) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}