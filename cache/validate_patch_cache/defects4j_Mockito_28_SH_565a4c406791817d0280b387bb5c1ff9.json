{
    "patch": "            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            if(candidate != null) {\n                field.setAccessible(true);\n                try {\n                    if (!field.getType().isAssignableFrom(candidate.getClass())) {\n                        throw new IllegalStateException(String.format(\"Field type '%s' is not assignable from candidate type '%s'\", field.getType(), candidate.getClass()));\n                    }\n                    field.set(fieldInstance, candidate);\n                }\n                catch(IllegalAccessException e) { e.printStackTrace(); }\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..b8765b846 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,20 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            if(candidate != null) {\n+                field.setAccessible(true);\n+                try {\n+                    if (!field.getType().isAssignableFrom(candidate.getClass())) {\n+                        throw new IllegalStateException(String.format(\"Field type '%s' is not assignable from candidate type '%s'\", field.getType(), candidate.getClass()));\n+                    }\n+                    field.set(fieldInstance, candidate);\n+                }\n+                catch(IllegalAccessException e) { e.printStackTrace(); }\n+            }\n         }\n     }\n ",
    "result_reason": "java.lang.IllegalStateException: Field type 'class org.mockitousage.annotation.DeprecatedAnnotationEngineApiTest$Dependency' is not assignable from candidate type 'class org.mockito.internal.configuration.injection.FinalMockCandidateFilter$1'",
    "test_result": "FAIL"
}