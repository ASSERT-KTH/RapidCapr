{
    "patch": "public static String escapeUTF8(String input) {\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        int i = 0;\n        while (i < input.length()) {\n            char c = input.charAt(i++);\n            if (c == '\\\\') {\n                out.write(c);\n                c = input.charAt(i++);\n                out.write(c);\n            } else if (c < 128) {\n                out.write(c);\n            } else if (c < 224) {\n                int c2 = input.charAt(i++);\n                out.write(((c & 31) << 6) | (c2 & 63));\n            } else if (c < 240) {\n                int c2 = input.charAt(i++);\n                int c3 = input.charAt(i++);\n                out.write(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n            } else {\n                int c2 = input.charAt(i++);\n                int c3 = input.charAt(i++);\n                int c4 = input.charAt(i++);\n                int u = ((c & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63);\n                out.write(0xE0 | (u >> 18));\n                out.write(0x80 | ((u >> 12) & 0x3F));\n                out.write(0x80 | ((u >> 6) & 0x3F));\n                out.write(0x80 | (u & 0x3F));\n            }\n        }\n        return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}