{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    int len = str.length();\n    int searchLen = searchChars.length;\n    int strIndex = 0;\n    while (strIndex < len) {\n        char ch = str.charAt(strIndex);\n        for (int i = 0; i < searchLen; i++) { // fixed line\n            char searchChar = searchChars[i];\n            if (ch == searchChar) {\n                if (Character.isHighSurrogate(ch)) {\n                    if (i == searchLen - 1) {\n                        // missing low surrogate, fine, like indexOf()\n                        return false;\n                    }\n                    if (strIndex < len - 1) {\n                        char ch2 = str.charAt(strIndex + 1);\n                        if (Character.isLowSurrogate(ch2)) {\n                            return false;\n                        }\n                    }\n                }\n                // ch is not a high surrogate or paired with a low surrogate\n                return true;\n            }\n        }\n        strIndex++;\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..a614d390 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    int len = str.length();\n+    int searchLen = searchChars.length;\n+    int strIndex = 0;\n+    while (strIndex < len) {\n+        char ch = str.charAt(strIndex);\n+        for (int i = 0; i < searchLen; i++) { // fixed line\n+            char searchChar = searchChars[i];\n+            if (ch == searchChar) {\n+                if (Character.isHighSurrogate(ch)) {\n+                    if (i == searchLen - 1) {\n+                        // missing low surrogate, fine, like indexOf()\n+                        return false;\n+                    }\n+                    if (strIndex < len - 1) {\n+                        char ch2 = str.charAt(strIndex + 1);\n+                        if (Character.isLowSurrogate(ch2)) {\n+                            return false;\n+                        }\n+                    }\n+                }\n+                // ch is not a high surrogate or paired with a low surrogate\n+                return true;\n+            }\n+        }\n+        strIndex++;\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}