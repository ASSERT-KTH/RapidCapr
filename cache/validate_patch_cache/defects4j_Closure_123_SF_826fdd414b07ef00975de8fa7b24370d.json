{
    "patch": "public class TestClass {\n    public static String testPrintInOperatorInForLoop() {\n        boolean c = true;\n        Object[] d = new Object[0];\n        String expected = \"for(a=c ? 0 : (0 in d); ; ) foo()\";\n        String output = \"\";\n        try {\n            output = \"for(a=c?\" + (0 in d) + \":[0 in d];;)foo()\";\n        } catch (Exception e) {\n            output = e.toString();\n        }\n        return expected.equals(output) ? \"PASS\" : \"FAIL\";\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..bf0544e8 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,20 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class TestClass {\n+    public static String testPrintInOperatorInForLoop() {\n+        boolean c = true;\n+        Object[] d = new Object[0];\n+        String expected = \"for(a=c ? 0 : (0 in d); ; ) foo()\";\n+        String output = \"\";\n+        try {\n+            output = \"for(a=c?\" + (0 in d) + \":[0 in d];;)foo()\";\n+        } catch (Exception e) {\n+            output = e.toString();\n+        }\n+        return expected.equals(output) ? \"PASS\" : \"FAIL\";\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}