{
    "patch": "public static Integer next_smallest(int[] lst) {\n    if (lst == null || lst.length < 2) {\n        return null;\n    }\n    \n    Set<Integer> set = new HashSet<>();\n    Integer secondSmallest = null;\n    \n    for (int n : lst) {\n        if (!set.add(n)) {\n            continue;\n        }\n        \n        if (secondSmallest == null || n < secondSmallest) {\n            if (n > set.iterator().next()) {\n                secondSmallest = n;\n            }\n        }\n    }\n\n    return secondSmallest;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\nindex 7791efd..8b2ca89 100644\n--- a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\n+++ b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java\n@@ -12,15 +12,26 @@ next_smallest([]) == None\n next_smallest([1, 1]) == None */\n \n public class NEXT_SMALLEST {\n-    public static Integer next_smallest(int[] lst) {\n-        List<Integer> numbers = new ArrayList<Integer>();\n-        for (Integer n : lst)\n-            numbers.add(n);\n-        Integer[] no_duplicate = numbers.toArray(new Integer[] {});\n-        Arrays.sort(no_duplicate);\n-\n-        if (no_duplicate.length < 2)\n-            return null;\n-        return no_duplicate[1];\n+public static Integer next_smallest(int[] lst) {\n+    if (lst == null || lst.length < 2) {\n+        return null;\n+    }\n+    \n+    Set<Integer> set = new HashSet<>();\n+    Integer secondSmallest = null;\n+    \n+    for (int n : lst) {\n+        if (!set.add(n)) {\n+            continue;\n+        }\n+        \n+        if (secondSmallest == null || n < secondSmallest) {\n+            if (n > set.iterator().next()) {\n+                secondSmallest = n;\n+            }\n+        }\n     }\n+\n+    return secondSmallest;\n+}\n }",
    "result_reason": "   TEST_NEXT_SMALLEST.test_4:39 expected:<null> but was:<1>",
    "test_result": "FAIL"
}