{
    "patch": "        String param = \"\";\n        List<String> remainingArgs = params.getParams();\n        if (remainingArgs == null || remainingArgs.isEmpty()) {\n            setter.addValue(true);\n            return 0;\n        } else {\n            param = remainingArgs.get(0);\n            String lowerParam = param.toLowerCase();\n            if (TRUES.contains(lowerParam)) {\n                setter.addValue(true);\n            } else if (FALSES.contains(lowerParam)) {\n                setter.addValue(false);\n            } else {\n                setter.addValue(true);\n                return 0;\n            }\n            return 1;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..2f2958fd 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -330,25 +330,24 @@ public class CommandLineRunner extends\n       }\n \n       @Override\n-      public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n-\n-        if (param == null) {\n-          setter.addValue(true);\n-          return 0;\n-        } else {\n-          String lowerParam = param.toLowerCase();\n-          if (TRUES.contains(lowerParam)) {\n-            setter.addValue(true);\n-          } else if (FALSES.contains(lowerParam)) {\n-            setter.addValue(false);\n-          } else {\n+        String param = \"\";\n+        List<String> remainingArgs = params.getParams();\n+        if (remainingArgs == null || remainingArgs.isEmpty()) {\n             setter.addValue(true);\n             return 0;\n-          }\n-          return 1;\n+        } else {\n+            param = remainingArgs.get(0);\n+            String lowerParam = param.toLowerCase();\n+            if (TRUES.contains(lowerParam)) {\n+                setter.addValue(true);\n+            } else if (FALSES.contains(lowerParam)) {\n+                setter.addValue(false);\n+            } else {\n+                setter.addValue(true);\n+                return 0;\n+            }\n+            return 1;\n         }\n-      }\n \n       @Override\n       public String getDefaultMetaVariable() {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}