{
    "patch": "public static int fruit_distribution(String s, int n) {\n    String[] parts = s.split(\" \");\n    int consumed = Arrays.stream(parts)\n        .filter(str -> str.matches(\"\\\\d+\"))\n        .mapToInt(Integer::parseInt)\n        .sum();\n    return Math.max(0, n - consumed);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java b/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java\nindex 93d0852..2525148 100644\n--- a/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java\n+++ b/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java\n@@ -12,13 +12,12 @@ fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 - 3 = 95\n fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19 */\n \n public class FRUIT_DISTRIBUTION {\n-    public static int fruit_distribution(String s, int n) {\n-        int result = n;\n-\n-        for (String str : s.split(\" \")) {\n-            int cnt = Integer.parseInt(str);\n-            result -= cnt;\n-        }\n-        return result;\n-    }\n+public static int fruit_distribution(String s, int n) {\n+    String[] parts = s.split(\" \");\n+    int consumed = Arrays.stream(parts)\n+        .filter(str -> str.matches(\"\\\\d+\"))\n+        .mapToInt(Integer::parseInt)\n+        .sum();\n+    return Math.max(0, n - consumed);\n+}\n }",
    "result_reason": " /tmp/humaneval-FRUIT_DISTRIBUTION/src/main/java/humaneval/buggy/FRUIT_DISTRIBUTION.java:[17,20] cannot find symbol",
    "test_result": "ERROR"
}