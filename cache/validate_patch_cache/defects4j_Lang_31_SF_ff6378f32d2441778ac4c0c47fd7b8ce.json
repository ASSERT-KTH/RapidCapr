{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    final int len = sequence.length();\n    final int searchLen = searchChars.length;\n    final int[] search = new int[Character.MAX_VALUE + 1];\n    for (int i = 0; i < searchLen; i++) {\n        search[searchChars[i]] = 1;\n    }\n    for (int i = 0; i < len; i++) {\n        if (search[sequence.charAt(i)] == 1) {\n            if (Character.isHighSurrogate(sequence.charAt(i))) {\n                if (i + 1 < len && search[sequence.charAt(i + 1)] == 2) {\n                    return true;\n                }\n            } else {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..3b628287 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,26 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    final int len = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int[] search = new int[Character.MAX_VALUE + 1];\n+    for (int i = 0; i < searchLen; i++) {\n+        search[searchChars[i]] = 1;\n+    }\n+    for (int i = 0; i < len; i++) {\n+        if (search[sequence.charAt(i)] == 1) {\n+            if (Character.isHighSurrogate(sequence.charAt(i))) {\n+                if (i + 1 < len && search[sequence.charAt(i + 1)] == 2) {\n+                    return true;\n+                }\n+            } else {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}