{
    "patch": "    public Fraction reduce() {\n        int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n        if (gcd != 1 && denominator != 0) {\n            return Fraction.getFraction(numerator / gcd, denominator / gcd);\n        }\n        return this;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..3169e1c4 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,11 +463,11 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n+        if (gcd != 1 && denominator != 0) {\n+            return Fraction.getFraction(numerator / gcd, denominator / gcd);\n         }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        return this;\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<1> but was:<100>",
    "test_result": "FAIL"
}