{
    "patch": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (cs == null || searchChars == null) {\n        return false;\n    }\n    int strLength = cs.length();\n    int searchLength = searchChars.length;\n    boolean found = false;\n\n    if (searchLength == 0 || strLength == 0) {\n        return false;\n    }\n\n    for (int i = 0; i < strLength && !found; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLength; j++) {\n            if (ch == searchChars[j]) {\n                found = true;\n                break;\n            }\n        }\n        if (Character.isSurrogate(ch) && i < strLength - 1) {\n            char ch2 = cs.charAt(i + 1);\n            if (Character.isSurrogatePair(ch, ch2)) {\n                int codePoint = Character.toCodePoint(ch, ch2);\n                for (int j = 0; j < searchLength; j++) {\n                    if (codePoint == searchChars[j]) {\n                        found = true;\n                        break;\n                    }\n                }\n                i++;\n            }\n        }\n    }\n\n    return found;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..5ad0e643 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,43 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char[] searchChars) {\n+    if (cs == null || searchChars == null) {\n+        return false;\n+    }\n+    int strLength = cs.length();\n+    int searchLength = searchChars.length;\n+    boolean found = false;\n+\n+    if (searchLength == 0 || strLength == 0) {\n+        return false;\n+    }\n+\n+    for (int i = 0; i < strLength && !found; i++) {\n+        char ch = cs.charAt(i);\n+        for (int j = 0; j < searchLength; j++) {\n+            if (ch == searchChars[j]) {\n+                found = true;\n+                break;\n+            }\n+        }\n+        if (Character.isSurrogate(ch) && i < strLength - 1) {\n+            char ch2 = cs.charAt(i + 1);\n+            if (Character.isSurrogatePair(ch, ch2)) {\n+                int codePoint = Character.toCodePoint(ch, ch2);\n+                for (int j = 0; j < searchLength; j++) {\n+                    if (codePoint == searchChars[j]) {\n+                        found = true;\n+                        break;\n+                    }\n+                }\n+                i++;\n+            }\n+        }\n+    }\n+\n+    return found;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}