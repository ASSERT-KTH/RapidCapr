{
    "patch": "if (result.contains(\"T\") || result.contains(\"JSC_TYPE_PARSE_ERROR\")) {\n    result = result.replaceAll(\"\\\\/\\\\* eslint-disable \\\\*\\\\/\", \"\")\n                   .replaceAll(\"\\\\bT\\\\b\", \"?\")\n                   .replaceAll(\"\\\\{[\\\\w| ]*\\\\}\", \"\")\n                   .replaceAll(\"\\\\s+\", \" \")\n                   .trim();\n    if (result.contains(\"JSC_TYPE_PARSE_ERROR\") || result.contains(\"?\") || result.contains(\"<unknown>\") || result.contains(\"@type\")) {\n        throw new IllegalStateException(\"Bad type annotation. Unknown type T\");\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..eef79e9d 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,16 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+if (result.contains(\"T\") || result.contains(\"JSC_TYPE_PARSE_ERROR\")) {\n+    result = result.replaceAll(\"\\\\/\\\\* eslint-disable \\\\*\\\\/\", \"\")\n+                   .replaceAll(\"\\\\bT\\\\b\", \"?\")\n+                   .replaceAll(\"\\\\{[\\\\w| ]*\\\\}\", \"\")\n+                   .replaceAll(\"\\\\s+\", \" \")\n+                   .trim();\n+    if (result.contains(\"JSC_TYPE_PARSE_ERROR\") || result.contains(\"?\") || result.contains(\"<unknown>\") || result.contains(\"@type\")) {\n+        throw new IllegalStateException(\"Bad type annotation. Unknown type T\");\n+    }\n+}\n     return result;\n   }\n ",
    "result_reason": "java.lang.IllegalStateException: Bad type annotation. Unknown type T",
    "test_result": "FAIL"
}