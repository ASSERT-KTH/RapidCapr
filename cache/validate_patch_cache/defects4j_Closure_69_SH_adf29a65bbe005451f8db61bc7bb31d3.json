{
    "patch": "if (functionType.getThisType() != null) {\n  Node parent = n.getParent();\n  Node gramps = parent.getParent();\n\n  // Check if the function is called using the correct 'this'\n  boolean thisIsSetCorrectly =\n      (parent.isGetProp() && parent.getFirstChild() == n || parent.isGetElem()) &&\n      (gramps.isCall() || gramps.isNew());\n\n  // Check if the function is called using goog.bind with the correct 'this'\n  boolean isGoogBindWithThis =\n      gramps.isCall()\n          && gramps.getFirstChild().matchesQualifiedName(\"goog.bind\")\n          && gramps.hasMoreThanOneChild()\n          && gramps.getSecondChild() == n.getParent()\n          && parent.isGetProp()\n          && parent.getFirstChild() == n;\n\n  if (!thisIsSetCorrectly && !isGoogBindWithThis) {\n    report(t, n, INVALID_THIS_TYPE, functionType.getThisType().toString());\n    ensureTyped(t, n);\n    return;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..c351c512 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,30 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+if (functionType.getThisType() != null) {\n+  Node parent = n.getParent();\n+  Node gramps = parent.getParent();\n+\n+  // Check if the function is called using the correct 'this'\n+  boolean thisIsSetCorrectly =\n+      (parent.isGetProp() && parent.getFirstChild() == n || parent.isGetElem()) &&\n+      (gramps.isCall() || gramps.isNew());\n+\n+  // Check if the function is called using goog.bind with the correct 'this'\n+  boolean isGoogBindWithThis =\n+      gramps.isCall()\n+          && gramps.getFirstChild().matchesQualifiedName(\"goog.bind\")\n+          && gramps.hasMoreThanOneChild()\n+          && gramps.getSecondChild() == n.getParent()\n+          && parent.isGetProp()\n+          && parent.getFirstChild() == n;\n+\n+  if (!thisIsSetCorrectly && !isGoogBindWithThis) {\n+    report(t, n, INVALID_THIS_TYPE, functionType.getThisType().toString());\n+    ensureTyped(t, n);\n+    return;\n+  }\n+}\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}