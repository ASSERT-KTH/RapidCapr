{
    "patch": "import java.util.ArrayList; \nimport java.util.List;\n\npublic class MyClass {\n    \n    public static List<String> getEvenLengthWords(String[] arr) {\n        List<String> result = new ArrayList<String>();\n        \n        if (arr != null) {\n            for (String word : arr) {\n                if (word != null && word.length() % 2 == 0) {\n                    result.add(word);\n                }\n            }\n        }\n        \n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..513ca0d87 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,25 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+import java.util.ArrayList; \n+import java.util.List;\n+\n+public class MyClass {\n+    \n+    public static List<String> getEvenLengthWords(String[] arr) {\n+        List<String> result = new ArrayList<String>();\n+        \n+        if (arr != null) {\n+            for (String word : arr) {\n+                if (word != null && word.length() % 2 == 0) {\n+                    result.add(word);\n+                }\n+            }\n+        }\n+        \n+        return result;\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}