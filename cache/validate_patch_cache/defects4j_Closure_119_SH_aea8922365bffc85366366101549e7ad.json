{
    "patch": "          default:\n            if (NodeUtil.isAssignmentOp(parent) &&\n                parent.getFirstChild() == n) {\n              isSet = true;\n              type = Name.Type.OTHER;\n            }\n>>> [ INFILL ] <<<\n            if (isSet && type == Name.Type.OTHER &&\n                scope.isDeclared(name, false)) {\n              type = Name.Type.VAR;\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..0ccb097a 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,17 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+          default:\n+            if (NodeUtil.isAssignmentOp(parent) &&\n+                parent.getFirstChild() == n) {\n+              isSet = true;\n+              type = Name.Type.OTHER;\n+            }\n+>>> [ INFILL ] <<<\n+            if (isSet && type == Name.Type.OTHER &&\n+                scope.isDeclared(name, false)) {\n+              type = Name.Type.VAR;\n+            }\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}