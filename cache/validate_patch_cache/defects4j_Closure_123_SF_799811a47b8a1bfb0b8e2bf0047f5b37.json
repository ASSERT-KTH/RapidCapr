{
    "patch": "public String fixCode(String code) {\n    String fixedCode;\n    if (code.contains(\"for(\") && code.contains(\"in\")) {\n        int startIndex = code.indexOf(\"for(\");\n        int endIndex = code.indexOf(\"{\", startIndex);\n\n        String loop = code.substring(startIndex, endIndex);\n\n        String[] loopComponents = loop.split(\";\");\n        String newLoop = \"for(\";\n        for (String component : loopComponents) {\n            if (component.contains(\"in\")) {\n                String[] inComponents = component.trim().split(\" \");\n                int inIndex = component.indexOf(\"in\");\n                String array = inComponents[inIndex + 1];\n                String var = inComponents[inIndex - 1];\n\n                if (component.contains(\"?\")) {\n                    newLoop += var + \" : \" + array + \") \";\n                } else {\n                    newLoop += \"Object \" + var + \" : \" + array + \") \";\n                }\n            } else {\n                newLoop += component + \";\";\n            }\n        }\n\n        fixedCode = code.substring(0, startIndex) + newLoop + code.substring(endIndex);\n    } else {\n        fixedCode = code;\n    }\n    return fixedCode;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..ee537001 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,39 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    String fixedCode;\n+    if (code.contains(\"for(\") && code.contains(\"in\")) {\n+        int startIndex = code.indexOf(\"for(\");\n+        int endIndex = code.indexOf(\"{\", startIndex);\n+\n+        String loop = code.substring(startIndex, endIndex);\n+\n+        String[] loopComponents = loop.split(\";\");\n+        String newLoop = \"for(\";\n+        for (String component : loopComponents) {\n+            if (component.contains(\"in\")) {\n+                String[] inComponents = component.trim().split(\" \");\n+                int inIndex = component.indexOf(\"in\");\n+                String array = inComponents[inIndex + 1];\n+                String var = inComponents[inIndex - 1];\n+\n+                if (component.contains(\"?\")) {\n+                    newLoop += var + \" : \" + array + \") \";\n+                } else {\n+                    newLoop += \"Object \" + var + \" : \" + array + \") \";\n+                }\n+            } else {\n+                newLoop += component + \";\";\n+            }\n+        }\n+\n+        fixedCode = code.substring(0, startIndex) + newLoop + code.substring(endIndex);\n+    } else {\n+        fixedCode = code;\n+    }\n+    return fixedCode;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}