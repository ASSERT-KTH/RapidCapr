{
    "patch": "      if (functionType.getTypeOfThis() != null &&\n          !NodeUtil.isGetOrSetKey(child) &&\n          !NodeUtil.isCallOrNew(child.getParent(), child)) {\n        report(t, child, CALL_FUNCTION_WITH_TYPE_THIS,\n            functionType.getDisplayName());\n      }\n\n      visitParameterList(t, n, functionType);\n      ensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..1adb5350 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      if (functionType.getTypeOfThis() != null &&\n+          !NodeUtil.isGetOrSetKey(child) &&\n+          !NodeUtil.isCallOrNew(child.getParent(), child)) {\n+        report(t, child, CALL_FUNCTION_WITH_TYPE_THIS,\n+            functionType.getDisplayName());\n+      }\n+\n+      visitParameterList(t, n, functionType);\n+      ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: method isCallOrNew in class NodeUtil cannot be applied to given types;",
    "test_result": "ERROR"
}