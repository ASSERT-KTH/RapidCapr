{
    "patch": "public double getTypedPercent(JSONArray jsonArray) {\n    int count = 0;\n    int typedCount = 0;\n\n    // Loop through the JSONArray and count the number of elements and typed elements.\n    for (int i = 0; i < jsonArray.length(); i++) {\n        count++;\n\n        if (jsonArray.getJSONObject(i).has(\"type\")) {\n            typedCount++;\n        }\n    }\n\n    // Calculate the percentage of typed elements.\n    double percent = (double) typedCount / (double) count * 100.0;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..5e5b67f6 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JSONArray jsonArray) {\n+    int count = 0;\n+    int typedCount = 0;\n+\n+    // Loop through the JSONArray and count the number of elements and typed elements.\n+    for (int i = 0; i < jsonArray.length(); i++) {\n+        count++;\n+\n+        if (jsonArray.getJSONObject(i).has(\"type\")) {\n+            typedCount++;\n+        }\n+    }\n+\n+    // Calculate the percentage of typed elements.\n+    double percent = (double) typedCount / (double) count * 100.0;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}