{
    "patch": "            if (resetFields) {\n                // If we get an exception even with the original values, drop\n                // the saved fields, and try again.\n                iSavedFields = null;\n                iSavedFieldsShared = false;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..cbdea771 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,11 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (resetFields) {\n+                // If we get an exception even with the original values, drop\n+                // the saved fields, and try again.\n+                iSavedFields = null;\n+                iSavedFieldsShared = false;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}