{
    "patch": "import java.io.UnsupportedEncodingException; \npublic class MyEncoder { \n  public static String encodeISO8859_1_ESCAPE(String input) throws UnsupportedEncodingException { \n    StringBuilder resultStr = new StringBuilder(); \n    for (int i = 0; i < input.length(); i++) { \n      char ch = input.charAt(i); \n      if (ch <= 255) { \n        if (ch == ' ') { \n          resultStr.append('+'); \n        } else if (ch == '%' || ch == '+' || ch == ';' || ch == '\\'' || ch == '\\\"' || ch == '<' || ch == '>' || ch == '\\\\') { \n          resultStr.append('%'); \n          resultStr.append(Integer.toHexString(ch)); \n        } else { \n          resultStr.append(ch); \n        } \n      } else { \n        resultStr.append(\"%u\"); \n        resultStr.append(Integer.toHexString(ch)); \n      } \n    } \n    return resultStr.toString(); \n  } \n} ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..7ce430ef 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,29 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.UnsupportedEncodingException; \n+public class MyEncoder { \n+  public static String encodeISO8859_1_ESCAPE(String input) throws UnsupportedEncodingException { \n+    StringBuilder resultStr = new StringBuilder(); \n+    for (int i = 0; i < input.length(); i++) { \n+      char ch = input.charAt(i); \n+      if (ch <= 255) { \n+        if (ch == ' ') { \n+          resultStr.append('+'); \n+        } else if (ch == '%' || ch == '+' || ch == ';' || ch == '\\'' || ch == '\\\"' || ch == '<' || ch == '>' || ch == '\\\\') { \n+          resultStr.append('%'); \n+          resultStr.append(Integer.toHexString(ch)); \n+        } else { \n+          resultStr.append(ch); \n+        } \n+      } else { \n+        resultStr.append(\"%u\"); \n+        resultStr.append(Integer.toHexString(ch)); \n+      } \n+    } \n+    return resultStr.toString(); \n+  } \n+} \n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}