{
    "patch": "    public static boolean is_sorted(int [] lst) {\n        boolean increasing = false, decreasing = false;\n        for(int i = 1; i < lst.length; i++) {\n            if(lst[i-1] < lst[i]) {\n                increasing = true;\n            } else if(lst[i-1] > lst[i]) {\n                decreasing = true;\n            }\n            if(increasing && decreasing) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..3d4f770 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,19 +19,17 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n-        }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n+    public static boolean is_sorted(int [] lst) {\n+        boolean increasing = false, decreasing = false;\n+        for(int i = 1; i < lst.length; i++) {\n+            if(lst[i-1] < lst[i]) {\n+                increasing = true;\n+            } else if(lst[i-1] > lst[i]) {\n+                decreasing = true;\n+            }\n+            if(increasing && decreasing) {\n+                return false;\n+            }\n         }\n         return true;\n     }",
    "result_reason": "   TEST_IS_SORTED.test_10:57 expected:<false> but was:<true>",
    "test_result": "FAIL"
}