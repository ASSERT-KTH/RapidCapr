{
    "patch": "    private static final Set<Locale> cAvailableLocaleSet;\n    \n    static {\n        List<Locale> availableLocales = Arrays.asList(Locale.getAvailableLocales());\n        cAvailableLocaleSet = new HashSet<>(availableLocales);\n    }\n\n    public static boolean isAvailableLocale(Locale locale) {\n        return cAvailableLocaleSet.contains(locale);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex ceb886e8..dd5c4a81 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -219,9 +219,18 @@ public class LocaleUtils {\n      * @param locale the Locale object to check if it is available\n      * @return true if the locale is a known locale\n      */\n+    public static boolean isAvailableLocale(Locale locale) {\n+    private static final Set<Locale> cAvailableLocaleSet;\n+    \n+    static {\n+        List<Locale> availableLocales = Arrays.asList(Locale.getAvailableLocales());\n+        cAvailableLocaleSet = new HashSet<>(availableLocales);\n+    }\n+\n     public static boolean isAvailableLocale(Locale locale) {\n         return cAvailableLocaleSet.contains(locale);\n     }\n+    }\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}