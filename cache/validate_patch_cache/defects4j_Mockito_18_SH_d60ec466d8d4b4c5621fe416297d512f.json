{
    "patch": "public ReturnValueForValues values() {\n    ReturnValueForValues values = new ReturnValueForValues();\n\n    for (Entry<String, Object> entry : returnValueFor.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n        if (value instanceof Throwable) {\n            values.returnValueFor.put(key, value);\n        } else {\n            try {\n                Method method = value.getClass().getMethod(key);\n                values.returnValueFor.put(key, method.invoke(value));\n            } catch (Throwable t) {\n                values.returnValueFor.put(key, t);\n            }\n        }\n    }\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}