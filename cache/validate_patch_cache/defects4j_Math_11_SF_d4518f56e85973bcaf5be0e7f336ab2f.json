{
    "patch": "public double density(final double[] vals) throws DimensionMismatchException {\n\n    final int dim = getDimension();\n    if (vals.length != dim) {\n        throw new DimensionMismatchException(vals.length, dim);\n    }\n    \n    final double exp = getExponentTerm(vals);\n    final double det = covarianceMatrixDeterminant;\n\n    return (1d / (FastMath.pow(2d * FastMath.PI, dim / 2d) * FastMath.sqrt(det))) * FastMath.exp(-exp / 2d);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\nindex 15706811b..f3d329364 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\n@@ -174,16 +174,18 @@ public class MultivariateNormalDistribution\n     }\n \n     /** {@inheritDoc} */\n-    public double density(final double[] vals) throws DimensionMismatchException {\n-        final int dim = getDimension();\n-        if (vals.length != dim) {\n-            throw new DimensionMismatchException(vals.length, dim);\n-        }\n+public double density(final double[] vals) throws DimensionMismatchException {\n \n-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n-            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n-            getExponentTerm(vals);\n+    final int dim = getDimension();\n+    if (vals.length != dim) {\n+        throw new DimensionMismatchException(vals.length, dim);\n     }\n+    \n+    final double exp = getExponentTerm(vals);\n+    final double det = covarianceMatrixDeterminant;\n+\n+    return (1d / (FastMath.pow(2d * FastMath.PI, dim / 2d) * FastMath.sqrt(det))) * FastMath.exp(-exp / 2d);\n+}\n \n     /**\n      * Gets the square root of each element on the diagonal of the covariance",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.09528357207691344> but was:<0.05779240783158657>",
    "test_result": "FAIL"
}