{
    "patch": "            try {\n                for (int i = 0; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e) {\n                String message = \"Cannot parse \\\"\" + text + '\"';\n                if ( e.getIllegalInstant() != null ) {\n                  throw new IllegalArgumentException \n                    (message, e.getCause() == null ? e : e.getCause());\n                } else {\n                  throw new IllegalArgumentException (e.getMessage(), e.getCause());\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..c360c98a 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,18 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            try {\n+                for (int i = 0; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                String message = \"Cannot parse \\\"\" + text + '\"';\n+                if ( e.getIllegalInstant() != null ) {\n+                  throw new IllegalArgumentException \n+                    (message, e.getCause() == null ? e : e.getCause());\n+                } else {\n+                  throw new IllegalArgumentException (e.getMessage(), e.getCause());\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'try' without 'catch' or 'finally'",
    "test_result": "ERROR"
}