{
    "patch": "public static boolean containsAny(CharSequence cs, char... searchChars) {\n    if (cs == null || searchChars == null) {\n        return false;\n    }\n    \n    int csLength = cs.length();\n    int searchCharsLength = searchChars.length;\n    boolean[] chars = new boolean[Character.MAX_VALUE + 1];\n    \n    // store all characters of searchChars in a boolean array\n    for (int i = 0; i < searchCharsLength; i++) {\n        char ch = searchChars[i];\n        if (!chars[ch]) {\n            chars[ch] = true;\n        }\n    }\n    \n    // check if any character in cs exists in chars\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (chars[ch]) {\n            return true;\n        }\n    }\n    \n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..51017f13 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,33 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char... searchChars) {\n+    if (cs == null || searchChars == null) {\n+        return false;\n+    }\n+    \n+    int csLength = cs.length();\n+    int searchCharsLength = searchChars.length;\n+    boolean[] chars = new boolean[Character.MAX_VALUE + 1];\n+    \n+    // store all characters of searchChars in a boolean array\n+    for (int i = 0; i < searchCharsLength; i++) {\n+        char ch = searchChars[i];\n+        if (!chars[ch]) {\n+            chars[ch] = true;\n+        }\n+    }\n+    \n+    // check if any character in cs exists in chars\n+    for (int i = 0; i < csLength; i++) {\n+        char ch = cs.charAt(i);\n+        if (chars[ch]) {\n+            return true;\n+        }\n+    }\n+    \n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}