{
    "patch": "    // We only want to match constraints on anonymous types.\n    Preconditions.checkState(typeRegistry.isAnonymousObjectType(getJSType()),\n        \"Trying to match constraint against non-anonymous type %s\",\n        getJSType());\n    ",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..89cf3080 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,11 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+    // We only want to match constraints on anonymous types.\n+    Preconditions.checkState(typeRegistry.isAnonymousObjectType(getJSType()),\n+        \"Trying to match constraint against non-anonymous type %s\",\n+        getJSType());\n+    \n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}