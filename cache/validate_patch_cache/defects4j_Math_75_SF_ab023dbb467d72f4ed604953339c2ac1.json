{
    "patch": "public <T extends Comparable<T>> double getCumPct(T v) {\n    int pos = Arrays.binarySearch(values, v);\n    if (pos < 0) {\n        pos = -(pos + 1);\n    }\n    return (double) pos / (double) values.length;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..b2c152e98 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,13 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n-    public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public <T extends Comparable<T>> double getCumPct(T v) {\n+    int pos = Arrays.binarySearch(values, v);\n+    if (pos < 0) {\n+        pos = -(pos + 1);\n     }\n+    return (double) pos / (double) values.length;\n+}\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: name clash: getCumPct(Comparable<?>) and <T>getCumPct(T) have the same erasure",
    "test_result": "ERROR"
}