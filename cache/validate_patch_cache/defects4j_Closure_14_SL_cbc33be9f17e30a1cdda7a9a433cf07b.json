{
    "patch": "              if (cfa != null && finallyNode != null) {\n                cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(\n                    finallyNode.getLastChild(), finallyNode.getLastChild(),\n                    cfa));\n              }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..3fb3e224 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,11 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+              if (cfa != null && finallyNode != null) {\n+                cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(\n+                    finallyNode.getLastChild(), finallyNode.getLastChild(),\n+                    cfa));\n+              }\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "junit.framework.AssertionFailedError: No cross edges found",
    "test_result": "FAIL"
}