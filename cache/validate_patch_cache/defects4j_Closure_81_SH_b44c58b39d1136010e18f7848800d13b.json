{
    "patch": "      Node newName = null;\n\n      if (name == null) {\n        name = new Name();\n        // Enter the empty string in the symbol table.\n        name.setIdentifier(\"\");\n        newName = transform(name);\n        // Old Rhino tagged the empty name node with the line number of the\n        // declaration.\n        newName.setLineno(functionNode.getLineno());\n        // TODO(bowdidge) Mark line number of paren correctly.\n        // Same problem as below - the left paren might not be on the\n        // same line as the function keyword.\n        int lpColumn = functionNode.getAbsolutePosition() +\n            functionNode.getLp();\n        newName.setCharno(position2charno(lpColumn));\n      } else {\n        newName = transform(name);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..6765b90f 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,24 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      Node newName = null;\n+\n+      if (name == null) {\n+        name = new Name();\n+        // Enter the empty string in the symbol table.\n+        name.setIdentifier(\"\");\n+        newName = transform(name);\n+        // Old Rhino tagged the empty name node with the line number of the\n+        // declaration.\n+        newName.setLineno(functionNode.getLineno());\n+        // TODO(bowdidge) Mark line number of paren correctly.\n+        // Same problem as below - the left paren might not be on the\n+        // same line as the function keyword.\n+        int lpColumn = functionNode.getAbsolutePosition() +\n+            functionNode.getLp();\n+        newName.setCharno(position2charno(lpColumn));\n+      } else {\n+        newName = transform(name);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}