{
    "patch": "public String getprop(String propertyName) {\n    String propertyValue = \"\";\n\n    try {\n        Properties props = new Properties();\n        InputStream inputStream = getClass().getClassLoader().getResourceAsStream(\"config.properties\");\n        props.load(inputStream);\n        propertyValue = props.getProperty(propertyName);\n        inputStream.close();\n\n        if (propertyValue.equals(\"\")) {\n            System.err.println(\"Warning: Property \" + propertyName + \" not found in configuration file.\");\n        }\n    } catch (IOException e) {\n        System.err.println(\"Error: Unable to read configuration file.\");\n    }\n\n    return propertyValue;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..9d10cde7 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getprop(String propertyName) {\n+    String propertyValue = \"\";\n+\n+    try {\n+        Properties props = new Properties();\n+        InputStream inputStream = getClass().getClassLoader().getResourceAsStream(\"config.properties\");\n+        props.load(inputStream);\n+        propertyValue = props.getProperty(propertyName);\n+        inputStream.close();\n+\n+        if (propertyValue.equals(\"\")) {\n+            System.err.println(\"Warning: Property \" + propertyName + \" not found in configuration file.\");\n+        }\n+    } catch (IOException e) {\n+        System.err.println(\"Error: Unable to read configuration file.\");\n+    }\n+\n+    return propertyValue;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}