{
    "patch": "public static ArrayList<String> words_strings(String s) {\n    ArrayList<String> result = new ArrayList<String>();\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c == ' ' || c == ',') {\n            String word = sb.toString();\n            if (!word.isEmpty()) {\n                result.add(word);\n            }\n            sb = new StringBuilder(); // reset StringBuilder\n        } else {\n            sb.append(c); // append current character to StringBuilder\n        }\n    }\n    String lastWord = sb.toString().trim(); // add last word if exists\n    if (!lastWord.isEmpty()) {\n        result.add(lastWord);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/WORDS_STRINGS.java b/src/main/java/humaneval/buggy/WORDS_STRINGS.java\nindex e98a5f0..0518373 100644\n--- a/src/main/java/humaneval/buggy/WORDS_STRINGS.java\n+++ b/src/main/java/humaneval/buggy/WORDS_STRINGS.java\n@@ -12,20 +12,25 @@ import java.util.ArrayList;\n  */\n \n public class WORDS_STRINGS {\n-\tpublic static ArrayList<String> words_strings(String s) {\n-\t\tArrayList<String> result = new ArrayList<String>();\n-\t\tString s_list = \"\";\n-\t\tfor(char c : s.toCharArray()) {\n-\t\t\tif(c == ',') {\n-\t\t\t\ts_list += ' ';\n-\t\t\t} else {\n-\t\t\t\ts_list += c;\n-\t\t\t}\n-\t\t}\n-\t\tString[] result_array = s_list.trim().split(\"\\\\s+\");\n-\t\tfor(String r : result_array) {\n-\t\t\tresult.add(r);\n-\t\t}\n-\t\treturn result;\n-\t}\n+public static ArrayList<String> words_strings(String s) {\n+    ArrayList<String> result = new ArrayList<String>();\n+    StringBuilder sb = new StringBuilder();\n+    for (int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        if (c == ' ' || c == ',') {\n+            String word = sb.toString();\n+            if (!word.isEmpty()) {\n+                result.add(word);\n+            }\n+            sb = new StringBuilder(); // reset StringBuilder\n+        } else {\n+            sb.append(c); // append current character to StringBuilder\n+        }\n+    }\n+    String lastWord = sb.toString().trim(); // add last word if exists\n+    if (!lastWord.isEmpty()) {\n+        result.add(lastWord);\n+    }\n+    return result;\n }\n+",
    "result_reason": " /tmp/humaneval-WORDS_STRINGS/src/main/java/humaneval/buggy/WORDS_STRINGS.java:[35,2] reached end of file while parsing",
    "test_result": "ERROR"
}