{
    "patch": "    protected void dropPhase1Objective() {\n        if (getNumObjectiveFunctions() == 1) {\n            return;\n        }\n\n        List<Integer> columnsToDrop = new ArrayList<Integer>();\n        columnsToDrop.add(0);\n\n        // positive cost non-artificial variables\n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }\n\n        // non-basic artificial variables\n        for (int i = 0; i < getNumArtificialVariables(); i++) {\n          int col = i + getArtificialVariableOffset();\n          if (getBasicRow(col) == null) {\n            boolean allZero = true;\n            for (int j = 0; j < getHeight() && allZero; j++) {\n                allZero = Precision.equals(tableau.getEntry(j, col), 0d, maxUlps);\n            }\n            if (allZero) {\n                columnsToDrop.add(col);\n            }\n          }\n        }\n\n        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n        for (int i = 1; i < getHeight(); i++) {\n          int col = 0;\n          for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n              matrix[i - 1][col++] = tableau.getEntry(i, j);\n            }\n          }\n        }\n\n        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n          columnLabels.remove((int) columnsToDrop.get(i));\n        }\n\n        this.tableau = new Array2DRowRealMatrix(matrix);\n        this.numArtificialVariables = 0;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..169c4e4b6 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -344,7 +344,13 @@ class SimplexTableau implements Serializable {\n         for (int i = 0; i < getNumArtificialVariables(); i++) {\n           int col = i + getArtificialVariableOffset();\n           if (getBasicRow(col) == null) {\n-            columnsToDrop.add(col);\n+            boolean allZero = true;\n+            for (int j = 0; j < getHeight() && allZero; j++) {\n+                allZero = Precision.equals(tableau.getEntry(j, col), 0d, maxUlps);\n+            }\n+            if (allZero) {\n+                columnsToDrop.add(col);\n+            }\n           }\n         }\n ",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2902.92783505155> but was:<4704.5>",
    "test_result": "FAIL"
}