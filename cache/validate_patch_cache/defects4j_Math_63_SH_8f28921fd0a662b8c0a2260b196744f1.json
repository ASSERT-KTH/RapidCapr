{
    "patch": "public static boolean equals(double x, double y) {\n        if (Double.isNaN(x) && Double.isNaN(y)) {\n            return true;\n        } else if (x == 0 || y == 0 || Double.isInfinite(x) || Double.isInfinite(y)) {\n            // check for exact equality for zeros and infinities\n            return x == y;\n        } else {\n            double relativeTolerance = FastMath.max(MathUtils.epsilon, FastMath.max(FastMath.abs(x), FastMath.abs(y)) * MathUtils.epsilon);\n            return FastMath.abs(x - y) <= relativeTolerance * FastMath.max(FastMath.abs(x), FastMath.abs(y));\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..75a74bde6 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -414,7 +414,17 @@ public final class MathUtils {\n      * @return {@code true} if the values are equal.\n      */\n     public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+public static boolean equals(double x, double y) {\n+        if (Double.isNaN(x) && Double.isNaN(y)) {\n+            return true;\n+        } else if (x == 0 || y == 0 || Double.isInfinite(x) || Double.isInfinite(y)) {\n+            // check for exact equality for zeros and infinities\n+            return x == y;\n+        } else {\n+            double relativeTolerance = FastMath.max(MathUtils.epsilon, FastMath.max(FastMath.abs(x), FastMath.abs(y)) * MathUtils.epsilon);\n+            return FastMath.abs(x - y) <= relativeTolerance * FastMath.max(FastMath.abs(x), FastMath.abs(y));\n+        }\n+    }\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}