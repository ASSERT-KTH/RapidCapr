{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    try {\n        JSONObject obj = new JSONObject(jsonStr);\n        JSONArray arr = obj.getJSONArray(\"items\");\n        int count = 0;\n        for (int i = 0; i < arr.length(); i++) {\n            JSONObject itemObj = arr.getJSONObject(i);\n            String type = itemObj.optString(\"type\");\n            if (!TextUtils.isEmpty(type)) {\n                if (type.equals(\"typed\")) {\n                    count++;\n                }\n            }\n        }\n        double percent = ((double)count/(double)arr.length())*100;\n        return percent;\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n    return 0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..6c2926b6 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    try {\n+        JSONObject obj = new JSONObject(jsonStr);\n+        JSONArray arr = obj.getJSONArray(\"items\");\n+        int count = 0;\n+        for (int i = 0; i < arr.length(); i++) {\n+            JSONObject itemObj = arr.getJSONObject(i);\n+            String type = itemObj.optString(\"type\");\n+            if (!TextUtils.isEmpty(type)) {\n+                if (type.equals(\"typed\")) {\n+                    count++;\n+                }\n+            }\n+        }\n+        double percent = ((double)count/(double)arr.length())*100;\n+        return percent;\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+    return 0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}