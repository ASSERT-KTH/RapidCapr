{
    "patch": "public static boolean containsAny(CharSequence cs, char... searchChars) {\n    if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n        return false;\n    }\n    for (int i = 0; i < cs.length(); i++) {\n        int codePoint = Character.codePointAt(cs, i);\n        if (searchCharsContains(codePoint, searchChars)) {\n            return true;\n        }\n        i += Character.charCount(codePoint) - 1;\n    }\n    return false;\n}\n\nprivate static boolean searchCharsContains(int codePoint, char[] searchChars) {\n    for (int j = 0; j < searchChars.length; j++) {\n        char c = searchChars[j];\n        if (Character.codePointAt(new char[] {c}, 0) == codePoint) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..13ada2cc 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,29 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char... searchChars) {\n+    if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n+        return false;\n+    }\n+    for (int i = 0; i < cs.length(); i++) {\n+        int codePoint = Character.codePointAt(cs, i);\n+        if (searchCharsContains(codePoint, searchChars)) {\n+            return true;\n+        }\n+        i += Character.charCount(codePoint) - 1;\n+    }\n+    return false;\n+}\n+\n+private static boolean searchCharsContains(int codePoint, char[] searchChars) {\n+    for (int j = 0; j < searchChars.length; j++) {\n+        char c = searchChars[j];\n+        if (Character.codePointAt(new char[] {c}, 0) == codePoint) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}