{
    "patch": "final Object attribute = tree.getAttribute();\nif (attribute != null && attribute instanceof BoundaryAttribute) {\n    final BoundaryAttribute<Euclidean2D> ba = (BoundaryAttribute<Euclidean2D>) attribute;\n    if (ba.getPlusOutside() == null) {\n        // the polygon as a finite outside surrounded by an infinite inside\n        setSize(Double.POSITIVE_INFINITY);\n        setBarycenter(Vector2D.NaN);\n        return;\n    }\n}\nif (attribute == null || !((Boolean) attribute)) {\n    setSize(0);\n    setBarycenter(new Vector2D(0, 0));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\nindex c6e7cf18c..7250267bb 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\n@@ -133,7 +133,20 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {\n \n         if (v.length == 0) {\n             final BSPTree<Euclidean2D> tree = getTree(false);\n-            if ((Boolean) tree.getAttribute()) {\n+final Object attribute = tree.getAttribute();\n+if (attribute != null && attribute instanceof BoundaryAttribute) {\n+    final BoundaryAttribute<Euclidean2D> ba = (BoundaryAttribute<Euclidean2D>) attribute;\n+    if (ba.getPlusOutside() == null) {\n+        // the polygon as a finite outside surrounded by an infinite inside\n+        setSize(Double.POSITIVE_INFINITY);\n+        setBarycenter(Vector2D.NaN);\n+        return;\n+    }\n+}\n+if (attribute == null || !((Boolean) attribute)) {\n+    setSize(0);\n+    setBarycenter(new Vector2D(0, 0));\n+}\n                 // the instance covers the whole space\n                 setSize(Double.POSITIVE_INFINITY);\n                 setBarycenter(Vector2D.NaN);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}