{
    "patch": "public class MyClass {\n    public int getprop(String prop) {\n        Properties props = new Properties();\n        int returnValue = -1;\n        try {\n            FileReader reader = new FileReader(\"config.properties\");\n            props.load(reader);\n            returnValue = Integer.parseInt(props.getProperty(prop));\n            reader.close();\n        } catch (IOException ex) {\n            System.err.println(\"Error loading properties file\");\n        }\n        return returnValue;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..a7c0b0db 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public class MyClass {\n+    public int getprop(String prop) {\n+        Properties props = new Properties();\n+        int returnValue = -1;\n+        try {\n+            FileReader reader = new FileReader(\"config.properties\");\n+            props.load(reader);\n+            returnValue = Integer.parseInt(props.getProperty(prop));\n+            reader.close();\n+        } catch (IOException ex) {\n+            System.err.println(\"Error loading properties file\");\n+        }\n+        return returnValue;\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}