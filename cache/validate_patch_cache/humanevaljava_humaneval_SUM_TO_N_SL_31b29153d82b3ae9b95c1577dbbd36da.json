{
    "patch": "if (n < 0) {\n    throw new IllegalArgumentException(\"n should be a non-negative integer!\");\n} else {\n    return IntStream.rangeClosed(1, n).sum();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SUM_TO_N.java b/src/main/java/humaneval/buggy/SUM_TO_N.java\nindex 319b248..6a84750 100644\n--- a/src/main/java/humaneval/buggy/SUM_TO_N.java\n+++ b/src/main/java/humaneval/buggy/SUM_TO_N.java\n@@ -14,6 +14,10 @@ package humaneval.buggy;\n \n public class SUM_TO_N {\n     public static int sum_to_n(int n) {\n-        return (n + 1) * (n / 2);\n+if (n < 0) {\n+    throw new IllegalArgumentException(\"n should be a non-negative integer!\");\n+} else {\n+    return IntStream.rangeClosed(1, n).sum();\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-SUM_TO_N/src/main/java/humaneval/buggy/SUM_TO_N.java:[20,12] cannot find symbol",
    "test_result": "ERROR"
}