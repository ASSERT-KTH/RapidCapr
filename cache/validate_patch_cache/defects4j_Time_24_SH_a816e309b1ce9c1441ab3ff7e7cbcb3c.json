{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                long res = savedFields[i].set(millis, resetFields);\n                if (res != millis) {\n                    throw new IllegalArgumentException(\"Parse failed due to recurring computation\");\n                }\n                millis = res;\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        } catch (RuntimeException e) {\n            if (text != null) {\n                throw new IllegalArgumentException(\n                        \"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage(), e);\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..ed8d6ef8 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                long res = savedFields[i].set(millis, resetFields);\n+                if (res != millis) {\n+                    throw new IllegalArgumentException(\"Parse failed due to recurring computation\");\n+                }\n+                millis = res;\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        } catch (RuntimeException e) {\n+            if (text != null) {\n+                throw new IllegalArgumentException(\n+                        \"Cannot parse \\\"\" + text + \"\\\": \" + e.getMessage(), e);\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Cannot parse \"2010--30 06\": Parse failed due to recurring computation",
    "test_result": "FAIL"
}