{
    "patch": "import org.mockito.internal.creation.bytebuddy.MockAccess;\nimport org.mockito.internal.creation.bytebuddy.MockMethodInterceptor;\nimport org.mockito.internal.creation.bytebuddy.MockMethodInterceptorFilter;\nimport org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker;\n\npublic <T> void resetMock(T mock) {\n    MockAccess mockAccess = (MockAccess) mock;\n    Object instance = mockAccess.getMockitoInterceptor().getInstance();\n    SubclassByteBuddyMockMaker.INSTANCE.resetMock(mockAccess.getMockitoInterceptor());\n    MockMethodInterceptor mockMethodInterceptor = (MockMethodInterceptor) ((Factory) instance).getCallback(0);\n    MockMethodInterceptorFilter<MockMethodInterceptor> mockMethodInterceptorFilter = new MockMethodInterceptorFilter<MockMethodInterceptor>(mockMethodInterceptor);\n    ((Factory) mock).setCallback(0, mockMethodInterceptorFilter);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..5c94f5e97 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,20 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+import org.mockito.internal.creation.bytebuddy.MockAccess;\n+import org.mockito.internal.creation.bytebuddy.MockMethodInterceptor;\n+import org.mockito.internal.creation.bytebuddy.MockMethodInterceptorFilter;\n+import org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker;\n+\n+public <T> void resetMock(T mock) {\n+    MockAccess mockAccess = (MockAccess) mock;\n+    Object instance = mockAccess.getMockitoInterceptor().getInstance();\n+    SubclassByteBuddyMockMaker.INSTANCE.resetMock(mockAccess.getMockitoInterceptor());\n+    MockMethodInterceptor mockMethodInterceptor = (MockMethodInterceptor) ((Factory) instance).getCallback(0);\n+    MockMethodInterceptorFilter<MockMethodInterceptor> mockMethodInterceptorFilter = new MockMethodInterceptorFilter<MockMethodInterceptor>(mockMethodInterceptor);\n+    ((Factory) mock).setCallback(0, mockMethodInterceptorFilter);\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}