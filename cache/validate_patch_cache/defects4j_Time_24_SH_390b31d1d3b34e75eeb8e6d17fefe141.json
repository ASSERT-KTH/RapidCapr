{
    "patch": "        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            try {\n                millis = savedField.set(millis, resetFields);\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n                }\n\n                boolean isSavedFieldIllegal = true;\n                IllegalFieldValueException savedFieldException = e;\n                for (int j = i + 1; j < count; j++) {\n                    try {\n                        // reset all fields after the current one\n                        SavedField field = savedFields[j];\n                        millis = field.set(millis, resetFields);\n                    } catch (IllegalFieldValueException e2) {\n                        if (text != null) {\n                            e2.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n                        }\n                        savedFieldException = e2;\n                        isSavedFieldIllegal = true;\n                    }\n                }\n\n                if (isSavedFieldIllegal) {\n                    throw savedFieldException;\n                } else {\n                    throw e;\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..2ac1689e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,38 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        for (int i = 0; i < count; i++) {\n+            SavedField savedField = savedFields[i];\n+            try {\n+                millis = savedField.set(millis, resetFields);\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n+                }\n+\n+                boolean isSavedFieldIllegal = true;\n+                IllegalFieldValueException savedFieldException = e;\n+                for (int j = i + 1; j < count; j++) {\n+                    try {\n+                        // reset all fields after the current one\n+                        SavedField field = savedFields[j];\n+                        millis = field.set(millis, resetFields);\n+                    } catch (IllegalFieldValueException e2) {\n+                        if (text != null) {\n+                            e2.prependMessage(\"Cannot parse \\\"\" + text + '\\\"');\n+                        }\n+                        savedFieldException = e2;\n+                        isSavedFieldIllegal = true;\n+                    }\n+                }\n+\n+                if (isSavedFieldIllegal) {\n+                    throw savedFieldException;\n+                } else {\n+                    throw e;\n+                }\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}