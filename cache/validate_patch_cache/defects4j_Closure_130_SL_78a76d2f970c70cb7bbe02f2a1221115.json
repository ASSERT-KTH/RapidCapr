{
    "patch": "if (name.globalSets == 1 && name.aliasingGets > 0) {\n    boolean canInline = true;\n    List<Ref> refs = Lists.newArrayList(name.getRefs());\n    for (Ref ref : refs) {\n        if ((ref.type == Type.SET_FROM_GLOBAL || ref.type == Type.ALIASING_SET)\n                && ref.scope.isGlobal()) {\n            canInline = false;\n            break;\n        }\n    }\n    if (canInline) {\n        for (Ref ref : refs) {\n            if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n                if (inlineAliasIfPossible(ref, namespace)) {\n                    name.removeRef(ref);\n                }\n             }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..d8d0b178 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,26 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+if (name.globalSets == 1 && name.aliasingGets > 0) {\n+    boolean canInline = true;\n+    List<Ref> refs = Lists.newArrayList(name.getRefs());\n+    for (Ref ref : refs) {\n+        if ((ref.type == Type.SET_FROM_GLOBAL || ref.type == Type.ALIASING_SET)\n+                && ref.scope.isGlobal()) {\n+            canInline = false;\n+            break;\n+        }\n+    }\n+    if (canInline) {\n+        for (Ref ref : refs) {\n+            if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n+                if (inlineAliasIfPossible(ref, namespace)) {\n+                    name.removeRef(ref);\n+                }\n+             }\n+        }\n+    }\n+}\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}