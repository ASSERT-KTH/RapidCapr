{
    "patch": "final int delta = offsetLocal - offsetAdjusted;\nif (delta > 0) {\n    final long nextTransition = nextTransition(instantAdjusted);\n    final long adjNext = nextTransition(instantLocal - offsetAdjusted);\n    if (adjNext != nextTransition) {\n        return offsetLocal;\n    } else {\n        return offsetAdjusted;\n    }\n} else if (delta < 0) {\n    long lastTransition = previousTransition(instantLocal - offsetAdjusted);\n    final long lastAdj = previousTransition(instantAdjusted);\n    final int offsetLast = getOffset(lastTransition);\n    if (offsetLast >= offsetAdjusted) {\n        lastTransition = previousTransition(lastAdj);\n    }\n    final int offsetBeforeLast = getOffset(lastTransition);\n    if (offsetBeforeLast == offsetAdjusted) {\n        return offsetBeforeLast;\n    }\n    final int minDelta = Math.min(delta, 0);\n    if (offsetBeforeLast < offsetLocal + minDelta) {\n        return offsetLocal;\n    }\n    return offsetBeforeLast;\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..e2ba4e70 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,33 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+final int delta = offsetLocal - offsetAdjusted;\n+if (delta > 0) {\n+    final long nextTransition = nextTransition(instantAdjusted);\n+    final long adjNext = nextTransition(instantLocal - offsetAdjusted);\n+    if (adjNext != nextTransition) {\n+        return offsetLocal;\n+    } else {\n+        return offsetAdjusted;\n+    }\n+} else if (delta < 0) {\n+    long lastTransition = previousTransition(instantLocal - offsetAdjusted);\n+    final long lastAdj = previousTransition(instantAdjusted);\n+    final int offsetLast = getOffset(lastTransition);\n+    if (offsetLast >= offsetAdjusted) {\n+        lastTransition = previousTransition(lastAdj);\n+    }\n+    final int offsetBeforeLast = getOffset(lastTransition);\n+    if (offsetBeforeLast == offsetAdjusted) {\n+        return offsetBeforeLast;\n+    }\n+    final int minDelta = Math.min(delta, 0);\n+    if (offsetBeforeLast < offsetLocal + minDelta) {\n+        return offsetLocal;\n+    }\n+    return offsetBeforeLast;\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}