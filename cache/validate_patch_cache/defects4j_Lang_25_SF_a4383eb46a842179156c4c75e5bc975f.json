{
    "patch": "public static String escapeUTF8(String input) {\n    StringBuilder output = new StringBuilder();\n\n    for (char c : input.toCharArray()) {\n        if ((c >= 0x0001) && (c <= 0x007F)) {\n            output.append(c);\n        } else if (c > 0x07FF) {\n            output.append((char) (0xE0 | ((c >> 12) & 0x0F)));\n            output.append((char) (0x80 | ((c >> 6) & 0x3F)));\n            output.append((char) (0x80 | ((c >> 0) & 0x3F)));\n        } else {\n            output.append((char) (0xC0 | ((c >> 6) & 0x1F)));\n            output.append((char) (0x80 | ((c >> 0) & 0x3F)));\n        }\n    }\n\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e0a60300 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,24 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escapeUTF8(String input) {\n+    StringBuilder output = new StringBuilder();\n+\n+    for (char c : input.toCharArray()) {\n+        if ((c >= 0x0001) && (c <= 0x007F)) {\n+            output.append(c);\n+        } else if (c > 0x07FF) {\n+            output.append((char) (0xE0 | ((c >> 12) & 0x0F)));\n+            output.append((char) (0x80 | ((c >> 6) & 0x3F)));\n+            output.append((char) (0x80 | ((c >> 0) & 0x3F)));\n+        } else {\n+            output.append((char) (0xC0 | ((c >> 6) & 0x1F)));\n+            output.append((char) (0x80 | ((c >> 0) & 0x3F)));\n+        }\n+    }\n+\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}