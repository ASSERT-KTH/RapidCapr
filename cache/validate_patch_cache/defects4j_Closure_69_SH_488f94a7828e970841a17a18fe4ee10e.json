{
    "patch": "      // Functions with explicit 'this' types must be called in a GETPROP\n      // or GETELEM.\n      if (functionType.hasReceiverType() && !NodeUtil.isGet(functionType.receiver())) {\n        report(t, n, THIS_BEFORE_SUPER,\n            functionType.getDisplayName(), functionType.getReceiverType().toString());\n        ensureTyped(t, n);\n        return;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..dcfbbf85 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      // Functions with explicit 'this' types must be called in a GETPROP\n+      // or GETELEM.\n+      if (functionType.hasReceiverType() && !NodeUtil.isGet(functionType.receiver())) {\n+        report(t, n, THIS_BEFORE_SUPER,\n+            functionType.getDisplayName(), functionType.getReceiverType().toString());\n+        ensureTyped(t, n);\n+        return;\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}