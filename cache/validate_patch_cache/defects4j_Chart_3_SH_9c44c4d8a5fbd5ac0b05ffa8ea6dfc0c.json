{
    "patch": "        copy.data = new java.util.ArrayList<>();\n\n        for (TimeSeriesDataItem item : this.data) {\n            if (item.getPeriod().getFirstMillisecond() >= this.getDataItem(start).getPeriod().getFirstMillisecond() &&\n                    item.getPeriod().getFirstMillisecond() <= this.getDataItem(end).getPeriod().getFirstMillisecond()) {\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                } catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        double minY = Double.POSITIVE_INFINITY;\n        double maxY = Double.NEGATIVE_INFINITY;\n        for (int i = 0; i < copy.getItemCount(); i++) {\n            TimeSeriesDataItem item = copy.getDataItem(i);\n            if (item.getValue() != null) {\n                double value = item.getValue().doubleValue();\n                minY = Math.min(minY, value);\n                maxY = Math.max(maxY, value);\n            }\n        }\n        if (copy.getItemCount() == 0) {\n            minY = Double.NaN;\n            maxY = Double.NaN;\n        }\n        copy.minY = minY;\n        copy.maxY = maxY;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..cddfbe7 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,36 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList<>();\n+\n+        for (TimeSeriesDataItem item : this.data) {\n+            if (item.getPeriod().getFirstMillisecond() >= this.getDataItem(start).getPeriod().getFirstMillisecond() &&\n+                    item.getPeriod().getFirstMillisecond() <= this.getDataItem(end).getPeriod().getFirstMillisecond()) {\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                try {\n+                    copy.add(clone);\n+                } catch (SeriesException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+\n+        double minY = Double.POSITIVE_INFINITY;\n+        double maxY = Double.NEGATIVE_INFINITY;\n+        for (int i = 0; i < copy.getItemCount(); i++) {\n+            TimeSeriesDataItem item = copy.getDataItem(i);\n+            if (item.getValue() != null) {\n+                double value = item.getValue().doubleValue();\n+                minY = Math.min(minY, value);\n+                maxY = Math.max(maxY, value);\n+            }\n+        }\n+        if (copy.getItemCount() == 0) {\n+            minY = Double.NaN;\n+            maxY = Double.NaN;\n+        }\n+        copy.minY = minY;\n+        copy.maxY = maxY;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}