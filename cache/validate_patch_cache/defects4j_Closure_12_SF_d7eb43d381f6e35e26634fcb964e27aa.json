{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    for (Node child : cfgNode.getChildren()) {\n        if (child.isTry()) {\n            return true;\n        } else {\n            if (child.hasChildren() && hasExceptionHandler(child)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..b858c77d 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,18 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    for (Node child : cfgNode.getChildren()) {\n+        if (child.isTry()) {\n+            return true;\n+        } else {\n+            if (child.hasChildren() && hasExceptionHandler(child)) {\n+                return true;\n+            }\n+        }\n+    }\n     return false;\n-  }\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}