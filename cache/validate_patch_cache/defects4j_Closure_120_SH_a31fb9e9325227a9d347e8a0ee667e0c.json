{
    "patch": "for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {\n    if (block.isFunction) {\n        return true; // add this line\n    } else if (block.isLoop) {\n        return false;\n    }\n}\nreturn false; // change this line to return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..26ec22ee 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {\n+    if (block.isFunction) {\n+        return true; // add this line\n+    } else if (block.isLoop) {\n+        return false;\n+    }\n+}\n+return false; // change this line to return false;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: variable block is already defined in method isAssignedOnceInLifetime()",
    "test_result": "ERROR"
}