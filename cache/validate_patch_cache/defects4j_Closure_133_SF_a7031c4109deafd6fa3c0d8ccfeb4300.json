{
    "patch": "private String getRemainingJSDocLine() {\n  String result = null;\n  if (stream != null) {\n    try {\n      result = stream.getRemainingJSDocLine().trim();\n    } catch (NullPointerException e) {\n      // ignore null pointer exceptions caused by invalid JSDoc tags\n    }\n    if (result != null && result.startsWith(\"*\")) {\n      result = result.substring(1).trim();\n    }\n    if (result != null && result.isEmpty()) {\n      result = null;\n    }\n  }\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..8fe3b9cf 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,23 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+private String getRemainingJSDocLine() {\n+  String result = null;\n+  if (stream != null) {\n+    try {\n+      result = stream.getRemainingJSDocLine().trim();\n+    } catch (NullPointerException e) {\n+      // ignore null pointer exceptions caused by invalid JSDoc tags\n+    }\n+    if (result != null && result.startsWith(\"*\")) {\n+      result = result.substring(1).trim();\n+    }\n+    if (result != null && result.isEmpty()) {\n+      result = null;\n+    }\n   }\n+  return result;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}