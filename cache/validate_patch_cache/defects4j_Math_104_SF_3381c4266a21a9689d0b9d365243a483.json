{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double epsilon = 0.000000000000001;\n    double sum = 0;\n    double term = 1 / a;\n    while (Math.abs(term) > epsilon) {\n        sum += term;\n        term *= x / (a + sum);\n    }\n    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n}\n\npublic static double logGamma(double x) {\n    if (x <= 0.0) {\n        return Double.NaN;\n    }\n\n    double y = x;\n    int n = 0;\n    double arg = x + 4.5;\n    double f = (((((+1.000000000190015\n            * 76.18009172947146 / y\n            - 86.50532032941677) / y\n            + 24.01409824083091) / y\n            - 1.231739572450155) / y\n            + 0.1208650973866179e-2) / y\n            - 0.5395239384953e-5) / y;\n\n    double logGamma = (x - 0.5) * Math.log(arg) - arg\n            + Math.log(f * 2.5066282746310005 / y);\n    return logGamma;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..cb8fa1fbb 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,37 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double epsilon = 0.000000000000001;\n+    double sum = 0;\n+    double term = 1 / a;\n+    while (Math.abs(term) > epsilon) {\n+        sum += term;\n+        term *= x / (a + sum);\n+    }\n+    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+}\n+\n+public static double logGamma(double x) {\n+    if (x <= 0.0) {\n+        return Double.NaN;\n+    }\n+\n+    double y = x;\n+    int n = 0;\n+    double arg = x + 4.5;\n+    double f = (((((+1.000000000190015\n+            * 76.18009172947146 / y\n+            - 86.50532032941677) / y\n+            + 24.01409824083091) / y\n+            - 1.231739572450155) / y\n+            + 0.1208650973866179e-2) / y\n+            - 0.5395239384953e-5) / y;\n+\n+    double logGamma = (x - 0.5) * Math.log(arg) - arg\n+            + Math.log(f * 2.5066282746310005 / y);\n+    return logGamma;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}