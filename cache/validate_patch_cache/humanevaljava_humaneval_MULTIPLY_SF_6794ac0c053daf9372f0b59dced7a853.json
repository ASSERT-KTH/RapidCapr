{
    "patch": "public static int multiply(int a, int b) {\n    int result = 0, power = 1;\n    while (a > 0) {\n        int digitA = a % 10;\n        int tempB = b;\n        int carry = 0, digitB, partialProduct = 0;\n        while (tempB > 0) {\n            digitB = tempB % 10;\n            partialProduct += (digitA * digitB + carry) % 10 * power;\n            carry = (digitA * digitB + carry) / 10;\n            tempB /= 10;\n        }\n        if (carry > 0) {\n            partialProduct += carry * power;\n        }\n        result += partialProduct;\n        power *= 10;\n        a /= 10;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MULTIPLY.java b/src/main/java/humaneval/buggy/MULTIPLY.java\nindex 7ea427a..8e56346 100644\n--- a/src/main/java/humaneval/buggy/MULTIPLY.java\n+++ b/src/main/java/humaneval/buggy/MULTIPLY.java\n@@ -10,7 +10,25 @@ package humaneval.buggy;\n // multiply(14,-15) should return 20.\n \n public class MULTIPLY {\n-    public static int multiply(int a, int b) {\n-        return (a % 10) * (b % 10);\n+public static int multiply(int a, int b) {\n+    int result = 0, power = 1;\n+    while (a > 0) {\n+        int digitA = a % 10;\n+        int tempB = b;\n+        int carry = 0, digitB, partialProduct = 0;\n+        while (tempB > 0) {\n+            digitB = tempB % 10;\n+            partialProduct += (digitA * digitB + carry) % 10 * power;\n+            carry = (digitA * digitB + carry) / 10;\n+            tempB /= 10;\n+        }\n+        if (carry > 0) {\n+            partialProduct += carry * power;\n+        }\n+        result += partialProduct;\n+        power *= 10;\n+        a /= 10;\n     }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_MULTIPLY.test_0:7 expected:<910> but was:<16>",
    "test_result": "FAIL"
}