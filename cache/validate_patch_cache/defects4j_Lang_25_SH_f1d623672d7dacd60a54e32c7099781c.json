{
    "patch": "public void testISO8859_1_ESCAPE() throws Exception {\n    String in = \"ISO8859_1_ESCAPE_TEST\";\n    javacc.Main.main(new String[]{\"-STATIC=false\", \"-JAVA=true\", \"-TOKEN_MANAGER_USES_PARSER=false\", \"src/test/resources/ISO8859_1_ESCAPE.jj\"});\n    File file = new File(\"./src/test/resources/ISO8859_1_ESCAPE_TEST.java\");\n    file.createNewFile();\n    FileOutputStream fileOutputStream = new FileOutputStream(file, false);\n    try {\n        fileOutputStream.write((in + \"\\n\").getBytes(Charset.forName(\"ISO-8859-1\")));\n    } finally {\n        fileOutputStream.close();\n    }\n    java.util.logging.Logger.getLogger(JavaScriptParserTest.class.getName()).log(java.util.logging.Level.INFO, \"Generated test file:\" + file.getAbsolutePath());\n    ByteArrayOutputStream baosOut = new ByteArrayOutputStream();\n    PrintStream capturedOut = new PrintStream(baosOut);\n    PrintStream originalOut = System.out;\n    final InputStream originalInputStream = System.in;\n    final PrintStream originalErrStream = System.err;\n    System.setIn(new ByteArrayInputStream(\"\".getBytes()));\n    System.setOut(capturedOut);\n    System.setErr(capturedOut);\n    try {\n        JavaScriptParser.main(new String[]{file.getAbsolutePath()});\n    } finally {\n        System.setIn(originalInputStream);\n        System.setOut(originalOut);\n        System.setErr(originalErrStream);\n    }\n    final String result = new String(baosOut.toByteArray(), StandardCharsets.UTF_8);\n    int errors = StringUtils.countMatches(result, \"parse error\");\n    assertEquals(\"Expected no parse errors\", 0, errors);\n    int warnings = StringUtils.countMatches(result, \"Warning\");\n    assertEquals(\"Expected no warnings\", 0, warnings);\n    boolean success = StringUtils.countMatches(result, \"Error\") == 1;\n    assertTrue(\"One or more errors detected\", success); // infill required here\n    file.delete();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}