{
    "patch": "private String getRemainingJSDocLine() {\n    StringBuilder resultBuilder = new StringBuilder(stream.getRemainingJSDocLine());\n    while (stream.hasMore()) {\n        char next = stream.peek();\n        if (Character.isWhitespace(next) && next != ' ') {\n            // Replace any non-space whitespace characters with a single space\n            resultBuilder.append(' ');\n            stream.next();\n        } else {\n            break;\n        }\n    }\n    String result = resultBuilder.toString();\n    if (result.isEmpty()) {\n        throw new IllegalStateException(\"No JSDoc line found\");\n    }\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..abed4a05 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,24 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+    StringBuilder resultBuilder = new StringBuilder(stream.getRemainingJSDocLine());\n+    while (stream.hasMore()) {\n+        char next = stream.peek();\n+        if (Character.isWhitespace(next) && next != ' ') {\n+            // Replace any non-space whitespace characters with a single space\n+            resultBuilder.append(' ');\n+            stream.next();\n+        } else {\n+            break;\n+        }\n+    }\n+    String result = resultBuilder.toString();\n+    if (result.isEmpty()) {\n+        throw new IllegalStateException(\"No JSDoc line found\");\n+    }\n+    return result.trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}