{
    "patch": "        if (start < 0 || end >= this.data.size()) {\n            throw new IllegalArgumentException(\"Invalid range for creating a copy.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        copy.maxY = Double.NaN;\n        copy.minY = Double.NaN;\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item = this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                } catch (SeriesException e) {",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..7747a15 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,20 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start < 0 || end >= this.data.size()) {\n+            throw new IllegalArgumentException(\"Invalid range for creating a copy.\");\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        copy.maxY = Double.NaN;\n+        copy.minY = Double.NaN;\n+        if (this.data.size() > 0) {\n+            for (int index = start; index <= end; index++) {\n+                TimeSeriesDataItem item = this.data.get(index);\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                try {\n+                    copy.add(clone);\n+                } catch (SeriesException e) {\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}