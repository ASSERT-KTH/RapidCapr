{
    "patch": "      if (NodeUtil.isGet(parent.getParent()) &&\n          parent.getParent().getType() == Token.ASSIGN) {\n        Node grandparent = parent.getParent().getParent();\n        if (grandparent.getType() == Token.EXPR_RESULT &&\n            grandparent.getParent().getType() == Token.SCRIPT) {\n          Node rhs = parent.getNext();\n          if (rhs != null && rhs.getType() == Token.NAME &&\n              rhs.getString().equals(\"$jscomp$templatize\")) {\n            return true;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..0e42fcbf 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,16 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent.getParent()) &&\n+          parent.getParent().getType() == Token.ASSIGN) {\n+        Node grandparent = parent.getParent().getParent();\n+        if (grandparent.getType() == Token.EXPR_RESULT &&\n+            grandparent.getParent().getType() == Token.SCRIPT) {\n+          Node rhs = parent.getNext();\n+          if (rhs != null && rhs.getType() == Token.NAME &&\n+              rhs.getString().equals(\"$jscomp$templatize\")) {\n+            return true;\n+          }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}