{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    // adjust the instant if the next transition is after the estimated transition  \n    if (nextLocal != nextAdjusted) {\n        if (offsetLocal < 0 && offsetAdjusted >= 0) {\n            nextLocal = previousTransition(instantAdjusted);\n            nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n            instantAdjusted = Math.max(nextLocal, nextAdjusted);\n            offsetAdjusted = getOffset(instantAdjusted);\n            if (offsetLocal != offsetAdjusted) {\n                return offsetLocal;\n            }\n        } else {\n            return offsetLocal;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8265187d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,24 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    // adjust the instant if the next transition is after the estimated transition  \n+    if (nextLocal != nextAdjusted) {\n+        if (offsetLocal < 0 && offsetAdjusted >= 0) {\n+            nextLocal = previousTransition(instantAdjusted);\n+            nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+            instantAdjusted = Math.max(nextLocal, nextAdjusted);\n+            offsetAdjusted = getOffset(instantAdjusted);\n+            if (offsetLocal != offsetAdjusted) {\n+                return offsetLocal;\n+            }\n+        } else {\n+            return offsetLocal;\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot assign a value to final variable instantAdjusted",
    "test_result": "ERROR"
}