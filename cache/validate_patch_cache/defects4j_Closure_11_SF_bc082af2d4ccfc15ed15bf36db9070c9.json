{
    "patch": "private String[] getWarnings(Properties props) {\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    PrintStream ps = new PrintStream(baos);\n    System.setErr(ps);\n    props.list(System.err);\n    System.setErr(System.out);\n    String[] warnings = baos.toString().split(System.lineSeparator());\n    List<String> filteredWarnings = new ArrayList<>();\n    for (String warning : warnings) {\n        // Keep only warnings, not property listings\n        if (warning.startsWith(\"Warning: \")) {\n            filteredWarnings.add(warning.substring(\"Warning: \".length()));\n        }\n    }\n    return filteredWarnings.toArray(new String[0]);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..8ba16306 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+private String[] getWarnings(Properties props) {\n+    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+    PrintStream ps = new PrintStream(baos);\n+    System.setErr(ps);\n+    props.list(System.err);\n+    System.setErr(System.out);\n+    String[] warnings = baos.toString().split(System.lineSeparator());\n+    List<String> filteredWarnings = new ArrayList<>();\n+    for (String warning : warnings) {\n+        // Keep only warnings, not property listings\n+        if (warning.startsWith(\"Warning: \")) {\n+            filteredWarnings.add(warning.substring(\"Warning: \".length()));\n+        }\n+    }\n+    return filteredWarnings.toArray(new String[0]);\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}