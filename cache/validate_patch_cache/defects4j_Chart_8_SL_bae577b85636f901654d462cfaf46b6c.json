{
    "patch": "        Calendar calendar = Calendar.getInstance(zone);\n        calendar.setTime(time);\n        int year = calendar.get(Calendar.YEAR);\n        if (year < MINIMUM_YEAR_SUPPORTED || year > MAXIMUM_YEAR_SUPPORTED) {\n            throw new IllegalArgumentException(\n                    \"Year not within the allowed range.\");\n        }\n        this.year = year;\n        this.week = calendar.get(Calendar.WEEK_OF_YEAR);\n        this.firstDayOfWeek = calendar.getFirstDayOfWeek();\n        this.lastDayOfWeek = this.firstDayOfWeek + 6;\n        this.serialIndex = createSerial(year, this.week);\n        this.peg(Calendar.getInstance());\n        this.ancestor = new Week(this.previous());",
    "patch_diff": "diff --git a/source/org/jfree/data/time/Week.java b/source/org/jfree/data/time/Week.java\nindex 3cc4138..acf1fe5 100644\n--- a/source/org/jfree/data/time/Week.java\n+++ b/source/org/jfree/data/time/Week.java\n@@ -172,7 +172,20 @@ public class Week extends RegularTimePeriod implements Serializable {\n      */\n     public Week(Date time, TimeZone zone) {\n         // defer argument checking...\n-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());\n+        Calendar calendar = Calendar.getInstance(zone);\n+        calendar.setTime(time);\n+        int year = calendar.get(Calendar.YEAR);\n+        if (year < MINIMUM_YEAR_SUPPORTED || year > MAXIMUM_YEAR_SUPPORTED) {\n+            throw new IllegalArgumentException(\n+                    \"Year not within the allowed range.\");\n+        }\n+        this.year = year;\n+        this.week = calendar.get(Calendar.WEEK_OF_YEAR);\n+        this.firstDayOfWeek = calendar.getFirstDayOfWeek();\n+        this.lastDayOfWeek = this.firstDayOfWeek + 6;\n+        this.serialIndex = createSerial(year, this.week);\n+        this.peg(Calendar.getInstance());\n+        this.ancestor = new Week(this.previous());\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}