{
    "patch": "if (n != null \n    && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n    && n.getType() == Token.GETPROP\n    && n.getSecondChild().getType() == Token.STRING\n    && n.getSecondChild().getString().equals(\"prototype\")) {\n    // We want to exclude the assignment itself from the usage list\n    boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;\n    if (isChainedProperty) {\n        Node child = n.getFirstChild().getFirstChild().getNext();\n        if (child.getType() == Token.STRING \n            && child.getString().equals(\"prototype\")) {\n            return true;\n        }\n    }\n}\nreturn false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\nindex 30b19e0b..ccab4a89 100644\n--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n@@ -315,7 +315,22 @@ class AnalyzePrototypeProperties implements CompilerPass {\n       Node n = assign.getFirstChild();\n       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n           && n.getType() == Token.GETPROP\n-          ) {\n+if (n != null \n+    && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n+    && n.getType() == Token.GETPROP\n+    && n.getSecondChild().getType() == Token.STRING\n+    && n.getSecondChild().getString().equals(\"prototype\")) {\n+    // We want to exclude the assignment itself from the usage list\n+    boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;\n+    if (isChainedProperty) {\n+        Node child = n.getFirstChild().getFirstChild().getNext();\n+        if (child.getType() == Token.STRING \n+            && child.getString().equals(\"prototype\")) {\n+            return true;\n+        }\n+    }\n+}\n+return false;\n         // We want to exclude the assignment itself from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType() == Token.GETPROP;",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}