{
    "patch": "public static double getTypedPercent(String jsonString) throws JSONException {\n    JSONArray json = new JSONArray(jsonString);\n    int count = 0;\n    int total = json.length();\n\n    for (int i = 0; i < total; i++) {\n        JSONObject jsonObject = json.getJSONObject(i);\n        if (jsonObject.getBoolean(\"isTyped\")) {\n            count++;\n        }\n    }\n\n    return (count * 100.0) / total;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..b76781c9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonString) throws JSONException {\n+    JSONArray json = new JSONArray(jsonString);\n+    int count = 0;\n+    int total = json.length();\n+\n+    for (int i = 0; i < total; i++) {\n+        JSONObject jsonObject = json.getJSONObject(i);\n+        if (jsonObject.getBoolean(\"isTyped\")) {\n+            count++;\n+        }\n+    }\n+\n+    return (count * 100.0) / total;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}