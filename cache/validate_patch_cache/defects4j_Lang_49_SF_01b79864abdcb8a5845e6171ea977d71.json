{
    "patch": "public Fraction reduce() {\n    if (numerator == 0) {\n        return Fraction.ZERO;\n    }\n    \n    int commonDivisor = gcd(Math.abs(numerator), denominator);\n    int reducedNumerator = numerator / commonDivisor;\n    int reducedDenominator = denominator / commonDivisor;\n    \n    if (reducedDenominator < 0) {\n        reducedNumerator *= -1;\n        reducedDenominator *= -1;\n    }\n    \n    return new Fraction(reducedNumerator, reducedDenominator);\n}\n\nprivate int gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    }\n    return gcd(b, a % b);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..77f3223f 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,13 +462,29 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+public Fraction reduce() {\n+    if (numerator == 0) {\n+        return Fraction.ZERO;\n+    }\n+    \n+    int commonDivisor = gcd(Math.abs(numerator), denominator);\n+    int reducedNumerator = numerator / commonDivisor;\n+    int reducedDenominator = denominator / commonDivisor;\n+    \n+    if (reducedDenominator < 0) {\n+        reducedNumerator *= -1;\n+        reducedDenominator *= -1;\n     }\n+    \n+    return new Fraction(reducedNumerator, reducedDenominator);\n+}\n+\n+private int gcd(int a, int b) {\n+    if (b == 0) {\n+        return a;\n+    }\n+    return gcd(b, a % b);\n+}\n \n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<-2/3> was not:<-2/3>",
    "test_result": "FAIL"
}