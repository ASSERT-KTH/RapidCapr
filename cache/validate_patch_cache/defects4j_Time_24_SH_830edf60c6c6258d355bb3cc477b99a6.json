{
    "patch": "            int errorIndex = e.getErrorIndex();\n            if (text != null) {\n                int parseIndex = savedFields[errorIndex].iPosition;\n                parseIndex = (parseIndex < text.length() ? parseIndex : text.length() - 1);\n                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n                e.prependMessage(\"Value \" + savedFields[errorIndex].iValue + \" for \" +\n                        savedFields[errorIndex].iField.getType() + \" is not supported: \");\n                e.prependMessage(\"Invalid format: \\\"\" +\n                        text.substring(0, parseIndex) + \"\\\" is malformed at \\\"\" +\n                        text.substring(parseIndex) + \"\\\"\");",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..4ac4edb3 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,16 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            int errorIndex = e.getErrorIndex();\n+            if (text != null) {\n+                int parseIndex = savedFields[errorIndex].iPosition;\n+                parseIndex = (parseIndex < text.length() ? parseIndex : text.length() - 1);\n+                e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n+                e.prependMessage(\"Value \" + savedFields[errorIndex].iValue + \" for \" +\n+                        savedFields[errorIndex].iField.getType() + \" is not supported: \");\n+                e.prependMessage(\"Invalid format: \\\"\" +\n+                        text.substring(0, parseIndex) + \"\\\" is malformed at \\\"\" +\n+                        text.substring(parseIndex) + \"\\\"\");\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}