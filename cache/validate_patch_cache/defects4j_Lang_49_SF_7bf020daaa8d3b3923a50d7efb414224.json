{
    "patch": "public Fraction reduce() {\n    int gcd = greatestCommonDivisor(numerator, denominator);\n\n    if (gcd == 1) {\n        return this;\n    }\n\n    int reducedNumerator = numerator / gcd;\n    int reducedDenominator = denominator / gcd;\n\n    if (reducedDenominator < 0) {\n        reducedNumerator = -reducedNumerator;\n        reducedDenominator = -reducedDenominator;\n    }\n\n    return new Fraction(reducedNumerator, reducedDenominator);\n}\n\nprivate int greatestCommonDivisor(int a, int b) {\n    if (b == 0) {\n        return Math.abs(a);\n    }\n    return greatestCommonDivisor(b, a % b);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..8fee0fc7 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,14 +462,31 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+public Fraction reduce() {\n+    int gcd = greatestCommonDivisor(numerator, denominator);\n+\n+    if (gcd == 1) {\n+        return this;\n+    }\n+\n+    int reducedNumerator = numerator / gcd;\n+    int reducedDenominator = denominator / gcd;\n+\n+    if (reducedDenominator < 0) {\n+        reducedNumerator = -reducedNumerator;\n+        reducedDenominator = -reducedDenominator;\n     }\n \n+    return new Fraction(reducedNumerator, reducedDenominator);\n+}\n+\n+private int greatestCommonDivisor(int a, int b) {\n+    if (b == 0) {\n+        return Math.abs(a);\n+    }\n+    return greatestCommonDivisor(b, a % b);\n+}\n+\n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>\n      * ",
    "result_reason": "error: method greatestCommonDivisor(int,int) is already defined in class Fraction",
    "test_result": "ERROR"
}