{
    "patch": "if (escapingOn && c[pos.getIndex()] == QUOTE) {\n    int currentIndex = pos.getIndex();\n    next(pos);\n    if (currentIndex == pos.getIndex()) {\n        // handle empty quoted string \"\"\n        return appendTo == null ? null : appendTo.append(\"\");\n    } else {\n        // handle non-empty quoted string \n        return appendTo == null ? null : appendTo.append(QUOTE).append(c, currentIndex + 1, pos.getIndex() - currentIndex - 1).append(QUOTE);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..f0626ee9 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,17 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+if (escapingOn && c[pos.getIndex()] == QUOTE) {\n+    int currentIndex = pos.getIndex();\n+    next(pos);\n+    if (currentIndex == pos.getIndex()) {\n+        // handle empty quoted string \"\"\n+        return appendTo == null ? null : appendTo.append(\"\");\n+    } else {\n+        // handle non-empty quoted string \n+        return appendTo == null ? null : appendTo.append(QUOTE).append(c, currentIndex + 1, pos.getIndex() - currentIndex - 1).append(QUOTE);\n+    }\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "junit.framework.ComparisonFailure: format Pattern=[1: {0,date,short}], locale=[null] expected:<1: [1/23]/07> but was:<1: [23/01]/07>",
    "test_result": "FAIL"
}