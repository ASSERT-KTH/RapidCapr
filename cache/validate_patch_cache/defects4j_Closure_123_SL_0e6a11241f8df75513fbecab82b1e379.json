{
    "patch": "        if (expr instanceof FieldAccessExpr) {\n            String faeName = ((FieldAccessExpr) expr).getNameAsString();\n            if (\"length\".equals(faeName)) {\n                inArray = true;\n            }\n        } else if (expr instanceof NameExpr) {\n            String varName = ((NameExpr) expr).getNameAsString();\n            if (varName != null && data.containsKey(varName)) {\n                inArray = data.get(varName).isArray();\n            }\n        } else if (expr instanceof ArrayAccessExpr) {\n            inArray = true;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}