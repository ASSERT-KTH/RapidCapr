{
    "patch": "public static ArrayList<Tuple> get_row(ArrayList<ArrayList<Integer>> lst, int x) {\n    ArrayList<Tuple> result = new ArrayList<Tuple>();\n    for(int i=0;i<lst.size();i++) {\n        for(int j=0;j<lst.get(i).size();j++) {\n            if(lst.get(i).get(j) == x)\n                result.add(new Tuple(i, j));\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_ROW.java b/src/main/java/humaneval/buggy/GET_ROW.java\nindex 83f4169..34a1245 100644\n--- a/src/main/java/humaneval/buggy/GET_ROW.java\n+++ b/src/main/java/humaneval/buggy/GET_ROW.java\n@@ -23,9 +23,16 @@ public class GET_ROW {\n         ArrayList<Tuple> result = new ArrayList<Tuple>();\n \n         for (int i = 0; i < lst.size(); i += 1) {\n-            for (int j = lst.get(0).size() - 1; j >= 0; j -= 1){\n-                if (lst.get(i).get(i) == x){\n-                    result.add(new GET_ROW().new Tuple(i, i));\n+public static ArrayList<Tuple> get_row(ArrayList<ArrayList<Integer>> lst, int x) {\n+    ArrayList<Tuple> result = new ArrayList<Tuple>();\n+    for(int i=0;i<lst.size();i++) {\n+        for(int j=0;j<lst.get(i).size();j++) {\n+            if(lst.get(i).get(j) == x)\n+                result.add(new Tuple(i, j));\n+        }\n+    }\n+    return result;\n+}\n                 }\n             }\n         }",
    "result_reason": " /tmp/humaneval-GET_ROW/src/main/java/humaneval/buggy/GET_ROW.java:[26,1] illegal start of expression",
    "test_result": "ERROR"
}