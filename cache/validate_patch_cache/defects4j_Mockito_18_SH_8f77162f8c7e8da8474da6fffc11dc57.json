{
    "patch": "public ReturnValue execute(CallableStatement statement) throws SQLException {\n    statement.registerOutParameter(parameterIndex, Types.OTHER);\n    statement.execute();\n    ResultSet rs = (ResultSet) statement.getObject(parameterIndex);\n    try {\n        List<T> resultList = new ArrayList<T>();\n        while (rs.next()) {\n            T obj = mapper.mapRow(rs, rs.getRow());\n            resultList.add(obj);\n        }\n        return ReturnValue.forValue(resultList);\n    } finally {\n        jdbcTemplate.closeResultSet(rs); // moved from catch block to finally block\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}