{
    "patch": "            // if we just return offsetAdjusted then the time is pushed\n            // back before the transition, whereas it should be\n            // on or after the transition\n            long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n            if (prevAdjusted == instantLocal - offsetLocal) {\n                return offsetLocal;\n            }\n            int offsetPrev = getOffset(prevAdjusted);\n            if (offsetPrev == offsetLocal) {\n                return offsetPrev;\n            } else {\n                return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..05e64c19 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            // if we just return offsetAdjusted then the time is pushed\n+            // back before the transition, whereas it should be\n+            // on or after the transition\n+            long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+            if (prevAdjusted == instantLocal - offsetLocal) {\n+                return offsetLocal;\n+            }\n+            int offsetPrev = getOffset(prevAdjusted);\n+            if (offsetPrev == offsetLocal) {\n+                return offsetPrev;\n+            } else {\n+                return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}