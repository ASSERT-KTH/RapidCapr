{
    "patch": "public Fraction reduce() {\n    int numeratorCopy = numerator;\n    int denominatorCopy = denominator;\n\n    if (numeratorCopy == 0) {\n        return Fraction.ZERO;\n    }\n\n    if (denominatorCopy < 0) {\n        numeratorCopy = -numeratorCopy;\n        denominatorCopy = -denominatorCopy;\n    }\n\n    int gcd = greatestCommonDivisor(Math.abs(numeratorCopy), denominatorCopy);\n    numeratorCopy /= gcd;\n    denominatorCopy /= gcd;\n\n    return new Fraction(numeratorCopy, denominatorCopy);\n}\n\nprivate int greatestCommonDivisor(int a, int b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatestCommonDivisor(b, a % b);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..c7988354 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,14 +462,33 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+public Fraction reduce() {\n+    int numeratorCopy = numerator;\n+    int denominatorCopy = denominator;\n+\n+    if (numeratorCopy == 0) {\n+        return Fraction.ZERO;\n     }\n \n+    if (denominatorCopy < 0) {\n+        numeratorCopy = -numeratorCopy;\n+        denominatorCopy = -denominatorCopy;\n+    }\n+\n+    int gcd = greatestCommonDivisor(Math.abs(numeratorCopy), denominatorCopy);\n+    numeratorCopy /= gcd;\n+    denominatorCopy /= gcd;\n+\n+    return new Fraction(numeratorCopy, denominatorCopy);\n+}\n+\n+private int greatestCommonDivisor(int a, int b) {\n+    if (b == 0) {\n+        return a;\n+    }\n+    return greatestCommonDivisor(b, a % b);\n+}\n+\n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>\n      * ",
    "result_reason": "error: method greatestCommonDivisor(int,int) is already defined in class Fraction",
    "test_result": "ERROR"
}