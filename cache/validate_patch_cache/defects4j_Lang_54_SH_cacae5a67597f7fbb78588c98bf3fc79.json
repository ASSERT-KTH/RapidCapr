{
    "patch": "        } else if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else if (len >= 6) {\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String language = str.substring(0, 2);\n            int index = str.indexOf('_', 3);\n            if (index == -1) {\n                index = len;\n            }\n            String country = str.substring(3, index);\n            String variant = \"\";\n            if (index + 1 < len) {\n                variant = str.substring(index + 1);\n            }\n            if (country.isEmpty() || language.isEmpty() ||\n                country.length() > 2 || language.length() > 2 ||\n                !Character.isLowerCase(language.charAt(0)) ||\n                !Character.isLowerCase(language.charAt(1)) ||\n                (country.length() == 2 &&\n                 (!Character.isUpperCase(country.charAt(0)) ||\n                  !Character.isUpperCase(country.charAt(1)))) ||\n                variant.length() > 0 && (!Character.isUpperCase(variant.charAt(0)) || variant.contains(\"_\") || variant.contains(\"#\"))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(language, country, variant);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..8d8d8ebb 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,33 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        } else if (len == 5) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        } else if (len >= 6) {\n+            if (str.charAt(2) != '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            String language = str.substring(0, 2);\n+            int index = str.indexOf('_', 3);\n+            if (index == -1) {\n+                index = len;\n+            }\n+            String country = str.substring(3, index);\n+            String variant = \"\";\n+            if (index + 1 < len) {\n+                variant = str.substring(index + 1);\n+            }\n+            if (country.isEmpty() || language.isEmpty() ||\n+                country.length() > 2 || language.length() > 2 ||\n+                !Character.isLowerCase(language.charAt(0)) ||\n+                !Character.isLowerCase(language.charAt(1)) ||\n+                (country.length() == 2 &&\n+                 (!Character.isUpperCase(country.charAt(0)) ||\n+                  !Character.isUpperCase(country.charAt(1)))) ||\n+                variant.length() > 0 && (!Character.isUpperCase(variant.charAt(0)) || variant.contains(\"_\") || variant.contains(\"#\"))) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            return new Locale(language, country, variant);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}