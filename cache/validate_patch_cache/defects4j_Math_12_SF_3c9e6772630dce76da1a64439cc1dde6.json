{
    "patch": "import java.util.Random;\n\npublic class Distribution {\n\n    private static final Random rand = new Random();\n\n    /**\n     * Generate a random double between 0.0 and 1.0\n     */\n    public static double random() {\n        return rand.nextDouble();\n    }\n\n    /**\n     * Generate a random number within a normal distribution centered around mean with standard deviation sigma.\n     */\n    public static double normal(double mean, double sigma) {\n        return mean + sigma * rand.nextGaussian();\n    }\n\n    /**\n     * Generate an array of n random numbers within a normal distribution centered around mean with standard deviation sigma.\n     */\n    public static double[] normalArray(int n, double mean, double sigma) {\n        double[] array = new double[n];\n\n        for (int i = 0; i < n; i++) {\n            array[i] = Distribution.normal(mean, sigma);\n        }\n\n        return array;\n    }\n\n    /**\n     * Compute the mean of an array of numbers.\n     */\n    public static double mean(double[] array) {\n        double sum = 0;\n\n        for (double d : array) {\n            sum += d;\n        }\n\n        return sum / array.length;\n    }\n\n    /**\n     * Compute the standard deviation of an array of numbers.\n     */\n    public static double stddev(double[] array) {\n        double mean = Distribution.mean(array);\n        double sum = 0;\n\n        for (double d : array) {\n            sum += Math.pow(d - mean, 2);\n        }\n\n        return Math.sqrt(sum / (array.length - 1));\n    }\n\n    /**\n     * Clone the input array of numbers.\n     */\n    public static double[] cloneArray(double[] array) {\n        double[] clone = new double[array.length];\n\n        for (int i = 0; i < array.length; i++) {\n            clone[i] = array[i];\n        }\n\n        return clone;\n    }\n\n    public static void main(String[] args) {\n      int n = 100000;\n      double mean = 0d;\n      double stddev = 1d;\n      double[] array1 = Distribution.normalArray(n, mean, stddev);\n      double[] array2 = Distribution.cloneArray(array1);\n      \n      Assert.assertArrayEquals(array1, array2, 0d);\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}