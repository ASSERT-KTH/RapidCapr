{
    "patch": "    Node function = fnScope.getRootNode();\n    boolean isGetterOrSetter = NodeUtil.isGetOrSetKey(function.getParent());\n    Preconditions.checkState(function.isFunction() || isGetterOrSetter);\n\n    Node argList = isGetterOrSetter ? function.getNext() : function.getSecondChild();\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n    List<Node> unusedArgs = new ArrayList<>();\n    for (Node arg : argList.children()) {\n      Var var = fnScope.getVar(arg.getString());\n      if (!referenced.contains(var)) {\n        unusedArgs.add(arg);\n      }\n    }\n    if (!unusedArgs.isEmpty()) {\n      // Remove unused args from the argument list\n      unusedArgs.forEach(argList::removeChild);\n      compiler.reportCodeChange();\n    }\n    if (modifyCallers) {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..ee87854e 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,27 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    boolean isGetterOrSetter = NodeUtil.isGetOrSetKey(function.getParent());\n+    Preconditions.checkState(function.isFunction() || isGetterOrSetter);\n+\n+    Node argList = isGetterOrSetter ? function.getNext() : function.getSecondChild();\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+    List<Node> unusedArgs = new ArrayList<>();\n+    for (Node arg : argList.children()) {\n+      Var var = fnScope.getVar(arg.getString());\n+      if (!referenced.contains(var)) {\n+        unusedArgs.add(arg);\n+      }\n+    }\n+    if (!unusedArgs.isEmpty()) {\n+      // Remove unused args from the argument list\n+      unusedArgs.forEach(argList::removeChild);\n+      compiler.reportCodeChange();\n+    }\n+    if (modifyCallers) {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}