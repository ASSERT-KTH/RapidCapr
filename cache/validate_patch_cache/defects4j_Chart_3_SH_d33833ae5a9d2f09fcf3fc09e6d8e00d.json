{
    "patch": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n\n        if (this.data != null && this.data.size() > 0 && start < this.data.size()) {\n            int toIndex = Math.min(end + 1, this.data.size());\n            List<TimeSeriesDataItem> items = this.data.subList(start, toIndex);\n\n            if (items.size() > 0) {\n                for (TimeSeriesDataItem item : items) {\n                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                    try {\n                        copy.add(clone);\n                    } catch (SeriesException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n        return copy;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..6dadc42 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,35 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+    public TimeSeries createCopy(int start, int end)\n+            throws CloneNotSupportedException {\n+        if (start < 0) {\n+            throw new IllegalArgumentException(\"Requires start >= 0.\");\n+        }\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+\n+        if (this.data != null && this.data.size() > 0 && start < this.data.size()) {\n+            int toIndex = Math.min(end + 1, this.data.size());\n+            List<TimeSeriesDataItem> items = this.data.subList(start, toIndex);\n+\n+            if (items.size() > 0) {\n+                for (TimeSeriesDataItem item : items) {\n+                    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                    try {\n+                        copy.add(clone);\n+                    } catch (SeriesException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }\n+        }\n+        return copy;\n+    }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}