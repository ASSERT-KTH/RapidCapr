{
    "patch": "    ControlFlowGraph<Node> cfg = getCfg(js);\n    Node functionNode = NodeUtil.getEnclosingFunction(inputNode);\n    for (CfgEdge<Node> exitEdge : cfg.getOutEdges(cfg.getNode(functionNode.getLastChild()))) {\n      if (exitEdge.getType() == CfgEdge.EXCEPTION_EDGE) {\n        return true;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..73c4a7cf 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,13 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+    ControlFlowGraph<Node> cfg = getCfg(js);\n+    Node functionNode = NodeUtil.getEnclosingFunction(inputNode);\n+    for (CfgEdge<Node> exitEdge : cfg.getOutEdges(cfg.getNode(functionNode.getLastChild()))) {\n+      if (exitEdge.getType() == CfgEdge.EXCEPTION_EDGE) {\n+        return true;\n+      }\n+    }\n     return false;\n   }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}