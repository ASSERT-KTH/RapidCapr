{
    "patch": "if (options.checkGlobalThisLevel != null) {\n    if (options.checkGlobalThisLevel == CheckLevel.ERROR && \n            options.getLanguageIn() == LanguageMode.ECMASCRIPT3) {\n          options.setWarningLevel(\n              DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);\n    } else if (!options.checkGlobalThisLevel.isOn()) {\n        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n    } else {\n        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, options.checkGlobalThisLevel);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..42a47d5f 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,17 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+    if (options.checkGlobalThisLevel == CheckLevel.ERROR && \n+            options.getLanguageIn() == LanguageMode.ECMASCRIPT3) {\n+          options.setWarningLevel(\n+              DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);\n+    } else if (!options.checkGlobalThisLevel.isOn()) {\n+        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+    } else {\n+        options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, options.checkGlobalThisLevel);\n+    }\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}