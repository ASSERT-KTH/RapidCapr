{
    "patch": "public String escapeUTF8(String input) {\n    StringBuilder result = new StringBuilder();\n    for (int i = 0; i < input.length(); i++) {\n        char ch = input.charAt(i);\n        if (ch <= 127) {\n            result.append(ch);\n        } else {\n            result.append(\"\\\\u\");\n            String hex = Integer.toHexString(ch);\n            if (hex.length() == 2) {\n                hex = \"00\" + hex;\n            }\n            result.append(hex);\n        }\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..fa7770f8 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,23 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String escapeUTF8(String input) {\n+    StringBuilder result = new StringBuilder();\n+    for (int i = 0; i < input.length(); i++) {\n+        char ch = input.charAt(i);\n+        if (ch <= 127) {\n+            result.append(ch);\n+        } else {\n+            result.append(\"\\\\u\");\n+            String hex = Integer.toHexString(ch);\n+            if (hex.length() == 2) {\n+                hex = \"00\" + hex;\n+            }\n+            result.append(hex);\n+        }\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}