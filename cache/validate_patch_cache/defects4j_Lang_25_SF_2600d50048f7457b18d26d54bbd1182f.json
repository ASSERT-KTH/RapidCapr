{
    "patch": "public static String unescape(String input){\n    if (input == null) {\n        return null;\n    }\n    int n = input.length();\n    StringBuilder sb = new StringBuilder(n);\n    for (int i = 0; i < n;) {\n        char c = input.charAt(i++);\n        if (c == '\\\\' && i < n) {\n            c = input.charAt(i++);\n            if (c == 'n') {\n                c = '\\n';\n            } else if (c == 'r') {\n                c = '\\r';\n            } else if (c == 't') {\n                c = '\\t';\n            } else if (c == '\\\\') {\n                c = '\\\\';\n            }\n        }\n        sb.append(c);\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..bf0e9e52 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,30 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String input){\n+    if (input == null) {\n+        return null;\n+    }\n+    int n = input.length();\n+    StringBuilder sb = new StringBuilder(n);\n+    for (int i = 0; i < n;) {\n+        char c = input.charAt(i++);\n+        if (c == '\\\\' && i < n) {\n+            c = input.charAt(i++);\n+            if (c == 'n') {\n+                c = '\\n';\n+            } else if (c == 'r') {\n+                c = '\\r';\n+            } else if (c == 't') {\n+                c = '\\t';\n+            } else if (c == '\\\\') {\n+                c = '\\\\';\n+            }\n+        }\n+        sb.append(c);\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}