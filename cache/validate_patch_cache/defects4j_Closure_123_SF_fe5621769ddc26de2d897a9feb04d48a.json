{
    "patch": "public String fixCode(String code) {\n    int idx = code.indexOf(\"in\");\n    while (idx != -1) {\n        int endIdx = idx + 2;\n        while (Character.isWhitespace(code.charAt(endIdx))) {\n            endIdx++;\n        }\n        if (code.charAt(endIdx) != '(') {\n            code = code.substring(0, idx) + \"#$\" + code.substring(endIdx);\n        }\n        idx = code.indexOf(\"in\", endIdx);\n    }\n    return code.replace(\"#$\", \"(\");\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..81110c09 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,20 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    int idx = code.indexOf(\"in\");\n+    while (idx != -1) {\n+        int endIdx = idx + 2;\n+        while (Character.isWhitespace(code.charAt(endIdx))) {\n+            endIdx++;\n+        }\n+        if (code.charAt(endIdx) != '(') {\n+            code = code.substring(0, idx) + \"#$\" + code.substring(endIdx);\n+        }\n+        idx = code.indexOf(\"in\", endIdx);\n+    }\n+    return code.replace(\"#$\", \"(\");\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}