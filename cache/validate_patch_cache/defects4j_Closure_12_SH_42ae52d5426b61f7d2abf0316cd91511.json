{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    for(CFGEdge edge : cfgNode.getOutgoingEdges()) {\n        if(edge.getType() == CFGEdge.EdgeType.EXCEPTION) {\n            return true;\n        }\n        if(edge.getType() == CFGEdge.EdgeType.NORMAL) {\n            if(hasExceptionHandler(edge.getDest())) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..5adb62dd 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,19 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    for(CFGEdge edge : cfgNode.getOutgoingEdges()) {\n+        if(edge.getType() == CFGEdge.EdgeType.EXCEPTION) {\n+            return true;\n+        }\n+        if(edge.getType() == CFGEdge.EdgeType.NORMAL) {\n+            if(hasExceptionHandler(edge.getDest())) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}