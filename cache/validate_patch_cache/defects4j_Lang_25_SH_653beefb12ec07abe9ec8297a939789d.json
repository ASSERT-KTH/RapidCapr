{
    "patch": "private boolean checkString(String s, char c, int index, boolean escape){\n    boolean success = true;\n    if (index >= s.length()) {\n        if (escape) {\n            success = false;\n        }\n    } \n    else if (s.charAt(index) == c && !escape) {\n        return true;\n    }\n    else if (s.charAt(index) == '\\\\' && !escape) {\n        success = checkString(s, c, index+1, true);\n    }\n    else if (escape) {\n        if (!isEscapeChar(s.charAt(index)) && !isOctalChar(s.charAt(index))) {\n            success = false;\n        }\n        else if (isOctalChar(s.charAt(index))) {\n            success = checkString(s, c, index+1, (index+1) < s.length() && isOctalChar(s.charAt(index+1)));\n        }\n    }\n    \n    return success;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}