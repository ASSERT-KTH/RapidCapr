{
    "patch": "public static String solve_string(String s) {\n    int flg = 0;\n    StringBuilder sb = new StringBuilder();\n    for (char c : s.toCharArray()) {\n        if (Character.isLowerCase(c)) {\n            sb.append(Character.toUpperCase(c));\n        } else if (Character.isUpperCase(c)) {\n            sb.append(Character.toLowerCase(c));\n        } else if (Character.isDigit(c)) {\n            sb.append(Math.abs(Integer.parseInt(String.valueOf(c)) - 9));\n        } else {\n            flg = 1;\n            break;\n        }\n    }\n    if (flg == 0) {\n        return sb.toString();\n    }\n    sb = new StringBuilder();\n    for (int i = s.length() - 1; i >= 0; i -= 1) {\n        sb.append(s.charAt(i));\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SOLVE_STRING.java b/src/main/java/humaneval/buggy/SOLVE_STRING.java\nindex e31e9a2..5620177 100644\n--- a/src/main/java/humaneval/buggy/SOLVE_STRING.java\n+++ b/src/main/java/humaneval/buggy/SOLVE_STRING.java\n@@ -11,18 +11,28 @@ package humaneval.buggy;\n // solve(\"#a@C\") = \"#A@c\"\n \n public class SOLVE_STRING {\n-    public static String solve_string(String s) {\n-        int flg = 0;\n-        StringBuilder sb = new StringBuilder();\n-        for (char c : s.toCharArray()) {\n-            if (Character.isLowerCase(c)) sb.append(Character.toUpperCase(c));\n-            else sb.append(Character.toLowerCase(c));\n+public static String solve_string(String s) {\n+    int flg = 0;\n+    StringBuilder sb = new StringBuilder();\n+    for (char c : s.toCharArray()) {\n+        if (Character.isLowerCase(c)) {\n+            sb.append(Character.toUpperCase(c));\n+        } else if (Character.isUpperCase(c)) {\n+            sb.append(Character.toLowerCase(c));\n+        } else if (Character.isDigit(c)) {\n+            sb.append(Math.abs(Integer.parseInt(String.valueOf(c)) - 9));\n+        } else {\n             flg = 1;\n+            break;\n         }\n-        if (flg == 0) {\n-            sb = new StringBuilder();\n-            for (int i = s.length() - 1; i >= 0; i -= 1) sb.append(s.charAt(i));\n-        }\n+    }\n+    if (flg == 0) {\n         return sb.toString();\n     }\n+    sb = new StringBuilder();\n+    for (int i = s.length() - 1; i >= 0; i -= 1) {\n+        sb.append(s.charAt(i));\n+    }\n+    return sb.toString();\n+}\n }",
    "result_reason": "   TEST_SOLVE_STRING.test_1:15 expected:<[8765]> but was:<[4321]>",
    "test_result": "FAIL"
}