{
    "patch": "        class Cyclic {\n            String decode_cyclic(String s) {\n                String result = \"\";\n                int len = s.length();\n                for (int i = 0; i < len; i += 2) {\n                    int end = Math.min(i + 2, len);\n                    String group = s.substring(i, end);\n                    result += group.charAt(group.length()-1) + group.substring(0, group.length()-1);\n                }\n                return result;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..06f4120 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -8,7 +8,18 @@ public class DECODE_CYCLIC {\n             String encode_cyclic(String s) {\n                 ArrayList<String> groups = new ArrayList<String>();\n \n-                for (int i = 0; i < s.length(); i += 3){\n+        class Cyclic {\n+            String decode_cyclic(String s) {\n+                String result = \"\";\n+                int len = s.length();\n+                for (int i = 0; i < len; i += 2) {\n+                    int end = Math.min(i + 2, len);\n+                    String group = s.substring(i, end);\n+                    result += group.charAt(group.length()-1) + group.substring(0, group.length()-1);\n+                }\n+                return result;\n+            }\n+        }\n                     groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n                 }\n                 int remain = s.length() % 3;",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[28,17] illegal start of type",
    "test_result": "ERROR"
}