{
    "patch": "          // Check whether the only assignment is the initialization of a loop variable.\n          if (ref.isSimpleAssignmentToName() && block.getInitializers().contains(ref.getTarget())) {\n            return true;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..1b5a9fd2 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,10 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          // Check whether the only assignment is the initialization of a loop variable.\n+          if (ref.isSimpleAssignmentToName() && block.getInitializers().contains(ref.getTarget())) {\n+            return true;\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}