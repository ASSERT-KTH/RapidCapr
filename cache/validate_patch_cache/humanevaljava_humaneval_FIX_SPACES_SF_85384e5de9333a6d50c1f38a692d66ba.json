{
    "patch": "public static String fix_spaces(String text) {\n    StringBuilder new_text = new StringBuilder();\n    int start = -1;\n    int end = -1;\n    boolean trailing_spaces = false;\n    for (int i = 0; i < text.length(); i++) {\n        char current_char = text.charAt(i);\n        if (current_char == ' ') {\n            if (start == -1) {\n                trailing_spaces = true;\n            }\n            end = i;\n        } else {\n            if (start != -1) {\n                int num_spaces = end - start + 1;\n                if (num_spaces > 2) {\n                    new_text.append(\"-\");\n                } else {\n                    for (int j = start; j <= end; j++) {\n                        new_text.append(\"_\");\n                    }\n                }\n                start = -1;\n                trailing_spaces = false;\n            }\n            new_text.append(current_char);\n            end = -1;\n            if (trailing_spaces) {\n                int num_spaces = i - end - 1;\n                if (num_spaces > 2) {\n                    new_text.append('-');\n                } else {\n                    for (int j = end + 1; j < i; j++) {\n                        new_text.append('_');\n                    }\n                }\n                trailing_spaces = false;\n            }\n        }\n    }\n    if (start != -1 && end != -1) {\n        int num_spaces = end - start + 1;\n        if (num_spaces > 2) {\n            new_text.append(\"-\");\n        } else {\n            for (int j = start; j <= end; j++) {\n                new_text.append(\"_\");\n            }\n        }\n    }\n    if (trailing_spaces && end != -1) {\n        int num_spaces = text.length() - end - 1;\n        if (num_spaces > 2) {\n            new_text.append('-');\n        } else {\n            for (int j = end + 1; j < text.length(); j++) {\n                new_text.append('_');\n            }\n        }\n    }\n    return new_text.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..84baf65 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -10,29 +10,66 @@ fix_spaces(\" Example 2\") == \"_Example_2\"\n fix_spaces(\" Example   3\") == \"_Example-3\" */\n \n public class FIX_SPACES {\n-    public static String fix_spaces(String text) {\n-        String new_text = \"\";\n-        int i = 0;\n-        int start = 0;\n-        int end = 0;\n-        while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n+public static String fix_spaces(String text) {\n+    StringBuilder new_text = new StringBuilder();\n+    int start = -1;\n+    int end = -1;\n+    boolean trailing_spaces = false;\n+    for (int i = 0; i < text.length(); i++) {\n+        char current_char = text.charAt(i);\n+        if (current_char == ' ') {\n+            if (start == -1) {\n+                trailing_spaces = true;\n+            }\n+            end = i;\n+        } else {\n+            if (start != -1) {\n+                int num_spaces = end - start + 1;\n+                if (num_spaces > 2) {\n+                    new_text.append(\"-\");\n+                } else {\n+                    for (int j = start; j <= end; j++) {\n+                        new_text.append(\"_\");\n                     }\n-                    new_text += text.substring(i, i + 1);\n+                }\n+                start = -1;\n+                trailing_spaces = false;\n+            }\n+            new_text.append(current_char);\n+            end = -1;\n+            if (trailing_spaces) {\n+                int num_spaces = i - end - 1;\n+                if (num_spaces > 2) {\n+                    new_text.append('-');\n                 } else {\n-                    new_text += text.substring(i, i + 1);\n+                    for (int j = end + 1; j < i; j++) {\n+                        new_text.append('_');\n+                    }\n                 }\n-                start = i + 1;\n-                end = i + 1;\n+                trailing_spaces = false;\n             }\n-            i += 1;\n         }\n-\n-        return new_text;\n     }\n+    if (start != -1 && end != -1) {\n+        int num_spaces = end - start + 1;\n+        if (num_spaces > 2) {\n+            new_text.append(\"-\");\n+        } else {\n+            for (int j = start; j <= end; j++) {\n+                new_text.append(\"_\");\n+            }\n+        }\n+    }\n+    if (trailing_spaces && end != -1) {\n+        int num_spaces = text.length() - end - 1;\n+        if (num_spaces > 2) {\n+            new_text.append('-');\n+        } else {\n+            for (int j = end + 1; j < text.length(); j++) {\n+                new_text.append('_');\n+            }\n+        }\n+    }\n+    return new_text.toString();\n+}\n }",
    "result_reason": "   TEST_FIX_SPACES.test_1:19 expected:<Mudasir[H-anif]> but was:<Mudasir[_Hanif_]>",
    "test_result": "FAIL"
}