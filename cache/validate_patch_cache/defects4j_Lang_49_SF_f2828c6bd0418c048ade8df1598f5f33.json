{
    "patch": "public Fraction reduce() {\n    int gcd = gcd(Math.abs(numerator), Math.abs(denominator));\n    if (gcd == 0) {\n        return new Fraction(0);\n    }\n    return new Fraction(numerator / gcd, denominator / gcd).normalize();\n}\n\nprivate int gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    }\n    return gcd(b, a % b);\n}\n\nprivate Fraction normalize() {\n    if (denominator < 0) {\n        numerator *= -1;\n        denominator *= -1;\n    }\n    return this;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..3a7d94db 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,13 +462,28 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n-    public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+public Fraction reduce() {\n+    int gcd = gcd(Math.abs(numerator), Math.abs(denominator));\n+    if (gcd == 0) {\n+        return new Fraction(0);\n+    }\n+    return new Fraction(numerator / gcd, denominator / gcd).normalize();\n+}\n+\n+private int gcd(int a, int b) {\n+    if (b == 0) {\n+        return a;\n     }\n+    return gcd(b, a % b);\n+}\n+\n+private Fraction normalize() {\n+    if (denominator < 0) {\n+        numerator *= -1;\n+        denominator *= -1;\n+    }\n+    return this;\n+}\n \n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>",
    "result_reason": "error: constructor Fraction in class Fraction cannot be applied to given types;",
    "test_result": "ERROR"
}