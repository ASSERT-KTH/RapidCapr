{
    "patch": "    // Initialize all the argument names as unreferenced\n    List<String> argNames = NodeUtil.getFunctionParameters(function);\n    for (String name : argNames) {\n      unreferencedArgNames.add(name);\n    }\n\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n    int numArgsRemoved = 0;\n    List<Node> newArgListNodes = new ArrayList<>();\n    for (Node arg : argList.children()) {\n      if (arg.isName() && unreferencedArgNames.contains(arg.getString())) {\n        numArgsRemoved++;\n      } else {\n        newArgListNodes.add(arg);\n      }\n    }\n    NodeUtil.rewriteFunctionArgs(function, newArgListNodes, compiler);\n    if (numArgsRemoved > 0) {\n      compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0beb2fbb 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,25 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Initialize all the argument names as unreferenced\n+    List<String> argNames = NodeUtil.getFunctionParameters(function);\n+    for (String name : argNames) {\n+      unreferencedArgNames.add(name);\n+    }\n+\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+    int numArgsRemoved = 0;\n+    List<Node> newArgListNodes = new ArrayList<>();\n+    for (Node arg : argList.children()) {\n+      if (arg.isName() && unreferencedArgNames.contains(arg.getString())) {\n+        numArgsRemoved++;\n+      } else {\n+        newArgListNodes.add(arg);\n+      }\n+    }\n+    NodeUtil.rewriteFunctionArgs(function, newArgListNodes, compiler);\n+    if (numArgsRemoved > 0) {\n+      compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}