{
    "patch": "for (int i = 0; i < count; i++) {\n    try {\n        millis = savedFields[i].set(millis, resetFields);\n    } catch (IllegalArgumentException e) {\n        if (text == null) {\n            throw e;\n        }\n        e = new IllegalFieldValueException(\n            savedFields[i].iField.getType(), savedFields[i].getValue(), e.getMessage());\n        e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n        throw e;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..256f2b01 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    try {\n+        millis = savedFields[i].set(millis, resetFields);\n+    } catch (IllegalArgumentException e) {\n+        if (text == null) {\n+            throw e;\n+        }\n+        e = new IllegalFieldValueException(\n+            savedFields[i].iField.getType(), savedFields[i].getValue(), e.getMessage());\n+        e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\": \");\n+        throw e;\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}