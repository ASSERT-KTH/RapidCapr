{
    "patch": "    public static int fibonacci(int n) {\n        if (n < 2)\n            return n;\n\n        int prev_prev = 0;\n        int prev = 1;\n        int result = 0;\n\n        for (int i = 2; i <= n; i++) {\n            result = prev + prev_prev;\n            prev_prev = prev;\n            prev = result;\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIBFIB.java b/src/main/java/humaneval/buggy/FIBFIB.java\nindex 5e10ebb..61e9818 100644\n--- a/src/main/java/humaneval/buggy/FIBFIB.java\n+++ b/src/main/java/humaneval/buggy/FIBFIB.java\n@@ -14,11 +14,19 @@ Please write a function to efficiently compute the n-th element of the fibfib nu\n 24 */\n \n public class FIBFIB {\n-    public static int fibfib(int n) {\n-        if (n == 0)\n-            return 0;\n-        if (n == 1)\n-            return 0;\n-        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n+    public static int fibonacci(int n) {\n+        if (n < 2)\n+            return n;\n+\n+        int prev_prev = 0;\n+        int prev = 1;\n+        int result = 0;\n+\n+        for (int i = 2; i <= n; i++) {\n+            result = prev + prev_prev;\n+            prev_prev = prev;\n+            prev = result;\n+        }\n+        return result;\n     }\n }",
    "result_reason": " /tmp/humaneval-FIBFIB/src/test/java/humaneval/TEST_FIBFIB.java:[6,44] cannot find symbol",
    "test_result": "ERROR"
}