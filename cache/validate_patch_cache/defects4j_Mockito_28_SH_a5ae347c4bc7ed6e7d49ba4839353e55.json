{
    "patch": "            MockCandidate mockCandidate = mockCandidateFilter.findBestMatchingCandidate(mocks, field);\n            if(mockCandidate != null) {\n                mockCandidate.thenInject(fieldInstance);\n                mocks.remove(mockCandidate.mock);\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..315153ee1 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,14 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            MockCandidate mockCandidate = mockCandidateFilter.findBestMatchingCandidate(mocks, field);\n+            if(mockCandidate != null) {\n+                mockCandidate.thenInject(fieldInstance);\n+                mocks.remove(mockCandidate.mock);\n+            }\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}