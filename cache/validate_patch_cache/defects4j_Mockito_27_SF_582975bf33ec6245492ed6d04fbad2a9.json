{
    "patch": "public <T> void resetMock(T mock) {\n    try {\n        Object oldHandler = Whitebox.getInternalState(mock, \"handler\");\n        Object oldInterceptors = Whitebox.getInternalState(oldHandler, \"interceptors\");\n        MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) ((List) oldInterceptors).get(0);\n        ((List) oldInterceptors).remove(oldFilter);\n\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter((MockHandler<T>) oldHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n        ((List) oldInterceptors).add(0, newFilter);\n    } catch (Exception e) {\n        throw new IllegalArgumentException(\"Cannot reset the mock object. It may not have been created by mockito or it may have been already reset.\", e);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..55fe92029 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,20 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    try {\n+        Object oldHandler = Whitebox.getInternalState(mock, \"handler\");\n+        Object oldInterceptors = Whitebox.getInternalState(oldHandler, \"interceptors\");\n+        MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) ((List) oldInterceptors).get(0);\n+        ((List) oldInterceptors).remove(oldFilter);\n+\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter((MockHandler<T>) oldHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        ((List) oldInterceptors).add(0, newFilter);\n+    } catch (Exception e) {\n+        throw new IllegalArgumentException(\"Cannot reset the mock object. It may not have been created by mockito or it may have been already reset.\", e);\n+    }\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}