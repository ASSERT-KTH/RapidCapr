{
    "patch": "public static String getprop(String key) {\n    Process p;\n    String property = null;\n    try {\n        p = Runtime.getRuntime().exec(\"getprop \" + key);\n        p.waitFor();\n        BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n        property = br.readLine().trim();\n        br.close();\n    } catch (IOException | InterruptedException e) {\n        System.err.println(e.getMessage());\n        System.exit(-1);\n    }\n    return property;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..d530b5f4 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getprop(String key) {\n+    Process p;\n+    String property = null;\n+    try {\n+        p = Runtime.getRuntime().exec(\"getprop \" + key);\n+        p.waitFor();\n+        BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+        property = br.readLine().trim();\n+        br.close();\n+    } catch (IOException | InterruptedException e) {\n+        System.err.println(e.getMessage());\n+        System.exit(-1);\n+    }\n+    return property;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: multi-catch statement is not supported in -source 1.6",
    "test_result": "ERROR"
}