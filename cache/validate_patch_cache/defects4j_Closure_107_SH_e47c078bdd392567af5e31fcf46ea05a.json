{
    "patch": "if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level && flags.translationsFile.isEmpty()) {\n  options.setMessageBundle(null);\n} else {\n  if (!flags.translationsFile.isEmpty()) {\n    try {\n      options.setMessageBundle(new XtbMessageBundle(\n          new FileInputStream(flags.translationsFile),\n          flags.translationsProject));\n    } catch (IOException e) {\n      throw new RuntimeException(\"Error: Reading XTB file.\", e);\n    }\n  } else {\n    options.setMessageBundle(new EmptyMessageBundle());\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..cd4cc00f 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,21 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level && flags.translationsFile.isEmpty()) {\n+  options.setMessageBundle(null);\n+} else {\n+  if (!flags.translationsFile.isEmpty()) {\n+    try {\n+      options.setMessageBundle(new XtbMessageBundle(\n+          new FileInputStream(flags.translationsFile),\n+          flags.translationsProject));\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Error: Reading XTB file.\", e);\n+    }\n+  } else {\n+    options.setMessageBundle(new EmptyMessageBundle());\n+  }\n+}\n     }\n \n     return options;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}