{
    "patch": "public static double getTypedPercent(String jsonString) {\n    double totalCount = 0;\n    double typedCount = 0;\n    try {\n        JSONObject jsonObject = new JSONObject(jsonString);\n        JSONObject dimensions = jsonObject.getJSONObject(\"dimensions\");\n        totalCount = dimensions.getDouble(\"totalCount\");\n        typedCount = dimensions.getDouble(\"typedCount\");\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n\n    return typedCount / totalCount * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..9454941f 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonString) {\n+    double totalCount = 0;\n+    double typedCount = 0;\n+    try {\n+        JSONObject jsonObject = new JSONObject(jsonString);\n+        JSONObject dimensions = jsonObject.getJSONObject(\"dimensions\");\n+        totalCount = dimensions.getDouble(\"totalCount\");\n+        typedCount = dimensions.getDouble(\"typedCount\");\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+\n+    return typedCount / totalCount * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}