{
    "patch": "return f.value(min) * f.value(max) < 0 ? new BrentSolver().solve(f, min, max, (min + max) / 2) : f.value(min) == 0 ? min : new BrentSolver().solve(f, min, max);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..385a8f0e9 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+return f.value(min) * f.value(max) < 0 ? new BrentSolver().solve(f, min, max, (min + max) / 2) : f.value(min) == 0 ? min : new BrentSolver().solve(f, min, max);\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}