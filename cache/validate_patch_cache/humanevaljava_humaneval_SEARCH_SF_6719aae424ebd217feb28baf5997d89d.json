{
    "patch": "import java.util.HashSet;\n\npublic static int search(int[] lst) {\n    HashSet<Integer> set = new HashSet<>();\n    for (int i : lst) {\n        set.add(i);\n    }\n    int result = 0;\n    while (set.contains(result)) {\n        result += 1;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SEARCH.java b/src/main/java/humaneval/buggy/SEARCH.java\nindex 285deda..50e3c47 100644\n--- a/src/main/java/humaneval/buggy/SEARCH.java\n+++ b/src/main/java/humaneval/buggy/SEARCH.java\n@@ -10,18 +10,17 @@ Examples:\n     search([5, 5, 4, 4, 4]) == -1 */\n \n public class SEARCH {\n-    public static int search(int[] lst) {\n-        int max = -1;\n-        for (Integer i : lst) {\n-            if (i > max)\n-                max = i;\n-        }\n+import java.util.HashSet;\n \n-        int result = -1;\n-        int[] frq = new int[max];\n-        for (int i = 0; i < lst.length; i += 1)  frq[i] += 1;\n-        for (int i = 0; i < frq.length; i += 1) if (frq[i] >= i) result = i;\n-        \n-        return result;\n+public static int search(int[] lst) {\n+    HashSet<Integer> set = new HashSet<>();\n+    for (int i : lst) {\n+        set.add(i);\n     }\n+    int result = 0;\n+    while (set.contains(result)) {\n+        result += 1;\n+    }\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-SEARCH/src/main/java/humaneval/buggy/SEARCH.java:[13,1] illegal start of type",
    "test_result": "ERROR"
}