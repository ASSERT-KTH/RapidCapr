{
    "patch": "TypeVariable<?>[] typeParameters = typeVariable.getGenericDeclaration().getTypeParameters();\nType actualTypeArgument;\nif (typeParameters.length == 0) { // No type parameters\n    actualTypeArgument = null;\n} else if (typeParameters.length == 1) { // Single type parameter\n    actualTypeArgument = getActualTypeArgumentFor(typeParameters[0]);\n} else { // Multiple type parameters, use upper bound\n    actualTypeArgument = typeVariable.getBounds()[0];\n}\nif (actualTypeArgument != null) {\n    registerTypeVariablesOn(actualTypeArgument);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..0f55840fe 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,23 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+TypeVariable<?>[] typeParameters = typeVariable.getGenericDeclaration().getTypeParameters();\n+Type actualTypeArgument;\n+if (typeParameters.length == 0) { // No type parameters\n+    actualTypeArgument = null;\n+} else if (typeParameters.length == 1) { // Single type parameter\n+    actualTypeArgument = getActualTypeArgumentFor(typeParameters[0]);\n+} else { // Multiple type parameters, use upper bound\n+    actualTypeArgument = typeVariable.getBounds()[0];\n+}\n+if (actualTypeArgument != null) {\n+    registerTypeVariablesOn(actualTypeArgument);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}