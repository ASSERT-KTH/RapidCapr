{
    "patch": "/**\n  * @param {string} text\n  * @return {{width: number, height: number}}\n  */\n public TextManager.TextExtents computeTextExtents(String text) {\n   TextLayout layout = createTextLayout(text);\n   return new TextManager.TextExtents(\n       (int)Math.ceil(layout.getBounds().getWidth()),\n       (int)Math.ceil(layout.getBounds().getHeight()));\n }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..e20c6f74 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,16 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+/**\n+  * @param {string} text\n+  * @return {{width: number, height: number}}\n+  */\n+ public TextManager.TextExtents computeTextExtents(String text) {\n+   TextLayout layout = createTextLayout(text);\n+   return new TextManager.TextExtents(\n+       (int)Math.ceil(layout.getBounds().getWidth()),\n+       (int)Math.ceil(layout.getBounds().getHeight()));\n+ }\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}