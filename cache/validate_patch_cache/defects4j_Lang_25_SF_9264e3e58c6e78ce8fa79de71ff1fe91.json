{
    "patch": "import java.io.*;\nimport java.nio.charset.*;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\npublic class FileUtils {\n\n  public static boolean fileContainsString(String filename, String searchstring, String encoding)\n        throws IOException {\n\n    Path path = Paths.get(filename);\n    Charset charset = Charset.forName(encoding);\n\n    try (BufferedReader reader = Files.newBufferedReader(path, charset)) {\n\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n\n        if (line.contains(searchstring)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..0f49a27f 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,33 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.*;\n+import java.nio.charset.*;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+public class FileUtils {\n+\n+  public static boolean fileContainsString(String filename, String searchstring, String encoding)\n+        throws IOException {\n+\n+    Path path = Paths.get(filename);\n+    Charset charset = Charset.forName(encoding);\n+\n+    try (BufferedReader reader = Files.newBufferedReader(path, charset)) {\n+\n+      String line = null;\n+      while ((line = reader.readLine()) != null) {\n+\n+        if (line.contains(searchstring)) {\n+          return true;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}