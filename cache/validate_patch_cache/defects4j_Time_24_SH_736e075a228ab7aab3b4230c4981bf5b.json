{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                long newMillis = savedFields[i].set(millis, resetFields);\n                if (newMillis == millis && savedFields[i].iField.getType() == DateTimeFieldType.year()) {\n                    int year = savedFields[i].iField.get(newMillis);\n                    if (year != iDefaultYear) {\n                        savedFields[i].iField.set(newMillis, iDefaultYear);\n                        millis = savedFields[i].set(millis, resetFields);\n                    }\n                }\n                if (newMillis != millis) {\n                    throw new IllegalArgumentException(\"Illegal instant due to disallowed field combination\");\n                }\n                millis = newMillis;\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..04fa2de7 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                long newMillis = savedFields[i].set(millis, resetFields);\n+                if (newMillis == millis && savedFields[i].iField.getType() == DateTimeFieldType.year()) {\n+                    int year = savedFields[i].iField.get(newMillis);\n+                    if (year != iDefaultYear) {\n+                        savedFields[i].iField.set(newMillis, iDefaultYear);\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    }\n+                }\n+                if (newMillis != millis) {\n+                    throw new IllegalArgumentException(\"Illegal instant due to disallowed field combination\");\n+                }\n+                millis = newMillis;\n+            }\n+        } catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            throw e;\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Illegal instant due to disallowed field combination",
    "test_result": "FAIL"
}