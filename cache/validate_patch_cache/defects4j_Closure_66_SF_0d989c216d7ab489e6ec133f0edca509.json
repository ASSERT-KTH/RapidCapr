{
    "patch": "public static double getTypedPercent(JSONObject jsonObject) {\n    double count = 0.0;\n    double typedCount = 0.0;\n    for (Object value : jsonObject.values()) {\n        if (value instanceof JSONObject) {\n            typedCount += getTypedPercent((JSONObject) value);\n            count += 1.0;\n        } else if (value instanceof JSONArray) {\n            for (int i = 0; i < ((JSONArray) value).size(); i++) {\n                Object innerValue = ((JSONArray) value).get(i);\n                if (innerValue instanceof JSONObject) {\n                    typedCount += getTypedPercent((JSONObject) innerValue);\n                    count += 1.0;\n                }\n            }\n        } else if (value instanceof String) {\n            String stringValue = (String) value;\n            if (stringValue.startsWith(\"http:\") || stringValue.startsWith(\"https:\")) {\n                typedCount += 1.0;\n                count += 1.0;\n            }\n        }\n    }\n    return count == 0.0 ? 0.0 : typedCount / count * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..c722def9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,31 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONObject jsonObject) {\n+    double count = 0.0;\n+    double typedCount = 0.0;\n+    for (Object value : jsonObject.values()) {\n+        if (value instanceof JSONObject) {\n+            typedCount += getTypedPercent((JSONObject) value);\n+            count += 1.0;\n+        } else if (value instanceof JSONArray) {\n+            for (int i = 0; i < ((JSONArray) value).size(); i++) {\n+                Object innerValue = ((JSONArray) value).get(i);\n+                if (innerValue instanceof JSONObject) {\n+                    typedCount += getTypedPercent((JSONObject) innerValue);\n+                    count += 1.0;\n+                }\n+            }\n+        } else if (value instanceof String) {\n+            String stringValue = (String) value;\n+            if (stringValue.startsWith(\"http:\") || stringValue.startsWith(\"https:\")) {\n+                typedCount += 1.0;\n+                count += 1.0;\n+            }\n+        }\n+    }\n+    return count == 0.0 ? 0.0 : typedCount / count * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}