{
    "patch": "public final boolean isEmptyType() {\n    /*\n     * A type is considered empty if it does not provide any useful information. That is,\n     * if it is a no-type, void-type, null-type, no-object-type, no-resolved-type, or\n     * (if not supposed to be an array type) an unknown-type.\n     */\n    boolean isNoType = isNoType();\n    boolean isVoidType = isVoidType();\n    boolean isNullType = isNullType();\n    boolean isNoObjectType = isNoObjectType();\n    boolean isNoResolvedType = isNoResolvedType();\n    boolean isUnknownArrayType = (!isArrayType() && isUnknownType());\n    \n    return isNoType || isVoidType || isNullType || isNoObjectType || isNoResolvedType || isUnknownArrayType;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..d8c00904 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,21 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    /*\n+     * A type is considered empty if it does not provide any useful information. That is,\n+     * if it is a no-type, void-type, null-type, no-object-type, no-resolved-type, or\n+     * (if not supposed to be an array type) an unknown-type.\n+     */\n+    boolean isNoType = isNoType();\n+    boolean isVoidType = isVoidType();\n+    boolean isNullType = isNullType();\n+    boolean isNoObjectType = isNoObjectType();\n+    boolean isNoResolvedType = isNoResolvedType();\n+    boolean isUnknownArrayType = (!isArrayType() && isUnknownType());\n+    \n+    return isNoType || isVoidType || isNullType || isNoObjectType || isNoResolvedType || isUnknownArrayType;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}