{
    "patch": "        protected JSType caseTopType(JSType topType) {\n>>> [ INFILL ] <<<\n          if (topType.isUnknownType() || topType.isAllType()) {\n            return topType;\n          }\n          if (topType.isUnionType()) {\n            return caseUnionType(topType.toMaybeUnionType());\n          }\n          if (topType.isEnumElementType()) {\n            return caseEnumElementType(topType.toMaybeEnumElementType());\n          }\n          return getDefaultJSType();\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..48fdd04a 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,19 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+        protected JSType caseTopType(JSType topType) {\n+>>> [ INFILL ] <<<\n+          if (topType.isUnknownType() || topType.isAllType()) {\n+            return topType;\n+          }\n+          if (topType.isUnionType()) {\n+            return caseUnionType(topType.toMaybeUnionType());\n+          }\n+          if (topType.isEnumElementType()) {\n+            return caseEnumElementType(topType.toMaybeEnumElementType());\n+          }\n+          return getDefaultJSType();\n+        }\n         }\n \n         @Override",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}