{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        final SchurTransformer st = new SchurTransformer(m);\n        final RealMatrix t = st.getT();\n        for (int i = 0; i < t.getRowDimension(); i++) {\n            if (t.getEntry(i, i) < 0) {\n                throw new MathUnsupportedOperationException(\"Matrix is not supported: cannot compute square root of negative eigenvalues\");\n            } else {\n                t.setEntry(i, i, Math.sqrt(t.getEntry(i, i)));\n            }\n        }\n        final RealMatrix u = st.getU();\n        final RealMatrix uT = u.transpose();\n        return u.multiply(t).multiply(uT);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..aae274b82 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,17 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        final SchurTransformer st = new SchurTransformer(m);\n+        final RealMatrix t = st.getT();\n+        for (int i = 0; i < t.getRowDimension(); i++) {\n+            if (t.getEntry(i, i) < 0) {\n+                throw new MathUnsupportedOperationException(\"Matrix is not supported: cannot compute square root of negative eigenvalues\");\n+            } else {\n+                t.setEntry(i, i, Math.sqrt(t.getEntry(i, i)));\n+            }\n+        }\n+        final RealMatrix u = st.getU();\n+        final RealMatrix uT = u.transpose();\n+        return u.multiply(t).multiply(uT);\n     }\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}