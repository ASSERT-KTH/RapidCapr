{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String country = \"\";\n    String variant = \"\";\n    int idx = 2;\n    if (len >= 5 && str.charAt(2) == '_') {\n        char ch3 = str.charAt(3);\n        char ch4 = str.charAt(4);\n        if (ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') {\n            country = str.substring(2, 5);\n            idx = 5;\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    if (len >= 7 && str.charAt(idx) == '_') {\n        int endIdx = str.indexOf('_', idx+1);\n        if (endIdx == -1) {\n            variant = str.substring(idx+1);\n        } else {\n            variant = str.substring(idx+1, endIdx);\n            while (endIdx != -1) {\n                idx = endIdx;\n                endIdx = str.indexOf('_', idx+1);\n                if (endIdx == idx + 1 || endIdx == len-1) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (endIdx == -1) {\n                    variant = str.substring(idx+1);\n                } else {\n                    variant = str.substring(idx+1, endIdx) + '_' + variant;\n                }\n            }\n        }\n    }\n    if (variant.isEmpty() && country.isEmpty()) {\n        return new Locale(str);\n    } else if (variant.isEmpty()) {\n        return new Locale(str.substring(0, idx), country);\n    } else {\n        return new Locale(str.substring(0, idx), country, variant);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..4f32ab65 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,60 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len != 2 && len != 5 && len < 7) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    String country = \"\";\n+    String variant = \"\";\n+    int idx = 2;\n+    if (len >= 5 && str.charAt(2) == '_') {\n+        char ch3 = str.charAt(3);\n+        char ch4 = str.charAt(4);\n+        if (ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') {\n+            country = str.substring(2, 5);\n+            idx = 5;\n+        } else {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n+    }\n+    if (len >= 7 && str.charAt(idx) == '_') {\n+        int endIdx = str.indexOf('_', idx+1);\n+        if (endIdx == -1) {\n+            variant = str.substring(idx+1);\n         } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n+            variant = str.substring(idx+1, endIdx);\n+            while (endIdx != -1) {\n+                idx = endIdx;\n+                endIdx = str.indexOf('_', idx+1);\n+                if (endIdx == idx + 1 || endIdx == len-1) {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                if (endIdx == -1) {\n+                    variant = str.substring(idx+1);\n+                } else {\n+                    variant = str.substring(idx+1, endIdx) + '_' + variant;\n+                }\n             }\n         }\n     }\n+    if (variant.isEmpty() && country.isEmpty()) {\n+        return new Locale(str);\n+    } else if (variant.isEmpty()) {\n+        return new Locale(str.substring(0, idx), country);\n+    } else {\n+        return new Locale(str.substring(0, idx), country, variant);\n+    }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}