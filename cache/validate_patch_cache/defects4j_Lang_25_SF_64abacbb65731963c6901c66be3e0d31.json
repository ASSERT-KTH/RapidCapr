{
    "patch": "import java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\nimport java.net.URLEncoder;\n\npublic class StringUtil {\n\n    public static String iso8859_1_escape(String s) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (c <= 255) {\n                sb.append(\"%\");\n                sb.append(Integer.toHexString(c).toUpperCase());\n            } else {\n                try {\n                    sb.append(URLEncoder.encode(String.valueOf(c), \"ISO-8859-1\"));\n                } catch (UnsupportedEncodingException e) {\n                    e.printStackTrace();\n                    return null;\n                }\n            }\n        }\n        return sb.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..0e7ee9e6 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,31 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import java.net.URLEncoder;\n+\n+public class StringUtil {\n+\n+    public static String iso8859_1_escape(String s) {\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < s.length(); i++) {\n+            char c = s.charAt(i);\n+            if (c <= 255) {\n+                sb.append(\"%\");\n+                sb.append(Integer.toHexString(c).toUpperCase());\n+            } else {\n+                try {\n+                    sb.append(URLEncoder.encode(String.valueOf(c), \"ISO-8859-1\"));\n+                } catch (UnsupportedEncodingException e) {\n+                    e.printStackTrace();\n+                    return null;\n+                }\n+            }\n+        }\n+        return sb.toString();\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}