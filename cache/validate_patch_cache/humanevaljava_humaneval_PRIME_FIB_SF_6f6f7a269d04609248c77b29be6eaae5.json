{
    "patch": "public static int prime_fib(int n) {\n    if (n <= 0) {\n        return -1; // invalid input\n    }\n    int prevFib = 1;\n    int curFib = 1;\n    int count = 0;\n    while (true) {\n        if (count >= n) {\n            return curFib;\n        }\n        int temp = curFib;\n        curFib += prevFib;\n        prevFib = temp;\n        if (is_prime(curFib)) {\n            count++;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PRIME_FIB.java b/src/main/java/humaneval/buggy/PRIME_FIB.java\nindex 68ba00e..38212b2 100644\n--- a/src/main/java/humaneval/buggy/PRIME_FIB.java\n+++ b/src/main/java/humaneval/buggy/PRIME_FIB.java\n@@ -13,18 +13,23 @@ public class PRIME_FIB {\n         return true;\n     }\n \n-    public static int prime_fib(int n){\n-        ArrayList<Integer> fib = new ArrayList<Integer>();\n-        fib.add(0);\n-        fib.add(1);\n-\n-        while (true) {\n-            int len = fib.size();\n-            fib.add(fib.get(len - 1) + fib.get(len));\n-            if (is_prime(fib.get(len - 1)))\n-                n -= 1;\n-            if (n == 0)\n-                return fib.get(fib.size() - 1);\n+public static int prime_fib(int n) {\n+    if (n <= 0) {\n+        return -1; // invalid input\n+    }\n+    int prevFib = 1;\n+    int curFib = 1;\n+    int count = 0;\n+    while (true) {\n+        if (count >= n) {\n+            return curFib;\n+        }\n+        int temp = curFib;\n+        curFib += prevFib;\n+        prevFib = temp;\n+        if (is_prime(curFib)) {\n+            count++;\n         }\n     }\n }\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}