{
    "patch": "    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n        boolean wasWhite = false;\n        for(int i = 0; i < value.length(); ++i) {\n            char c = value.charAt(i);\n            if(Character.isWhitespace(c)) {\n                if(!wasWhite) {\n                    wasWhite = true;\n                    regex.append(\"\\\\s*+\");\n                }\n                continue;\n            }\n            wasWhite = false;\n            switch(c) {\n            case '\\'':\n                if(unquote) {\n                    if(++i == value.length()) {\n                        return regex;\n                    }\n                    c = value.charAt(i);\n                }\n                break;\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n                regex.append('\\\\');\n            }\n            regex.append(c);\n        }\n        // Return the modified StringBuilder\n        return regex;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..0be7394f 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -301,24 +301,24 @@ public class FastDateParser implements DateParser, Serializable {\n      * @return The <code>StringBuilder</code>\n      */\n     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n+        boolean wasWhite = false;\n+        for(int i = 0; i < value.length(); ++i) {\n+            char c = value.charAt(i);\n             if(Character.isWhitespace(c)) {\n                 if(!wasWhite) {\n-                    wasWhite= true;\n+                    wasWhite = true;\n                     regex.append(\"\\\\s*+\");\n                 }\n                 continue;\n             }\n-            wasWhite= false;\n+            wasWhite = false;\n             switch(c) {\n             case '\\'':\n                 if(unquote) {\n-                    if(++i==value.length()) {\n+                    if(++i == value.length()) {\n                         return regex;\n                     }\n-                    c= value.charAt(i);\n+                    c = value.charAt(i);\n                 }\n                 break;\n             case '?':\n@@ -339,6 +339,7 @@ public class FastDateParser implements DateParser, Serializable {\n             }\n             regex.append(c);\n         }\n+        // Return the modified StringBuilder\n         return regex;\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError: Parsed dates should be equal expected:<null> but was:<Mon Mar 02 21:00:00 PST 1970>",
    "test_result": "FAIL"
}