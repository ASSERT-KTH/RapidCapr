{
    "patch": "                int diff = offsetAdjusted - offsetLocal;\n                if (diff <= -2) {\n                    long next = nextTransition(instantAdjusted - getMillisUntilNextZoneTransition(instantAdjusted));\n                    if (next <= instantLocal) {\n                        next = nextTransition(instantAdjusted + getMillisUntilNextZoneTransition(instantAdjusted));\n                    }\n                    int offset = getOffset(next);\n                    if (offset < offsetLocal) {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..0e033bcc 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                int diff = offsetAdjusted - offsetLocal;\n+                if (diff <= -2) {\n+                    long next = nextTransition(instantAdjusted - getMillisUntilNextZoneTransition(instantAdjusted));\n+                    if (next <= instantLocal) {\n+                        next = nextTransition(instantAdjusted + getMillisUntilNextZoneTransition(instantAdjusted));\n+                    }\n+                    int offset = getOffset(next);\n+                    if (offset < offsetLocal) {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}