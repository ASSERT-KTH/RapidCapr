{
    "patch": "public String fixCode(String code) {\n    // Replace all occurrences of \"[(.*)(\\\\s)?in(\\\\s)(.*)]\" with \"[($1 instanceof Object[]?Arrays.asList($1).containsAll(Arrays.asList($4)):\n    // $1 instanceof Collection?((Collection) $1).containsAll(Arrays.asList($4)):($4 instanceof Object[]?Arrays.asList($4).containsAll(Arrays.asList($1)):\n    // $4 instanceof Collection?((Collection) $4).containsAll(Arrays.asList($1)):false)]\"\n    code = code.replaceAll(\"\\\\[\\\\s*(\\\\S*)\\\\s*in\\\\s*(\\\\S*)\\\\s*\\\\]\", \"[$1 instanceof Object\\\\[\\\\]?Arrays.asList\\\\($1\\\\).containsAll(Arrays.asList\\\\($2\\\\)):\" +\n            \"$1 instanceof Collection?((Collection) $1).containsAll(Arrays.asList\\\\($2\\\\)):($2 instanceof Object\\\\[\\\\]?Arrays.asList\\\\($2\\\\).containsAll(Arrays.asList\\\\($1\\\\)):\" +\n            \"$2 instanceof Collection?((Collection) $2).containsAll(Arrays.asList\\\\($1\\\\)):false)\\\\]\");\n\n    // Replace all occurrences of \"for((.*)(\\\\s)?in(\\\\s)(.*))\" with \"for($1 instanceof Object[]?$1:(Object[])$1.toArray()$2)in $4\"\n    code = code.replaceAll(\"for\\\\(\\\\s*(\\\\S*)\\\\s*in\\\\s*(\\\\S*)\\\\s*\\\\)\", \"for($1 instanceof Object\\\\[\\\\]?$1:(Object\\\\[\\\\])$1.toArray\\\\(\\\\)$2)in $4\");\n\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..0c136eac 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,19 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    // Replace all occurrences of \"[(.*)(\\\\s)?in(\\\\s)(.*)]\" with \"[($1 instanceof Object[]?Arrays.asList($1).containsAll(Arrays.asList($4)):\n+    // $1 instanceof Collection?((Collection) $1).containsAll(Arrays.asList($4)):($4 instanceof Object[]?Arrays.asList($4).containsAll(Arrays.asList($1)):\n+    // $4 instanceof Collection?((Collection) $4).containsAll(Arrays.asList($1)):false)]\"\n+    code = code.replaceAll(\"\\\\[\\\\s*(\\\\S*)\\\\s*in\\\\s*(\\\\S*)\\\\s*\\\\]\", \"[$1 instanceof Object\\\\[\\\\]?Arrays.asList\\\\($1\\\\).containsAll(Arrays.asList\\\\($2\\\\)):\" +\n+            \"$1 instanceof Collection?((Collection) $1).containsAll(Arrays.asList\\\\($2\\\\)):($2 instanceof Object\\\\[\\\\]?Arrays.asList\\\\($2\\\\).containsAll(Arrays.asList\\\\($1\\\\)):\" +\n+            \"$2 instanceof Collection?((Collection) $2).containsAll(Arrays.asList\\\\($1\\\\)):false)\\\\]\");\n+\n+    // Replace all occurrences of \"for((.*)(\\\\s)?in(\\\\s)(.*))\" with \"for($1 instanceof Object[]?$1:(Object[])$1.toArray()$2)in $4\"\n+    code = code.replaceAll(\"for\\\\(\\\\s*(\\\\S*)\\\\s*in\\\\s*(\\\\S*)\\\\s*\\\\)\", \"for($1 instanceof Object\\\\[\\\\]?$1:(Object\\\\[\\\\])$1.toArray\\\\(\\\\)$2)in $4\");\n+\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}