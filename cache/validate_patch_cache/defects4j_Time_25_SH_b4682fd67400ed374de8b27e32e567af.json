{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    // if we just return offsetAdjusted then the time is pushed\n    // back before the transition, whereas it should be\n    // on or after the transition\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n\n    if (nextLocal == instantLocal && nextAdjusted == instantLocal) {\n        // we are exactly in a DST overlap, need to decide which side to fall\n        if (offsetLocal < 0) {  // fallback to the standard time\n            return getNextTransition(instantLocal - offsetLocal) == nextLocal ?\n                    offsetLocal : offsetAdjusted;\n        } else {  // move to the daylight time\n            return getNextTransition(instantLocal - offsetLocal) == nextLocal ?\n                    offsetAdjusted : offsetLocal;\n        }\n    }\n\n    if (nextLocal != nextAdjusted) {\n        // if we want to preserve local time, we need to transition\n        // at or after instantLocal\n        if (nextLocal > instantLocal - offsetAdjusted) {\n            return offsetLocal;\n        }\n        return offsetAdjusted;\n    } \n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..eba42108 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,33 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    // if we just return offsetAdjusted then the time is pushed\n+    // back before the transition, whereas it should be\n+    // on or after the transition\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+\n+    if (nextLocal == instantLocal && nextAdjusted == instantLocal) {\n+        // we are exactly in a DST overlap, need to decide which side to fall\n+        if (offsetLocal < 0) {  // fallback to the standard time\n+            return getNextTransition(instantLocal - offsetLocal) == nextLocal ?\n+                    offsetLocal : offsetAdjusted;\n+        } else {  // move to the daylight time\n+            return getNextTransition(instantLocal - offsetLocal) == nextLocal ?\n+                    offsetAdjusted : offsetLocal;\n+        }\n+    }\n+\n+    if (nextLocal != nextAdjusted) {\n+        // if we want to preserve local time, we need to transition\n+        // at or after instantLocal\n+        if (nextLocal > instantLocal - offsetAdjusted) {\n+            return offsetLocal;\n+        }\n+        return offsetAdjusted;\n+    } \n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}