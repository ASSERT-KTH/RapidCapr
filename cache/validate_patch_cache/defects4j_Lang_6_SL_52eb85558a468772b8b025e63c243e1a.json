{
    "patch": "int codePointCount = Character.codePointCount(input, pos, len);\nif (codePointCount == 1) {\n    pos++;\n} else {\n    pos += Character.charCount(Character.codePointAt(input, pos));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..980c8850 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,12 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+int codePointCount = Character.codePointCount(input, pos, len);\n+if (codePointCount == 1) {\n+    pos++;\n+} else {\n+    pos += Character.charCount(Character.codePointAt(input, pos));\n+}\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Supplementary character must be represented using a single escape expected:<&#144308;[]> but was:<&#144308;[&#57268;]>",
    "test_result": "FAIL"
}