{
    "patch": "public static String unescapeNonAscii(String s) {\n    StringBuilder sb = new StringBuilder(s.length());\n    int i = 0;\n    while (i < s.length()) {\n        char ch = s.charAt(i);\n        if (ch == '\\\\' && i + 5 < s.length() && s.charAt(i + 1) == 'u') {\n            // Unescape unicode character\n            int code = 0;\n            for (int j = 0; j < 4; ++j) {\n                char hexChar = s.charAt(i + 2 + j);\n                int hexValue = Character.digit(hexChar, 16);\n                code = code * 16 + hexValue;\n            }\n            sb.append((char) code);\n            i += 6;\n        } else if (ch == '\\\\' && i + 3 < s.length() && s.charAt(i + 1) == 'x') {\n            // Unescape iso-8859-1 encoded character\n            char hexChar1 = s.charAt(i + 2);\n            char hexChar2 = s.charAt(i + 3);\n            int hexValue1 = Character.digit(hexChar1, 16);\n            int hexValue2 = Character.digit(hexChar2, 16);\n            sb.append((char) (hexValue1 * 16 + hexValue2));\n            i += 4;\n        } else {\n            sb.append(ch);\n            ++i;\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..fe12834c 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,36 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescapeNonAscii(String s) {\n+    StringBuilder sb = new StringBuilder(s.length());\n+    int i = 0;\n+    while (i < s.length()) {\n+        char ch = s.charAt(i);\n+        if (ch == '\\\\' && i + 5 < s.length() && s.charAt(i + 1) == 'u') {\n+            // Unescape unicode character\n+            int code = 0;\n+            for (int j = 0; j < 4; ++j) {\n+                char hexChar = s.charAt(i + 2 + j);\n+                int hexValue = Character.digit(hexChar, 16);\n+                code = code * 16 + hexValue;\n+            }\n+            sb.append((char) code);\n+            i += 6;\n+        } else if (ch == '\\\\' && i + 3 < s.length() && s.charAt(i + 1) == 'x') {\n+            // Unescape iso-8859-1 encoded character\n+            char hexChar1 = s.charAt(i + 2);\n+            char hexChar2 = s.charAt(i + 3);\n+            int hexValue1 = Character.digit(hexChar1, 16);\n+            int hexValue2 = Character.digit(hexChar2, 16);\n+            sb.append((char) (hexValue1 * 16 + hexValue2));\n+            i += 4;\n+        } else {\n+            sb.append(ch);\n+            ++i;\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}