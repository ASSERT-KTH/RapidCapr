{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        if (dec.getEigenvector(0).getEntry(0) < 0) {\n            throw new IllegalArgumentException(\"Matrix cannot be square rooted: negative eigenvalue\");\n        }\n        return dec.getSquareRoot();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..1fe69285e 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,10 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        if (dec.getEigenvector(0).getEntry(0) < 0) {\n+            throw new IllegalArgumentException(\"Matrix cannot be square rooted: negative eigenvalue\");\n+        }\n+        return dec.getSquareRoot();\n     }\n }",
    "result_reason": "java.lang.OutOfMemoryError: Java heap space",
    "test_result": "FAIL"
}