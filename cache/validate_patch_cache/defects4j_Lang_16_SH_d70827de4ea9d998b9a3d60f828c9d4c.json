{
    "patch": "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n    try {\n        int i = Integer.decode(str);\n        return Integer.valueOf(i);\n    } catch (NumberFormatException e) {\n        BigInteger bi = new BigInteger(str.substring(str.startsWith(\"-\") ? 3 : 2), 16);\n        return bi;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..211572cd 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,15 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n+    try {\n+        int i = Integer.decode(str);\n+        return Integer.valueOf(i);\n+    } catch (NumberFormatException e) {\n+        BigInteger bi = new BigInteger(str.substring(str.startsWith(\"-\") ? 3 : 2), 16);\n+        return bi;\n+    }\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}