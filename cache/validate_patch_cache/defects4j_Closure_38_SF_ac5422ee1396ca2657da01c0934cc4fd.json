{
    "patch": "void addNumber(double x) {\n    char prev = getLastChar();\n    boolean negativeZero = isNegativeZero(x);\n    boolean addSpace = false;\n\n    if(negativeZero){\n        if(Character.isDigit(prev)){\n            addSpace = true;\n        }else if(prev == '-' || prev == '+'){\n            char prev2 = getCharAt(length()-2);\n            if(prev2 == 'E' || prev2 == 'e'){\n                addSpace = true;\n            }\n        }\n    }else if(x < 0 && prev == '-'){\n        addSpace = true;\n    }\n\n    if(addSpace){\n        add(\" \");\n    }\n\n    if ((long) x == x && !negativeZero) {\n      long value = (long) x;\n      long mantissa = value;\n      int exp = 0;\n      if (Math.abs(x) >= 100) {\n        while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n          mantissa /= 10;\n          exp++;\n        }\n      }\n      if (exp > 2) {\n        add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n      } else {\n        add(Long.toString(value));\n      }\n    } else {\n      add(String.valueOf(x));\n    }\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 4381487c..66ee6f3f 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -237,13 +237,26 @@ abstract class CodeConsumer {\n     }\n   }\n \n-  void addNumber(double x) {\n-    // This is not pretty printing. This is to prevent misparsing of x- -4 as\n-    // x--4 (which is a syntax error).\n+void addNumber(double x) {\n     char prev = getLastChar();\n     boolean negativeZero = isNegativeZero(x);\n-    if (x < 0 && prev == '-') {\n-      add(\" \");\n+    boolean addSpace = false;\n+\n+    if(negativeZero){\n+        if(Character.isDigit(prev)){\n+            addSpace = true;\n+        }else if(prev == '-' || prev == '+'){\n+            char prev2 = getCharAt(length()-2);\n+            if(prev2 == 'E' || prev2 == 'e'){\n+                addSpace = true;\n+            }\n+        }\n+    }else if(x < 0 && prev == '-'){\n+        addSpace = true;\n+    }\n+\n+    if(addSpace){\n+        add(\" \");\n     }\n \n     if ((long) x == x && !negativeZero) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}