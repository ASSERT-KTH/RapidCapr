{
    "patch": "        super();\n        iDuration = duration;\n        iYears = null;\n        iMonths = null;\n        iWeeks = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_WEEK);\n        iDays = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_DAY);\n        iHours = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_HOUR);\n        iMinutes = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_MINUTE);\n        iSeconds = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_SECOND);\n        iMillis = FieldUtils.safeToInt(duration % DateTimeConstants.MILLIS_PER_SECOND);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..668a2a0a 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,16 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        super();\n+        iDuration = duration;\n+        iYears = null;\n+        iMonths = null;\n+        iWeeks = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_WEEK);\n+        iDays = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_DAY);\n+        iHours = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_HOUR);\n+        iMinutes = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_MINUTE);\n+        iSeconds = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_SECOND);\n+        iMillis = FieldUtils.safeToInt(duration % DateTimeConstants.MILLIS_PER_SECOND);\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}