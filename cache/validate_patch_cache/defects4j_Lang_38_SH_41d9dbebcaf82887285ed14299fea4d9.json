{
    "patch": "if (mTimeZoneForced) {\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    dateFormat.setTimeZone(mTimeZone);\n    buf.append(dateFormat.format(calendar.getTime()));\n} else {\n    buf = super.format(calendar, buf);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..2b0f15c1 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,13 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n+    dateFormat.setTimeZone(mTimeZone);\n+    buf.append(dateFormat.format(calendar.getTime()));\n+} else {\n+    buf = super.format(calendar, buf);\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: no suitable method found for format(Calendar,StringBuffer)",
    "test_result": "ERROR"
}