{
    "patch": "JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    boolean resolved = resolveViaRegistry(t, enclosing);\n    boolean cycleDetectedViaRegistry = detectImplicitPrototypeCycle();\n\n    if (resolved && !cycleDetectedViaRegistry) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    resolveViaProperties(t, enclosing);\n    boolean cycleDetectedViaProperties = detectImplicitPrototypeCycle();\n\n    if (resolved && cycleDetectedViaProperties) {\n      handleTypeCycle(t);\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return this;\n    }\n\n    if (!resolved && cycleDetectedViaRegistry) {\n      handleTypeCycle(t);\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return this;\n    }\n\n    if (isResolved()) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    return this;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/NamedType.java b/src/com/google/javascript/rhino/jstype/NamedType.java\nindex 70142c45..824fe484 100644\n--- a/src/com/google/javascript/rhino/jstype/NamedType.java\n+++ b/src/com/google/javascript/rhino/jstype/NamedType.java\n@@ -181,17 +181,11 @@ class NamedType extends ProxyObjectType {\n    * Resolve the referenced type within the enclosing scope.\n    */\n   @Override\n-  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n-    // TODO(user): Investigate whether it is really necessary to keep two\n-    // different mechanisms for resolving named types, and if so, which order\n-    // makes more sense. Now, resolution via registry is first in order to\n-    // avoid triggering the warnings built into the resolution via properties.\n+JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n     boolean resolved = resolveViaRegistry(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n-      handleTypeCycle(t);\n-    }\n+    boolean cycleDetectedViaRegistry = detectImplicitPrototypeCycle();\n \n-    if (resolved) {\n+    if (resolved && !cycleDetectedViaRegistry) {\n       super.resolveInternal(t, enclosing);\n       finishPropertyContinuations();\n       return registry.isLastGeneration() ?\n@@ -199,16 +193,30 @@ class NamedType extends ProxyObjectType {\n     }\n \n     resolveViaProperties(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n+    boolean cycleDetectedViaProperties = detectImplicitPrototypeCycle();\n+\n+    if (resolved && cycleDetectedViaProperties) {\n+      handleTypeCycle(t);\n+      super.resolveInternal(t, enclosing);\n+      finishPropertyContinuations();\n+      return this;\n+    }\n+\n+    if (!resolved && cycleDetectedViaRegistry) {\n       handleTypeCycle(t);\n+      super.resolveInternal(t, enclosing);\n+      finishPropertyContinuations();\n+      return this;\n     }\n \n-    super.resolveInternal(t, enclosing);\n     if (isResolved()) {\n+      super.resolveInternal(t, enclosing);\n       finishPropertyContinuations();\n+      return registry.isLastGeneration() ?\n+          getReferencedType() : this;\n     }\n-    return registry.isLastGeneration() ?\n-        getReferencedType() : this;\n+\n+    return this;\n   }\n \n   /**",
    "result_reason": "java.lang.StackOverflowError",
    "test_result": "FAIL"
}