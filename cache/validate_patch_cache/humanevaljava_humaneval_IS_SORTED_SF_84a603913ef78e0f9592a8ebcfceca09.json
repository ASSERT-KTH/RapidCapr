{
    "patch": "public static boolean is_sorted(int[] lst) {\n    if (lst == null || lst.length <= 1) {\n        return true;\n    }\n    \n    // check if the array is sorted in ascending order\n    boolean isAscending = true;\n    for (int i = 1; i < lst.length; i++) {\n        if (lst[i] < lst[i-1]) {\n            isAscending = false;\n            break;\n        }\n    }\n    if (!isAscending) {\n        return false;\n    }\n    \n    // check if there are no more than 2 occurrences of any element\n    HashSet<Integer> set = new HashSet<>();\n    for(int i = 0; i < lst.length; i++) {\n        i",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_SORTED.java b/src/main/java/humaneval/buggy/IS_SORTED.java\nindex 173398c..e841e97 100644\n--- a/src/main/java/humaneval/buggy/IS_SORTED.java\n+++ b/src/main/java/humaneval/buggy/IS_SORTED.java\n@@ -19,20 +19,25 @@ import java.util.HashMap;\n  */\n \n public class IS_SORTED {\n-    public static boolean is_sorted(int[] lst) {\n-        HashMap<Integer, Integer> count_num = new HashMap<>();\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], 0);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            count_num.put(lst[i], count_num.get(lst[i]) + 1);\n-        }\n-        for(int i = 0; i < lst.length; i++) {\n-            if(count_num.get(lst[i]) > 2) return false;\n-        }\n-        for(int i = 0; i < lst.length - 1; i++) {\n-            if(lst[i] <= lst[i + 1]) return false;\n-        }\n+public static boolean is_sorted(int[] lst) {\n+    if (lst == null || lst.length <= 1) {\n         return true;\n     }\n+    \n+    // check if the array is sorted in ascending order\n+    boolean isAscending = true;\n+    for (int i = 1; i < lst.length; i++) {\n+        if (lst[i] < lst[i-1]) {\n+            isAscending = false;\n+            break;\n+        }\n+    }\n+    if (!isAscending) {\n+        return false;\n+    }\n+    \n+    // check if there are no more than 2 occurrences of any element\n+    HashSet<Integer> set = new HashSet<>();\n+    for(int i = 0; i < lst.length; i++) {\n+        i\n }",
    "result_reason": " /tmp/humaneval-IS_SORTED/src/main/java/humaneval/buggy/IS_SORTED.java:[42,9] not a statement",
    "test_result": "ERROR"
}