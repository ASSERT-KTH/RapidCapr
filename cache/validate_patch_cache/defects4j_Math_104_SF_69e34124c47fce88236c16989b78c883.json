{
    "patch": "public static double gammaQ(double shape, double scale, double x) {\n    if (x < 0.0 || shape <= 0.0 || scale <= 0.0) {\n        throw new IllegalArgumentException(\"Invalid input arguments\");\n    }\n    double xs = x / scale;\n    double igamma = new GammaRegularized().regularizedGammaQ(shape, xs);\n    return igamma;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..22e682865 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,14 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double gammaQ(double shape, double scale, double x) {\n+    if (x < 0.0 || shape <= 0.0 || scale <= 0.0) {\n+        throw new IllegalArgumentException(\"Invalid input arguments\");\n+    }\n+    double xs = x / scale;\n+    double igamma = new GammaRegularized().regularizedGammaQ(shape, xs);\n+    return igamma;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}