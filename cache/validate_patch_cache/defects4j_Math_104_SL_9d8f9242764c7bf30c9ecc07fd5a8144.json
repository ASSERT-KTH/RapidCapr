{
    "patch": "private static final double DEFAULT_EPSILON = 1e-9; // Infill location: added back the missing line\n\npublic static double regularizedGammaP(double a, double x) {\n    if (Double.isNaN(a) ||\n            Double.isNaN(x) ||\n            a <= 0.0 ||\n            x < 0.0) {\n        return Double.NaN;\n    }\n    if (x == 0.0) {\n        return 0.0;\n    }\n    if (x >= a + 1.0) {\n        return 1.0 - regularizedGammaQ(a, x);\n    }\n    double b = x + 1.0 - a;\n    double c = 1.0 / DEFAULT_EPSILON;\n    double d = 1.0 / b;\n    double h = d;\n    double an = a;\n    double sum = h;\n\n    while (Math.abs(h / sum) > DEFAULT_EPSILON) {\n        an += 1.0;\n        d *= b / an;\n        h = d * an;\n        sum += h;\n    }\n\n    return Math.exp(-x + a * Math.log(x) - LogGamma.logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..bade3b581 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,7 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}