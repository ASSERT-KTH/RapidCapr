{
    "patch": " // if the lower value is greater than or equal to the length of the string,\n // set to the length of the string and return the string or the appendToEnd value if given\n if (lower >= str.length()) {\n     return appendToEnd != null ? appendToEnd : str.substring(0, str.length());\n }\n\n // if upper is less than or equal to lower, return substring from lower to upper or the appendToEnd value if given\n if (upper <= lower) {\n     return appendToEnd != null ? appendToEnd : str.substring(0, upper);\n }\n\n // if the upper value is greater than the length of the string, set to the length of the string\n if (upper > str.length()) {\n     upper = str.length();\n }\n\n StringBuffer result = new StringBuffer();\n int index = StringUtils.indexOf(str, \" \", lower);\n if (index == -1) {\n     result.append(str.substring(0, upper));\n     // only if abbreviation has occurred do we append the appendToEnd value\n     if (upper < str.length()) {\n         result.append(StringUtils.defaultString(appendToEnd));\n     }\n } else if (index > upper) {\n     result.append(str.substring(0, upper));\n     result.append(StringUtils.defaultString(appendToEnd));\n } else {\n     result.append(str.substring(0, index));\n     result.append(StringUtils.defaultString(appendToEnd));\n }\n\n return result.toString();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..d5b8d417 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,39 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+ // if the lower value is greater than or equal to the length of the string,\n+ // set to the length of the string and return the string or the appendToEnd value if given\n+ if (lower >= str.length()) {\n+     return appendToEnd != null ? appendToEnd : str.substring(0, str.length());\n+ }\n+\n+ // if upper is less than or equal to lower, return substring from lower to upper or the appendToEnd value if given\n+ if (upper <= lower) {\n+     return appendToEnd != null ? appendToEnd : str.substring(0, upper);\n+ }\n+\n+ // if the upper value is greater than the length of the string, set to the length of the string\n+ if (upper > str.length()) {\n+     upper = str.length();\n+ }\n+\n+ StringBuffer result = new StringBuffer();\n+ int index = StringUtils.indexOf(str, \" \", lower);\n+ if (index == -1) {\n+     result.append(str.substring(0, upper));\n+     // only if abbreviation has occurred do we append the appendToEnd value\n+     if (upper < str.length()) {\n+         result.append(StringUtils.defaultString(appendToEnd));\n+     }\n+ } else if (index > upper) {\n+     result.append(str.substring(0, upper));\n+     result.append(StringUtils.defaultString(appendToEnd));\n+ } else {\n+     result.append(str.substring(0, index));\n+     result.append(StringUtils.defaultString(appendToEnd));\n+ }\n+\n+ return result.toString();\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable result is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}