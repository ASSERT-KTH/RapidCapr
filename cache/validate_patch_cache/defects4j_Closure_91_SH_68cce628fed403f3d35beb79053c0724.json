{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isObjectLitKey(parent)) {\n        Node target = NodeUtil.getEnclosingType(parent, Token.OBJECTLIT, Token.CLASS);\n        if (target != null && NodeUtil.isGet(target.getParent())) {\n          Node targetParent = target.getParent();\n          if (targetParent.getType() == Token.ASSIGN) {\n            Node targetGrandparent = targetParent.getParent();\n            if (targetGrandparent.getType() == Token.EXPR_RESULT) {\n              Node ancestor = targetGrandparent.getParent();\n              if (NodeUtil.isPrototypePropertyDeclaration(ancestor)) {\n                return false;\n              }\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..5ef8d90d 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,22 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isObjectLitKey(parent)) {\n+        Node target = NodeUtil.getEnclosingType(parent, Token.OBJECTLIT, Token.CLASS);\n+        if (target != null && NodeUtil.isGet(target.getParent())) {\n+          Node targetParent = target.getParent();\n+          if (targetParent.getType() == Token.ASSIGN) {\n+            Node targetGrandparent = targetParent.getParent();\n+            if (targetGrandparent.getType() == Token.EXPR_RESULT) {\n+              Node ancestor = targetGrandparent.getParent();\n+              if (NodeUtil.isPrototypePropertyDeclaration(ancestor)) {\n+                return false;\n+              }\n+            }\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: method isObjectLitKey in class NodeUtil cannot be applied to given types;",
    "test_result": "ERROR"
}