{
    "patch": "if (escape != null) {\n    if (nextByte == '\\\\') {\n        byte nextEscByte = input[i + 1]; // get the next byte after backslash\n        if (nextEscByte == escape) {\n            output.write(nextEscByte);\n            i++;\n        } else if (nextEscByte == 'u') {\n            // write the unicode character to output\n            output.write(toUtf8(Integer.parseInt(new String(input, i + 2, 4), 16)));\n            i += 5;\n        } else {\n            // write the escape character to output\n            output.write(escape);\n        }\n    } else {\n        output.write(nextByte);\n    }\n} else {\n    output.write(nextByte);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}