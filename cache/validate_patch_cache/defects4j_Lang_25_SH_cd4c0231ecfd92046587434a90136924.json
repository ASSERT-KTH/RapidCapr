{
    "patch": "public static String escape(String s) {\n    int i;\n    char j;\n    StringBuffer tmp = new StringBuffer();\n    tmp.ensureCapacity(s.length() * 6);  // 6 bytes per character: &#x;\n    for (i = 0; i < s.length(); i++) {\n        j = s.charAt(i);\n        if (Character.isDigit(j) || Character.isLowerCase(j)\n                || Character.isUpperCase(j)) {\n            tmp.append(j);\n        } else if (j < 256) {\n            tmp.append(escapeChar(j, false));\n        } else {\n            tmp.append(escapeChar(j, true));\n        }\n    }\n    return tmp.toString();\n}\n\nprivate static String escapeChar(char x, boolean unicode) {\n    String s = Integer.toHexString(x);\n    StringBuffer tmp = new StringBuffer();\n    tmp.ensureCapacity(3);\n    if (unicode) {\n        tmp.append(\"\\\\u\");\n        for (int i = 0; i < 4 - s.length(); i++) {\n            tmp.append(\"0\");\n        }\n    } else {\n        tmp.append(\"&#x\");\n    }\n    tmp.append(s.toLowerCase());\n    if (!unicode) {\n        tmp.append(\";\");\n    }\n    return tmp.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}