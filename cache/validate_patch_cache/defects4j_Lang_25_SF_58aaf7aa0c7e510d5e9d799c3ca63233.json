{
    "patch": "public static String escape(String str) {\n    if (str == null) {\n        return null;\n    }\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < str.length(); i++) {\n        char ch = str.charAt(i);\n        switch (ch) {\n            case '\\n':\n                sb.append(\"\\\\n\");\n                break;\n            case '\\r':\n                sb.append(\"\\\\r\");\n                break;\n            case '\\t':\n                sb.append(\"\\\\t\");\n                break;\n            case '\\\"':\n                sb.append(\"\\\\\\\"\");\n                break;\n            case '\\'':\n                sb.append(\"\\\\'\");\n                break;\n            case '\\\\':\n                sb.append(\"\\\\\\\\\");\n                break;\n            default:\n                if (ch >= 0 && ch <= 31 || ch >= 127) {\n                    sb.append(String.format(\"\\\\u%04x\", (int) ch));\n                } else {\n                    sb.append(ch);\n                }\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d3bfd39f 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,43 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+\n+    StringBuilder sb = new StringBuilder();\n+    for (int i = 0; i < str.length(); i++) {\n+        char ch = str.charAt(i);\n+        switch (ch) {\n+            case '\\n':\n+                sb.append(\"\\\\n\");\n+                break;\n+            case '\\r':\n+                sb.append(\"\\\\r\");\n+                break;\n+            case '\\t':\n+                sb.append(\"\\\\t\");\n+                break;\n+            case '\\\"':\n+                sb.append(\"\\\\\\\"\");\n+                break;\n+            case '\\'':\n+                sb.append(\"\\\\'\");\n+                break;\n+            case '\\\\':\n+                sb.append(\"\\\\\\\\\");\n+                break;\n+            default:\n+                if (ch >= 0 && ch <= 31 || ch >= 127) {\n+                    sb.append(String.format(\"\\\\u%04x\", (int) ch));\n+                } else {\n+                    sb.append(ch);\n+                }\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}