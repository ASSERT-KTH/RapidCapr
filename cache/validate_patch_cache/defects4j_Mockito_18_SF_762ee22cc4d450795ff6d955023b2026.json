{
    "patch": "public static Object getValue(ReturnValues values) {\n  if (values.hasReturnValueFor(String.class)) {\n    return values.returnValueFor(String.class);\n  } else if (values.hasReturnValueFor(Integer.class)) {\n    return values.returnValueFor(Integer.class);\n  } else if (values.hasReturnValueFor(List.class)) {\n    return values.returnValueFor(List.class);\n  } else if (values.hasReturnValueFor(Iterable.class)) {\n    return values.returnValueFor(Iterable.class);\n  } else {\n    return null;\n  }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..7ebef3125 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,19 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static Object getValue(ReturnValues values) {\n+  if (values.hasReturnValueFor(String.class)) {\n+    return values.returnValueFor(String.class);\n+  } else if (values.hasReturnValueFor(Integer.class)) {\n+    return values.returnValueFor(Integer.class);\n+  } else if (values.hasReturnValueFor(List.class)) {\n+    return values.returnValueFor(List.class);\n+  } else if (values.hasReturnValueFor(Iterable.class)) {\n+    return values.returnValueFor(Iterable.class);\n+  } else {\n+    return null;\n+  }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}