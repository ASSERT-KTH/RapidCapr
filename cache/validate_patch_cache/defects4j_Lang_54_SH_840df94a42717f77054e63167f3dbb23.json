{
    "patch": "        char ch3 = len > 3 ? str.charAt(3) : '_';\n        char ch4 = len > 4 ? str.charAt(4) : '_';\n        if ((len == 3 && ch3 != '_') || (len == 4 && (ch3 == '_' || ch4 != '_')) ||\n                (len == 5 && ch4 == '_') || (len > 5 && (str.charAt(5) != '_' || !isValidTag(str)))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else if (len == 3) {\n            return new Locale(str.substring(0, 2), \"\");\n        } else if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n    }\n    \n    private static boolean isValidTag(String str) {\n        String[] tags = str.split(\"_\");\n        for (int i = 1; i < tags.length; i++) {\n            if (!tags[i].matches(\"[A-Za-z0-9]+\")) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..ec530eb3 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,32 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        char ch3 = len > 3 ? str.charAt(3) : '_';\n+        char ch4 = len > 4 ? str.charAt(4) : '_';\n+        if ((len == 3 && ch3 != '_') || (len == 4 && (ch3 == '_' || ch4 != '_')) ||\n+                (len == 5 && ch4 == '_') || (len > 5 && (str.charAt(5) != '_' || !isValidTag(str)))) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 2) {\n+            return new Locale(str, \"\");\n+        } else if (len == 3) {\n+            return new Locale(str.substring(0, 2), \"\");\n+        } else if (len == 5) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        } else {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n+    }\n+    \n+    private static boolean isValidTag(String str) {\n+        String[] tags = str.split(\"_\");\n+        for (int i = 1; i < tags.length; i++) {\n+            if (!tags[i].matches(\"[A-Za-z0-9]+\")) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}