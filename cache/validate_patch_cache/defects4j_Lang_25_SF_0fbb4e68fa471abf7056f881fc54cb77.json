{
    "patch": "public static String iso8859_1_ESCAPE(String input)\n{\n    final StringBuilder buf = new StringBuilder(input.length() * 2);\n    for (int i = 0; i < input.length(); i++)\n    {\n        final char c = input.charAt(i);\n        // if the character is not in the ISO-8859-1 range\n        if (c > 255)\n        {\n            // append the Unicode hex value as an escape sequence\n            buf.append(\"\\\\u\").append(Integer.toHexString(c));\n        }\n        else\n        {\n            // otherwise, just append the character itself\n            buf.append(c);\n        }\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..59ccf7bc 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,26 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String iso8859_1_ESCAPE(String input)\n+{\n+    final StringBuilder buf = new StringBuilder(input.length() * 2);\n+    for (int i = 0; i < input.length(); i++)\n+    {\n+        final char c = input.charAt(i);\n+        // if the character is not in the ISO-8859-1 range\n+        if (c > 255)\n+        {\n+            // append the Unicode hex value as an escape sequence\n+            buf.append(\"\\\\u\").append(Integer.toHexString(c));\n+        }\n+        else\n+        {\n+            // otherwise, just append the character itself\n+            buf.append(c);\n+        }\n+    }\n+    return buf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}