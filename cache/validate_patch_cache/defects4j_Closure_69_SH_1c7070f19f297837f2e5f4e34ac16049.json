{
    "patch": "FunctionType functionType = (FunctionType) childType;\nboolean isExtern = false;\nJSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\nif (functionJSDocInfo != null) {\n  String sourceName = functionJSDocInfo.getSourceFileName();\n  CompilerInput input = compiler.getInput(sourceName);\n  if (input != null) {\n    isExtern = input.isExtern();\n  }\n}\n\n// Non-native constructors should not be called directly\n// unless they specify a return type and are defined\n// in an extern.\nif (functionType.isConstructor() &&\n    !functionType.isNativeObjectType() &&\n    (functionType.getReturnType().isUnknownType() ||\n        functionType.getReturnType().isVoidType() ||\n        !isExtern)) {\n    report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n}\n\n// Functions with explicit 'this' types must be called in a GETPROP\n// or GETELEM.\nObjectType thisType = functionType.getTypeOfThis();\nif (thisType != null && !NodeUtil.isGet(this.getParent())) {\n    report(t, n, FUNCTION_WITHOUT_GETTHIS, childType.toString());\n    ensureTyped(t, n);\n    return;\n}\n\nvisitParameterList(t, n, functionType);\nensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..d83996bc 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,39 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+FunctionType functionType = (FunctionType) childType;\n+boolean isExtern = false;\n+JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n+if (functionJSDocInfo != null) {\n+  String sourceName = functionJSDocInfo.getSourceFileName();\n+  CompilerInput input = compiler.getInput(sourceName);\n+  if (input != null) {\n+    isExtern = input.isExtern();\n+  }\n+}\n+\n+// Non-native constructors should not be called directly\n+// unless they specify a return type and are defined\n+// in an extern.\n+if (functionType.isConstructor() &&\n+    !functionType.isNativeObjectType() &&\n+    (functionType.getReturnType().isUnknownType() ||\n+        functionType.getReturnType().isVoidType() ||\n+        !isExtern)) {\n+    report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n+}\n+\n+// Functions with explicit 'this' types must be called in a GETPROP\n+// or GETELEM.\n+ObjectType thisType = functionType.getTypeOfThis();\n+if (thisType != null && !NodeUtil.isGet(this.getParent())) {\n+    report(t, n, FUNCTION_WITHOUT_GETTHIS, childType.toString());\n+    ensureTyped(t, n);\n+    return;\n+}\n+\n+visitParameterList(t, n, functionType);\n+ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: variable functionType is already defined in method visitCall(NodeTraversal,Node)",
    "test_result": "ERROR"
}