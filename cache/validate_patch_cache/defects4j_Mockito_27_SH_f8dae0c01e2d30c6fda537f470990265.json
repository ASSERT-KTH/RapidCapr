{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler.getMockSettings());\nnewMockHandler.setInvocationListeners(oldMockHandler.getInvocationListeners());\nMockitoSession MockitoSession = Mockito.framework().mockitoSession().startMocking();\nnewMockHandler.setMockitoSession(MockitoSession);\nT newMock = Mockito.mock(oldMockHandler.getTypeToMock(), newMockHandler);\nresetMock(newMock);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..a0cb623a6 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,16 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler.getMockSettings());\n+newMockHandler.setInvocationListeners(oldMockHandler.getInvocationListeners());\n+MockitoSession MockitoSession = Mockito.framework().mockitoSession().startMocking();\n+newMockHandler.setMockitoSession(MockitoSession);\n+T newMock = Mockito.mock(oldMockHandler.getTypeToMock(), newMockHandler);\n+resetMock(newMock);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}