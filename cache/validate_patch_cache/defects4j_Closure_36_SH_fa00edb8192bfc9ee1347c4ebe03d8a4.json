{
    "patch": "if (value.isFunction() &&\n    (callNode.getParent().isGetElem() ||\n      (callNode.getParent().isCall() &&\n        ((!callNode.getNext().equals(reference) &&\n         !callNode.getSecondChild().equals(reference.getParent())) ||\n          isStrictDescendantOfClassDefiningCall(callNode.getParent())))))) {\n  return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..04b9f844 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,14 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction() &&\n+    (callNode.getParent().isGetElem() ||\n+      (callNode.getParent().isCall() &&\n+        ((!callNode.getNext().equals(reference) &&\n+         !callNode.getSecondChild().equals(reference.getParent())) ||\n+          isStrictDescendantOfClassDefiningCall(callNode.getParent())))))) {\n+  return false;\n+}\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}