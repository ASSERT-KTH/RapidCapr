{
    "patch": "if (typeVariable.getBounds().length > 0) {\n    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n    if (actualTypeArgument != null && !(actualTypeArgument instanceof TypeVariable)) {\n        registerTypeVariablesOn(actualTypeArgument);\n    } else {\n        for (Type bound : typeVariable.getBounds()) {\n            if (bound instanceof Class) {\n                registerTypeVariablesOn(bound);\n                break;\n            }\n            if (bound instanceof TypeVariable) {\n                readTypeVariables((TypeVariable<?>) bound);\n            }\n        }\n    }\n} else {\n    registerTypeVariablesOn(typeVariable);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..d6aa8c4d8 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,29 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if (typeVariable.getBounds().length > 0) {\n+    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+    if (actualTypeArgument != null && !(actualTypeArgument instanceof TypeVariable)) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    } else {\n+        for (Type bound : typeVariable.getBounds()) {\n+            if (bound instanceof Class) {\n+                registerTypeVariablesOn(bound);\n+                break;\n+            }\n+            if (bound instanceof TypeVariable) {\n+                readTypeVariables((TypeVariable<?>) bound);\n+            }\n+        }\n+    }\n+} else {\n+    registerTypeVariablesOn(typeVariable);\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: method readTypeVariables in class TypeVariableReturnType cannot be applied to given types;",
    "test_result": "ERROR"
}