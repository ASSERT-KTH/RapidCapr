{
    "patch": "        boolean convertToGregorian = false;\n        if (year >= 1582) {\n            convertToGregorian = true;\n        } else if (year == 1581) {\n            if (monthOfYear > 10) {\n                convertToGregorian = true;\n            } else if (monthOfYear == 10) {\n                if (dayOfMonth >= 5) {\n                    convertToGregorian = true;\n                }\n            }\n        }\n        if (convertToGregorian) {\n            instant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } else {\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        if (instant < iCutoverMillis) {\n            // Okay, it's in the illegal cutover gap.\n            throw new IllegalArgumentException(\"Specified date does not exist\");",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 29e559d4..783a812a 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -347,35 +347,31 @@ public final class GJChronology extends AssembledChronology {\n         return instant;\n     }\n \n-    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n-                                  int hourOfDay, int minuteOfHour,\n-                                  int secondOfMinute, int millisOfSecond)\n-        throws IllegalArgumentException\n-    {\n-        Chronology base;\n-        if ((base = getBase()) != null) {\n-            return base.getDateTimeMillis\n-                (year, monthOfYear, dayOfMonth,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+        boolean convertToGregorian = false;\n+        if (year >= 1582) {\n+            convertToGregorian = true;\n+        } else if (year == 1581) {\n+            if (monthOfYear > 10) {\n+                convertToGregorian = true;\n+            } else if (monthOfYear == 10) {\n+                if (dayOfMonth >= 5) {\n+                    convertToGregorian = true;\n+                }\n+            }\n         }\n-\n-        // Assume date is Gregorian.\n-        long instant;\n+        if (convertToGregorian) {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        if (instant < iCutoverMillis) {\n-            // Maybe it's Julian.\n+        } else {\n             instant = iJulianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                // Okay, it's in the illegal cutover gap.\n-                throw new IllegalArgumentException(\"Specified date does not exist\");\n-            }\n         }\n-        return instant;\n-    }\n+\n+        if (instant < iCutoverMillis) {\n+            // Okay, it's in the illegal cutover gap.\n+            throw new IllegalArgumentException(\"Specified date does not exist\");\n \n     /**\n      * Gets the cutover instant between Gregorian and Julian chronologies.",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}