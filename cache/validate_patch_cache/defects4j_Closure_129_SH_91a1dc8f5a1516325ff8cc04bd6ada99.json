{
    "patch": "Node currentNode = n.getFirstChild();\nwhile (currentNode != null && currentNode.isCast()) {\n  currentNode = currentNode.getFirstChild();\n}\nNode first = currentNode;\n\nif (!NodeUtil.isGet(first)) {\n  n.putBooleanProp(Node.FREE_CALL, true);\n}\n\nif (first.isName() && \"eval\".equals(first.getString())) {\n  first.putBooleanProp(Node.DIRECT_EVAL, true);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..6308be80 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,19 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+Node currentNode = n.getFirstChild();\n+while (currentNode != null && currentNode.isCast()) {\n+  currentNode = currentNode.getFirstChild();\n+}\n+Node first = currentNode;\n+\n+if (!NodeUtil.isGet(first)) {\n+  n.putBooleanProp(Node.FREE_CALL, true);\n+}\n+\n+if (first.isName() && \"eval\".equals(first.getString())) {\n+  first.putBooleanProp(Node.DIRECT_EVAL, true);\n+}\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}