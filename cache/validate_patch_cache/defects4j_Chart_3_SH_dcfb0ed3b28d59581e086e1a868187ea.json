{
    "patch": "        if (start >= getItemCount() || end < 0) {\n            copy.data = new ArrayList<>();\n            return copy;\n        }\n\n        final int startIndex = Math.max(start, 0);\n        final int endIndex = Math.min(end, getItemCount() - 1);\n\n        if (startIndex > endIndex) {\n            copy.data = new ArrayList<>();\n            return copy;\n        }\n\n        copy.data.ensureCapacity(endIndex - startIndex + 1);\n\n        for (int index = startIndex; index <= endIndex; index++) {\n            copy.addOrUpdate(this.getDataItem(index).clone());\n        }\n\n        return copy;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..285792e 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,26 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (start >= getItemCount() || end < 0) {\n+            copy.data = new ArrayList<>();\n+            return copy;\n+        }\n+\n+        final int startIndex = Math.max(start, 0);\n+        final int endIndex = Math.min(end, getItemCount() - 1);\n+\n+        if (startIndex > endIndex) {\n+            copy.data = new ArrayList<>();\n+            return copy;\n+        }\n+\n+        copy.data.ensureCapacity(endIndex - startIndex + 1);\n+\n+        for (int index = startIndex; index <= endIndex; index++) {\n+            copy.addOrUpdate(this.getDataItem(index).clone());\n+        }\n+\n+        return copy;\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}