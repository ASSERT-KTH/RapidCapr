{
    "patch": "                DateTimeField field = savedFields[i].iField;\n                int value = savedFields[i].iValue;\n                try {\n                    millis = field.set(millis, value);\n                } catch (IllegalFieldValueException e) {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    if (field.getType() == DateTimeFieldType.year() && \n                            e.getMessage().startsWith(\"Value \")) {\n                        int year = value;\n                        if (year < 0) {\n                            year = -year;\n                        }\n                        if (year < 100) {\n                            year += 2000;\n                        }\n                        if (value < 0) {\n                            year = -year;\n                        }\n                        millis = field.set(millis, year);\n                    } else {\n                        throw e;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..e38a5da4 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,30 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                DateTimeField field = savedFields[i].iField;\n+                int value = savedFields[i].iValue;\n+                try {\n+                    millis = field.set(millis, value);\n+                } catch (IllegalFieldValueException e) {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    if (field.getType() == DateTimeFieldType.year() && \n+                            e.getMessage().startsWith(\"Value \")) {\n+                        int year = value;\n+                        if (year < 0) {\n+                            year = -year;\n+                        }\n+                        if (year < 100) {\n+                            year += 2000;\n+                        }\n+                        if (value < 0) {\n+                            year = -year;\n+                        }\n+                        millis = field.set(millis, year);\n+                    } else {\n+                        throw e;\n+                    }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'try' without 'catch' or 'finally'",
    "test_result": "ERROR"
}