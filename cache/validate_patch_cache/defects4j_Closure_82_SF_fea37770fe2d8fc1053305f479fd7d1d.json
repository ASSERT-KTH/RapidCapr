{
    "patch": "  // Returns true if this is a type that has no definition.\n  public final boolean isEmptyType() {\n    if (isPrimitive()) {\n      return false;\n    }\n    String qualifiedName = qualifiedName().toString();\n    boolean isEmpty = qualifiedName.isEmpty() || qualifiedName.startsWith(\"*\");\n    return isEmpty && !hasTag(Tag.TYPEVAR) && !hasTag(Tag.TYPEWILD);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..c059c496 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,8 +159,14 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n+  // Returns true if this is a type that has no definition.\n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+    if (isPrimitive()) {\n+      return false;\n+    }\n+    String qualifiedName = qualifiedName().toString();\n+    boolean isEmpty = qualifiedName.isEmpty() || qualifiedName.startsWith(\"*\");\n+    return isEmpty && !hasTag(Tag.TYPEVAR) && !hasTag(Tag.TYPEWILD);\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}