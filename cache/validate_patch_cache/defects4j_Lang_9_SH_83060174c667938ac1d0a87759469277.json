{
    "patch": "if(currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\nif (nextStrategy == null) {\n    if(strategies.length == 0 || !strategies[strategies.length - 1].equals(currentStrategy)) {\n        collector.add(currentStrategy);\n    }\n}\ncurrentFormatField = null;\nstrategies = collector.toArray(new Strategy[collector.size()]);\nparsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..d0530766 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,17 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+if (nextStrategy == null) {\n+    if(strategies.length == 0 || !strategies[strategies.length - 1].equals(currentStrategy)) {\n+        collector.add(currentStrategy);\n+    }\n+}\n+currentFormatField = null;\n+strategies = collector.toArray(new Strategy[collector.size()]);\n+parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "java.lang.ExceptionInInitializerError",
    "test_result": "FAIL"
}