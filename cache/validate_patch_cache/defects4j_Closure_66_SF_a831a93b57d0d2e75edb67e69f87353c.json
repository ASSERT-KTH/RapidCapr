{
    "patch": "import org.json.JSONObject;\n\npublic class Main {\n    public static double getTypedPercent(JSONObject object) {\n        double count = 0;\n        double typed = 0;\n\n        for (String key : object.keySet()) {\n            count++;\n\n            if (object.get(key) instanceof String) {\n                typed++;\n            }\n        }\n        return count == 0 ? 0 : (typed / count) * 100;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..cb0146d1 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+import org.json.JSONObject;\n+\n+public class Main {\n+    public static double getTypedPercent(JSONObject object) {\n+        double count = 0;\n+        double typed = 0;\n+\n+        for (String key : object.keySet()) {\n+            count++;\n+\n+            if (object.get(key) instanceof String) {\n+                typed++;\n+            }\n+        }\n+        return count == 0 ? 0 : (typed / count) * 100;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}