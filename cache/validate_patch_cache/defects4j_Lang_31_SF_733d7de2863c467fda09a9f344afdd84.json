{
    "patch": "import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class StringUtils {\n    \n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n        Set<Character> searchSet = new HashSet<Character>();\n        for (char c : searchChars) {\n            searchSet.add(c);\n        }\n        for (int i = 0; i < str.length(); i++) {\n            if (searchSet.contains(str.charAt(i))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    public static void main(String[] args) {\n        char[] CharU20000 = Character.toChars(0x20000);\n        char[] CharU20001 = Character.toChars(0x20001);\n        char[] charArray = new char[] { 'a', 'b', 'c' };\n        \n        boolean contains = containsAny(\"abc\", charArray);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(\"xyz\", charArray);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(\"\", charArray);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(null, charArray);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(\"abc\", null);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(\"\", null);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(\"abc\", CharU20000);\n        System.out.println(\"contains: \" + contains);\n        contains = containsAny(\"abc\", CharU20001);\n        System.out.println(\"contains: \" + contains);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..7f039e16 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,51 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class StringUtils {\n+    \n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+        Set<Character> searchSet = new HashSet<Character>();\n+        for (char c : searchChars) {\n+            searchSet.add(c);\n+        }\n+        for (int i = 0; i < str.length(); i++) {\n+            if (searchSet.contains(str.charAt(i))) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    \n+    public static void main(String[] args) {\n+        char[] CharU20000 = Character.toChars(0x20000);\n+        char[] CharU20001 = Character.toChars(0x20001);\n+        char[] charArray = new char[] { 'a', 'b', 'c' };\n+        \n+        boolean contains = containsAny(\"abc\", charArray);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(\"xyz\", charArray);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(\"\", charArray);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(null, charArray);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(\"abc\", null);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(\"\", null);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(\"abc\", CharU20000);\n+        System.out.println(\"contains: \" + contains);\n+        contains = containsAny(\"abc\", CharU20001);\n+        System.out.println(\"contains: \" + contains);\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}