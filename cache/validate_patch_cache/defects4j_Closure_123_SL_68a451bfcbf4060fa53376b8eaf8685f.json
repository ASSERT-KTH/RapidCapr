{
    "patch": "public class MyClass {\n\n    public static void main(String args[]) {\n        boolean c = true;\n        Object[] d = {1,2,3};\n        boolean a;\n        Context rhsContext = Context.OTHER;\n        a = c ? false : (d != null && d.getClass().isArray() && Arrays.asList(d).contains(0));\n        for (a = c ? false : (0 in d);;) { \n            foo();\n        }\n    }\n\n    public static void foo() {\n        System.out.print(\"foo()\");\n    }\n}\n\nenum Context {\n    OTHER;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}