{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    // If the time is between two transitions, returns the offset before the later transition\n    long nextTransitionLocal = nextTransition(instantLocal);\n    long nextTransitionAdjusted = nextTransition(instantAdjusted);\n    if (nextTransitionLocal == nextTransitionAdjusted) {\n        return offsetLocal < offsetAdjusted ? offsetLocal : offsetAdjusted;\n    }\n    int offsetBefore = getOffset(nextTransitionAdjusted - 1);\n    int offsetAfter = getOffset(nextTransitionAdjusted);\n    if (offsetBefore > offsetAfter && instantLocal < nextTransitionLocal) {\n        return offsetLocal;\n    }\n    if (offsetLocal < offsetAdjusted) {\n        return offsetLocal;\n    }\n    long nextLocal = nextTransition(instantAdjusted);\n    if (nextLocal != nextTransitionAdjusted) {\n        return offsetLocal;\n    }\n    int offsetPrev = getOffset(previousTransition(instantAdjusted));\n    if (offsetPrev > offsetBefore && offsetPrev > offsetAfter) {\n        return offsetPrev;\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..912cf46a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,31 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    // If the time is between two transitions, returns the offset before the later transition\n+    long nextTransitionLocal = nextTransition(instantLocal);\n+    long nextTransitionAdjusted = nextTransition(instantAdjusted);\n+    if (nextTransitionLocal == nextTransitionAdjusted) {\n+        return offsetLocal < offsetAdjusted ? offsetLocal : offsetAdjusted;\n+    }\n+    int offsetBefore = getOffset(nextTransitionAdjusted - 1);\n+    int offsetAfter = getOffset(nextTransitionAdjusted);\n+    if (offsetBefore > offsetAfter && instantLocal < nextTransitionLocal) {\n+        return offsetLocal;\n+    }\n+    if (offsetLocal < offsetAdjusted) {\n+        return offsetLocal;\n+    }\n+    long nextLocal = nextTransition(instantAdjusted);\n+    if (nextLocal != nextTransitionAdjusted) {\n+        return offsetLocal;\n+    }\n+    int offsetPrev = getOffset(previousTransition(instantAdjusted));\n+    if (offsetPrev > offsetBefore && offsetPrev > offsetAfter) {\n+        return offsetPrev;\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}