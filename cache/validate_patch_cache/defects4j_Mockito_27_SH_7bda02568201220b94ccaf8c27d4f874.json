{
    "patch": "MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\nMockHandlerInterface<T> newMockHandler = Mockito.mock(MockHandler.class, Mockito.CALLS_REAL_METHODS);\n((MockitoExt) newMockHandler).setCallsRealMethods(true);\nMockito.getMockSettings(mock).getDefaultAnswer();\nMockito.when(mock.toString()).thenReturn(oldMockHandler.getInvocationContainer().toString());\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\nCallback[] callbacks = ((Factory) mock).getCallbacks();\nif (callbacks != null) {\n    for (int i = 0; i < callbacks.length; i++) {\n        if (callbacks[i] instanceof MethodInterceptorFilter) {\n            callbacks[i] = newFilter;\n            ((Factory) mock).setCallbacks(callbacks);\n            return;\n        }\n    }\n}\n((Factory) mock).setCallback(0, newFilter);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..5f45013f8 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,26 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+MockHandlerInterface<T> newMockHandler = Mockito.mock(MockHandler.class, Mockito.CALLS_REAL_METHODS);\n+((MockitoExt) newMockHandler).setCallsRealMethods(true);\n+Mockito.getMockSettings(mock).getDefaultAnswer();\n+Mockito.when(mock.toString()).thenReturn(oldMockHandler.getInvocationContainer().toString());\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+Callback[] callbacks = ((Factory) mock).getCallbacks();\n+if (callbacks != null) {\n+    for (int i = 0; i < callbacks.length; i++) {\n+        if (callbacks[i] instanceof MethodInterceptorFilter) {\n+            callbacks[i] = newFilter;\n+            ((Factory) mock).setCallbacks(callbacks);\n+            return;\n+        }\n+    }\n+}\n+((Factory) mock).setCallback(0, newFilter);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}