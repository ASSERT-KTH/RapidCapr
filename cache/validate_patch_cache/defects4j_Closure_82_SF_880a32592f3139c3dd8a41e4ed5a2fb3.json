{
    "patch": "  public final boolean isEmptyType() {\n    return isNoType() || isNullType() || isBottomType() ||\n      (isArrayType() && getContainingType().isEmptyType()) ||\n      (isUnionType() && getAlternativeTypes().stream().allMatch(Type::isEmptyType)) ||\n      (isDeclaredType() && getDeclaredTypeParameters().stream().allMatch(TypeParameter::isEmpty));\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..82affa84 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,10 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+    return isNoType() || isNullType() || isBottomType() ||\n+      (isArrayType() && getContainingType().isEmptyType()) ||\n+      (isUnionType() && getAlternativeTypes().stream().allMatch(Type::isEmptyType)) ||\n+      (isDeclaredType() && getDeclaredTypeParameters().stream().allMatch(TypeParameter::isEmpty));\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}