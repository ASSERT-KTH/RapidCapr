{
    "patch": "public static int add(int x, int y) {\n    int result = x ^ y; // sum of bits without carry\n    int carry = (x & y) << 1; // carry of bits\n    // handle overflow\n    if ((carry < 0 && result >= 0) || (carry >= 0 && result < 0)) {\n        throw new ArithmeticException(\"Overflow occurred\");\n    }\n    while (carry != 0) { // if there is still a carry bit then keep adding\n        int temp = result;\n        result = temp ^ carry; // add carry and sum without carry\n        carry = (temp & carry) << 1; // calculate new carry bit\n        // handle overflow\n        if ((carry < 0 && result >= 0) || (carry >= 0 && result < 0)) {\n            throw new ArithmeticException(\"Overflow occurred\");\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ADD.java b/src/main/java/humaneval/buggy/ADD.java\nindex 186aae7..1e83415 100644\n--- a/src/main/java/humaneval/buggy/ADD.java\n+++ b/src/main/java/humaneval/buggy/ADD.java\n@@ -7,7 +7,22 @@ package humaneval.buggy;\n 12 */\n \n public class ADD {\n-    public static int add(int x, int y) {\n-        return x | y;\n+public static int add(int x, int y) {\n+    int result = x ^ y; // sum of bits without carry\n+    int carry = (x & y) << 1; // carry of bits\n+    // handle overflow\n+    if ((carry < 0 && result >= 0) || (carry >= 0 && result < 0)) {\n+        throw new ArithmeticException(\"Overflow occurred\");\n     }\n+    while (carry != 0) { // if there is still a carry bit then keep adding\n+        int temp = result;\n+        result = temp ^ carry; // add carry and sum without carry\n+        carry = (temp & carry) << 1; // calculate new carry bit\n+        // handle overflow\n+        if ((carry < 0 && result >= 0) || (carry >= 0 && result < 0)) {\n+            throw new ArithmeticException(\"Overflow occurred\");\n+        }\n+    }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}