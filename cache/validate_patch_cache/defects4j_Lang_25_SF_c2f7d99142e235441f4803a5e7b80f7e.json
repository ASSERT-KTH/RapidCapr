{
    "patch": "public static String escape(String input, String encoding) {\n    StringBuilder output = new StringBuilder();\n    byte[] bytes = input.getBytes(Charset.forName(encoding));\n\n    for (byte b : bytes) {\n        if (b == 92 || b == 34 || b == 39 || b == 47) {  // escape characters \\, \", ', /\n            output.append(\"\\\\\").append((char) b);\n        } else if (b >= 32 && b <= 126) {  // printable ASCII characters\n            output.append((char) b);\n        } else {  // non-printable ASCII characters\n            output.append(String.format(\"\\\\u%04x\", b & 0xffff));\n        }\n    }\n\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..b8f14476 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,22 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String input, String encoding) {\n+    StringBuilder output = new StringBuilder();\n+    byte[] bytes = input.getBytes(Charset.forName(encoding));\n+\n+    for (byte b : bytes) {\n+        if (b == 92 || b == 34 || b == 39 || b == 47) {  // escape characters \\, \", ', /\n+            output.append(\"\\\\\").append((char) b);\n+        } else if (b >= 32 && b <= 126) {  // printable ASCII characters\n+            output.append((char) b);\n+        } else {  // non-printable ASCII characters\n+            output.append(String.format(\"\\\\u%04x\", b & 0xffff));\n+        }\n+    }\n+\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}