{
    "patch": "public static double getTypedPercent(String[] jsonStrings) {\n   double totalCount = jsonStrings.length;\n   double typedCount = 0;\n\n   for(String s : jsonStrings) {\n      try {\n         JSONObject jsonObject = new JSONObject(s);\n         if (jsonObject.has(\"type\")) {\n            typedCount++;\n         }\n      } catch (JSONException e) {\n         continue;\n      }\n   }\n\n   return (typedCount / totalCount) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..fe1ab023 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String[] jsonStrings) {\n+   double totalCount = jsonStrings.length;\n+   double typedCount = 0;\n+\n+   for(String s : jsonStrings) {\n+      try {\n+         JSONObject jsonObject = new JSONObject(s);\n+         if (jsonObject.has(\"type\")) {\n+            typedCount++;\n+         }\n+      } catch (JSONException e) {\n+         continue;\n+      }\n+   }\n+\n+   return (typedCount / totalCount) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}