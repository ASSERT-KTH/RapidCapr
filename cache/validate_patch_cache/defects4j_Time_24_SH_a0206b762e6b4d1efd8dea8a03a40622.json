{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                int year = savedFields[i].getValue();\n                int weekOfWeekyear = DateTimeUtils.getWeekOfWeekyear(year, savedFields[i + 1].getValue());\n                saveField(DateTimeFieldType.weekyear(), year);\n                saveField(DateTimeFieldType.weekOfWeekyear(), weekOfWeekyear);\n                iSavedFields[0].copy(savedFields[i + 1]);\n                iSavedFields[1].copy(savedFields[i]);\n                for (int j = i + 2; j < count; j++) {\n                    iSavedFields[j].copy(savedFields[j]);\n                }\n                count = Math.max(0, count - 1);\n                i = -1;\n                continue;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..e9930c07 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                int year = savedFields[i].getValue();\n+                int weekOfWeekyear = DateTimeUtils.getWeekOfWeekyear(year, savedFields[i + 1].getValue());\n+                saveField(DateTimeFieldType.weekyear(), year);\n+                saveField(DateTimeFieldType.weekOfWeekyear(), weekOfWeekyear);\n+                iSavedFields[0].copy(savedFields[i + 1]);\n+                iSavedFields[1].copy(savedFields[i]);\n+                for (int j = i + 2; j < count; j++) {\n+                    iSavedFields[j].copy(savedFields[j]);\n+                }\n+                count = Math.max(0, count - 1);\n+                i = -1;\n+                continue;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}