{
    "patch": "                try {\n                    millis = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    if (text != null) {\n                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                    }\n                    throw e;\n                }\n                if (i < count - 1) {\n                    DurationField field = savedFields[i].iField.getDurationField();\n                    long diff = savedFields[i + 1].iField.set(0L, savedFields[i + 1].iValue) - savedFields[i].iField.set(0L, savedFields[i].iValue);\n                    millis = field.add(millis, (int)(diff / field.getUnitMillis()));\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..7b87f9eb 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                try {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    if (text != null) {\n+                        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                    }\n+                    throw e;\n+                }\n+                if (i < count - 1) {\n+                    DurationField field = savedFields[i].iField.getDurationField();\n+                    long diff = savedFields[i + 1].iField.set(0L, savedFields[i + 1].iValue) - savedFields[i].iField.set(0L, savedFields[i].iValue);\n+                    millis = field.add(millis, (int)(diff / field.getUnitMillis()));\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}