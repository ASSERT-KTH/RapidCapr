{
    "patch": "public static boolean right_angle_triangle(int a, int b, int c) {\n    if (a <= 0 || b <= 0 || c <= 0) { // check if any of the sides are less than or equal to zero\n        return false;\n    }\n    int max = Math.max(Math.max(a, b), c);\n    int sumOfSquares = 0;\n    if (max == a) {\n        sumOfSquares = (b * b) + (c * c); // calculate the sum of squares of other two sides\n    } else if (max == b) {\n        sumOfSquares = (a * a) + (c * c); // calculate the sum of squares of other two sides\n    } else {\n        sumOfSquares = (a * a) + (b * b); // calculate the sum of squares of other two sides\n    }\n    return Math.abs(max * max - sumOfSquares) < 0.0001 && (a+b > c) && (a+c > b) && (b+c > a); // use Math.abs() to compare the result with tolerance, also fix the condition to match the triangle inequality definition\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..4721aff 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -9,7 +9,19 @@ package humaneval.buggy;\n // right_angle_triangle(1, 2, 3) == False\n \n public class RIGHT_ANGLE_TRIANGLE {\n-    public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+public static boolean right_angle_triangle(int a, int b, int c) {\n+    if (a <= 0 || b <= 0 || c <= 0) { // check if any of the sides are less than or equal to zero\n+        return false;\n     }\n+    int max = Math.max(Math.max(a, b), c);\n+    int sumOfSquares = 0;\n+    if (max == a) {\n+        sumOfSquares = (b * b) + (c * c); // calculate the sum of squares of other two sides\n+    } else if (max == b) {\n+        sumOfSquares = (a * a) + (c * c); // calculate the sum of squares of other two sides\n+    } else {\n+        sumOfSquares = (a * a) + (b * b); // calculate the sum of squares of other two sides\n+    }\n+    return Math.abs(max * max - sumOfSquares) < 0.0001 && (a+b > c) && (a+c > b) && (b+c > a); // use Math.abs() to compare the result with tolerance, also fix the condition to match the triangle inequality definition\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}