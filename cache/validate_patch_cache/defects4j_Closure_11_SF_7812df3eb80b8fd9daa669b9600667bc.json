{
    "patch": "char myChar = 'c'; // This is a valid character literal\nchar myChar2 = ''; // This will cause an unclosed character literal error\nchar myChar3 = '\\''; // This is a valid character literal containing a single quote",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..5df0b3f3 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,9 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+char myChar = 'c'; // This is a valid character literal\n+char myChar2 = ''; // This will cause an unclosed character literal error\n+char myChar3 = '\\''; // This is a valid character literal containing a single quote\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: empty character literal",
    "test_result": "ERROR"
}