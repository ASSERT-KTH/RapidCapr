{
    "patch": "  void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n      return;\n    }\n\n    char c = newcode.charAt(0);\n    if ((isWordChar(c) || c == '\\\\') &&\n        isWordChar(getLastChar())) {\n      // need space to separate. This is not pretty printing.\n      // For example: \"return foo;\"\n      append(\" \");\n      // Do not allow a forward slash to appear after a DIV.\n      // For example,\n      // REGEXP DIV REGEXP\n      // is valid and should print like\n      // / // / /\n    } else if (getLastChar() == '/' && c == '/') {\n      // Do not allow a space to appear between two forward slashes.\n      // For example,\n      // / / / / should print like\n      // ////.\n      append(\"/\");\n    }\n\n    append(newcode);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..b322dded 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -196,6 +196,12 @@ abstract class CodeConsumer {\n       // REGEXP DIV REGEXP\n       // is valid and should print like\n       // / // / /\n+    } else if (getLastChar() == '/' && c == '/') {\n+      // Do not allow a space to appear between two forward slashes.\n+      // For example,\n+      // / / / / should print like\n+      // ////.\n+      append(\"/\");\n     }\n \n     append(newcode);",
    "result_reason": "junit.framework.ComparisonFailure: expected:<alert(/ //[ ]/ /)> but was:<alert(/ //[/]/ /)>",
    "test_result": "FAIL"
}