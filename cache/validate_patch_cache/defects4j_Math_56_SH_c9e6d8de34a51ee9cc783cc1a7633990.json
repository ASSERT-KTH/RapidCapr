{
    "patch": "        int i = last - 1;\n        int idx = indices[i] = index;\n        while (i-- > 0) {\n            idx = idx - uniCounterOffset[i + 1] * indices[i + 1];\n            indices[i] = idx / uniCounterOffset[i];\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..8cbacf370 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,12 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n+        int i = last - 1;\n+        int idx = indices[i] = index;\n+        while (i-- > 0) {\n+            idx = idx - uniCounterOffset[i + 1] * indices[i + 1];\n+            indices[i] = idx / uniCounterOffset[i];\n         }\n-        --idx;\n-        indices[last] = idx;\n \n         return indices;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Wrong multidimensional index for [1][1] expected:<0> but was:<1>",
    "test_result": "FAIL"
}