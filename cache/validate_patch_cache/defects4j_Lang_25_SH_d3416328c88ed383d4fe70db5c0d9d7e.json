{
    "patch": "if (ch == '\\n') {\n    result.append(\"\\\\n\");\n} else if (ch == '\"') {\n    result.append(\"\\\\\\\"\");\n} else if (ch == '\\\\') {\n    result.append(\"\\\\\\\\\");\n} else if (ch == '\\t') {\n    result.append(\"\\\\t\");\n} else if (ch >= 32 && ch <= 126) {\n    result.append(ch);\n} else {\n    result.append(\"\\\\u\");\n    String hexStr = Integer.toHexString(ch);\n    for (int i = 0; i < 4 - hexStr.length(); i++) {\n        result.append('0');\n    }\n    result.append(hexStr);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}