{
    "patch": "public void stop() {\n    boolean isRunning = this.runningState == STATE_RUNNING;\n    boolean isSuspended = this.runningState == STATE_SUSPENDED;\n\n    if (isRunning) {\n        stopTime = System.currentTimeMillis();\n    } else if (!isSuspended) {\n        throw new IllegalStateException(\"Stopwatch is not running. \");\n    }\n\n    this.runningState = STATE_STOPPED;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/time/StopWatch.java b/src/java/org/apache/commons/lang/time/StopWatch.java\nindex 8f394217..39e31fe7 100644\n--- a/src/java/org/apache/commons/lang/time/StopWatch.java\n+++ b/src/java/org/apache/commons/lang/time/StopWatch.java\n@@ -111,14 +111,19 @@ public class StopWatch {\n      *\n      * @throws IllegalStateException if the StopWatch is not running.\n      */\n-    public void stop() {\n-        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n-            throw new IllegalStateException(\"Stopwatch is not running. \");\n-        }\n-            stopTime = System.currentTimeMillis();\n-        this.runningState = STATE_STOPPED;\n+public void stop() {\n+    boolean isRunning = this.runningState == STATE_RUNNING;\n+    boolean isSuspended = this.runningState == STATE_SUSPENDED;\n+\n+    if (isRunning) {\n+        stopTime = System.currentTimeMillis();\n+    } else if (!isSuspended) {\n+        throw new IllegalStateException(\"Stopwatch is not running. \");\n     }\n \n+    this.runningState = STATE_STOPPED;\n+}\n+\n     /**\n      * <p>Resets the stopwatch. Stops it if need be. </p>\n      * ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}