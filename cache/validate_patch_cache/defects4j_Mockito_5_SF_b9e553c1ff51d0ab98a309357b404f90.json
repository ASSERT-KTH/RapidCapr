{
    "patch": "    public void verify(VerificationData data) {\n        AssertionError error = null;\n        \n        timer.start();\n        while (timer.isCounting()) {\n            try {\n                delegate.verify(data);\n                \n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            } catch (MockitoAssertionError e) {\n                error = handleVerifyException(e);\n            } catch (ArgumentsAreDifferent e) { // fixed line\n                error = handleVerifyException(e);\n            }\n        }\n        \n        if (error != null) {\n            throw error;\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..d501c7d66 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -74,12 +74,12 @@ public class VerificationOverTimeImpl implements VerificationMode {\n      */\n     public void verify(VerificationData data) {\n         AssertionError error = null;\n-\n+        \n         timer.start();\n         while (timer.isCounting()) {\n             try {\n                 delegate.verify(data);\n-\n+                \n                 if (returnOnSuccess) {\n                     return;\n                 } else {\n@@ -87,12 +87,11 @@ public class VerificationOverTimeImpl implements VerificationMode {\n                 }\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n-            }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n+            } catch (ArgumentsAreDifferent e) { // fixed line\n                 error = handleVerifyException(e);\n             }\n         }\n-\n+        \n         if (error != null) {\n             throw error;\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}