{
    "patch": "public final boolean isEmptyType() {\n    List<Predicate<PsiType>> typeCheckList = Arrays.asList(this::isNoType, this::isNoObjectType, this::isNoResolvedType, this::isVoidType, this::isUnknownType, this::isNullType, this::isUnionType, this::isArrayType);\n    return typeCheckList.stream().allMatch(typeCheck -> typeCheck.negate().test(true));\n }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..c32a9012 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,10 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    List<Predicate<PsiType>> typeCheckList = Arrays.asList(this::isNoType, this::isNoObjectType, this::isNoResolvedType, this::isVoidType, this::isUnknownType, this::isNullType, this::isUnionType, this::isArrayType);\n+    return typeCheckList.stream().allMatch(typeCheck -> typeCheck.negate().test(true));\n+ }\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}