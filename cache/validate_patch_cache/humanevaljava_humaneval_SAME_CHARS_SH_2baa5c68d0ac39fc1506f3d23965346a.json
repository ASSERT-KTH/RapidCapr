{
    "patch": "\n        if(s0.length() != s1.length()) {\n            return false;\n        }\n        \n        int[] counter = new int[26]; // only lowercase alphabets are there so 26 is enough\n        for(int i = 0; i < s0.length(); i++) {\n            counter[s0.charAt(i) - 'a']++;\n            counter[s1.charAt(i) - 'a']--;\n        }\n        \n        for(int i = 0; i < counter.length; i++) {\n            if(counter[i] != 0) {\n                return false;\n            }\n        }\n        \n        return true;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SAME_CHARS.java b/src/main/java/humaneval/buggy/SAME_CHARS.java\nindex 9367e85..3a3dbde 100644\n--- a/src/main/java/humaneval/buggy/SAME_CHARS.java\n+++ b/src/main/java/humaneval/buggy/SAME_CHARS.java\n@@ -18,8 +18,24 @@ False */\n \n public class SAME_CHARS {\n     public static boolean same_chars(String s0, String s1) {\n-        ArrayList<Character> set0 = new ArrayList<Character>();\n-        ArrayList<Character> set1 = new ArrayList<Character>();\n+\n+        if(s0.length() != s1.length()) {\n+            return false;\n+        }\n+        \n+        int[] counter = new int[26]; // only lowercase alphabets are there so 26 is enough\n+        for(int i = 0; i < s0.length(); i++) {\n+            counter[s0.charAt(i) - 'a']++;\n+            counter[s1.charAt(i) - 'a']--;\n+        }\n+        \n+        for(int i = 0; i < counter.length; i++) {\n+            if(counter[i] != 0) {\n+                return false;\n+            }\n+        }\n+        \n+        return true;\n \n         for (char c0 : s0.toCharArray()) {\n             set0.add(c0);",
    "result_reason": " /tmp/humaneval-SAME_CHARS/src/main/java/humaneval/buggy/SAME_CHARS.java:[41,13] cannot find symbol",
    "test_result": "ERROR"
}