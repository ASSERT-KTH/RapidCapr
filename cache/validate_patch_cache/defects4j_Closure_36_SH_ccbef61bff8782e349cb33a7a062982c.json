{
    "patch": "  if (value.isFunction() && callNode.getFirstChild().isGetProp()) {\n          String propertyName =\n              callNode.getFirstChild().getSecondChild().getString();\n          if (convention.isSingletonGetterMethodName(propertyName)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..53d7bf14 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,10 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+  if (value.isFunction() && callNode.getFirstChild().isGetProp()) {\n+          String propertyName =\n+              callNode.getFirstChild().getSecondChild().getString();\n+          if (convention.isSingletonGetterMethodName(propertyName)) {\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}