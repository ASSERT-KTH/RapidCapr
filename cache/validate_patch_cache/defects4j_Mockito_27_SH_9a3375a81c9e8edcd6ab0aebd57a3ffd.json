{
    "patch": "public <T> void resetMock(T mock) {\n    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n\n    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(\n            newMockHandler, (MockSettingsImpl) org.mockito.Mockito\n                    .withSettings().defaultAnswer(\n                            org.mockito.Mockito.RETURNS_DEFAULTS));\n\n    Map<Object, MockHandlerInterface<?>> oldHandlers = MockitoAdapter.getMockHandlers();\n    MockitoAdapter.clearMockHandlers();\n    try {\n        MockitoAdapter.setMockHandler(mock, newMockHandler);\n\n        if (mock instanceof Factory) {\n            ((Factory) mock).setCallback(0,\n                    newFilter);\n        }\n    } finally {\n        MockitoAdapter.setMockHandlers(oldHandlers);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..fc7761976 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,31 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+public <T> void resetMock(T mock) {\n+    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+\n+    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(\n+            newMockHandler, (MockSettingsImpl) org.mockito.Mockito\n+                    .withSettings().defaultAnswer(\n+                            org.mockito.Mockito.RETURNS_DEFAULTS));\n+\n+    Map<Object, MockHandlerInterface<?>> oldHandlers = MockitoAdapter.getMockHandlers();\n+    MockitoAdapter.clearMockHandlers();\n+    try {\n+        MockitoAdapter.setMockHandler(mock, newMockHandler);\n+\n+        if (mock instanceof Factory) {\n+            ((Factory) mock).setCallback(0,\n+                    newFilter);\n+        }\n+    } finally {\n+        MockitoAdapter.setMockHandlers(oldHandlers);\n+    }\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}