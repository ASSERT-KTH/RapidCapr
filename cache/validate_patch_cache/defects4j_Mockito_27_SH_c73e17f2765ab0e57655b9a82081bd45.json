{
    "patch": "        Mockito.reset(mock);\n        T newMock = Mockito.mock(mock.getClass(), new MethodInterceptorFilter(getMockHandler(mock), (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS)));\n        Mockito.reset(newMock);\n        Mockito.doReturn(getMockHandler(mock)).when(newMock).getHandler();    \n        mock = Mockito.spy(newMock);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..0c19b14c5 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,14 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        Mockito.reset(mock);\n+        T newMock = Mockito.mock(mock.getClass(), new MethodInterceptorFilter(getMockHandler(mock), (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS)));\n+        Mockito.reset(newMock);\n+        Mockito.doReturn(getMockHandler(mock)).when(newMock).getHandler();    \n+        mock = Mockito.spy(newMock);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}