{
    "patch": "public void addValue(double value) {\n    if (Double.isNaN(value)) {\n        sumOfLogs += Double.NaN;\n    } else {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        samLogImpl.increment(value);\n        secondMoment.increment(value);\n        n++;\n        // If mean, variance or geomean have been overridden\n        // increment if it is type already\n        if (meanImpl instanceof StorelessUnivariateStatistic) {\n            meanImpl.increment(value);\n        }\n        if (varianceImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n            varianceImpl.increment(value);\n        }\n        if (geoMeanImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n            geoMeanImpl.increment(value);\n        }\n    }\n    // If mean hasn't been overridden\n    // calculate it from the sum\n    if (!(meanImpl instanceof Mean)) {\n        double currentMean = meanImpl.getResult();\n        double delta = value - currentMean;\n        meanImpl.increment(delta / n);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..70737623a 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,37 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n+    if (Double.isNaN(value)) {\n+        sumOfLogs += Double.NaN;\n+    } else {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n         maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n+        samLogImpl.increment(value);\n         secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+        n++;\n+        // If mean, variance or geomean have been overridden\n+        // increment if it is type already\n+        if (meanImpl instanceof StorelessUnivariateStatistic) {\n             meanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+        if (varianceImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+        if (geoMeanImpl instanceof StorelessUnivariateStatistic && !Double.isNaN(value)) {\n             geoMeanImpl.increment(value);\n         }\n-        n++;\n     }\n+    // If mean hasn't been overridden\n+    // calculate it from the sum\n+    if (!(meanImpl instanceof Mean)) {\n+        double currentMean = meanImpl.getResult();\n+        double delta = value - currentMean;\n+        meanImpl.increment(delta / n);\n+    }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}