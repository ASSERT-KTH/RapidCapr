{
    "patch": "public Object execute(String functionName, List<Object> args) {\n   Method method = methodMap.get(functionName);\n   Object returnValue = null;\n   try {\n       returnValue = method.invoke(this, args.toArray());\n   } catch (IllegalAccessException | InvocationTargetException e) {\n       e.printStackTrace();\n       System.exit(1);\n   }\n   if (returnValue != null) {\n       returnValueMap.put(returnValue.getClass(), returnValue);\n   }\n   return returnValue;\n} // delete this semicolon to remove unreachable statement",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}