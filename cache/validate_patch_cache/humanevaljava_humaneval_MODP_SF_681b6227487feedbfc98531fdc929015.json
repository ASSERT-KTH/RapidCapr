{
    "patch": "    public static int modp(int n, int p) {\n        if (p <= 0) {\n            throw new IllegalArgumentException(\"p must be greater than 0\");\n        }\n        int result = 1;\n        if (n > 0) {\n            int powerOf2 = 2 % p;\n            while (n > 0) {\n                if ((n & 1) != 0) {\n                    result = (result * powerOf2) % p;\n                }\n                powerOf2 = (powerOf2 * powerOf2) % p;\n                n >>= 1;\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MODP.java b/src/main/java/humaneval/buggy/MODP.java\nindex a8f7394..6c77d94 100644\n--- a/src/main/java/humaneval/buggy/MODP.java\n+++ b/src/main/java/humaneval/buggy/MODP.java\n@@ -14,10 +14,20 @@ package humaneval.buggy;\n \n public class MODP {\n     public static int modp(int n, int p) {\n+        if (p <= 0) {\n+            throw new IllegalArgumentException(\"p must be greater than 0\");\n+        }\n         int result = 1;\n-        for (int i = 0; i < n; i += 1){\n-            result = 2 * result;\n+        if (n > 0) {\n+            int powerOf2 = 2 % p;\n+            while (n > 0) {\n+                if ((n & 1) != 0) {\n+                    result = (result * powerOf2) % p;\n+                }\n+                powerOf2 = (powerOf2 * powerOf2) % p;\n+                n >>= 1;\n+            }\n         }\n-        return result % p;\n+        return result;\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}