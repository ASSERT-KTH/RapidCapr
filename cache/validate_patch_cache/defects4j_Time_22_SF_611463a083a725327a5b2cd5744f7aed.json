{
    "patch": "        this(duration, PeriodType.standard());\n    }\n\n    protected BasePeriod(long duration, PeriodType type) {\n        iType = type;\n        iValues = new int[type.size()];\n        setPeriodInternal(duration);\n    }\n\n    private void setPeriodInternal(long duration) {\n        // Split the duration into fields\n        long current = duration;\n        for (int i = 0, isize = iType.size(); i < isize; i++) {\n            if (current == 0) {\n                break;\n            }\n            int value = (int) (current / iType.getFieldType(i).getUnitMillis());\n            iValues[i] = value;\n            current -= value * iType.getFieldType(i).getUnitMillis();\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..a661b7a5 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,11 +218,27 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(duration, PeriodType.standard());\n     }\n \n+    protected BasePeriod(long duration, PeriodType type) {\n+        iType = type;\n+        iValues = new int[type.size()];\n+        setPeriodInternal(duration);\n+    }\n+\n+    private void setPeriodInternal(long duration) {\n+        // Split the duration into fields\n+        long current = duration;\n+        for (int i = 0, isize = iType.size(); i < isize; i++) {\n+            if (current == 0) {\n+                break;\n+            }\n+            int value = (int) (current / iType.getFieldType(i).getUnitMillis());\n+            iValues[i] = value;\n+            current -= value * iType.getFieldType(i).getUnitMillis();\n+        }\n+\n     /**\n      * Creates a period from the given millisecond duration, which is only really\n      * suitable for durations less than one day.",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}