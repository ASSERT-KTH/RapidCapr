{
    "patch": "public static int fib4(int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"Error: input must be a non-negative integer.\");\n    }\n    if (n == 0) {\n        return 0;\n    } else if (n < 4) {\n        return 2;\n    } else {\n        int a = 0;\n        int b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 4; i <= n; i++) {\n            d = a + b + c + d;\n            a = b;\n            b = c;\n          ",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB4.java b/src/main/java/humaneval/buggy/FIB4.java\nindex e4ae6f3..e550a89 100644\n--- a/src/main/java/humaneval/buggy/FIB4.java\n+++ b/src/main/java/humaneval/buggy/FIB4.java\n@@ -17,20 +17,22 @@ Please write a function to efficiently compute the n-th element of the fib4 numb\n 14 */\n \n public class FIB4 {\n-    public static int fib4(int n) {\n-        ArrayList<Integer> result = new ArrayList<Integer>(); \n-        result.add(0);\n-        result.add(0);\n-        result.add(2);\n-        result.add(0);\n-\n-        if (n < 4)\n-            return result.get(n);\n-        for (int i = 4; i < n + 1; i += 1) {\n-            result.add(\n-                result.get(0) + result.get(1) + result.get(2) + result.get(3)\n-            );\n-        }\n-        return result.get(result.size() - 1);\n+public static int fib4(int n) {\n+    if (n < 0) {\n+        throw new IllegalArgumentException(\"Error: input must be a non-negative integer.\");\n     }\n+    if (n == 0) {\n+        return 0;\n+    } else if (n < 4) {\n+        return 2;\n+    } else {\n+        int a = 0;\n+        int b = 0;\n+        int c = 2;\n+        int d = 0;\n+        for (int i = 4; i <= n; i++) {\n+            d = a + b + c + d;\n+            a = b;\n+            b = c;\n+          \n }",
    "result_reason": " /tmp/humaneval-FIB4/src/main/java/humaneval/buggy/FIB4.java:[38,2] reached end of file while parsing",
    "test_result": "ERROR"
}