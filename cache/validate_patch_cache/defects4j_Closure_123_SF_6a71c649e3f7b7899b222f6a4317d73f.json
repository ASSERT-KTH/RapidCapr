{
    "patch": "public static String fixCode(String code) {\n    String[] lines = code.split(\"\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        if (lines[i].matches(\".*for\\\\s*\\\\(.*in.*\\\\).*\")) {\n            String[] parts = lines[i].split(\"in\");\n            String before = parts[0].replaceAll(\"\\\\(\", \" \\\\( \");\n            String after = \" \\\\) \" + lines[i].substring(lines[i].indexOf(\"in\") + 2);\n            lines[i] = before + \"in\" + after;\n        }\n    }\n    return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..101eaffd 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,18 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String[] lines = code.split(\"\\n\");\n+    for (int i = 0; i < lines.length; i++) {\n+        if (lines[i].matches(\".*for\\\\s*\\\\(.*in.*\\\\).*\")) {\n+            String[] parts = lines[i].split(\"in\");\n+            String before = parts[0].replaceAll(\"\\\\(\", \" \\\\( \");\n+            String after = \" \\\\) \" + lines[i].substring(lines[i].indexOf(\"in\") + 2);\n+            lines[i] = before + \"in\" + after;\n+        }\n+    }\n+    return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}