{
    "patch": "import org.apache.commons.math3.analysis.UnivariateFunction;\nimport org.apache.commons.math3.analysis.interpolation.LinearInterpolator;\nimport org.apache.commons.math3.linear.BlockRealMatrix;\nimport org.apache.commons.math3.linear.CholeskyDecomposition;\nimport org.apache.commons.math3.linear.RealMatrix;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    CholeskyDecomposition dec = new CholeskyDecomposition(m);\n    RealMatrix L = dec.getL();\n    BlockRealMatrix sqrtM = new BlockRealMatrix(m.getRowDimension(), m.getColumnDimension());\n    for (int row = 0; row < m.getRowDimension(); row++) {\n        for (int col = 0; col < row; col++) {\n            sqrtM.setEntry(row, col, 0.0);\n        }\n        for (int col = row; col < m.getColumnDimension(); col++) {\n            double val = L.getEntry(row, col) / Math.sqrt(L.getEntry(row, row));\n            sqrtM.setEntry(row, col, val);\n        }\n    }\n    return sqrtM.multiply(sqrtM.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..f657e3d12 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,25 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+import org.apache.commons.math3.analysis.UnivariateFunction;\n+import org.apache.commons.math3.analysis.interpolation.LinearInterpolator;\n+import org.apache.commons.math3.linear.BlockRealMatrix;\n+import org.apache.commons.math3.linear.CholeskyDecomposition;\n+import org.apache.commons.math3.linear.RealMatrix;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    CholeskyDecomposition dec = new CholeskyDecomposition(m);\n+    RealMatrix L = dec.getL();\n+    BlockRealMatrix sqrtM = new BlockRealMatrix(m.getRowDimension(), m.getColumnDimension());\n+    for (int row = 0; row < m.getRowDimension(); row++) {\n+        for (int col = 0; col < row; col++) {\n+            sqrtM.setEntry(row, col, 0.0);\n+        }\n+        for (int col = row; col < m.getColumnDimension(); col++) {\n+            double val = L.getEntry(row, col) / Math.sqrt(L.getEntry(row, row));\n+            sqrtM.setEntry(row, col, val);\n+        }\n     }\n+    return sqrtM.multiply(sqrtM.transpose());\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}