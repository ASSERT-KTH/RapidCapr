{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    long nextTransLocal = nextTransition(instantLocal - offsetLocal);\n    long nextTransAdjusted = nextTransition(instantAdjusted);\n    if (nextTransLocal == nextTransAdjusted) {\n        int offsetBeforeNextTrans = getOffset(nextTransLocal - 1);\n        if (offsetLocal > offsetAdjusted && offsetBeforeNextTrans > offsetAdjusted) {\n            return offsetAdjusted;\n        } else if (offsetLocal < offsetAdjusted && offsetBeforeNextTrans < offsetAdjusted) {\n            return offsetAdjusted;\n        }\n    } else if (offsetLocal > offsetAdjusted) {\n        long prevTransLocal = previousTransition(instantLocal - offsetLocal);\n        if (prevTransLocal == nextTransAdjusted) {\n            return offsetLocal;\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..ccffbcb6 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,24 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    long nextTransLocal = nextTransition(instantLocal - offsetLocal);\n+    long nextTransAdjusted = nextTransition(instantAdjusted);\n+    if (nextTransLocal == nextTransAdjusted) {\n+        int offsetBeforeNextTrans = getOffset(nextTransLocal - 1);\n+        if (offsetLocal > offsetAdjusted && offsetBeforeNextTrans > offsetAdjusted) {\n+            return offsetAdjusted;\n+        } else if (offsetLocal < offsetAdjusted && offsetBeforeNextTrans < offsetAdjusted) {\n+            return offsetAdjusted;\n+        }\n+    } else if (offsetLocal > offsetAdjusted) {\n+        long prevTransLocal = previousTransition(instantLocal - offsetLocal);\n+        if (prevTransLocal == nextTransAdjusted) {\n+            return offsetLocal;\n+        }\n+    }\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}