{
    "patch": "double maxSide = Math.max(Math.max(a, b), c);\ndouble minSides = Math.min(Math.min(a, b), c);\ndouble midSide = a + b + c - maxSide - minSides;\nif ( minSides + midSide <= maxSide) {\n    return -1;\n}\ndouble s = (a + b + c) / 2.;\ndouble result = Math.sqrt(s * (s - a) * (s - b) * (s - c));\nif (Double.isNaN(result) || Double.isInfinit",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java b/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\nindex 484c02b..8901803 100644\n--- a/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\n+++ b/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java\n@@ -18,7 +18,15 @@ public class TRIANGLE_AREA_2 {\n             return -1;\n         \n         double s = (a + b + c) / 2.;\n-        double result = Math.pow(s, 0.5);\n+double maxSide = Math.max(Math.max(a, b), c);\n+double minSides = Math.min(Math.min(a, b), c);\n+double midSide = a + b + c - maxSide - minSides;\n+if ( minSides + midSide <= maxSide) {\n+    return -1;\n+}\n+double s = (a + b + c) / 2.;\n+double result = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n+if (Double.isNaN(result) || Double.isInfinit\n         \n         BigDecimal bd = BigDecimal.valueOf(result);\n         bd = bd.setScale(2, RoundingMode.HALF_UP);",
    "result_reason": " /tmp/humaneval-TRIANGLE_AREA_2/src/main/java/humaneval/buggy/TRIANGLE_AREA_2.java:[29,45] ')' expected",
    "test_result": "ERROR"
}