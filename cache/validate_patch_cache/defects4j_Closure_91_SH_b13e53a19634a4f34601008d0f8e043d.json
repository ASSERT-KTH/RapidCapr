{
    "patch": "      if (n.getFirstChild().getNext() != null &&\n          n.getFirstChild().getNext().getType() == Token.EMPTY) {\n        // Don't traverse function expressions.\n        // For function declarations, traverse the block.\n        return n.isFunction() && n.getFirstChild().getString() != null;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..81c41bc7 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,11 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (n.getFirstChild().getNext() != null &&\n+          n.getFirstChild().getNext().getType() == Token.EMPTY) {\n+        // Don't traverse function expressions.\n+        // For function declarations, traverse the block.\n+        return n.isFunction() && n.getFirstChild().getString() != null;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}