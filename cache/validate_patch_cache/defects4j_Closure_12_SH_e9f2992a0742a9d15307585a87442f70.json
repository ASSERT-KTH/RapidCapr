{
    "patch": " private boolean hasExceptionHandler(Node cfgNode) {\n     if (cfgNode.getExceptionHandler() != null) {\n         return true;\n     }\n     return false; // no exception handler found\n }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..193def56 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,12 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+ private boolean hasExceptionHandler(Node cfgNode) {\n+     if (cfgNode.getExceptionHandler() != null) {\n+         return true;\n+     }\n+     return false; // no exception handler found\n+ }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}