{
    "patch": "            if (offsetAdjusted < offsetLocal) {\n                long prevTransition = previousTransition(instantAdjusted);\n                int offsetPrevTransition = getOffset(prevTransition);\n                if (offsetPrevTransition == offsetLocal) {\n                    return offsetLocal;\n                }\n            } else if (offsetAdjusted > offsetLocal) {\n                long nextTransition = nextTransition(instantAdjusted);\n                int offsetNextTransition = getOffset(nextTransition);\n                if (offsetLocal < offsetNextTransition) {\n                    return offsetLocal;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..222eb9fe 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetAdjusted < offsetLocal) {\n+                long prevTransition = previousTransition(instantAdjusted);\n+                int offsetPrevTransition = getOffset(prevTransition);\n+                if (offsetPrevTransition == offsetLocal) {\n+                    return offsetLocal;\n+                }\n+            } else if (offsetAdjusted > offsetLocal) {\n+                long nextTransition = nextTransition(instantAdjusted);\n+                int offsetNextTransition = getOffset(nextTransition);\n+                if (offsetLocal < offsetNextTransition) {\n+                    return offsetLocal;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}