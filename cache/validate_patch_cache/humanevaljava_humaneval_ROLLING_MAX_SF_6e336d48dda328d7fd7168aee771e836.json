{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<Integer>();\n    Deque<Integer> window = new LinkedList<Integer>();\n    \n    for (Integer n : numbers) {\n        // remove elements outside the current window\n        while (!window.isEmpty() && window.getFirst() < result.size() - window.size() + 1) {\n            window.removeFirst();\n        }\n        // add each element while maintaining a decreasing order\n        while (!window.isEmpty() && numbers.get(window.getLast()) < n) {\n            window.removeLast();\n        }\n        window.addLast(result.size());\n        result.add(numbers.get(window.getFirst()));\n    }\n    \n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..810968f 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,23 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n-\n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<Integer>();\n+    Deque<Integer> window = new LinkedList<Integer>();\n+    \n+    for (Integer n : numbers) {\n+        // remove elements outside the current window\n+        while (!window.isEmpty() && window.getFirst() < result.size() - window.size() + 1) {\n+            window.removeFirst();\n+        }\n+        // add each element while maintaining a decreasing order\n+        while (!window.isEmpty() && numbers.get(window.getLast()) < n) {\n+            window.removeLast();\n         }\n-        return result;\n+        window.addLast(result.size());\n+        result.add(numbers.get(window.getFirst()));\n     }\n+    \n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-ROLLING_MAX/src/main/java/humaneval/buggy/ROLLING_MAX.java:[9,5] cannot find symbol",
    "test_result": "ERROR"
}