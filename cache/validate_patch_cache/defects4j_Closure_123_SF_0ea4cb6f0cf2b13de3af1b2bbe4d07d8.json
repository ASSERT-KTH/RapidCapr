{
    "patch": "public static void printInOperatorInForLoop(boolean c, Object[] d) {\n    String expected = \"for (a = c ? 0 : (0 in d); ; ) foo()\";\n    String result = \"for (a = c ? 0 : \";\n    boolean isIn = false;\n    for (Object obj : d) {\n        if (obj instanceof Integer && ((int) obj) == 0) {\n            isIn = true;\n            break;\n        }\n    }\n    if (isIn) {\n        result += \"[0 in d]\";\n    } else {\n        result += \"0\";\n    }\n    result += \"; ; ) foo()\";\n    assertEquals(expected, result);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..e6d44184 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,24 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static void printInOperatorInForLoop(boolean c, Object[] d) {\n+    String expected = \"for (a = c ? 0 : (0 in d); ; ) foo()\";\n+    String result = \"for (a = c ? 0 : \";\n+    boolean isIn = false;\n+    for (Object obj : d) {\n+        if (obj instanceof Integer && ((int) obj) == 0) {\n+            isIn = true;\n+            break;\n+        }\n+    }\n+    if (isIn) {\n+        result += \"[0 in d]\";\n+    } else {\n+        result += \"0\";\n+    }\n+    result += \"; ; ) foo()\";\n+    assertEquals(expected, result);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}