{
    "patch": "        // check if either endpoint is close enough to zero\n        if(Math.abs(yMin) < functionValueAccuracy ) {\n            setResult(min, 0);\n            return result;\n        } else if(Math.abs(yMax) < functionValueAccuracy) {\n            setResult(max, 0);\n            return result;\n        }\n        \n        // Check if endpoints bracket a root\n        if (yMin * yMax > 0) {\n            throw new IllegalArgumentException(\"Points at the ends of the interval do not bracket the root.\");",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..c5780753f 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,18 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // check if either endpoint is close enough to zero\n+        if(Math.abs(yMin) < functionValueAccuracy ) {\n+            setResult(min, 0);\n+            return result;\n+        } else if(Math.abs(yMax) < functionValueAccuracy) {\n+            setResult(max, 0);\n+            return result;\n+        }\n+        \n+        // Check if endpoints bracket a root\n+        if (yMin * yMax > 0) {\n+            throw new IllegalArgumentException(\"Points at the ends of the interval do not bracket the root.\");\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}