{
    "patch": "        // Maybe STRING, GET, SET\n        Node childFirstChild = child.getFirstChild();\n        JSDocInfo info = NodeUtil.getBestJSDocInfo(child);\n        if (childFirstChild == null && info != null && info.isConstructor()) {\n          // Don't rename constructor properties that look like classes\n          continue;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..65401ee4 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,13 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        // Maybe STRING, GET, SET\n+        Node childFirstChild = child.getFirstChild();\n+        JSDocInfo info = NodeUtil.getBestJSDocInfo(child);\n+        if (childFirstChild == null && info != null && info.isConstructor()) {\n+          // Don't rename constructor properties that look like classes\n+          continue;\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}