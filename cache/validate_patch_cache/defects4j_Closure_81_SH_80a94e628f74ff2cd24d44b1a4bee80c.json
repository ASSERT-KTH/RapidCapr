{
    "patch": "        name = new Name();\n        name.setIdentifier(\"\");\n>>> [ INFILL ] <<<\n        name.setLineno(functionNode.getLineno());\n        functionNode.setFunctionName(name);\n        functionNode.setIsExpression(true);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..9148738e 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -516,6 +516,12 @@ public class IRFactory {\n       if (name == null) {\n         name = new Name();\n         name.setIdentifier(\"\");\n+>>> [ INFILL ] <<<\n+        name.setLineno(functionNode.getLineno());\n+        functionNode.setFunctionName(name);\n+        functionNode.setIsExpression(true);\n+        name = new Name();\n+        name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n       }\n       Node node = newNode(Token.FUNCTION);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}