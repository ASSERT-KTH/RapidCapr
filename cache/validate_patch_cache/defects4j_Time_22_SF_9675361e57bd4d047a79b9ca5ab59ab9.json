{
    "patch": "    protected BasePeriod(long duration) {\n        this(duration, PeriodType.standard());\n    }\n\n    protected BasePeriod(long duration, PeriodType type) {\n        iPeriodType = checkPeriodType(type);\n        iValues = new int[size()];\n        setPeriodInternal(duration);\n    }\n\n    protected void setPeriodInternal(long duration) {\n        long remainder = duration;\n        for (int i = 0, isize = size(); i < isize; i++) {\n            int value = (int) (remainder / getUnitMillis(i));\n            remainder -= ((long) value) * getUnitMillis(i);\n            iValues[i] = value;\n        }\n        iMillis = FieldUtils.safeToInt(remainder);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..572d9c41 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,8 +219,23 @@ public abstract class BasePeriod\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(duration, PeriodType.standard());\n+    }\n+\n+    protected BasePeriod(long duration, PeriodType type) {\n+        iPeriodType = checkPeriodType(type);\n+        iValues = new int[size()];\n+        setPeriodInternal(duration);\n+    }\n+\n+    protected void setPeriodInternal(long duration) {\n+        long remainder = duration;\n+        for (int i = 0, isize = size(); i < isize; i++) {\n+            int value = (int) (remainder / getUnitMillis(i));\n+            remainder -= ((long) value) * getUnitMillis(i);\n+            iValues[i] = value;\n+        }\n+        iMillis = FieldUtils.safeToInt(remainder);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}