{
    "patch": "public ReturnValues createExecutionContext(String bucketName, String key, HttpHeaders headers) throws Exception {\n    final String bucketNameInSystem = bucketName == null ? this.bucketName : bucketName;\n    final String keyInSystem = key == null ? this.key : key;\n    final AmazonS3 s3Client = AmazonS3ClientBuilder.defaultClient();\n    final S3Object object = s3Client.getObject(bucketNameInSystem, keyInSystem);\n    final String objectData = IOUtils.toString(object.getObjectContent(), StandardCharsets.UTF_8);\n    return new ReturnValues() {\n        @Override\n        public Object returnValueFor(Class<?> aClass) {\n            if (aClass == Iterable.class) {\n                return new ArrayList<>(Arrays.asList(objectData.split(\"\\n\")));\n            }\n            return null; // return null here instead of in an else block\n        }\n    };\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}