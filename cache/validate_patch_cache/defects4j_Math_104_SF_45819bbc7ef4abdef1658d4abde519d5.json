{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double gammaValue = Gamma.gamma(a);\n    double regularizedGamma = Gamma.regularizedGammaQ(a,x);\n\n    double expected = regularizedGamma;\n    double actualP = Gamma.regularizedGammaP(a,x);\n\n    if(Math.abs(expected-actualP) <= Math.ulp(gammaValue)) {\n        return actualP;\n    } else {\n        return regularizedGamma;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..8e1c572db 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,19 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double gammaValue = Gamma.gamma(a);\n+    double regularizedGamma = Gamma.regularizedGammaQ(a,x);\n+\n+    double expected = regularizedGamma;\n+    double actualP = Gamma.regularizedGammaP(a,x);\n+\n+    if(Math.abs(expected-actualP) <= Math.ulp(gammaValue)) {\n+        return actualP;\n+    } else {\n+        return regularizedGamma;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}