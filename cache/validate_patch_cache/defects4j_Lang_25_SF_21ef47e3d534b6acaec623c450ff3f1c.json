{
    "patch": "public static String iso8859_1_escape(String input) {\n    StringBuilder output = new StringBuilder();\n    for (char ch : input.toCharArray()) {\n        if (ch >= 160 || ch < 32) {\n            output.append(\"\\\\u00\");\n            int hex = ch / 16;\n            output.append(Character.forDigit(hex, 16));\n            hex = ch % 16;\n            output.append(Character.forDigit(hex, 16));\n        } else {\n            output.append(ch);\n        }\n    }\n    return output.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e9ab6f07 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,21 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String iso8859_1_escape(String input) {\n+    StringBuilder output = new StringBuilder();\n+    for (char ch : input.toCharArray()) {\n+        if (ch >= 160 || ch < 32) {\n+            output.append(\"\\\\u00\");\n+            int hex = ch / 16;\n+            output.append(Character.forDigit(hex, 16));\n+            hex = ch % 16;\n+            output.append(Character.forDigit(hex, 16));\n+        } else {\n+            output.append(ch);\n+        }\n+    }\n+    return output.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}