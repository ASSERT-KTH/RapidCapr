{
    "patch": "try {\n    byte[] bytes = source.getBytes(\"ISO-8859-1\");\n    String escaped = new String(bytes, \"ISO-8859-1\");\n    assertEquals(\"Original and escaped strings should have the same length\",\n        source.length(), escaped.length());\n    for (int i = 0; i < source.length(); ++i) {\n        char c = source.charAt(i);\n        if (mustEscape(c, true)) {\n            assertEquals(\"Character \" + Integer.toHexString((int) c) +\n                \" should be escaped\",\n                escaped.substring(i, i + 6), ESC_CHAR_C));\n            i += 5;\n        } else {\n            char expected = source.charAt(i);\n            char found = escaped.charAt(i);\n            assertEquals(\"Incorrect escape for character \" +\n                Integer.toHexString((int) c),\n                expected, found);\n        }\n    }\n    success = true;\n} catch (UnsupportedEncodingException ignored) {\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}