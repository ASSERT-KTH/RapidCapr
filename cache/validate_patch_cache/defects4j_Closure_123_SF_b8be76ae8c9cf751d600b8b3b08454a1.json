{
    "patch": "public String fixCode(String code) {\n    int start = code.indexOf(\"for(\");\n    int end = code.indexOf(\"{\");\n    String[] parts = code.substring(start, end).split(\" \");\n    String initial = parts[1];\n    String var = parts[2];\n    String operator = parts[3];\n    String array = parts[4];\n\n    if (array.charAt(0) != '(') {\n        array = \"(\" + array + \")\";\n    }\n    if (operator.equals(\"in\")) {\n        operator = \"of\";\n    }\n    String fixed = code.substring(0, start) + \"for (\" + initial + \"; \" + var + \" \" + operator + \" \" + array + \") {\"\n            + code.substring(end + 1);\n    return fixed;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..239ce44b 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,25 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    int start = code.indexOf(\"for(\");\n+    int end = code.indexOf(\"{\");\n+    String[] parts = code.substring(start, end).split(\" \");\n+    String initial = parts[1];\n+    String var = parts[2];\n+    String operator = parts[3];\n+    String array = parts[4];\n+\n+    if (array.charAt(0) != '(') {\n+        array = \"(\" + array + \")\";\n+    }\n+    if (operator.equals(\"in\")) {\n+        operator = \"of\";\n+    }\n+    String fixed = code.substring(0, start) + \"for (\" + initial + \"; \" + var + \" \" + operator + \" \" + array + \") {\"\n+            + code.substring(end + 1);\n+    return fixed;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}