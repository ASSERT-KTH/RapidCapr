{
    "patch": "case FALSE:\n  case UNKNOWN:\n     // fix starts\n     if (this.isNullOrUndefined()) {\n        return new TypePair(that.removeNull().removeUndefined(), that);\n     }\n     if (that.isNullOrUndefined()) {\n        return new TypePair(this, this.removeNull().removeUndefined());\n     }\n     // fix ends\n     return new TypePair(this, that);",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..f9e0036b 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,17 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+case FALSE:\n+  case UNKNOWN:\n+     // fix starts\n+     if (this.isNullOrUndefined()) {\n+        return new TypePair(that.removeNull().removeUndefined(), that);\n+     }\n+     if (that.isNullOrUndefined()) {\n+        return new TypePair(this, this.removeNull().removeUndefined());\n+     }\n+     // fix ends\n+     return new TypePair(this, that);\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}