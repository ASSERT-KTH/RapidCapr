{
    "patch": "for (Var v : fnScope.getOwnVars()) {\n      if (v.getParentNode() != function && !referenced.contains(v)) {\n        compiler.reportCodeChange();\n        fnScope.undeclare(v);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..42031f8b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,12 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+for (Var v : fnScope.getOwnVars()) {\n+      if (v.getParentNode() != function && !referenced.contains(v)) {\n+        compiler.reportCodeChange();\n+        fnScope.undeclare(v);\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}