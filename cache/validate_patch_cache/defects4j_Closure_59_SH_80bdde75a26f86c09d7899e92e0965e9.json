{
    "patch": "CheckLevel checkGlobalThisLevel = options.checkGlobalThisLevel;\nif (checkGlobalThisLevel.isOn()) {\n  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, checkGlobalThisLevel);\n} else {\n  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..d1a866a1 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,13 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+CheckLevel checkGlobalThisLevel = options.checkGlobalThisLevel;\n+if (checkGlobalThisLevel.isOn()) {\n+  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, checkGlobalThisLevel);\n+} else {\n+  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+  options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);\n+}\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}