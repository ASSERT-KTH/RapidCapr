{
    "patch": "public static String fixCode(String code) {\n    String pattern = \"for\\\\s*\\\\(\\\\s*(int|long)?\\\\s*([a-zA-Z]\\\\w*)\\\\s*:\\\\s*([a-zA-Z]\\\\w*)\\\\s*\\\\)\";\n    Pattern p = Pattern.compile(pattern);\n    Matcher m = p.matcher(code);\n    StringBuilder sb = new StringBuilder();\n\n    int lastIndex = 0;\n    while (m.find()) {\n        // append everything from the last index up to the start of the match\n        sb.append(code.substring(lastIndex, m.start()));\n\n        // get the groups from the match\n        String type = m.group(1);\n        String var = m.group(2);\n        String iterable = m.group(3);\n\n        // check if the iterable is an array or a collection\n        String replacement;\n        if (code.substring(m.end()).startsWith(\"[\")) {\n            replacement = String.format(\"for(%s %s : java.util.Arrays.asList(%s))\", type, var, iterable);\n        } else {\n            replacement = String.format(\"for(%s %s : %s)\", type, var, iterable);\n        }\n        sb.append(replacement);\n\n        // update the last index to the end of the match\n        lastIndex = m.end();\n    }\n\n    // append everything from the last index up to the end of the code\n    sb.append(code.substring(lastIndex));\n\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..322f0411 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,40 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String pattern = \"for\\\\s*\\\\(\\\\s*(int|long)?\\\\s*([a-zA-Z]\\\\w*)\\\\s*:\\\\s*([a-zA-Z]\\\\w*)\\\\s*\\\\)\";\n+    Pattern p = Pattern.compile(pattern);\n+    Matcher m = p.matcher(code);\n+    StringBuilder sb = new StringBuilder();\n+\n+    int lastIndex = 0;\n+    while (m.find()) {\n+        // append everything from the last index up to the start of the match\n+        sb.append(code.substring(lastIndex, m.start()));\n+\n+        // get the groups from the match\n+        String type = m.group(1);\n+        String var = m.group(2);\n+        String iterable = m.group(3);\n+\n+        // check if the iterable is an array or a collection\n+        String replacement;\n+        if (code.substring(m.end()).startsWith(\"[\")) {\n+            replacement = String.format(\"for(%s %s : java.util.Arrays.asList(%s))\", type, var, iterable);\n+        } else {\n+            replacement = String.format(\"for(%s %s : %s)\", type, var, iterable);\n+        }\n+        sb.append(replacement);\n+\n+        // update the last index to the end of the match\n+        lastIndex = m.end();\n+    }\n+\n+    // append everything from the last index up to the end of the code\n+    sb.append(code.substring(lastIndex));\n+\n+    return sb.toString();\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}