{
    "patch": "public static double[] find_closest_elements(double[] numbers) {\n    if (numbers == null || numbers.length < 2) {\n        throw new IllegalArgumentException(\"Input array must contain at least 2 elements\");\n    }\n\n    double[] result = new double[2];\n    Arrays.sort(numbers); // Sorting the array first\n\n    double minDistance = Double.MAX_VALUE;\n    for (int i = 1; i < numbers.length; i++) {\n        double distance = numbers[i] - numbers[i-1];\n        if(distance < minDistance) {\n            minDistance = distance;\n            result[0] = numbers[i-1];\n            result[1] = numbers[i];\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\nindex 72388af..c45d04f 100644\n--- a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n@@ -1,25 +1,24 @@\n package humaneval.buggy;\n \n public class FIND_CLOSEST_ELEMENTS {\n-    public static double[] find_closest_elements(double[] numbers) {\n-        double[] result = new double[2];\n+public static double[] find_closest_elements(double[] numbers) {\n+    if (numbers == null || numbers.length < 2) {\n+        throw new IllegalArgumentException(\"Input array must contain at least 2 elements\");\n+    }\n+\n+    double[] result = new double[2];\n+    Arrays.sort(numbers); // Sorting the array first\n \n-        double distance = Double.MAX_VALUE;\n-        for (int i = 0; i < numbers.length; i += 1){\n-            for (int j = 0; j < numbers.length; j += 1){\n-                double new_distance = Math.abs(numbers[i] - numbers[j]);\n-                if (new_distance < distance){\n-                    distance = new_distance;\n-                    if (numbers[i] < numbers[j]){\n-                        result[0] = numbers[i];\n-                        result[1] = numbers[j];\n-                    } else{\n-                        result[0] = numbers[j];\n-                        result[1] = numbers[i];\n-                    }\n-                }\n-            }\n+    double minDistance = Double.MAX_VALUE;\n+    for (int i = 1; i < numbers.length; i++) {\n+        double distance = numbers[i] - numbers[i-1];\n+        if(distance < minDistance) {\n+            minDistance = distance;\n+            result[0] = numbers[i-1];\n+            result[1] = numbers[i];\n         }\n-        return result;\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-FIND_CLOSEST_ELEMENTS/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java:[10,5] cannot find symbol",
    "test_result": "ERROR"
}