{
    "patch": "public String getprop(final String name) {\n    final String[] commands = { \"/system/bin/getprop\", name };\n    final StringBuilder output = new StringBuilder();\n\n    try {\n        final Process process = new ProcessBuilder().command(commands).redirectErrorStream(true).start();\n        final InputStream in = process.getInputStream();\n        final byte[] buffer = new byte[1024];\n        int read;\n        while ((read = in.read(buffer)) != -1) {\n            output.append(new String(buffer, 0, read));\n        }\n        in.close();\n        process.waitFor();\n    } catch (final Exception e) {\n        // do nothing.\n    }\n    return output.toString().trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..83d7fc02 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getprop(final String name) {\n+    final String[] commands = { \"/system/bin/getprop\", name };\n+    final StringBuilder output = new StringBuilder();\n+\n+    try {\n+        final Process process = new ProcessBuilder().command(commands).redirectErrorStream(true).start();\n+        final InputStream in = process.getInputStream();\n+        final byte[] buffer = new byte[1024];\n+        int read;\n+        while ((read = in.read(buffer)) != -1) {\n+            output.append(new String(buffer, 0, read));\n+        }\n+        in.close();\n+        process.waitFor();\n+    } catch (final Exception e) {\n+        // do nothing.\n+    }\n+    return output.toString().trim();\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}