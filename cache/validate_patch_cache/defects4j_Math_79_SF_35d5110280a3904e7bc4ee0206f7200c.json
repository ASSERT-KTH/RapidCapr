{
    "patch": "    public static double distance(int[] p1, int[] p2) {\n        if (p1 == null || p2 == null || p1.length != p2.length) {\n            throw new IllegalArgumentException(\"Invalid inputs\");\n        }\n        double sum = 0.0;\n        for (int i = 0; i < p1.length; i++) {\n            double dp = ((double) p1[i]) - p2[i];\n            sum += dp * dp;\n        }\n        return Math.sqrt(sum);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 46368dc9f..69aacffa3 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -1621,12 +1621,15 @@ public final class MathUtils {\n      * @return the L<sub>2</sub> distance between the two points\n      */\n     public static double distance(int[] p1, int[] p2) {\n-      int sum = 0;\n-      for (int i = 0; i < p1.length; i++) {\n-          final int dp = p1[i] - p2[i];\n-          sum += dp * dp;\n-      }\n-      return Math.sqrt(sum);\n+        if (p1 == null || p2 == null || p1.length != p2.length) {\n+            throw new IllegalArgumentException(\"Invalid inputs\");\n+        }\n+        double sum = 0.0;\n+        for (int i = 0; i < p1.length; i++) {\n+            double dp = ((double) p1[i]) - p2[i];\n+            sum += dp * dp;\n+        }\n+        return Math.sqrt(sum);\n     }\n \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}