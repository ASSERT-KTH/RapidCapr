{
    "patch": "                if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                    int year = savedFields[i].iValue;\n                    int woy = getISOWeekOfYear(year, millis);\n                    if (woy == 1 && getISOWeekOfYear(year + 1, millis) > 1) {\n                        year++;\n                    } else if (woy >= 52 && getISOWeekOfYear(year - 1, millis) < 52) {\n                        year--;\n                    }\n                    if (year != savedFields[i].iValue) {\n                        savedFields[i] = new SavedField(savedFields[i].iField, year);\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..aa7b8ac6 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,18 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                    int year = savedFields[i].iValue;\n+                    int woy = getISOWeekOfYear(year, millis);\n+                    if (woy == 1 && getISOWeekOfYear(year + 1, millis) > 1) {\n+                        year++;\n+                    } else if (woy >= 52 && getISOWeekOfYear(year - 1, millis) < 52) {\n+                        year--;\n+                    }\n+                    if (year != savedFields[i].iValue) {\n+                        savedFields[i] = new SavedField(savedFields[i].iField, year);\n+                    }\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}