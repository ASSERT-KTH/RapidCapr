{
    "patch": "public static String decodeUrl(String url) {\n    boolean success = true;\n\n    StringBuilder decodedUrl = new StringBuilder();\n\n    for (int i = 0; i < url.length(); i++) {\n        char ch = url.charAt(i);\n        if (ch == '%') {\n            try {\n                decodedUrl.append((char) Integer.parseInt(url.substring(i + 1, i + 3), 16));\n                i += 2;\n            } catch (NumberFormatException e) {\n                success = false;\n                break;\n            }\n        } else if (ch == '+') {\n            decodedUrl.append(' ');\n        } else {\n            decodedUrl.append(ch);\n        }\n    }\n\n    if (!success) {\n        return null;\n    } else {\n        return decodedUrl.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}