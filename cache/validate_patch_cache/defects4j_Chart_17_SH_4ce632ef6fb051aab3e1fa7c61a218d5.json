{
    "patch": "    public Object clone() throws CloneNotSupportedException {\n        TimeSeries clone = (TimeSeries) super.clone();\n        // clone the underlying data\n        clone.data = (ArrayList) this.data.clone();\n        for (int i = 0; i < this.data.size(); i++) {\n            Object obj = this.data.get(i);\n            if (obj instanceof TimeSeriesDataItem) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) obj;\n                clone.data.set(i, item.clone());\n            } else {\n                clone.data.set(i, obj);\n            }\n        }\n        return clone;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..f8546df 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,21 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+    public Object clone() throws CloneNotSupportedException {\n+        TimeSeries clone = (TimeSeries) super.clone();\n+        // clone the underlying data\n+        clone.data = (ArrayList) this.data.clone();\n+        for (int i = 0; i < this.data.size(); i++) {\n+            Object obj = this.data.get(i);\n+            if (obj instanceof TimeSeriesDataItem) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) obj;\n+                clone.data.set(i, item.clone());\n+            } else {\n+                clone.data.set(i, obj);\n+            }\n+        }\n+        return clone;\n+    }\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}