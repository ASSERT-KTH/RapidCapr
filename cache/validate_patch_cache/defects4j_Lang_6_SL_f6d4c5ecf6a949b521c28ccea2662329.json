{
    "patch": "int codePoint = Character.codePointAt(input, pos);\nint consumed;\nif (codePoint >= surrogateStart && codePoint < surrogateEnd) {\n    consumed = translate(input, pos, out);\n} else {\n    char[] c = Character.toChars(codePoint);\n    out.write(c);\n    consumed = c.length;\n}\npos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..bc2fed3e 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,16 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+int codePoint = Character.codePointAt(input, pos);\n+int consumed;\n+if (codePoint >= surrogateStart && codePoint < surrogateEnd) {\n+    consumed = translate(input, pos, out);\n+} else {\n+    char[] c = Character.toChars(codePoint);\n+    out.write(c);\n+    consumed = c.length;\n+}\n+pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}