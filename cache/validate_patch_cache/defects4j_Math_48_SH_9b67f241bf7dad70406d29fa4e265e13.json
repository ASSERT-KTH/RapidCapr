{
    "patch": "else if (fx * f0 < 0.0) {\n    x1 = x;\n    f1 = fx;\n} else {\n    x0 = x;\n    f0 = fx;\n}\nif (getMaxEvaluations() <= 0) {\n    throw new ConvergenceException(LocalizedFormats.CONVERGENCE_FAILED,\n            getMaxEvaluations());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\nindex 8a667dad3..5c98a8551 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n@@ -186,6 +186,17 @@ public abstract class BaseSecantSolver\n                 case REGULA_FALSI:\n                     // Detect early that algorithm is stuck, instead of waiting\n                     // for the maximum number of iterations to be exceeded.\n+else if (fx * f0 < 0.0) {\n+    x1 = x;\n+    f1 = fx;\n+} else {\n+    x0 = x;\n+    f0 = fx;\n+}\n+if (getMaxEvaluations() <= 0) {\n+    throw new ConvergenceException(LocalizedFormats.CONVERGENCE_FAILED,\n+            getMaxEvaluations());\n+}\n                     break;\n                 default:\n                     // Should never happen.",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}