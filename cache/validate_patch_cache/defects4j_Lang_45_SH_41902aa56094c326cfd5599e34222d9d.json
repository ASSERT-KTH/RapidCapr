{
    "patch": "// If the string is null or empty, return empty string\nif (StringUtils.isEmpty(str)) {\n    return StringUtils.EMPTY;\n}\n\n// If lower value is less than 0, set to 0\nif (lower < 0) {\n    lower = 0;\n}\n\n// If the upper value is less than 1 or less than the lower value, set to the length of the string\nif (upper < 1 || upper < lower) {\n    upper = str.length();\n}\n\n// If upper value is greater than or equal to the length of the string, set to the length of the string\nif (upper >= str.length()) {\n    upper = str.length();\n}\n\n// Find the index of the first space in the substring between lower and upper indexes\nint index = StringUtils.indexOf(str.substring(lower, upper), ' ');\nif (index < 0) {\n    // If no space found, return substring from lower to upper with optional appendToEnd string\n    return StringUtils.substring(str, lower, upper) + StringUtils.defaultString(appendToEnd);\n} else {\n    // If space found, return substring from lower to space index with optional appendToEnd string\n    return StringUtils.substring(str, lower, lower + index) + StringUtils.defaultString(appendToEnd);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..2128b331 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,35 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// If the string is null or empty, return empty string\n+if (StringUtils.isEmpty(str)) {\n+    return StringUtils.EMPTY;\n+}\n+\n+// If lower value is less than 0, set to 0\n+if (lower < 0) {\n+    lower = 0;\n+}\n+\n+// If the upper value is less than 1 or less than the lower value, set to the length of the string\n+if (upper < 1 || upper < lower) {\n+    upper = str.length();\n+}\n+\n+// If upper value is greater than or equal to the length of the string, set to the length of the string\n+if (upper >= str.length()) {\n+    upper = str.length();\n+}\n+\n+// Find the index of the first space in the substring between lower and upper indexes\n+int index = StringUtils.indexOf(str.substring(lower, upper), ' ');\n+if (index < 0) {\n+    // If no space found, return substring from lower to upper with optional appendToEnd string\n+    return StringUtils.substring(str, lower, upper) + StringUtils.defaultString(appendToEnd);\n+} else {\n+    // If space found, return substring from lower to space index with optional appendToEnd string\n+    return StringUtils.substring(str, lower, lower + index) + StringUtils.defaultString(appendToEnd);\n+}\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable index is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}