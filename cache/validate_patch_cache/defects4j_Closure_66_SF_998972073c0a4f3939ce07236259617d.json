{
    "patch": "public double getTypedPercent(String[] js) {\n    int countTyped = 0;\n    int countTotal = 0;\n\n    for (String str : js) {\n        if (str.endsWith(\":string\")) {\n            countTyped++;\n        }\n        countTotal++;\n    }\n\n    return (countTyped * 100.0) / countTotal;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..16e256c2 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String[] js) {\n+    int countTyped = 0;\n+    int countTotal = 0;\n+\n+    for (String str : js) {\n+        if (str.endsWith(\":string\")) {\n+            countTyped++;\n+        }\n+        countTotal++;\n+    }\n+\n+    return (countTyped * 100.0) / countTotal;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}