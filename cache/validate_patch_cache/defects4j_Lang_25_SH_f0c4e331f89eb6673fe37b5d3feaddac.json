{
    "patch": "for (int i = 0; i < len; i++) {\n    char c = str.charAt(i);\n    if (c >= 256) {\n        // special 3-digit hex sequence\n        success = false;\n        if (buf != null) {\n            buf.append(unicodePrefix).append(toHex(c, true));\n        }\n    } else if (c == '\\n') {\n        // Must escape NL when it is preceded by a CR.\n        // This check is needed only for the old Latin-1 case.\n        success = false;\n        if (buf != null) {\n            buf.append(\"\\\\n\");\n        }\n    } else if (c == '\\r' || c == '\\\"' || c == '\\'' || c == '\\\\') {\n        success = false;\n        if (buf != null) {\n            buf.append('\\\\');\n            buf.append(c);\n        }\n    } else if (c < ' ' || (c >= 127 && c < 160)) {\n        success = false;\n        if (buf != null) {\n            if (c < 256) {\n                buf.append('\\\\');\n                buf.append(octal1(c));\n            } else {\n                buf.append(unicodePrefix).append(toHex(c, true));\n            }\n        }\n    } else {\n        if (buf != null) {\n            buf.append(c);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}