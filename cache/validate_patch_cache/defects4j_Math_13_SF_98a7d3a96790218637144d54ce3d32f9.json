{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    if (m.getRowDimension() > 1000) { // or any other threshold that makes sense\n        // perform QR Decomposition instead\n        QRDecomposition qr = new QRDecomposition(m);\n        RealMatrix q = qr.getQ();\n        RealMatrix r = qr.getR();\n        RealMatrix qSqrt = squareRoot(q);\n        RealMatrix rSqrt = squareRoot(r);\n        return qSqrt.multiply(rSqrt);\n    } else {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        return dec.getSquareRoot();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..b02b5b3c2 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,18 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    if (m.getRowDimension() > 1000) { // or any other threshold that makes sense\n+        // perform QR Decomposition instead\n+        QRDecomposition qr = new QRDecomposition(m);\n+        RealMatrix q = qr.getQ();\n+        RealMatrix r = qr.getR();\n+        RealMatrix qSqrt = squareRoot(q);\n+        RealMatrix rSqrt = squareRoot(r);\n+        return qSqrt.multiply(rSqrt);\n+    } else {\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        return dec.getSquareRoot();\n     }\n }\n+}",
    "result_reason": "org.apache.commons.math3.exception.MathUnsupportedOperationException: unsupported operation",
    "test_result": "FAIL"
}