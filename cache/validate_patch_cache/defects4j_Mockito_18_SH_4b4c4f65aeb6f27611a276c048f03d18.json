{
    "patch": "        public ReturnObject get(int index) {\n            if (index < 0 || index >= size()) {\n                return new ReturnObjectImpl(ErrorMessage.INDEX_OUT_OF_BOUNDS);\n            } else if (isEmpty()) {\n                return new ReturnObjectImpl(ErrorMessage.EMPTY_STRUCTURE);\n            }\n            Object value = array[index];\n            if (value == null) {\n                return new ReturnObjectImpl(ErrorMessage.INVALID_ARGUMENT);\n            }\n            return new ReturnObjectImpl(value);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}