{
    "patch": "if (value.isFunction() && isSingletonGetterMethod(value)) {\n  Node callNode = reference.getParent();\n  if (reference.getParent().isCall()) {\n    // Don't inline singleton getter methods calls as this confused class removing logic.\n    return false;\n  }\n}\n\nprivate boolean isSingletonGetterMethod(Node functionNode) {\n  Node nameNode = functionNode.getFirstChild();\n  Node bodyNode = functionNode.getLastChild();\n  // Check if the function has the form: function <name>() { return <expr>; }\n  return nameNode != null && nameNode.isName() && bodyNode != null\n      && bodyNode.isBlock() && bodyNode.hasOneChild()\n      && bodyNode.getFirstChild().isReturn();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..c4ff3487 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,22 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction() && isSingletonGetterMethod(value)) {\n+  Node callNode = reference.getParent();\n+  if (reference.getParent().isCall()) {\n+    // Don't inline singleton getter methods calls as this confused class removing logic.\n+    return false;\n+  }\n+}\n+\n+private boolean isSingletonGetterMethod(Node functionNode) {\n+  Node nameNode = functionNode.getFirstChild();\n+  Node bodyNode = functionNode.getLastChild();\n+  // Check if the function has the form: function <name>() { return <expr>; }\n+  return nameNode != null && nameNode.isName() && bodyNode != null\n+      && bodyNode.isBlock() && bodyNode.hasOneChild()\n+      && bodyNode.getFirstChild().isReturn();\n+}\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}