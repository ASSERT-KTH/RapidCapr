{
    "patch": "private static String optionEscape(String data, String option) {\n    boolean success = true;\n    try {\n        switch (option.charAt(0)) {\n            case 'd': // Numbers only\n                break;\n            case 'c': // Single byte ISO-8859-1 character\n                data = Iso88591.decode(data);\n                break;\n            case 'e': // Escape sequences\n            case 'h':\n                int len = option.charAt(1) - '0';\n                if (len < 0 || len > 9)\n                    // Invalid length\n                    break;\n                for (int i = 0; i < len; i++) {\n                    data = Iso88591.decode(data, option.substring(2*(i+1), 2*(i+2)));\n                    if (data == null) {\n                        // Error in decoding\n                        success = false;\n                        break;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    } catch (Exception e) {\n        success = false;\n    }\n    assertTrue(\"One or more errors detected\", success);\n    return data;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}