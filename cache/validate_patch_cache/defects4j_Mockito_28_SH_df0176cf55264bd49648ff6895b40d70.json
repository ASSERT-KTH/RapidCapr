{
    "patch": "            Set<Candidate> candidates = mockCandidateFilter.filterCandidates(mocks, field, fieldInstance);\n            Candidate bestMatchingCandidate = getBestMatchingCandidate(candidates, field.getType());\n            if (bestMatchingCandidate != null) {\n                bestMatchingCandidate.thenInject();\n                mocks.remove(bestMatchingCandidate.getMock());\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..f6a2335c4 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,15 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            Set<Candidate> candidates = mockCandidateFilter.filterCandidates(mocks, field, fieldInstance);\n+            Candidate bestMatchingCandidate = getBestMatchingCandidate(candidates, field.getType());\n+            if (bestMatchingCandidate != null) {\n+                bestMatchingCandidate.thenInject();\n+                mocks.remove(bestMatchingCandidate.getMock());\n+            }\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}