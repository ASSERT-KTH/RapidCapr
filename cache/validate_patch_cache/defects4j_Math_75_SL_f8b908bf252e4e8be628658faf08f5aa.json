{
    "patch": "    public double getPct(Object v) {\n        if (v instanceof Comparable) {\n            return getCumPct((Comparable<?>) v.toString());\n        } else {\n            try {\n                return getCumPct((Comparable<?>) Integer.parseInt(v.toString()));\n            } catch (NumberFormatException e) {\n                return 0.0;\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..9ccf3bbb5 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,17 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+    public double getPct(Object v) {\n+        if (v instanceof Comparable) {\n+            return getCumPct((Comparable<?>) v.toString());\n+        } else {\n+            try {\n+                return getCumPct((Comparable<?>) Integer.parseInt(v.toString()));\n+            } catch (NumberFormatException e) {\n+                return 0.0;\n+            }\n+        }\n+    }\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}