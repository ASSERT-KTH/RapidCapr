{
    "patch": "if (value.isFunction() && callNode.getFirstChild().matchesQualifiedName(\"goog.bind\") && callNode.getChildCount() == 3) {\n  // issue 668: Don't inline singleton getter methods\n  // calls as this confused class removing logic.\n  Node secondChild = callNode.getChildAtIndex(1);\n  if (secondChild.isFunction() && secondChild.isOnlyChild() && NodeUtil.isFunctionExpression(secondChild.getOnlyChild())) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..7588d21d 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,14 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction() && callNode.getFirstChild().matchesQualifiedName(\"goog.bind\") && callNode.getChildCount() == 3) {\n+  // issue 668: Don't inline singleton getter methods\n+  // calls as this confused class removing logic.\n+  Node secondChild = callNode.getChildAtIndex(1);\n+  if (secondChild.isFunction() && secondChild.isOnlyChild() && NodeUtil.isFunctionExpression(secondChild.getOnlyChild())) {\n+    return false;\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}