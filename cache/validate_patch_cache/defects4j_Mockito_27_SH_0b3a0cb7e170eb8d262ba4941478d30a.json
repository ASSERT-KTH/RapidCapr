{
    "patch": "        if (mock instanceof Factory) {\n            Callback[] callbacks = ((Factory) mock).getCallbacks();\n            int filterIndex = -1;\n            for (int i = 0; i < callbacks.length; i++) {\n                if (callbacks[i] instanceof MethodInterceptorFilter) {\n                    filterIndex = i;\n                    break;\n                }\n            }\n            if (filterIndex < 0) {\n                MethodInterceptorFilter newFilter = new MethodInterceptorFilter((MockHandlerInterface<T>)getMockHandler(mock), (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n                ((Factory) mock).setCallback(0, newFilter);\n            }\n        } else {\n            throw new RuntimeException(\"Mock object is not a Factory instance.\");\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..3ee3fd1ff 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,25 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        if (mock instanceof Factory) {\n+            Callback[] callbacks = ((Factory) mock).getCallbacks();\n+            int filterIndex = -1;\n+            for (int i = 0; i < callbacks.length; i++) {\n+                if (callbacks[i] instanceof MethodInterceptorFilter) {\n+                    filterIndex = i;\n+                    break;\n+                }\n+            }\n+            if (filterIndex < 0) {\n+                MethodInterceptorFilter newFilter = new MethodInterceptorFilter((MockHandlerInterface<T>)getMockHandler(mock), (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+                ((Factory) mock).setCallback(0, newFilter);\n+            }\n+        } else {\n+            throw new RuntimeException(\"Mock object is not a Factory instance.\");\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: incompatible types: MockHandlerInterface<T> cannot be converted to MockitoInvocationHandler",
    "test_result": "ERROR"
}