{
    "patch": "      Node assnNode = NodeUtil.getEnclosingAssignment(n);\n      if (assnNode != null && NodeUtil.isGetProp(assnNode.getFirstChild())) {\n        Node target = assnNode.getFirstChild().getLastChild();\n        if (target != null && \"prototype\".equals(target.getString())) {\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..893d8111 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,12 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node assnNode = NodeUtil.getEnclosingAssignment(n);\n+      if (assnNode != null && NodeUtil.isGetProp(assnNode.getFirstChild())) {\n+        Node target = assnNode.getFirstChild().getLastChild();\n+        if (target != null && \"prototype\".equals(target.getString())) {\n+          return false;\n+        }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}