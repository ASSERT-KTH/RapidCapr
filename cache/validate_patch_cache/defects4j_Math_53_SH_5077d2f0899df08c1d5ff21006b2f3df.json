{
    "patch": "public static Complex createComplex(double real, double imaginary) {\n    if (Double.isNaN(real) || Double.isNaN(imaginary)) {\n        return new Complex(Double.NaN, Double.NaN);\n    } else {\n        return new Complex(real, imaginary);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..2f60ac5b9 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,6 +150,13 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+public static Complex createComplex(double real, double imaginary) {\n+    if (Double.isNaN(real) || Double.isNaN(imaginary)) {\n+        return new Complex(Double.NaN, Double.NaN);\n+    } else {\n+        return new Complex(real, imaginary);\n+    }\n+}\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}