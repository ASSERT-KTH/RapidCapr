{
    "patch": "public ReturnValue values() {\n    Iterable<Integer> iter = Collections.emptyList();\n    ReturnValue ret = new ReturnValue();\n    for (Integer n : integers) {\n        if (n < 0) {\n            return new ReturnValue();\n        } else if (n == 0) {\n            ret.addReturnValue(Object.class, null);\n        } else {\n            iter = new ArrayList<Integer>(n);\n            for (int i = 1; i <= n; i++) {\n                iter.iterator().next();\n            }\n            ret.addReturnValue(Iterable.class, iter);\n        }\n    }\n    return ret;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}