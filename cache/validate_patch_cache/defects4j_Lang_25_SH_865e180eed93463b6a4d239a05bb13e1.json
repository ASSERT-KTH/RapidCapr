{
    "patch": "public static String unescape(String input) {\n    boolean sawBackslash = false;\n    int hexValue = 0;\n    int unicodeBytes = 0;\n    int state = 0;\n    for (int i = 0; i < input.length(); i++) {\n        char c = input.charAt(i);\n        if (state == 0) {\n            if (c == '\\\\') {\n                sawBackslash = true;\n            } else {\n                result.append(c);\n            }\n        } else if (state == 1) {\n            if (c == 'u') {\n                unicodeBytes = 2;\n            } else {\n                state = 2;\n                continue;\n            }\n        } else {\n            if (c == 'u') {\n                unicodeBytes = 2;\n                state = 1;\n            } else if (c >= '0' && c <= '9') {\n                hexValue = (hexValue << 4) | (c - '0');\n                if (++unicodeBytes == 4) {\n                    result.append((char) hexValue);\n                    unicodeBytes = 0;\n                    hexValue = 0;\n                    state = 0;\n                }\n            } else if (c >= 'a' && c <= 'f') {\n                hexValue = (hexValue << 4) | (c - 'a' + 10);\n                if (++unicodeBytes == 4) {\n                    result.append((char) hexValue);\n                    unicodeBytes = 0;\n                    hexValue = 0;\n                    state = 0;\n                }\n            } else if (c >= 'A' && c <= 'F') {\n                hexValue = (hexValue << 4) | (c - 'A' + 10);\n                if (++unicodeBytes == 4) {\n                    result.append((char) hexValue);\n                    unicodeBytes = 0;\n                    hexValue = 0;\n                    state = 0;\n                }\n            } else if (c == '\\\\') {\n                result.append(\"\\\\\");\n            } else {\n                sawBackslash = false;\n                result.append(\"\\\\\");\n                result.append(c);\n            }\n        }\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}