{
    "patch": "        // Make sure this assignment is not in a loop or a nested function.\n        for (BasicBlock block = ref.getBasicBlock();\n             block != null; block = block.getParent().orElse(null)) {\n          if (block.isLoop || block.isFunction) {\n            return false;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..7b295155 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,12 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        // Make sure this assignment is not in a loop or a nested function.\n+        for (BasicBlock block = ref.getBasicBlock();\n+             block != null; block = block.getParent().orElse(null)) {\n+          if (block.isLoop || block.isFunction) {\n+            return false;\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}