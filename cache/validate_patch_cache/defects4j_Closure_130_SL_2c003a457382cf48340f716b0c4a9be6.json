{
    "patch": "        // {@code name} meets condition (b).\n        // Find all the references in the enclosing scope chain and determine\n        // if this is a simple aliasing that can be inlined.\n        for (Ref ref : name.getRefs()) {\n          if (ref.type == Type.ALIASING_GET &&\n              ref.scope.getParent() != null &&\n              ref.scope.getParent().getName() != null) {\n            Name parent = ref.scope.getParent().getName();\n            if (parent.props != null &&\n                parent.props.size() == 1 &&\n                parent.props.get(0).getValue().equals(name)) {\n              if (inlineAliasIfPossible(ref, namespace)) {\n                name.removeRef(ref);\n                break;  // Proceed to the next name\n              }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..e4582327 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,21 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+        // {@code name} meets condition (b).\n+        // Find all the references in the enclosing scope chain and determine\n+        // if this is a simple aliasing that can be inlined.\n+        for (Ref ref : name.getRefs()) {\n+          if (ref.type == Type.ALIASING_GET &&\n+              ref.scope.getParent() != null &&\n+              ref.scope.getParent().getName() != null) {\n+            Name parent = ref.scope.getParent().getName();\n+            if (parent.props != null &&\n+                parent.props.size() == 1 &&\n+                parent.props.get(0).getValue().equals(name)) {\n+              if (inlineAliasIfPossible(ref, namespace)) {\n+                name.removeRef(ref);\n+                break;  // Proceed to the next name\n+              }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}