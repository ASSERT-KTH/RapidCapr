{
    "patch": "I apologize for the mistake again. Please find below the corrected version of the code that should pass all the tests.\n\n``` java\npublic double getTypedPercent(String text) {\n    double totalCount = 0;\n    double typedCount = 0;\n    text = text.replaceAll(\"\\\\s\", \"\");\n    Pattern p = Pattern.compile(\"\\\\((.*?)\\\\)\");\n    Matcher m = p.matcher(text);\n    while(m.find()) {\n        String group = m.group(1);\n        String[] values = group.split(\"/\");\n        double typed = Double.parseDouble(values[0]);\n        double total = Double.parseDouble(values[1]);\n        typedCount += typed;\n        totalCount += total;\n    }\n    if(totalCount == 0) {\n        return 0.0;\n    }\n    return (typedCount/totalCount)*100;\n}\n```",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a0eaa988 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,29 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+I apologize for the mistake again. Please find below the corrected version of the code that should pass all the tests.\n+\n+``` java\n+public double getTypedPercent(String text) {\n+    double totalCount = 0;\n+    double typedCount = 0;\n+    text = text.replaceAll(\"\\\\s\", \"\");\n+    Pattern p = Pattern.compile(\"\\\\((.*?)\\\\)\");\n+    Matcher m = p.matcher(text);\n+    while(m.find()) {\n+        String group = m.group(1);\n+        String[] values = group.split(\"/\");\n+        double typed = Double.parseDouble(values[0]);\n+        double total = Double.parseDouble(values[1]);\n+        typedCount += typed;\n+        totalCount += total;\n+    }\n+    if(totalCount == 0) {\n+        return 0.0;\n+    }\n+    return (typedCount/totalCount)*100;\n+}\n+```\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}