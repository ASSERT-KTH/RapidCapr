{
    "patch": "    public static ArrayList<Tuple> get_row(ArrayList<ArrayList<Integer>> lst, int x) {\n        ArrayList<Tuple> result = new ArrayList<Tuple>();\n\n        for (int i = 0; i < lst.size(); i += 1) {\n            for (int j = lst.get(i).size() - 1; j >= 0; j -= 1){\n                if (lst.get(i).get(j) == x){\n                    result.add(new Tuple(i, j));\n                }\n            }\n        }\n        return result;\n    }\n\n    public class Tuple {\n        public int index1;\n        public int index2;\n\n        Tuple(int index1, int index2) {\n            this.index1 = index1;\n            this.index2 = index2;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (!(o instanceof Tuple)) return false;\n\n            Tuple tuple = (Tuple) o;\n\n            if (index1 != tuple.index1) return false;\n            return index2 == tuple.index2;\n        }\n\n        @Override\n        public int hashCode() {\n            int result = index1;\n            result = 31 * result + index2;\n            return result;\n        }\n\n        @Override\n        public String toString() {\n            return \"Tuple{\" +\n                    \"index1=\" + index1 +\n                    \", index2=\" + index2 +\n                    '}';\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_ROW.java b/src/main/java/humaneval/buggy/GET_ROW.java\nindex 83f4169..1ba58fc 100644\n--- a/src/main/java/humaneval/buggy/GET_ROW.java\n+++ b/src/main/java/humaneval/buggy/GET_ROW.java\n@@ -23,9 +23,54 @@ public class GET_ROW {\n         ArrayList<Tuple> result = new ArrayList<Tuple>();\n \n         for (int i = 0; i < lst.size(); i += 1) {\n-            for (int j = lst.get(0).size() - 1; j >= 0; j -= 1){\n-                if (lst.get(i).get(i) == x){\n-                    result.add(new GET_ROW().new Tuple(i, i));\n+    public static ArrayList<Tuple> get_row(ArrayList<ArrayList<Integer>> lst, int x) {\n+        ArrayList<Tuple> result = new ArrayList<Tuple>();\n+\n+        for (int i = 0; i < lst.size(); i += 1) {\n+            for (int j = lst.get(i).size() - 1; j >= 0; j -= 1){\n+                if (lst.get(i).get(j) == x){\n+                    result.add(new Tuple(i, j));\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    public class Tuple {\n+        public int index1;\n+        public int index2;\n+\n+        Tuple(int index1, int index2) {\n+            this.index1 = index1;\n+            this.index2 = index2;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (!(o instanceof Tuple)) return false;\n+\n+            Tuple tuple = (Tuple) o;\n+\n+            if (index1 != tuple.index1) return false;\n+            return index2 == tuple.index2;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            int result = index1;\n+            result = 31 * result + index2;\n+            return result;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"Tuple{\" +\n+                    \"index1=\" + index1 +\n+                    \", index2=\" + index2 +\n+                    '}';\n+        }\n+    }\n                 }\n             }\n         }",
    "result_reason": " /tmp/humaneval-GET_ROW/src/main/java/humaneval/buggy/GET_ROW.java:[26,5] illegal start of expression",
    "test_result": "ERROR"
}