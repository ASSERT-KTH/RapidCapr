{
    "patch": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (!isAlpha(ch0) || !isAlpha(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else {\n            if (len >= 7) {\n                if (str.charAt(5) == '_' && (len == 7 || len == 8 || len == 9)) {\n                    if (isAlphaNumeric(str.charAt(3))) {\n                        if (isAlphaNumeric(str.charAt(4))) {\n                            if (len == 7) {\n                                return new Locale(str.substring(0, 2), str.substring(3, 5));\n                            } else if (len == 8 && isAlphaNumeric(str.charAt(6))) {\n                                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n                            } else if (len == 9 && str.charAt(6) == '_' && isAlphaNumeric(str.charAt(7)) && isAlphaNumeric(str.charAt(8))) {\n                                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(7, 9));\n                            }\n                        }\n                    }\n                }\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n\n    private static boolean isAlpha(char ch) {\n        return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n    }\n\n    private static boolean isNumeric(char ch) {\n        return ch >= '0' && ch <= '9';\n    }\n\n    private static boolean isAlphaNumeric(char ch) {\n        return isAlpha(ch) || isNumeric(ch);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..d166c9fb 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -96,36 +96,50 @@ public class LocaleUtils {\n             return null;\n         }\n         int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+        if (len < 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n         char ch0 = str.charAt(0);\n         char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        if (!isAlpha(ch0) || !isAlpha(ch1)) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n         if (len == 2) {\n             return new Locale(str, \"\");\n+        } else if (str.charAt(2) != '_') {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            if (len >= 7) {\n+                if (str.charAt(5) == '_' && (len == 7 || len == 8 || len == 9)) {\n+                    if (isAlphaNumeric(str.charAt(3))) {\n+                        if (isAlphaNumeric(str.charAt(4))) {\n+                            if (len == 7) {\n+                                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+                            } else if (len == 8 && isAlphaNumeric(str.charAt(6))) {\n+                                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                            } else if (len == 9 && str.charAt(6) == '_' && isAlphaNumeric(str.charAt(7)) && isAlphaNumeric(str.charAt(8))) {\n+                                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(7, 9));\n+                            }\n+                        }\n+                    }\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n             }\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n     }\n \n+    private static boolean isAlpha(char ch) {\n+        return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n+    }\n+\n+    private static boolean isNumeric(char ch) {\n+        return ch >= '0' && ch <= '9';\n+    }\n+\n+    private static boolean isAlphaNumeric(char ch) {\n+        return isAlpha(ch) || isNumeric(ch);\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}