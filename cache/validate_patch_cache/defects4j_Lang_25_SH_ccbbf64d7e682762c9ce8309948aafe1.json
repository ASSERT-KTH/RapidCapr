{
    "patch": "byte[] buf = txt.getBytes(\"ISO8859_1\");\nStringBuffer sbuf = new StringBuffer();\nint len = buf.length;\n    for (int i = 0; i < len; i++) {\n        int   b = buf[i] & 0xff;\n        switch (b) {\n          case '\\\\':\n            sbuf.append(\"\\\\\\\\\");\n            break;\n          case '\\t':\n            sbuf.append(\"\\\\t\");\n            break;\n          case '\\n':\n            sbuf.append(\"\\\\n\");\n            break;\n          case '\\r':\n            sbuf.append(\"\\\\r\");\n            break;\n          case '\\f':\n            sbuf.append(\"\\\\f\");\n            break;\n          case '\\'':\n            sbuf.append(\"\\\\'\");\n            break;\n          case '\"':\n            sbuf.append(\"\\\\\\\"\");\n            break;\n          default:\n            if (b >= ' ' && b < 0x7f) {\n                sbuf.append((char)b);\n            } else {\n                sbuf.append(\"\\\\u\");\n                String hex = Integer.toHexString(b);\n                int pad = 4 - hex.length();\n                for (int j = 0; j < pad; j++) {\n                    sbuf.append('0');\n                }\n                sbuf.append(hex);\n            }\n        }\n    }\n    return sbuf.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}