{
    "patch": "public class TestClass {\n\n    public void testPrintInOperatorInForLoop() {\n        String a = \"a\";\n        boolean c = false;\n        Object[] d = {\"a\", \"b\", \"c\"};\n\n        String expected = \"for(a = c ? 0 : (0 in d);;) foo()\";\n\n        for (int i = 0; i < 1; i++)\n            if (i == 0) {\n                expected = \"for(a=c?0:[0 in d];;)foo()\";\n            }\n\n        String result = \"for(a = \" + (c ? 0 : (\"'0' in \" + \"d\")) + \";;) foo()\";\n\n        assertEquals(expected, result);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..cc791784 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,25 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public class TestClass {\n+\n+    public void testPrintInOperatorInForLoop() {\n+        String a = \"a\";\n+        boolean c = false;\n+        Object[] d = {\"a\", \"b\", \"c\"};\n+\n+        String expected = \"for(a = c ? 0 : (0 in d);;) foo()\";\n+\n+        for (int i = 0; i < 1; i++)\n+            if (i == 0) {\n+                expected = \"for(a=c?0:[0 in d];;)foo()\";\n+            }\n+\n+        String result = \"for(a = \" + (c ? 0 : (\"'0' in \" + \"d\")) + \";;) foo()\";\n+\n+        assertEquals(expected, result);\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}