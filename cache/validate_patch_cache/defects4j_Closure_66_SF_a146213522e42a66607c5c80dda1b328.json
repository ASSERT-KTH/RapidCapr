{
    "patch": "public double getTypedPercent(JsonElement js) {\n   if (js.getAsJsonObject().get(\"type\").getAsString().equalsIgnoreCase(\"typed\")) {\n      double correct = js.getAsJsonObject().get(\"correct\").getAsDouble();\n      double total = js.getAsJsonObject().get(\"total\").getAsDouble();\n      return (correct/total)*100.0;\n   }\n   return 0.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..41e8170e 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JsonElement js) {\n+   if (js.getAsJsonObject().get(\"type\").getAsString().equalsIgnoreCase(\"typed\")) {\n+      double correct = js.getAsJsonObject().get(\"correct\").getAsDouble();\n+      double total = js.getAsJsonObject().get(\"total\").getAsDouble();\n+      return (correct/total)*100.0;\n+   }\n+   return 0.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}