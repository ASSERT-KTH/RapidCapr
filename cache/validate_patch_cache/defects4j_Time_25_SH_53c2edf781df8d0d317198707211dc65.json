{
    "patch": "            long prevOffset = getOffset(instantAdjusted - 1);\n            long nextOffset = getOffset(instantAdjusted + 1);\n            if (prevOffset == nextOffset) {\n                // we are inside a DST region, but we need to check if this region is the\n                // same as the estimate to avoid shifting the time to the wrong side of the boundary\n                if (offsetLocal != prevOffset) {\n                    return offsetLocal;\n                }\n            } else if (offsetLocal >= nextOffset) {\n                // we are in a DST gap and need to move the time forward\n                long newInstantLocal = nextTransition(instantAdjusted);\n                return getOffset(newInstantLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8db76c82 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            long prevOffset = getOffset(instantAdjusted - 1);\n+            long nextOffset = getOffset(instantAdjusted + 1);\n+            if (prevOffset == nextOffset) {\n+                // we are inside a DST region, but we need to check if this region is the\n+                // same as the estimate to avoid shifting the time to the wrong side of the boundary\n+                if (offsetLocal != prevOffset) {\n+                    return offsetLocal;\n+                }\n+            } else if (offsetLocal >= nextOffset) {\n+                // we are in a DST gap and need to move the time forward\n+                long newInstantLocal = nextTransition(instantAdjusted);\n+                return getOffset(newInstantLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}