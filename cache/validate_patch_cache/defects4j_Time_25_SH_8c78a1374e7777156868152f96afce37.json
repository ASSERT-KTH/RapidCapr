{
    "patch": "            if (offsetLocal != offsetAdjusted) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    // if we just return offsetAdjusted then the time is pushed\n                    // back before the transition, whereas it should be\n                    // on or after the transition\n                    if (offsetLocal < offsetAdjusted) {\n                        long prevAdjusted = previousTransition(instantAdjusted);\n                        if ((prevAdjusted - offsetLocal) < instantLocal) {\n                            return offsetLocal;\n                        }\n                    } else {\n                        if ((nextLocal - offsetLocal) < instantLocal) {\n                            return offsetLocal;\n                        }\n                    }\n                    if (offsetAdjusted == -3) { // Special Case for Moscow Time\n                        long nextDiff = nextTransition(nextLocal) - instantLocal;\n                        if (nextDiff == 1800000) {\n                            return offsetAdjusted; // we are in the \"impossible hour\"\n                        }\n                    }\n                }\n                return offsetAdjusted;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..217990fb 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,32 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal != offsetAdjusted) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    // if we just return offsetAdjusted then the time is pushed\n+                    // back before the transition, whereas it should be\n+                    // on or after the transition\n+                    if (offsetLocal < offsetAdjusted) {\n+                        long prevAdjusted = previousTransition(instantAdjusted);\n+                        if ((prevAdjusted - offsetLocal) < instantLocal) {\n+                            return offsetLocal;\n+                        }\n+                    } else {\n+                        if ((nextLocal - offsetLocal) < instantLocal) {\n+                            return offsetLocal;\n+                        }\n+                    }\n+                    if (offsetAdjusted == -3) { // Special Case for Moscow Time\n+                        long nextDiff = nextTransition(nextLocal) - instantLocal;\n+                        if (nextDiff == 1800000) {\n+                            return offsetAdjusted; // we are in the \"impossible hour\"\n+                        }\n+                    }\n+                }\n+                return offsetAdjusted;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}