{
    "patch": "            List<MockCandidate> candidates = new ArrayList<>();\n            for (Object mock : mocks) {\n                candidates.add(new MockCandidate(field.getType(), mock));\n            }\n            mockCandidateFilter.getBestCandidate(candidates).ifPresent(\n                    bestCandidate -> Injector.inject(fieldInstance, () -> bestCandidate.getMock())\n            );",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..130d5c9d1 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,16 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            List<MockCandidate> candidates = new ArrayList<>();\n+            for (Object mock : mocks) {\n+                candidates.add(new MockCandidate(field.getType(), mock));\n+            }\n+            mockCandidateFilter.getBestCandidate(candidates).ifPresent(\n+                    bestCandidate -> Injector.inject(fieldInstance, () -> bestCandidate.getMock())\n+            );\n         }\n     }\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}