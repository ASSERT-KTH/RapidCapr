{
    "patch": "Node grandparent = parent.getParent();\nif (grandparent != null) {\n  boolean isBind = grandparent.getType() == Token.CALL\n      && grandparent.hasTwoChildren()\n      && grandparent.getFirstChild().getLastChild().getString().equals(\"bind\");\n  if (isBind\n      || grandparent.getType() == Token.EXPR_RESULT\n      || (grandparent.getType() == Token.VAR\n          && grandparent.getParent() != null\n          && grandparent.getParent().getType() == Token.SCRIPT)) {\n    return false;\n  }\n  if (NodeUtil.isCall(grandparent)) {\n    Node callTarget = grandparent.getFirstChild();\n    if (callTarget.getType() == Token.GETPROP &&\n        (callTarget.getLastChild().getString().equals(\"call\") ||\n        callTarget.getLastChild().getString().equals(\"apply\"))) {\n      return false;\n    }\n    if (callTarget.getType() == Token.NAME &&\n        (callTarget.getString().equals(\"call\") ||\n        callTarget.getString().equals(\"apply\"))) {\n      return false;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..2643d594 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,32 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+Node grandparent = parent.getParent();\n+if (grandparent != null) {\n+  boolean isBind = grandparent.getType() == Token.CALL\n+      && grandparent.hasTwoChildren()\n+      && grandparent.getFirstChild().getLastChild().getString().equals(\"bind\");\n+  if (isBind\n+      || grandparent.getType() == Token.EXPR_RESULT\n+      || (grandparent.getType() == Token.VAR\n+          && grandparent.getParent() != null\n+          && grandparent.getParent().getType() == Token.SCRIPT)) {\n+    return false;\n+  }\n+  if (NodeUtil.isCall(grandparent)) {\n+    Node callTarget = grandparent.getFirstChild();\n+    if (callTarget.getType() == Token.GETPROP &&\n+        (callTarget.getLastChild().getString().equals(\"call\") ||\n+        callTarget.getLastChild().getString().equals(\"apply\"))) {\n+      return false;\n+    }\n+    if (callTarget.getType() == Token.NAME &&\n+        (callTarget.getString().equals(\"call\") ||\n+        callTarget.getString().equals(\"apply\"))) {\n+      return false;\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}