{
    "patch": "            long newValue = savedFields[i].getField().set(millis, savedFields[i].getValue(), resetFields);\n            long effectiveValue = savedFields[i].getField().get(millis);\n            if (effectiveValue != newValue) {\n                throw new IllegalFieldValueException(savedFields[i].getFieldType(), newValue, savedFields[i].getValues());\n            }\n            millis = newValue;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..72253ead 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            long newValue = savedFields[i].getField().set(millis, savedFields[i].getValue(), resetFields);\n+            long effectiveValue = savedFields[i].getField().get(millis);\n+            if (effectiveValue != newValue) {\n+                throw new IllegalFieldValueException(savedFields[i].getFieldType(), newValue, savedFields[i].getValues());\n+            }\n+            millis = newValue;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}