{
    "patch": "public static double getTypedPercent(String js) {\n    int count = 0;\n    for (int i = 0; i < js.length() - 1; i++) {\n        if (js.charAt(i) == '\\'' && js.charAt(i+1) == ':') {\n            i += 2;\n            if (js.charAt(i) == '\\'' && js.charAt(i+1) == 't' && js.charAt(i+2) == 'y' && js.charAt(i+3) == 'p' && js.charAt(i+4) == 'e' && js.charAt(i+5) == '\\'') {\n                i += 7;\n                if (js.charAt(i) == '\\'' && js.charAt(i+1) == 'v' && js.charAt(i+2) == 'a' && js.charAt(i+3) == 'r' && js.charAt(i+4) == 'c' && js.charAt(i+5) == 'h' && js.charAt(i+6) == 'a' && js.charAt(i+7) == 'r' && js.charAt(i+8) == '\\'') {\n                    count++;\n                } else if (js.charAt(i) == '\\'' && js.charAt(i+1) == 'b' && js.charAt(i+2) == 'o' && js.charAt(i+3) == 'o' && js.charAt(i+4) == 'l' && js.charAt(i+5) == 'e' && js.charAt(i+6) == 'a' && js.charAt(i+7) == 'n' && js.charAt(i+8) == '\\'') {\n                    count++;\n                } else if (js.charAt(i) == '\\'' && js.charAt(i+1) == 's' && js.charAt(i+2) == 't' && js.charAt(i+3) == 'r' && js.charAt(i+4) == 'i' && js.charAt(i+5) == 'n' && js.charAt(i+6) == 'g' && js.charAt(i+7) == '\\'') {\n                    count++;\n                }\n            }\n        }\n    }\n    return ((count / 3.0) * 100.0);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..7aeead26 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int count = 0;\n+    for (int i = 0; i < js.length() - 1; i++) {\n+        if (js.charAt(i) == '\\'' && js.charAt(i+1) == ':') {\n+            i += 2;\n+            if (js.charAt(i) == '\\'' && js.charAt(i+1) == 't' && js.charAt(i+2) == 'y' && js.charAt(i+3) == 'p' && js.charAt(i+4) == 'e' && js.charAt(i+5) == '\\'') {\n+                i += 7;\n+                if (js.charAt(i) == '\\'' && js.charAt(i+1) == 'v' && js.charAt(i+2) == 'a' && js.charAt(i+3) == 'r' && js.charAt(i+4) == 'c' && js.charAt(i+5) == 'h' && js.charAt(i+6) == 'a' && js.charAt(i+7) == 'r' && js.charAt(i+8) == '\\'') {\n+                    count++;\n+                } else if (js.charAt(i) == '\\'' && js.charAt(i+1) == 'b' && js.charAt(i+2) == 'o' && js.charAt(i+3) == 'o' && js.charAt(i+4) == 'l' && js.charAt(i+5) == 'e' && js.charAt(i+6) == 'a' && js.charAt(i+7) == 'n' && js.charAt(i+8) == '\\'') {\n+                    count++;\n+                } else if (js.charAt(i) == '\\'' && js.charAt(i+1) == 's' && js.charAt(i+2) == 't' && js.charAt(i+3) == 'r' && js.charAt(i+4) == 'i' && js.charAt(i+5) == 'n' && js.charAt(i+6) == 'g' && js.charAt(i+7) == '\\'') {\n+                    count++;\n+                }\n+            }\n+        }\n+    }\n+    return ((count / 3.0) * 100.0);\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}