{
    "patch": "char ch2 = str.charAt(2);\nchar ch3 = str.charAt(3);\nchar ch4 = ' ';\nif (len > 4) {\n    ch4 = str.charAt(4);\n}\nif (ch2 != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nif (len == 5) {\n    // This is the absolute minimum length locale string\n    // Note that the country code is allowed to be non-empty\n    // per the extension mechanism (see BCP47).\n    if (ch3 < 'A' || ch3 > 'Z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5));\n}\nif (ch3 != '_' || !Character.isUpperCase(ch4)) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nif (len == 6) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nchar ch5 = str.charAt(5);\nif (ch5 != '_' || len == 7) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nif (str.charAt(6) < 'A' || str.charAt(6) > 'Z') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\nreturn new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..769df808 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,38 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+char ch2 = str.charAt(2);\n+char ch3 = str.charAt(3);\n+char ch4 = ' ';\n+if (len > 4) {\n+    ch4 = str.charAt(4);\n+}\n+if (ch2 != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+if (len == 5) {\n+    // This is the absolute minimum length locale string\n+    // Note that the country code is allowed to be non-empty\n+    // per the extension mechanism (see BCP47).\n+    if (ch3 < 'A' || ch3 > 'Z') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    return new Locale(str.substring(0, 2), str.substring(3, 5));\n+}\n+if (ch3 != '_' || !Character.isUpperCase(ch4)) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+if (len == 6) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+char ch5 = str.charAt(5);\n+if (ch5 != '_' || len == 7) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+if (str.charAt(6) < 'A' || str.charAt(6) > 'Z') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: variable ch3 is already defined in method toLocale(String)",
    "test_result": "ERROR"
}