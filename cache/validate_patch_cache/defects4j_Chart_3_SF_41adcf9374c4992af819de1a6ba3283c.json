{
    "patch": "public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n    if (start < 0) {\n        throw new IllegalArgumentException(\"Requires start >= 0.\");\n    }\n    if (end < start) {\n        throw new IllegalArgumentException(\"Requires start <= end.\");\n    }\n\n    TimeSeries copy = (TimeSeries) super.clone();\n    copy.data = new java.util.ArrayList<>();\n\n    if (this.data.size() > 0) {\n\n        // add a new data item for the starting point, if possible\n        if (start <= this.getItemCount() - 1) {\n            TimeSeriesDataItem startItem = (TimeSeriesDataItem) getItem(start).clone();\n            if (startItem != null) {\n                copy.add(startItem);\n            }\n        }\n        \n        // add intermediate data items\n        for (int index = start + 1; index < end; index++) {\n            if (index >= this.getItemCount()) {\n                break;\n            }\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index).clone();\n            if (item != null) {\n                copy.add(item);\n            }\n        }\n\n        // add a new data item for the end point, if possible\n        if (end <= this.getItemCount() - 1) {\n            TimeSeriesDataItem endItem = (TimeSeriesDataItem) getItem(end).clone();\n            if (endItem != null) {\n                copy.add(endItem);\n            }\n        }\n    }\n\n    return copy;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..a138948 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,49 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n+    if (start < 0) {\n+        throw new IllegalArgumentException(\"Requires start >= 0.\");\n+    }\n+    if (end < start) {\n+        throw new IllegalArgumentException(\"Requires start <= end.\");\n+    }\n+\n+    TimeSeries copy = (TimeSeries) super.clone();\n+    copy.data = new java.util.ArrayList<>();\n+\n+    if (this.data.size() > 0) {\n+\n+        // add a new data item for the starting point, if possible\n+        if (start <= this.getItemCount() - 1) {\n+            TimeSeriesDataItem startItem = (TimeSeriesDataItem) getItem(start).clone();\n+            if (startItem != null) {\n+                copy.add(startItem);\n+            }\n+        }\n+        \n+        // add intermediate data items\n+        for (int index = start + 1; index < end; index++) {\n+            if (index >= this.getItemCount()) {\n+                break;\n+            }\n+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index).clone();\n+            if (item != null) {\n+                copy.add(item);\n+            }\n+        }\n+\n+        // add a new data item for the end point, if possible\n+        if (end <= this.getItemCount() - 1) {\n+            TimeSeriesDataItem endItem = (TimeSeriesDataItem) getItem(end).clone();\n+            if (endItem != null) {\n+                copy.add(endItem);\n+            }\n+        }\n+    }\n+\n+    return copy;\n+}\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}