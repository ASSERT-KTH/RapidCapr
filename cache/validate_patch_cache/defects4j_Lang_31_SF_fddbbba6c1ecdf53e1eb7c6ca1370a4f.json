{
    "patch": "public static boolean containsAny(final CharSequence str, final char[] searchChars) {\n     if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        final int strSize = str.length();\n        final int searchSize = searchChars.length;\n        final int csLength = strSize + searchSize;\n        final char[] chars = new char[csLength];\n        TextUtils.getChars(str, 0, strSize, chars, 0);\n        System.arraycopy(searchChars, 0, chars, strSize, searchSize);\n        final boolean[] containsFlags = new boolean[CharUtils.RANGE];\n        for (int i = 0; i < strSize; i++) {\n            final int ch = chars[i];\n            if (ch < CharUtils.RANGE) {\n                containsFlags[ch] = true;\n            }\n        }\n        for (int i = strSize; i < csLength; i++) {\n            final int ch = chars[i];\n            if (ch < CharUtils.RANGE && containsFlags[ch]) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..68ea72a0 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence str, final char[] searchChars) {\n+     if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+            return false;\n+        }\n+        final int strSize = str.length();\n+        final int searchSize = searchChars.length;\n+        final int csLength = strSize + searchSize;\n+        final char[] chars = new char[csLength];\n+        TextUtils.getChars(str, 0, strSize, chars, 0);\n+        System.arraycopy(searchChars, 0, chars, strSize, searchSize);\n+        final boolean[] containsFlags = new boolean[CharUtils.RANGE];\n+        for (int i = 0; i < strSize; i++) {\n+            final int ch = chars[i];\n+            if (ch < CharUtils.RANGE) {\n+                containsFlags[ch] = true;\n+            }\n+        }\n+        for (int i = strSize; i < csLength; i++) {\n+            final int ch = chars[i];\n+            if (ch < CharUtils.RANGE && containsFlags[ch]) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}