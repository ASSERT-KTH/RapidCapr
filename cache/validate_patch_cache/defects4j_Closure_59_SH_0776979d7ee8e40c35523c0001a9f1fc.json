{
    "patch": "    if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n      options.setWarningLevel(\n          DiagnosticGroups.GLOBAL_THIS,\n          options.checkGlobalThisLevel);\n      if (!composedGuards.enables(DiagnosticGroups.GLOBAL_THIS)) {\n          composedGuards.addGuard(new DiagnosticGroupWarningsGuard(\n                  DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING));\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..82669067 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,15 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+    if (options.checkGlobalThisLevel != CheckLevel.OFF) {\n+      options.setWarningLevel(\n+          DiagnosticGroups.GLOBAL_THIS,\n+          options.checkGlobalThisLevel);\n+      if (!composedGuards.enables(DiagnosticGroups.GLOBAL_THIS)) {\n+          composedGuards.addGuard(new DiagnosticGroupWarningsGuard(\n+                  DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING));\n+      }\n+    }\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}