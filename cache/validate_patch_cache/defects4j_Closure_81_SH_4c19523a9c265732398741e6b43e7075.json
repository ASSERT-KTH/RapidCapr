{
    "patch": "Name name = functionNode.getFunctionName();\n// Define the local variable isUnnamedFunction to check if the function is unnamed.\nboolean isUnnamedFunction = (name == null) || name.length() == 0;\nif (isUnnamedFunction) {\n  name = new Name();\n  // If the function is unnamed, set the name to an empty string and have the left\n  // paren on the same line as the function declaration.\n  name.setIdentifier(\"\");\n  name.setLineno(functionNode.getLineno());\n  int lpColumn = functionNode.getFunctionKeywordPosition() +\n      functionNode.getFunctionName().length();\n  name.setCharno(position2charno(lpColumn));\n  // If the function is not unnamed, set the line number and character number of the name\n  // to where the function is defined.\n} else {\n  name.setLineno(functionNode.getLineno());\n  name.setCharno(position2charno(functionNode.getFunctionKeywordPosition()));\n}\nNode node = newNode(Token.FUNCTION);\nNode newName = transform(name);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..b591764c 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,26 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+// Define the local variable isUnnamedFunction to check if the function is unnamed.\n+boolean isUnnamedFunction = (name == null) || name.length() == 0;\n+if (isUnnamedFunction) {\n+  name = new Name();\n+  // If the function is unnamed, set the name to an empty string and have the left\n+  // paren on the same line as the function declaration.\n+  name.setIdentifier(\"\");\n+  name.setLineno(functionNode.getLineno());\n+  int lpColumn = functionNode.getFunctionKeywordPosition() +\n+      functionNode.getFunctionName().length();\n+  name.setCharno(position2charno(lpColumn));\n+  // If the function is not unnamed, set the line number and character number of the name\n+  // to where the function is defined.\n+} else {\n+  name.setLineno(functionNode.getLineno());\n+  name.setCharno(position2charno(functionNode.getFunctionKeywordPosition()));\n+}\n+Node node = newNode(Token.FUNCTION);\n+Node newName = transform(name);\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}