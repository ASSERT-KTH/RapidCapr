{
    "patch": "ReturnType returnType = values.getReturnType();\nif (returnType.equals(ReturnType.STRING)) {\n    returnValue = values.returnValueFor(String.class);\n} else if (returnType.equals(ReturnType.INTEGER)) {\n    returnValue = values.returnValueFor(Integer.class);\n} else if (returnType.equals(ReturnType.DOUBLE)) {\n    returnValue = values.returnValueFor(Double.class);\n} else if (returnType.equals(ReturnType.BOOLEAN)) {\n    returnValue = values.returnValueFor(Boolean.class);\n} else if (returnType.equals(ReturnType.LIST)) {\n    returnValue = values.returnValueFor(List.class);\n} else if (returnType.equals(ReturnType.SET)) {\n    returnValue = values.returnValueFor(Set.class);\n} else {\n    returnValue = Collections.emptySet();\n}\nreturn returnValue;",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}