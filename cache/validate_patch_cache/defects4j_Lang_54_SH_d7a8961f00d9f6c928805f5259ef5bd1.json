{
    "patch": "            // Fixed the issue of parsing locale with empty country (\"fr__POSIX\").\n            if (len == 7 && str.charAt(5) == '_' && ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') {\n                return new Locale(str.substring(0, 2), \"\", str.substring(3));\n            } else if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else if (len == 2) {\n                return new Locale(str, \"\");\n            } else if (str.charAt(2) == '_') {\n                return new Locale(str.substring(0, 2), \"\", str.substring(3));\n            } else {\n                return new Locale(str);\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..eab0f185 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,18 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            // Fixed the issue of parsing locale with empty country (\"fr__POSIX\").\n+            if (len == 7 && str.charAt(5) == '_' && ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') {\n+                return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+            } else if (len == 5) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            } else if (len == 2) {\n+                return new Locale(str, \"\");\n+            } else if (str.charAt(2) == '_') {\n+                return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+            } else {\n+                return new Locale(str);\n+            }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}