{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    // perform Cholesky decomposition\n    CholeskyDecomposition cholesky = new CholeskyDecomposition(m);\n    RealMatrix l = cholesky.getL();\n\n    // construct diagonal matrix from square roots of diagonal elements of L\n    int n = m.getRowDimension();\n    RealMatrix d = MatrixUtils.createRealIdentityMatrix(n);\n    for (int i = 0; i < n; i++) {\n        double sqrt = FastMath.sqrt(l.getEntry(i, i));\n        d.setEntry(i, i, sqrt);\n    }\n\n    // return L * D\n    return l.multiply(d);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..77fee9a12 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,20 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    // perform Cholesky decomposition\n+    CholeskyDecomposition cholesky = new CholeskyDecomposition(m);\n+    RealMatrix l = cholesky.getL();\n+\n+    // construct diagonal matrix from square roots of diagonal elements of L\n+    int n = m.getRowDimension();\n+    RealMatrix d = MatrixUtils.createRealIdentityMatrix(n);\n+    for (int i = 0; i < n; i++) {\n+        double sqrt = FastMath.sqrt(l.getEntry(i, i));\n+        d.setEntry(i, i, sqrt);\n     }\n+\n+    // return L * D\n+    return l.multiply(d);\n+}\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}