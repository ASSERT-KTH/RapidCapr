{
    "patch": "    // Strip unreferenced args off the end of the function declaration.\n    Node function = fnScope.getRootNode();\n    Node argList = getFunctionArgList(function);\n    Preconditions.checkState(argList != null, \"function is missing an argument list\");\n\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n    \n    int numArgs = argList.getChildCount();\n    for (int i = numArgs - 1; i >= 0; i--) {\n      Var var = fnScope.getVar(argList.getChildAtIndex(i).getString());\n      if (!referenced.contains(var)) {\n        argList.removeChildAt(i);\n        compiler.reportCodeChange();\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..40753fb2 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,24 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Strip unreferenced args off the end of the function declaration.\n+    Node function = fnScope.getRootNode();\n+    Node argList = getFunctionArgList(function);\n+    Preconditions.checkState(argList != null, \"function is missing an argument list\");\n+\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+    \n+    int numArgs = argList.getChildCount();\n+    for (int i = numArgs - 1; i >= 0; i--) {\n+      Var var = fnScope.getVar(argList.getChildAtIndex(i).getString());\n+      if (!referenced.contains(var)) {\n+        argList.removeChildAt(i);\n+        compiler.reportCodeChange();\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}