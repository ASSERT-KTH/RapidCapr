{
    "patch": "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (c == ' ') {\n                result.append('+');\n            } else if (c == '!') {\n                result.append(\"%21\");\n            } else if (c == '*') {\n                result.append(\"%2A\");\n            } else if (c == '\\'') {\n                result.append(\"%27\");\n            } else if (c == '(') {\n                result.append(\"%28\");\n            } else if (c == ')') {\n                result.append(\"%29\");\n            } else if (c == ';') {\n                result.append(\"%3B\");\n            } else if (c == ':') {\n                result.append(\"%3A\");\n            } else if (c == '@') {\n                result.append(\"%40\");\n            } else if (c == '&') {\n                result.append(\"%26\");\n            } else if (c == '=') { \n                result.append(\"%3D\");\n            } else if (c == '+') { \n                result.append(\"%2B\");\n            } else if (c == '$') { \n                result.append(\"%24\");\n            } else if (c == ',') {\n                result.append(\"%2C\");\n            } else if (c == '/') {\n                result.append(\"%2F\");\n            } else if (c == '?') {\n                result.append(\"%3F\");\n            } else if (c == '%') {\n                result.append(\"%25\");\n            } else if (c == '#') {\n                result.append(\"%23\");\n            } else if (c == '[') {\n                result.append(\"%5B\");\n            } else if (c == ']') {\n                result.append(\"%5D\");\n            } else if (('0' <= c && c <= '9') ||\n                       ('a' <= c && c <= 'z') ||\n                       ('A' <= c && c <= 'Z')) {\n                result.append(c);\n            } else {\n                result.append(String.format(\"%%%02X\", (int) c));\n            }\n        }\n        return result.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}