{
    "patch": "      if (n.isFromExterns()) {\n        // Don't traverse functions that are declared in externs\n        return false;\n      }\n\n      Node funNameNode = NodeUtil.getFunctionNameNode(n);\n      if (funNameNode != null && NodeUtil.isFunctionExpression(n)) {\n        // Don't traverse function expressions with explicit names\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..1737d664 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,16 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (n.isFromExterns()) {\n+        // Don't traverse functions that are declared in externs\n+        return false;\n+      }\n+\n+      Node funNameNode = NodeUtil.getFunctionNameNode(n);\n+      if (funNameNode != null && NodeUtil.isFunctionExpression(n)) {\n+        // Don't traverse function expressions with explicit names\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}