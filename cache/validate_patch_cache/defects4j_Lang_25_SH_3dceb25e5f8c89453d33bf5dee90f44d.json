{
    "patch": "for (int i = 0; i < input.length(); ++i) {\n    char ch = input.charAt(i);\n    if (ch <= 127) {\n        output.append(ch);\n    } else {\n        switch (ch) {\n            case '\\u20AC':\n                output.append(\"&euro;\");\n                break;\n            case '\\u00A3':\n                output.append(\"&pound;\");\n                break;\n            case '\\u00A5':\n                output.append(\"&yen;\");\n                break;\n            case '\\u2014':\n                output.append(\"&mdash;\");\n                break;\n            case '\\u201C':\n            case '\\u201D':\n                output.append(\"&quot;\");\n                break;\n            default:\n                output.append(\"&#\").append((int) ch).append(\";\");\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}