{
    "patch": "\npublic class StringUtils {\n\t\n\tpublic static boolean containsAny(final CharSequence cs, final char[] searchChars) {\n\t    final int csLength = cs.length();\n\t    final int searchLength = searchChars.length;\n\t    final int csLast = csLength - 1;\n\t    final int searchLast = searchLength - 1;\n\t    for (int i = 0; i < csLength; i++) {\n\t        final char ch = cs.charAt(i);\n\t        for (int j = 0; j < searchLength; j++) {\n\t            if (searchChars[j] == ch) {\n\t                if (Character.isHighSurrogate(ch)) {\n\t                    if (j == searchLast) {\n\t                        // missing low surrogate, fine, like String.indexOf(String)\n\t                        return true;\n\t                    }\n\t                    if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {\n\t                        return true;\n\t                    }\n\t                } else {\n\t                    // ch is in the Basic Multilingual Plane\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return false;\n\t}\n\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..8091c703 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,37 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+\n+public class StringUtils {\n+\t\n+\tpublic static boolean containsAny(final CharSequence cs, final char[] searchChars) {\n+\t    final int csLength = cs.length();\n+\t    final int searchLength = searchChars.length;\n+\t    final int csLast = csLength - 1;\n+\t    final int searchLast = searchLength - 1;\n+\t    for (int i = 0; i < csLength; i++) {\n+\t        final char ch = cs.charAt(i);\n+\t        for (int j = 0; j < searchLength; j++) {\n+\t            if (searchChars[j] == ch) {\n+\t                if (Character.isHighSurrogate(ch)) {\n+\t                    if (j == searchLast) {\n+\t                        // missing low surrogate, fine, like String.indexOf(String)\n+\t                        return true;\n+\t                    }\n+\t                    if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {\n+\t                        return true;\n+\t                    }\n+\t                } else {\n+\t                    // ch is in the Basic Multilingual Plane\n+\t                    return true;\n+\t                }\n+\t            }\n+\t        }\n+\t    }\n+\t    return false;\n+\t}\n+\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}