{
    "patch": "  \n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n+     Set<String> unreferencedArgs = new HashSet<>();\n+     for (Var var : referenced) {\n+       unreferencedArgs.add(var.getName());\n+     }\n      Node lastArg;\n      while ((lastArg = argList.getLastChild()) != null) {\n-       Var var = fnScope.getVar(lastArg.getString());\n-       if (!referenced.contains(var)) {\n+       String argName = lastArg.getString();\n+       if (!unreferencedArgs.contains(argName)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..07409e90 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,22 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+  \n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n++     Set<String> unreferencedArgs = new HashSet<>();\n++     for (Var var : referenced) {\n++       unreferencedArgs.add(var.getName());\n++     }\n+      Node lastArg;\n+      while ((lastArg = argList.getLastChild()) != null) {\n+-       Var var = fnScope.getVar(lastArg.getString());\n+-       if (!referenced.contains(var)) {\n++       String argName = lastArg.getString();\n++       if (!unreferencedArgs.contains(argName)) {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}