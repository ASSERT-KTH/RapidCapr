{
    "patch": "public static long safeMultiply(long val1, int val2) {\n    switch (val2) {\n        case -1:\n            return -val1;\n        case 0:\n            return 0L;\n        case 1:\n            return val1;\n    }\n\n    if (val2 > 0) {\n        if (val1 > Long.MAX_VALUE / val2) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n    } else {\n        if (val1 < Long.MIN_VALUE / val2) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n    }\n\n    return val1 * val2;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..dcd7b30f 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -135,6 +135,28 @@ public class FieldUtils {\n     public static long safeMultiply(long val1, int val2) {\n         switch (val2) {\n             case -1:\n+public static long safeMultiply(long val1, int val2) {\n+    switch (val2) {\n+        case -1:\n+            return -val1;\n+        case 0:\n+            return 0L;\n+        case 1:\n+            return val1;\n+    }\n+\n+    if (val2 > 0) {\n+        if (val1 > Long.MAX_VALUE / val2) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+    } else {\n+        if (val1 < Long.MIN_VALUE / val2) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+    }\n+\n+    return val1 * val2;\n+}\n                 return -val1;\n             case 0:\n                 return 0L;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}