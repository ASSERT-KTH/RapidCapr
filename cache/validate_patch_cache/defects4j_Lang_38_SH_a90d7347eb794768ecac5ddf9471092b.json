{
    "patch": "        if (mTimeZoneForced) {\n            TimeZone defaultTimeZone = TimeZone.getDefault();\n            TimeZone.setDefault(mTimeZone);\n            buf = super.format(calendar, buf);\n            TimeZone.setDefault(defaultTimeZone);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..0a392a40 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,12 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        if (mTimeZoneForced) {\n+            TimeZone defaultTimeZone = TimeZone.getDefault();\n+            TimeZone.setDefault(mTimeZone);\n+            buf = super.format(calendar, buf);\n+            TimeZone.setDefault(defaultTimeZone);\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: no suitable method found for format(Calendar,StringBuffer)",
    "test_result": "ERROR"
}