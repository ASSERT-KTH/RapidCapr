{
    "patch": "if (cfa != null) {\n  Node nextNode = finallyNode.getNext();\n  while (nextNode != null && nextNode.isFunction()) {\n    nextNode = nextNode.getNext();\n  }\n  if (nextNode != null) {\n    cfa.createEdge(fromNode, Branch.UNCOND, nextNode);\n  } else if (finallyNode.getParent() != null &&\n             finallyNode.getParent().getType() == Token.BLOCK) {\n    cfa.createEdge(fromNode, Branch.UNCOND,\n                   computeFollowNode(fromNode, finallyNode.getParent(), cfa));\n  } else if (finallyNode.getParent() != null) {\n    cfa.createEdge(fromNode, Branch.UNCOND, finallyNode.getParent());\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..555a6637 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,21 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (cfa != null) {\n+  Node nextNode = finallyNode.getNext();\n+  while (nextNode != null && nextNode.isFunction()) {\n+    nextNode = nextNode.getNext();\n+  }\n+  if (nextNode != null) {\n+    cfa.createEdge(fromNode, Branch.UNCOND, nextNode);\n+  } else if (finallyNode.getParent() != null &&\n+             finallyNode.getParent().getType() == Token.BLOCK) {\n+    cfa.createEdge(fromNode, Branch.UNCOND,\n+                   computeFollowNode(fromNode, finallyNode.getParent(), cfa));\n+  } else if (finallyNode.getParent() != null) {\n+    cfa.createEdge(fromNode, Branch.UNCOND, finallyNode.getParent());\n+  }\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}