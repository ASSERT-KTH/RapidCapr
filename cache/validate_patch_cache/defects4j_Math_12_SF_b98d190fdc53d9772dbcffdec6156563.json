{
    "patch": "import java.util.Arrays;\n\npublic class Distribution {\n    public double[] smooth(int[] data) {\n        double[] result = new double[data.length];\n\n        double[] kernel = {0.25, 0.5, 0.25};\n        int kernelRadius = kernel.length / 2;\n\n        double[] smoothedData = new double[data.length];\n\n        for (int i = 0; i < data.length; i++) {\n            for (int j = 0; j < kernel.length; j++) {\n                int index = i + j - kernelRadius;\n                if (index >= 0 && index < data.length) {\n                    smoothedData[i] += data[index] * kernel[j];\n                }\n            }\n        }\n\n        double maxSmoothedData = Arrays.stream(smoothedData).max().orElse(0);\n\n        for (int i = 0; i < result.length; i++) {\n            result[i] = maxSmoothedData - smoothedData[i];\n        }\n\n        return result;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}