{
    "patch": "        this(duration, null, PeriodType.standard());\n        setValues();\n    }\n    \n    private void setValues() {\n        int values[] = getPeriodType().getIndexedFieldValues(this, DurationFieldType.weeks());\n        if (values == null || values.length < 1) {\n            iWeeks = 0;\n        } else {\n            iWeeks = values[0];\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..0540b84f 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        this(duration, null, PeriodType.standard());\n+        setValues();\n+    }\n+    \n+    private void setValues() {\n+        int values[] = getPeriodType().getIndexedFieldValues(this, DurationFieldType.weeks());\n+        if (values == null || values.length < 1) {\n+            iWeeks = 0;\n+        } else {\n+            iWeeks = values[0];\n+        }\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}