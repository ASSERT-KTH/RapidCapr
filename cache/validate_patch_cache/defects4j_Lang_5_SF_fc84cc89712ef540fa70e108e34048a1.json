{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int index1 = str.indexOf('_');\n    if (index1 == -1) {\n        if (len == 2) {\n            return new Locale(str);\n        } else if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3));\n        } else if (len == 7) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    int index2 = str.indexOf('_', index1 + 1);\n    if (index2 == -1) {\n        // One underscore\n        if (len != index1 + 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), \"\", str.substring(3));\n    }\n    int index3 = str.indexOf('_', index2 + 1);\n    if (index3 == -1) {\n        if (len != index2 + 3 && len != index2 + 4) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == index2 + 4) {\n            if (!(str.charAt(index2 + 1) == 'H' && str.charAt(index2 + 2) == 'K')) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1));\n    }\n    if (len != index3 + 1 && len != index3 + 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1, index3), str.substring(index3 + 1));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..b3215f84 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,51 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n+public static Locale toLocale(final String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int index1 = str.indexOf('_');\n+    if (index1 == -1) {\n+        if (len == 2) {\n+            return new Locale(str);\n+        } else if (len == 5) {\n+            return new Locale(str.substring(0, 2), str.substring(3));\n+        } else if (len == 7) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final int len = str.length();\n-        if (len < 2) {\n+    }\n+    int index2 = str.indexOf('_', index1 + 1);\n+    if (index2 == -1) {\n+        // One underscore\n+        if (len != index1 + 3) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n+        return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+    }\n+    int index3 = str.indexOf('_', index2 + 1);\n+    if (index3 == -1) {\n+        if (len != index2 + 3 && len != index2 + 4) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == index2 + 4) {\n+            if (!(str.charAt(index2 + 1) == 'H' && str.charAt(index2 + 2) == 'K')) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n+        return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1));\n+    }\n+    if (len != index3 + 1 && len != index3 + 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n     }\n+    return new Locale(str.substring(0, 2), str.substring(3, index2), str.substring(index2 + 1, index3), str.substring(index3 + 1));\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "error: no suitable constructor found for Locale(String,String,String,String)",
    "test_result": "ERROR"
}