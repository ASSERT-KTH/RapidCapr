{
    "patch": "    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n        // The parameters object literal setters can not be removed.\n        return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n\n    // Strip unreferenced args off the end of the function declaration.\n    boolean hasUnusedArgs = false;\n    Node child = argList.getFirstChild();\n    while (child != null) {\n        Var var = fnScope.getVar(child.getString());\n        if (!referenced.contains(var)) {\n            argList.removeChild(child);\n            compiler.reportCodeChange();\n            hasUnusedArgs = true;\n        } else {\n            child = child.getNext();\n        }\n    }\n\n    if (modifyCallers && hasUnusedArgs) {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2b4021b4 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,34 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+        // The parameters object literal setters can not be removed.\n+        return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+\n+    // Strip unreferenced args off the end of the function declaration.\n+    boolean hasUnusedArgs = false;\n+    Node child = argList.getFirstChild();\n+    while (child != null) {\n+        Var var = fnScope.getVar(child.getString());\n+        if (!referenced.contains(var)) {\n+            argList.removeChild(child);\n+            compiler.reportCodeChange();\n+            hasUnusedArgs = true;\n+        } else {\n+            child = child.getNext();\n+        }\n+    }\n+\n+    if (modifyCallers && hasUnusedArgs) {\n+        callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}