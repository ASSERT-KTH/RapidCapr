{
    "patch": "public static int add(int x, int y) {\n    try {\n        return Math.addExact(x, y);\n    } catch (ArithmeticException e) {\n        if (x > 0 && y > 0) {\n            return Integer.MAX_VALUE;\n        } else if (x < 0 && y < 0) {\n            return Integer.MIN_VALUE;\n        } else {\n            return x + y;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ADD.java b/src/main/java/humaneval/buggy/ADD.java\nindex 186aae7..2431fa7 100644\n--- a/src/main/java/humaneval/buggy/ADD.java\n+++ b/src/main/java/humaneval/buggy/ADD.java\n@@ -8,6 +8,18 @@ package humaneval.buggy;\n \n public class ADD {\n     public static int add(int x, int y) {\n-        return x | y;\n+public static int add(int x, int y) {\n+    try {\n+        return Math.addExact(x, y);\n+    } catch (ArithmeticException e) {\n+        if (x > 0 && y > 0) {\n+            return Integer.MAX_VALUE;\n+        } else if (x < 0 && y < 0) {\n+            return Integer.MIN_VALUE;\n+        } else {\n+            return x + y;\n+        }\n+    }\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-ADD/src/main/java/humaneval/buggy/ADD.java:[11,1] illegal start of expression",
    "test_result": "ERROR"
}