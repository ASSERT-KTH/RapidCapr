{
    "patch": "public static String escape(String text){\n    if (text == null){\n        return null;\n    }\n\n    StringBuilder buf = new StringBuilder(text.length() + 6); \n\n    for (int i = 0; i < text.length(); i++) {\n        char ch = text.charAt(i);\n        switch (ch) {\n            case '\\'':\n                buf.append(\"\\\\'\");\n                break;\n            case '\\\"':\n                buf.append(\"\\\\\\\"\");\n                break;\n            case '\\\\':\n                buf.append(\"\\\\\\\\\");\n                break;\n            case '\\t':\n                buf.append(\"\\\\t\");\n                break;\n            case '\\n':\n                buf.append(\"\\\\n\");\n                break;\n            case '\\r':\n                buf.append(\"\\\\r\");\n                break;\n            case '\\f':\n                buf.append(\"\\\\f\");\n                break;\n            case '\\b':\n                buf.append(\"\\\\b\");\n                break;\n            case '/':\n                buf.append(\"\\\\/\");\n                break;\n            default:\n                if (ch >= 0x0020 && ch <= 0x007e) {\n                    buf.append(ch);\n                }\n                else {\n                    String ss = Integer.toHexString(ch);\n                    buf.append(\"\\\\u\");\n                    for(int k = 0; k < 4-ss.length(); k++) {\n                        buf.append('0');\n                    }\n                    buf.append(ss.toUpperCase());\n                }\n\n        }\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..00cc13c9 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,60 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String escape(String text){\n+    if (text == null){\n+        return null;\n+    }\n+\n+    StringBuilder buf = new StringBuilder(text.length() + 6); \n+\n+    for (int i = 0; i < text.length(); i++) {\n+        char ch = text.charAt(i);\n+        switch (ch) {\n+            case '\\'':\n+                buf.append(\"\\\\'\");\n+                break;\n+            case '\\\"':\n+                buf.append(\"\\\\\\\"\");\n+                break;\n+            case '\\\\':\n+                buf.append(\"\\\\\\\\\");\n+                break;\n+            case '\\t':\n+                buf.append(\"\\\\t\");\n+                break;\n+            case '\\n':\n+                buf.append(\"\\\\n\");\n+                break;\n+            case '\\r':\n+                buf.append(\"\\\\r\");\n+                break;\n+            case '\\f':\n+                buf.append(\"\\\\f\");\n+                break;\n+            case '\\b':\n+                buf.append(\"\\\\b\");\n+                break;\n+            case '/':\n+                buf.append(\"\\\\/\");\n+                break;\n+            default:\n+                if (ch >= 0x0020 && ch <= 0x007e) {\n+                    buf.append(ch);\n+                }\n+                else {\n+                    String ss = Integer.toHexString(ch);\n+                    buf.append(\"\\\\u\");\n+                    for(int k = 0; k < 4-ss.length(); k++) {\n+                        buf.append('0');\n+                    }\n+                    buf.append(ss.toUpperCase());\n+                }\n+\n+        }\n+    }\n+    return buf.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}