{
    "patch": "@Override\npublic ReturnValue execute(Params params) {\n    ReturnValue values = new ReturnValue();\n    if (params.input != null) {\n        String[] arr = params.input.split(\",\");\n        List<Integer> nums = new ArrayList<>();\n        for (String s : arr) {\n            nums.add(Integer.parseInt(s.trim()));\n        }\n        values.setReturnValueFor(\"listSize\", nums.size());\n        values.setReturnValueFor(\"sum\", nums.stream().reduce(0, Integer::sum));\n        values.setReturnValueFor(\"product\", nums.stream().reduce(1, (a, b) -> a * b));\n        values.setReturnValueFor(\"sortedList\", nums.stream().sorted().collect(Collectors.toList()));\n\n        // New fix code\n        if (nums.isEmpty()) {\n            values.setReturnValueFor(\"max\", null);\n            values.setReturnValueFor(\"min\", null);\n        } else {\n            values.setReturnValueFor(\"max\", Collections.max(nums));\n            values.setReturnValueFor(\"min\", Collections.min(nums));\n        }\n    }\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}