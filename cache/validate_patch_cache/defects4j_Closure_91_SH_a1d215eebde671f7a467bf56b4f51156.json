{
    "patch": "        // Don't traverse functions that are being assigned to a property of the global this object.\n        if (lhs.getType() == Token.GETPROP &&\n            NodeUtil.isGlobalThis(lhs.getFirstChild())) {\n          return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..a74a5fb9 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,10 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+        // Don't traverse functions that are being assigned to a property of the global this object.\n+        if (lhs.getType() == Token.GETPROP &&\n+            NodeUtil.isGlobalThis(lhs.getFirstChild())) {\n+          return false;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}