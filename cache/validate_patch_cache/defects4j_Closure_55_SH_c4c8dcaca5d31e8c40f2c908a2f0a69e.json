{
    "patch": "    Node parent = n.getParent();\n    return NodeUtil.isFunctionExpression(n) && (parent == null || !NodeUtil.isCall(parent));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..dec44da0 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,8 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    Node parent = n.getParent();\n+    return NodeUtil.isFunctionExpression(n) && (parent == null || !NodeUtil.isCall(parent));\n   }\n \n   /**",
    "result_reason": "java.lang.IllegalStateException: Expected function but was call Reference node CALL 4 [free_call: 1] [source_file: testcode]",
    "test_result": "FAIL"
}