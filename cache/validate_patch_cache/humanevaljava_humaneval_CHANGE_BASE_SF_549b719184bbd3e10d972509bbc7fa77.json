{
    "patch": "public static String change_base(int x, int base) {\n    if (x == 0) {\n        return \"0\";\n    }\n    StringBuilder result = new StringBuilder();\n    boolean isNegative = x < 0;\n    x = Math.abs(x);\n    while (x > 0) {\n        int remainder = x % base;\n        if (remainder < 0) {\n            remainder += Math.abs(base);\n        }\n        result.insert(0, Character.forDigit(remainder, base));\n        x = x / base;\n    }\n    if (isNegative) {\n        result.insert(0, '-');\n    }\n    retur",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CHANGE_BASE.java b/src/main/java/humaneval/buggy/CHANGE_BASE.java\nindex 6e31774..87cf097 100644\n--- a/src/main/java/humaneval/buggy/CHANGE_BASE.java\n+++ b/src/main/java/humaneval/buggy/CHANGE_BASE.java\n@@ -11,13 +11,23 @@ base numbers are less than 10.\n '111' */\n \n public class CHANGE_BASE {\n-    public static String change_base(int x, int base) {\n-        String result = \"\";\n-\n-        while (x > 0) {\n-            result = result + x % base;\n-            x = x - x / base;\n+public static String change_base(int x, int base) {\n+    if (x == 0) {\n+        return \"0\";\n+    }\n+    StringBuilder result = new StringBuilder();\n+    boolean isNegative = x < 0;\n+    x = Math.abs(x);\n+    while (x > 0) {\n+        int remainder = x % base;\n+        if (remainder < 0) {\n+            remainder += Math.abs(base);\n         }\n-        return result;\n+        result.insert(0, Character.forDigit(remainder, base));\n+        x = x / base;\n+    }\n+    if (isNegative) {\n+        result.insert(0, '-');\n     }\n+    retur\n }",
    "result_reason": " /tmp/humaneval-CHANGE_BASE/src/main/java/humaneval/buggy/CHANGE_BASE.java:[32,5] not a statement",
    "test_result": "ERROR"
}