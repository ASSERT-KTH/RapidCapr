{
    "patch": "      if (NodeUtil.isFunctionDeclaration(n)) {\n        FunctionType functionType = JSType.toMaybeFunctionType(\n            n.getJSType());\n        if (functionType != null && functionType.isConstructor()) {\n          // Don't traverse functions that are constructors.\n          return false;\n        }\n      } else if (n.getNext() != null &&\n          n.getNext().getType() == Token.STRING &&\n          \"lends\".equals(n.getNext().getString())) {\n        // Don't traverse functions that are getting lent to a prototype.\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..5f95716e 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,19 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isFunctionDeclaration(n)) {\n+        FunctionType functionType = JSType.toMaybeFunctionType(\n+            n.getJSType());\n+        if (functionType != null && functionType.isConstructor()) {\n+          // Don't traverse functions that are constructors.\n+          return false;\n+        }\n+      } else if (n.getNext() != null &&\n+          n.getNext().getType() == Token.STRING &&\n+          \"lends\".equals(n.getNext().getString())) {\n+        // Don't traverse functions that are getting lent to a prototype.\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}