{
    "patch": "if (chars[i] == 'l' || chars[i] == 'L') {\n    // not allowing L with an exponent or decimal point\n    if (hasExp || hasDecPoint || !foundDigit || (sz > start && !allowSigns)) {\n        return false;\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 4a1d8459..7df4d57c 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -1410,7 +1410,13 @@ public class NumberUtils {\n             if (chars[i] == 'l'\n                 || chars[i] == 'L') {\n                 // not allowing L with an exponent or decimal point\n-                return foundDigit && !hasExp;\n+if (chars[i] == 'l' || chars[i] == 'L') {\n+    // not allowing L with an exponent or decimal point\n+    if (hasExp || hasDecPoint || !foundDigit || (sz > start && !allowSigns)) {\n+        return false;\n+    }\n+    return true;\n+}\n             }\n             // last character is illegal\n             return false;",
    "result_reason": "junit.framework.AssertionFailedError: isNumber(String) 21 failed",
    "test_result": "FAIL"
}