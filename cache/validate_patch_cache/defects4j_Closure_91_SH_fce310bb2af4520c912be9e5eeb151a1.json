{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent.getType() == Token.EXPR_RESULT) {\n        Node grandparent = parent.getParent();\n        if (grandparent != null\n            && grandparent.getType() == Token.ASSIGN\n            && NodeUtil.isGet(grandparent.getFirstChild())) {\n          Node lhs = grandparent.getFirstChild();\n          if (lhs.getType() == Token.GETPROP\n              && lhs.getLastChild().getString().equals(\"prototype\")) {\n            return false;\n          }\n          Node llhs = lhs.getFirstChild();\n          if (llhs.getType() == Token.GETPROP\n              && llhs.getLastChild().getString().equals(\"prototype\")) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..9ac5cb06 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,24 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent.getType() == Token.EXPR_RESULT) {\n+        Node grandparent = parent.getParent();\n+        if (grandparent != null\n+            && grandparent.getType() == Token.ASSIGN\n+            && NodeUtil.isGet(grandparent.getFirstChild())) {\n+          Node lhs = grandparent.getFirstChild();\n+          if (lhs.getType() == Token.GETPROP\n+              && lhs.getLastChild().getString().equals(\"prototype\")) {\n+            return false;\n+          }\n+          Node llhs = lhs.getFirstChild();\n+          if (llhs.getType() == Token.GETPROP\n+              && llhs.getLastChild().getString().equals(\"prototype\")) {\n+            return false;\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}