{
    "patch": "copy = (TimeSeries) super.clone();\ncopy.data = new java.util.ArrayList();\n\nfor (int index = 0; index < getItemCount(); index++) {\n    TimeSeriesDataItem item = data.get(index);\n    if (index >= start && index <= end) {\n        copy.add((TimeSeriesDataItem) item.clone());\n    }\n}\ncopy.setDomainDescription((String) null);\ncopy.setRangeDescription((String) null);",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..4baa7c1 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+\n+for (int index = 0; index < getItemCount(); index++) {\n+    TimeSeriesDataItem item = data.get(index);\n+    if (index >= start && index <= end) {\n+        copy.add((TimeSeriesDataItem) item.clone());\n+    }\n+}\n+copy.setDomainDescription((String) null);\n+copy.setRangeDescription((String) null);\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}