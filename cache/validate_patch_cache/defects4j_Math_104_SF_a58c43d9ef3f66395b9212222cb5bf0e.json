{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    if (a <= 0.0 || x < 0.0) {\n        throw new IllegalArgumentException();\n    }\n    if (x == 0.0) {\n        return 0.0;\n    }\n    double d = 1.0 / (a + 1.0 - x);\n    double c = d;\n    double delta = c;\n    int i = 1;\n    while (i <= 1000) {\n        double a_i = i * (a - i);\n        double b_i = x + 2 * i + 1 - a;\n        d = b_i + a_i * d;\n        if (Math.abs(d) < Double.MIN_NORMAL) {\n            d = Double.MIN_NORMAL;\n        }\n        c = b_i + a_i / c;\n        if (Math.abs(c) < Double.MIN_NORMAL) {\n            c = Double.MIN_NORMAL;\n        }\n        d = 1.0 / d;\n        delta *= c * d;\n        if (Math.abs(c * d - 1.0) < 3 * Double.MIN_VALUE) {\n            return Math.exp(-x + a * Math.log(x) - lgamma(a)) * delta / a;\n        }\n        ++i;\n    }\n    throw new ArithmeticException();\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..034142563 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,37 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    if (a <= 0.0 || x < 0.0) {\n+        throw new IllegalArgumentException();\n+    }\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+    double d = 1.0 / (a + 1.0 - x);\n+    double c = d;\n+    double delta = c;\n+    int i = 1;\n+    while (i <= 1000) {\n+        double a_i = i * (a - i);\n+        double b_i = x + 2 * i + 1 - a;\n+        d = b_i + a_i * d;\n+        if (Math.abs(d) < Double.MIN_NORMAL) {\n+            d = Double.MIN_NORMAL;\n+        }\n+        c = b_i + a_i / c;\n+        if (Math.abs(c) < Double.MIN_NORMAL) {\n+            c = Double.MIN_NORMAL;\n+        }\n+        d = 1.0 / d;\n+        delta *= c * d;\n+        if (Math.abs(c * d - 1.0) < 3 * Double.MIN_VALUE) {\n+            return Math.exp(-x + a * Math.log(x) - lgamma(a)) * delta / a;\n+        }\n+        ++i;\n+    }\n+    throw new ArithmeticException();\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}