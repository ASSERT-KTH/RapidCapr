{
    "patch": "void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n        return;\n    }\n\n    // check if we need to add a space to separate this code from the previous one\n    char last = getLastChar();\n    char first = newcode.charAt(0);\n    boolean lastIsWordChar = isWordChar(last) || last == '\\\\';\n    boolean firstIsWordChar = isWordChar(first) || first == '\\\\';\n    boolean currentIsComment = (first == '/' && newcode.length() > 1 && (newcode.charAt(1) == '/' || newcode.charAt(1) == '*'));\n\n    if (lastIsWordChar && firstIsWordChar) {\n        // handle cases like \"foo + bar\"\n        append(\" \");\n    } else if (!currentIsComment && (last == '/' || last == '*') && first == '/') {\n        // handle case where \"/\" or \"/*\" is followed by a comment \"//\" or \"/*\"\n        append(\" \");\n    } else if (!currentIsComment && last == '*' && first == '*') {\n        // handle cases like \"/* foo */ /* bar */\"\n        append(\" \");\n    }\n\n    append(newcode);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..7a3fc900 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,28 +178,33 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n+void add(String newcode) {\n     maybeEndStatement();\n \n     if (newcode.length() == 0) {\n-      return;\n+        return;\n     }\n \n-    char c = newcode.charAt(0);\n-    if ((isWordChar(c) || c == '\\\\') &&\n-        isWordChar(getLastChar())) {\n-      // need space to separate. This is not pretty printing.\n-      // For example: \"return foo;\"\n-      append(\" \");\n-      // Do not allow a forward slash to appear after a DIV.\n-      // For example,\n-      // REGEXP DIV REGEXP\n-      // is valid and should print like\n-      // / // / /\n+    // check if we need to add a space to separate this code from the previous one\n+    char last = getLastChar();\n+    char first = newcode.charAt(0);\n+    boolean lastIsWordChar = isWordChar(last) || last == '\\\\';\n+    boolean firstIsWordChar = isWordChar(first) || first == '\\\\';\n+    boolean currentIsComment = (first == '/' && newcode.length() > 1 && (newcode.charAt(1) == '/' || newcode.charAt(1) == '*'));\n+\n+    if (lastIsWordChar && firstIsWordChar) {\n+        // handle cases like \"foo + bar\"\n+        append(\" \");\n+    } else if (!currentIsComment && (last == '/' || last == '*') && first == '/') {\n+        // handle case where \"/\" or \"/*\" is followed by a comment \"//\" or \"/*\"\n+        append(\" \");\n+    } else if (!currentIsComment && last == '*' && first == '*') {\n+        // handle cases like \"/* foo */ /* bar */\"\n+        append(\" \");\n     }\n \n     append(newcode);\n-  }\n+}\n \n   void appendOp(String op, boolean binOp) {\n     append(op);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}