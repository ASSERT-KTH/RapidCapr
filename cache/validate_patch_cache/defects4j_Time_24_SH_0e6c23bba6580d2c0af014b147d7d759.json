{
    "patch": "            int failures = 0;\n            IllegalFieldValueException failureException = null;\n            for (int i = 0; i < count; i++) {\n                try {\n                    millis = savedFields[i].set(millis, resetFields);\n                } catch (IllegalFieldValueException e) {\n                    if (failureException == null || e.getIllegalFieldValueMessage().length() > failureException.getIllegalFieldValueMessage().length()) {\n                        failureException = e;\n                    }\n                    failures++;\n                }\n            }\n            if (failures > 0) {\n                if (text != null) {\n                    failureException.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n                }\n                throw failureException;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..8ec7a589 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            int failures = 0;\n+            IllegalFieldValueException failureException = null;\n+            for (int i = 0; i < count; i++) {\n+                try {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                } catch (IllegalFieldValueException e) {\n+                    if (failureException == null || e.getIllegalFieldValueMessage().length() > failureException.getIllegalFieldValueMessage().length()) {\n+                        failureException = e;\n+                    }\n+                    failures++;\n+                }\n+            }\n+            if (failures > 0) {\n+                if (text != null) {\n+                    failureException.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n+                }\n+                throw failureException;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}