{
    "patch": "private void handleBlockComment(Comment comment) {\n    String commentValue = comment.getValue().replaceAll(\"\\\\s\", \"\");\n    if (commentValue.contains(\"@\")) {\n        int startIndex = commentValue.indexOf(\"@\");\n        int endIndex = commentValue.indexOf(\"*/\", startIndex);\n        if (endIndex == -1) {\n            errorReporter.warning(\n                SUSPICIOUS_COMMENT_WARNING,\n                sourceName,\n                comment.getLineno(), \"\", 0);\n        } else {\n            if (commentValue.substring(startIndex, endIndex).contains(\"TODO\")) {\n                errorReporter.warning(\n                    SUSPICIOUS_COMMENT_WARNING,\n                    sourceName,\n                    comment.getLineno(), \"\", 0);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..7030a3a4 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,26 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n+private void handleBlockComment(Comment comment) {\n+    String commentValue = comment.getValue().replaceAll(\"\\\\s\", \"\");\n+    if (commentValue.contains(\"@\")) {\n+        int startIndex = commentValue.indexOf(\"@\");\n+        int endIndex = commentValue.indexOf(\"*/\", startIndex);\n+        if (endIndex == -1) {\n+            errorReporter.warning(\n+                SUSPICIOUS_COMMENT_WARNING,\n+                sourceName,\n+                comment.getLineno(), \"\", 0);\n+        } else {\n+            if (commentValue.substring(startIndex, endIndex).contains(\"TODO\")) {\n+                errorReporter.warning(\n+                    SUSPICIOUS_COMMENT_WARNING,\n+                    sourceName,\n+                    comment.getLineno(), \"\", 0);\n+            }\n+        }\n     }\n-  }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}