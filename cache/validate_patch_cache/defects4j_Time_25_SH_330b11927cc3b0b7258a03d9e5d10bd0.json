{
    "patch": "        if (offsetLocal > offsetAdjusted) {\n            long prevLocal = previousTransition(instantAdjusted);\n            if (prevLocal > instantLocal - offsetLocal) {\n                return offsetLocal;\n            }\n        } else if (offsetLocal < offsetAdjusted) {\n            long nextLocal = nextTransition(instantAdjusted);\n            if (nextLocal <= instantLocal - offsetLocal) {\n                return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..aeabacee 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if (offsetLocal > offsetAdjusted) {\n+            long prevLocal = previousTransition(instantAdjusted);\n+            if (prevLocal > instantLocal - offsetLocal) {\n+                return offsetLocal;\n+            }\n+        } else if (offsetLocal < offsetAdjusted) {\n+            long nextLocal = nextTransition(instantAdjusted);\n+            if (nextLocal <= instantLocal - offsetLocal) {\n+                return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}