{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    // Traverse up the AST to check if any parent node has an exception handler.\n    while (cfgNode != null) {\n      if (cfgNode.isTry() || cfgNode.isCatch()) {\n        return true;\n      }\n      cfgNode = cfgNode.getParent();\n      if (cfgNode != null && (cfgNode.isFunction() || cfgNode.isScript())) {\n        return false;\n      }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..abf5e8f5 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -156,9 +156,19 @@ class MaybeReachingVariableUse extends\n     return output;\n   }\n \n-  private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    // Traverse up the AST to check if any parent node has an exception handler.\n+    while (cfgNode != null) {\n+      if (cfgNode.isTry() || cfgNode.isCatch()) {\n+        return true;\n+      }\n+      cfgNode = cfgNode.getParent();\n+      if (cfgNode != null && (cfgNode.isFunction() || cfgNode.isScript())) {\n+        return false;\n+      }\n+    }\n     return false;\n-  }\n+}\n \n   private void computeMayUse(\n       Node n, Node cfgNode, ReachingUses output, boolean conditional) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}