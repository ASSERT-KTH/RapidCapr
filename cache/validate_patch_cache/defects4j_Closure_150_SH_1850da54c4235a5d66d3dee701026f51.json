{
    "patch": "      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          if (NodeUtil.isFunctionExpression(n)) { // Add this line to fix the issue\n            defineDeclaredFunction(n, parent);\n          }\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..a85b0a9d 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1454,7 +1454,9 @@ final class TypedScopeCreator implements ScopeCreator {\n           if (parent.getType() == Token.NAME) {\n             return;\n           }\n-          defineDeclaredFunction(n, parent);\n+          if (NodeUtil.isFunctionExpression(n)) { // Add this line to fix the issue\n+            defineDeclaredFunction(n, parent);\n+          }\n           break;\n         case Token.CATCH:\n           defineCatch(n, parent);",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}