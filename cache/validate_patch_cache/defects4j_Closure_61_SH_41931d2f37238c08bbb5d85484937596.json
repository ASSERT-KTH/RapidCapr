{
    "patch": "if (nameNode.isQualifiedName()) {\n    Node targetNode = nameNode.getFirstChild();\n    if (targetNode.getType() == Token.NAME &&\n        (targetNode.getString().equals(\"Math\") ||\n         targetNode.getString().equals(\"console\") ||\n         targetNode.getString().equals(\"JSON\"))) {\n        return false;\n    }\n    if (targetNode.getType() == Token.THIS) {\n        return false;\n    }\n    if (targetNode.getType() == Token.GETPROP) {\n        targetNode = targetNode.getFirstChild();\n        if (targetNode.getType() == Token.NAME &&\n            (targetNode.getString().equals(\"Math\") ||\n             targetNode.getString().equals(\"console\") ||\n             targetNode.getString().equals(\"JSON\"))) {\n            return false;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..ed00f0fd 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,27 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.isQualifiedName()) {\n+    Node targetNode = nameNode.getFirstChild();\n+    if (targetNode.getType() == Token.NAME &&\n+        (targetNode.getString().equals(\"Math\") ||\n+         targetNode.getString().equals(\"console\") ||\n+         targetNode.getString().equals(\"JSON\"))) {\n+        return false;\n+    }\n+    if (targetNode.getType() == Token.THIS) {\n+        return false;\n+    }\n+    if (targetNode.getType() == Token.GETPROP) {\n+        targetNode = targetNode.getFirstChild();\n+        if (targetNode.getType() == Token.NAME &&\n+            (targetNode.getString().equals(\"Math\") ||\n+             targetNode.getString().equals(\"console\") ||\n+             targetNode.getString().equals(\"JSON\"))) {\n+            return false;\n+        }\n+    }\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}