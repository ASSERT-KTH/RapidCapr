{
    "patch": "public static <T> ReturnValues<T> returnValueFor(Class<T> clazz) {\n    if (clazz == Iterable.class) {\n        // Return an empty list\n        List<T> list = Collections.emptyList();\n        return new ReturnValues<>(list);\n    }\n    // Return null for other classes\n    return new ReturnValues<>(null);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..b47559290 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,15 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static <T> ReturnValues<T> returnValueFor(Class<T> clazz) {\n+    if (clazz == Iterable.class) {\n+        // Return an empty list\n+        List<T> list = Collections.emptyList();\n+        return new ReturnValues<>(list);\n+    }\n+    // Return null for other classes\n+    return new ReturnValues<>(null);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}