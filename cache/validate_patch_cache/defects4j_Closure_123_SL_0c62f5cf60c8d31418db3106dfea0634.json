{
    "patch": "private static String processSwitch(Object lhs, Object rhs, String operator, String comment) {\n\n    String template = \"switch(%s) { case %s: return %s; %s }\";\n    String lhsExpr = expressionString(lhs);\n    String rhsExpr = expressionString(rhs);\n    String switchExpr;\n    String caseExpr;\n    String returnExpr;\n\n    Context rhsContext = Context.OTHER;\n    if (rhs instanceof Number || rhs instanceof Character) {\n        rhsContext = Context.NUMERIC;\n    } else if (rhs instanceof String) {\n        rhsContext = Context.STRING;\n    } else if (rhs instanceof Boolean) {\n        rhsContext = Context.BOOLEAN;\n    } else if (rhs != null && rhs.getClass().isArray()) {\n        Object[] d = (Object[])rhs;\n        if (d.length > 0 && d[0] instanceof Number) {\n            rhsContext = Context.NUMERIC;\n        }\n    }\n    \n    switch (rhsContext) {\n        case NUMERIC:\n            switchExpr = lhsExpr + \" - \" + rhsExpr;\n            caseExpr = \"0\";\n            break;\n        case STRING:\n            switchExpr = \"compareStrings(\" + lhsExpr + \", \" + rhsExpr + \")\";\n            caseExpr = \"0\";\n            break;\n        case BOOLEAN:\n            switchExpr = lhsExpr + \" == \" + rhsExpr;\n            caseExpr = \"true\";\n            break;\n        default:\n            switchExpr = \"false\";\n            caseExpr = \"null\";\n    }\n    \n    if (comment != null) {\n        returnExpr = \"return /*\" + comment + \"*/ \" + caseExpr + \";\";\n    } else {\n        returnExpr = \"return \" + caseExpr + \";\";\n    }\n    \n    return String.format(template, switchExpr, caseExpr, caseExpr, returnExpr);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}