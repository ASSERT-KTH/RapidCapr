{
    "patch": "    if (obj == null || !(obj instanceof ShapeList)) {\n        return false;\n    }\n    ShapeList other = (ShapeList) obj;\n    if (this.size() != other.size()) {\n        return false;\n    }\n\n    Iterator<Shape> it1 = this.iterator();\n    Iterator<Shape> it2 = other.iterator();\n\n    while (it1.hasNext() && it2.hasNext()) {\n        Shape s1 = it1.next();\n        Shape s2 = it2.next();\n        if (!ShapeUtilities.equal(s1, s2)) {\n            return false;\n        }\n    }\n    return true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..e857995 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,25 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+    if (obj == null || !(obj instanceof ShapeList)) {\n+        return false;\n+    }\n+    ShapeList other = (ShapeList) obj;\n+    if (this.size() != other.size()) {\n+        return false;\n+    }\n+\n+    Iterator<Shape> it1 = this.iterator();\n+    Iterator<Shape> it2 = other.iterator();\n+\n+    while (it1.hasNext() && it2.hasNext()) {\n+        Shape s1 = it1.next();\n+        Shape s2 = it2.next();\n+        if (!ShapeUtilities.equal(s1, s2)) {\n+            return false;\n+        }\n+    }\n+    return true;\n \n     }\n \n@@ -169,4 +187,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}