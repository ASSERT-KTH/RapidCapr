{
    "patch": "      if (n.isFromExterns()) {\n        // Don't traverse externs functions that are getting lent to a prototype\n        // or assigned like prototype = fn.\n        return !(parent.getType() == Token.ASSIGN &&\n            NodeUtil.isGet(parent.getFirstChild()) &&\n            parent.getFirstChild().getLastChild().getString().equals(\"prototype\"));\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..f6dbb07f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,13 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (n.isFromExterns()) {\n+        // Don't traverse externs functions that are getting lent to a prototype\n+        // or assigned like prototype = fn.\n+        return !(parent.getType() == Token.ASSIGN &&\n+            NodeUtil.isGet(parent.getFirstChild()) &&\n+            parent.getFirstChild().getLastChild().getString().equals(\"prototype\"));\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}