{
    "patch": "          if (lastArg.getNext() != null && lastArg.getNext().isDefaultValue()) {\n            // A trailing default value can't be safely removed.\n            // `function f(a=0) {}` must still declare `a`.\n            break;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..18238367 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,11 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+          if (lastArg.getNext() != null && lastArg.getNext().isDefaultValue()) {\n+            // A trailing default value can't be safely removed.\n+            // `function f(a=0) {}` must still declare `a`.\n+            break;\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}