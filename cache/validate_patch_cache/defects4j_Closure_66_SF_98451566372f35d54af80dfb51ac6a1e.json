{
    "patch": "public static double getTypedPercent(String js) {\n  double totalChars = js.length();\n  double whiteSpace = js.replaceAll(\"[^\\\\s]\", \"\").length();\n  double nonWhiteSpace = totalChars - whiteSpace;\n  double letters = js.replaceAll(\"[^a-zA-Z]\", \"\").length();\n  double digits = js.replaceAll(\"[^0-9]\", \"\").length();\n  double otherChars = nonWhiteSpace - letters - digits;\n  double typedChars = letters + digits + otherChars;\n  return typedChars / totalChars * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..f49e5458 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+  double totalChars = js.length();\n+  double whiteSpace = js.replaceAll(\"[^\\\\s]\", \"\").length();\n+  double nonWhiteSpace = totalChars - whiteSpace;\n+  double letters = js.replaceAll(\"[^a-zA-Z]\", \"\").length();\n+  double digits = js.replaceAll(\"[^0-9]\", \"\").length();\n+  double otherChars = nonWhiteSpace - letters - digits;\n+  double typedChars = letters + digits + otherChars;\n+  return typedChars / totalChars * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}