{
    "patch": "if (finallyNode != null && cfa != null) {\n    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, finallyNode, cfa));\n    if (cfa.finallyMap.containsKey(parent)) {\n        cfa.finallyMap.get(parent).add(finallyNode);\n    } else {\n        List<Node> finallyNodes = new ArrayList<>();\n        finallyNodes.add(finallyNode);\n        cfa.finallyMap.put(parent, finallyNodes);\n    }\n}\nelse {\n    return computeFollowNode(fromNode, parent, cfa);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..68c1e82e 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,19 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (finallyNode != null && cfa != null) {\n+    cfa.createEdge(fromNode, Branch.UNCOND, computeFollowNode(fromNode, finallyNode, cfa));\n+    if (cfa.finallyMap.containsKey(parent)) {\n+        cfa.finallyMap.get(parent).add(finallyNode);\n+    } else {\n+        List<Node> finallyNodes = new ArrayList<>();\n+        finallyNodes.add(finallyNode);\n+        cfa.finallyMap.put(parent, finallyNodes);\n+    }\n+}\n+else {\n+    return computeFollowNode(fromNode, parent, cfa);\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}