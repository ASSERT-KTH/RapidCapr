{
    "patch": "public Iterable nodeValues(Node node) {\n    if (node == null) {\n        return Collections.emptyList();\n    }\n    List<Object> values = new ArrayList<>();\n    NodeList childNodes = node.getChildNodes();\n    for (int i = 0; i < childNodes.getLength(); i++) {\n        Node childNode = childNodes.item(i);\n        if (childNode.getNodeType() == Node.ELEMENT_NODE) {\n            values.add(childNode.getNodeValue());\n        }\n    }\n    return values;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..a73456cee 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,20 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public Iterable nodeValues(Node node) {\n+    if (node == null) {\n+        return Collections.emptyList();\n+    }\n+    List<Object> values = new ArrayList<>();\n+    NodeList childNodes = node.getChildNodes();\n+    for (int i = 0; i < childNodes.getLength(); i++) {\n+        Node childNode = childNodes.item(i);\n+        if (childNode.getNodeType() == Node.ELEMENT_NODE) {\n+            values.add(childNode.getNodeValue());\n+        }\n+    }\n+    return values;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}