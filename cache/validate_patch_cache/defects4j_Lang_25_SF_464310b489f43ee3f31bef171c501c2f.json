{
    "patch": "public static String decode(String inputString, String encoding) throws UnsupportedEncodingException {\n    if (inputString == null || inputString.length() == 0) {\n        return inputString;\n    }\n    if (encoding == null || encoding.length() == 0) {\n        throw new UnsupportedEncodingException(\"Encoding not specified\");\n    }\n    String resultString = null;\n    try {\n        resultString = URLDecoder.decode(inputString.replaceAll(\"\\\\+\",\"%2B\"), encoding);\n    } catch (UnsupportedEncodingException e) {\n        throw new UnsupportedEncodingException(encoding + \" is not a valid encoding\");\n    }\n    return resultString.replaceAll(\"%2B\", \"+\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..a0289391 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,21 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decode(String inputString, String encoding) throws UnsupportedEncodingException {\n+    if (inputString == null || inputString.length() == 0) {\n+        return inputString;\n+    }\n+    if (encoding == null || encoding.length() == 0) {\n+        throw new UnsupportedEncodingException(\"Encoding not specified\");\n+    }\n+    String resultString = null;\n+    try {\n+        resultString = URLDecoder.decode(inputString.replaceAll(\"\\\\+\",\"%2B\"), encoding);\n+    } catch (UnsupportedEncodingException e) {\n+        throw new UnsupportedEncodingException(encoding + \" is not a valid encoding\");\n+    }\n+    return resultString.replaceAll(\"%2B\", \"+\");\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}