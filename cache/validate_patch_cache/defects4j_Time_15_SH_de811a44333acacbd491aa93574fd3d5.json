{
    "patch": "switch (val2) {\n    case -1:\n        if (val1 == Long.MIN_VALUE) {\n            throw new ArithmeticException(\"Multiplication overflows a long\");\n        }\n        return -val1;\n    case 0:\n        return 0L;\n    case 1:\n        return val1;\n    default:\n        if (val1 == Long.MIN_VALUE || val2 == Integer.MIN_VALUE) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        long total = val1 * val2;\n        if (total / val2 != val1) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        return total;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..804e49a4 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -135,6 +135,26 @@ public class FieldUtils {\n     public static long safeMultiply(long val1, int val2) {\n         switch (val2) {\n             case -1:\n+switch (val2) {\n+    case -1:\n+        if (val1 == Long.MIN_VALUE) {\n+            throw new ArithmeticException(\"Multiplication overflows a long\");\n+        }\n+        return -val1;\n+    case 0:\n+        return 0L;\n+    case 1:\n+        return val1;\n+    default:\n+        if (val1 == Long.MIN_VALUE || val2 == Integer.MIN_VALUE) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+        long total = val1 * val2;\n+        if (total / val2 != val1) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+        return total;\n+}\n                 return -val1;\n             case 0:\n                 return 0L;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}