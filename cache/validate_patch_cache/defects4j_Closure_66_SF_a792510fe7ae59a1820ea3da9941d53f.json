{
    "patch": "public static double getTypedPercent(String json) {\n    ObjectMapper objectMapper = new ObjectMapper();\n    try {\n        Map<String, Object> map = objectMapper.readValue(json, Map.class);\n        int total = 0;\n        int sum  = 0;\n        for (Map.Entry<String, Object> entry : map.entrySet()) {\n            String key = entry.getKey();\n            Object value = entry.getValue();\n            if (value instanceof Integer) {\n                sum += (Integer) value;\n            }\n            total += (Integer) value;\n        }\n        return (double)sum / (double)total * 100.0;\n    } catch (JsonProcessingException e) {\n        e.printStackTrace();\n    }\n    return -1.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..55ff2368 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,26 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    ObjectMapper objectMapper = new ObjectMapper();\n+    try {\n+        Map<String, Object> map = objectMapper.readValue(json, Map.class);\n+        int total = 0;\n+        int sum  = 0;\n+        for (Map.Entry<String, Object> entry : map.entrySet()) {\n+            String key = entry.getKey();\n+            Object value = entry.getValue();\n+            if (value instanceof Integer) {\n+                sum += (Integer) value;\n+            }\n+            total += (Integer) value;\n+        }\n+        return (double)sum / (double)total * 100.0;\n+    } catch (JsonProcessingException e) {\n+        e.printStackTrace();\n+    }\n+    return -1.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}