{
    "patch": "public double getTypedPercent(JSONObject json) throws JSONException {\n    JSONArray arr = json.getJSONArray(\"students\");\n    double count = 0;\n    double countTyped = 0;\n    for (int i = 0; i < arr.length(); i++) {\n        JSONObject obj = arr.getJSONObject(i);\n        boolean typed = obj.getBoolean(\"typed\");\n        if (typed) {\n            countTyped++;\n        }\n        count++;\n    }\n    if (count == 0) {\n        return 100.0;\n    }\n    return (countTyped / count) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..b02414df 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JSONObject json) throws JSONException {\n+    JSONArray arr = json.getJSONArray(\"students\");\n+    double count = 0;\n+    double countTyped = 0;\n+    for (int i = 0; i < arr.length(); i++) {\n+        JSONObject obj = arr.getJSONObject(i);\n+        boolean typed = obj.getBoolean(\"typed\");\n+        if (typed) {\n+            countTyped++;\n+        }\n+        count++;\n+    }\n+    if (count == 0) {\n+        return 100.0;\n+    }\n+    return (countTyped / count) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}