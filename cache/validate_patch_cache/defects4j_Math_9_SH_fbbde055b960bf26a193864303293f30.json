{
    "patch": "final Vector3D zero = Vector3D.ZERO;\nfinal Vector3D revertedDirection = direction.negate();\nfinal double delta = 1e-15;\nfinal Line reverted = new Line(zero, revertedDirection);\nassertNotNull(reverted);\nassertEquals(direction.getNorm(), revertedDirection.getNorm(), delta);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..75d1d71ec 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,12 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+final Vector3D zero = Vector3D.ZERO;\n+final Vector3D revertedDirection = direction.negate();\n+final double delta = 1e-15;\n+final Line reverted = new Line(zero, revertedDirection);\n+assertNotNull(reverted);\n+assertEquals(direction.getNorm(), revertedDirection.getNorm(), delta);\n         return reverted;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}