{
    "patch": "          options.dependencyOptions != null &&\n          options.dependencyOptions.needsManagement() && (\n            options.closurePass ||\n            (options.dependencyMode.hasModules() &&\n            options.dependencyOptions.getDependencySorting() != DependencyOptions.DependencySorting.NONE\n            )\n          ) &&",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b76bbb5c..6d49c119 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -1282,7 +1282,13 @@ public class Compiler extends AbstractCompiler {\n \n       // Check if the sources need to be re-ordered.\n       if (options.dependencyOptions.needsManagement() &&\n-          !options.skipAllPasses &&\n+          options.dependencyOptions != null &&\n+          options.dependencyOptions.needsManagement() && (\n+            options.closurePass ||\n+            (options.dependencyMode.hasModules() &&\n+            options.dependencyOptions.getDependencySorting() != DependencyOptions.DependencySorting.NONE\n+            )\n+          ) &&\n           options.closurePass) {\n         for (CompilerInput input : inputs) {\n           // Forward-declare all the provided types, so that they",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}