{
    "patch": "    public static ArrayList<Tuple> get_row(ArrayList<ArrayList<Integer>> lst, int x) {\n        ArrayList<Tuple> result = new ArrayList<Tuple>();\n\n        for (int i = 0; i < lst.size(); i += 1) {\n            ArrayList<Integer> innerList = lst.get(i);\n            int j = innerList.lastIndexOf(x); //get the index of the last occurence of x in the inner list\n\n            if (j != -1) { //if x is not found, j will be -1\n                result.add(new GET_ROW().new Tuple(i, j));                    \n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_ROW.java b/src/main/java/humaneval/buggy/GET_ROW.java\nindex 83f4169..06bc41a 100644\n--- a/src/main/java/humaneval/buggy/GET_ROW.java\n+++ b/src/main/java/humaneval/buggy/GET_ROW.java\n@@ -23,10 +23,11 @@ public class GET_ROW {\n         ArrayList<Tuple> result = new ArrayList<Tuple>();\n \n         for (int i = 0; i < lst.size(); i += 1) {\n-            for (int j = lst.get(0).size() - 1; j >= 0; j -= 1){\n-                if (lst.get(i).get(i) == x){\n-                    result.add(new GET_ROW().new Tuple(i, i));\n-                }\n+            ArrayList<Integer> innerList = lst.get(i);\n+            int j = innerList.lastIndexOf(x); //get the index of the last occurence of x in the inner list\n+\n+            if (j != -1) { //if x is not found, j will be -1\n+                result.add(new GET_ROW().new Tuple(i, j));                    \n             }\n         }\n         return result;",
    "result_reason": "   TEST_GET_ROW.test_0:18 expected:<[humaneval.buggy.GET_ROW$Tuple@727aa836, humaneval.buggy.GET_ROW$Tuple@4d1b5b97, humaneval.buggy.GET_ROW$Tuple@4342dff3]> but was:<[humaneval.buggy.GET_ROW$Tuple@35c972ee, humaneval.buggy.GET_ROW$Tuple@12555779, humaneval.buggy.GET_ROW$Tuple@5856147, humaneval.buggy.GET_ROW$Tuple@50ed8b43, humaneval.buggy.GET_ROW$Tuple@2ecdddb2]>",
    "test_result": "FAIL"
}