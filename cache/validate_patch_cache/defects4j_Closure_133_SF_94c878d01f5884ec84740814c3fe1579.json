{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null) {\n        throw new IllegalStateException();\n    }\n    result = result.trim();\n    if (result.isEmpty()) {\n        return \"\";\n    }\n    String[] lines = result.split(\"\\\\r?\\\\n\");\n    StringBuilder sb = new StringBuilder();\n    for (String line : lines) {\n        if (line.trim().startsWith(\"*\")) {\n            sb.append(line.trim().substring(1));\n        } else {\n            sb.append(line.trim());\n        }\n    }\n    return sb.toString().trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..6e455755 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,26 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+    if (result == null) {\n+        throw new IllegalStateException();\n+    }\n+    result = result.trim();\n+    if (result.isEmpty()) {\n+        return \"\";\n+    }\n+    String[] lines = result.split(\"\\\\r?\\\\n\");\n+    StringBuilder sb = new StringBuilder();\n+    for (String line : lines) {\n+        if (line.trim().startsWith(\"*\")) {\n+            sb.append(line.trim().substring(1));\n+        } else {\n+            sb.append(line.trim());\n+        }\n+    }\n+    return sb.toString().trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "junit.framework.ComparisonFailure: expected:<Another[ ]function.> but was:<Another[]function.>",
    "test_result": "FAIL"
}