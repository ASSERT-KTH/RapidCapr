{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    Node current = cfgNode;\n    while (current != null) {\n        if (current.getType() == Token.CATCH) {\n            return true;\n        }\n        current = current.getParent();\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..064306e8 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,16 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    Node current = cfgNode;\n+    while (current != null) {\n+        if (current.getType() == Token.CATCH) {\n+            return true;\n+        }\n+        current = current.getParent();\n+    }\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}