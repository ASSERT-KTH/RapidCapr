{
    "patch": "public String getProperty(String key) {\n    Properties props = new Properties();\n    String propFileName = \"config.properties\";\n    try (InputStream inputStream = getClass().getClassLoader().getResourceAsStream(propFileName)) {\n        props.load(inputStream);\n        String value = (String) props.get(key);\n        return value;\n    } catch (IOException e) {\n        System.out.println(\"Exception: \" + e);\n    }\n    return null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..426a2877 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getProperty(String key) {\n+    Properties props = new Properties();\n+    String propFileName = \"config.properties\";\n+    try (InputStream inputStream = getClass().getClassLoader().getResourceAsStream(propFileName)) {\n+        props.load(inputStream);\n+        String value = (String) props.get(key);\n+        return value;\n+    } catch (IOException e) {\n+        System.out.println(\"Exception: \" + e);\n+    }\n+    return null;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}