{
    "patch": "import java.util.Arrays;\n\npublic class Distribution implements Cloneable {\n    private double[] values;\n\n    public Distribution(double[] values) {\n        this.values = values;\n    }\n\n    public Distribution(Distribution distribution) {\n        this.values = distribution.values.clone();\n    }\n\n    public void setValue(int index, double value) {\n        values[index] = value;\n    }\n\n    public double getValue(int index) {\n        return values[index];\n    }\n\n    public int size() {\n        return values.length;\n    }\n\n    public void normalize() {\n        double sum = Arrays.stream(values).sum();\n        for (int i = 0; i < size(); ++i) {\n            values[i] /= sum;\n        }\n    }\n\n    public double klDivergence(Distribution other) {\n        double result = 0;\n        for (int i = 0; i < size(); ++i) {\n            double p = values[i];\n            double q = other.values[i];\n            if (p != 0 && q != 0) {\n                result += p * Math.log(p / q);\n            }\n        }\n        return result;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Distribution that = (Distribution) o;\n        return Arrays.equals(values, that.values);\n    }\n\n    @Override\n    public int hashCode() {\n        return Arrays.hashCode(values);\n    }\n\n    @Override\n    public Distribution clone() {\n        return new Distribution(this);\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}