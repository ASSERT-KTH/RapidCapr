{
    "patch": "if (value.getParent() != null && value.getParent().isGetProp()) {\n    String propertyName = value.getLastChild().getString();\n    if (convention.isPropertySafeToInline(propertyName)) {\n        return canMoveAggressively(value) ||\n               canMoveModerately(initialization, reference);\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..1fe8f663 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,14 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.getParent() != null && value.getParent().isGetProp()) {\n+    String propertyName = value.getLastChild().getString();\n+    if (convention.isPropertySafeToInline(propertyName)) {\n+        return canMoveAggressively(value) ||\n+               canMoveModerately(initialization, reference);\n+    }\n+    return false;\n+}\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}