{
    "patch": "            Object arg = invocation.getArguments()[0];\n            return (arg == null || !arg.getClass().equals(invocation.getMock().getClass())) ? 1 : 0;",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 4c00f50b1..1cf9fbe02 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -73,7 +73,8 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             //see issue 184.\n             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).\n             //Only for compareTo() method by the Comparable interface\n-            return 1;\n+            Object arg = invocation.getArguments()[0];\n+            return (arg == null || !arg.getClass().equals(invocation.getMock().getClass())) ? 1 : 0;\n         }\n         \n         Class<?> returnType = invocation.getMethod().getReturnType();\n@@ -120,4 +121,4 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n         return null;\n     }\n \n-}\n\\ No newline at end of file\n+}",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2> but was:<1>",
    "test_result": "FAIL"
}