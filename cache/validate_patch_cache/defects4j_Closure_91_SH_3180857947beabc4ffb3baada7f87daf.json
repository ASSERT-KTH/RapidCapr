{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isGet(parent)) {\n        Node childOfParent = parent.getLastChild();\n        if (childOfParent != null && childOfParent.isString() && childOfParent.getString().equals(\"prototype\")) {\n          return false;\n        }\n      }\n\n      if (n.getParent() != null && n.getParent().getType() == Token.EXPR_RESULT) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..cb34b1ad 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent)) {\n+        Node childOfParent = parent.getLastChild();\n+        if (childOfParent != null && childOfParent.isString() && childOfParent.getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+      }\n+\n+      if (n.getParent() != null && n.getParent().getType() == Token.EXPR_RESULT) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}