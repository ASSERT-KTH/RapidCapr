{
    "patch": "copy.data = new java.util.ArrayList();\nfor (int index = start; index <= end && index < getItemCount(); index++) {\n    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n    try {\n        copy.add(clone);\n    } catch (SeriesException e) {\n        throw new CloneNotSupportedException(\n                \"Failed to add cloned data item to series\", e);\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..78a4ac2 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList();\n+for (int index = start; index <= end && index < getItemCount(); index++) {\n+    TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+    TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+    try {\n+        copy.add(clone);\n+    } catch (SeriesException e) {\n+        throw new CloneNotSupportedException(\n+                \"Failed to add cloned data item to series\", e);\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: no suitable constructor found for CloneNotSupportedException(String,SeriesException)",
    "test_result": "ERROR"
}