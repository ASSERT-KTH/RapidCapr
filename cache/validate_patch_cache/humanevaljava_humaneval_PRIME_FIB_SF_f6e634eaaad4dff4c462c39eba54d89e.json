{
    "patch": "public static int prime_fib(int n) {\n    if (n <= 0) {\n        return -1; // invalid input\n    }\n\n    int prev = 0;\n    int curr = 1;\n    int count = 1; // current index\n    while (count < n) {\n        int next = prev + curr;\n        prev = curr;\n        curr = next;\n        if (is_prime(curr)) {\n            count++;\n        }\n        if (count == n) {\n            return curr;\n        }\n        if (count < 0) {\n            // handle overflow error\n            return -1;\n        }\n    }\n    return -1; // no prime fib found\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/PRIME_FIB.java b/src/main/java/humaneval/buggy/PRIME_FIB.java\nindex 68ba00e..6a4b30b 100644\n--- a/src/main/java/humaneval/buggy/PRIME_FIB.java\n+++ b/src/main/java/humaneval/buggy/PRIME_FIB.java\n@@ -13,18 +13,29 @@ public class PRIME_FIB {\n         return true;\n     }\n \n-    public static int prime_fib(int n){\n-        ArrayList<Integer> fib = new ArrayList<Integer>();\n-        fib.add(0);\n-        fib.add(1);\n+public static int prime_fib(int n) {\n+    if (n <= 0) {\n+        return -1; // invalid input\n+    }\n \n-        while (true) {\n-            int len = fib.size();\n-            fib.add(fib.get(len - 1) + fib.get(len));\n-            if (is_prime(fib.get(len - 1)))\n-                n -= 1;\n-            if (n == 0)\n-                return fib.get(fib.size() - 1);\n+    int prev = 0;\n+    int curr = 1;\n+    int count = 1; // current index\n+    while (count < n) {\n+        int next = prev + curr;\n+        prev = curr;\n+        curr = next;\n+        if (is_prime(curr)) {\n+            count++;\n+        }\n+        if (count == n) {\n+            return curr;\n+        }\n+        if (count < 0) {\n+            // handle overflow error\n+            return -1;\n         }\n     }\n+    return -1; // no prime fib found\n+}\n }",
    "result_reason": "   TEST_PRIME_FIB.test_0:7 expected:<-1> but was:<2>",
    "test_result": "FAIL"
}