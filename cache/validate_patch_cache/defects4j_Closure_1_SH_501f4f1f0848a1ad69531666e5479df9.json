{
    "patch": "    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    int numArgsToRemove = 0;\n    // Count the number of unreferenced args at the end of the parameter list\n    for (int i = argList.getChildCount() - 1; i >= 0; i--) {\n      Var var = fnScope.getVar(argList.getChildAtIndex(i).getString());\n      if (referenced.contains(var)) {\n        break;\n      }\n      numArgsToRemove++;\n    }\n\n    if (numArgsToRemove == 0) {\n      return;\n    }\n\n    // Remove the unreferenced args\n    for (int i = 0; i < numArgsToRemove; i++) {\n      argList.removeChild(argList.getLastChild());\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5f1e5072 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,33 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    int numArgsToRemove = 0;\n+    // Count the number of unreferenced args at the end of the parameter list\n+    for (int i = argList.getChildCount() - 1; i >= 0; i--) {\n+      Var var = fnScope.getVar(argList.getChildAtIndex(i).getString());\n+      if (referenced.contains(var)) {\n+        break;\n+      }\n+      numArgsToRemove++;\n+    }\n+\n+    if (numArgsToRemove == 0) {\n+      return;\n+    }\n+\n+    // Remove the unreferenced args\n+    for (int i = 0; i < numArgsToRemove; i++) {\n+      argList.removeChild(argList.getLastChild());\n+      compiler.reportCodeChange();\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}