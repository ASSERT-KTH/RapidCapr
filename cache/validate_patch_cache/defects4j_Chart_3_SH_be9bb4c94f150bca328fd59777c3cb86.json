{
    "patch": "copy.data = new java.util.ArrayList(this.data.size());\n\nif (this.data.size() > 0) {\n    boolean foundFirstNonZero = false;\n    double minYValue = Double.MAX_VALUE;\n\n    for (int index = 0; index < this.data.size(); index++) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n\n        if (index >= start && index <= end) {\n            if (!foundFirstNonZero) {\n                foundFirstNonZero = true;\n                minYValue = item.getY().doubleValue();\n            }\n\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n\n            try {\n                copy.add(clone);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n\n        if (foundFirstNonZero) {\n            minYValue = Math.min(minYValue, item.getY().doubleValue());\n        }\n    }\n\n    if (minYValue != Double.MAX_VALUE) {\n        copy.domainLowBound = this.getDomainLowerBound();\n        copy.domainUpperBound = this.getDomainUpperBound();\n        copy.rangeBounds = new Range(minYValue, this.getMaxY());\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..7e4bfe3 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,41 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList(this.data.size());\n+\n+if (this.data.size() > 0) {\n+    boolean foundFirstNonZero = false;\n+    double minYValue = Double.MAX_VALUE;\n+\n+    for (int index = 0; index < this.data.size(); index++) {\n+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+\n+        if (index >= start && index <= end) {\n+            if (!foundFirstNonZero) {\n+                foundFirstNonZero = true;\n+                minYValue = item.getY().doubleValue();\n+            }\n+\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+\n+            try {\n+                copy.add(clone);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        if (foundFirstNonZero) {\n+            minYValue = Math.min(minYValue, item.getY().doubleValue());\n+        }\n+    }\n+\n+    if (minYValue != Double.MAX_VALUE) {\n+        copy.domainLowBound = this.getDomainLowerBound();\n+        copy.domainUpperBound = this.getDomainUpperBound();\n+        copy.rangeBounds = new Range(minYValue, this.getMaxY());\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}