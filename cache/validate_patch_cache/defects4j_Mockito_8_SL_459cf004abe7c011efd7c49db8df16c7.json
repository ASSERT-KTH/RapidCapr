{
    "patch": "```\n} else if (actualTypeArgument instanceof TypeVariable && contextualActualTypeParameters.containsKey(actualTypeArgument)) {\n    Type resolvedActualTypeArgument = this.contextualActualTypeParameters.getOrDefault(actualTypeArgument, null);\n    if (resolvedActualTypeArgument instanceof TypeVariable) {\n        contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n    } else {\n        contextualActualTypeParameters.put(typeParameter, resolvedActualTypeArgument);\n    }\n} else {\n    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n}\n```",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..5eebc7cb2 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,18 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+```\n+} else if (actualTypeArgument instanceof TypeVariable && contextualActualTypeParameters.containsKey(actualTypeArgument)) {\n+    Type resolvedActualTypeArgument = this.contextualActualTypeParameters.getOrDefault(actualTypeArgument, null);\n+    if (resolvedActualTypeArgument instanceof TypeVariable) {\n+        contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n+    } else {\n+        contextualActualTypeParameters.put(typeParameter, resolvedActualTypeArgument);\n+    }\n+} else {\n+    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n+}\n+```\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: illegal character: '`'",
    "test_result": "ERROR"
}