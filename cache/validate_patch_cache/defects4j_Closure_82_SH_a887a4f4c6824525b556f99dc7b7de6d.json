{
    "patch": "if (isNoType() || isNoObjectType() || isNoResolvedType() || isUnknownType()) {\n      return true;\n}\nif (isArrayType()) {\n    return ((ArrayType) this).getElementType().isEmptyType();\n}\nif (isUnionType()) {\n    return ((UnionType) this).isEmptyType();\n}\nif (isTypeParameter()) {\n    return ((TypeParameter) this).isExtendEmptyType();\n}\nif (isClassType()) {\n    return ((ClassType) this).isExtendEmptyType();\n}\nreturn false;",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..46dd2fd9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,22 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+if (isNoType() || isNoObjectType() || isNoResolvedType() || isUnknownType()) {\n+      return true;\n+}\n+if (isArrayType()) {\n+    return ((ArrayType) this).getElementType().isEmptyType();\n+}\n+if (isUnionType()) {\n+    return ((UnionType) this).isEmptyType();\n+}\n+if (isTypeParameter()) {\n+    return ((TypeParameter) this).isExtendEmptyType();\n+}\n+if (isClassType()) {\n+    return ((ClassType) this).isExtendEmptyType();\n+}\n+return false;\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}