{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int strLen = sequence.length();\n    final int searchLen = searchChars.length;\n    final int strLast = strLen - 1;\n    final int searchLast = searchLen - 1;\n    for (int i = 0; i < strLen; i++) {\n        final char ch = sequence.charAt(i);\n        if (isHighSurrogate(ch)) {\n            if (searchLast == -1) {\n                continue;\n            }\n            if (i < strLast && containsChar(searchChars, sequence.charAt(i + 1))) {\n                return true;\n            }\n        } else {\n            if (containsChar(searchChars, ch)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean containsChar(final char[] array, final char ch) {\n    for (final char element : array) {\n        if (element == ch) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate static boolean isHighSurrogate(final char ch) {\n    return ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..20e1f909 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,44 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char... searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int strLen = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int strLast = strLen - 1;\n+    final int searchLast = searchLen - 1;\n+    for (int i = 0; i < strLen; i++) {\n+        final char ch = sequence.charAt(i);\n+        if (isHighSurrogate(ch)) {\n+            if (searchLast == -1) {\n+                continue;\n+            }\n+            if (i < strLast && containsChar(searchChars, sequence.charAt(i + 1))) {\n+                return true;\n+            }\n+        } else {\n+            if (containsChar(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean containsChar(final char[] array, final char ch) {\n+    for (final char element : array) {\n+        if (element == ch) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isHighSurrogate(final char ch) {\n+    return ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}