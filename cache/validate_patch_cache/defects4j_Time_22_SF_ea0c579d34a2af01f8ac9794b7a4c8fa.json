{
    "patch": "protected BasePeriod(long duration) {\n    super(duration);\n    setPeriodType(PeriodType.standard().withMillisRemoved());\n    setYears(0);\n    setMonths(0);\n    setDays(0);\n    setHours(0);\n    setMinutes(0);\n    setSeconds(0);\n    setMillis(0);\n    if (duration >= DateTimeConstants.MILLIS_PER_WEEK) {\n        setWeeks((int) (duration / DateTimeConstants.MILLIS_PER_WEEK));\n        duration = duration % DateTimeConstants.MILLIS_PER_WEEK;\n    }\n    setMillis(duration);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..86485fe3 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,22 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super(duration);\n+    setPeriodType(PeriodType.standard().withMillisRemoved());\n+    setYears(0);\n+    setMonths(0);\n+    setDays(0);\n+    setHours(0);\n+    setMinutes(0);\n+    setSeconds(0);\n+    setMillis(0);\n+    if (duration >= DateTimeConstants.MILLIS_PER_WEEK) {\n+        setWeeks((int) (duration / DateTimeConstants.MILLIS_PER_WEEK));\n+        duration = duration % DateTimeConstants.MILLIS_PER_WEEK;\n+    }\n+    setMillis(duration);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}