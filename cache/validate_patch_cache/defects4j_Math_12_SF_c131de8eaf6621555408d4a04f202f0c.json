{
    "patch": "import java.util.Arrays;\nimport java.util.Random;\n\npublic class Distribution {\n\n    private double[] probabilities;\n    private Random random;\n\n    /**\n     * Creates a new distribution with the given probabilities.\n     * \n     * @param probabilities\n     *            the probabilities. Must sum to 1.\n     * @throws IllegalArgumentException\n     *             if the probabilities don't sum to 1\n     */\n    public Distribution(double[] probabilities) {\n        this.probabilities = probabilities;\n        random = new Random();\n        if (Math.abs(Arrays.stream(probabilities).sum() - 1.0) > 0.00001) {\n            throw new IllegalArgumentException(\"Probabilities must sum to 1.0\");\n        }\n    }\n\n    /**\n     * Returns a random index, according to the distribution's probabilities.\n     */\n    public int nextIndex() {\n        double r = random.nextDouble();\n        double sum = probabilities[0];\n        int i = 0;\n        while (sum < r) {\n            i++;\n            sum += probabilities[i];\n        }\n        return i;\n    }\n\n    /**\n     * Returns a new distribution with the same probabilities.\n     */\n    public Distribution clone() {\n        return new Distribution(Arrays.copyOf(probabilities, probabilities.length));\n    }\n\n\n      public static void main(String[] args) {\n        double[] values = {0.2, 0.3, 0.25, 0.25};\n        Distribution distribution = new Distribution(values);\n        double[] clonedValues = distribution.clone().probabilities;\n\n        double sum1 = Arrays.stream(values).sum();\n        double sum2 = Arrays.stream(clonedValues).sum();\n\n        double s1 = 0;\n        double s2 = 0;\n        for (int i = 0; i < 1000; i++) {\n            s1 += distribution.nextIndex();\n            s2 += new Distribution(clonedValues).nextIndex();\n        }\n\n        Assert.assertEquals(sum1, sum2, 0d);\n        Assert.assertEquals(s1, s2, 30d);\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}