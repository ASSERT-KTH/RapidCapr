{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int len = str.length();\n    int searchLen = searchChars.length;\n    int strCount = len - searchLen;\n    if (strCount < 0) {\n        return false;\n    }\n    for (int i = 0; i <= strCount; i++) {\n        int j = 0;\n        int k = i;\n        while (j < searchLen && str.charAt(k) == searchChars[j]) {\n            k++;\n            j++;\n        }\n        if (j == searchLen) {\n            return true;\n        }\n        // handle supplementary characters\n        if (Character.isHighSurrogate(str.charAt(k))) {\n            if (j == searchLen - 1) {\n                return false;\n            }\n            if (k < len && Character.isLowSurrogate(str.charAt(k + 1))) {\n                k++;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..13ff9a02 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,38 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int len = str.length();\n+    int searchLen = searchChars.length;\n+    int strCount = len - searchLen;\n+    if (strCount < 0) {\n+        return false;\n+    }\n+    for (int i = 0; i <= strCount; i++) {\n+        int j = 0;\n+        int k = i;\n+        while (j < searchLen && str.charAt(k) == searchChars[j]) {\n+            k++;\n+            j++;\n+        }\n+        if (j == searchLen) {\n+            return true;\n+        }\n+        // handle supplementary characters\n+        if (Character.isHighSurrogate(str.charAt(k))) {\n+            if (j == searchLen - 1) {\n+                return false;\n+            }\n+            if (k < len && Character.isLowSurrogate(str.charAt(k + 1))) {\n+                k++;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}