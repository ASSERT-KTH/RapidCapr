{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    int correctedOffset = offsetLocal;\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - correctedOffset);\n    if (nextLocal != nextAdjusted) {\n        correctedOffset = getOffset(nextLocal);\n        while (correctedOffset < offsetLocal) {\n            nextLocal = nextTransition(nextLocal);\n            correctedOffset = getOffset(nextLocal);\n        }\n    }\n    return correctedOffset;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..9681a544 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,19 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    int correctedOffset = offsetLocal;\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - correctedOffset);\n+    if (nextLocal != nextAdjusted) {\n+        correctedOffset = getOffset(nextLocal);\n+        while (correctedOffset < offsetLocal) {\n+            nextLocal = nextTransition(nextLocal);\n+            correctedOffset = getOffset(nextLocal);\n+        }\n+    }\n+    return correctedOffset;\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}