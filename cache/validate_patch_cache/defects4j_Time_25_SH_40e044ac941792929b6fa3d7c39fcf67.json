{
    "patch": "                if (offsetLocal < offsetAdjusted) {\n                    // we are in a \"gap\" hour, so the previous offset should be used\n                    int offsetBeforeTransition = getOffsetBeforeTransition(instantLocal);\n                    if (offsetBeforeTransition != offsetLocal) {\n                        return offsetBeforeTransition;\n                    }\n                } else {\n                    // we are in an \"overlap\" hour, so the previous offset should still be used\n                    int offsetBeforeTransition = getOffsetBeforeTransition(instantAdjusted);\n                    if (offsetBeforeTransition == offsetAdjusted) {\n                        return offsetLocal;\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..db2e2b58 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if (offsetLocal < offsetAdjusted) {\n+                    // we are in a \"gap\" hour, so the previous offset should be used\n+                    int offsetBeforeTransition = getOffsetBeforeTransition(instantLocal);\n+                    if (offsetBeforeTransition != offsetLocal) {\n+                        return offsetBeforeTransition;\n+                    }\n+                } else {\n+                    // we are in an \"overlap\" hour, so the previous offset should still be used\n+                    int offsetBeforeTransition = getOffsetBeforeTransition(instantAdjusted);\n+                    if (offsetBeforeTransition == offsetAdjusted) {\n+                        return offsetLocal;\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}