{
    "patch": "public static ReturnValues createReturnValue(Type returnType) {\n    if (returnType instanceof Class) {\n        Class<?> returnClass = (Class<?>) returnType;\n        if (returnClass.isPrimitive()) {\n            if (returnClass.equals(boolean.class)) {\n                return new ReturnValues(false);\n            } else if (...) {\n                ...\n            } else {\n                return new ReturnValues(0);\n            }\n        } else {\n            return new ReturnValues(null);\n        }\n    } else {\n        return new ReturnValues(null);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}