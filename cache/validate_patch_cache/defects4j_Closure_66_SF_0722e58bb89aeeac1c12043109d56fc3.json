{
    "patch": "public static double getTypedPercent(String jsonString) {\n    try {\n        JSONObject obj = new JSONObject(jsonString);\n        JSONArray arr = obj.getJSONArray(\"values\");\n        int total = 0;\n        int typed = 0;\n        for (int i=0; i<arr.length(); i++) {\n            JSONObject item = arr.getJSONObject(i);\n            if (item.has(\"isTyped\")) {\n                boolean isTyped = item.getBoolean(\"isTyped\");\n                if (isTyped) {\n                    typed++;\n                }\n            }\n            total++;\n        }\n        return (100.0 * typed) / total;\n    } catch (JSONException e) {\n        e.printStackTrace();\n        return -1;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..020506a2 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,28 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonString) {\n+    try {\n+        JSONObject obj = new JSONObject(jsonString);\n+        JSONArray arr = obj.getJSONArray(\"values\");\n+        int total = 0;\n+        int typed = 0;\n+        for (int i=0; i<arr.length(); i++) {\n+            JSONObject item = arr.getJSONObject(i);\n+            if (item.has(\"isTyped\")) {\n+                boolean isTyped = item.getBoolean(\"isTyped\");\n+                if (isTyped) {\n+                    typed++;\n+                }\n+            }\n+            total++;\n+        }\n+        return (100.0 * typed) / total;\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+        return -1;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}