{
    "patch": "public static int gcd(int u, int v) {\n    if (u == 0) {\n        return Math.abs(v);\n    }\n    if (v == 0) {\n        return Math.abs(u);\n    }\n    u = Math.abs(u);\n    v = Math.abs(v);\n    int r;\n    while (v != 0) {\n        r = u % v;\n        u = v;\n        v = r;\n    }\n    return u;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java\nindex c5342aeb3..612518da8 100644\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n@@ -409,7 +409,23 @@ public final class MathUtils {\n      * @since 1.1\n      */\n     public static int gcd(int u, int v) {\n-        if (u * v == 0) {\n+public static int gcd(int u, int v) {\n+    if (u == 0) {\n+        return Math.abs(v);\n+    }\n+    if (v == 0) {\n+        return Math.abs(u);\n+    }\n+    u = Math.abs(u);\n+    v = Math.abs(v);\n+    int r;\n+    while (v != 0) {\n+        r = u % v;\n+        u = v;\n+        v = r;\n+    }\n+    return u;\n+}\n             return (Math.abs(u) + Math.abs(v));\n         }\n         // keep u and v negative, as negative integers range down to",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}