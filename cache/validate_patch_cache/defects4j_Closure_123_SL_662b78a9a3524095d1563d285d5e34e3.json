{
    "patch": "int lhsInt = (0 in lhsArray) ? 1 : 0;\nint rhsInt = (0 in rhsArray) ? 1 : 0; \nboolean result; Context rhsContext;\nresult = (lhsInt == rhsInt);\nif (!result)\n    if (lhsInt == 0 && rhsInt == 1)\n        result = true;\n    else if (lhsInt == 1 && rhsInt == 0)\n        result = true;\n    else if (lhsInt == 1 && rhsInt == 1) {\n        if (d == null || d.length == 0) Boolean.FALSE.booleanValue() else (0 in d);\n    }\nassertEquals(expected, result);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}