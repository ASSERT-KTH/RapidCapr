{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (result == null) {\n        throw new IllegalStateException(\"JSDoc line is null\");\n    }\n    result = result.trim().replace(\"\\n\", \" \");\n    if (result.isEmpty()) {\n        return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    boolean spaceNeeded = false;\n    for (int i = 0; i < result.length(); i++) {\n        char c = result.charAt(i);\n        if (c == '*') {\n            spaceNeeded = true;\n        } else if (Character.isWhitespace(c)) {\n            spaceNeeded = true;\n        } else {\n            if (spaceNeeded) {\n                sb.append(' ');\n                spaceNeeded = false;\n            }\n            sb.append(c);\n        }\n    }\n    String finalResult = sb.toString().trim();\n    if (finalResult.endsWith(\".\")) {\n        finalResult = finalResult.substring(0, finalResult.length() - 1).trim();\n    }\n    return finalResult;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..d2db1377 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,37 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+    if (result == null) {\n+        throw new IllegalStateException(\"JSDoc line is null\");\n+    }\n+    result = result.trim().replace(\"\\n\", \" \");\n+    if (result.isEmpty()) {\n+        return \"\";\n+    }\n+    StringBuilder sb = new StringBuilder();\n+    boolean spaceNeeded = false;\n+    for (int i = 0; i < result.length(); i++) {\n+        char c = result.charAt(i);\n+        if (c == '*') {\n+            spaceNeeded = true;\n+        } else if (Character.isWhitespace(c)) {\n+            spaceNeeded = true;\n+        } else {\n+            if (spaceNeeded) {\n+                sb.append(' ');\n+                spaceNeeded = false;\n+            }\n+            sb.append(c);\n+        }\n+    }\n+    String finalResult = sb.toString().trim();\n+    if (finalResult.endsWith(\".\")) {\n+        finalResult = finalResult.substring(0, finalResult.length() - 1).trim();\n+    }\n+    return finalResult;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "junit.framework.ComparisonFailure: expected:<Another[ function.]> but was:<Another[function]>",
    "test_result": "FAIL"
}