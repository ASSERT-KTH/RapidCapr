{
    "patch": "public static List<Integer> remove_duplicates(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<Integer>();\n    HashMap<Integer, Integer> count = new HashMap<Integer, Integer>();\n    \n    for (Integer n : numbers){\n        count.compute(n, (k, v) -> (v == null) ? 1 : v + 1);\n    }\n\n    for (Integer n : count.keySet()){\n        if (count.get(n) == 1) {\n            result.add(n);\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/REMOVE_DUPLICATES.java b/src/main/java/humaneval/buggy/REMOVE_DUPLICATES.java\nindex 526f5cb..6a453c7 100644\n--- a/src/main/java/humaneval/buggy/REMOVE_DUPLICATES.java\n+++ b/src/main/java/humaneval/buggy/REMOVE_DUPLICATES.java\n@@ -5,19 +5,20 @@ import java.util.HashMap;\n import java.util.List;\n \n public class REMOVE_DUPLICATES {\n-    public static List<Integer> remove_duplicates(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        HashMap<Integer, Integer> count = new HashMap<Integer, Integer>();\n-        \n-        for (Integer n : numbers){\n-            count.put(n, count.get(n) + 1);\n-        }\n+public static List<Integer> remove_duplicates(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<Integer>();\n+    HashMap<Integer, Integer> count = new HashMap<Integer, Integer>();\n+    \n+    for (Integer n : numbers){\n+        count.compute(n, (k, v) -> (v == null) ? 1 : v + 1);\n+    }\n \n-        for (Integer n : numbers){\n-            if (count.get(n) == 1)\n-                result.add(n);\n+    for (Integer n : count.keySet()){\n+        if (count.get(n) == 1) {\n+            result.add(n);\n         }\n-\n-        return result;\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}