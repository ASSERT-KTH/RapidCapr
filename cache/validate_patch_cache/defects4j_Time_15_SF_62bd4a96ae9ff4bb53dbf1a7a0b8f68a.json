{
    "patch": "    public static long safeMultiply(long val1, int val2) {\n        if(val1==Long.MIN_VALUE && val2==-1)\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        long total = val1 * val2;\n        if (val2 != 0 && total / val2 != val1) {\n          throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        return total;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..0d7d0ad2 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -133,16 +133,10 @@ public class FieldUtils {\n      * @since 1.2\n      */\n     public static long safeMultiply(long val1, int val2) {\n-        switch (val2) {\n-            case -1:\n-                return -val1;\n-            case 0:\n-                return 0L;\n-            case 1:\n-                return val1;\n-        }\n+        if(val1==Long.MIN_VALUE && val2==-1)\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n         long total = val1 * val2;\n-        if (total / val2 != val1) {\n+        if (val2 != 0 && total / val2 != val1) {\n           throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n         }\n         return total;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}