{
    "patch": "for (int i = 0, len = hex.length(); i < len; i++) {\n    char c = hex.charAt(i);\n    if (Character.isDigit(c)) {\n        out = (out << 4) + (c - '0');\n    } else if ('a' <= c && c <= 'f') {\n        out = (out << 4) + (c - 'a') + 10;\n    } else if ('A' <= c && c <= 'F') {\n        out = (out << 4) + (c - 'A') + 10;\n    } else if (c == '+') {\n        out = (out << 4) + 0x20;\n    } else {\n        out = (out << 4) + (c + 0x80);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}