{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n\tif (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n\t\treturn false;\n\t}\n\tfor (int i = 0; i < str.length(); i++) {\n\t\tchar ch = str.charAt(i);\n\t\tfor (int j = 0; j < searchChars.length; j++) {\n\t\t\tif (searchChars[j] == ch) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Character.isHighSurrogate(ch) && j < searchChars.length - 1 && searchChars[j + 1]!=0 && Character.isLowSurrogate(searchChars[j + 1])) {\n\t\t\t\tint codePoint = Character.toCodePoint(ch, searchChars[j + 1]);\n\t\t\t\tif (StringUtils.contains(codePoint, searchChars)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..f62d48df 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,26 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+\tif (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+\t\treturn false;\n+\t}\n+\tfor (int i = 0; i < str.length(); i++) {\n+\t\tchar ch = str.charAt(i);\n+\t\tfor (int j = 0; j < searchChars.length; j++) {\n+\t\t\tif (searchChars[j] == ch) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\tif (Character.isHighSurrogate(ch) && j < searchChars.length - 1 && searchChars[j + 1]!=0 && Character.isLowSurrogate(searchChars[j + 1])) {\n+\t\t\t\tint codePoint = Character.toCodePoint(ch, searchChars[j + 1]);\n+\t\t\t\tif (StringUtils.contains(codePoint, searchChars)) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}