{
    "patch": "StringBuilder result = new StringBuilder(input.length());\nfor (int i = 0; i < input.length(); i++) {\n    char c = input.charAt(i);\n    if (c == '+') {\n        result.append(' ');\n    } else if (c == '%') {\n        if (i + 2 < input.length()) {\n            try {\n                char hex1 = input.charAt(i + 1);\n                char hex2 = input.charAt(i + 2);\n                int value = Integer.parseInt(\"\" + hex1 + hex2, 16);\n                if (value > 0 && value < 128) {\n                    result.append((char) value);\n                } else {\n                    result.append('?');\n                }\n                i += 2;\n            } catch (NumberFormatException e) {\n                result.append('?');\n            }\n        } else {\n            result.append('?');\n        }\n    } else {\n        result.append(c);\n    }\n}\nString output = result.toString();\nassertTrue(\"One or more errors detected\", input.equals(output));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}