{
    "patch": "protected BasePeriod(long duration) {\n    this(duration, PeriodType.forFields(new DurationFieldType[]{DurationFieldType.years(),\n            DurationFieldType.months(),\n            DurationFieldType.weeks(),\n            DurationFieldType.days(),\n            DurationFieldType.hours(),\n            DurationFieldType.minutes(),\n            DurationFieldType.seconds(),\n            DurationFieldType.millis()})\n        .withMonthsRemoved()\n        .withYearsRemoved()\n        .withWeeksRemoved(), null);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..45154383 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,19 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    this(duration, PeriodType.forFields(new DurationFieldType[]{DurationFieldType.years(),\n+            DurationFieldType.months(),\n+            DurationFieldType.weeks(),\n+            DurationFieldType.days(),\n+            DurationFieldType.hours(),\n+            DurationFieldType.minutes(),\n+            DurationFieldType.seconds(),\n+            DurationFieldType.millis()})\n+        .withMonthsRemoved()\n+        .withYearsRemoved()\n+        .withWeeksRemoved(), null);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0> but was:<450>",
    "test_result": "FAIL"
}