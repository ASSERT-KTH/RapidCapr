{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    } else {\n        int index = 3;\n        char ch = str.charAt(index);\n        if (!Character.isUpperCase(ch)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        while (index < len && ch != '_') {\n            index++;\n            if (index < len) {\n                ch = str.charAt(index);\n                if (index == 5 && ch != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (index == 6 && ch == '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (index > 6 && ch == '_') {\n                    break;\n                }\n                if (!Character.isUpperCase(ch) && !Character.isDigit(ch)) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n        }\n        if (index == 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (index == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else if (index <= len) {\n            if (index == len - 1) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, index));\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..87f51370 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,63 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+public static Locale toLocale(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len != 2 && len != 5 && len < 7) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    } else if (str.charAt(2) != '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    } else {\n+        int index = 3;\n+        char ch = str.charAt(index);\n+        if (!Character.isUpperCase(ch)) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        while (index < len && ch != '_') {\n+            index++;\n+            if (index < len) {\n+                ch = str.charAt(index);\n+                if (index == 5 && ch != '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (index == 6 && ch == '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (index > 6 && ch == '_') {\n+                    break;\n+                }\n+                if (!Character.isUpperCase(ch) && !Character.isDigit(ch)) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+            }\n+        }\n+        if (index == 3) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n+        if (index == 5) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        } else if (index <= len) {\n+            if (index == len - 1) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n             } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, index));\n             }\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}