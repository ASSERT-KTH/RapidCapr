{
    "patch": "public static String unescape(String str) {\n    final StringBuilder out = new StringBuilder(str.length());\n    for (int i = 0; i < str.length();) {\n        char c = str.charAt(i);\n        if (c == '\\\\') {\n            i++;\n            if (i < str.length()) {\n                c = str.charAt(i);\n                if (c == 't') {\n                    out.append('\\t');\n                    i++;\n                    continue;\n                } else if (c == 'r') {\n                    out.append('\\r');\n                    i++;\n                    continue;\n                } else if (c == 'n') {\n                    out.append('\\n');\n                    i++;\n                    continue;\n                } else if (c == 'f') {\n                    out.append('\\f');\n                    i++;\n                    continue;\n                } else if (c == 'b') {\n                    out.append('\\b');\n                    i++;\n                    continue;\n                } else if (c == '\"') {\n                    out.append('\"');\n                    i++;\n                    continue;\n                } else if (c == '\\'') {\n                    out.append('\\'');\n                    i++;\n                    continue;\n                } else if (c == '\\\\') {\n                    out.append('\\\\');\n                    i++;\n                    continue;\n                } else if (c >= '0' && c <= '7') {\n                    int start = i;\n                    int num = c - '0';\n                    i++;\n                    if (i < str.length()) {\n                        c = str.charAt(i);\n                        if (c >= '0' && c <= '7') {\n                            num = num * 8 + (c - '0');\n                            i++;\n                            if (i < str.length()) {\n                                c = str.charAt(i);\n                                if (c >= '0' && c <= '7') {\n                                    num = num * 8 + (c - '0');\n                                    i++;\n                                }\n                            }\n                        }\n                    }\n                    out.append((char) num);\n                    continue;\n                } else if (c == 'u') {\n                    if (i + 4 < str.length()) {\n                        try {\n                            int code = Integer.parseInt(str.substring(i + 1, i + 5), 16);\n                            out.append((char) code);\n                            i += 5;\n                            continue;\n                        } catch (NumberFormatException e) {\n                            // Do nothing\n                        }\n                    }\n                } else if (c == 'U') {\n                    if (i + 8 < str.length()) {\n                        try {\n                            int code = Integer.parseInt(str.substring(i + 1, i + 9), 16);\n                            out.append((char) code);\n                            i += 9;\n                            continue;\n                        } catch (NumberFormatException e) {\n                            // Do nothing\n                        }\n                    }\n                }\n            }\n        }\n        out.append(c);\n        i++;\n    }\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..92d478f1 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,96 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str) {\n+    final StringBuilder out = new StringBuilder(str.length());\n+    for (int i = 0; i < str.length();) {\n+        char c = str.charAt(i);\n+        if (c == '\\\\') {\n+            i++;\n+            if (i < str.length()) {\n+                c = str.charAt(i);\n+                if (c == 't') {\n+                    out.append('\\t');\n+                    i++;\n+                    continue;\n+                } else if (c == 'r') {\n+                    out.append('\\r');\n+                    i++;\n+                    continue;\n+                } else if (c == 'n') {\n+                    out.append('\\n');\n+                    i++;\n+                    continue;\n+                } else if (c == 'f') {\n+                    out.append('\\f');\n+                    i++;\n+                    continue;\n+                } else if (c == 'b') {\n+                    out.append('\\b');\n+                    i++;\n+                    continue;\n+                } else if (c == '\"') {\n+                    out.append('\"');\n+                    i++;\n+                    continue;\n+                } else if (c == '\\'') {\n+                    out.append('\\'');\n+                    i++;\n+                    continue;\n+                } else if (c == '\\\\') {\n+                    out.append('\\\\');\n+                    i++;\n+                    continue;\n+                } else if (c >= '0' && c <= '7') {\n+                    int start = i;\n+                    int num = c - '0';\n+                    i++;\n+                    if (i < str.length()) {\n+                        c = str.charAt(i);\n+                        if (c >= '0' && c <= '7') {\n+                            num = num * 8 + (c - '0');\n+                            i++;\n+                            if (i < str.length()) {\n+                                c = str.charAt(i);\n+                                if (c >= '0' && c <= '7') {\n+                                    num = num * 8 + (c - '0');\n+                                    i++;\n+                                }\n+                            }\n+                        }\n+                    }\n+                    out.append((char) num);\n+                    continue;\n+                } else if (c == 'u') {\n+                    if (i + 4 < str.length()) {\n+                        try {\n+                            int code = Integer.parseInt(str.substring(i + 1, i + 5), 16);\n+                            out.append((char) code);\n+                            i += 5;\n+                            continue;\n+                        } catch (NumberFormatException e) {\n+                            // Do nothing\n+                        }\n+                    }\n+                } else if (c == 'U') {\n+                    if (i + 8 < str.length()) {\n+                        try {\n+                            int code = Integer.parseInt(str.substring(i + 1, i + 9), 16);\n+                            out.append((char) code);\n+                            i += 9;\n+                            continue;\n+                        } catch (NumberFormatException e) {\n+                            // Do nothing\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        out.append(c);\n+        i++;\n+    }\n+    return out.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}