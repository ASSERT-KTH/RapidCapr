{
    "patch": "for (Var var : fnScope.getVars()) {\n        if (var.getParentNode() == argList) {\n          // Strip unreferenced args off the end of the function declaration.\n          while ((lastArg = argList.getLastChild()) != null) {\n            if (!referenced.contains(var)) {\n              argList.removeChild(lastArg);\n              compiler.reportCodeChange();\n              if (lastArg == var.getNameNode()) {\n                break;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..75e4ebe7 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,22 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+for (Var var : fnScope.getVars()) {\n+        if (var.getParentNode() == argList) {\n+          // Strip unreferenced args off the end of the function declaration.\n+          while ((lastArg = argList.getLastChild()) != null) {\n+            if (!referenced.contains(var)) {\n+              argList.removeChild(lastArg);\n+              compiler.reportCodeChange();\n+              if (lastArg == var.getNameNode()) {\n+                break;\n+              }\n+            } else {\n+              break;\n+            }\n+          }\n+        }\n+      }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: for-each not applicable to expression type",
    "test_result": "ERROR"
}