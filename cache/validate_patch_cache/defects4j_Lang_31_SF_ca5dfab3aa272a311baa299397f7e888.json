{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int strIndex = 0;\n    while (strIndex < strLen) {\n        int high = Character.codePointAt(str, strIndex);\n        strIndex += Character.charCount(high);\n        if (searchLen == 1 \n                && Character.toString(searchChars[0]).length() == 1) {\n            if (str.indexOf(searchChars[0], strIndex - 1) >= 0) {\n                return true;\n            }\n        } else {\n            for (int i = 0; i < searchLen;) {\n                final int low = searchChars[i++];\n                if (high == low || \n                        Character.isHighSurrogate(high) \n                        && i < searchLen \n                        && low == searchChars[i]) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..4dc36df3 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int strIndex = 0;\n+    while (strIndex < strLen) {\n+        int high = Character.codePointAt(str, strIndex);\n+        strIndex += Character.charCount(high);\n+        if (searchLen == 1 \n+                && Character.toString(searchChars[0]).length() == 1) {\n+            if (str.indexOf(searchChars[0], strIndex - 1) >= 0) {\n+                return true;\n+            }\n+        } else {\n+            for (int i = 0; i < searchLen;) {\n+                final int low = searchChars[i++];\n+                if (high == low || \n+                        Character.isHighSurrogate(high) \n+                        && i < searchLen \n+                        && low == searchChars[i]) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}