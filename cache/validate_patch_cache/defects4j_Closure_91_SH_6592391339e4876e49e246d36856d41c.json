{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (parent != null && parent.getType() == Token.ASSIGN && n == parent.getLastChild()) {\n    Node lhs = parent.getFirstChild();\n    if (lhs.isGetProp()) {\n        String propName = lhs.getLastChild().getString();\n        if (\"prototype\".equals(propName)) {\n            return false;\n        }\n        Node maybeLhs = lhs.getFirstChild();\n        if (maybeLhs.isGetProp()) {\n            String maybePropName = maybeLhs.getLastChild().getString();\n            if (\"prototype\".equals(maybePropName)) {\n                return false;\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..1c4cb1a2 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,23 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (parent != null && parent.getType() == Token.ASSIGN && n == parent.getLastChild()) {\n+    Node lhs = parent.getFirstChild();\n+    if (lhs.isGetProp()) {\n+        String propName = lhs.getLastChild().getString();\n+        if (\"prototype\".equals(propName)) {\n+            return false;\n+        }\n+        Node maybeLhs = lhs.getFirstChild();\n+        if (maybeLhs.isGetProp()) {\n+            String maybePropName = maybeLhs.getLastChild().getString();\n+            if (\"prototype\".equals(maybePropName)) {\n+                return false;\n+            }\n+        }\n+    }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}