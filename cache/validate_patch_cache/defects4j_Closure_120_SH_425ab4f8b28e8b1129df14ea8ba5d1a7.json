{
    "patch": "        List<BasicBlock> assignments = new ArrayList<>();\n        for (Reference ref : references) {\n          if (ref.isAssignmentToName() && !ref.getNode().isLoopHeader()) {\n            assignments.add(ref.getBasicBlock());\n          }\n        }\n\n        if (assignments.size() == 1) {\n          // Make sure this assignment is not in a loop.\n          for (BasicBlock block = assignments.get(0);\n               block != null; block = block.getParent()) {\n            if (block.isFunction) {\n              return true;\n            } else if (block.isLoop) {\n              return false;\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..a45f9bcc 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,23 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        List<BasicBlock> assignments = new ArrayList<>();\n+        for (Reference ref : references) {\n+          if (ref.isAssignmentToName() && !ref.getNode().isLoopHeader()) {\n+            assignments.add(ref.getBasicBlock());\n+          }\n+        }\n+\n+        if (assignments.size() == 1) {\n+          // Make sure this assignment is not in a loop.\n+          for (BasicBlock block = assignments.get(0);\n+               block != null; block = block.getParent()) {\n+            if (block.isFunction) {\n+              return true;\n+            } else if (block.isLoop) {\n+              return false;\n+            }\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}