{
    "patch": "public boolean getProp4() {\n    boolean ret = false;\n    try {\n        Class<?> cls = Class.forName(\"android.os.SystemProperties\");\n        Method getPropMethod = cls.getDeclaredMethod(\"get\", String.class);\n        getPropMethod.setAccessible(true);\n\n        String value = (String) getPropMethod.invoke(null, \"debug.warning\");\n        Log.d(TAG, \"debug.warning: \" + value);\n\n        if (value != null && value.equals(\"true\")) {\n            ret = true;\n        }\n\n    } catch (ClassNotFoundException | NoSuchMethodException | SecurityException\n                | IllegalAccessException | IllegalArgumentException\n                | InvocationTargetException e) {\n        e.printStackTrace();\n    }\n\n    return ret;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..0b700c52 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,28 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public boolean getProp4() {\n+    boolean ret = false;\n+    try {\n+        Class<?> cls = Class.forName(\"android.os.SystemProperties\");\n+        Method getPropMethod = cls.getDeclaredMethod(\"get\", String.class);\n+        getPropMethod.setAccessible(true);\n+\n+        String value = (String) getPropMethod.invoke(null, \"debug.warning\");\n+        Log.d(TAG, \"debug.warning: \" + value);\n+\n+        if (value != null && value.equals(\"true\")) {\n+            ret = true;\n+        }\n+\n+    } catch (ClassNotFoundException | NoSuchMethodException | SecurityException\n+                | IllegalAccessException | IllegalArgumentException\n+                | InvocationTargetException e) {\n+        e.printStackTrace();\n+    }\n+\n+    return ret;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: multi-catch statement is not supported in -source 1.6",
    "test_result": "ERROR"
}