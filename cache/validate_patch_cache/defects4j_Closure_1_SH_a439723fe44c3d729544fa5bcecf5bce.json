{
    "patch": "    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n-      Node lastArg;\n-      while ((lastArg = argList.getLastChild()) != null) {\n+      Node currentArg = argList.getFirstChild();\n+      while (currentArg != null) {\n         Var var = fnScope.getVar(currentArg.getString());\n         if (!referenced.contains(var)) {\n-          argList.removeChild(lastArg);\n+          Node nextArg = currentArg.getNext();\n+          argList.removeChild(currentArg);\n+          currentArg = nextArg;\n           compiler.reportCodeChange();\n         } else {\n-          break;\n+          currentArg = currentArg.getNext();\n         }\n       }\n     } else {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..407c5a9a 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,36 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+-      Node lastArg;\n+-      while ((lastArg = argList.getLastChild()) != null) {\n++      Node currentArg = argList.getFirstChild();\n++      while (currentArg != null) {\n+         Var var = fnScope.getVar(currentArg.getString());\n+         if (!referenced.contains(var)) {\n+-          argList.removeChild(lastArg);\n++          Node nextArg = currentArg.getNext();\n++          argList.removeChild(currentArg);\n++          currentArg = nextArg;\n+           compiler.reportCodeChange();\n+         } else {\n+-          break;\n++          currentArg = currentArg.getNext();\n+         }\n+       }\n+     } else {\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}