{
    "patch": "public static double getTypedPercent(String[] javaScripts) {\n    if (javaScripts == null || javaScripts.length == 0)\n        return 100.0;\n    double numTyped = 0.0;\n    double numScripts = javaScripts.length;\n    for (String script : javaScripts) {\n        if (PercentageDetector.detect(script))\n            numTyped += 1.0;\n    }\n    return numTyped/numScripts * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..3e25d009 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String[] javaScripts) {\n+    if (javaScripts == null || javaScripts.length == 0)\n+        return 100.0;\n+    double numTyped = 0.0;\n+    double numScripts = javaScripts.length;\n+    for (String script : javaScripts) {\n+        if (PercentageDetector.detect(script))\n+            numTyped += 1.0;\n+    }\n+    return numTyped/numScripts * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}