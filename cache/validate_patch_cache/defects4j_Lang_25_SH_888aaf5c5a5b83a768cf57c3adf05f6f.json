{
    "patch": "StringBuilder result = new StringBuilder();\n        boolean success = true;\n        for (String input : inputs) {\n            try {\n                String encoded = codecs.encode(input);\n                if (!codecs.isEncoded(encoded)) {\n                    result.append(\"codec did not recognize encoding: \");\n                    result.append(encoded);\n                    result.append(\"\\n\");\n                    success = false;\n                } else if (!input.equals(codecs.decode(encoded))) {\n                    result.append(\"codec did not roundtrip input: \");\n                    result.append(input);\n                    result.append(\"\\n\");\n                    result.append(\"encoded form: \");\n                    result.append(encoded);\n                    result.append(\"\\n\");\n                    result.append(\"decoded form: \");\n                    result.append(codecs.decode(encoded));\n                    result.append(\"\\n\");\n                    success = false;\n                }\n            } catch (EncoderException ee) {\n                result.append(\"EncoderException: \");\n                result.append(ee);\n                result.append(\"\\n\");\n                success = false;\n            }\n        }\n        if (!success) {\n            fail(result.toString());\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}