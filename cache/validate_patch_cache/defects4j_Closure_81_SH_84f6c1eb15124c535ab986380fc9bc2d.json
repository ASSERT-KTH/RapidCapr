{
    "patch": "  private Set<String> analyzeTheming(List<String> rules,\n      Set<String> fontNamesAndSizes, Set<String> colors) {\n    List<String> matches = this.matchRegex(regexFontNamesAndSizes, rules);\n    matches.addAll(this.matchRegex(regexFontSizes, matches));\n    matches.addAll(this.matchRegex(regexFontFamilies, matches));\n    matches.addAll(this.matchRegex(regexColors, rules));\n\n    Set<String> missing = new HashSet<>();\n    if (fontNamesAndSizes != null && !fontNamesAndSizes.isEmpty()) {\n      missing.addAll(fontNamesAndSizes);\n    }\n    Set<String> missingColors = new HashSet<>(\n        colors != null && !colors.isEmpty() ? colors : defaultColors);\n\n    for (String match : matches) {\n      if (!missing.isEmpty() && this.removeMatch(match, missing)) {\n        if (missing.isEmpty() && missingColors.isEmpty()) {\n          break; // no more missing values\n        }\n      } else if (!missingColors.isEmpty() && this.removeMatch(match, missingColors)) {\n        if (missing.isEmpty() && missingColors.isEmpty()) {\n          break; // no more missing values\n        }\n      }\n    }\n\n    return missing.isEmpty() && missingColors.isEmpty() ? null : missing;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..5ec8484d 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,34 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+  private Set<String> analyzeTheming(List<String> rules,\n+      Set<String> fontNamesAndSizes, Set<String> colors) {\n+    List<String> matches = this.matchRegex(regexFontNamesAndSizes, rules);\n+    matches.addAll(this.matchRegex(regexFontSizes, matches));\n+    matches.addAll(this.matchRegex(regexFontFamilies, matches));\n+    matches.addAll(this.matchRegex(regexColors, rules));\n+\n+    Set<String> missing = new HashSet<>();\n+    if (fontNamesAndSizes != null && !fontNamesAndSizes.isEmpty()) {\n+      missing.addAll(fontNamesAndSizes);\n+    }\n+    Set<String> missingColors = new HashSet<>(\n+        colors != null && !colors.isEmpty() ? colors : defaultColors);\n+\n+    for (String match : matches) {\n+      if (!missing.isEmpty() && this.removeMatch(match, missing)) {\n+        if (missing.isEmpty() && missingColors.isEmpty()) {\n+          break; // no more missing values\n+        }\n+      } else if (!missingColors.isEmpty() && this.removeMatch(match, missingColors)) {\n+        if (missing.isEmpty() && missingColors.isEmpty()) {\n+          break; // no more missing values\n+        }\n+      }\n+    }\n+\n+    return missing.isEmpty() && missingColors.isEmpty() ? null : missing;\n+  }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}