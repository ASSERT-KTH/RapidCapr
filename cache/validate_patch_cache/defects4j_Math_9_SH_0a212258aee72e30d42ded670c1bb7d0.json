{
    "patch": "final Vector revertedDirection = new Vector(-this.direction.x, -this.direction.y, -this.direction.z);\nfinal Point revertedStart = this.start.translate(revertedDirection);\nreturn new Line(revertedStart, revertedDirection);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..e66b9c634 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,9 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+final Vector revertedDirection = new Vector(-this.direction.x, -this.direction.y, -this.direction.z);\n+final Point revertedStart = this.start.translate(revertedDirection);\n+return new Line(revertedStart, revertedDirection);\n         return reverted;\n     }\n ",
    "result_reason": "error: x has private access in Vector3D",
    "test_result": "ERROR"
}