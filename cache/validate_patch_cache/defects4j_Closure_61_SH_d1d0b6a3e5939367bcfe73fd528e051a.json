{
    "patch": "      // Functions in the \"Math\" namespace have no side effects.\n      if (nameNode.getFirstChild().getType() == Token.NAME) {\n        String functionName = nameNode.getFirstChild().getString();\n        if (\"Math\".equals(functionName)) {\n          return false;\n        }\n      }\n\n      if (compiler != null && !compiler.hasRegExpGlobalReferences()) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..a9af591c 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,15 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+      // Functions in the \"Math\" namespace have no side effects.\n+      if (nameNode.getFirstChild().getType() == Token.NAME) {\n+        String functionName = nameNode.getFirstChild().getString();\n+        if (\"Math\".equals(functionName)) {\n+          return false;\n+        }\n+      }\n+\n+      if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}