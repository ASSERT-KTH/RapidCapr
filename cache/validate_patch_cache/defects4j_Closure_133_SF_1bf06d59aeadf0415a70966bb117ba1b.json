{
    "patch": "  private String getRemainingJSDocLine() {\n    if (stream.matches(\"@\")) {\n      // Skip annotation at beginning of line\n      stream.match(/@\\S*/);\n    }\n    String result = stream.string().substring(stream.pos());\n    stream.start = stream.string().length();\n    stream.eol();\n    return result;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..3f0011fc 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2397,7 +2397,13 @@ public final class JsDocInfoParser {\n    * Returns the remainder of the line.\n    */\n   private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n+    if (stream.matches(\"@\")) {\n+      // Skip annotation at beginning of line\n+      stream.match(/@\\S*/);\n+    }\n+    String result = stream.string().substring(stream.pos());\n+    stream.start = stream.string().length();\n+    stream.eol();\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}