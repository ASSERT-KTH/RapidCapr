{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int len = sequence.length();\n    final int searchLen = searchChars.length;\n    final int stopLoop = len - searchLen;\n    for (int i = 0; i <= stopLoop; i++) {\n        for (int j = 0; j < searchLen; j++) {\n            final char ch = sequence.charAt(i + j);\n            if (Character.isHighSurrogate(ch) && j < searchLen - 1) {\n                final char ch2 = sequence.charAt(i + j + 1);\n                final int codePoint = Character.toCodePoint(ch, ch2);\n                if (Arrays.binarySearch(searchChars, (char) codePoint) >= 0) {\n                    return true;\n                }\n            } else {\n                if (Arrays.binarySearch(searchChars, ch) >= 0) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..6fa55f8c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int len = sequence.length();\n+    final int searchLen = searchChars.length;\n+    final int stopLoop = len - searchLen;\n+    for (int i = 0; i <= stopLoop; i++) {\n+        for (int j = 0; j < searchLen; j++) {\n+            final char ch = sequence.charAt(i + j);\n+            if (Character.isHighSurrogate(ch) && j < searchLen - 1) {\n+                final char ch2 = sequence.charAt(i + j + 1);\n+                final int codePoint = Character.toCodePoint(ch, ch2);\n+                if (Arrays.binarySearch(searchChars, (char) codePoint) >= 0) {\n+                    return true;\n+                }\n+            } else {\n+                if (Arrays.binarySearch(searchChars, ch) >= 0) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}