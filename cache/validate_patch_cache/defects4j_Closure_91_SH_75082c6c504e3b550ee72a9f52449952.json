{
    "patch": "if (NodeUtil.isFunctionExpression(n)) {\n    return !(isLValue(lhs) && isPrototypeProperty(lhs));\n}\nreturn true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..3d637c5e 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,10 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+if (NodeUtil.isFunctionExpression(n)) {\n+    return !(isLValue(lhs) && isPrototypeProperty(lhs));\n+}\n+return true;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}