{
    "patch": "    double[] coords = zero.toArray();\n    double[] coordsMinusDirection = dir.negate().toArray();\n    final Line reverted = new Line(\n            new Vector3D(coords[0], coords[1], coords[2]),\n            new Vector3D(coordsMinusDirection[0], coordsMinusDirection[1], coordsMinusDirection[2]));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..9105ac5b7 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,11 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+    double[] coords = zero.toArray();\n+    double[] coordsMinusDirection = dir.negate().toArray();\n+    final Line reverted = new Line(\n+            new Vector3D(coords[0], coords[1], coords[2]),\n+            new Vector3D(coordsMinusDirection[0], coordsMinusDirection[1], coordsMinusDirection[2]));\n         return reverted;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}