{
    "patch": "Name name = functionNode.getFunctionName();\nif (name == null || name.getIdentifier().isEmpty()) {\n  name = new Name();\n  name.setIdentifier(\"\");\n  name.setLineno(functionNode.getLineno());\n  name.putProp(Node.ORIGINALNAME_PROP, \"\");\n  name.setParent(functionNode);\n  functionNode.setFunctionName(name);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..32c65c96 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,15 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name name = functionNode.getFunctionName();\n+if (name == null || name.getIdentifier().isEmpty()) {\n+  name = new Name();\n+  name.setIdentifier(\"\");\n+  name.setLineno(functionNode.getLineno());\n+  name.putProp(Node.ORIGINALNAME_PROP, \"\");\n+  name.setParent(functionNode);\n+  functionNode.setFunctionName(name);\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}