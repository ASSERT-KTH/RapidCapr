{
    "patch": "public final boolean isEmptyType() {\n    if (isNoType()) {\n        System.err.println(\"Warning: isEmptyType() called with NoType.\");\n        return true;\n    } else if (isNoObjectType()) {\n        System.err.println(\"Warning: isEmptyType() called with NoObjectType.\");\n        return true;\n    } else if (isNoResolvedType()) {\n        System.err.println(\"Warning: isEmptyType() called with NoResolvedType.\");\n        return true;\n    } else if (isUnknownType()) {\n        System.err.println(\"Warning: isEmptyType() called with UnknownType.\");\n        return true;\n    } else if (isNullType()) {\n        System.err.println(\"Warning: isEmptyType() called with NullType.\");\n        return true;\n    } else if (isVoidType()) {\n        System.err.println(\"Warning: isEmptyType() called with VoidType.\");\n        return true;\n    } else {\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..9d31bdcb 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,29 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    if (isNoType()) {\n+        System.err.println(\"Warning: isEmptyType() called with NoType.\");\n+        return true;\n+    } else if (isNoObjectType()) {\n+        System.err.println(\"Warning: isEmptyType() called with NoObjectType.\");\n+        return true;\n+    } else if (isNoResolvedType()) {\n+        System.err.println(\"Warning: isEmptyType() called with NoResolvedType.\");\n+        return true;\n+    } else if (isUnknownType()) {\n+        System.err.println(\"Warning: isEmptyType() called with UnknownType.\");\n+        return true;\n+    } else if (isNullType()) {\n+        System.err.println(\"Warning: isEmptyType() called with NullType.\");\n+        return true;\n+    } else if (isVoidType()) {\n+        System.err.println(\"Warning: isEmptyType() called with VoidType.\");\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}