{
    "patch": "public static String get_closet_vowel(String word) {\n    if (word.length() < 3)\n        return \"\";\n\n    char[] vowels = { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n    int minDist = Integer.MAX_VALUE;\n    int minIndex = -1;\n\n    for (int i = 0; i < word.length(); i++) {\n        char c = word.charAt(i);\n\n        for (int j = 0; j < vowels.length; j++) {\n            if (c == vowels[j]) {\n                int dist = Math.abs(i - (word.length() / 2));\n                if (dist < minDist) {\n                    minDist = dist;\n                    minIndex = i;\n                }\n                break;\n            }\n        }\n    }\n\n    return minIndex == -1 ? \"\" : word.substring(minIndex, minIndex + 1);\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\nindex 885eb35..0b88600 100644\n--- a/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n+++ b/src/main/java/humaneval/buggy/GET_CLOSET_VOWEL.java\n@@ -20,16 +20,29 @@ import java.util.Arrays;\n  */\n \n public class GET_CLOSET_VOWEL {\n-    public static String get_closet_vowel(String word) {\n-        if(word.length() < 3) return \"\";\n-        ArrayList<Character> vowels = new ArrayList<Character>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));\n-        for(int i = word.length() - 2; i >= 0; i--) {\n-            if(vowels.contains(word.charAt(i))) {\n-                if(!vowels.contains(word.charAt(i + 1)) && !vowels.contains(word.charAt(i - 1))) {\n-                    return word.substring(i, i + 1);\n+public static String get_closet_vowel(String word) {\n+    if (word.length() < 3)\n+        return \"\";\n+\n+    char[] vowels = { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n+    int minDist = Integer.MAX_VALUE;\n+    int minIndex = -1;\n+\n+    for (int i = 0; i < word.length(); i++) {\n+        char c = word.charAt(i);\n+\n+        for (int j = 0; j < vowels.length; j++) {\n+            if (c == vowels[j]) {\n+                int dist = Math.abs(i - (word.length() / 2));\n+                if (dist < minDist) {\n+                    minDist = dist;\n+                    minIndex = i;\n                 }\n+                break;\n             }\n         }\n-        return \"\";\n     }\n+\n+    return minIndex == -1 ? \"\" : word.substring(minIndex, minIndex + 1);\n+}\n }",
    "result_reason": "   TEST_GET_CLOSET_VOWEL.test_11:62 expected:<[]> but was:<[i]>",
    "test_result": "FAIL"
}