{
    "patch": "if (options.checkGlobalThisLevel != null) {\n      if (!options.disables(DiagnosticGroups.GLOBAL_THIS)) {\n        options.setWarningLevel(\n            DiagnosticGroups.GLOBAL_THIS,\n                options.checkGlobalThisLevel.isOn() ?\n                    options.checkGlobalThisLevel :\n                    CheckLevel.WARNING);\n      }\n    } else if (options.enables(DiagnosticGroups.GLOBAL_THIS)) {\n      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex b3ca246a..23e504cc 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -252,7 +252,17 @@ public class Compiler extends AbstractCompiler {\n           CheckLevel.OFF);\n     }\n \n-    if (options.checkGlobalThisLevel.isOn()) {\n+if (options.checkGlobalThisLevel != null) {\n+      if (!options.disables(DiagnosticGroups.GLOBAL_THIS)) {\n+        options.setWarningLevel(\n+            DiagnosticGroups.GLOBAL_THIS,\n+                options.checkGlobalThisLevel.isOn() ?\n+                    options.checkGlobalThisLevel :\n+                    CheckLevel.WARNING);\n+      }\n+    } else if (options.enables(DiagnosticGroups.GLOBAL_THIS)) {\n+      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);\n+    }\n       options.setWarningLevel(\n           DiagnosticGroups.GLOBAL_THIS,\n           options.checkGlobalThisLevel);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}