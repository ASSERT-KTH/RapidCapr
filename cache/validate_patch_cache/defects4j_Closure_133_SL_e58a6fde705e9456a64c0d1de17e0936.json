{
    "patch": "private String getRemainingJSDocLine() {\n        String result = stream.getRemainingJSDocLine();\n        if(result == null) {\n            return null;\n        } else if (result.trim().startsWith(\"@type\")) {\n            result = result.trim().substring(6).trim();\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..07b29fa1 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,15 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+        String result = stream.getRemainingJSDocLine();\n+        if(result == null) {\n+            return null;\n+        } else if (result.trim().startsWith(\"@type\")) {\n+            result = result.trim().substring(6).trim();\n+        }\n+        return result;\n+    }\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}