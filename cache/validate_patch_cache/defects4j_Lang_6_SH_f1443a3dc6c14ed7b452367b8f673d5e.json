{
    "patch": "        for (int pt = 0; pt < consumed; pt++) {  \n            int codePoint = Character.codePointAt(input, pos + pt);\n            if (codePoint > Character.MAX_VALUE) {\n                pt++; // Consumes the second part of the surrogate pair\n            }\n            translate(codePoint, out);\n        }\n        pos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..188764b8 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,14 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+        for (int pt = 0; pt < consumed; pt++) {  \n+            int codePoint = Character.codePointAt(input, pos + pt);\n+            if (codePoint > Character.MAX_VALUE) {\n+                pt++; // Consumes the second part of the surrogate pair\n+            }\n+            translate(codePoint, out);\n+        }\n+        pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}