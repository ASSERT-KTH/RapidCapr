{
    "patch": "import java.math.BigDecimal;\n\npublic class Distribution {\n    public static double[] getDistribution(double[] input) {\n        int n = input.length;\n\n        if (n == 0) {\n            return new double[0];\n        }\n\n        double[] result = new double[n];\n\n        BigDecimal max = BigDecimal.valueOf(input[0]);\n        BigDecimal sum = BigDecimal.ZERO;\n        BigDecimal sumPerLength;\n        BigDecimal one = BigDecimal.ONE;\n        int k = 25;\n\n        for (int i = 0; i < n; i++) {\n            BigDecimal inputVal = BigDecimal.valueOf(input[i]);\n            if (inputVal.compareTo(max) > 0) {\n                max = inputVal;\n            }\n            sum = sum.add(inputVal);\n        }\n\n        BigDecimal maxMinusSum = max.multiply(BigDecimal.valueOf(n)).subtract(sum);\n        sumPerLength = maxMinusSum.divide(BigDecimal.valueOf(n), k, BigDecimal.ROUND_HALF_UP);\n\n        for (int i = 0; i < n; i++) {\n            BigDecimal diff = maxMinusSum.subtract(BigDecimal.valueOf(input[i]));\n            BigDecimal ratio = diff.divide(BigDecimal.valueOf(n), k, BigDecimal.ROUND_HALF_UP);\n            BigDecimal addVal = ratio.add(one);\n            BigDecimal newVal = addVal.divide(sumPerLength, k, BigDecimal.ROUND_HALF_UP);\n            result[i] = newVal.doubleValue();\n        }\n\n        return result;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}