{
    "patch": "    private static boolean isAlpha(String str) {\n        int len = str.length();\n        for (int i = 0; i < len; i++) {\n            if (!Character.isLetter(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    private static boolean isValidVariant(String variant) {\n        int len = variant.length();\n        for (int i = 0; i < len; i++) {\n            char ch = variant.charAt(i);\n            if (ch != '_' && ch != '-' && !Character.isLetterOrDigit(ch)) {\n                return false;\n            }\n        }\n        return true;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..738bf27a 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,25 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+    private static boolean isAlpha(String str) {\n+        int len = str.length();\n+        for (int i = 0; i < len; i++) {\n+            if (!Character.isLetter(str.charAt(i))) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    \n+    private static boolean isValidVariant(String variant) {\n+        int len = variant.length();\n+        for (int i = 0; i < len; i++) {\n+            char ch = variant.charAt(i);\n+            if (ch != '_' && ch != '-' && !Character.isLetterOrDigit(ch)) {\n+                return false;\n+            }\n+        }\n+        return true;\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}