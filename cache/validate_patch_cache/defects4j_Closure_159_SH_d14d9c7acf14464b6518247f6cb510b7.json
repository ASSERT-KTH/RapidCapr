{
    "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      if (child.getType() == Token.NAME) {\n        String functionName = child.getString();\n        if (functionName.startsWith(\"goog.\") || functionName.startsWith(\"$\")) {\n          // Ignore built-in functions and DOM apis\n          return;\n        }\n        changed.add(functionName);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java\nindex 814a07f4..028f886e 100644\n--- a/src/com/google/javascript/jscomp/InlineFunctions.java\n+++ b/src/com/google/javascript/jscomp/InlineFunctions.java\n@@ -777,7 +777,12 @@ class InlineFunctions implements SpecializationAwareCompilerPass {\n     if (node.getType() == Token.CALL) {\n       Node child = node.getFirstChild();\n       if (child.getType() == Token.NAME) {\n-        changed.add(child.getString());\n+        String functionName = child.getString();\n+        if (functionName.startsWith(\"goog.\") || functionName.startsWith(\"$\")) {\n+          // Ignore built-in functions and DOM apis\n+          return;\n+        }\n+        changed.add(functionName);\n       }\n     }\n ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}