{
    "patch": "public double getTypedPercent(String js) {\n    double typedCount = 0;\n    double totalCount = 0;\n    \n    for (int i = 0; i < js.length(); i++) {\n        if (js.charAt(i) == '{' || js.charAt(i) == '(' || js.charAt(i) == '[') {\n            if (i == 0 || js.charAt(i - 1) != '/') {\n                typedCount++;\n            }\n            totalCount++;\n        } else if (js.charAt(i) == '}' || js.charAt(i) == ')' || js.charAt(i) == ']') {\n            totalCount++;\n        }\n    }\n    \n    if (totalCount == 0) {\n        return 0;\n    } else {\n        return (typedCount / totalCount) * 100;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..9e5639af 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String js) {\n+    double typedCount = 0;\n+    double totalCount = 0;\n+    \n+    for (int i = 0; i < js.length(); i++) {\n+        if (js.charAt(i) == '{' || js.charAt(i) == '(' || js.charAt(i) == '[') {\n+            if (i == 0 || js.charAt(i - 1) != '/') {\n+                typedCount++;\n+            }\n+            totalCount++;\n+        } else if (js.charAt(i) == '}' || js.charAt(i) == ')' || js.charAt(i) == ']') {\n+            totalCount++;\n+        }\n+    }\n+    \n+    if (totalCount == 0) {\n+        return 0;\n+    } else {\n+        return (typedCount / totalCount) * 100;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}