{
    "patch": "    if (NodeUtil.isFunctionExpression(n)) {\n        if (NodeUtil.getFunctionName(n) != null ||\n            NodeUtil.getFunctionParameters(n) != null ||\n            NodeUtil.getFunctionBody(n).getChildCount() > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..bc40fc58 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,17 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    if (NodeUtil.isFunctionExpression(n)) {\n+        if (NodeUtil.getFunctionName(n) != null ||\n+            NodeUtil.getFunctionParameters(n) != null ||\n+            NodeUtil.getFunctionBody(n).getChildCount() > 0) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    } else {\n+        return false;\n+    }\n   }\n \n   /**",
    "result_reason": "java.lang.IllegalStateException: Expected function but was call Reference node CALL 4 [free_call: 1] [source_file: testcode]",
    "test_result": "FAIL"
}