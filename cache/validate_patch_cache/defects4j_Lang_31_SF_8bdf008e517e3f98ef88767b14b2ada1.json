{
    "patch": "public class StringUtils {\n\n    public static boolean containsAny(char[] arr, char[] searchChars) {\n        if (arr == null || arr.length == 0 || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n        int csLength = arr.length;\n        int searchLength = searchChars.length;\n        int csLast = csLength - 1;\n        int searchLast = searchLength - 1;\n        for (int i = 0; i < csLength; i++) {\n            char ch = arr[i];\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    if (Character.isHighSurrogate(ch)) {\n                        if (j == searchLast) {\n                            // missing low surrogate character\n                            return false;\n                        }\n                        if (i < csLast && searchChars[j + 1] == arr[i + 1]) {\n                            return true;\n                        }\n                    }\n                    else {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..1ca8b892 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,38 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public class StringUtils {\n+\n+    public static boolean containsAny(char[] arr, char[] searchChars) {\n+        if (arr == null || arr.length == 0 || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+        int csLength = arr.length;\n+        int searchLength = searchChars.length;\n+        int csLast = csLength - 1;\n+        int searchLast = searchLength - 1;\n+        for (int i = 0; i < csLength; i++) {\n+            char ch = arr[i];\n+            for (int j = 0; j < searchLength; j++) {\n+                if (searchChars[j] == ch) {\n+                    if (Character.isHighSurrogate(ch)) {\n+                        if (j == searchLast) {\n+                            // missing low surrogate character\n+                            return false;\n+                        }\n+                        if (i < csLast && searchChars[j + 1] == arr[i + 1]) {\n+                            return true;\n+                        }\n+                    }\n+                    else {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}