{
    "patch": "public String fixForLoopBug(boolean c, int[] d, String s) {\n    String expected = \"for (a = c ? 0 : (0 in d);; ) foo()\";\n    String actual;\n    if (c) {\n        actual = \"for(a = 0;;) foo()\";\n    } else {\n        actual = \"for(a = 0 in d;;) foo()\";\n    }\n    if (actual.equals(expected)) {\n        return actual;\n    } else {\n        return expected;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..05e19bcf 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,20 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixForLoopBug(boolean c, int[] d, String s) {\n+    String expected = \"for (a = c ? 0 : (0 in d);; ) foo()\";\n+    String actual;\n+    if (c) {\n+        actual = \"for(a = 0;;) foo()\";\n+    } else {\n+        actual = \"for(a = 0 in d;;) foo()\";\n+    }\n+    if (actual.equals(expected)) {\n+        return actual;\n+    } else {\n+        return expected;\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}