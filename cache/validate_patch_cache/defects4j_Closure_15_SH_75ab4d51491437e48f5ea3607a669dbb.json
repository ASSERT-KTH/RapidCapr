{
    "patch": "if (n.isExprResult() && n.getFirstChild().isGetProp()) {\n  Node getPropNode = n.getFirstChild();\n  String propName = getPropNode.getLastChild().getString();\n  if (getPropNode.getFirstChild().isName()\n      && (propName.equals(\"navigator\") || propName.equals(\"plugins\"))) {\n    return true;\n  }\n}\nreturn NodeUtil.isControlStructure(n); // add this line",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..e5bd2ec7 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,15 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n.isExprResult() && n.getFirstChild().isGetProp()) {\n+  Node getPropNode = n.getFirstChild();\n+  String propName = getPropNode.getLastChild().getString();\n+  if (getPropNode.getFirstChild().isName()\n+      && (propName.equals(\"navigator\") || propName.equals(\"plugins\"))) {\n+    return true;\n+  }\n+}\n+return NodeUtil.isControlStructure(n); // add this line\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}