{
    "patch": "            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n                next(pos);\n                return appendTo == null ? null : appendTo.append(QUOTE);\n            }\n            int lastHold = start;\n            while (pos.getIndex() < pattern.length()) {\n                switch (c[pos.getIndex()]) {\n                    case QUOTE:\n                        next(pos);\n                        return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n                    default:\n                        next(pos);\n                        continue;\n                }\n            }\n            throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..e49be481 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,22 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n+                next(pos);\n+                return appendTo == null ? null : appendTo.append(QUOTE);\n+            }\n+            int lastHold = start;\n+            while (pos.getIndex() < pattern.length()) {\n+                switch (c[pos.getIndex()]) {\n+                    case QUOTE:\n+                        next(pos);\n+                        return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n+                    default:\n+                        next(pos);\n+                        continue;\n+                }\n+            }\n+            throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}