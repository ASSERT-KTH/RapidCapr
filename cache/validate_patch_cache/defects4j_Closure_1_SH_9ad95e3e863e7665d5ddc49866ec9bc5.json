{
    "patch": "    Node function = fnScope.getRootNode();\n    Node body = function.getLastChild();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    Deque<Node> unusedParameters = new ArrayDeque<>();\n    for (Node arg : argList.children()) {\n      if (arg.isRest()) {\n        // don't inline arguments with inlineable rest references into\n        // callsites.\n        if (CallInliner.mayHaveRestParametersReferenced(argumentsPerCallSite, arg)) {\n          return;\n        }\n      }\n      if (referenced.contains(fnScope.getVar(arg.getString()))) {\n        // The parameter is used.\n      } else {\n        unusedParameters.add(arg);\n      }\n    }\n\n    if (!unusedParameters.isEmpty()) {\n      NodeUtil.markFunctionsDeleted(unusedParameters);\n      removeUnusedFunctionArgsHelper(body, unusedParameters);\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..31ea4991 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,37 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    Node body = function.getLastChild();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    Deque<Node> unusedParameters = new ArrayDeque<>();\n+    for (Node arg : argList.children()) {\n+      if (arg.isRest()) {\n+        // don't inline arguments with inlineable rest references into\n+        // callsites.\n+        if (CallInliner.mayHaveRestParametersReferenced(argumentsPerCallSite, arg)) {\n+          return;\n+        }\n+      }\n+      if (referenced.contains(fnScope.getVar(arg.getString()))) {\n+        // The parameter is used.\n+      } else {\n+        unusedParameters.add(arg);\n+      }\n+    }\n+\n+    if (!unusedParameters.isEmpty()) {\n+      NodeUtil.markFunctionsDeleted(unusedParameters);\n+      removeUnusedFunctionArgsHelper(body, unusedParameters);\n+      compiler.reportCodeChange();\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}