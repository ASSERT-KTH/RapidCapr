{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int strLen = str.length();\n    int searchLen = searchChars.length;\n    int i = 0;\n    for (int j = 0; j < searchLen; j++) {\n        if (Character.isHighSurrogate(searchChars[j])) {\n            if (++j == searchLen) {\n                // missing low surrogate, so consider as not contained\n                return false;\n            } else if (searchChars[j] != str.charAt(i + 1)) {\n                // mismatched surrogate pair, so consider as not contained\n                return false;\n            }\n        } else if (Character.isLowSurrogate(searchChars[j])) {\n            // missing high surrogate, so consider as not contained\n            return false;\n        } else if (str.indexOf(searchChars[j], i) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..735f5ea5 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int strLen = str.length();\n+    int searchLen = searchChars.length;\n+    int i = 0;\n+    for (int j = 0; j < searchLen; j++) {\n+        if (Character.isHighSurrogate(searchChars[j])) {\n+            if (++j == searchLen) {\n+                // missing low surrogate, so consider as not contained\n+                return false;\n+            } else if (searchChars[j] != str.charAt(i + 1)) {\n+                // mismatched surrogate pair, so consider as not contained\n+                return false;\n+            }\n+        } else if (Character.isLowSurrogate(searchChars[j])) {\n+            // missing high surrogate, so consider as not contained\n+            return false;\n+        } else if (str.indexOf(searchChars[j], i) >= 0) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}