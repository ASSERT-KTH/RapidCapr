{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && !(len >= 7 && len <= 8)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    for (int i = 0; i < len; i++) {\n        char ch = str.charAt(i);\n        if ((i == 0 || i == 3 || i == 6) && (ch < 'a' || ch > 'z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if ((i == 1 || i == 4 || i == 7) && (ch < 'A' || ch > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else if ((i == 2 || i == 5) && ch != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n\n    switch (len) {\n        case 2:\n            return new Locale(str);\n        case 5:\n            return new Locale(str.substring(0, 2), str.substring(3));\n        case 7:\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        case 8:\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        default:\n            // Should never reach here\n            throw new IllegalStateException(\"Invalid locale format: \" + str);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..c927b69c 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,41 +91,41 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+public static Locale toLocale(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len != 2 && len != 5 && !(len >= 7 && len <= 8)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+\n+    for (int i = 0; i < len; i++) {\n+        char ch = str.charAt(i);\n+        if ((i == 0 || i == 3 || i == 6) && (ch < 'a' || ch > 'z')) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        } else if ((i == 1 || i == 4 || i == 7) && (ch < 'A' || ch > 'Z')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        } else if ((i == 2 || i == 5) && ch != '_') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n         }\n     }\n \n+    switch (len) {\n+        case 2:\n+            return new Locale(str);\n+        case 5:\n+            return new Locale(str.substring(0, 2), str.substring(3));\n+        case 7:\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        case 8:\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        default:\n+            // Should never reach here\n+            throw new IllegalStateException(\"Invalid locale format: \" + str);\n+    }\n+}\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}