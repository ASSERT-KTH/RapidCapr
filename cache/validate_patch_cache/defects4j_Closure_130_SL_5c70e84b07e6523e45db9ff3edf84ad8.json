{
    "patch": "      if (name.localSets == 0 && name.parent != null && name.parent.type == Name.Type.OBJECTLIT &&\n          name.aliasingGets > 0) {\n        // {@code name} meets condition (b).\n        boolean inlined = true;\n        // Try to inline all of its local aliases.\n        for (Ref ref : name.getRefs()) {\n          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n            if (!inlineAliasIfPossible(ref, namespace)) {\n              inlined = false;\n            }\n          }\n        }\n        if (inlined) {\n          name.removeAllRefs();\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..0a3f4466 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,22 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.localSets == 0 && name.parent != null && name.parent.type == Name.Type.OBJECTLIT &&\n+          name.aliasingGets > 0) {\n+        // {@code name} meets condition (b).\n+        boolean inlined = true;\n+        // Try to inline all of its local aliases.\n+        for (Ref ref : name.getRefs()) {\n+          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n+            if (!inlineAliasIfPossible(ref, namespace)) {\n+              inlined = false;\n+            }\n+          }\n+        }\n+        if (inlined) {\n+          name.removeAllRefs();\n+        }\n+      }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}