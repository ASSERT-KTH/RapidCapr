{
    "patch": "final double[] y = getObservations();\nfinal double[] x = DoubleStream.iterate(1, i -> i + 1).limit(y.length).toArray();\nSimpleRegression regression = new SimpleRegression();\nfor (int i = 0; i < x.length; i++) {\n    regression.addData(x[i], y[i]);\n}\nfinal double[] fittedParams = new double[guess.length];\nfittedParams[0] = regression.getIntercept();\nfittedParams[1] = regression.getSlope();\nreturn fittedParams;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..4a2ef2e46 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,16 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+final double[] y = getObservations();\n+final double[] x = DoubleStream.iterate(1, i -> i + 1).limit(y.length).toArray();\n+SimpleRegression regression = new SimpleRegression();\n+for (int i = 0; i < x.length; i++) {\n+    regression.addData(x[i], y[i]);\n+}\n+final double[] fittedParams = new double[guess.length];\n+fittedParams[0] = regression.getIntercept();\n+fittedParams[1] = regression.getSlope();\n+return fittedParams;\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}