{
    "patch": "        int idx = index;\n        for (int i = last - 1; i >= 0; i--) {\n            indices[i] = idx / uniCounterOffset[i];\n            idx %= uniCounterOffset[i];\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..6a513466f 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,11 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n+        int idx = index;\n+        for (int i = last - 1; i >= 0; i--) {\n+            indices[i] = idx / uniCounterOffset[i];\n+            idx %= uniCounterOffset[i];\n         }\n-        --idx;\n-        indices[last] = idx;\n \n         return indices;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Wrong multidimensional index for [1][2] expected:<1> but was:<0>",
    "test_result": "FAIL"
}