{
    "patch": "parent.detachFromParent();\nJSModule module = t.getModule();\nif (provided == null || provided.explicitModule == null || !provided.explicitModule.equals(module)) {\n    compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n        provided != null && provided.explicitModule != null ? provided.explicitModule.getName() :\n        \"no module\", module.getName()));\n    unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n}\ncompiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..770c9e5b 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,15 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+parent.detachFromParent();\n+JSModule module = t.getModule();\n+if (provided == null || provided.explicitModule == null || !provided.explicitModule.equals(module)) {\n+    compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n+        provided != null && provided.explicitModule != null ? provided.explicitModule.getName() :\n+        \"no module\", module.getName()));\n+    unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n+}\n+compiler.reportCodeChange();\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}