{
    "patch": "Type[] boundTypes = typeVariable.getBounds();\nif (boundTypes.length > 0 && !(boundTypes.length == 1 && boundTypes[0].getTypeName().equals(\"java.lang.Object\"))) {\n   for (Type type : boundTypes) {\n      registerTypeVariablesOn(type);\n   }\n} else {\n   Type actualType = getActualTypeArgumentFor(typeVariable);\n   if (actualType != null) {\n      registerTypeVariablesOn(actualType);\n   } else {\n      registerTypeVariablesOn(typeVariable);\n   }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..6646ae961 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,24 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] boundTypes = typeVariable.getBounds();\n+if (boundTypes.length > 0 && !(boundTypes.length == 1 && boundTypes[0].getTypeName().equals(\"java.lang.Object\"))) {\n+   for (Type type : boundTypes) {\n+      registerTypeVariablesOn(type);\n+   }\n+} else {\n+   Type actualType = getActualTypeArgumentFor(typeVariable);\n+   if (actualType != null) {\n+      registerTypeVariablesOn(actualType);\n+   } else {\n+      registerTypeVariablesOn(typeVariable);\n+   }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}