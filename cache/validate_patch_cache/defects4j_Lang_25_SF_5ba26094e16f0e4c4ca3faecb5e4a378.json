{
    "patch": "import java.nio.charset.Charset;\nimport java.nio.charset.StandardCharsets;\n\npublic class StringUtil {\n    public static String unescapeJava(String input) {\n        int len = input.length();\n        StringBuilder sb = new StringBuilder(len);\n        Charset charset = StandardCharsets.ISO_8859_1;\n        for (int i = 0; i < len; i++) {\n            char ch = input.charAt(i);\n            if (ch == '\\\\') {\n                i++;\n                if (i >= len) {\n                    break;\n                }\n                ch = input.charAt(i);\n                if (ch == 'u') {\n                    sb.append((char) Integer.parseInt(input.substring(i + 1, i + 5), 16));\n                    i += 4;\n                } else {\n                    if (ch == 't') {\n                        ch = '\\t';\n                    } else if (ch == 'r') {\n                        ch = '\\r';\n                    } else if (ch == 'n') {\n                        ch = '\\n';\n                    } else if (ch == 'f') {\n                        ch = '\\f';\n                    }\n                    sb.append(ch);\n                }\n            } else {\n                sb.append(ch);\n            }\n        }\n        return sb.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..83ceb0df 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,44 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+\n+public class StringUtil {\n+    public static String unescapeJava(String input) {\n+        int len = input.length();\n+        StringBuilder sb = new StringBuilder(len);\n+        Charset charset = StandardCharsets.ISO_8859_1;\n+        for (int i = 0; i < len; i++) {\n+            char ch = input.charAt(i);\n+            if (ch == '\\\\') {\n+                i++;\n+                if (i >= len) {\n+                    break;\n+                }\n+                ch = input.charAt(i);\n+                if (ch == 'u') {\n+                    sb.append((char) Integer.parseInt(input.substring(i + 1, i + 5), 16));\n+                    i += 4;\n+                } else {\n+                    if (ch == 't') {\n+                        ch = '\\t';\n+                    } else if (ch == 'r') {\n+                        ch = '\\r';\n+                    } else if (ch == 'n') {\n+                        ch = '\\n';\n+                    } else if (ch == 'f') {\n+                        ch = '\\f';\n+                    }\n+                    sb.append(ch);\n+                }\n+            } else {\n+                sb.append(ch);\n+            }\n+        }\n+        return sb.toString();\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}