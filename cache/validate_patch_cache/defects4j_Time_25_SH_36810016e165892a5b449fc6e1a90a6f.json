{
    "patch": "                // on or after the transition. If it's the first occurrence of the\n                // invalid local time, return the offset before the transition.\n                long nextLocal = nextTransition(instantAdjusted + 1);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted + 1);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..0583a71d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,10 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // on or after the transition. If it's the first occurrence of the\n+                // invalid local time, return the offset before the transition.\n+                long nextLocal = nextTransition(instantAdjusted + 1);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted + 1);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}