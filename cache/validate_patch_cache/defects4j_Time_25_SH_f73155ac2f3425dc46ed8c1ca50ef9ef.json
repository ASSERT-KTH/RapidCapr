{
    "patch": "private int getOffsetAdjusted(long instant, int initialOffset) {\n    long adjInstant = instant - initialOffset;\n    long nextTransition = nextTransition(adjInstant);\n    if (instant >= nextTransition) {\n        return getOffset(nextTransition);\n    }\n    long prevTransition = previousTransition(adjInstant);\n    if (instant < prevTransition) {\n        return getOffset(prevTransition);\n    }\n    return initialOffset;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..2cce374a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+private int getOffsetAdjusted(long instant, int initialOffset) {\n+    long adjInstant = instant - initialOffset;\n+    long nextTransition = nextTransition(adjInstant);\n+    if (instant >= nextTransition) {\n+        return getOffset(nextTransition);\n+    }\n+    long prevTransition = previousTransition(adjInstant);\n+    if (instant < prevTransition) {\n+        return getOffset(prevTransition);\n+    }\n+    return initialOffset;\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}