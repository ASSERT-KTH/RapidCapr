{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    if (!result.trim().startsWith(\"/**\")) {\n        return null;\n    }\n    result = result.replaceFirst(\"^/\\\\*\\\\*[ ]*\", \"\"); // remove \"/**\"\n    result = result.replaceFirst(\"[ ]*\\\\*/$\", \"\"); // remove \"*/\" and any preceding spaces\n    result = result.trim(); // trim any remaining leading/trailing spaces\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..f13320f3 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,16 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+    if (!result.trim().startsWith(\"/**\")) {\n+        return null;\n+    }\n+    result = result.replaceFirst(\"^/\\\\*\\\\*[ ]*\", \"\"); // remove \"/**\"\n+    result = result.replaceFirst(\"[ ]*\\\\*/$\", \"\"); // remove \"*/\" and any preceding spaces\n+    result = result.trim(); // trim any remaining leading/trailing spaces\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}