{
    "patch": "            if (count > 0) {\n                // alter base year for parsing if first field is month or day\n                DurationField months = DurationFieldType.months().getField(iChrono);\n                DurationField days = DurationFieldType.days().getField(iChrono);\n                DurationField first = savedFields[0].iField.getDurationField();\n                if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n                    int year = iDefaultYear;\n                    Chronology chrono = iChrono;\n                    DateTimeFieldType yearType = DateTimeFieldType.year();\n                    DateTimeField weekyearField = null;\n                    if (chrono instanceof GregorianChronology) {\n                        weekyearField = ((GregorianChronology) chrono).weekyear();\n                    } else if (chrono instanceof ISOChronology) {\n                        weekyearField = ((ISOChronology) chrono).weekyear();\n                    }\n                    if (weekyearField != null) {\n                        try {\n                            year = weekyearField.get(savedFields[0].getValueMillis());\n                            yearType = weekyearField.getFieldType();\n                        } catch (IllegalFieldValueException e) {\n                            // use default year\n                        }\n                    }\n                    saveField(yearType, year);\n                    return computeMillis(resetFields, text);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..557af05c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,31 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (count > 0) {\n+                // alter base year for parsing if first field is month or day\n+                DurationField months = DurationFieldType.months().getField(iChrono);\n+                DurationField days = DurationFieldType.days().getField(iChrono);\n+                DurationField first = savedFields[0].iField.getDurationField();\n+                if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n+                    int year = iDefaultYear;\n+                    Chronology chrono = iChrono;\n+                    DateTimeFieldType yearType = DateTimeFieldType.year();\n+                    DateTimeField weekyearField = null;\n+                    if (chrono instanceof GregorianChronology) {\n+                        weekyearField = ((GregorianChronology) chrono).weekyear();\n+                    } else if (chrono instanceof ISOChronology) {\n+                        weekyearField = ((ISOChronology) chrono).weekyear();\n+                    }\n+                    if (weekyearField != null) {\n+                        try {\n+                            year = weekyearField.get(savedFields[0].getValueMillis());\n+                            yearType = weekyearField.getFieldType();\n+                        } catch (IllegalFieldValueException e) {\n+                            // use default year\n+                        }\n+                    }\n+                    saveField(yearType, year);\n+                    return computeMillis(resetFields, text);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}