{
    "patch": "boolean currentAdded = false;\nboolean nextAdded = false;\nList<Strategy> tempList = new ArrayList<>();\nif (currentStrategy != null) {\n    if (currentStrategy.addRegex(this, regex)) {\n        tempList.add(currentStrategy);\n        currentAdded = true;\n    }\n}\nif (nextStrategy != null) {\n    if (nextStrategy.addRegex(this, regex)) {\n        if (!currentAdded) {\n            if (currentStrategy != null) {\n                tempList.add(currentStrategy);\n            } else {\n                throw new IllegalArgumentException(\"Invalid pattern\");\n            }\n        }\n        tempList.add(nextStrategy);\n        nextAdded = true;\n    }\n}\nif (!currentAdded && !nextAdded) {\n    throw new IllegalArgumentException(\"Invalid pattern\");\n}\ncurrentFormatField = null;\nstrategies = tempList.toArray(new Strategy[0]);\nparsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..af24d02a 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,34 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+boolean currentAdded = false;\n+boolean nextAdded = false;\n+List<Strategy> tempList = new ArrayList<>();\n+if (currentStrategy != null) {\n+    if (currentStrategy.addRegex(this, regex)) {\n+        tempList.add(currentStrategy);\n+        currentAdded = true;\n+    }\n+}\n+if (nextStrategy != null) {\n+    if (nextStrategy.addRegex(this, regex)) {\n+        if (!currentAdded) {\n+            if (currentStrategy != null) {\n+                tempList.add(currentStrategy);\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid pattern\");\n+            }\n+        }\n+        tempList.add(nextStrategy);\n+        nextAdded = true;\n+    }\n+}\n+if (!currentAdded && !nextAdded) {\n+    throw new IllegalArgumentException(\"Invalid pattern\");\n+}\n+currentFormatField = null;\n+strategies = tempList.toArray(new Strategy[0]);\n+parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}