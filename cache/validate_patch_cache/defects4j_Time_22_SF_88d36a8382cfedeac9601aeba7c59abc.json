{
    "patch": "    DerivedPeriod(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type) {\n        super();\n        iPeriodType = type;\n        // Use zero for fields that aren't present\n        iYears = years;\n        iMonths = months;\n        iWeeks = weeks;\n        iDays = days;\n        iHours = hours;\n        iMinutes = minutes;\n        iSeconds = seconds;\n        iMillis = millis;\n        setDerivedFields();\n    }\n",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..bda1e521 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,11 +218,22 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+    DerivedPeriod(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type) {\n+        super();\n+        iPeriodType = type;\n+        // Use zero for fields that aren't present\n+        iYears = years;\n+        iMonths = months;\n+        iWeeks = weeks;\n+        iDays = days;\n+        iHours = hours;\n+        iMinutes = minutes;\n+        iSeconds = seconds;\n+        iMillis = millis;\n+        setDerivedFields();\n     }\n \n+\n     /**\n      * Creates a period from the given millisecond duration, which is only really\n      * suitable for durations less than one day.",
    "result_reason": "error: invalid method declaration; return type required",
    "test_result": "ERROR"
}