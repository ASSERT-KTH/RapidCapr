{
    "patch": "if (a <= 0 || b <= 0 || c <= 0 || a + b <= c || a + c <= b || b + c <= a) {\n    return false;\n}\nint minSide = Math.min(Math.min(a, b), c);\nint maxSide = Math.max(Math.max(a, b), c);\nint midSide = a + b + c - minSide - maxSide;\nreturn minSide*minSide + midSide*midSide == maxSide * maxSide;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\nindex da0fd0a..b401b85 100644\n--- a/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n+++ b/src/main/java/humaneval/buggy/RIGHT_ANGLE_TRIANGLE.java\n@@ -10,6 +10,12 @@ package humaneval.buggy;\n \n public class RIGHT_ANGLE_TRIANGLE {\n     public static boolean right_angle_triangle(int a, int b, int c) {\n-        return a*a + b*b == c*c;\n+if (a <= 0 || b <= 0 || c <= 0 || a + b <= c || a + c <= b || b + c <= a) {\n+    return false;\n+}\n+int minSide = Math.min(Math.min(a, b), c);\n+int maxSide = Math.max(Math.max(a, b), c);\n+int midSide = a + b + c - minSide - maxSide;\n+return minSide*minSide + midSide*midSide == maxSide * maxSide;\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}