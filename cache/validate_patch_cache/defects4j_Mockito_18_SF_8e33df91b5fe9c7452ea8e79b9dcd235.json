{
    "patch": "public static ReturnValues firstWord(String s) {\n    if (s == null || s.isEmpty()) {\n        return new ReturnValues(String.class, \"\");\n    }\n    String[] words = s.split(\"\\\\s+\");\n    if (words.length == 0) {\n        return new ReturnValues(String.class, \"\");\n    }\n    String firstWord = words[0];\n    if (firstWord.length() == 1) {\n        return new ReturnValues(String.class, firstWord);\n    }\n    return new ReturnValues(String.class, Character.toUpperCase(firstWord.charAt(0)) + firstWord.substring(1));\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..89157ed9d 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,20 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static ReturnValues firstWord(String s) {\n+    if (s == null || s.isEmpty()) {\n+        return new ReturnValues(String.class, \"\");\n+    }\n+    String[] words = s.split(\"\\\\s+\");\n+    if (words.length == 0) {\n+        return new ReturnValues(String.class, \"\");\n+    }\n+    String firstWord = words[0];\n+    if (firstWord.length() == 1) {\n+        return new ReturnValues(String.class, firstWord);\n+    }\n+    return new ReturnValues(String.class, Character.toUpperCase(firstWord.charAt(0)) + firstWord.substring(1));\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}