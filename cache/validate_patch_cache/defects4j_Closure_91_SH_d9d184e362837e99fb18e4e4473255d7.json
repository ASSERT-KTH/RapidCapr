{
    "patch": "      if (parent != null && NodeUtil.isGet(parent)) {\n        Node getTarget = parent.getFirstChild();\n        Node getProp = parent.getLastChild();\n\n        if (getTarget.getType() == Token.THIS ||\n            getTarget.getType() == Token.NAME ||\n            getTarget.getType() == Token.FUNCTION ||\n            (getTarget.getFirstChild() != null &&\n             getTarget.getFirstChild().getType() == Token.FUNCTION)) {\n          return true;\n        } else if (getProp.getType() == Token.STRING &&\n                   getProp.getString().equals(\"prototype\")) {\n          return false;\n        } else if (parent.getParent().getType() == Token.CALL &&\n                   getProp.getFirstChild().getNext().getString().equals(\"bind\")){\n          return false;\n        }\n      }\n\n      return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..5de5af6c 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,26 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && NodeUtil.isGet(parent)) {\n+        Node getTarget = parent.getFirstChild();\n+        Node getProp = parent.getLastChild();\n+\n+        if (getTarget.getType() == Token.THIS ||\n+            getTarget.getType() == Token.NAME ||\n+            getTarget.getType() == Token.FUNCTION ||\n+            (getTarget.getFirstChild() != null &&\n+             getTarget.getFirstChild().getType() == Token.FUNCTION)) {\n+          return true;\n+        } else if (getProp.getType() == Token.STRING &&\n+                   getProp.getString().equals(\"prototype\")) {\n+          return false;\n+        } else if (parent.getParent().getType() == Token.CALL &&\n+                   getProp.getFirstChild().getNext().getString().equals(\"bind\")){\n+          return false;\n+        }\n+      }\n+\n+      return true;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 46 expected:<0> but was:<1>",
    "test_result": "FAIL"
}