{
    "patch": "public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n    if (start < 0) {\n        throw new IllegalArgumentException(\"Requires start >= 0.\");\n    }\n    if (end < start) {\n        throw new IllegalArgumentException(\"Requires start <= end.\");\n    }\n\n    TimeSeries copy = (TimeSeries) super.clone();\n    copy.data = new java.util.ArrayList();\n    for (int i = start, j = 0; i <= end && j < getItemCount(); i++, j++) {\n        TimeSeriesDataItem item = getDataItem(j);\n        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n        try {\n            copy.add(clone);\n        } catch (SeriesException e) {\n            e.printStackTrace();\n        }\n    }\n    copy.setMaximumItemCount(end - start + 1);\n    copy.setMinimumItemCount(end - start + 1);\n    copy.setMaximumItemAge(maximumItemAge);\n    copy.setDomainIsPointsInTime(domainIsPointsInTime);\n    copy.setAllowDuplicateXValues(allowDuplicateXValues);\n    copy.setImmutable(false);\n    copy.setDescription(getDescription());\n    copy.setDomainDescription(getDomainDescription());\n    copy.setRangeDescription(getRangeDescription());\n    copy.setKey(getKey());\n    return copy;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..34d1cfc 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,37 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n+    if (start < 0) {\n+        throw new IllegalArgumentException(\"Requires start >= 0.\");\n+    }\n+    if (end < start) {\n+        throw new IllegalArgumentException(\"Requires start <= end.\");\n+    }\n+\n+    TimeSeries copy = (TimeSeries) super.clone();\n+    copy.data = new java.util.ArrayList();\n+    for (int i = start, j = 0; i <= end && j < getItemCount(); i++, j++) {\n+        TimeSeriesDataItem item = getDataItem(j);\n+        TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+        try {\n+            copy.add(clone);\n+        } catch (SeriesException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+    copy.setMaximumItemCount(end - start + 1);\n+    copy.setMinimumItemCount(end - start + 1);\n+    copy.setMaximumItemAge(maximumItemAge);\n+    copy.setDomainIsPointsInTime(domainIsPointsInTime);\n+    copy.setAllowDuplicateXValues(allowDuplicateXValues);\n+    copy.setImmutable(false);\n+    copy.setDescription(getDescription());\n+    copy.setDomainDescription(getDomainDescription());\n+    copy.setRangeDescription(getRangeDescription());\n+    copy.setKey(getKey());\n+    return copy;\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}