{
    "patch": "try {\n    pos = Character.offsetByCodePoints(input, pos, 1);\n} catch (IndexOutOfBoundsException e) {\n    throw new StringIndexOutOfBoundsException(e.getMessage());\n}\nif (pos > len) {\n    throw new StringIndexOutOfBoundsException(\"pos=\" + pos + \" > length=\" + len);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..76d1644d 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,14 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+try {\n+    pos = Character.offsetByCodePoints(input, pos, 1);\n+} catch (IndexOutOfBoundsException e) {\n+    throw new StringIndexOutOfBoundsException(e.getMessage());\n+}\n+if (pos > len) {\n+    throw new StringIndexOutOfBoundsException(\"pos=\" + pos + \" > length=\" + len);\n+}\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException",
    "test_result": "FAIL"
}