{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<Integer>();\n    if(numbers == null || numbers.isEmpty()) {\n        return result;\n    }\n    Integer max = numbers.get(0);\n    result.add(max);\n    for(int i=1; i<numbers.size(); i++) {\n        Integer num = numbers.get(i);\n        if(num > max) {\n            max = num;\n        }\n        result.add(max);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..81875ff 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,20 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n-\n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n-        }\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<Integer>();\n+    if(numbers == null || numbers.isEmpty()) {\n         return result;\n     }\n+    Integer max = numbers.get(0);\n+    result.add(max);\n+    for(int i=1; i<numbers.size(); i++) {\n+        Integer num = numbers.get(i);\n+        if(num > max) {\n+            max = num;\n+        }\n+        result.add(max);\n+    }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}