{
    "patch": "        // issue 668: Don't inline singleton getter methods\n        // calls as this confused class removing logic.\n        String methodName =\n            convention.getSingletonGetterClassName(callNode);\n        if (methodName != null) {\n          String className = convention.getSingletonClassName(methodName);\n          // Do not inline into a call if its result is a singleton getter.\n          if (!canInlineIntoSingleton(className, reference)) {\n            return false;\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..497fec1b 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,17 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+        // issue 668: Don't inline singleton getter methods\n+        // calls as this confused class removing logic.\n+        String methodName =\n+            convention.getSingletonGetterClassName(callNode);\n+        if (methodName != null) {\n+          String className = convention.getSingletonClassName(methodName);\n+          // Do not inline into a call if its result is a singleton getter.\n+          if (!canInlineIntoSingleton(className, reference)) {\n+            return false;\n+          }\n+        }\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}