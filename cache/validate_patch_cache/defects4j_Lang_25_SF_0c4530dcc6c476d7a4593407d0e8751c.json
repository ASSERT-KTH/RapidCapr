{
    "patch": "public static String unEscapeString(String st, boolean escapeSingleQuote) {\n     StringBuilder sb = new StringBuilder(st.length());\n     for (int i = 0; i < st.length(); i++) {\n         char ch = st.charAt(i);\n         if (ch == '\\\\' && i + 1 < st.length()) {\n             char nextChar = st.charAt(i + 1);\n             switch (nextChar) {\n                 case '\\\\':\n                     ch = '\\\\';\n                     i++;\n                     break;\n                 case '\\'':\n                     if (escapeSingleQuote) {\n                         ch = '\\'';\n                         i++;\n                     }\n                     break;\n                 case 'n':\n                     ch = '\\n';\n                     i++;\n                     break;\n                 case 'r':\n                     ch = '\\r';\n                     i++;\n                     break;\n                 case 't':\n                     ch = '\\t';\n                     i++;\n                     break;\n                 case 'b':\n                     ch = '\\b';\n                     i++;\n                     break;\n                 case 'f':\n                     ch = '\\f';\n                     i++;\n                     break;\n                 default:\n                     // Do nothing and let it go through unescaped\n                     break;\n             }\n         }\n         sb.append(ch);\n     }\n     return sb.toString();\n }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..81e3a89d 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,52 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unEscapeString(String st, boolean escapeSingleQuote) {\n+     StringBuilder sb = new StringBuilder(st.length());\n+     for (int i = 0; i < st.length(); i++) {\n+         char ch = st.charAt(i);\n+         if (ch == '\\\\' && i + 1 < st.length()) {\n+             char nextChar = st.charAt(i + 1);\n+             switch (nextChar) {\n+                 case '\\\\':\n+                     ch = '\\\\';\n+                     i++;\n+                     break;\n+                 case '\\'':\n+                     if (escapeSingleQuote) {\n+                         ch = '\\'';\n+                         i++;\n+                     }\n+                     break;\n+                 case 'n':\n+                     ch = '\\n';\n+                     i++;\n+                     break;\n+                 case 'r':\n+                     ch = '\\r';\n+                     i++;\n+                     break;\n+                 case 't':\n+                     ch = '\\t';\n+                     i++;\n+                     break;\n+                 case 'b':\n+                     ch = '\\b';\n+                     i++;\n+                     break;\n+                 case 'f':\n+                     ch = '\\f';\n+                     i++;\n+                     break;\n+                 default:\n+                     // Do nothing and let it go through unescaped\n+                     break;\n+             }\n+         }\n+         sb.append(ch);\n+     }\n+     return sb.toString();\n+ }\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}