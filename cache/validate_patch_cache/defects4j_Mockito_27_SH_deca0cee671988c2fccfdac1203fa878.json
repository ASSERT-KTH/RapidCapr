{
    "patch": "MockSettingsImpl settings = new MockSettingsImpl();\nsettings.defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\nsettings.spiedInstance(mock);\nMockSpiesDispatcher dispatcher = mock(MockSpiesDispatcher.class);\nMockito.mockStatic(Mockito.class);\nMockito.when(Mockito.mockSpiesDispatcher()).thenReturn(dispatcher);\nMockito.doCallRealMethod().when(dispatcher).applyInlineDispatcher(settings);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(getMockHandler(mock), settings);\n((Factory) mock).setCallback(0, newFilter); ",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..3458d5090 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,18 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockSettingsImpl settings = new MockSettingsImpl();\n+settings.defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\n+settings.spiedInstance(mock);\n+MockSpiesDispatcher dispatcher = mock(MockSpiesDispatcher.class);\n+Mockito.mockStatic(Mockito.class);\n+Mockito.when(Mockito.mockSpiesDispatcher()).thenReturn(dispatcher);\n+Mockito.doCallRealMethod().when(dispatcher).applyInlineDispatcher(settings);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(getMockHandler(mock), settings);\n+((Factory) mock).setCallback(0, newFilter); \n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}