{
    "patch": "stepSize = filterStep(hNew, forward, Double.isNaN(error) || error <= 1.0);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..eb36dde9a 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,7 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+stepSize = filterStep(hNew, forward, Double.isNaN(error) || error <= 1.0);\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "org.apache.commons.math.exception.NumberIsTooSmallException: minimal step size (1.04E00) reached, integration needs 1.25E00",
    "test_result": "FAIL"
}