{
    "patch": "public static Properties loadProps(File f) throws IOException {\n    FileInputStream fis = null;\n    Properties props = new Properties();\n    try {\n        fis = new FileInputStream(f);\n        props.load(fis);\n    } finally {\n        if (fis != null) {\n            fis.close();\n        }\n    }\n\n    String[] requiredProps = { \"key1\", \"key2\", \"key3\" };\n    List<String> warnings = new ArrayList<>();\n\n    for (String prop : requiredProps) {\n        if (props.getProperty(prop) == null) {\n            warnings.add(\"Missing required property: \" + prop);\n        }\n    }\n\n    if (!warnings.isEmpty()) {\n        throw new IllegalArgumentException(String.join(\"\\n\", warnings));\n    }\n    return props;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..20453814 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,32 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static Properties loadProps(File f) throws IOException {\n+    FileInputStream fis = null;\n+    Properties props = new Properties();\n+    try {\n+        fis = new FileInputStream(f);\n+        props.load(fis);\n+    } finally {\n+        if (fis != null) {\n+            fis.close();\n+        }\n+    }\n+\n+    String[] requiredProps = { \"key1\", \"key2\", \"key3\" };\n+    List<String> warnings = new ArrayList<>();\n+\n+    for (String prop : requiredProps) {\n+        if (props.getProperty(prop) == null) {\n+            warnings.add(\"Missing required property: \" + prop);\n+        }\n+    }\n+\n+    if (!warnings.isEmpty()) {\n+        throw new IllegalArgumentException(String.join(\"\\n\", warnings));\n+    }\n+    return props;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}