{
    "patch": "StringBuilder sb = new StringBuilder();\nfor (int i = 0; i < input.length(); i++) {\n    char c = input.charAt(i);\n    if (c <= 0x007f) {\n        sb.append(c);\n    } else if (c == '\\ufeff') {\n        continue;\n    } else if (c <= 0x07ff) {\n        sb.append((char)(0xc0 | (c >> 6)));\n        sb.append((char)(0x80 | (c & 0x3f)));\n    } else {\n        sb.append((char)(0xe0 | (c >> 12)));\n        sb.append((char)(0x80 | ((c >> 6) & 0x3f)));\n        sb.append((char)(0x80 | (c & 0x3f)));\n    }\n}\nString encodedString = sb.toString();\n\nboolean success = false;\ntry {\n    byte[] originalBytes = input.getBytes(\"ISO-8859-1\");\n    String decodedString = new String(originalBytes, \"UTF-8\");\n    success = decodedString.equals(encodedString);\n} catch (UnsupportedEncodingException e) {\n    e.printStackTrace();\n}\nassertTrue(\"One or more errors detected\", success);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}