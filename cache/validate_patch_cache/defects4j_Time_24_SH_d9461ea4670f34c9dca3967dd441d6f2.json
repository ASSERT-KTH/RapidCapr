{
    "patch": "                // check for early termination of day.\n                if (i == 0 && savedFields[i].getFieldType() == DateTimeFieldType.weekyear()) {\n                    int value = savedFields[i].get();\n                    Chronology chrono = savedFields[i].getChronology();\n                    int weekOfWeekyear = savedFields[i + 1].get();\n                    millis = chrono.weekyear().set(millis, value);\n                    millis = chrono.weekOfWeekyear().set(millis, weekOfWeekyear);\n                    if (resetFields) {\n                        // year is inexact, cannot reset first;\n                        // time of day may have changed here, crack open millis\n                        savedFields[0].set(millis, value);\n                        savedFields[1].set(millis, weekOfWeekyear);\n                        for (int j=2; j<count; j++) {\n                            savedFields[j].set(millis, false);\n                        }\n                    }\n                    return millis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..e46f9d15 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                // check for early termination of day.\n+                if (i == 0 && savedFields[i].getFieldType() == DateTimeFieldType.weekyear()) {\n+                    int value = savedFields[i].get();\n+                    Chronology chrono = savedFields[i].getChronology();\n+                    int weekOfWeekyear = savedFields[i + 1].get();\n+                    millis = chrono.weekyear().set(millis, value);\n+                    millis = chrono.weekOfWeekyear().set(millis, weekOfWeekyear);\n+                    if (resetFields) {\n+                        // year is inexact, cannot reset first;\n+                        // time of day may have changed here, crack open millis\n+                        savedFields[0].set(millis, value);\n+                        savedFields[1].set(millis, weekOfWeekyear);\n+                        for (int j=2; j<count; j++) {\n+                            savedFields[j].set(millis, false);\n+                        }\n+                    }\n+                    return millis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}