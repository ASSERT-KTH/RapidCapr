{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (NodeUtil.isGet(parent)) {\n        Node llChild = parent.getFirstChild();\n        if (llChild.getType() == Token.GETPROP) {\n          Node protoChild = llChild.getLastChild();\n          Node protoParent = llChild.getParent();\n          if (protoChild.getString().equals(\"prototype\")) {\n            if (protoParent != null && NodeUtil.isGet(protoParent)) {\n              Node grandParent = protoParent.getParent();\n              if (grandParent != null &&\n                  grandParent.getType() == Token.FUNCTION &&\n                  grandParent.getFirstChild() != null &&\n                  NodeUtil.isGet(grandParent.getFirstChild().getNext())) {\n                // Mark function as being lent to a prototype.\n                return false;\n              }\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..c6b37ac2 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,26 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isGet(parent)) {\n+        Node llChild = parent.getFirstChild();\n+        if (llChild.getType() == Token.GETPROP) {\n+          Node protoChild = llChild.getLastChild();\n+          Node protoParent = llChild.getParent();\n+          if (protoChild.getString().equals(\"prototype\")) {\n+            if (protoParent != null && NodeUtil.isGet(protoParent)) {\n+              Node grandParent = protoParent.getParent();\n+              if (grandParent != null &&\n+                  grandParent.getType() == Token.FUNCTION &&\n+                  grandParent.getFirstChild() != null &&\n+                  NodeUtil.isGet(grandParent.getFirstChild().getNext())) {\n+                // Mark function as being lent to a prototype.\n+                return false;\n+              }\n+            }\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}