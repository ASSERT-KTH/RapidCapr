{
    "patch": "private void readTypeVariables() {\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n    if (actualTypeArgument == null) {\n        // if getActualTypeArgumentFor returns null, try to extract the actual type from the first bound of the type variable instead\n        if (typeVariable.getBounds().length > 0) {\n            actualTypeArgument = typeVariable.getBounds()[0];\n        }\n    }\n    if (actualTypeArgument != null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    } else {\n        throw new IllegalStateException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..5578060fa 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,24 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+    if (actualTypeArgument == null) {\n+        // if getActualTypeArgumentFor returns null, try to extract the actual type from the first bound of the type variable instead\n+        if (typeVariable.getBounds().length > 0) {\n+            actualTypeArgument = typeVariable.getBounds()[0];\n+        }\n+    }\n+    if (actualTypeArgument != null) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    } else {\n+        throw new IllegalStateException(\"Unable to extract actual type for type variable: \" + typeVariable.getTypeName());\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}