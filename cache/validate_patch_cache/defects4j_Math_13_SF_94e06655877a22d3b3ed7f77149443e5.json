{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        double[] realEigenvalues = dec.getRealEigenvalues();\n        double[] imagEigenvalues = dec.getImagEigenvalues();\n        if (imagEigenvalues != null) {\n            throw new IllegalArgumentException(\"No square root exists.\");\n        }\n        for (int i = 0; i < realEigenvalues.length; ++i) {\n            if (realEigenvalues[i] < 0) {\n                throw new IllegalArgumentException(\"No square root exists.\");\n            } else {\n                realEigenvalues[i] = FastMath.sqrt(realEigenvalues[i]);\n            }\n        }\n        RealMatrix v = dec.getV();\n        RealMatrix dSqrt = MatrixUtils.createRealDiagonalMatrix(realEigenvalues);\n        RealMatrix vT = v.transpose();\n        return v.multiply(dSqrt).multiply(vT);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..c94067e86 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,22 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        double[] realEigenvalues = dec.getRealEigenvalues();\n+        double[] imagEigenvalues = dec.getImagEigenvalues();\n+        if (imagEigenvalues != null) {\n+            throw new IllegalArgumentException(\"No square root exists.\");\n+        }\n+        for (int i = 0; i < realEigenvalues.length; ++i) {\n+            if (realEigenvalues[i] < 0) {\n+                throw new IllegalArgumentException(\"No square root exists.\");\n+            } else {\n+                realEigenvalues[i] = FastMath.sqrt(realEigenvalues[i]);\n+            }\n+        }\n+        RealMatrix v = dec.getV();\n+        RealMatrix dSqrt = MatrixUtils.createRealDiagonalMatrix(realEigenvalues);\n+        RealMatrix vT = v.transpose();\n+        return v.multiply(dSqrt).multiply(vT);\n     }\n }",
    "result_reason": "java.lang.IllegalArgumentException: No square root exists.",
    "test_result": "FAIL"
}