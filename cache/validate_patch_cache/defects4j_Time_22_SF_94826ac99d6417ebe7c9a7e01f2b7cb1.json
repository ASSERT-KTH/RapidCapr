{
    "patch": "protected BasePeriod(long duration) {\n    this(duration,\n        new PeriodType(false, false,\n            new DurationFieldType[] { DurationFieldType.weeks(),\n                                      DurationFieldType.days(),\n                                      DurationFieldType.hours(),\n                                      DurationFieldType.minutes(),\n                                      DurationFieldType.seconds(),\n                                      DurationFieldType.millis() }).withMillisRemoved(),\n        ISOChronology.getInstanceUTC());\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..15b14877 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    this(duration,\n+        new PeriodType(false, false,\n+            new DurationFieldType[] { DurationFieldType.weeks(),\n+                                      DurationFieldType.days(),\n+                                      DurationFieldType.hours(),\n+                                      DurationFieldType.minutes(),\n+                                      DurationFieldType.seconds(),\n+                                      DurationFieldType.millis() }).withMillisRemoved(),\n+        ISOChronology.getInstanceUTC());\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor PeriodType in class PeriodType cannot be applied to given types;",
    "test_result": "ERROR"
}