{
    "patch": "    return NodeUtil.isFunctionExpression(n)\n        && NodeUtil.getFunctionBody(n) != null\n        && !NodeUtil.getFunctionBody(n).hasChildren();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..f9ffb4a3 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,9 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    return NodeUtil.isFunctionExpression(n)\n+        && NodeUtil.getFunctionBody(n) != null\n+        && !NodeUtil.getFunctionBody(n).hasChildren();\n   }\n \n   /**",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}