{
    "patch": "boolean assigned = false;\n\nfor (Reference ref : references) {\n  if (ref.isAssignedVar()) {\n    if (assigned) {\n      return false;\n    } else {\n      assigned = true;\n    }\n  }\n}\n\nreturn assigned;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..570e1195 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,19 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+boolean assigned = false;\n+\n+for (Reference ref : references) {\n+  if (ref.isAssignedVar()) {\n+    if (assigned) {\n+      return false;\n+    } else {\n+      assigned = true;\n+    }\n+  }\n+}\n+\n+return assigned;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: variable ref is already defined in method isAssignedOnceInLifetime()",
    "test_result": "ERROR"
}