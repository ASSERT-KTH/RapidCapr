{
    "patch": "public String fixCode(String code) {\n    code = code.replaceAll(\"[\\\\r\\\\n]+\", \" \"); // remove newlines\n    // get the for loop initialization clause\n    String forInitClause = code.substring(code.indexOf(\"for(\") + 4, code.indexOf(\";\"));\n\n    // check if the for loop initialization clause contains the 'in' operator\n    if (forInitClause.contains(\"in\")) {\n        // if yes, wrap the array literal in brackets\n        int openParenIndex = forInitClause.indexOf(\"(\");\n        int inOperatorIndex = forInitClause.indexOf(\"in\");\n        String arrayLiteral = forInitClause.substring(inOperatorIndex + 3, forInitClause.length()).trim();\n        String wrappedArrayLiteral = \"[\" + arrayLiteral + \"]\";\n        String newForInitClause = forInitClause.substring(0, inOperatorIndex) + wrappedArrayLiteral + forInitClause.substring(inOperatorIndex + arrayLiteral.length() + 3);\n        code = code.replace(forInitClause, newForInitClause);\n    }\n    return code;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..14300208 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,23 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    code = code.replaceAll(\"[\\\\r\\\\n]+\", \" \"); // remove newlines\n+    // get the for loop initialization clause\n+    String forInitClause = code.substring(code.indexOf(\"for(\") + 4, code.indexOf(\";\"));\n+\n+    // check if the for loop initialization clause contains the 'in' operator\n+    if (forInitClause.contains(\"in\")) {\n+        // if yes, wrap the array literal in brackets\n+        int openParenIndex = forInitClause.indexOf(\"(\");\n+        int inOperatorIndex = forInitClause.indexOf(\"in\");\n+        String arrayLiteral = forInitClause.substring(inOperatorIndex + 3, forInitClause.length()).trim();\n+        String wrappedArrayLiteral = \"[\" + arrayLiteral + \"]\";\n+        String newForInitClause = forInitClause.substring(0, inOperatorIndex) + wrappedArrayLiteral + forInitClause.substring(inOperatorIndex + arrayLiteral.length() + 3);\n+        code = code.replace(forInitClause, newForInitClause);\n+    }\n+    return code;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}