{
    "patch": "                int dst = 0;\n                if (offsetLocal > offsetAdjusted) {\n                    dst = 1;\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    }\n                } else if (offsetLocal < offsetAdjusted) {\n                    dst = -1;\n                    long nextLocal = previousTransition(instantAdjusted);\n                    long nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    }\n                }\n                return offsetAdjusted + dst;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..241b702f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,23 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                int dst = 0;\n+                if (offsetLocal > offsetAdjusted) {\n+                    dst = 1;\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                } else if (offsetLocal < offsetAdjusted) {\n+                    dst = -1;\n+                    long nextLocal = previousTransition(instantAdjusted);\n+                    long nextAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                }\n+                return offsetAdjusted + dst;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}