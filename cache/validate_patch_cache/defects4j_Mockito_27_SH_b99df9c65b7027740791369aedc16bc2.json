{
    "patch": "MockHandler<T> oldMockHandler = getMockHandler(mock);\nMockSettingsImpl mockSettings = (MockSettingsImpl) withSettings().spiedInstance(mock).defaultAnswer(CALLS_REAL_METHODS);\nMockitoSession myMockitoSession = mockitoSession().initMocks(threadSafeMockitoMock.getTestInstance());\ntry {\n    T newMock = (T) myMockitoSession.getMockMaker().createMock(mockSettings, oldMockHandler.getClass(), oldMockHandler);\n    ((Factory) mock).setCallbacks(((Factory) newMock).getCallbacks());\n} finally {\n    myMockitoSession.finishMocking();\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..6875cc23c 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,18 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> oldMockHandler = getMockHandler(mock);\n+MockSettingsImpl mockSettings = (MockSettingsImpl) withSettings().spiedInstance(mock).defaultAnswer(CALLS_REAL_METHODS);\n+MockitoSession myMockitoSession = mockitoSession().initMocks(threadSafeMockitoMock.getTestInstance());\n+try {\n+    T newMock = (T) myMockitoSession.getMockMaker().createMock(mockSettings, oldMockHandler.getClass(), oldMockHandler);\n+    ((Factory) mock).setCallbacks(((Factory) newMock).getCallbacks());\n+} finally {\n+    myMockitoSession.finishMocking();\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: variable oldMockHandler is already defined in method <T>resetMock(T)",
    "test_result": "ERROR"
}