{
    "patch": " String nodeType = n.getParent().getToken().toString();\n if (functionType.isThisTypeExplicit() && !isGetPropOrGetElem(nodeType)) {\n    report(t, n, INVALID_THIS_TYPE, childType.toString());\n }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..87ed29b1 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,10 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+ String nodeType = n.getParent().getToken().toString();\n+ if (functionType.isThisTypeExplicit() && !isGetPropOrGetElem(nodeType)) {\n+    report(t, n, INVALID_THIS_TYPE, childType.toString());\n+ }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}