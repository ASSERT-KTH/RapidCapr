{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMockSettingsImpl<T> settings = (MockSettingsImpl<T>) withSettings().spiedInstance(mock).defaultAnswer(RETURNS_DEFAULTS);\nMethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\nif (mock instanceof Factory) {\n    ((Factory) mock).setCallback(0, newFilter);\n} else if (mock instanceof Enhancer) {\n    ((Factory) ((Enhancer) mock).getCallback(0)).setCallback(0, newFilter);\n} else {\n    ((MockUtil) mockUtil).getMockHandler(mock).setInterceptor(newFilter);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..dc6b80d15 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MockSettingsImpl<T> settings = (MockSettingsImpl<T>) withSettings().spiedInstance(mock).defaultAnswer(RETURNS_DEFAULTS);\n+MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\n+if (mock instanceof Factory) {\n+    ((Factory) mock).setCallback(0, newFilter);\n+} else if (mock instanceof Enhancer) {\n+    ((Factory) ((Enhancer) mock).getCallback(0)).setCallback(0, newFilter);\n+} else {\n+    ((MockUtil) mockUtil).getMockHandler(mock).setInterceptor(newFilter);\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: type MockSettingsImpl does not take parameters",
    "test_result": "ERROR"
}