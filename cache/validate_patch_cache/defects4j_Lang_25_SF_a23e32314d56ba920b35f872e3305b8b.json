{
    "patch": "public String convertISO8859_1_ESCAPE(String input) {\n    StringBuffer sb = new StringBuffer();\n    int i = 0;\n    while (i < input.length()) {\n        if (input.charAt(i) == '\\\\') {\n            if ((i + 5 >= input.length())) {\n                sb.append(input.charAt(i));\n                i++;\n            } else if ((input.charAt(i + 1) == 'u') && (isHexDigit(input.charAt(i + 2)))\n                    && (isHexDigit(input.charAt(i + 3))) && (isHexDigit(input.charAt(i + 4)))\n                    && (isHexDigit(input.charAt(i + 5)))) {\n                sb.append((char) Integer.parseInt(input.substring(i + 2, i + 6), 16));\n                i += 6;\n            } else {\n                sb.append(input.charAt(i));\n                i++;\n            }\n        } else {\n            sb.append(input.charAt(i));\n            i++;\n        }\n    }\n    return sb.toString();\n}\n\nprivate boolean isHexDigit(char ch) {\n    return ((ch >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F'));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d862a7c1 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,34 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String convertISO8859_1_ESCAPE(String input) {\n+    StringBuffer sb = new StringBuffer();\n+    int i = 0;\n+    while (i < input.length()) {\n+        if (input.charAt(i) == '\\\\') {\n+            if ((i + 5 >= input.length())) {\n+                sb.append(input.charAt(i));\n+                i++;\n+            } else if ((input.charAt(i + 1) == 'u') && (isHexDigit(input.charAt(i + 2)))\n+                    && (isHexDigit(input.charAt(i + 3))) && (isHexDigit(input.charAt(i + 4)))\n+                    && (isHexDigit(input.charAt(i + 5)))) {\n+                sb.append((char) Integer.parseInt(input.substring(i + 2, i + 6), 16));\n+                i += 6;\n+            } else {\n+                sb.append(input.charAt(i));\n+                i++;\n+            }\n+        } else {\n+            sb.append(input.charAt(i));\n+            i++;\n+        }\n+    }\n+    return sb.toString();\n+}\n+\n+private boolean isHexDigit(char ch) {\n+    return ((ch >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F'));\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}