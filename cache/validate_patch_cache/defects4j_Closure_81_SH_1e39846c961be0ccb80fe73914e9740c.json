{
    "patch": "      Name name = functionNode.getFunctionName();\n      Boolean isUnnamedFunction = false;\n      if (name == null) {\n        // Create a unique name for this function, to avoid naming collisions.\n        String uniqueName = \"__unknown__function__\" + uniqueId++;\n        name = new Name();\n        name.setIdentifier(uniqueName);\n        isUnnamedFunction = true;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..608473f4 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,15 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      Name name = functionNode.getFunctionName();\n+      Boolean isUnnamedFunction = false;\n+      if (name == null) {\n+        // Create a unique name for this function, to avoid naming collisions.\n+        String uniqueName = \"__unknown__function__\" + uniqueId++;\n+        name = new Name();\n+        name.setIdentifier(uniqueName);\n+        isUnnamedFunction = true;\n+      }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}