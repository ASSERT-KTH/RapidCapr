{
    "patch": "                final long nextLocal = nextTransition(instantAdjusted);\n                final long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    // we're near a DST boundary and we've not succeeded yet\n                    // try advancing one more step along\n                    final long nextAdjusted2 = nextTransition(nextAdjusted - offsetAdjusted);\n                    if (nextLocal != nextAdjusted2) {\n                        // we give up and choose the earlier offset (standard)\n                        return offsetLocal;\n                    }\n                    // try again using the new estimate\n                    return getOffsetFromLocal(instantLocal);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1e0e1ca2 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                final long nextLocal = nextTransition(instantAdjusted);\n+                final long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    // we're near a DST boundary and we've not succeeded yet\n+                    // try advancing one more step along\n+                    final long nextAdjusted2 = nextTransition(nextAdjusted - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted2) {\n+                        // we give up and choose the earlier offset (standard)\n+                        return offsetLocal;\n+                    }\n+                    // try again using the new estimate\n+                    return getOffsetFromLocal(instantLocal);\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}