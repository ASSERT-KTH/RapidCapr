{
    "patch": "/**\n* Check if this type is empty (i.e., NoType, NoObjectType, NullType, UnknownType, VoidType, or NoResolvedType).\n*\n* @return True if the type is empty, false otherwise.\n*/\npublic final boolean isEmptyType() {\n    boolean isEmpty =\n            this instanceof NoType ||\n            this instanceof NoObjectType ||\n            this instanceof NullType ||\n            this instanceof VoidType ||\n            this instanceof UnknownType ||\n            isNoResolvedType();\n\n    return isEmpty;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..81de1346 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,22 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+/**\n+* Check if this type is empty (i.e., NoType, NoObjectType, NullType, UnknownType, VoidType, or NoResolvedType).\n+*\n+* @return True if the type is empty, false otherwise.\n+*/\n+public final boolean isEmptyType() {\n+    boolean isEmpty =\n+            this instanceof NoType ||\n+            this instanceof NoObjectType ||\n+            this instanceof NullType ||\n+            this instanceof VoidType ||\n+            this instanceof UnknownType ||\n+            isNoResolvedType();\n+\n+    return isEmpty;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}