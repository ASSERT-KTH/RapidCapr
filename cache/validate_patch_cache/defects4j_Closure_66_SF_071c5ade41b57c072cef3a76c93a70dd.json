{
    "patch": "public static double getTypedPercent(String json) {\n    Gson gson = new Gson();\n    Map<String, Object> map = gson.fromJson(json, Map.class);\n    double totalCount = ((Number) map.get(\"total_count\")).doubleValue();\n    double typedCount = ((Number) ((Map) map.get(\"counts\")).get(\"typed\")).doubleValue();\n    return (typedCount / totalCount) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..25177e59 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    Gson gson = new Gson();\n+    Map<String, Object> map = gson.fromJson(json, Map.class);\n+    double totalCount = ((Number) map.get(\"total_count\")).doubleValue();\n+    double typedCount = ((Number) ((Map) map.get(\"counts\")).get(\"typed\")).doubleValue();\n+    return (typedCount / totalCount) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}