{
    "patch": "          && 0 <= charno && charno < sourceExcerpt.length()) {\n        // Add padding between the end of the error message and the end of the line\n        int endOfLine = sourceExcerpt.indexOf('\\n', charno);\n        if (endOfLine == -1) {\n            endOfLine = sourceExcerpt.length();\n        }\n        int padding = endOfLine - charno - 1;\n        b.append(String.format(\"%\" + padding + \"s\", \" \"));\n        b.append(\"^\\n\");\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..486ceb2c 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -96,6 +96,15 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // at the end of the line\n       if (excerpt.equals(LINE)\n           && 0 <= charno && charno < sourceExcerpt.length()) {\n+        // Add padding between the end of the error message and the end of the line\n+        int endOfLine = sourceExcerpt.indexOf('\\n', charno);\n+        if (endOfLine == -1) {\n+            endOfLine = sourceExcerpt.length();\n+        }\n+        int padding = endOfLine - charno - 1;\n+        b.append(String.format(\"%\" + padding + \"s\", \" \"));\n+        b.append(\"^\\n\");\n+      }\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}