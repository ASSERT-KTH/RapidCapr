{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    // If mean, variance or geomean have been overridden,\n    // need to increment these\n    if(meanImpl != null && !(meanImpl instanceof Mean)) {\n        if(meanEvaluator == null) {\n            meanEvaluator = new Mean();\n        }\n        if(!Double.isNaN(value)) {\n            meanEvaluator.increment(value);\n        }\n        meanImpl = meanEvaluator;\n    }\n    if(varianceImpl != null && !(varianceImpl instanceof Variance)) {\n        if(varianceEvaluator == null) {\n            varianceEvaluator = new Variance();\n        }\n        if(!Double.isNaN(value)) {\n            varianceEvaluator.increment(value);\n        }\n        varianceImpl = varianceEvaluator;\n    }\n    if(geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n        if(geoMeanEvaluator == null) {\n            geoMeanEvaluator = new GeometricMean();\n        }\n        if(value > 0) {\n            geoMeanEvaluator.increment(value);\n        }\n        geoMeanImpl = geoMeanEvaluator;\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..37e5ddde0 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,44 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    // If mean, variance or geomean have been overridden,\n+    // need to increment these\n+    if(meanImpl != null && !(meanImpl instanceof Mean)) {\n+        if(meanEvaluator == null) {\n+            meanEvaluator = new Mean();\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+        if(!Double.isNaN(value)) {\n+            meanEvaluator.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+        meanImpl = meanEvaluator;\n+    }\n+    if(varianceImpl != null && !(varianceImpl instanceof Variance)) {\n+        if(varianceEvaluator == null) {\n+            varianceEvaluator = new Variance();\n+        }\n+        if(!Double.isNaN(value)) {\n+            varianceEvaluator.increment(value);\n+        }\n+        varianceImpl = varianceEvaluator;\n+    }\n+    if(geoMeanImpl != null && !(geoMeanImpl instanceof GeometricMean)) {\n+        if(geoMeanEvaluator == null) {\n+            geoMeanEvaluator = new GeometricMean();\n+        }\n+        if(value > 0) {\n+            geoMeanEvaluator.increment(value);\n         }\n-        n++;\n+        geoMeanImpl = geoMeanEvaluator;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}