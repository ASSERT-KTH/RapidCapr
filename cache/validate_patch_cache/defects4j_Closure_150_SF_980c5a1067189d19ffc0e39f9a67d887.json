{
    "patch": "    @Override public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n == scope.getRootNode()) return;\n\n      if (n.getType() == Token.LP && parent == scope.getRootNode()) {\n        if(NodeUtil.isFunctionExpression(n.getFirstChild())) { // Add this line to the original code\n          defineDeclaredFunction(n.getFirstChild(), n);\n\n        } else {\n          handleFunctionInputs(n);\n        }\n        \n        return;\n      }\n      \n      attachLiteralTypes(n);\n      switch (n.getType()) {\n        case Token.FUNCTION:\n          if (parent.getType() == Token.NAME) {\n            return;\n          }\n          defineDeclaredFunction(n, parent);\n          break;\n        case Token.CATCH:\n          defineCatch(n, parent);\n          break;\n        case Token.VAR:\n          defineVar(n, parent);\n          break;\n        default:\n          break;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..16179bf8 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1444,10 +1444,16 @@ final class TypedScopeCreator implements ScopeCreator {\n       if (n == scope.getRootNode()) return;\n \n       if (n.getType() == Token.LP && parent == scope.getRootNode()) {\n-        handleFunctionInputs(parent);\n+        if(NodeUtil.isFunctionExpression(n.getFirstChild())) { // Add this line to the original code\n+          defineDeclaredFunction(n.getFirstChild(), n);\n+\n+        } else {\n+          handleFunctionInputs(n);\n+        }\n+        \n         return;\n       }\n-\n+      \n       attachLiteralTypes(n);\n       switch (n.getType()) {\n         case Token.FUNCTION:\n@@ -1462,6 +1468,8 @@ final class TypedScopeCreator implements ScopeCreator {\n         case Token.VAR:\n           defineVar(n, parent);\n           break;\n+        default:\n+          break;\n       }\n     }\n ",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}