{
    "patch": "        } else if (parent.isExprResult() || parent.isReturn()) {\n          // If the assignment appears as part of an expression statement or\n          // return statement, then it should be associated with the RHS.\n          recordDepScope(recordNode, ns);\n        } else {\n          // Otherwise, the RHS should be associated with the LHS.\n          recordDepScope(nameNode, ns);\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..7052a2eb 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,14 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n+        } else if (parent.isExprResult() || parent.isReturn()) {\n+          // If the assignment appears as part of an expression statement or\n+          // return statement, then it should be associated with the RHS.\n+          recordDepScope(recordNode, ns);\n         } else {\n+          // Otherwise, the RHS should be associated with the LHS.\n+          recordDepScope(nameNode, ns);\n+        }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}