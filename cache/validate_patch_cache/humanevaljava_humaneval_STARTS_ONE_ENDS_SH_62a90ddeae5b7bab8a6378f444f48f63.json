{
    "patch": "if (n < 1) {\n    throw new IllegalArgumentException(\"Input should be greater than or equal to 1\");\n} else if (n == 1) {\n    return 1;\n} else {\n    long result = (long) Math.pow(10, n - 1) + 8 * (long) Math.pow(10, n - 2);\n    if (result <= Integer.MAX_VALUE) {\n        return (int) result;\n    } else {\n        throw new ArithmeticException(\"Result is too large to fit in an integer\");\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\nindex b8a4679..aed30d0 100644\n--- a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n+++ b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n@@ -7,6 +7,17 @@ public class STARTS_ONE_ENDS {\n     public static int starts_one_ends(int n) {\n         if (n == 1)\n             return 1;\n-        return (int) ((10 + 9) * Math.pow(10, n - 2));\n+if (n < 1) {\n+    throw new IllegalArgumentException(\"Input should be greater than or equal to 1\");\n+} else if (n == 1) {\n+    return 1;\n+} else {\n+    long result = (long) Math.pow(10, n - 1) + 8 * (long) Math.pow(10, n - 2);\n+    if (result <= Integer.MAX_VALUE) {\n+        return (int) result;\n+    } else {\n+        throw new ArithmeticException(\"Result is too large to fit in an integer\");\n+    }\n+}\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}