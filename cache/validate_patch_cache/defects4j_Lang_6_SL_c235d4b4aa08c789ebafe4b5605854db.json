{
    "patch": "pos -= Character.charCount(Character.codePointBefore(input, pos));\nif (consumed == 0 && input.charAt(pos) == '\\b') {\n    out.write(\"\\\\b\");\n    pos++;\n} else {\n    pos += consumed;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..c0f1d371 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,13 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+pos -= Character.charCount(Character.codePointBefore(input, pos));\n+if (consumed == 0 && input.charAt(pos) == '\\b') {\n+    out.write(\"\\\\b\");\n+    pos++;\n+} else {\n+    pos += consumed;\n+}\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: -1",
    "test_result": "FAIL"
}