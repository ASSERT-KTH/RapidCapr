{
    "patch": "    public double getPct(Object v) {\n        double cumPct = getCumPct((Comparable<?>) v);\n        double totalCount = 0;\n        for (Comparable<?> key : data.keySet()) {\n            totalCount += data.get(key);\n        }\n        return (totalCount == 0) ? 0 : cumPct / totalCount * 100;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..2080d527b 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,14 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+    public double getPct(Object v) {\n+        double cumPct = getCumPct((Comparable<?>) v);\n+        double totalCount = 0;\n+        for (Comparable<?> key : data.keySet()) {\n+            totalCount += data.get(key);\n+        }\n+        return (totalCount == 0) ? 0 : cumPct / totalCount * 100;\n+    }\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}