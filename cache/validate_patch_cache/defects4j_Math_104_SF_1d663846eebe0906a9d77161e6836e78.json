{
    "patch": "public static double regularizedGamma(double a, double x) {\n    final double epsilon = 1e-15;\n    final int maxIterations = 1000;\n    double sum = 0.0;\n    double term = 1.0 / a;\n    int i = 1;\n    while (Math.abs(term) > epsilon && i <= maxIterations) {\n        sum += term;\n        term *= x / (a + i);\n        i++;\n    }\n    if(i > maxIterations){\n        throw new RuntimeException(\"maximum number of iterations exceeded\");\n    }\n    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n}\n\npublic static double logGamma(double x) {\n    double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n    double sum = 1.0 \n               + 76.18009173 / (x + 0) - 86.50532033 / (x + 1) \n               + 24.01409822 / (x + 2) - 1.231739516 / (x + 3) \n               + 0.00120858003 / (x + 4) - 0.00000536382 / (x + 5);\n    return tmp + Math.log(sum * Math.sqrt(2 * Math.PI));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..15e2c45c4 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,31 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    final double epsilon = 1e-15;\n+    final int maxIterations = 1000;\n+    double sum = 0.0;\n+    double term = 1.0 / a;\n+    int i = 1;\n+    while (Math.abs(term) > epsilon && i <= maxIterations) {\n+        sum += term;\n+        term *= x / (a + i);\n+        i++;\n+    }\n+    if(i > maxIterations){\n+        throw new RuntimeException(\"maximum number of iterations exceeded\");\n+    }\n+    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+}\n+\n+public static double logGamma(double x) {\n+    double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n+    double sum = 1.0 \n+               + 76.18009173 / (x + 0) - 86.50532033 / (x + 1) \n+               + 24.01409822 / (x + 2) - 1.231739516 / (x + 3) \n+               + 0.00120858003 / (x + 4) - 0.00000536382 / (x + 5);\n+    return tmp + Math.log(sum * Math.sqrt(2 * Math.PI));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}