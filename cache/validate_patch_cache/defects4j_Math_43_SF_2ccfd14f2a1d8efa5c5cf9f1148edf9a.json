{
    "patch": "public void addValue(double value) {\n    if (!(Double.isNaN(value) || Double.isInfinite(value))) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        sumLogImpl.increment(value);\n        secondMoment.increment(value);\n        // If mean, variance or geomean have been overridden,\n        // need to increment these\n        if (!(meanImpl instanceof Mean) || (meanImpl instanceof Mean && !Double.isNaN(((Mean) meanImpl).getResult()))) {\n            meanImpl.increment(value);\n        }\n        if (!(varianceImpl instanceof Variance) || (varianceImpl instanceof Variance && !Double.isNaN(((Variance) varianceImpl).getResult()))) {\n            varianceImpl.increment(value);\n        }\n        if (!(geoMeanImpl instanceof GeometricMean) || (geoMeanImpl instanceof GeometricMean && !Double.isNaN(((GeometricMean) geoMeanImpl).getResult()))) {\n            if (value > 0) {\n                geoMeanImpl.increment(value);\n            }\n        }\n        n++;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..03ee5582e 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,7 +146,8 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n+    if (!(Double.isNaN(value) || Double.isInfinite(value))) {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n@@ -155,17 +156,20 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         secondMoment.increment(value);\n         // If mean, variance or geomean have been overridden,\n         // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+        if (!(meanImpl instanceof Mean) || (meanImpl instanceof Mean && !Double.isNaN(((Mean) meanImpl).getResult()))) {\n             meanImpl.increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n+        if (!(varianceImpl instanceof Variance) || (varianceImpl instanceof Variance && !Double.isNaN(((Variance) varianceImpl).getResult()))) {\n             varianceImpl.increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+        if (!(geoMeanImpl instanceof GeometricMean) || (geoMeanImpl instanceof GeometricMean && !Double.isNaN(((GeometricMean) geoMeanImpl).getResult()))) {\n+            if (value > 0) {\n+                geoMeanImpl.increment(value);\n+            }\n         }\n         n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError: expected:<1.5275252316519468> but was:<NaN>",
    "test_result": "FAIL"
}