{
    "patch": "      } else if (isGlobalScope(scope)) {\n        handleUndefinedGlobal(module, scope, n, parent, name);\n      } else {\n        String varName;\n        if (NodeUtil.isName(parent)) {\n          varName = parent.getString();\n        } else if (NodeUtil.isAssign(parent)) {\n          varName = parent.getFirstChild().getString();\n        } else {\n          varName = null;\n        }\n        if (varName != null) {\n          handleUndefinedLocal(module, scope, n, parent, varName);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..6bac39a0 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,21 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+      } else if (isGlobalScope(scope)) {\n+        handleUndefinedGlobal(module, scope, n, parent, name);\n+      } else {\n+        String varName;\n+        if (NodeUtil.isName(parent)) {\n+          varName = parent.getString();\n+        } else if (NodeUtil.isAssign(parent)) {\n+          varName = parent.getFirstChild().getString();\n+        } else {\n+          varName = null;\n+        }\n+        if (varName != null) {\n+          handleUndefinedLocal(module, scope, n, parent, varName);\n+        }\n+      }\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}