{
    "patch": "final int delta = offsetLocal - offsetAdjusted;\nif (delta >= 0) {\n    final long nextTransition = nextTransition(instantAdjusted);\n    final long adjNext = nextTransition(instantLocal - offsetAdjusted);\n    if (nextTransition == adjNext && offsetLocal != offsetAdjusted) {\n        return offsetLocal;\n    } else {\n        return offsetAdjusted;\n    }\n} else {\n    // delta < 0\n    final long lastTransition = previousTransition(instantLocal - offsetAdjusted);\n    final long adjLast = previousTransition(instantAdjusted);\n    if (lastTransition == adjLast && offsetLocal != offsetAdjusted) {\n        return offsetLocal;\n    }\n    final int offsetBeforeLast = getOffset(previousTransition(lastTransition));\n    if (offsetBeforeLast < offsetAdjusted) {\n        return offsetBeforeLast;\n    }\n    final int offsetAfterAdjusted = getOffset(nextTransition(adjLast));\n    if (offsetAfterAdjusted > offsetLocal) {\n        return offsetAfterAdjusted;\n    }\n    return offsetAdjusted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..81d387a7 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,32 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+final int delta = offsetLocal - offsetAdjusted;\n+if (delta >= 0) {\n+    final long nextTransition = nextTransition(instantAdjusted);\n+    final long adjNext = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextTransition == adjNext && offsetLocal != offsetAdjusted) {\n+        return offsetLocal;\n+    } else {\n+        return offsetAdjusted;\n+    }\n+} else {\n+    // delta < 0\n+    final long lastTransition = previousTransition(instantLocal - offsetAdjusted);\n+    final long adjLast = previousTransition(instantAdjusted);\n+    if (lastTransition == adjLast && offsetLocal != offsetAdjusted) {\n+        return offsetLocal;\n+    }\n+    final int offsetBeforeLast = getOffset(previousTransition(lastTransition));\n+    if (offsetBeforeLast < offsetAdjusted) {\n+        return offsetBeforeLast;\n+    }\n+    final int offsetAfterAdjusted = getOffset(nextTransition(adjLast));\n+    if (offsetAfterAdjusted > offsetLocal) {\n+        return offsetAfterAdjusted;\n+    }\n+    return offsetAdjusted;\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}