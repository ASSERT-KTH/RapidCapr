{
    "patch": "    private Property getProperty(String name) {\n      Property prop = properties.get(name);\n      if (prop == null) {\n        prop = new Property(name, getScope());\n        properties.put(name, prop);\n      } else if (prop.getNameNode().isNumber()) {\n        // The property already exists, but it has previously been accessed\n        // as a number. We can't mix numbers and strings, so we need to create\n        // a new property with the same name as a string and remove the\n        // original property.\n        removeProperty(name);\n        prop = new Property(name, getScope());\n        properties.put(name, prop);\n      }\n      return prop;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..1728f2af 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,22 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+    private Property getProperty(String name) {\n+      Property prop = properties.get(name);\n+      if (prop == null) {\n+        prop = new Property(name, getScope());\n+        properties.put(name, prop);\n+      } else if (prop.getNameNode().isNumber()) {\n+        // The property already exists, but it has previously been accessed\n+        // as a number. We can't mix numbers and strings, so we need to create\n+        // a new property with the same name as a string and remove the\n+        // original property.\n+        removeProperty(name);\n+        prop = new Property(name, getScope());\n+        properties.put(name, prop);\n+      }\n+      return prop;\n+    }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}