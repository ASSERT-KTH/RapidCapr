{
    "patch": "// Find and replace escape sequence hex values with their corresponding ASCII characters\npublic static String escape(String input) {\n    String output = input;\n    for (int i = 0; i < ESCAPE_SEQ_HEX_VALUES.length; i++) {\n        String escapeSeqHexValue = ESCAPE_SEQ_HEX_VALUES[i];\n        String asciiChar = ESCAPE_SEQ_HEX_VALUE_TO_ASCII_CHAR.get(escapeSeqHexValue);\n        // fix bug: add null check and escape ASCII special character $\n        if (asciiChar != null && (\"$\".equals(asciiChar) || !SPECIAL_CHARS.contains(asciiChar))) {\n            output = output.replace(escapeSeqHexValue, asciiChar);\n        } else {\n            output = output.replace(escapeSeqHexValue, \"\\\\\" + escapeSeqHexValue);\n        }\n    }\n    return output;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}