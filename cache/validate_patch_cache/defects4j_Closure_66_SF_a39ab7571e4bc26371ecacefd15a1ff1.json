{
    "patch": "public double getTypedPercent(String jsonStr) {\n    JSONObject jsonObject = new JSONObject(jsonStr);\n    int totalProperties = jsonObject.length();\n    int typedProperties = 0;\n    for (String key : jsonObject.keySet()) {\n        char firstChar = key.charAt(0);\n        if (firstChar >= 'a' && firstChar <= 'z') {\n            continue;\n        }\n        Object value = jsonObject.get(key);\n        if (value instanceof String) {\n            try {\n                Double.parseDouble((String) value);\n                typedProperties++;\n            } catch (NumberFormatException e) {\n                // ignore the property if it is not a number\n            }\n        }\n    }\n    return ((double) typedProperties) / totalProperties * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..8ff1cb86 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String jsonStr) {\n+    JSONObject jsonObject = new JSONObject(jsonStr);\n+    int totalProperties = jsonObject.length();\n+    int typedProperties = 0;\n+    for (String key : jsonObject.keySet()) {\n+        char firstChar = key.charAt(0);\n+        if (firstChar >= 'a' && firstChar <= 'z') {\n+            continue;\n+        }\n+        Object value = jsonObject.get(key);\n+        if (value instanceof String) {\n+            try {\n+                Double.parseDouble((String) value);\n+                typedProperties++;\n+            } catch (NumberFormatException e) {\n+                // ignore the property if it is not a number\n+            }\n+        }\n+    }\n+    return ((double) typedProperties) / totalProperties * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}