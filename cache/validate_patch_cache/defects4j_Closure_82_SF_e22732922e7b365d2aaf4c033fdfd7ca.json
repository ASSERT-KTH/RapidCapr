{
    "patch": "public final boolean isEmptyType() {\n    boolean isEmpty = isNoType() || isVoidType() || isUnknownType() || isNullType();\n    if (!isEmpty) {\n        if (isPrimitiveType()) {\n            isEmpty = false;\n        } else if (isArrayType()) {\n            JSType elementType = getElementType();\n            if (elementType == null) {\n                isEmpty = true;\n            } else {\n                isEmpty = elementType.isEmptyType();\n            }\n        } else if (isObjectTypes()) {\n            isEmpty = true;\n            for (ObjectType type : getAsObjectTypes()) {\n                if (!type.isEmptyType()) {\n                    isEmpty = false;\n                    break;\n                }\n            }\n        } else {\n            isEmpty = isNoObjectType() || isNoResolvedType() || isUnionType();\n        }\n    }\n    return isEmpty;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..1c51ff52 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,32 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    boolean isEmpty = isNoType() || isVoidType() || isUnknownType() || isNullType();\n+    if (!isEmpty) {\n+        if (isPrimitiveType()) {\n+            isEmpty = false;\n+        } else if (isArrayType()) {\n+            JSType elementType = getElementType();\n+            if (elementType == null) {\n+                isEmpty = true;\n+            } else {\n+                isEmpty = elementType.isEmptyType();\n+            }\n+        } else if (isObjectTypes()) {\n+            isEmpty = true;\n+            for (ObjectType type : getAsObjectTypes()) {\n+                if (!type.isEmptyType()) {\n+                    isEmpty = false;\n+                    break;\n+                }\n+            }\n+        } else {\n+            isEmpty = isNoObjectType() || isNoResolvedType() || isUnionType();\n+        }\n+    }\n+    return isEmpty;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}