{
    "patch": "if (entry > 0 && !Precision.equals(entry, 0d, maxUlps * Math.ulp(Math.max(1.0, Math.abs(entry)), 1))) {",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..4c7580db5 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+if (entry > 0 && !Precision.equals(entry, 0d, maxUlps * Math.ulp(Math.max(1.0, Math.abs(entry)), 1))) {\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: no suitable method found for ulp(double,int)",
    "test_result": "ERROR"
}