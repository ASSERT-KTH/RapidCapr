{
    "patch": "boolean success = true;\nfor (int i=0; i<testStringsISO8859_1_ESCAPE.length; i++) {\n    try {\n        String s = StringEscapeUtils.escapeHtml(testStringsISO8859_1_ESCAPE[i]);\n        String converted = new String(s.getBytes(\"ISO-8859-1\"), \"ISO-8859-1\");\n        assertEquals(\"Conversion not reversible (\\\\\"+testStringsISO8859_1_ESCAPE[i]+\"\\\")\",\n                    testStringsISO8859_1_ESCAPE[i], StringEscapeUtils.unescapeHtml(converted));\n    } catch (Exception e) {\n        success = false;\n        e.printStackTrace();\n    }\n}\nassertTrue(\"One or more errors detected\", success);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}