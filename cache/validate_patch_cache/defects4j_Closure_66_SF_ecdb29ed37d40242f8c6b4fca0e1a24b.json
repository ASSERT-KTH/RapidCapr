{
    "patch": "public static double getTypedPercent(JsonStructure data) {\n    if (data == null) return 0.0;\n    JsonObject obj = (JsonObject) data;\n    JsonNumber typedValue = obj.getJsonNumber(\"_typedValue\");\n    JsonNumber fullValue = obj.getJsonNumber(\"_fullValue\");\n    if (typedValue == null || fullValue == null) return 0.0;\n    double typedPercent = typedValue.doubleValue() * 100.0 / fullValue.doubleValue();\n    return typedPercent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..102b15d4 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JsonStructure data) {\n+    if (data == null) return 0.0;\n+    JsonObject obj = (JsonObject) data;\n+    JsonNumber typedValue = obj.getJsonNumber(\"_typedValue\");\n+    JsonNumber fullValue = obj.getJsonNumber(\"_fullValue\");\n+    if (typedValue == null || fullValue == null) return 0.0;\n+    double typedPercent = typedValue.doubleValue() * 100.0 / fullValue.doubleValue();\n+    return typedPercent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}