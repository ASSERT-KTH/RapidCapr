{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    while (result != null && result.isEmpty() && !stream.isEndOfStream()) {\n      stream.advance(1);\n      result = stream.getRemainingJSDocLine();\n    }\n    if (result != null && result.charAt(0) == '*') {\n        stream.advance(1);\n        return result.substring(1).trim();\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..15e11b29 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,18 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    while (result != null && result.isEmpty() && !stream.isEndOfStream()) {\n+      stream.advance(1);\n+      result = stream.getRemainingJSDocLine();\n+    }\n+    if (result != null && result.charAt(0) == '*') {\n+        stream.advance(1);\n+        return result.substring(1).trim();\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}