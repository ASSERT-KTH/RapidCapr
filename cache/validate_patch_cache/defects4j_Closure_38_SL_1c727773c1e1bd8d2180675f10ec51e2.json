{
    "patch": "    if (x == 0 && 1 / x < 0) {\n      add(\"-0\");\n    } else if (Double.isNaN(x) || Double.isInfinite(x)) {\n      add(String.valueOf(x));\n      return;\n    } else {\n      add(String.valueOf(x));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 4381487c..2e7ea7cd 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -242,7 +242,13 @@ abstract class CodeConsumer {\n     // x--4 (which is a syntax error).\n     char prev = getLastChar();\n     boolean negativeZero = isNegativeZero(x);\n-    if (x < 0 && prev == '-') {\n+    if (x == 0 && 1 / x < 0) {\n+      add(\"-0\");\n+    } else if (Double.isNaN(x) || Double.isInfinite(x)) {\n+      add(String.valueOf(x));\n+      return;\n+    } else {\n+      add(String.valueOf(x));\n       add(\" \");\n     }\n ",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...8,8,8,6,9,9,9,6,10,1[]1,11,11,11,11,11,11,...> but was:<...8,8,8,6,9,9,9,6,10,1[0,10,10,10,1]1,11,11,11,11,11,11,...>",
    "test_result": "FAIL"
}