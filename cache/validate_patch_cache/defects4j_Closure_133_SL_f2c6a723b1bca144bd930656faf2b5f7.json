{
    "patch": "try {\n    String temp = stream.getRemainingJSDocLine();\n    if (temp.contains(\"Unknown type\")) {\n        throw new IllegalStateException(\"Recorded bad position information\");\n    }\n    result = temp.replace(\"{T:\", \"{\").replace(\"T}\", \"\") .trim();\n} catch (IllegalStateException e) {\n    result = \"\";\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..6074be3a 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,15 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+try {\n+    String temp = stream.getRemainingJSDocLine();\n+    if (temp.contains(\"Unknown type\")) {\n+        throw new IllegalStateException(\"Recorded bad position information\");\n+    }\n+    result = temp.replace(\"{T:\", \"{\").replace(\"T}\", \"\") .trim();\n+} catch (IllegalStateException e) {\n+    result = \"\";\n+}\n     return result;\n   }\n ",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_TYPE_PARSE_ERROR. Bad type annotation. Unknown type T at externs line 11 : 14",
    "test_result": "FAIL"
}