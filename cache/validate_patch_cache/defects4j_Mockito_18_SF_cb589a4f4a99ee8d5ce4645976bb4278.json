{
    "patch": "public class MyClass {\n    public Object returnValueFor(Class clazz) {\n        if (clazz == String.class) {\n            return \"Hello World!\";\n        } else if (clazz == List.class) {\n            return Arrays.asList(1, 2, 3);\n        } else if (clazz == Iterable.class) {\n            return Collections.emptySet();\n        } else {\n            return null;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..66e272c38 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,19 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public class MyClass {\n+    public Object returnValueFor(Class clazz) {\n+        if (clazz == String.class) {\n+            return \"Hello World!\";\n+        } else if (clazz == List.class) {\n+            return Arrays.asList(1, 2, 3);\n+        } else if (clazz == Iterable.class) {\n+            return Collections.emptySet();\n+        } else {\n+            return null;\n+        }\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expressionTotal time: 15.754 secs",
    "test_result": "ERROR"
}