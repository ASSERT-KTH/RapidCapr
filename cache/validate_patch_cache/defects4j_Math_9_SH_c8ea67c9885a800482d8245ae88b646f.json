{
    "patch": "public Line revert() {\n    Vector3D zero = Vector3D.ZERO;\n    Vector3D revertedDirection = direction.negate();\n\n    Line reverted = new Line(zero, revertedDirection);\n\n    if (!reverted.getOrigin().equals(getOrigin())) {\n        throw new IllegalStateException(\"Failed to revert line - incorrect origin\");\n    }\n    \n    if (!reverted.getDirection().equals(getDirection().negate())) {\n        throw new IllegalStateException(\"Failed to revert line - incorrect direction\");\n    }\n\n    return reverted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..b0310e428 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,22 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+public Line revert() {\n+    Vector3D zero = Vector3D.ZERO;\n+    Vector3D revertedDirection = direction.negate();\n+\n+    Line reverted = new Line(zero, revertedDirection);\n+\n+    if (!reverted.getOrigin().equals(getOrigin())) {\n+        throw new IllegalStateException(\"Failed to revert line - incorrect origin\");\n+    }\n+    \n+    if (!reverted.getDirection().equals(getDirection().negate())) {\n+        throw new IllegalStateException(\"Failed to revert line - incorrect direction\");\n+    }\n+\n+    return reverted;\n+}\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}