{
    "patch": "public Line revert() {\n    final Vector3D reversed = direction.negate();\n    final Point3D p = new Point3D(\n            start.getX() - reversed.getX(),\n            start.getY() - reversed.getY(),\n            start.getZ() - reversed.getZ());\n    return new Line(p, reversed);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\nindex 674c4aada..8aa74cfd7 100644\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n@@ -84,7 +84,14 @@ public class Line implements Embedding<Euclidean3D, Euclidean1D> {\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        final Line reverted = new Line(zero, zero.subtract(direction));\n+public Line revert() {\n+    final Vector3D reversed = direction.negate();\n+    final Point3D p = new Point3D(\n+            start.getX() - reversed.getX(),\n+            start.getY() - reversed.getY(),\n+            start.getZ() - reversed.getZ());\n+    return new Line(p, reversed);\n+}\n         return reverted;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}