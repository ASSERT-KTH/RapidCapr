{
    "patch": "    if (!(function.hasOneChild() && function.getFirstChild().isParamList())) {\n      return;\n    }\n\n    Node paramList = function.getFirstChild();\n    Node param = paramList.getFirstChild();\n    while (param != null) {\n      Node next = param.getNext();\n\n      String paramName = param.getString();\n      Var var = fnScope.getVar(paramName);\n      if (var == null || !referenced.contains(var)) {\n        paramList.removeChild(param);\n        compiler.reportCodeChange();\n      }\n\n      param = next;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..78b134c7 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,24 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    if (!(function.hasOneChild() && function.getFirstChild().isParamList())) {\n+      return;\n+    }\n+\n+    Node paramList = function.getFirstChild();\n+    Node param = paramList.getFirstChild();\n+    while (param != null) {\n+      Node next = param.getNext();\n+\n+      String paramName = param.getString();\n+      Var var = fnScope.getVar(paramName);\n+      if (var == null || !referenced.contains(var)) {\n+        paramList.removeChild(param);\n+        compiler.reportCodeChange();\n+      }\n+\n+      param = next;\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}