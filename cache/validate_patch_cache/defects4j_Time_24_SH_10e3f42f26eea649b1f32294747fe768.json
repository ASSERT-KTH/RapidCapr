{
    "patch": "                if (resetFields && i == 0 && savedFields[i].getFieldType().equals(DateTimeFieldType.weekyear())) {\n                    // adjust year after setting weekyear to avoid invalid ISO year such as 2010-W53\n                    LocalDate date = LocalDate.fromMillisSinceEpoch(\n                            iChrono.getDateTimeMillis(iDefaultYear, 1, 1, 0) + millis, iChrono);\n                    int year = date.getYear();\n                    if (date.get(DateTimeFieldType.weekyear()) > year + 1) {\n                        year++;\n                    } else if (date.get(DateTimeFieldType.weekyear()) == year && date.get(DateTimeFieldType.weekOfWeekyear()) == 1) {\n                        DateTimeField weekOfWeekyear = iChrono.weekOfWeekyear();\n                        int newWeekOfWeekyear = weekOfWeekyear.get(weekOfWeekyear.add(millis, 1));\n                        if (newWeekOfWeekyear > 1) {\n                            year++;\n                        }\n                    }\n                    saveField(DateTimeFieldType.year(), year);\n                    millis = savedFields[i].set(millis, false);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..410b214f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,22 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (resetFields && i == 0 && savedFields[i].getFieldType().equals(DateTimeFieldType.weekyear())) {\n+                    // adjust year after setting weekyear to avoid invalid ISO year such as 2010-W53\n+                    LocalDate date = LocalDate.fromMillisSinceEpoch(\n+                            iChrono.getDateTimeMillis(iDefaultYear, 1, 1, 0) + millis, iChrono);\n+                    int year = date.getYear();\n+                    if (date.get(DateTimeFieldType.weekyear()) > year + 1) {\n+                        year++;\n+                    } else if (date.get(DateTimeFieldType.weekyear()) == year && date.get(DateTimeFieldType.weekOfWeekyear()) == 1) {\n+                        DateTimeField weekOfWeekyear = iChrono.weekOfWeekyear();\n+                        int newWeekOfWeekyear = weekOfWeekyear.get(weekOfWeekyear.add(millis, 1));\n+                        if (newWeekOfWeekyear > 1) {\n+                            year++;\n+                        }\n+                    }\n+                    saveField(DateTimeFieldType.year(), year);\n+                    millis = savedFields[i].set(millis, false);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}