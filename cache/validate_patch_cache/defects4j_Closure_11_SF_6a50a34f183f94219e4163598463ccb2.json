{
    "patch": "public static String getProp(String key, File propertyFile) {\n    if (!propertyFile.isFile()) {\n        throw new IllegalArgumentException(\"Property file \" + propertyFile + \" does not exist\");\n    }\n\n    String value = null;\n\n    try (InputStream inputStream = new FileInputStream(propertyFile)) {\n        Properties properties = new Properties();\n        properties.load(inputStream);\n        value = properties.getProperty(key);\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n\n    if (value == null || value.isEmpty()) {\n        throw new IllegalArgumentException(\"Property \" + key + \" not found in \" + propertyFile);\n    }\n\n    return value;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..b8346683 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getProp(String key, File propertyFile) {\n+    if (!propertyFile.isFile()) {\n+        throw new IllegalArgumentException(\"Property file \" + propertyFile + \" does not exist\");\n+    }\n+\n+    String value = null;\n+\n+    try (InputStream inputStream = new FileInputStream(propertyFile)) {\n+        Properties properties = new Properties();\n+        properties.load(inputStream);\n+        value = properties.getProperty(key);\n+    } catch (IOException e) {\n+        e.printStackTrace();\n+    }\n+\n+    if (value == null || value.isEmpty()) {\n+        throw new IllegalArgumentException(\"Property \" + key + \" not found in \" + propertyFile);\n+    }\n+\n+    return value;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}