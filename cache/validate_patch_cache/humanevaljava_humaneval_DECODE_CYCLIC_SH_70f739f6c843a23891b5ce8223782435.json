{
    "patch": "\n    public static String[] decode_cyclic(String s) {\n        ArrayList<String> groups = new ArrayList<String>();\n        for (int i = 0; i < s.length(); i += 3){\n            groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n        }\n\n        int remain = groups.get(groups.size() - 1).length() - s.length() % 3;\n        if (remain == 3) { remain = 0; }\n\n        String result1 = \"\";\n        String result2 = \"\";\n        for (String group : groups){\n            result1 += group.charAt(2) + group.substring(0, 2);\n            result2 += group.substring(1, 3) + group.charAt(0);\n        }\n\n        String[] result = new String[2];\n        result[0] = result1.substring(0, s.length() - remain);\n        result[1] = result2.substring(0, s.length() - remain);\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..66db960 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -8,7 +8,28 @@ public class DECODE_CYCLIC {\n             String encode_cyclic(String s) {\n                 ArrayList<String> groups = new ArrayList<String>();\n \n-                for (int i = 0; i < s.length(); i += 3){\n+\n+    public static String[] decode_cyclic(String s) {\n+        ArrayList<String> groups = new ArrayList<String>();\n+        for (int i = 0; i < s.length(); i += 3){\n+            groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n+        }\n+\n+        int remain = groups.get(groups.size() - 1).length() - s.length() % 3;\n+        if (remain == 3) { remain = 0; }\n+\n+        String result1 = \"\";\n+        String result2 = \"\";\n+        for (String group : groups){\n+            result1 += group.charAt(2) + group.substring(0, 2);\n+            result2 += group.substring(1, 3) + group.charAt(0);\n+        }\n+\n+        String[] result = new String[2];\n+        result[0] = result1.substring(0, s.length() - remain);\n+        result[1] = result2.substring(0, s.length() - remain);\n+        return result;\n+    }\n                     groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n                 }\n                 int remain = s.length() % 3;",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[12,5] illegal start of expression",
    "test_result": "ERROR"
}