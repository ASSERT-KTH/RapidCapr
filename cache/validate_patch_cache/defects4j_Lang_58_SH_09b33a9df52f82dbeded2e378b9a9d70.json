{
    "patch": "if (dec == null && exp == null && StringUtils.isNumeric(numeric.replaceFirst(\"-\", \"\"))) {\n    try {\n        if (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) {\n            return createLong(numeric);\n        }\n        return createInteger(numeric);\n    } catch (NumberFormatException nfe) {\n        //Too big for an Integer or Long, return BigInteger\n        return createBigInteger(numeric);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..a264d3a8 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,17 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+if (dec == null && exp == null && StringUtils.isNumeric(numeric.replaceFirst(\"-\", \"\"))) {\n+    try {\n+        if (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) {\n+            return createLong(numeric);\n+        }\n+        return createInteger(numeric);\n+    } catch (NumberFormatException nfe) {\n+        //Too big for an Integer or Long, return BigInteger\n+        return createBigInteger(numeric);\n+    }\n+}\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}