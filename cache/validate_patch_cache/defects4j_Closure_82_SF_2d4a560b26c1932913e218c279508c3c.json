{
    "patch": "public final boolean isEmptyType() {\n    boolean isEmpty = isNoType() || isNoObjectType() || isNoResolvedType() || isUnknownType() || isVoidType();\n    if (isNullType()) {\n        // check if it's null or void\n        ITypeBinding binding = getTypeBinding();\n        if (binding != null && binding.isPrimitive()) {\n            isEmpty = isEmpty || binding.isNullType();\n        } else if (binding == null || !binding.isClass() || \"java.lang.Void\".equals(binding.getQualifiedName())) {\n            isEmpty = isEmpty || true;\n        }\n    }\n    if (isEmpty) {\n        System.err.println(\"Warning: isEmptyType() called with no type.\");\n    }\n    return isEmpty;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..6a358c7d 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,22 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    boolean isEmpty = isNoType() || isNoObjectType() || isNoResolvedType() || isUnknownType() || isVoidType();\n+    if (isNullType()) {\n+        // check if it's null or void\n+        ITypeBinding binding = getTypeBinding();\n+        if (binding != null && binding.isPrimitive()) {\n+            isEmpty = isEmpty || binding.isNullType();\n+        } else if (binding == null || !binding.isClass() || \"java.lang.Void\".equals(binding.getQualifiedName())) {\n+            isEmpty = isEmpty || true;\n+        }\n+    }\n+    if (isEmpty) {\n+        System.err.println(\"Warning: isEmptyType() called with no type.\");\n+    }\n+    return isEmpty;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}