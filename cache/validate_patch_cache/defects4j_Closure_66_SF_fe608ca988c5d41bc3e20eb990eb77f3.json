{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    Gson gson = new Gson();\n    JsonObject jsonObject = gson.fromJson(jsonStr, JsonObject.class);\n    int typedCount = jsonObject.get(\"typedCount\").getAsInt();\n    int totalCount = jsonObject.get(\"totalCount\").getAsInt();\n    double typedPercent = ((double)typedCount / (double)totalCount) * 100;\n    return typedPercent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..5906578d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    Gson gson = new Gson();\n+    JsonObject jsonObject = gson.fromJson(jsonStr, JsonObject.class);\n+    int typedCount = jsonObject.get(\"typedCount\").getAsInt();\n+    int totalCount = jsonObject.get(\"totalCount\").getAsInt();\n+    double typedPercent = ((double)typedCount / (double)totalCount) * 100;\n+    return typedPercent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}