{
    "patch": "if (obj == null || getClass() != obj.getClass()) {\n    return false;\n}\n\nShapeList other = (ShapeList) obj;\n\nif (size() != other.size()) {\n    return false;\n}\n\nIterator<Shape> thisItr = iterator();\nIterator<Shape> otherItr = other.iterator();\n\nwhile (thisItr.hasNext() && otherItr.hasNext()) {\n    if (!ShapeUtilities.equal(thisItr.next(), otherItr.next())) {\n        return false;\n    }\n}\n\nreturn true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..c5d1b5f 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,26 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+if (obj == null || getClass() != obj.getClass()) {\n+    return false;\n+}\n+\n+ShapeList other = (ShapeList) obj;\n+\n+if (size() != other.size()) {\n+    return false;\n+}\n+\n+Iterator<Shape> thisItr = iterator();\n+Iterator<Shape> otherItr = other.iterator();\n+\n+while (thisItr.hasNext() && otherItr.hasNext()) {\n+    if (!ShapeUtilities.equal(thisItr.next(), otherItr.next())) {\n+        return false;\n+    }\n+}\n+\n+return true;\n \n     }\n \n@@ -169,4 +188,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}