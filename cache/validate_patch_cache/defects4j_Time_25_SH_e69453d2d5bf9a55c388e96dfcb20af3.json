{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    int earlierOffset = offsetLocal < offsetAdjusted ? offsetLocal : offsetAdjusted;\n    int laterOffset = offsetLocal < offsetAdjusted ? offsetAdjusted : offsetLocal;\n\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - earlierOffset);\n\n    if (nextLocal == nextAdjusted) { // we are in the middle of a transition\n        long currentOffsetLocal = getOffset(nextLocal);\n        long currentOffsetAdjusted = getOffset(nextAdjusted);\n        int diff = currentOffsetLocal - laterOffset;\n\n        if (currentOffsetLocal > laterOffset && instantLocal + diff >= nextAdjusted) {\n            return laterOffset; // we are in the standard (non-DST) period\n        }\n\n        if (currentOffsetAdjusted > laterOffset && instantLocal + laterOffset < nextAdjusted) {\n            return earlierOffset; // we are in the DST period\n        }\n\n        return currentOffsetAdjusted; // we are at the transition point\n    }\n\n    return offsetLocal; // we are not in the middle of a transition\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..e7cdf7ed 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,31 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    int earlierOffset = offsetLocal < offsetAdjusted ? offsetLocal : offsetAdjusted;\n+    int laterOffset = offsetLocal < offsetAdjusted ? offsetAdjusted : offsetLocal;\n+\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - earlierOffset);\n+\n+    if (nextLocal == nextAdjusted) { // we are in the middle of a transition\n+        long currentOffsetLocal = getOffset(nextLocal);\n+        long currentOffsetAdjusted = getOffset(nextAdjusted);\n+        int diff = currentOffsetLocal - laterOffset;\n+\n+        if (currentOffsetLocal > laterOffset && instantLocal + diff >= nextAdjusted) {\n+            return laterOffset; // we are in the standard (non-DST) period\n+        }\n+\n+        if (currentOffsetAdjusted > laterOffset && instantLocal + laterOffset < nextAdjusted) {\n+            return earlierOffset; // we are in the DST period\n+        }\n+\n+        return currentOffsetAdjusted; // we are at the transition point\n+    }\n+\n+    return offsetLocal; // we are not in the middle of a transition\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}