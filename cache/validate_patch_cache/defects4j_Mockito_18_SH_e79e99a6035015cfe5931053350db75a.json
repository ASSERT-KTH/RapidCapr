{
    "patch": "public ReturnValue execute(ExecutionEvent event) {\n    // existing code here\n\n    if (response.getStatus() == HttpStatus.SC_OK) {\n        InputStream inputStream = response.getResponseStream();\n        Header[] headers = response.getResponseHeaders();\n\n        // existing code here\n\n        try {\n            List<String> parsedResponses = objectMapper.readValue(inputStream, ArrayList.class);\n            return ReturnValue.forValue(parsedResponses);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    return ReturnValue.forValue(Collections.emptyList());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}