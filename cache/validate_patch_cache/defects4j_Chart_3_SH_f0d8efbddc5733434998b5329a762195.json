{
    "patch": "            int itemCount = getItemCount();\n            int endIndex = end >= itemCount ? itemCount - 1 : end;\n            endIndex = endIndex < start ? start - 1 : endIndex;\n            for (int i = start; i <= endIndex; i++) {\n                TimeSeriesDataItem clone = getDataItem(i).clone();\n                try {\n                    copy.add(clone);\n                } catch (SeriesException e) {",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..f1c2540 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,14 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+            int itemCount = getItemCount();\n+            int endIndex = end >= itemCount ? itemCount - 1 : end;\n+            endIndex = endIndex < start ? start - 1 : endIndex;\n+            for (int i = start; i <= endIndex; i++) {\n+                TimeSeriesDataItem clone = getDataItem(i).clone();\n+                try {\n+                    copy.add(clone);\n+                } catch (SeriesException e) {\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}