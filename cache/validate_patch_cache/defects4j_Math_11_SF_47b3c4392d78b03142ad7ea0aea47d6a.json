{
    "patch": "        return 1.0 / (FastMath.pow(2 * FastMath.PI, dim / 2) *\n            FastMath.sqrt(covarianceMatrixDeterminant)) *\n            getExponentTerm(vals);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\nindex 15706811b..60792cb8f 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java\n@@ -174,16 +174,9 @@ public class MultivariateNormalDistribution\n     }\n \n     /** {@inheritDoc} */\n-    public double density(final double[] vals) throws DimensionMismatchException {\n-        final int dim = getDimension();\n-        if (vals.length != dim) {\n-            throw new DimensionMismatchException(vals.length, dim);\n-        }\n-\n-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n-            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n+        return 1.0 / (FastMath.pow(2 * FastMath.PI, dim / 2) *\n+            FastMath.sqrt(covarianceMatrixDeterminant)) *\n             getExponentTerm(vals);\n-    }\n \n     /**\n      * Gets the square root of each element on the diagonal of the covariance",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}