{
    "patch": "// shouldEncodeURLInBasicCharset()\ntry {\n    String enc = \"ISO-8859-1\";\n    String src = \"The quick brown fox jumps over the lazy dog.\";\n    String encSrc = URLEncoder.encode(src, enc);\n    String decSrc = URLDecoder.decode(encSrc, enc);\n    assertEquals(\"encode/decode ISO-8859-1\", src, decSrc);\n    success = true;\n} catch (UnsupportedEncodingException e) {\n    fail(\"UnsupportedEncodingException thrown for ISO-8859-1\");\n} catch (Throwable e) {\n    fail(\"Unexpected exception thrown: \" + e);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}