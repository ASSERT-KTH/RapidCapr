{
    "patch": "protected String escape(String str) {\n    StringBuilder buf = new StringBuilder();\n    char[] ch = str.toCharArray();\n    for (int i = 0; i < ch.length; i++) {\n        switch (ch[i]) {\n            case '\\n':\n                buf.append(\"\\\\n\");\n                break;\n            case '\\r':\n                buf.append(\"\\\\r\");\n                break;\n            case '\\t':\n                buf.append(\"\\\\t\");\n                break;\n            case '\\f':\n                buf.append(\"\\\\f\");\n                break;\n            case '\\\\':\n                buf.append(\"\\\\\\\\\");\n                break;\n            case '\\\"':\n                buf.append(\"\\\\\\\"\");\n                break;\n            case '\\'':\n                buf.append(\"\\\\\\'\");\n                break;\n            case '\\u0024':\n                buf.append(\"\\\\u0024\");\n                break;\n            default:\n                if (ch[i] >= 0x0020 && ch[i] <= 0x007e) {\n                    buf.append(ch[i]);\n                } else {\n                    String hex = Integer.toHexString(ch[i] & 0xFFFF);\n                    buf.append(\"\\\\u\");\n                    for (int j = 0; j < 4 - hex.length(); j++) {\n                        buf.append('0');\n                    }\n                    buf.append(hex.toUpperCase());\n                }\n                break;\n        }\n    }\n    return buf.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}