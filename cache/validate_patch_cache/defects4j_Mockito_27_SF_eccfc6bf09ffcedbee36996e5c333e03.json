{
    "patch": "public <T> void resetMock(T mock) {\n    MockHandler<T> oldHandler = (MockHandler<T>) getMockHandler(mock);\n\n    MockHandler<T> newHandler = new MockHandler<T>(oldHandler);\n    MockCreationSettings<T> settings = (MockCreationSettings<T>) getMockSettings(mock);\n    newHandler.setMockSettings(settings);\n\n    MockitoFramework framework = Mockito.framework();\n    InvocationListenerProvider listenerProvider = framework.getInvocationListenerProvider();\n    InvocationListener listener = listenerProvider.getInvocationListener();\n    MethodInterceptorFilter newFilter =\n        new MethodInterceptorFilter(newHandler, (MockSettingsImpl) settings.getDefaultAnswer());\n\n    framework.clearInlineMocks();\n    framework.clearMockProgress();\n\n    framework.getMockingProgress().setListener(listener);\n\n    framework.getInlineMockHandler().resetMock();\n    framework.getInlineMockHandler().addMock(mock, settings, newFilter);\n\n    MockMethodInterceptor interceptor = new MockMethodInterceptor(newFilter);\n    listenerProvider.setInvocationListener(interceptor);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..9769f6238 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,31 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    MockHandler<T> oldHandler = (MockHandler<T>) getMockHandler(mock);\n+\n+    MockHandler<T> newHandler = new MockHandler<T>(oldHandler);\n+    MockCreationSettings<T> settings = (MockCreationSettings<T>) getMockSettings(mock);\n+    newHandler.setMockSettings(settings);\n+\n+    MockitoFramework framework = Mockito.framework();\n+    InvocationListenerProvider listenerProvider = framework.getInvocationListenerProvider();\n+    InvocationListener listener = listenerProvider.getInvocationListener();\n+    MethodInterceptorFilter newFilter =\n+        new MethodInterceptorFilter(newHandler, (MockSettingsImpl) settings.getDefaultAnswer());\n+\n+    framework.clearInlineMocks();\n+    framework.clearMockProgress();\n+\n+    framework.getMockingProgress().setListener(listener);\n+\n+    framework.getInlineMockHandler().resetMock();\n+    framework.getInlineMockHandler().addMock(mock, settings, newFilter);\n+\n+    MockMethodInterceptor interceptor = new MockMethodInterceptor(newFilter);\n+    listenerProvider.setInvocationListener(interceptor);\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}