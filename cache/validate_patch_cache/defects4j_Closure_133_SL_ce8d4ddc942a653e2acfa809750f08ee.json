{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    while (result != null && result.trim().startsWith(\"*\")) {\n        result = stream.getRemainingJSDocLine();\n    }\n    if(result != null && result.trim().startsWith(\"@\")) {\n        result = processMultilineJSDocTag(result);\n    }\n    return result;\n}\n\nprivate String processMultilineJSDocTag(String result){\n    String[] words = result.trim().split(\"\\\\s+\");\n    String lastWord = words[words.length - 1].trim();\n    if (!lastWord.endsWith(\"*/\")) {\n        String nextLine = stream.getRemainingJSDocLine();\n        while (nextLine != null && nextLine.trim().startsWith(\"*\")) {\n            result += \" \" + nextLine.trim();\n            words = result.trim().split(\"\\\\s+\");\n            lastWord = words[words.length - 1].trim();\n            if (lastWord.endsWith(\"*/\")) {\n                break;\n            }\n            nextLine = stream.getRemainingJSDocLine();\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..dff8d532 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,34 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    while (result != null && result.trim().startsWith(\"*\")) {\n+        result = stream.getRemainingJSDocLine();\n+    }\n+    if(result != null && result.trim().startsWith(\"@\")) {\n+        result = processMultilineJSDocTag(result);\n+    }\n+    return result;\n+}\n+\n+private String processMultilineJSDocTag(String result){\n+    String[] words = result.trim().split(\"\\\\s+\");\n+    String lastWord = words[words.length - 1].trim();\n+    if (!lastWord.endsWith(\"*/\")) {\n+        String nextLine = stream.getRemainingJSDocLine();\n+        while (nextLine != null && nextLine.trim().startsWith(\"*\")) {\n+            result += \" \" + nextLine.trim();\n+            words = result.trim().split(\"\\\\s+\");\n+            lastWord = words[words.length - 1].trim();\n+            if (lastWord.endsWith(\"*/\")) {\n+                break;\n+            }\n+            nextLine = stream.getRemainingJSDocLine();\n+        }\n+    }\n+    return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}