{
    "patch": "      if (NodeUtil.isLValue(parent)) {\n        Node maybeObjLit = parent.getParent();\n        if (maybeObjLit != null) {\n          if (NodeUtil.isObjLitKey(maybeObjLit, n)) {\n            return false;\n          }\n          Node maybePropAccess = maybeObjLit.getParent();\n          if (maybePropAccess != null &&\n              maybePropAccess.getType() == Token.GETPROP &&\n              maybePropAccess.getLastChild() == maybeObjLit &&\n              NodeUtil.isObjLitKey(maybePropAccess.getParent(), maybePropAccess)) {\n            return false;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..b9ed5b80 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,19 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (NodeUtil.isLValue(parent)) {\n+        Node maybeObjLit = parent.getParent();\n+        if (maybeObjLit != null) {\n+          if (NodeUtil.isObjLitKey(maybeObjLit, n)) {\n+            return false;\n+          }\n+          Node maybePropAccess = maybeObjLit.getParent();\n+          if (maybePropAccess != null &&\n+              maybePropAccess.getType() == Token.GETPROP &&\n+              maybePropAccess.getLastChild() == maybeObjLit &&\n+              NodeUtil.isObjLitKey(maybePropAccess.getParent(), maybePropAccess)) {\n+            return false;\n+          }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}