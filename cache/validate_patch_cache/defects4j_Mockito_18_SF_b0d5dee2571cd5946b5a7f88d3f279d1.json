{
    "patch": "public static ReturnValues calculate(List<Integer> numbers) {\n    if (numbers.isEmpty()) {\n        return new ReturnValues(0, \"\");\n    }\n    int sum = 0;\n    StringBuilder sb = new StringBuilder();\n    for (Integer number : numbers) {\n        sum += number;\n        sb.append(number.toString()).append(\"+\");\n    }\n    sb.setLength(sb.length() - 1);\n    return new ReturnValues(sum, sb.toString());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..55f49a183 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,19 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static ReturnValues calculate(List<Integer> numbers) {\n+    if (numbers.isEmpty()) {\n+        return new ReturnValues(0, \"\");\n+    }\n+    int sum = 0;\n+    StringBuilder sb = new StringBuilder();\n+    for (Integer number : numbers) {\n+        sum += number;\n+        sb.append(number.toString()).append(\"+\");\n+    }\n+    sb.setLength(sb.length() - 1);\n+    return new ReturnValues(sum, sb.toString());\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}