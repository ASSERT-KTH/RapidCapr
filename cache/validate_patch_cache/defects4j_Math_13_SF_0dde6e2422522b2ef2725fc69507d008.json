{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        RealMatrix sq = dec.getSquareRoot();\n        dec.getV().transpoeInPlace();\n        sq = dec.getV().multiply(sq);\n        sq = sq.multiply(dec.getV().scalarMultiply(1.0/dec.getRealEigenvalues()));\n\n        // release the EigenDecomposition object\n        dec = null;\n\n        return sq;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..813c10699 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,15 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+private RealMatrix squareRoot(RealMatrix m) {\n+        final EigenDecomposition dec = new EigenDecomposition(m);\n+        RealMatrix sq = dec.getSquareRoot();\n+        dec.getV().transpoeInPlace();\n+        sq = dec.getV().multiply(sq);\n+        sq = sq.multiply(dec.getV().scalarMultiply(1.0/dec.getRealEigenvalues()));\n+\n+        // release the EigenDecomposition object\n+        dec = null;\n+\n+        return sq;\n }",
    "result_reason": "error: reached end of file while parsing",
    "test_result": "ERROR"
}