{
    "patch": "private void handleBlockComment(Comment comment) {\n    String value = comment.getValue();\n    if (value.contains(\"@\")) {\n        boolean startsWithSlashStar = value.trim().startsWith(\"/*\");\n        boolean endsWithStarSlash = value.trim().endsWith(\"*/\");\n        if (startsWithSlashStar && endsWithStarSlash) {\n            int index = value.indexOf(\"@\");\n            if (index > -1) {\n                String postTag = value.substring(index + 1).replaceAll(\"\\\\s{2,}\", \" \");\n                if (postTag.startsWith(\"@\")) {\n                    errorReporter.warning(\n                            SUSPICIOUS_COMMENT_WARNING,\n                            sourceName,\n                            comment.getLineno(), \"\", 0);\n                }\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..e79260c5 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,25 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n+private void handleBlockComment(Comment comment) {\n+    String value = comment.getValue();\n+    if (value.contains(\"@\")) {\n+        boolean startsWithSlashStar = value.trim().startsWith(\"/*\");\n+        boolean endsWithStarSlash = value.trim().endsWith(\"*/\");\n+        if (startsWithSlashStar && endsWithStarSlash) {\n+            int index = value.indexOf(\"@\");\n+            if (index > -1) {\n+                String postTag = value.substring(index + 1).replaceAll(\"\\\\s{2,}\", \" \");\n+                if (postTag.startsWith(\"@\")) {\n+                    errorReporter.warning(\n+                            SUSPICIOUS_COMMENT_WARNING,\n+                            sourceName,\n+                            comment.getLineno(), \"\", 0);\n+                }\n+            }\n+        }\n     }\n-  }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}