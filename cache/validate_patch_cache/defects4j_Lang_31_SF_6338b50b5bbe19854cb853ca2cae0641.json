{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = str.length();\n    int searchLength = searchChars.length;\n    int found = 0;\n    boolean[] search = new boolean[Character.MAX_VALUE];\n    for (int i = 0; i < searchLength; i++) {\n        search[searchChars[i]] = true;\n    }\n    for (int i = 0; i < csLength && found < searchLength; i++) {\n        if (search[str.charAt(i)]) {\n            found++;\n            if (Character.isHighSurrogate(str.charAt(i)) && i < csLength - 1 && search[str.charAt(i + 1)]) {\n                found++;\n            }\n        }\n    }\n    return found == searchLength;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..3526ada1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,27 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    int csLength = str.length();\n+    int searchLength = searchChars.length;\n+    int found = 0;\n+    boolean[] search = new boolean[Character.MAX_VALUE];\n+    for (int i = 0; i < searchLength; i++) {\n+        search[searchChars[i]] = true;\n+    }\n+    for (int i = 0; i < csLength && found < searchLength; i++) {\n+        if (search[str.charAt(i)]) {\n+            found++;\n+            if (Character.isHighSurrogate(str.charAt(i)) && i < csLength - 1 && search[str.charAt(i + 1)]) {\n+                found++;\n+            }\n+        }\n+    }\n+    return found == searchLength;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}