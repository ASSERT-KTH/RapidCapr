{
    "patch": "        final int n = m.getRowDimension();\n        final EigenDecomposition ed = new EigenDecomposition(m);\n        final RealMatrix v = ed.getV();\n        final RealMatrix d = ed.getD();\n        final RealMatrix dSqrt = MatrixUtils.createRealMatrix(n, n);\n        for (int i = 0; i < n; i++) {\n            double ev = d.getEntry(i, i);\n            double evSqrt = Math.sqrt(ev);\n            dSqrt.setEntry(i, i, evSqrt);\n        }\n        final RealMatrix vInv = new LUDecomposition(v).getSolver().getInverse();\n        return v.multiply(dSqrt).multiply(vInv);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..9de804916 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,16 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+        final int n = m.getRowDimension();\n+        final EigenDecomposition ed = new EigenDecomposition(m);\n+        final RealMatrix v = ed.getV();\n+        final RealMatrix d = ed.getD();\n+        final RealMatrix dSqrt = MatrixUtils.createRealMatrix(n, n);\n+        for (int i = 0; i < n; i++) {\n+            double ev = d.getEntry(i, i);\n+            double evSqrt = Math.sqrt(ev);\n+            dSqrt.setEntry(i, i, evSqrt);\n+        }\n+        final RealMatrix vInv = new LUDecomposition(v).getSolver().getInverse();\n+        return v.multiply(dSqrt).multiply(vInv);\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}