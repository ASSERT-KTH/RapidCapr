{
    "patch": "// Checking if a type is empty, which indicates a problem with the source code\npublic final boolean isEmptyType() {\n    // An empty type is when it is a NoType, NoObjectType, NoResolvedType, VoidType or UnknownType\n    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isUnknownType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..a6c01e14 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,11 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+// Checking if a type is empty, which indicates a problem with the source code\n+public final boolean isEmptyType() {\n+    // An empty type is when it is a NoType, NoObjectType, NoResolvedType, VoidType or UnknownType\n+    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isUnknownType();\n+}\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}