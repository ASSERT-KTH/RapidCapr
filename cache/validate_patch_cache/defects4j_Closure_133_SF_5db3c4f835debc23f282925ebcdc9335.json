{
    "patch": "private String getRemainingJSDocLine() {\n    if (stream == null) {\n        return null;\n    }\n    String result;\n    do {\n        try {\n            result = stream.getRemainingJSDocLine();\n        } catch (IllegalStateException e) {\n            // If the stream has already ended, return null.\n            return null;\n        }\n        if (result != null) {\n            result = result.trim();\n            if (result.isEmpty() || result.startsWith(\"*\") || result.startsWith(\"@\")) {\n                result = null;\n            } else if (result.startsWith(\"*/\")) {\n                result = result.substring(2).trim();\n            }\n        }\n    } while (result == null);\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..98eaf453 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,29 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    if (stream == null) {\n+        return null;\n+    }\n+    String result;\n+    do {\n+        try {\n+            result = stream.getRemainingJSDocLine();\n+        } catch (IllegalStateException e) {\n+            // If the stream has already ended, return null.\n+            return null;\n+        }\n+        if (result != null) {\n+            result = result.trim();\n+            if (result.isEmpty() || result.startsWith(\"*\") || result.startsWith(\"@\")) {\n+                result = null;\n+            } else if (result.startsWith(\"*/\")) {\n+                result = result.substring(2).trim();\n+            }\n+        }\n+    } while (result == null);\n     return result;\n-  }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}