{
    "patch": "if (obj == null || getClass() != obj.getClass()) {\n    return false;\n}\nShapeList other = (ShapeList) obj;\nif (size() != other.size()) {\n    return false;\n}\nIterator<Shape> iterator = iterator(), otherIterator = other.iterator();\nwhile(iterator.hasNext() && otherIterator.hasNext()) {\n    if(!ShapeUtilities.equal(iterator.next(), otherIterator.next())) {\n        return false;\n    }\n}\nreturn !iterator.hasNext() && !otherIterator.hasNext();",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..33a51d8 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,20 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+if (obj == null || getClass() != obj.getClass()) {\n+    return false;\n+}\n+ShapeList other = (ShapeList) obj;\n+if (size() != other.size()) {\n+    return false;\n+}\n+Iterator<Shape> iterator = iterator(), otherIterator = other.iterator();\n+while(iterator.hasNext() && otherIterator.hasNext()) {\n+    if(!ShapeUtilities.equal(iterator.next(), otherIterator.next())) {\n+        return false;\n+    }\n+}\n+return !iterator.hasNext() && !otherIterator.hasNext();\n \n     }\n \n@@ -169,4 +182,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}