{
    "patch": "        ShapeList otherList = (ShapeList) obj;\n        int listSize = size();\n        if (listSize != otherList.size()) {\n            return false;\n        }\n        for (int i = 0; i < listSize; i++) {\n            Shape s1 = get(i);\n            Shape s2 = otherList.get(i);\n            if (!s1.equals(s2)) {\n                return false;\n            }\n        }\n        return true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..053870e 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -100,17 +100,19 @@ public class ShapeList extends AbstractObjectList {\n      *\n      * @return A boolean.\n      */\n-    public boolean equals(Object obj) {\n-\n-        if (obj == this) {\n-            return true;\n-        }\n-        if (!(obj instanceof ShapeList)) {\n+        ShapeList otherList = (ShapeList) obj;\n+        int listSize = size();\n+        if (listSize != otherList.size()) {\n             return false;\n         }\n-        return super.equals(obj);\n-\n-    }\n+        for (int i = 0; i < listSize; i++) {\n+            Shape s1 = get(i);\n+            Shape s2 = otherList.get(i);\n+            if (!s1.equals(s2)) {\n+                return false;\n+            }\n+        }\n+        return true;\n \n     /**\n      * Returns a hash code value for the object.\n@@ -169,4 +171,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}