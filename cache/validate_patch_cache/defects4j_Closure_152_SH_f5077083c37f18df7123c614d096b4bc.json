{
    "patch": "JSType maybeTypeOfThis = safeResolve(typeOfThis, t, scope);\nif (maybeTypeOfThis != null && maybeTypeOfThis.isObject()) {\n  typeOfThis = maybeTypeOfThis.toObjectType();\n} else {\n  // Handle warning about typeOfThis if it doesn't resolve to an ObjectType\n  // appropriately.\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex fc2578d8..49910be0 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -868,7 +868,13 @@ public class FunctionType extends PrototypeObjectType {\n     // Warning about typeOfThis if it doesn't resolve to an ObjectType\n     // is handled further upstream.\n     // TODO(nicksantos): Handle this correctly if we have a UnionType.\n-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);\n+JSType maybeTypeOfThis = safeResolve(typeOfThis, t, scope);\n+if (maybeTypeOfThis != null && maybeTypeOfThis.isObject()) {\n+  typeOfThis = maybeTypeOfThis.toObjectType();\n+} else {\n+  // Handle warning about typeOfThis if it doesn't resolve to an ObjectType\n+  // appropriately.\n+}\n \n     boolean changed = false;\n     ImmutableList.Builder<ObjectType> resolvedInterfaces =",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}