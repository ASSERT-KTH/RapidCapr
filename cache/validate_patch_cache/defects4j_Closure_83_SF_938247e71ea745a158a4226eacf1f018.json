{
    "patch": "public int parseArguments(Parameters params) throws CmdLineException {\n  String param = params.getParameter(0);\n\n  if (param == null) {\n    setter.addValue(true);\n    return 0;\n  } else {\n    String lowerParam = param.toLowerCase();\n    if (TRUES.contains(lowerParam)) {\n      setter.addValue(true);\n    } else if (FALSES.contains(lowerParam)) {\n      setter.addValue(false);\n    } else {\n      throw new CmdLineException(owner, new Localizable() {\n        @Override\n        public String formatWithLocale(Locale locale, Object... args) {\n          return \"Illegal boolean value: \" + param;\n        }\n      });\n    }\n    return 1;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..112bcd32 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -330,25 +330,29 @@ public class CommandLineRunner extends\n       }\n \n       @Override\n-      public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n-\n-        if (param == null) {\n-          setter.addValue(true);\n-          return 0;\n-        } else {\n-          String lowerParam = param.toLowerCase();\n-          if (TRUES.contains(lowerParam)) {\n-            setter.addValue(true);\n-          } else if (FALSES.contains(lowerParam)) {\n-            setter.addValue(false);\n-          } else {\n-            setter.addValue(true);\n-            return 0;\n-          }\n-          return 1;\n+public int parseArguments(Parameters params) throws CmdLineException {\n+  String param = params.getParameter(0);\n+\n+  if (param == null) {\n+    setter.addValue(true);\n+    return 0;\n+  } else {\n+    String lowerParam = param.toLowerCase();\n+    if (TRUES.contains(lowerParam)) {\n+      setter.addValue(true);\n+    } else if (FALSES.contains(lowerParam)) {\n+      setter.addValue(false);\n+    } else {\n+      throw new CmdLineException(owner, new Localizable() {\n+        @Override\n+        public String formatWithLocale(Locale locale, Object... args) {\n+          return \"Illegal boolean value: \" + param;\n         }\n-      }\n+      });\n+    }\n+    return 1;\n+  }\n+}\n \n       @Override\n       public String getDefaultMetaVariable() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}