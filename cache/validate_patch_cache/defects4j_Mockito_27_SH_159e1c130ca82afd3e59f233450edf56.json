{
    "patch": "        Mockito.mockingDetails(mock)\n               .getMockCreationSettings()\n               .getMockFactory()\n               .setMockProperties(mock, Mockito.withSettings()\n                                             .defaultAnswer(RETURNS_DEFAULTS)\n                                             .spiedInstance(mock));",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..5bfe54b83 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,15 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        Mockito.mockingDetails(mock)\n+               .getMockCreationSettings()\n+               .getMockFactory()\n+               .setMockProperties(mock, Mockito.withSettings()\n+                                             .defaultAnswer(RETURNS_DEFAULTS)\n+                                             .spiedInstance(mock));\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}