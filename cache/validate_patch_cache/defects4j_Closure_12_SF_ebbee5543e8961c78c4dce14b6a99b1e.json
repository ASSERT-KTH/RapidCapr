{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode == null || !cfgNode.hasChildren()) {\n      return false;\n    }\n    Node lastChild = cfgNode.getLastChild();\n    return lastChild != null && (lastChild.isCatch() || lastChild.isFinally());\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..d14700f3 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,7 +157,11 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n-    return false;\n+    if (cfgNode == null || !cfgNode.hasChildren()) {\n+      return false;\n+    }\n+    Node lastChild = cfgNode.getLastChild();\n+    return lastChild != null && (lastChild.isCatch() || lastChild.isFinally());\n   }\n \n   private void computeMayUse(",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}