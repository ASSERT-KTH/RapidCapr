{
    "patch": "\n        Callback[] oldCallbacks = ((Factory) mock).getCallbacks();\n        if (oldCallbacks.length == 0) {\n            throw new MockitoException(\"Cannot reset mock - not enough information was collected. Probably due to strictness settings.\");\n        }\n        MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) oldCallbacks[0];\n\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, oldFilter.mMockitoMockSettingsImpl());\n",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..f3425c95d 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,19 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+\n+        Callback[] oldCallbacks = ((Factory) mock).getCallbacks();\n+        if (oldCallbacks.length == 0) {\n+            throw new MockitoException(\"Cannot reset mock - not enough information was collected. Probably due to strictness settings.\");\n+        }\n+        MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) oldCallbacks[0];\n+\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, oldFilter.mMockitoMockSettingsImpl());\n+\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}