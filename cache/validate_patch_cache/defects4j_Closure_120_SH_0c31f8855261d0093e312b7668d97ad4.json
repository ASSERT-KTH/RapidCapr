{
    "patch": "      \n      int assignments = 0;\n\n      for (Reference reference : references) {\n        if (reference.isAssignmentToName()) {\n          assignments++;\n        }\n      }\n\n      return assignments == 1;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..e21aa586 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,16 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+      \n+      int assignments = 0;\n+\n+      for (Reference reference : references) {\n+        if (reference.isAssignmentToName()) {\n+          assignments++;\n+        }\n+      }\n+\n+      return assignments == 1;\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}