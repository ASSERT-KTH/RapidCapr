{
    "patch": "Type[] bounds = typeVariable.getBounds();\nif(bounds.length == 0) {\n    registerTypeVariablesOn(Object.class);\n} else {\n    for(Type type : bounds) {\n        registerTypeVariablesOn(type);\n    }\n    if(bounds.length == 1) {\n        Type actualTypeArgument = getActualTypeArgumentFor(bounds[0]);\n        if (actualTypeArgument != null) {\n            registerTypeVariablesOn(actualTypeArgument);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..af8369247 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,25 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] bounds = typeVariable.getBounds();\n+if(bounds.length == 0) {\n+    registerTypeVariablesOn(Object.class);\n+} else {\n+    for(Type type : bounds) {\n+        registerTypeVariablesOn(type);\n+    }\n+    if(bounds.length == 1) {\n+        Type actualTypeArgument = getActualTypeArgumentFor(bounds[0]);\n+        if (actualTypeArgument != null) {\n+            registerTypeVariablesOn(actualTypeArgument);\n+        }\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: incompatible types: Type cannot be converted to TypeVariable",
    "test_result": "ERROR"
}