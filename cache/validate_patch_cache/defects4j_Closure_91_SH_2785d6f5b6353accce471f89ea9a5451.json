{
    "patch": "      Node grandparent = parent.getParent();\n      if (grandparent != null && grandparent.getType() == Token.ASSIGN &&\n          !NodeUtil.isNamespaceDecl(grandparent.getParent())) {\n        Node gplhs = grandparent.getFirstChild();\n        if (NodeUtil.isGet(gplhs)) {\n          Node gplhsFirstChild = gplhs.getFirstChild();\n          if (gplhsFirstChild.getType() == Token.NAME) {\n            String gplhsName = gplhsFirstChild.getString();\n            if (prototypeProperties.contains(gplhsName)) {\n              // Don't traverse this function if it's a subproperty\n              // of an object being assigned to a prototype property.\n              return false;\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..56fea999 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,22 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = parent.getParent();\n+      if (grandparent != null && grandparent.getType() == Token.ASSIGN &&\n+          !NodeUtil.isNamespaceDecl(grandparent.getParent())) {\n+        Node gplhs = grandparent.getFirstChild();\n+        if (NodeUtil.isGet(gplhs)) {\n+          Node gplhsFirstChild = gplhs.getFirstChild();\n+          if (gplhsFirstChild.getType() == Token.NAME) {\n+            String gplhsName = gplhsFirstChild.getString();\n+            if (prototypeProperties.contains(gplhsName)) {\n+              // Don't traverse this function if it's a subproperty\n+              // of an object being assigned to a prototype property.\n+              return false;\n+            }\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}