{
    "patch": "  // isEmptyType should only return true if the type is explicitly 'empty', not just unresolved or a placeholder\n  if (isNoType() || isNoObjectType() || isNoResolvedType() || isUnionType() || isVoidType() || isArrayType() || isNullType()) {\n    return true;\n  } else {\n    return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..7802e55b 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,11 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+  // isEmptyType should only return true if the type is explicitly 'empty', not just unresolved or a placeholder\n+  if (isNoType() || isNoObjectType() || isNoResolvedType() || isUnionType() || isVoidType() || isArrayType() || isNullType()) {\n+    return true;\n+  } else {\n+    return false;\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}