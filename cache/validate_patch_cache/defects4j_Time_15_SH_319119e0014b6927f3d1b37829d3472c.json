{
    "patch": "            default:\n                long maxVal = Long.MAX_VALUE / Math.abs(val2);\n                if (Math.abs(val1) > maxVal) {\n                    throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n                }\n                return val1 * val2;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..4189b127 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -135,6 +135,12 @@ public class FieldUtils {\n     public static long safeMultiply(long val1, int val2) {\n         switch (val2) {\n             case -1:\n+            default:\n+                long maxVal = Long.MAX_VALUE / Math.abs(val2);\n+                if (Math.abs(val1) > maxVal) {\n+                    throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+                }\n+                return val1 * val2;\n                 return -val1;\n             case 0:\n                 return 0L;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}