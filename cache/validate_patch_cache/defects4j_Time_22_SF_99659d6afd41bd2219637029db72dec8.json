{
    "patch": "    protected BasePeriod(long duration) {\n        super();\n        iPeriod = createPeriod(duration);\n        iDuration = duration;\n    }\n\n    private static Period createPeriod(long duration) {\n        // calculate the number of seconds\n        int seconds = (int)(duration % SECONDS_PER_WEEK) * SECONDS_PER_DAY_NEXT;\n        // calculate the number of minutes\n        int minutes = seconds / SECONDS_PER_MINUTE;\n        seconds -= minutes * SECONDS_PER_MINUTE;\n        // calculate the number of hours\n        int hours = minutes / MINUTES_PER_HOUR;\n        minutes -= hours * MINUTES_PER_HOUR;\n        // calculate the number of days\n        int days = hours / HOURS_PER_DAY;\n        hours -= days * HOURS_PER_DAY;\n        // calculate the number of weeks\n        int weeks = (int)(duration / SECONDS_PER_WEEK);\n        return new Period(0, 0, weeks, days, hours, minutes, seconds, 0);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..adbf1aa4 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,8 +219,26 @@ public abstract class BasePeriod\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        super();\n+        iPeriod = createPeriod(duration);\n+        iDuration = duration;\n+    }\n+\n+    private static Period createPeriod(long duration) {\n+        // calculate the number of seconds\n+        int seconds = (int)(duration % SECONDS_PER_WEEK) * SECONDS_PER_DAY_NEXT;\n+        // calculate the number of minutes\n+        int minutes = seconds / SECONDS_PER_MINUTE;\n+        seconds -= minutes * SECONDS_PER_MINUTE;\n+        // calculate the number of hours\n+        int hours = minutes / MINUTES_PER_HOUR;\n+        minutes -= hours * MINUTES_PER_HOUR;\n+        // calculate the number of days\n+        int days = hours / HOURS_PER_DAY;\n+        hours -= days * HOURS_PER_DAY;\n+        // calculate the number of weeks\n+        int weeks = (int)(duration / SECONDS_PER_WEEK);\n+        return new Period(0, 0, weeks, days, hours, minutes, seconds, 0);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}