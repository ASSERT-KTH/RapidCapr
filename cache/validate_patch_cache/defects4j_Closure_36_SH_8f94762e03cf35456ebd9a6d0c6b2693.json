{
    "patch": "if (value.isFunction()) {\n        Node callNode = reference.getParent();\n        if (reference.getParent().isCall()) {\n          CodingConvention convention = compiler.getCodingConvention();\n          // Bug 2388531: Don't inline subclass definitions into class defining\n          // calls as this confused class removing logic.\n          SubclassRelationship relationship =\n              convention.getClassesDefinedByCall(callNode);\n          if (relationship != null) {\n            return false;\n          }\n\n          // issue 668: Don't inline singleton getter methods\n          // calls as this confused class removing logic.\n          Node parentFunctionNode = NodeUtil.getEnclosingFunction(value);\n          int functionNodeChildPosition = NodeUtil.getFunctionInvocationPosition(callNode);\n          if (functionNodeChildPosition >= 0\n              && isSingletonGetter(parentFunctionNode.getFirstChild(),\n                  parentFunctionNode.getSecondChild())\n              && allFunctionCallsAreEqual(value, parentFunctionNode.getFirstChild(),\n                  parentFunctionNode.getSecondChild(), functionNameStrings)) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..af5f2fa8 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,31 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction()) {\n+        Node callNode = reference.getParent();\n+        if (reference.getParent().isCall()) {\n+          CodingConvention convention = compiler.getCodingConvention();\n+          // Bug 2388531: Don't inline subclass definitions into class defining\n+          // calls as this confused class removing logic.\n+          SubclassRelationship relationship =\n+              convention.getClassesDefinedByCall(callNode);\n+          if (relationship != null) {\n+            return false;\n+          }\n+\n+          // issue 668: Don't inline singleton getter methods\n+          // calls as this confused class removing logic.\n+          Node parentFunctionNode = NodeUtil.getEnclosingFunction(value);\n+          int functionNodeChildPosition = NodeUtil.getFunctionInvocationPosition(callNode);\n+          if (functionNodeChildPosition >= 0\n+              && isSingletonGetter(parentFunctionNode.getFirstChild(),\n+                  parentFunctionNode.getSecondChild())\n+              && allFunctionCallsAreEqual(value, parentFunctionNode.getFirstChild(),\n+                  parentFunctionNode.getSecondChild(), functionNameStrings)) {\n+            return false;\n+          }\n+        }\n+      }\n         }\n       }\n ",
    "result_reason": "error: variable callNode is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}