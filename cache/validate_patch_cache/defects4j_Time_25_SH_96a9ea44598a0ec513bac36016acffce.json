{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    // if we just return offsetAdjusted then the time is pushed\n    // back before the transition, whereas it should be\n    // on or after the transition\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if ((nextLocal == instantLocal) && (nextAdjusted == instantLocal - offsetAdjusted)) {\n        if (offsetLocal != getOffset(nextLocal - offsetLocal)) {\n            return offsetLocal;\n        }\n    }\n    if (nextLocal != nextAdjusted) {\n        int diff = offsetAdjusted - offsetLocal;\n        long prevTransition = previousTransition(instantLocal - offsetLocal - diff);\n        long nextTransition = nextTransition(prevTransition + 1);\n        if ((nextLocal <= prevTransition + 1) || (nextAdjusted <= prevTransition + 1)) {\n            return offsetLocal;\n        }\n        if ((nextLocal >= nextTransition) || (nextAdjusted >= nextTransition)) {\n            return offsetLocal;\n        }\n        return getOffset(nextLocal);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..46d88d6d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,30 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    // if we just return offsetAdjusted then the time is pushed\n+    // back before the transition, whereas it should be\n+    // on or after the transition\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if ((nextLocal == instantLocal) && (nextAdjusted == instantLocal - offsetAdjusted)) {\n+        if (offsetLocal != getOffset(nextLocal - offsetLocal)) {\n+            return offsetLocal;\n+        }\n+    }\n+    if (nextLocal != nextAdjusted) {\n+        int diff = offsetAdjusted - offsetLocal;\n+        long prevTransition = previousTransition(instantLocal - offsetLocal - diff);\n+        long nextTransition = nextTransition(prevTransition + 1);\n+        if ((nextLocal <= prevTransition + 1) || (nextAdjusted <= prevTransition + 1)) {\n+            return offsetLocal;\n+        }\n+        if ((nextLocal >= nextTransition) || (nextAdjusted >= nextTransition)) {\n+            return offsetLocal;\n+        }\n+        return getOffset(nextLocal);\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}