{
    "patch": "@Test\npublic void testISO8859_1_ESCAPE() {\n    String str = \"Test\\r\\nString\";\n    String encodedStr = StringEscapeUtils.escapeJava(str);\n    System.out.println(\"Encoded String: \" + encodedStr);\n    String decodedStr = StringEscapeUtils.unescapeJava(encodedStr);\n    System.out.println(\"Decoded String: \" + decodedStr);\n    assertEquals(str, decodedStr);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d0bbfef6 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,15 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+@Test\n+public void testISO8859_1_ESCAPE() {\n+    String str = \"Test\\r\\nString\";\n+    String encodedStr = StringEscapeUtils.escapeJava(str);\n+    System.out.println(\"Encoded String: \" + encodedStr);\n+    String decodedStr = StringEscapeUtils.unescapeJava(encodedStr);\n+    System.out.println(\"Decoded String: \" + decodedStr);\n+    assertEquals(str, decodedStr);\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}