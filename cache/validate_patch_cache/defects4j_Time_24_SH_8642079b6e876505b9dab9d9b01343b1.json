{
    "patch": "            boolean hasTimeField = false;\n            for (int i = 0; i < count; i++) {\n                if (DateTimeFieldType.timeOfDay().equals(savedFields[i].iField.getType())) {\n                    hasTimeField = true;\n                    break;\n                }\n            }\n            if (!hasTimeField) {\n                throw e;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f2c5d25f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            boolean hasTimeField = false;\n+            for (int i = 0; i < count; i++) {\n+                if (DateTimeFieldType.timeOfDay().equals(savedFields[i].iField.getType())) {\n+                    hasTimeField = true;\n+                    break;\n+                }\n+            }\n+            if (!hasTimeField) {\n+                throw e;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}