{
    "patch": "savedFields = iSavedFields;\ncount = iSavedFieldsCount;\nif (iSavedFieldsShared) {\n    iSavedFields = savedFields = (SavedField[])savedFields.clone();\n    iSavedFieldsShared = false;\n}\nsort(savedFields, count);\n\nboolean weekYearSet = false;\nfor (int i = 0; i < count; i++) {\n    DurationField f = savedFields[i].iField.getDurationField();\n    if (f != null && f.isSupported() && f.getFieldType() == DateTimeFieldType.weekyears()) {\n        weekYearSet = true;\n        break;\n    }\n    try {\n        millis = savedFields[i].set(millis, resetFields);\n    } catch (IllegalFieldValueException e) {\n        if (resetFields) {\n            iSavedFields = null;\n            iSavedFieldsShared = false;\n            iSavedFieldsCount = 0;\n            return computeMillis(true, text);\n        }\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n        }\n        throw e;\n    } catch (RuntimeException e) {\n        if (!resetFields || !(e instanceof IllegalArgumentException)) {\n            throw e;\n        }\n    }\n}\n\nif (weekYearSet) {\n    throw new IllegalArgumentException(\"Weekyears can not be set\");\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..8241836d 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,44 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+savedFields = iSavedFields;\n+count = iSavedFieldsCount;\n+if (iSavedFieldsShared) {\n+    iSavedFields = savedFields = (SavedField[])savedFields.clone();\n+    iSavedFieldsShared = false;\n+}\n+sort(savedFields, count);\n+\n+boolean weekYearSet = false;\n+for (int i = 0; i < count; i++) {\n+    DurationField f = savedFields[i].iField.getDurationField();\n+    if (f != null && f.isSupported() && f.getFieldType() == DateTimeFieldType.weekyears()) {\n+        weekYearSet = true;\n+        break;\n+    }\n+    try {\n+        millis = savedFields[i].set(millis, resetFields);\n+    } catch (IllegalFieldValueException e) {\n+        if (resetFields) {\n+            iSavedFields = null;\n+            iSavedFieldsShared = false;\n+            iSavedFieldsCount = 0;\n+            return computeMillis(true, text);\n+        }\n+        if (text != null) {\n+            e.prependMessage(\"Cannot parse \\\"\" + text + \"\\\"\");\n+        }\n+        throw e;\n+    } catch (RuntimeException e) {\n+        if (!resetFields || !(e instanceof IllegalArgumentException)) {\n+            throw e;\n+        }\n+    }\n+}\n+\n+if (weekYearSet) {\n+    throw new IllegalArgumentException(\"Weekyears can not be set\");\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}