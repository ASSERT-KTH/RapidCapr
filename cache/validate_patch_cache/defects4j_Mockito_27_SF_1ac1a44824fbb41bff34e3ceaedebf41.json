{
    "patch": "public <T> void resetMock(T mock) {\n    MockHandler<T> oldHandler = (MockHandler<T>) ((MockitoObject) mock).getHandler();\n    MockitoInvocationHandler newHandler = new MockitoInvocationHandler(oldHandler);\n    MockCreationSettings<T> settings = Mockito.mockingDetails(mock).getMockCreationSettings();\n    MockitoMockFactory<T> factory = new MockitoMockFactory<T>();\n    T newMock = factory.createMock(settings);\n    ((MockitoObject) newMock).setHandler(newHandler);\n\n    // replace all instance of mock with newMock in the list of OngoingStubbing objects\n    UpdateInstance<OngoingStubbing> updater = new UpdateInstance<OngoingStubbing>(mock, newMock);\n    UpdatableOngoingStubbingRegistry.getInstance().apply(updater);\n\n    // clean up the state of the mock\n    clearInvocations(mock);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..9acf80d37 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,22 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    MockHandler<T> oldHandler = (MockHandler<T>) ((MockitoObject) mock).getHandler();\n+    MockitoInvocationHandler newHandler = new MockitoInvocationHandler(oldHandler);\n+    MockCreationSettings<T> settings = Mockito.mockingDetails(mock).getMockCreationSettings();\n+    MockitoMockFactory<T> factory = new MockitoMockFactory<T>();\n+    T newMock = factory.createMock(settings);\n+    ((MockitoObject) newMock).setHandler(newHandler);\n+\n+    // replace all instance of mock with newMock in the list of OngoingStubbing objects\n+    UpdateInstance<OngoingStubbing> updater = new UpdateInstance<OngoingStubbing>(mock, newMock);\n+    UpdatableOngoingStubbingRegistry.getInstance().apply(updater);\n+\n+    // clean up the state of the mock\n+    clearInvocations(mock);\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}