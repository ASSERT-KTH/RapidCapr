{
    "patch": "public static double getTypedPercent(ArrayList<String> lines) {\n    int typedLines = 0;\n    int totalLines = lines.size();\n\n    for (String line : lines) {\n        if (line.matches(\".*[a-zA-Z\\\\d]+.*\")) {\n            typedLines++;\n        }\n    }\n\n    double percent = (double) typedLines / totalLines * 100;\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..63ea53c5 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,19 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(ArrayList<String> lines) {\n+    int typedLines = 0;\n+    int totalLines = lines.size();\n+\n+    for (String line : lines) {\n+        if (line.matches(\".*[a-zA-Z\\\\d]+.*\")) {\n+            typedLines++;\n+        }\n+    }\n+\n+    double percent = (double) typedLines / totalLines * 100;\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}