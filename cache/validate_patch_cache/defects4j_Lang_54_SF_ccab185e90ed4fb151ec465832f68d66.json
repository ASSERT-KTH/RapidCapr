{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int i = 2;\n    if (len >= 3 && (str.charAt(2) == '-' || str.charAt(2) == '_')) {\n        i = 3;\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch2 = str.charAt(2);\n        char ch3 = str.charAt(3);\n        if ((ch2 == '-' && (ch3 < 'A' || ch3 > 'Z')) || (ch2 == '_' && (ch3 < 'a' || ch3 > 'z'))) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    if (len == i) {\n        return new Locale(str.substring(0, i));\n    }\n    if (len >= i + 2 && (str.charAt(i + 1) == '-' || str.charAt(i + 1) == '_')) {\n        i += 2;\n        char ch = str.charAt(i - 1);\n        if (ch == '_' && (str.charAt(i - 2) < 'a' || str.charAt(i - 2) > 'z' || str.charAt(i) < 'A' || str.charAt(i) > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == i) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch2 = str.charAt(i);\n        if (ch2 == '-') {\n            int endIndexOfCountry = i + 1;\n            if (len >= i + 2 && Character.isLetter(str.charAt(i + 1))) {\n                i += 2;\n                while (i < len && Character.isLetter(str.charAt(i))) {\n                    i++;\n                }\n                if (i < len && str.charAt(i) == '-') {\n                    endIndexOfCountry = i;\n                    i++;\n                }\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, endIndexOfCountry), i < len ? str.substring(i) : \"\");\n        }\n        if (ch2 == '_') {\n            int endIndexOfCountry = i + 1;\n            if (len >= i + 2 && Character.isLowerCase(str.charAt(i + 1))) {\n                i += 2;\n                while (i < len && Character.isLowerCase(str.charAt(i))) {\n                    i++;\n                }\n                if (i < len && str.charAt(i) == '_') {\n                    endIndexOfCountry = i;\n                    i++;\n                }\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, endIndexOfCountry), i < len ? str.substring(i) : \"\");\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len >= i + 2 && Character.isLetter(str.charAt(i)) && Character.isLetter(str.charAt(i + 1))) {\n        i += 2;\n        while (i < len && Character.isLetter(str.charAt(i))) {\n            i++;\n        }\n        if (i == len) {\n            return new Locale(str.substring(0, 2), str.substring(2));\n        }\n        if (len >= i + 2 && (str.charAt(i) == '-' || str.charAt(i) == '_')) {\n            i++;\n            int endIndexOfCountry = i;\n            char ch = str.charAt(i - 1);\n            if (ch == '_' && (str.charAt(i - 2) < 'a' || str.charAt(i - 2) > 'z' || str.charAt(i) < 'A' || str.charAt(i) > 'Z')) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len >= i + 2 && Character.isLetter(str.charAt(i)) && Character.isLetter(str.charAt(i + 1))) {\n                i += 2;\n                while (i < len && Character.isLetter(str.charAt(i))) {\n                    i++;\n                }\n                if (i == len) {\n                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                } else if (str.charAt(i) == '-') {\n                    endIndexOfCountry = i;\n                    i++;\n                    if (i == len) {\n                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                    }\n                    if (len >= i + 2 && Character.isDigit(str.charAt(i)) && Character.isDigit(str.charAt(i + 1))) {\n                        i += 2;\n                        while (i < len && Character.isDigit(str.charAt(i))) {\n                            i++;\n                        }\n                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                    }\n                } else if (str.charAt(i) == '_') {\n                    endIndexOfCountry = i;\n                    i++;\n                    if (i == len) {\n                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                    }\n                    if (len >= i + 2 && Character.isLowerCase(str.charAt(i)) && Character.isLowerCase(str.charAt(i + 1))) {\n                        i += 2;\n                        while (i < len && Character.isLowerCase(str.charAt(i))) {\n                            i++;\n                        }\n                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                    }\n                }\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (str.charAt(i) == '-') {\n                endIndexOfCountry = i;\n                i++;\n                if (i == len) {\n                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                }\n                if (len >= i + 2 && Character.isDigit(str.charAt(i)) && Character.isDigit(str.charAt(i + 1))) {\n                    i += 2;\n                    while (i < len && Character.isDigit(str.charAt(i))) {\n                        i++;\n                    }\n                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                }\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (str.charAt(i) == '_') {\n                endIndexOfCountry = i;\n                i++;\n                if (i == len) {\n                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                }\n                if (len >= i + 2 && Character.isLowerCase(str.charAt(i)) && Character.isLowerCase(str.charAt(i + 1))) {\n                    i += 2;\n                    while (i < len && Character.isLowerCase(str.charAt(i))) {\n                        i++;\n                    }\n                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                }\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..58134f1f 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,159 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int i = 2;\n+    if (len >= 3 && (str.charAt(2) == '-' || str.charAt(2) == '_')) {\n+        i = 3;\n+        if (len < 5) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+        char ch2 = str.charAt(2);\n+        char ch3 = str.charAt(3);\n+        if ((ch2 == '-' && (ch3 < 'A' || ch3 > 'Z')) || (ch2 == '_' && (ch3 < 'a' || ch3 > 'z'))) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+    }\n+    if (len == i) {\n+        return new Locale(str.substring(0, i));\n+    }\n+    if (len >= i + 2 && (str.charAt(i + 1) == '-' || str.charAt(i + 1) == '_')) {\n+        i += 2;\n+        char ch = str.charAt(i - 1);\n+        if (ch == '_' && (str.charAt(i - 2) < 'a' || str.charAt(i - 2) > 'z' || str.charAt(i) < 'A' || str.charAt(i) > 'Z')) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        if (len == i) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        char ch2 = str.charAt(i);\n+        if (ch2 == '-') {\n+            int endIndexOfCountry = i + 1;\n+            if (len >= i + 2 && Character.isLetter(str.charAt(i + 1))) {\n+                i += 2;\n+                while (i < len && Character.isLetter(str.charAt(i))) {\n+                    i++;\n+                }\n+                if (i < len && str.charAt(i) == '-') {\n+                    endIndexOfCountry = i;\n+                    i++;\n+                }\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+            return new Locale(str.substring(0, 2), str.substring(3, endIndexOfCountry), i < len ? str.substring(i) : \"\");\n+        }\n+        if (ch2 == '_') {\n+            int endIndexOfCountry = i + 1;\n+            if (len >= i + 2 && Character.isLowerCase(str.charAt(i + 1))) {\n+                i += 2;\n+                while (i < len && Character.isLowerCase(str.charAt(i))) {\n+                    i++;\n+                }\n+                if (i < len && str.charAt(i) == '_') {\n+                    endIndexOfCountry = i;\n+                    i++;\n+                }\n+            }\n+            return new Locale(str.substring(0, 2), str.substring(3, endIndexOfCountry), i < len ? str.substring(i) : \"\");\n+        }\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len >= i + 2 && Character.isLetter(str.charAt(i)) && Character.isLetter(str.charAt(i + 1))) {\n+        i += 2;\n+        while (i < len && Character.isLetter(str.charAt(i))) {\n+            i++;\n+        }\n+        if (i == len) {\n+            return new Locale(str.substring(0, 2), str.substring(2));\n+        }\n+        if (len >= i + 2 && (str.charAt(i) == '-' || str.charAt(i) == '_')) {\n+            i++;\n+            int endIndexOfCountry = i;\n+            char ch = str.charAt(i - 1);\n+            if (ch == '_' && (str.charAt(i - 2) < 'a' || str.charAt(i - 2) > 'z' || str.charAt(i) < 'A' || str.charAt(i) > 'Z')) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            if (len >= i + 2 && Character.isLetter(str.charAt(i)) && Character.isLetter(str.charAt(i + 1))) {\n+                i += 2;\n+                while (i < len && Character.isLetter(str.charAt(i))) {\n+                    i++;\n+                }\n+                if (i == len) {\n+                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                } else if (str.charAt(i) == '-') {\n+                    endIndexOfCountry = i;\n+                    i++;\n+                    if (i == len) {\n+                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                    }\n+                    if (len >= i + 2 && Character.isDigit(str.charAt(i)) && Character.isDigit(str.charAt(i + 1))) {\n+                        i += 2;\n+                        while (i < len && Character.isDigit(str.charAt(i))) {\n+                            i++;\n+                        }\n+                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                    }\n+                } else if (str.charAt(i) == '_') {\n+                    endIndexOfCountry = i;\n+                    i++;\n+                    if (i == len) {\n+                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                    }\n+                    if (len >= i + 2 && Character.isLowerCase(str.charAt(i)) && Character.isLowerCase(str.charAt(i + 1))) {\n+                        i += 2;\n+                        while (i < len && Character.isLowerCase(str.charAt(i))) {\n+                            i++;\n+                        }\n+                        return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                    }\n+                }\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else if (str.charAt(i) == '-') {\n+                endIndexOfCountry = i;\n+                i++;\n+                if (i == len) {\n+                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                if (len >= i + 2 && Character.isDigit(str.charAt(i)) && Character.isDigit(str.charAt(i + 1))) {\n+                    i += 2;\n+                    while (i < len && Character.isDigit(str.charAt(i))) {\n+                        i++;\n+                    }\n+                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                }\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else if (str.charAt(i) == '_') {\n+                endIndexOfCountry = i;\n+                i++;\n+                if (i == len) {\n+                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                }\n+                if (len >= i + 2 && Character.isLowerCase(str.charAt(i)) && Character.isLowerCase(str.charAt(i + 1))) {\n+                    i += 2;\n+                    while (i < len && Character.isLowerCase(str.charAt(i))) {\n+                        i++;\n+                    }\n+                    return new Locale(str.substring(0, 2), str.substring(2, endIndexOfCountry), str.substring(i));\n+                }\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n     }\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}