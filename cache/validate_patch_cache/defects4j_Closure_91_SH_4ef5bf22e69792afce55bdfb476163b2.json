{
    "patch": "      if (parent.getType() != Token.OBJECTLIT &&\n          parent.getType() != Token.CATCH &&\n          parent.getType() != Token.EXPORT_SPECS &&\n          parent.getType() != Token.SCRIPT) {\n        return false;\n      }\n\n      Node enclosingFunction = NodeUtil.getEnclosingFunction(n);\n      JSDocInfo enclosingInfo = null;\n      if (enclosingFunction != null) {\n        enclosingInfo = getFunctionJsDocInfo(enclosingFunction);\n        if (enclosingInfo == null || !enclosingInfo.isConstructor()) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..dcb570d1 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,21 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent.getType() != Token.OBJECTLIT &&\n+          parent.getType() != Token.CATCH &&\n+          parent.getType() != Token.EXPORT_SPECS &&\n+          parent.getType() != Token.SCRIPT) {\n+        return false;\n+      }\n+\n+      Node enclosingFunction = NodeUtil.getEnclosingFunction(n);\n+      JSDocInfo enclosingInfo = null;\n+      if (enclosingFunction != null) {\n+        enclosingInfo = getFunctionJsDocInfo(enclosingFunction);\n+        if (enclosingInfo == null || !enclosingInfo.isConstructor()) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}