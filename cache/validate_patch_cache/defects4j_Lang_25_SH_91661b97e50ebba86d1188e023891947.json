{
    "patch": "try {\n    Charset charset = Charset.forName(\"ISO-8859-1\");\n    CharsetEncoder encoder = charset.newEncoder();\n    encoder.replaceWith(\"?\");\n    encoder.onMalformedInput(CodingErrorAction.REPLACE);\n    encoder.onUnmappableCharacter(CodingErrorAction.REPLACE);\n\n    ByteBuffer buffer = encoder.encode(CharBuffer.wrap(str));\n    byte[] bytes = buffer.array();\n    byte[] expected = expectedHexBytes.replaceAll(\" \", \"\").getBytes(\"ISO-8859-1\");\n    assertArrayEquals(expected, bytes);\n} catch (UnsupportedEncodingException e) {\n    fail(\"Unexpected exception: \" + e);\n} catch (CharacterCodingException e) {\n    fail(\"Unexpected exception: \" + e);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}