{
    "patch": "                SavedField savedField = savedFields[i];\n                if (savedField.iValue != null) {\n                    savedField.iField.set(savedField.iInstant, savedField.iValue.intValue());\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..9093cc26 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,10 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                SavedField savedField = savedFields[i];\n+                if (savedField.iValue != null) {\n+                    savedField.iField.set(savedField.iInstant, savedField.iValue.intValue());\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}