{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double g = 0;\n    double ans = 0;\n    double ax = 0;\n    double r = a;\n\n    if (x <= 0) {\n        return 0;\n    } else if (a > 0 && a < 1) {\n        ans = 1 / a;\n        g = ans;\n        for (int i = 1; i <= 100; i++) {\n            ans = ans * x / (a + i);\n            g = g + ans;\n            if (Math.abs(ans / g) < 1.0e-15) {\n                return g * Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n            }\n        }\n        return Double.NaN;\n    } else {\n        ans = Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n        ax = a;\n        for (int i = 1; i <= 100; i++) {\n            ax = ax + 1;\n            r = r * (ax - a) / ax;\n            ans = ans + r * Math.exp(-x + ax * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(ax));\n            if (Math.abs(r / ans) < 1.0e-15) {\n                return 1 - ans / Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n            }\n        }\n        return Double.NaN;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..ec612ddcc 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,39 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double g = 0;\n+    double ans = 0;\n+    double ax = 0;\n+    double r = a;\n+\n+    if (x <= 0) {\n+        return 0;\n+    } else if (a > 0 && a < 1) {\n+        ans = 1 / a;\n+        g = ans;\n+        for (int i = 1; i <= 100; i++) {\n+            ans = ans * x / (a + i);\n+            g = g + ans;\n+            if (Math.abs(ans / g) < 1.0e-15) {\n+                return g * Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n+            }\n+        }\n+        return Double.NaN;\n+    } else {\n+        ans = Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n+        ax = a;\n+        for (int i = 1; i <= 100; i++) {\n+            ax = ax + 1;\n+            r = r * (ax - a) / ax;\n+            ans = ans + r * Math.exp(-x + ax * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(ax));\n+            if (Math.abs(r / ans) < 1.0e-15) {\n+                return 1 - ans / Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n+            }\n+        }\n+        return Double.NaN;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}