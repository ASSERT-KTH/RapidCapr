{
    "patch": "com.google.javascript.rhino.jstype.ObjectType thisType =\n    functionType.getTypeOfThis();\nif (thisType != null) {\n  Node callerNode = n.getParent();\n  if (callerNode.isGetProp() || callerNode.isGetElem()) {\n    ensureTyped(t, callerNode.getFirstChild(), thisType);\n  } else {\n    report(t, n, INVALID_THIS_TYPE);\n    ensureTyped(t, n);\n    return;\n  }\n}\nvisitParameterList(t, n, functionType);\nensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..139e0015 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+com.google.javascript.rhino.jstype.ObjectType thisType =\n+    functionType.getTypeOfThis();\n+if (thisType != null) {\n+  Node callerNode = n.getParent();\n+  if (callerNode.isGetProp() || callerNode.isGetElem()) {\n+    ensureTyped(t, callerNode.getFirstChild(), thisType);\n+  } else {\n+    report(t, n, INVALID_THIS_TYPE);\n+    ensureTyped(t, n);\n+    return;\n+  }\n+}\n+visitParameterList(t, n, functionType);\n+ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}