{
    "patch": "public void addValue(double value) {\n    if (!Double.isNaN(value)) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        if (geoMeanImpl != null && value == 0) {\n            geoMeanImpl.increment(1.0);\n        } else {\n            if (geoMeanImpl != null && value < 0) {\n                geoMeanImpl = null;\n                throw new IllegalArgumentException(\"Geometric Mean is undefined for negative values\");\n            }\n            if (sumLogImpl != null) {\n                sumLogImpl.increment(Math.log(Math.abs(value)));\n            }\n            if (secondMoment != null) {\n                secondMoment.increment(value);\n            }\n            if (!(meanImpl instanceof Mean)) {\n                ((AbstractStorelessUnivariateStatistic) meanImpl).increment(value);\n            }\n            if (!(varianceImpl instanceof Variance)) {\n                ((AbstractStorelessUnivariateStatistic) varianceImpl).increment(value);\n            }\n            if (!(geoMeanImpl instanceof GeometricMean)) {\n                geoMeanImpl.increment(value);\n            }\n        }\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..a5a0c19c6 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,38 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n+public void addValue(double value) {\n+    if (!Double.isNaN(value)) {\n         sumImpl.increment(value);\n         sumsqImpl.increment(value);\n         minImpl.increment(value);\n         maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+        if (geoMeanImpl != null && value == 0) {\n+            geoMeanImpl.increment(1.0);\n+        } else {\n+            if (geoMeanImpl != null && value < 0) {\n+                geoMeanImpl = null;\n+                throw new IllegalArgumentException(\"Geometric Mean is undefined for negative values\");\n+            }\n+            if (sumLogImpl != null) {\n+                sumLogImpl.increment(Math.log(Math.abs(value)));\n+            }\n+            if (secondMoment != null) {\n+                secondMoment.increment(value);\n+            }\n+            if (!(meanImpl instanceof Mean)) {\n+                ((AbstractStorelessUnivariateStatistic) meanImpl).increment(value);\n+            }\n+            if (!(varianceImpl instanceof Variance)) {\n+                ((AbstractStorelessUnivariateStatistic) varianceImpl).increment(value);\n+            }\n+            if (!(geoMeanImpl instanceof GeometricMean)) {\n+                geoMeanImpl.increment(value);\n+            }\n         }\n-        n++;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "java.lang.IllegalArgumentException: Geometric Mean is undefined for negative values",
    "test_result": "FAIL"
}