{
    "patch": "          int indexOfDot = namespace.indexOf('.');\n          if (indexOfDot == -1) {\n            // Any old place is fine.\n            compiler.getNodeForCodeInsertion(minimumModule)\n                .addChildToBack(replacementNode);\n          } else {\n            // Add it after the parent namespace.\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n            Preconditions.checkNotNull(parentName);\n            Preconditions.checkNotNull(parentName.replacementNode);\n            parentName.replacementNode.getParent().addChildAfter(\n                replacementNode, parentName.replacementNode);\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..85fe3484 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -800,6 +800,19 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n             parentName.replacementNode.getParent().addChildAfter(\n                 replacementNode, parentName.replacementNode);\n           }\n+          if (indexOfDot == -1) {\n+            // Any old place is fine.\n+            compiler.getNodeForCodeInsertion(minimumModule)\n+                .addChildToBack(replacementNode);\n+          } else {\n+            // Add it after the parent namespace.\n+            ProvidedName parentName =\n+                providedNames.get(namespace.substring(0, indexOfDot));\n+            Preconditions.checkNotNull(parentName);\n+            Preconditions.checkNotNull(parentName.replacementNode);\n+            parentName.replacementNode.getParent().addChildAfter(\n+                replacementNode, parentName.replacementNode);\n+          }\n         }\n         if (explicitNode != null) {\n           explicitNode.detachFromParent();",
    "result_reason": "java.lang.IllegalArgumentException",
    "test_result": "FAIL"
}