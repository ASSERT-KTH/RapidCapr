{
    "patch": "  for (int i = 0; i < string.length(); i++) {\n    char ch = string.charAt(i);\n    if (ch == escape) {\n      if (++i < string.length()) {\n        ch = string.charAt(i);\n        switch(ch) {\n          case '\\\\': sb.append('\\\\'); break;\n          case '\\'': sb.append('\\''); break;\n          case '\\\"': sb.append('\\\"'); break;\n          case 'r': sb.append('\\r'); break;\n          case 'f': sb.append('\\f'); break;\n          case 't': sb.append('\\t'); break;\n          case 'n': sb.append('\\n'); break;\n          case 'b': sb.append('\\b'); break;\n          case 'u':\n            if (i+4 < string.length()) {\n              // Unicode escape.\n              String unicode = string.substring(i+1,i+5);\n              try {\n                char c = (char)Integer.parseInt(unicode, 16);\n                sb.append(c);\n                i += 4;\n              } catch (NumberFormatException nfe) {\n                throw new RuntimeException(\"Unable to parse unicode value: \" + unicode, nfe);\n              }\n            } else {\n              sb.append(ch);\n            }\n            break;\n          default: sb.append(ch); break;\n        }\n      } else {\n        // Should never happen\n        sb.append(ch);\n      }\n    } else {\n      sb.append(ch);\n    }\n  }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}