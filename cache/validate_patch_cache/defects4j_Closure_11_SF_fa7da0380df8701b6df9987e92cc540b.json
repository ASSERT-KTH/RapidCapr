{
    "patch": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Getprop {\n\n    public static String getprop(String property) {\n        String result = \"\";\n        try {\n            Process p = Runtime.getRuntime().exec(\"getprop \" + property);\n            BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n            String line;\n            while ((line = input.readLine()) != null) {\n                result += line;\n            }\n            input.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..f069c9b5 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,28 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class Getprop {\n+\n+    public static String getprop(String property) {\n+        String result = \"\";\n+        try {\n+            Process p = Runtime.getRuntime().exec(\"getprop \" + property);\n+            BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+            String line;\n+            while ((line = input.readLine()) != null) {\n+                result += line;\n+            }\n+            input.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        return result;\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}