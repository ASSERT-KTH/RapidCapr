{
    "patch": "public static String reverseString(String str) {\n    if (str == null || str.isEmpty()) {\n        return str;\n    } else {\n        char[] chars = str.toCharArray();\n        int i = 0, j = chars.length - 1;\n        while (i < j) {\n            char temp = chars[i];\n            chars[i] = chars[j];\n            chars[j] = temp;\n            i++;\n            j--;\n        }\n        return new String(chars);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..859071a5a 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,22 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static String reverseString(String str) {\n+    if (str == null || str.isEmpty()) {\n+        return str;\n+    } else {\n+        char[] chars = str.toCharArray();\n+        int i = 0, j = chars.length - 1;\n+        while (i < j) {\n+            char temp = chars[i];\n+            chars[i] = chars[j];\n+            chars[j] = temp;\n+            i++;\n+            j--;\n+        }\n+        return new String(chars);\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}