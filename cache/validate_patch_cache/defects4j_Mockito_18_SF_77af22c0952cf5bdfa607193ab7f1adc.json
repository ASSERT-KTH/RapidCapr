{
    "patch": "public static int[] removeDuplicates(int[] nums) {\n    if (nums == null || nums.length == 0) {\n        return new int[0];\n    }\n    Arrays.sort(nums);\n    int[] temp = new int[nums.length];\n    int j = 0;\n    for (int i = 0; i < nums.length; ) {\n        int val = nums[i];\n        temp[j++] = val;\n        while (i < nums.length && nums[i] == val) {\n            i++;\n        }\n    }\n    int[] result = new int[j];\n    System.arraycopy(temp, 0, result, 0, j);\n    return result;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..35013d88b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,24 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public static int[] removeDuplicates(int[] nums) {\n+    if (nums == null || nums.length == 0) {\n+        return new int[0];\n+    }\n+    Arrays.sort(nums);\n+    int[] temp = new int[nums.length];\n+    int j = 0;\n+    for (int i = 0; i < nums.length; ) {\n+        int val = nums[i];\n+        temp[j++] = val;\n+        while (i < nums.length && nums[i] == val) {\n+            i++;\n+        }\n+    }\n+    int[] result = new int[j];\n+    System.arraycopy(temp, 0, result, 0, j);\n+    return result;\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}