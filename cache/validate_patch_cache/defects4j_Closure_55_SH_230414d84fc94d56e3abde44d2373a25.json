{
    "patch": "    if (n.getType() == Token.CALL) {\n      return false;\n    }\n    return NodeUtil.isFunctionExpression(n);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..92e5aa2f 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,6 +114,9 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n+    if (n.getType() == Token.CALL) {\n+      return false;\n+    }\n     return NodeUtil.isFunctionExpression(n);\n   }\n ",
    "result_reason": "java.lang.IllegalStateException: Expected function but was call Reference node CALL 4 [free_call: 1] [source_file: testcode]",
    "test_result": "FAIL"
}