{
    "patch": "MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\nMethodInterceptorFilter newFilter;\ntry {\n  newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n} catch (InstantiationException e) {\n  throw new RuntimeException(\"Failed while initializing the MethodInterceptorFilter\", e);\n}\nif (mock instanceof Factory) {\n  try {\n    Factory.class.getMethod(\"getCallbacks\"); // This line initializes the Factory class because it is lazily loaded.\n  } catch (NoSuchMethodException e) {\n    throw new RuntimeException(\"Failed while initializing the Factory class\", e);\n  }\n  try {\n    ((Factory) mock).getCallbacks();\n    ((Factory) mock).setCallback(0, newFilter);\n  } catch (IllegalStateException e) {\n    ((Factory) mock).setCallbacks(new Callback[] { newFilter });\n  }\n} else {\n  throw new IllegalArgumentException(\"Only 'Factory' mock objects are supported.\");\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..95d867a58 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,31 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+MethodInterceptorFilter newFilter;\n+try {\n+  newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+} catch (InstantiationException e) {\n+  throw new RuntimeException(\"Failed while initializing the MethodInterceptorFilter\", e);\n+}\n+if (mock instanceof Factory) {\n+  try {\n+    Factory.class.getMethod(\"getCallbacks\"); // This line initializes the Factory class because it is lazily loaded.\n+  } catch (NoSuchMethodException e) {\n+    throw new RuntimeException(\"Failed while initializing the Factory class\", e);\n+  }\n+  try {\n+    ((Factory) mock).getCallbacks();\n+    ((Factory) mock).setCallback(0, newFilter);\n+  } catch (IllegalStateException e) {\n+    ((Factory) mock).setCallbacks(new Callback[] { newFilter });\n+  }\n+} else {\n+  throw new IllegalArgumentException(\"Only 'Factory' mock objects are supported.\");\n+}\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: exception InstantiationException is never thrown in body of corresponding try statement",
    "test_result": "ERROR"
}