{
    "patch": "    Node functionParent = function.getParent();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(functionParent)) {\n        // The parameters object literal setters can not be removed.\n        return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean isInLocalRecurser = isLocalRecurser(fnScope);\n    boolean inFunctionDefinition = !function.getParent().isScript();\n    int possibleArgumentCount = countPossibleArguments(argList, isInLocalRecurser, inFunctionDefinition);\n    List<FakeParam> fakeArguments = createArgumentList(fnScope, argList, possibleArgumentCount);\n    NodeUtil.replaceWithMultiple(argList, new ArrayList<>(fakeArguments));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..45461ef4 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,20 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node functionParent = function.getParent();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(functionParent)) {\n+        // The parameters object literal setters can not be removed.\n+        return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean isInLocalRecurser = isLocalRecurser(fnScope);\n+    boolean inFunctionDefinition = !function.getParent().isScript();\n+    int possibleArgumentCount = countPossibleArguments(argList, isInLocalRecurser, inFunctionDefinition);\n+    List<FakeParam> fakeArguments = createArgumentList(fnScope, argList, possibleArgumentCount);\n+    NodeUtil.replaceWithMultiple(argList, new ArrayList<>(fakeArguments));\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}