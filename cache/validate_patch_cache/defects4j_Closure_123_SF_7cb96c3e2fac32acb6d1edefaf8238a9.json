{
    "patch": "public void printInOperatorInForLoop(boolean c, boolean d, String expected) {\n    StringBuilder result = new StringBuilder();\n    Object a; \n    if (c) {\n        a = 0;\n    } else {\n        Object[] arr = {0};\n        boolean isIn = false;\n        try {\n            isIn = 0 in d;\n        } catch (Exception e) {\n            // Do nothing\n        }\n        a = isIn ? arr : new Object[0];\n    }\n    for (;;) {\n        result.append(\"foo\");\n        if (a instanceof Object[]) {\n            break;\n        } else if (a instanceof Integer && a.equals(10)) {\n            break;\n        }\n        foo();\n    }\n    assertEquals(expected, result.toString());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..615ce717 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,32 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void printInOperatorInForLoop(boolean c, boolean d, String expected) {\n+    StringBuilder result = new StringBuilder();\n+    Object a; \n+    if (c) {\n+        a = 0;\n+    } else {\n+        Object[] arr = {0};\n+        boolean isIn = false;\n+        try {\n+            isIn = 0 in d;\n+        } catch (Exception e) {\n+            // Do nothing\n+        }\n+        a = isIn ? arr : new Object[0];\n+    }\n+    for (;;) {\n+        result.append(\"foo\");\n+        if (a instanceof Object[]) {\n+            break;\n+        } else if (a instanceof Integer && a.equals(10)) {\n+            break;\n+        }\n+        foo();\n+    }\n+    assertEquals(expected, result.toString());\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}