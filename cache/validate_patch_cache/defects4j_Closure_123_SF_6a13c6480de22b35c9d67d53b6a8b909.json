{
    "patch": "public String fixCode(boolean c, int[] d) {\n    String expected = \"for(a=c ? 0 : (0 in d)); ; ) foo()\";\n    String actual = \"for(a=c ? 0 : [(0 in d)]; ; ) foo()\";\n    if (actual.equals(expected)) {\n        return \"No change needed\";\n    } else {\n        actual = actual.replace(\"[\", \"\").replace(\"]\", \"\");\n        return actual;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..136ff478 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,16 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(boolean c, int[] d) {\n+    String expected = \"for(a=c ? 0 : (0 in d)); ; ) foo()\";\n+    String actual = \"for(a=c ? 0 : [(0 in d)]; ; ) foo()\";\n+    if (actual.equals(expected)) {\n+        return \"No change needed\";\n+    } else {\n+        actual = actual.replace(\"[\", \"\").replace(\"]\", \"\");\n+        return actual;\n+    }\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}