{
    "patch": "    public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n        ArrayList<Integer> result = new ArrayList<>();\n        if (k > arr.size()) {\n            k = arr.size();\n        }\n        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());\n        for (int i = 0; i < arr.size(); i++) {\n            maxHeap.add(arr.get(i));\n            if (maxHeap.size() > k) {\n                maxHeap.remove();\n            }\n        }\n        while (!maxHeap.isEmpty()) {\n            result.add(maxHeap.remove());\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MAXIMUM_K.java b/src/main/java/humaneval/buggy/MAXIMUM_K.java\nindex 4f3e095..64daced 100644\n--- a/src/main/java/humaneval/buggy/MAXIMUM_K.java\n+++ b/src/main/java/humaneval/buggy/MAXIMUM_K.java\n@@ -32,7 +32,23 @@ public class MAXIMUM_K {\n     public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n         Collections.sort(arr);\n         ArrayList<Integer> result = new ArrayList<>();\n-        for(int i = arr.size() - 1; i >= arr.size() - k; i--) {\n+    public static ArrayList<Integer> maximum_k(ArrayList<Integer> arr, int k) {\n+        ArrayList<Integer> result = new ArrayList<>();\n+        if (k > arr.size()) {\n+            k = arr.size();\n+        }\n+        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());\n+        for (int i = 0; i < arr.size(); i++) {\n+            maxHeap.add(arr.get(i));\n+            if (maxHeap.size() > k) {\n+                maxHeap.remove();\n+            }\n+        }\n+        while (!maxHeap.isEmpty()) {\n+            result.add(maxHeap.remove());\n+        }\n+        return result;\n+    }\n             result.add(arr.get(i));\n         }\n         return result;",
    "result_reason": " /tmp/humaneval-MAXIMUM_K/src/main/java/humaneval/buggy/MAXIMUM_K.java:[35,5] illegal start of expression",
    "test_result": "ERROR"
}