{
    "patch": "public static double getTypedPercent(String js) {\n    int total = 0;\n    int correct = 0;\n    for (int i = 0; i < js.length(); i++) {\n        char c = js.charAt(i);\n        if (c == '\\'') {\n            total++;\n            if (i + 1 < js.length() && js.charAt(i + 1) == ')') {\n                correct++;\n            }\n        }\n    }\n    return 100.0 * correct / total;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..e76cad16 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,20 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    int total = 0;\n+    int correct = 0;\n+    for (int i = 0; i < js.length(); i++) {\n+        char c = js.charAt(i);\n+        if (c == '\\'') {\n+            total++;\n+            if (i + 1 < js.length() && js.charAt(i + 1) == ')') {\n+                correct++;\n+            }\n+        }\n+    }\n+    return 100.0 * correct / total;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}