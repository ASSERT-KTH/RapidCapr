{
    "patch": "public static double getTypedPercent(JSONArray js) {\n    int totalCount = 0;\n    int typedCount = 0;\n    for (int i = 0; i < js.length(); i++) {\n        JSONObject obj = js.getJSONObject(i);\n        String type = obj.getString(\"type\");\n        if (type.equals(\"number\")) {\n            totalCount++;\n            if (!obj.isNull(\"value\")) {\n                typedCount++;\n            }\n        }\n    }\n    if (totalCount == 0) {\n        return 0;\n    }\n    return (double) typedCount / totalCount * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..c3c0ca51 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JSONArray js) {\n+    int totalCount = 0;\n+    int typedCount = 0;\n+    for (int i = 0; i < js.length(); i++) {\n+        JSONObject obj = js.getJSONObject(i);\n+        String type = obj.getString(\"type\");\n+        if (type.equals(\"number\")) {\n+            totalCount++;\n+            if (!obj.isNull(\"value\")) {\n+                typedCount++;\n+            }\n+        }\n+    }\n+    if (totalCount == 0) {\n+        return 0;\n+    }\n+    return (double) typedCount / totalCount * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}