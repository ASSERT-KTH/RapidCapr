{
    "patch": "if (rowDimension <= 0 || columnDimension <= 0) {\n    throw new IllegalArgumentException(\"Matrix dimensions must be positive\");\n} else if ((long) rowDimension * (long) columnDimension > Integer.MAX_VALUE) {\n    throw new NumberIsTooLargeException((long)rowDimension * (long)columnDimension, Integer.MAX_VALUE, true);\n} else {\n    this.rows = rowDimension;\n    this.columns = columnDimension;\n    this.entries = new OpenIntToDoubleHashMap(0.0);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..adb2a3ddb 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,15 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+if (rowDimension <= 0 || columnDimension <= 0) {\n+    throw new IllegalArgumentException(\"Matrix dimensions must be positive\");\n+} else if ((long) rowDimension * (long) columnDimension > Integer.MAX_VALUE) {\n+    throw new NumberIsTooLargeException((long)rowDimension * (long)columnDimension, Integer.MAX_VALUE, true);\n+} else {\n+    this.rows = rowDimension;\n+    this.columns = columnDimension;\n+    this.entries = new OpenIntToDoubleHashMap(0.0);\n+}\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: variable rows might already have been assigned",
    "test_result": "ERROR"
}