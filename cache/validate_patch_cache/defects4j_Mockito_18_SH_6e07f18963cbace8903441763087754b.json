{
    "patch": "public Object returnValueFor(Class clazz) {\n    if (clazz.isAssignableFrom(Double.class)) {\n        return Double.valueOf(0);\n    } else if (clazz.isAssignableFrom(String.class)) {\n        return \"test\";\n    } else if (clazz.isAssignableFrom(Iterable.class)) {\n        return Collections.emptyList(); // use emptyList() instead of null\n    }\n    // add a default return statement to return null if no compatible class is found\n    return null;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}