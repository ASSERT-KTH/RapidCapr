{
    "patch": "import java.math.BigDecimal;\n\npublic static double[] distributionClone(double[] p, int n) {\n    BigDecimal[] dp = new BigDecimal[n + 1];\n    BigDecimal[] prev = new BigDecimal[n + 1];\n\n    for (int i = 0; i <= n; i++) {\n        dp[i] = BigDecimal.ZERO;\n        prev[i] = BigDecimal.ZERO;\n    }\n    dp[0] = BigDecimal.ONE;\n\n    for (int i = 0; i < p.length; i++) {\n        BigDecimal pi = BigDecimal.valueOf(p[i]);\n        for (int j = 0; j <= n; j++) {\n            if (j > 0) {\n                dp[j] = dp[j].multiply(pi).add(prev[j - 1].multiply(BigDecimal.ONE.subtract(pi)));\n            } else {\n                dp[j] = dp[j].multiply(BigDecimal.ONE.subtract(pi));\n            }\n        }\n        for (int j = 0; j <= n; j++) {\n            prev[j] = dp[j];\n        }\n    }\n\n    double[] result = new double[n];\n\n    for (int i = 0; i < n; i++) {\n        BigDecimal sum = BigDecimal.ZERO;\n        for (int j = i + 1; j <= n; j++) {\n            sum = sum.add(dp[j]);\n        }\n        result[i] = sum.doubleValue();\n    }\n\n    return result;\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}