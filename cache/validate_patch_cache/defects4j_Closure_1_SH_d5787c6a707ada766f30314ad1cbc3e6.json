{
    "patch": "    Node parent = function.getParent();\n    if (NodeUtil.isGetOrSetKey(parent) ||\n        NodeUtil.isSetterProperty(parent)) {\n      // The parameters object literal setters cannot be removed.\n      // Object literal setters are defined via the \"get\" and \"set\"\n      // AST node type; getters are allowed to pass-through.",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..671d7d9a 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,12 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node parent = function.getParent();\n+    if (NodeUtil.isGetOrSetKey(parent) ||\n+        NodeUtil.isSetterProperty(parent)) {\n+      // The parameters object literal setters cannot be removed.\n+      // Object literal setters are defined via the \"get\" and \"set\"\n+      // AST node type; getters are allowed to pass-through.\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}