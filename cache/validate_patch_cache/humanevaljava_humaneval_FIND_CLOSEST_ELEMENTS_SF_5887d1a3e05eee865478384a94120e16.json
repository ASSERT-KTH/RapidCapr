{
    "patch": "public static double[] find_closest_elements(double[] numbers) {\n    double[] result = new double[2];\n    double distance = Double.MAX_VALUE;\n    for (int i = 0; i < numbers.length - 1; i++){\n        for (int j = i+1; j < numbers.length; j++){\n            double new_distance = Math.abs(numbers[i] - numbers[j]);\n            if (new_distance < distance){\n                distance = new_distance;\n                result[0] = numbers[i];\n                result[1] = numbers[j];\n            }\n        }\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\nindex 72388af..eb73bbd 100644\n--- a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n@@ -1,25 +1,19 @@\n package humaneval.buggy;\n \n public class FIND_CLOSEST_ELEMENTS {\n-    public static double[] find_closest_elements(double[] numbers) {\n-        double[] result = new double[2];\n-\n-        double distance = Double.MAX_VALUE;\n-        for (int i = 0; i < numbers.length; i += 1){\n-            for (int j = 0; j < numbers.length; j += 1){\n-                double new_distance = Math.abs(numbers[i] - numbers[j]);\n-                if (new_distance < distance){\n-                    distance = new_distance;\n-                    if (numbers[i] < numbers[j]){\n-                        result[0] = numbers[i];\n-                        result[1] = numbers[j];\n-                    } else{\n-                        result[0] = numbers[j];\n-                        result[1] = numbers[i];\n-                    }\n-                }\n+public static double[] find_closest_elements(double[] numbers) {\n+    double[] result = new double[2];\n+    double distance = Double.MAX_VALUE;\n+    for (int i = 0; i < numbers.length - 1; i++){\n+        for (int j = i+1; j < numbers.length; j++){\n+            double new_distance = Math.abs(numbers[i] - numbers[j]);\n+            if (new_distance < distance){\n+                distance = new_distance;\n+                result[0] = numbers[i];\n+                result[1] = numbers[j];\n             }\n         }\n-        return result;\n     }\n+    return result;\n+}\n }",
    "result_reason": "   TEST_FIND_CLOSEST_ELEMENTS.test_1:15 arrays first differed at element [0]; expected:<5.9> but was:<5.0>",
    "test_result": "FAIL"
}