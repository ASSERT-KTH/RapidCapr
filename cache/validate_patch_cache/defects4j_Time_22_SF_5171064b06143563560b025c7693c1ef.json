{
    "patch": "protected BasePeriod(long duration) {\n    // create a Duration object with the specified time in milliseconds\n    Duration d = Duration.millis(duration);\n\n    // extract the number of weeks, days, and remaining milliseconds\n    int weeks = (int) d.getStandardDays() / 7;\n    int days = (int) d.getStandardDays() % 7;\n    int millis = d.getMillisOfDay();\n\n    // create the period with the extracted values\n    this(weeks, 0, days, 0, 0, 0, millis, PeriodType.standard().withMillisRemoved().withSecondsRemoved(), ISOChronology.getInstanceUTC());\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..d4ce3ba7 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,18 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    // create a Duration object with the specified time in milliseconds\n+    Duration d = Duration.millis(duration);\n+\n+    // extract the number of weeks, days, and remaining milliseconds\n+    int weeks = (int) d.getStandardDays() / 7;\n+    int days = (int) d.getStandardDays() % 7;\n+    int millis = d.getMillisOfDay();\n+\n+    // create the period with the extracted values\n+    this(weeks, 0, days, 0, 0, 0, millis, PeriodType.standard().withMillisRemoved().withSecondsRemoved(), ISOChronology.getInstanceUTC());\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}