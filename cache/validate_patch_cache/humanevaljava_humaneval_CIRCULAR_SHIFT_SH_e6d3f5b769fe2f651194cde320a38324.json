{
    "patch": "if (s.isEmpty() || shift == 0) {\n    return s;\n}\n\nint effectiveShift = Math.floorMod(shift, s.length());\n\nif (effectiveShift == 0) {\n    return s;\n}\n\nchar[] shiftedChars = new char[s.length()];\nfor (int i = 0; i < s.length(); i++) {\n    shiftedChars[i] = s.charAt((i + effectiveShift) % s.length());\n}\n\nreturn new String(shiftedChars);",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\nindex 9131a1c..7476c81 100644\n--- a/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n+++ b/src/main/java/humaneval/buggy/CIRCULAR_SHIFT.java\n@@ -18,7 +18,22 @@ public class CIRCULAR_SHIFT {\n                 sb.append(s.charAt(i));\n             return sb.toString();\n         } else {\n-            return s.substring(s.length() - shift + 1) + s.substring(0, s.length() - shift - 1);\n+if (s.isEmpty() || shift == 0) {\n+    return s;\n+}\n+\n+int effectiveShift = Math.floorMod(shift, s.length());\n+\n+if (effectiveShift == 0) {\n+    return s;\n+}\n+\n+char[] shiftedChars = new char[s.length()];\n+for (int i = 0; i < s.length(); i++) {\n+    shiftedChars[i] = s.charAt((i + effectiveShift) % s.length());\n+}\n+\n+return new String(shiftedChars);\n         }\n     }\n }",
    "result_reason": "   TEST_CIRCULAR_SHIFT.test_0:7 expected:<0[10]> but was:<0[01]>",
    "test_result": "FAIL"
}