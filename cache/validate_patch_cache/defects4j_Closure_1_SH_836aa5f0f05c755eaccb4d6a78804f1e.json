{
    "patch": "    ArrayList<Node> args = new ArrayList<>();\n\n    for (Node arg : argList.children()) {\n      args.add(arg);\n    }\n\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Strip unreferenced args off the end of the function declaration.\n      for (int i = args.size() - 1; i >= 0; i--) {\n        Node arg = args.get(i);\n        String argName = arg.getString();\n        Var var = fnScope.getVar(argName);\n        if (!referenced.contains(var)) {\n          NodeUtil.removeChildAt(argList, i);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2a56557a 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,22 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    ArrayList<Node> args = new ArrayList<>();\n+\n+    for (Node arg : argList.children()) {\n+      args.add(arg);\n+    }\n+\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      // Strip unreferenced args off the end of the function declaration.\n+      for (int i = args.size() - 1; i >= 0; i--) {\n+        Node arg = args.get(i);\n+        String argName = arg.getString();\n+        Var var = fnScope.getVar(argName);\n+        if (!referenced.contains(var)) {\n+          NodeUtil.removeChildAt(argList, i);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}