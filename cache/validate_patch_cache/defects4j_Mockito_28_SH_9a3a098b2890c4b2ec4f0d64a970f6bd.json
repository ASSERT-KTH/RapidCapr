{
    "patch": "    mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)\n        .map(Candidate::getMock)\n        .filter(Objects::nonNull)\n        .findFirst()\n        .ifPresent(mock -> {\n            try {\n                field.set(fieldInstance, mock);\n            } catch (IllegalAccessException e) {\n                throw new RuntimeException(\"Failed to set mock \" + mock + \" to field \" + field, e);\n            }\n        });",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..c230781ed 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -88,9 +88,20 @@ public class DefaultInjectionEngine {\n         }\n     }\n \n+\n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+    mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)\n+        .map(Candidate::getMock)\n+        .filter(Objects::nonNull)\n+        .findFirst()\n+        .ifPresent(mock -> {\n+            try {\n+                field.set(fieldInstance, mock);\n+            } catch (IllegalAccessException e) {\n+                throw new RuntimeException(\"Failed to set mock \" + mock + \" to field \" + field, e);\n+            }\n+        });\n         }\n     }\n ",
    "result_reason": "error: method references are not supported in -source 1.5",
    "test_result": "ERROR"
}