{
    "patch": "if (n.isDelProp()) {\n  return true;\n}\n\nif (n.isGetProp()) {\n  // check if the property is a dependent variable\n  if (isDependentProperty(n.getLastChild())) {\n    Node parent = n.getParent();\n    if (NodeUtil.isExpressionResultUsed(parent) ||\n        NodeUtil.isNameDeclaration(parent)) {\n      return true;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..9995bfd4 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,20 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n.isDelProp()) {\n+  return true;\n+}\n+\n+if (n.isGetProp()) {\n+  // check if the property is a dependent variable\n+  if (isDependentProperty(n.getLastChild())) {\n+    Node parent = n.getParent();\n+    if (NodeUtil.isExpressionResultUsed(parent) ||\n+        NodeUtil.isNameDeclaration(parent)) {\n+      return true;\n+    }\n+  }\n+}\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}