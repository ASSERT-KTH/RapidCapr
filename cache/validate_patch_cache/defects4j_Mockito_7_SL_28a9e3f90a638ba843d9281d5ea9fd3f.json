{
    "patch": "if (typeVariable.getGenericDeclaration() instanceof Class<?>) {\n    Type type = ((Class<?>) typeVariable.getGenericDeclaration())\n            .getTypeParameters()[0].getBounds()[0];\n    if (type != null && !type.equals(Object.class)) {\n        registerTypeVariablesOn(type);\n    }\n} else if (typeVariable.getGenericDeclaration() instanceof Method) {\n    Type[] genericParameterTypes = ((Method) typeVariable.getGenericDeclaration()).getGenericParameterTypes();\n    Type[] parameterTypes = ((Method) typeVariable.getGenericDeclaration()).getParameterTypes();\n    for (int i = 0; i < genericParameterTypes.length; i++) {\n        if (parameterTypes[i].getTypeName().equals(typeVariable.getName())) {\n            registerTypeVariablesOn(genericParameterTypes[i]);\n            break;\n        }\n    }\n} else {\n    Type actualType = getActualTypeArgumentFor(typeVariable);\n    if (actualType != null) {\n        registerTypeVariablesOn(actualType);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b6e81a288 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,32 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if (typeVariable.getGenericDeclaration() instanceof Class<?>) {\n+    Type type = ((Class<?>) typeVariable.getGenericDeclaration())\n+            .getTypeParameters()[0].getBounds()[0];\n+    if (type != null && !type.equals(Object.class)) {\n+        registerTypeVariablesOn(type);\n+    }\n+} else if (typeVariable.getGenericDeclaration() instanceof Method) {\n+    Type[] genericParameterTypes = ((Method) typeVariable.getGenericDeclaration()).getGenericParameterTypes();\n+    Type[] parameterTypes = ((Method) typeVariable.getGenericDeclaration()).getParameterTypes();\n+    for (int i = 0; i < genericParameterTypes.length; i++) {\n+        if (parameterTypes[i].getTypeName().equals(typeVariable.getName())) {\n+            registerTypeVariablesOn(genericParameterTypes[i]);\n+            break;\n+        }\n+    }\n+} else {\n+    Type actualType = getActualTypeArgumentFor(typeVariable);\n+    if (actualType != null) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}