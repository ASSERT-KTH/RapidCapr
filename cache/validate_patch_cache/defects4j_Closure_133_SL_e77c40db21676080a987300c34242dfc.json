{
    "patch": "private String getRemainingJSDocLine() {\n    String remainingJSDocLine = stream.getRemainingJSDocLine().trim();\n    // Check if the line starts with '@'\n    if (remainingJSDocLine.startsWith(\"@\")) {\n        // Check if there is a space after '@'\n        int spaceIndex = remainingJSDocLine.indexOf(\" \");\n        if (spaceIndex != -1) {\n            // Check if the type annotation is incorrect\n            String typeAnnotation = remainingJSDocLine.substring(0, spaceIndex);\n            if (typeAnnotation.contains(\":\")) {\n                int index = typeAnnotation.indexOf(\":\");\n                String type = typeAnnotation.substring(index + 1).trim();\n                if (type.startsWith(\"T\")) {\n                    throw new RuntimeException(\"Bad type annotation. Unknown type \" + type + \" at externs line \" + stream.lineno() + \" : \" + stream.line().trim());\n                }\n            }\n        }\n    }\n    return remainingJSDocLine;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..eacfca88 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,26 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String remainingJSDocLine = stream.getRemainingJSDocLine().trim();\n+    // Check if the line starts with '@'\n+    if (remainingJSDocLine.startsWith(\"@\")) {\n+        // Check if there is a space after '@'\n+        int spaceIndex = remainingJSDocLine.indexOf(\" \");\n+        if (spaceIndex != -1) {\n+            // Check if the type annotation is incorrect\n+            String typeAnnotation = remainingJSDocLine.substring(0, spaceIndex);\n+            if (typeAnnotation.contains(\":\")) {\n+                int index = typeAnnotation.indexOf(\":\");\n+                String type = typeAnnotation.substring(index + 1).trim();\n+                if (type.startsWith(\"T\")) {\n+                    throw new RuntimeException(\"Bad type annotation. Unknown type \" + type + \" at externs line \" + stream.lineno() + \" : \" + stream.line().trim());\n+                }\n+            }\n+        }\n+    }\n+    return remainingJSDocLine;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}