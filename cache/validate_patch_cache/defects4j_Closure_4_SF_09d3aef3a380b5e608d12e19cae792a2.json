{
    "patch": " JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    // TODO(user): Investigate whether it is really necessary to keep two\n    // different mechanisms for resolving named types, and if so, which order\n    // makes more sense. Now, resolution via registry is first in order to\n    // avoid triggering the warnings built into the resolution via properties.\n    boolean resolved = resolveViaRegistry(t, enclosing);\n    if (resolved) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n      }\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n    }\n\n    if (isResolved()) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n    }\n    return registry.isLastGeneration() ?\n        getReferencedType() : this;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/NamedType.java b/src/com/google/javascript/rhino/jstype/NamedType.java\nindex 70142c45..05bd21a2 100644\n--- a/src/com/google/javascript/rhino/jstype/NamedType.java\n+++ b/src/com/google/javascript/rhino/jstype/NamedType.java\n@@ -181,19 +181,18 @@ class NamedType extends ProxyObjectType {\n    * Resolve the referenced type within the enclosing scope.\n    */\n   @Override\n-  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n+ JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n     // TODO(user): Investigate whether it is really necessary to keep two\n     // different mechanisms for resolving named types, and if so, which order\n     // makes more sense. Now, resolution via registry is first in order to\n     // avoid triggering the warnings built into the resolution via properties.\n     boolean resolved = resolveViaRegistry(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n-      handleTypeCycle(t);\n-    }\n-\n     if (resolved) {\n       super.resolveInternal(t, enclosing);\n       finishPropertyContinuations();\n+      if (detectImplicitPrototypeCycle()) {\n+        handleTypeCycle(t);\n+      }\n       return registry.isLastGeneration() ?\n           getReferencedType() : this;\n     }\n@@ -203,8 +202,8 @@ class NamedType extends ProxyObjectType {\n       handleTypeCycle(t);\n     }\n \n-    super.resolveInternal(t, enclosing);\n     if (isResolved()) {\n+      super.resolveInternal(t, enclosing);\n       finishPropertyContinuations();\n     }\n     return registry.isLastGeneration() ?",
    "result_reason": "java.lang.StackOverflowError",
    "test_result": "FAIL"
}