{
    "patch": "        String param = \"\";\n        if (params.size() > 0) {\n          param = params.getParameter(0);\n        }\n        \n        if (param.equals(\"\")) {\n          if (setter.isMultiValued()) {\n            setter.addValue(true);\n          } else {\n            throw new CmdLineException(owner, new Localizable() {\n              @Override\n              public String formatWithLocale(Locale locale, Object... args) {\n                return \"No argument given for option {0}\";\n              }\n\n              @Override\n              public String toString() {\n                return \"No argument given for option {0}\";\n              }\n            }, baseName);\n          }\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n          } else {\n            return 0;\n          }\n          return 1;\n        }\n        return 0;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..9e7ea6c2 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,39 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+        String param = \"\";\n+        if (params.size() > 0) {\n+          param = params.getParameter(0);\n+        }\n+        \n+        if (param.equals(\"\")) {\n+          if (setter.isMultiValued()) {\n+            setter.addValue(true);\n+          } else {\n+            throw new CmdLineException(owner, new Localizable() {\n+              @Override\n+              public String formatWithLocale(Locale locale, Object... args) {\n+                return \"No argument given for option {0}\";\n+              }\n+\n+              @Override\n+              public String toString() {\n+                return \"No argument given for option {0}\";\n+              }\n+            }, baseName);\n+          }\n+        } else {\n+          String lowerParam = param.toLowerCase();\n+          if (TRUES.contains(lowerParam)) {\n+            setter.addValue(true);\n+          } else if (FALSES.contains(lowerParam)) {\n+            setter.addValue(false);\n+          } else {\n+            return 0;\n+          }\n+          return 1;\n+        }\n+        return 0;\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}