{
    "patch": "1. if(sumXX == 0.0) { return 0.0; }\n      return sumYY - (sumXY * sumXY) / sumXX;\n\n2. if(Double.compare(sumXX, 0.0) == 0) {\n       return Double.NaN;\n      }\n      return sumYY - ((sumXY * sumXY) / sumXX);\n\n3. if(sumXX == 0.0) {\n       return Double.NaN;\n      }\n      return sumYY - ((sumXY * sumXY) / sumXX);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\nindex dcf512b72..2ba50c5fd 100644\n--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n@@ -261,7 +261,18 @@ public class SimpleRegression implements Serializable {\n      * @return sum of squared errors associated with the regression model\n      */\n     public double getSumSquaredErrors() {\n-        return sumYY - sumXY * sumXY / sumXX;\n+1. if(sumXX == 0.0) { return 0.0; }\n+      return sumYY - (sumXY * sumXY) / sumXX;\n+\n+2. if(Double.compare(sumXX, 0.0) == 0) {\n+       return Double.NaN;\n+      }\n+      return sumYY - ((sumXY * sumXY) / sumXX);\n+\n+3. if(sumXX == 0.0) {\n+       return Double.NaN;\n+      }\n+      return sumYY - ((sumXY * sumXY) / sumXX);\n     }\n \n     /**",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}