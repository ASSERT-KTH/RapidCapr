{
    "patch": "    private void init() {\n        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n\n        nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n\n        StringBuilder regex= new StringBuilder();\n        List<Strategy> collector = new ArrayList<Strategy>();\n\n        Matcher patternMatcher= formatPattern.matcher(pattern);\n        if(!patternMatcher.lookingAt()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n\n        Strategy currentStrategy = null;\n        currentFormatField = null;\n        MatchResult lastMatch = null;\n\n        while(patternMatcher.find()) {\n            if(currentFormatField == null) {\n                currentFormatField = patternMatcher.group();\n                currentStrategy = getStrategy(currentFormatField);\n            } else {\n                String nextFormatField = patternMatcher.group();\n                Strategy nextStrategy = getStrategy(nextFormatField);\n                if(currentStrategy.addRegex(this, regex)) {\n                    collector.add(currentStrategy);\n                }\n                currentStrategy = nextStrategy;\n                currentFormatField = nextFormatField;\n            }\n\n            lastMatch = patternMatcher.toMatchResult();\n        }\n\n        if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n\n        if(!collector.isEmpty()) {\n            strategies= collector.toArray(new Strategy[collector.size()]);\n            parsePattern= Pattern.compile(regex.toString());\n        } else {\n            strategies= new Strategy[0];\n            parsePattern= null;\n        }\n\n        currentFormatField = (lastMatch != null && lastMatch.end() == pattern.length()) ? null : currentFormatField;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..74625073 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,54 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+    private void init() {\n+        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n+\n+        nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n+\n+        StringBuilder regex= new StringBuilder();\n+        List<Strategy> collector = new ArrayList<Strategy>();\n+\n+        Matcher patternMatcher= formatPattern.matcher(pattern);\n+        if(!patternMatcher.lookingAt()) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+\n+        Strategy currentStrategy = null;\n+        currentFormatField = null;\n+        MatchResult lastMatch = null;\n+\n+        while(patternMatcher.find()) {\n+            if(currentFormatField == null) {\n+                currentFormatField = patternMatcher.group();\n+                currentStrategy = getStrategy(currentFormatField);\n+            } else {\n+                String nextFormatField = patternMatcher.group();\n+                Strategy nextStrategy = getStrategy(nextFormatField);\n+                if(currentStrategy.addRegex(this, regex)) {\n+                    collector.add(currentStrategy);\n+                }\n+                currentStrategy = nextStrategy;\n+                currentFormatField = nextFormatField;\n+            }\n+\n+            lastMatch = patternMatcher.toMatchResult();\n+        }\n+\n+        if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n+            collector.add(currentStrategy);\n+        }\n+\n+        if(!collector.isEmpty()) {\n+            strategies= collector.toArray(new Strategy[collector.size()]);\n+            parsePattern= Pattern.compile(regex.toString());\n+        } else {\n+            strategies= new Strategy[0];\n+            parsePattern= null;\n+        }\n+\n+        currentFormatField = (lastMatch != null && lastMatch.end() == pattern.length()) ? null : currentFormatField;\n+    }\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}