{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        SavedField savedField = savedFields[i];\n        long oldMillis = millis;\n        boolean isSupported = savedField.iField.isSupported();\n\n        long newMillis = savedField.set(millis, resetFields);\n        if (newMillis < millis && newMillis < 0 == millis >= 0 && isSupported) {\n            throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n        }\n        if (newMillis > millis && newMillis > 0 == millis <= 0 && isSupported) {\n            throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n        }\n        millis = newMillis;\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n    }\n    throw e;\n} catch (RuntimeException e) {\n    if (text != null) {\n        e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"' + \": \" + e.getMessage(), e);\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..a35817a9 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,32 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        SavedField savedField = savedFields[i];\n+        long oldMillis = millis;\n+        boolean isSupported = savedField.iField.isSupported();\n+\n+        long newMillis = savedField.set(millis, resetFields);\n+        if (newMillis < millis && newMillis < 0 == millis >= 0 && isSupported) {\n+            throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n+        }\n+        if (newMillis > millis && newMillis > 0 == millis <= 0 && isSupported) {\n+            throw new IllegalArgumentException(\"Parse failed due to numeric overflow\");\n+        }\n+        millis = newMillis;\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+    }\n+    throw e;\n+} catch (RuntimeException e) {\n+    if (text != null) {\n+        e = new IllegalArgumentException(\"Cannot parse \\\"\" + text + '\"' + \": \" + e.getMessage(), e);\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "java.lang.IllegalArgumentException: Cannot parse \"1970-04-06T12:24:00\": Parse failed due to numeric overflow",
    "test_result": "FAIL"
}