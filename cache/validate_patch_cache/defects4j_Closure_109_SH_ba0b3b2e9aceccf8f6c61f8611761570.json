{
    "patch": "      if (token.isType(TokenType.ELLIPSIS)) {\n        // {function(...args):void}\n        advance();\n        Node type = parseTypeExpressionNoParentheses();\n        return new RestType(null, type);\n      } else {\n        return parseTypeName(token);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..d7b15941 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,14 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+      if (token.isType(TokenType.ELLIPSIS)) {\n+        // {function(...args):void}\n+        advance();\n+        Node type = parseTypeExpressionNoParentheses();\n+        return new RestType(null, type);\n+      } else {\n+        return parseTypeName(token);\n+      }\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}