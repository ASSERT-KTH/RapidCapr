{
    "patch": "public void testGetprop4() {\n    String[] warnings = {};\n    ShellCallback callback = new DefaultShellCallback(true);\n    Configuration config = new Configuration();\n    config.addMapper(new MyMapper());\n    config.addClasspathResource(\"mybatis-config.xml\");\n    SqlSessionFactory sessionFactory = new SqlSessionFactoryBuilder().build(config);\n    try (SqlSession sqlSession = sessionFactory.openSession(false)) {\n        sqlSession.getConnection().setAutoCommit(false);\n        Configuration configuratiron = sqlSession.getConfiguration();\n        configuratiron.setEnvironment(new Environment(\"development\", new JdbcTransactionFactory(), dataSource));\n        Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/builder/MyMapperConfig.xml\");\n        Properties properties = new Properties();\n        properties.put(\"prop2\", \"hello\");\n        properties.put(\"prop1\", \"world\");\n        XMLConfigBuilder xmlConfigBuilder = new XMLConfigBuilder(reader, \"\", properties);\n        Configuration config2 = xmlConfigBuilder.parse();\n        assertEquals(config2.getVariables().getProperty(\"prop1\"), \"world\");\n        assertEquals(config2.getVariables().getProperty(\"prop2\"), \"hello\");\n        assertEquals(config2.getVariables().getProperty(\"prop3\"), System.getProperty(\"java.io.tmpdir\"));\n        assertEquals(config2.getVariables().getProperty(\"prop4\"), \"\");\n        assertEquals(config2.getVariables().getProperty(\"prop5\"), \"runtime property\");\n        assertEquals(config2.getVariables().getProperty(\"prop6\"), \"not present runtime property\");\n        sqlSessionFactory.getConfiguration().setVariables(config2.getVariables());\n        sqlSession.getConfiguration().addMapper(MyMapper.class);\n        assertTrue(\"expected a warning\", warnings.length > 0);\n    } catch (IOException e) {\n        fail(e.getMessage());\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..919968e0 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,36 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() {\n+    String[] warnings = {};\n+    ShellCallback callback = new DefaultShellCallback(true);\n+    Configuration config = new Configuration();\n+    config.addMapper(new MyMapper());\n+    config.addClasspathResource(\"mybatis-config.xml\");\n+    SqlSessionFactory sessionFactory = new SqlSessionFactoryBuilder().build(config);\n+    try (SqlSession sqlSession = sessionFactory.openSession(false)) {\n+        sqlSession.getConnection().setAutoCommit(false);\n+        Configuration configuratiron = sqlSession.getConfiguration();\n+        configuratiron.setEnvironment(new Environment(\"development\", new JdbcTransactionFactory(), dataSource));\n+        Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/builder/MyMapperConfig.xml\");\n+        Properties properties = new Properties();\n+        properties.put(\"prop2\", \"hello\");\n+        properties.put(\"prop1\", \"world\");\n+        XMLConfigBuilder xmlConfigBuilder = new XMLConfigBuilder(reader, \"\", properties);\n+        Configuration config2 = xmlConfigBuilder.parse();\n+        assertEquals(config2.getVariables().getProperty(\"prop1\"), \"world\");\n+        assertEquals(config2.getVariables().getProperty(\"prop2\"), \"hello\");\n+        assertEquals(config2.getVariables().getProperty(\"prop3\"), System.getProperty(\"java.io.tmpdir\"));\n+        assertEquals(config2.getVariables().getProperty(\"prop4\"), \"\");\n+        assertEquals(config2.getVariables().getProperty(\"prop5\"), \"runtime property\");\n+        assertEquals(config2.getVariables().getProperty(\"prop6\"), \"not present runtime property\");\n+        sqlSessionFactory.getConfiguration().setVariables(config2.getVariables());\n+        sqlSession.getConfiguration().addMapper(MyMapper.class);\n+        assertTrue(\"expected a warning\", warnings.length > 0);\n+    } catch (IOException e) {\n+        fail(e.getMessage());\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}