{
    "patch": "public double getTypedPercent(double js) {\n    // Find the percentage of \"typed\" words in a JavaScript code snippet\n    \n    // Count the number of words in the code snippet\n    int totalWords = 0;\n    // TODO: add code to count the number of words\n    \n    // Count the number of \"typed\" words in the code snippet\n    int typedWords = 0;\n    // TODO: add code to count the number of \"typed\" words\n    \n    // Calculate the percentage of \"typed\" words and return it\n    double percent = 0.0;\n    if (totalWords != 0) {\n        percent = ((double) typedWords / totalWords) * 100.0;\n    }\n    return percent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..2ac44bde 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,24 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(double js) {\n+    // Find the percentage of \"typed\" words in a JavaScript code snippet\n+    \n+    // Count the number of words in the code snippet\n+    int totalWords = 0;\n+    // TODO: add code to count the number of words\n+    \n+    // Count the number of \"typed\" words in the code snippet\n+    int typedWords = 0;\n+    // TODO: add code to count the number of \"typed\" words\n+    \n+    // Calculate the percentage of \"typed\" words and return it\n+    double percent = 0.0;\n+    if (totalWords != 0) {\n+        percent = ((double) typedWords / totalWords) * 100.0;\n+    }\n+    return percent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}