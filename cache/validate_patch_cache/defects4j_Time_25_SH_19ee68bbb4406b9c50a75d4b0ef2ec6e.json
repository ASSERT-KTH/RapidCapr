{
    "patch": "            // If we are in a GAP, we need to return the offsetLocal\n            // otherwise, we return the later offsetAdjusted\n            long nextLocal = nextTransition(instantAdjusted);\n            if (nextLocal == instantLocal - offsetLocal) {\n                return offsetLocal;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..bde0f493 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,12 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            // If we are in a GAP, we need to return the offsetLocal\n+            // otherwise, we return the later offsetAdjusted\n+            long nextLocal = nextTransition(instantAdjusted);\n+            if (nextLocal == instantLocal - offsetLocal) {\n+                return offsetLocal;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "java.lang.IllegalArgumentException: Illegal instant due to time zone offset transition: 2006-10-01T07:00:00.000",
    "test_result": "FAIL"
}