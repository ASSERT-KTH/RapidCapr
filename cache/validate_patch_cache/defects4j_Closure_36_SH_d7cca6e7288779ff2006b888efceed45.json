{
    "patch": "if (value.isFunction()) {\n  Node callNode = reference.getParent();\n  if (callNode.isCall()) {\n    CodingConvention convention = compiler.getCodingConvention();\n    // Don't inline subclass definitions into class defining calls as this confused class removing logic.\n    SubclassRelationship relationship = convention.getClassesDefinedByCall(callNode);\n    if (relationship != null) {\n      return false;\n    }\n\n    Node callee = callNode.getFirstChild();\n    if (callee.isGetProp()) {\n      String propName = callee.getLastChild().getString();\n      if (propName != null && propName.endsWith(\"_\") && callNode.hasOneChild()) {\n        Node arg = callNode.getFirstChild().getNext();\n        if (arg != null && NodeUtil.isImmutableValue(arg)) {\n          // Don't inline singleton getter method calls as this confused class removing logic.\n          return false;\n        }\n      }\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..2ed4305f 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,29 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+if (value.isFunction()) {\n+  Node callNode = reference.getParent();\n+  if (callNode.isCall()) {\n+    CodingConvention convention = compiler.getCodingConvention();\n+    // Don't inline subclass definitions into class defining calls as this confused class removing logic.\n+    SubclassRelationship relationship = convention.getClassesDefinedByCall(callNode);\n+    if (relationship != null) {\n+      return false;\n+    }\n+\n+    Node callee = callNode.getFirstChild();\n+    if (callee.isGetProp()) {\n+      String propName = callee.getLastChild().getString();\n+      if (propName != null && propName.endsWith(\"_\") && callNode.hasOneChild()) {\n+        Node arg = callNode.getFirstChild().getNext();\n+        if (arg != null && NodeUtil.isImmutableValue(arg)) {\n+          // Don't inline singleton getter method calls as this confused class removing logic.\n+          return false;\n+        }\n+      }\n+    }\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: variable callNode is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}