{
    "patch": "            // This check is added to prevent default year from being changed\n            // on parsing unambiguous week-based strings. This affects\n            // ISOChronology 2008-12-29 -> 2009-W01-1 -> 2008-12-29.\n            if (count == 0 && text != null && (text.startsWith(\"W\") || text.startsWith(\"w\"))) {\n                return computeMillis(resetFields, \"1970-01-01\" + text);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f38d7f5d 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            // This check is added to prevent default year from being changed\n+            // on parsing unambiguous week-based strings. This affects\n+            // ISOChronology 2008-12-29 -> 2009-W01-1 -> 2008-12-29.\n+            if (count == 0 && text != null && (text.startsWith(\"W\") || text.startsWith(\"w\"))) {\n+                return computeMillis(resetFields, \"1970-01-01\" + text);\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}