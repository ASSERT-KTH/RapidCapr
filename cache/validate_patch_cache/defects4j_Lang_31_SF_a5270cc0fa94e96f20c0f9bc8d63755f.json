{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    int len = str.length();\n    int searchLen = searchChars.length;\n    int strIndex = 0;\n    int searchIndex = 0;\n\n    while (strIndex < len && searchIndex < searchLen) {\n        int high = Character.codePointAt(searchChars, searchIndex);\n        searchIndex += Character.charCount(high);\n\n        if (Character.isBmpCodePoint(high)) {\n            while (strIndex < len) {\n                char ch = str.charAt(strIndex++);\n                if (ch == high) {\n                    return true;\n                }\n            }\n        } else {\n            if (Character.isValidCodePoint(high)) {\n                while (strIndex < len) {\n                    int codepoint = Character.codePointAt(str, strIndex);\n                    strIndex += Character.charCount(codepoint);\n                    if (codepoint == high) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..1d237162 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,37 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    int len = str.length();\n+    int searchLen = searchChars.length;\n+    int strIndex = 0;\n+    int searchIndex = 0;\n+\n+    while (strIndex < len && searchIndex < searchLen) {\n+        int high = Character.codePointAt(searchChars, searchIndex);\n+        searchIndex += Character.charCount(high);\n+\n+        if (Character.isBmpCodePoint(high)) {\n+            while (strIndex < len) {\n+                char ch = str.charAt(strIndex++);\n+                if (ch == high) {\n+                    return true;\n+                }\n+            }\n+        } else {\n+            if (Character.isValidCodePoint(high)) {\n+                while (strIndex < len) {\n+                    int codepoint = Character.codePointAt(str, strIndex);\n+                    strIndex += Character.charCount(codepoint);\n+                    if (codepoint == high) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}