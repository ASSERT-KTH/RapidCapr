{
    "patch": "    public RealMatrix getCorrelationPValues() throws MathException {\n        TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n        int nVars = correlationMatrix.getColumnDimension();\n        double[][] out = new double[nVars][nVars];\n        final double epsilon = 1e-16;  // Small epsilon value\n        for (int i = 0; i < nVars; i++) {\n            for (int j = 0; j < nVars; j++) {\n                if (i == j) {\n                    out[i][j] = 0d;\n                } else {\n                    double r = correlationMatrix.getEntry(i, j);\n                    double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n                    double p = 2 * (1 - tDistribution.cumulativeProbability(t));\n                    if (p <= epsilon) {\n                        out[i][j] = epsilon;\n                    } else if (p >= 1 - epsilon) {\n                        out[i][j] = 1 - epsilon;\n                    } else {\n                        out[i][j] = p;\n                    }\n                }\n            }\n        }\n        return new BlockRealMatrix(out);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..eca535e7d 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -161,6 +161,7 @@ public class PearsonsCorrelation {\n         TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n         int nVars = correlationMatrix.getColumnDimension();\n         double[][] out = new double[nVars][nVars];\n+        final double epsilon = 1e-16;  // Small epsilon value\n         for (int i = 0; i < nVars; i++) {\n             for (int j = 0; j < nVars; j++) {\n                 if (i == j) {\n@@ -168,7 +169,14 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+                    double p = 2 * (1 - tDistribution.cumulativeProbability(t));\n+                    if (p <= epsilon) {\n+                        out[i][j] = epsilon;\n+                    } else if (p >= 1 - epsilon) {\n+                        out[i][j] = 1 - epsilon;\n+                    } else {\n+                        out[i][j] = p;\n+                    }\n                 }\n             }\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}