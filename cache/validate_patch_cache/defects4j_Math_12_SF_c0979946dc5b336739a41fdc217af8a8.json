{
    "patch": "import java.util.Random;\n\npublic class Distribution {\n    private final double[] frequencies;\n    private final Random random = new Random();\n\n    public Distribution(double[] frequencies) {\n        this.frequencies = frequencies.clone();\n        normalize();\n    }\n\n    public double[] getFrequencies() {\n        return frequencies.clone();\n    }\n\n    public int next() {\n        double r = random.nextDouble();\n        double sum = 0;\n        for (int i = 0; i < frequencies.length; i++) {\n            sum += frequencies[i];\n            if (sum > r) {\n                return i;\n            }\n        }\n        return frequencies.length - 1;\n    }\n\n    private void normalize() {\n        double sum = 0;\n        for (double f : frequencies) {\n            sum += f;\n        }\n        if (sum == 0) {\n            throw new IllegalArgumentException(\"At least one frequency must be non-zero\");\n        }\n        for (int i = 0; i < frequencies.length; i++) {\n            frequencies[i] /= sum;\n        }\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}