{
    "patch": "public Fraction reduce() {\n    int gcd = greatestCommonDivisor(numerator, denominator);\n    int reducedNumerator = numerator / gcd;\n    int reducedDenominator = denominator / gcd;\n\n    while (greatestCommonDivisor(reducedNumerator, reducedDenominator) > 1) {\n        gcd = greatestCommonDivisor(reducedNumerator, reducedDenominator);\n        reducedNumerator = reducedNumerator / gcd;\n        reducedDenominator = reducedDenominator / gcd;\n    }\n\n    if (reducedDenominator < 0) {\n        reducedDenominator = -reducedDenominator;\n        reducedNumerator = -reducedNumerator;\n    }\n\n    return new Fraction(reducedNumerator, reducedDenominator);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..896dc7c9 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,24 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+public Fraction reduce() {\n+    int gcd = greatestCommonDivisor(numerator, denominator);\n+    int reducedNumerator = numerator / gcd;\n+    int reducedDenominator = denominator / gcd;\n+\n+    while (greatestCommonDivisor(reducedNumerator, reducedDenominator) > 1) {\n+        gcd = greatestCommonDivisor(reducedNumerator, reducedDenominator);\n+        reducedNumerator = reducedNumerator / gcd;\n+        reducedDenominator = reducedDenominator / gcd;\n+    }\n+\n+    if (reducedDenominator < 0) {\n+        reducedDenominator = -reducedDenominator;\n+        reducedNumerator = -reducedNumerator;\n+    }\n+\n+    return new Fraction(reducedNumerator, reducedDenominator);\n+}\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}