{
    "patch": "```\npublic static String encode(String message) {\n    StringBuilder sb = new StringBuilder();\n    for (char c : message.toCharArray()) {\n        if (Character.isUpperCase(c)) {\n            c = Character.toLowerCase(c);\n        }\n        if (Character.isLowerCase(c)) {\n            c = Character.toUpperCase(c);\n        }\n        boolean isVowel = \"AEIOUaeiou\".indexOf(c) != -1;\n        if (isVowel) {\n            c = (char) (c + 2);\n            if (c > 'z') {\n                c -= 26;\n            }\n        }\n        sb.append(c);\n    }\n    return sb.toString();\n}\n```\nThis function fixes the bug by\n1. Converting an upper case character to lower case before checking if a character is lower case.\n2. Checking for lower case before converting an upper case.\n3. Using the `indexOf` method of a `String` to check if a character is vowel instead of using an OR operator to check every possible value for a vowel.\n4. Adding 2 to a character when it is a vowel while also ensuring that it does not exceed the ASCII value of \"z\" character by subtracting 26 if it does.",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ENCODE.java b/src/main/java/humaneval/buggy/ENCODE.java\nindex 6fe264c..ac61fd3 100644\n--- a/src/main/java/humaneval/buggy/ENCODE.java\n+++ b/src/main/java/humaneval/buggy/ENCODE.java\n@@ -13,21 +13,31 @@ package humaneval.buggy;\n // 'tHKS KS C MGSSCGG'\n \n public class ENCODE {\n-    public static String encode(String message) {\n-        StringBuilder sb = new StringBuilder();\n-        for (char c : message.toCharArray()) {\n-            if (Character.isUpperCase(c)) {\n-                c = Character.toLowerCase(c);\n-            }\n-            if (Character.isLowerCase(c)) {\n-                c = Character.toUpperCase(c);\n-            }\n-            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O'\n-                    || c == 'U') {\n-                c = (char) ((int) c + 2);\n+```\n+public static String encode(String message) {\n+    StringBuilder sb = new StringBuilder();\n+    for (char c : message.toCharArray()) {\n+        if (Character.isUpperCase(c)) {\n+            c = Character.toLowerCase(c);\n+        }\n+        if (Character.isLowerCase(c)) {\n+            c = Character.toUpperCase(c);\n+        }\n+        boolean isVowel = \"AEIOUaeiou\".indexOf(c) != -1;\n+        if (isVowel) {\n+            c = (char) (c + 2);\n+            if (c > 'z') {\n+                c -= 26;\n             }\n-            sb.append(c);\n         }\n-        return sb.toString();\n+        sb.append(c);\n     }\n+    return sb.toString();\n+}\n+```\n+This function fixes the bug by\n+1. Converting an upper case character to lower case before checking if a character is lower case.\n+2. Checking for lower case before converting an upper case.\n+3. Using the `indexOf` method of a `String` to check if a character is vowel instead of using an OR operator to check every possible value for a vowel.\n+4. Adding 2 to a character when it is a vowel while also ensuring that it does not exceed the ASCII value of \"z\" character by subtracting 26 if it does.\n }",
    "result_reason": " /tmp/humaneval-ENCODE/src/main/java/humaneval/buggy/ENCODE.java:[16,1] illegal character: '`'",
    "test_result": "ERROR"
}