{
    "patch": "public static double getTypedPercent(String json){\n    JsonObject obj = JsonParser.parseString(json).getAsJsonObject();\n    double validCount = obj.get(\"validCount\").getAsInt();\n    double totalCount = obj.get(\"totalCount\").getAsInt();\n    \n    if (totalCount == 0) {\n        return 100.0;\n    }\n    \n    double typedPercent = validCount / totalCount * 100.0;\n    return typedPercent;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..96c20b2d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json){\n+    JsonObject obj = JsonParser.parseString(json).getAsJsonObject();\n+    double validCount = obj.get(\"validCount\").getAsInt();\n+    double totalCount = obj.get(\"totalCount\").getAsInt();\n+    \n+    if (totalCount == 0) {\n+        return 100.0;\n+    }\n+    \n+    double typedPercent = validCount / totalCount * 100.0;\n+    return typedPercent;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}