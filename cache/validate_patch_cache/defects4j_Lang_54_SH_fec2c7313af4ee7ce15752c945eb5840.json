{
    "patch": "        if (len == 6 && str.charAt(5) == '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 7) {\n            if (!(Character.isDigit(str.charAt(5)) && Character.isDigit(str.charAt(6)))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        }\n        if ((len == 7 && (str.charAt(5) != '_' || !Character.isUpperCase(str.charAt(6))))\n                || (len > 7 && str.charAt(5) != '_')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5 && str.charAt(4) == '_') {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else if (len >= 7 && str.charAt(4) == '_' && Character.isUpperCase(str.charAt(5))) {\n            // length 7 (\"fr_QC\"), length 8 (\"en_US_WIN\"), or length 9 (\"de_CH_PREEURO\")\n            if (len == 7) {\n                return new Locale(str.substring(0, 2), \"\", str.substring(3, 5));\n            } else if (len == 8) {\n                return new Locale(str.substring(0, 2), str.substring(6, 8), str.substring(3, 5));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(6, 8) + \"_\" + str.substring(9), str.substring(3, 5));\n            }\n        } else if (len == 3 || len == 4) {\n            return new Locale(str.substring(0, 2), str.substring(3, len));\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..abb5a8b6 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,33 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        if (len == 6 && str.charAt(5) == '_') {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 7) {\n+            if (!(Character.isDigit(str.charAt(5)) && Character.isDigit(str.charAt(6)))) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+        }\n+        if ((len == 7 && (str.charAt(5) != '_' || !Character.isUpperCase(str.charAt(6))))\n+                || (len > 7 && str.charAt(5) != '_')) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+        if (len == 5 && str.charAt(4) == '_') {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        } else if (len >= 7 && str.charAt(4) == '_' && Character.isUpperCase(str.charAt(5))) {\n+            // length 7 (\"fr_QC\"), length 8 (\"en_US_WIN\"), or length 9 (\"de_CH_PREEURO\")\n+            if (len == 7) {\n+                return new Locale(str.substring(0, 2), \"\", str.substring(3, 5));\n+            } else if (len == 8) {\n+                return new Locale(str.substring(0, 2), str.substring(6, 8), str.substring(3, 5));\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(6, 8) + \"_\" + str.substring(9), str.substring(3, 5));\n+            }\n+        } else if (len == 3 || len == 4) {\n+            return new Locale(str.substring(0, 2), str.substring(3, len));\n+        }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}