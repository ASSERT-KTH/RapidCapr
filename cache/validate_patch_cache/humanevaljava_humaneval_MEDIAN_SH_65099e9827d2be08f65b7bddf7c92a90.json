{
    "patch": " int mid = list.length / 2;\n\n if (list.length % 2 == 1) {\n     return list[mid];\n } else if (mid == 0) {\n     throw new IllegalArgumentException(\"Empty array\");\n } else {\n     double median = ((double) list[mid - 1] + (double) list[mid]) / 2;\n     if (Double.isNaN(median) || Double.isInfinite(median)) {\n         throw new IllegalArgumentException(\"Array contains invalid value\");\n     }\n     return median;\n }\n ```\nThis hunk checks for an empty array and if it is found, throws an appropriate exception. Moreover, this fix hunk is checking if the array contains invalid values and throws an error in that case as well",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MEDIAN.java b/src/main/java/humaneval/buggy/MEDIAN.java\nindex 6ba9604..24bd7ee 100644\n--- a/src/main/java/humaneval/buggy/MEDIAN.java\n+++ b/src/main/java/humaneval/buggy/MEDIAN.java\n@@ -15,7 +15,21 @@ public class MEDIAN {\n         if (list.length % 2 == 1) {\n             return list[(int) (list.length / 2)];\n         } else {\n-            return list[(int) (list.length / 2)] + list[(int) (list.length / 2) + 1] / 2;\n+ int mid = list.length / 2;\n+\n+ if (list.length % 2 == 1) {\n+     return list[mid];\n+ } else if (mid == 0) {\n+     throw new IllegalArgumentException(\"Empty array\");\n+ } else {\n+     double median = ((double) list[mid - 1] + (double) list[mid]) / 2;\n+     if (Double.isNaN(median) || Double.isInfinite(median)) {\n+         throw new IllegalArgumentException(\"Array contains invalid value\");\n+     }\n+     return median;\n+ }\n+ ```\n+This hunk checks for an empty array and if it is found, throws an appropriate exception. Moreover, this fix hunk is checking if the array contains invalid values and throws an error in that case as well\n         }\n     }\n }",
    "result_reason": " /tmp/humaneval-MEDIAN/src/main/java/humaneval/buggy/MEDIAN.java:[31,2] illegal character: '`'",
    "test_result": "ERROR"
}