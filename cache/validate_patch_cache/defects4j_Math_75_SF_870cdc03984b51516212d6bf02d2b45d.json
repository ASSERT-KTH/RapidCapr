{
    "patch": "public class MyClass<T extends Comparable<T>> {\n    // class implementation\n    @SuppressWarnings(\"unchecked\")\n    public double getPct(Object v) {\n        return getCumPct((T) v);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..8c9a40ee8 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,13 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n+public class MyClass<T extends Comparable<T>> {\n+    // class implementation\n+    @SuppressWarnings(\"unchecked\")\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+        return getCumPct((T) v);\n     }\n+}\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: no suitable method found for getPct(Object)",
    "test_result": "ERROR"
}