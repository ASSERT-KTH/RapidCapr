{
    "patch": "char c = str.charAt(i);\nif ((c == '\\\\') && (i + 5 < str.length())) {\n    char c1 = str.charAt(i + 1);\n    char c2 = str.charAt(i + 2);\n    char c3 = str.charAt(i + 3);\n    char c4 = str.charAt(i + 4);\n    char c5 = str.charAt(i + 5);\n    if ((c1 == 'u') && (isHexDigit(c2)) && (isHexDigit(c3)) && (isHexDigit(c4)) &&\n            (isHexDigit(c5))) {\n        value = (char) (toHexDigit(c2) << 12 | toHexDigit(c3) << 8 | toHexDigit(c4) << 4\n                | toHexDigit(c5));\n        i += 5;\n    } else {\n        throw new IllegalArgumentException(\"Malformed \\\\uxxxx encoding.\");\n    }\n} else {\n    value = c;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}