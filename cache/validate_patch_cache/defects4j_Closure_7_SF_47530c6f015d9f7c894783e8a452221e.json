{
    "patch": "    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n          // Objects are restricted to \"Function\", subtypes are left\n          // Only filter out subtypes of \"function\"\n      } else {\n        for (String propName : type.getOwnPropertyNames()) {\n          if (propName.startsWith(\"goog\")) {\n            return null;\n          }\n        }\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..2cfbf707 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -613,6 +613,12 @@ public abstract class ChainableReverseAbstractInterpreter\n         return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n           // Objects are restricted to \"Function\", subtypes are left\n           // Only filter out subtypes of \"function\"\n+      } else {\n+        for (String propName : type.getOwnPropertyNames()) {\n+          if (propName.startsWith(\"goog\")) {\n+            return null;\n+          }\n+        }\n       }\n       return matchesExpectation(\"object\") ? type : null;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Expected: (Object|boolean|number|string)",
    "test_result": "FAIL"
}