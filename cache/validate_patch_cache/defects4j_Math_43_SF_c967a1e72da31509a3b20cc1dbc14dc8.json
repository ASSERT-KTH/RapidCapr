{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n    n++;\n\n    // If mean, variance or geomean have been overridden,\n    // need to increment these\n    if (meanImpl instanceof Mean) {\n        meanImpl.increment(value);\n\n        if (varianceImpl instanceof Variance) {\n            varianceImpl.increment(value);\n        } else {\n            ((AbstractStorelessUnivariateStatistic) varianceImpl).increment(value);\n        }\n    } else {\n        ((AbstractStorelessUnivariateStatistic) meanImpl).increment(value);\n        meanImpl = ((AbstractStorelessUnivariateStatistic) meanImpl).copy();\n\n        double oldVar = varianceImpl.getResult();\n        double oldMean = meanImpl.getResult();\n        double newMean = oldMean + (value - oldMean) / n;\n        double delta = value - oldMean;\n        double newVar = (oldVar*n + delta*delta) / (n-1);\n\n        varianceImpl = new Variance();\n        varianceImpl.increment(newVar);\n\n        if (geoMeanImpl instanceof GeometricMean) {\n            geoMeanImpl.increment(value);\n        } else {\n            ((AbstractStorelessUnivariateStatistic) geoMeanImpl).increment(value);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..b7c685554 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,45 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+    n++;\n+\n+    // If mean, variance or geomean have been overridden,\n+    // need to increment these\n+    if (meanImpl instanceof Mean) {\n+        meanImpl.increment(value);\n+\n+        if (varianceImpl instanceof Variance) {\n             varianceImpl.increment(value);\n+        } else {\n+            ((AbstractStorelessUnivariateStatistic) varianceImpl).increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n+    } else {\n+        ((AbstractStorelessUnivariateStatistic) meanImpl).increment(value);\n+        meanImpl = ((AbstractStorelessUnivariateStatistic) meanImpl).copy();\n+\n+        double oldVar = varianceImpl.getResult();\n+        double oldMean = meanImpl.getResult();\n+        double newMean = oldMean + (value - oldMean) / n;\n+        double delta = value - oldMean;\n+        double newVar = (oldVar*n + delta*delta) / (n-1);\n+\n+        varianceImpl = new Variance();\n+        varianceImpl.increment(newVar);\n+\n+        if (geoMeanImpl instanceof GeometricMean) {\n             geoMeanImpl.increment(value);\n+        } else {\n+            ((AbstractStorelessUnivariateStatistic) geoMeanImpl).increment(value);\n         }\n-        n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2.213363839400643> but was:<NaN>",
    "test_result": "FAIL"
}