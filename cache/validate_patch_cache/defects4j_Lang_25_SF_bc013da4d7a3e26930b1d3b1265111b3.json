{
    "patch": "public static String unescape(String str)\n{\n    StringBuffer ret = new StringBuffer();\n    int i = 0;\n    while (i < str.length())\n    {\n        char ch = str.charAt(i);\n        if (ch == '%')\n        {\n            if (i + 2 >= str.length())\n            {\n                ret.append(ch);\n            }\n            else\n            {\n                int code = Integer.parseInt(str.substring(i+1,i+3),16);\n                ret.append((char)code);\n                i += 2;\n            }\n        }\n        else\n        {\n            ret.append(ch);\n        }\n        i++;\n    }\n    return ret.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..9dd651bd 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,34 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String str)\n+{\n+    StringBuffer ret = new StringBuffer();\n+    int i = 0;\n+    while (i < str.length())\n+    {\n+        char ch = str.charAt(i);\n+        if (ch == '%')\n+        {\n+            if (i + 2 >= str.length())\n+            {\n+                ret.append(ch);\n+            }\n+            else\n+            {\n+                int code = Integer.parseInt(str.substring(i+1,i+3),16);\n+                ret.append((char)code);\n+                i += 2;\n+            }\n+        }\n+        else\n+        {\n+            ret.append(ch);\n+        }\n+        i++;\n+    }\n+    return ret.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}