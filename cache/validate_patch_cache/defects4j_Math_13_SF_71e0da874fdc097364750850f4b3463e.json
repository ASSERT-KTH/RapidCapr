{
    "patch": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.SingularValueDecomposition;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    SingularValueDecomposition dec = new SingularValueDecomposition(m);\n    RealMatrix u = dec.getU();\n    RealMatrix s = dec.getS();\n    RealMatrix v = dec.getV();\n    RealMatrix sqrtS = s.scalarMatrix(0.5);\n    return u.multiply(sqrtS).multiply(v.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..739e2fbb6 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,15 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+import org.apache.commons.math3.linear.RealMatrix;\n+import org.apache.commons.math3.linear.SingularValueDecomposition;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    SingularValueDecomposition dec = new SingularValueDecomposition(m);\n+    RealMatrix u = dec.getU();\n+    RealMatrix s = dec.getS();\n+    RealMatrix v = dec.getV();\n+    RealMatrix sqrtS = s.scalarMatrix(0.5);\n+    return u.multiply(sqrtS).multiply(v.transpose());\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}