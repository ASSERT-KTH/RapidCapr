{
    "patch": "    String result = stream.getRemainingJSDocLine().trim();\n    try {\n        jsdocParser.parse(result);\n    } catch (JSError e) {\n        if (e.getType().equals(JSTypeError.TYPE_PARSE_ERROR)) {\n            // handle the error\n            System.out.println(\"Bad type annotation: \" + result);\n            // set a default value or return null\n            return null;\n        }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..0e7ba476 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,17 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+    String result = stream.getRemainingJSDocLine().trim();\n+    try {\n+        jsdocParser.parse(result);\n+    } catch (JSError e) {\n+        if (e.getType().equals(JSTypeError.TYPE_PARSE_ERROR)) {\n+            // handle the error\n+            System.out.println(\"Bad type annotation: \" + result);\n+            // set a default value or return null\n+            return null;\n+        }\n+    }\n     return result;\n   }\n ",
    "result_reason": "error: variable result is already defined in method getRemainingJSDocLine()",
    "test_result": "ERROR"
}