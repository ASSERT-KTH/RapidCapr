{
    "patch": "public String fixCode(String code) {\n    String[] lines = code.split(\"\\n\");\n    int lineNum = -1;\n    for (int i = 0; i < lines.length; i++) {\n        if (lines[i].contains(\"for (\")) {\n            lineNum = i;\n            break;\n        }\n    }\n    if (lineNum == -1) {\n        return code;\n    }\n    String line = lines[lineNum];\n    int inIndex = line.indexOf(\" in \");\n    if (inIndex == -1) {\n        return code;\n    }\n    int semicolonIndex = line.indexOf(\";\");\n    if (semicolonIndex < inIndex) {\n        return code;\n    }\n    String prefix = line.substring(0, inIndex);\n    String middle = line.substring(inIndex + 4, semicolonIndex);\n    String suffix = line.substring(semicolonIndex + 1);\n    String fixedLine = prefix + \"[\" + middle + \"]\" + suffix;\n    lines[lineNum] = fixedLine;\n    return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..52301c8c 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,34 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+    String[] lines = code.split(\"\\n\");\n+    int lineNum = -1;\n+    for (int i = 0; i < lines.length; i++) {\n+        if (lines[i].contains(\"for (\")) {\n+            lineNum = i;\n+            break;\n+        }\n+    }\n+    if (lineNum == -1) {\n+        return code;\n+    }\n+    String line = lines[lineNum];\n+    int inIndex = line.indexOf(\" in \");\n+    if (inIndex == -1) {\n+        return code;\n+    }\n+    int semicolonIndex = line.indexOf(\";\");\n+    if (semicolonIndex < inIndex) {\n+        return code;\n+    }\n+    String prefix = line.substring(0, inIndex);\n+    String middle = line.substring(inIndex + 4, semicolonIndex);\n+    String suffix = line.substring(semicolonIndex + 1);\n+    String fixedLine = prefix + \"[\" + middle + \"]\" + suffix;\n+    lines[lineNum] = fixedLine;\n+    return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}