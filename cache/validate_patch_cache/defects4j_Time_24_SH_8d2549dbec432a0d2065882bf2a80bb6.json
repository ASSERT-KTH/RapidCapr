{
    "patch": "        } catch (IllegalFieldValueException e) {\n            DurationField fieldType = e.getDurationFieldType();\n            if (fieldType == null || !fieldType.equals(DurationFieldType.weekyears())) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            }\n            long firstDOWMillis = computeMillis(resetFields, text);\n            long durationFieldMillis = fieldType.getRangeDurationField().getField(iChrono).set(0, 1);\n            long weekyearMillis = iChrono.weekyear().roundFloor(firstDOWMillis);\n            LocalDate ld = new LocalDate(weekyearMillis, iChrono);\n            int year = ld.getYear();\n            if (year <= 0) {\n                year = 1 - year;\n            }\n            throw new IllegalFieldValueException(\n                    fieldType, Integer.valueOf(year),\n                    null, null, null);\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..5648d093 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,26 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            DurationField fieldType = e.getDurationFieldType();\n+            if (fieldType == null || !fieldType.equals(DurationFieldType.weekyears())) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            }\n+            long firstDOWMillis = computeMillis(resetFields, text);\n+            long durationFieldMillis = fieldType.getRangeDurationField().getField(iChrono).set(0, 1);\n+            long weekyearMillis = iChrono.weekyear().roundFloor(firstDOWMillis);\n+            LocalDate ld = new LocalDate(weekyearMillis, iChrono);\n+            int year = ld.getYear();\n+            if (year <= 0) {\n+                year = 1 - year;\n+            }\n+            throw new IllegalFieldValueException(\n+                    fieldType, Integer.valueOf(year),\n+                    null, null, null);\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}