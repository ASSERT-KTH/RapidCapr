{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException(\"Invalid argument for Gamma function\");\n    }\n\n    final double epsilon = 1e-15;\n    double term = 1 / a;\n    double sum = term;\n    int i = 0;\n    while (i < 1000 && Math.abs(term) > Math.abs(sum) * epsilon && sum < 1) {\n        ++i;\n        term *= x / (a + i);\n        sum += term;\n    }\n    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n}\n\npublic static double logGamma(double x) {\n    double[] c = { 1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091,\n            -1.231739572450155, 0.001208650973866179, -0.000005395239384953 };\n    double a = (x + 0.5) * Math.log((x + 5.5) / (x + 0.5)) - (x + 5.5);\n    double b = c[0];\n    for (int i = 1; i < c.length; i++) {\n        b += c[i] / (x + i);\n    }\n    return -(a + Math.log(2.5066282746310005 * b / x));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..a653ba362 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,33 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException(\"Invalid argument for Gamma function\");\n+    }\n+\n+    final double epsilon = 1e-15;\n+    double term = 1 / a;\n+    double sum = term;\n+    int i = 0;\n+    while (i < 1000 && Math.abs(term) > Math.abs(sum) * epsilon && sum < 1) {\n+        ++i;\n+        term *= x / (a + i);\n+        sum += term;\n+    }\n+    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+}\n+\n+public static double logGamma(double x) {\n+    double[] c = { 1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091,\n+            -1.231739572450155, 0.001208650973866179, -0.000005395239384953 };\n+    double a = (x + 0.5) * Math.log((x + 5.5) / (x + 0.5)) - (x + 5.5);\n+    double b = c[0];\n+    for (int i = 1; i < c.length; i++) {\n+        b += c[i] / (x + i);\n+    }\n+    return -(a + Math.log(2.5066282746310005 * b / x));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}