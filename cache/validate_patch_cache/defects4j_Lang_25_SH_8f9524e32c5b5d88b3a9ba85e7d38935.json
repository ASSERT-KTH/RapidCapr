{
    "patch": "...\nif (c == '\\n')   s.append(\"\\\\n\");\nelse if (c == '\\r')  s.append(\"\\\\r\");\nelse if (c == '\\t')  s.append(\"\\\\t\");\nelse if (c == '\\\"')  s.append(\"\\\\\\\"\");\nelse if (c == '\\\\')  s.append(\"\\\\\\\\\");\nelse if (c >= 32 && c < 127) s.append(c);\nelse {\n    String octal = Integer.toOctalString(c);\n    switch (octal.length()) {\n        case 1:\n            s.append(\"\\\\00\");\n            s.append(octal);\n            break;\n        case 2:\n            s.append(\"\\\\0\");\n            s.append(octal);\n            break;\n        case 3:\n            s.append(\"\\\\\");\n            s.append(octal);\n            break;\n    }\n}\n...",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}