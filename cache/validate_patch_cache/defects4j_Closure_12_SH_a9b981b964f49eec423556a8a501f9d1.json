{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode.getType() == Token.TRY) {\n        return true;\n    } else {\n        Node parent = cfgNode.getParent();\n        if (parent != null && parent.getType() == Token.TRY) {\n            Node catchNode = parent.getFirstChild().getNext();\n            return catchNode.hasChildren();\n        } else {\n            return false;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..414ba8e1 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,19 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode.getType() == Token.TRY) {\n+        return true;\n+    } else {\n+        Node parent = cfgNode.getParent();\n+        if (parent != null && parent.getType() == Token.TRY) {\n+            Node catchNode = parent.getFirstChild().getNext();\n+            return catchNode.hasChildren();\n+        } else {\n+            return false;\n+        }\n+    }\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}