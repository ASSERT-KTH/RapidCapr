{
    "patch": "public static double getTypedPercent(String js) {\n    char[] chars = js.toCharArray();\n    int typedChars = 0;\n    boolean inSingleLineComment = false;\n    boolean inMultiLineComment = false;\n    boolean inString = false;\n    boolean inRegex = false;\n    for (int i = 0; i < chars.length; i++) {\n        if (chars[i] == '\\n') {\n            inSingleLineComment = false;\n        }\n        if (inSingleLineComment || inMultiLineComment || inString || inRegex) {\n            // skip over the character\n            continue;\n        }\n        if (chars[i] == '/') {\n            if (i + 1 < chars.length && chars[i + 1] == '/') {\n                inSingleLineComment = true;\n                continue;\n            }\n            if (i + 1 < chars.length && chars[i + 1] == '*') {\n                inMultiLineComment = true;\n                continue;\n            }\n        }\n        if (chars[i] == '*' && i + 1 < chars.length && chars[i + 1] == '/') {\n            inMultiLineComment = false;\n            i++;\n            continue;\n        }\n        if (chars[i] == '\"' && (i == 0 || chars[i - 1] != '\\\\')) {\n            inString = !inString;\n            continue;\n        }\n        if (chars[i] == '\\'' && (i == 0 || chars[i - 1] != '\\\\')) {\n            inRegex = !inRegex;\n            continue;\n        }\n        typedChars++;\n    }\n    if (chars.length == 0) {\n        return 0.0;\n    }\n    return typedChars / (double) chars.length * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a8cf40a9 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,51 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String js) {\n+    char[] chars = js.toCharArray();\n+    int typedChars = 0;\n+    boolean inSingleLineComment = false;\n+    boolean inMultiLineComment = false;\n+    boolean inString = false;\n+    boolean inRegex = false;\n+    for (int i = 0; i < chars.length; i++) {\n+        if (chars[i] == '\\n') {\n+            inSingleLineComment = false;\n+        }\n+        if (inSingleLineComment || inMultiLineComment || inString || inRegex) {\n+            // skip over the character\n+            continue;\n+        }\n+        if (chars[i] == '/') {\n+            if (i + 1 < chars.length && chars[i + 1] == '/') {\n+                inSingleLineComment = true;\n+                continue;\n+            }\n+            if (i + 1 < chars.length && chars[i + 1] == '*') {\n+                inMultiLineComment = true;\n+                continue;\n+            }\n+        }\n+        if (chars[i] == '*' && i + 1 < chars.length && chars[i + 1] == '/') {\n+            inMultiLineComment = false;\n+            i++;\n+            continue;\n+        }\n+        if (chars[i] == '\"' && (i == 0 || chars[i - 1] != '\\\\')) {\n+            inString = !inString;\n+            continue;\n+        }\n+        if (chars[i] == '\\'' && (i == 0 || chars[i - 1] != '\\\\')) {\n+            inRegex = !inRegex;\n+            continue;\n+        }\n+        typedChars++;\n+    }\n+    if (chars.length == 0) {\n+        return 0.0;\n+    }\n+    return typedChars / (double) chars.length * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}