{
    "patch": "            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n                    throw new IllegalFieldValueException(DateTimeFieldType.year(), \"Value \"+ e.getIllegalValue() +\" for year exceeds minimum/maximum value: \" + (e.getIllegalValue() < 0 ? \" - \" : \"\") + Math.abs(e.getIllegalValue()) + \" is not in the range \" + Integer.MIN_VALUE + \" to \" + Integer.MAX_VALUE) ;\n                }\n                throw e;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..d38da6f0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                if (e.getDateTimeFieldType() == DateTimeFieldType.year()) {\n+                    throw new IllegalFieldValueException(DateTimeFieldType.year(), \"Value \"+ e.getIllegalValue() +\" for year exceeds minimum/maximum value: \" + (e.getIllegalValue() < 0 ? \" - \" : \"\") + Math.abs(e.getIllegalValue()) + \" is not in the range \" + Integer.MIN_VALUE + \" to \" + Integer.MAX_VALUE) ;\n+                }\n+                throw e;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}