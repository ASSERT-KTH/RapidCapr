{
    "patch": "public static double regGamma(double x, double a, double la) {\n    double lng = lgamma(a + x);\n    double p2 = LancerExp(p1, x, a, la);\n    return p2 / Math.exp(lng);\n}\n\nprivate static double LancerExp(double p, double x, double a, double la)\n{\n    double tol = 1e-15;\n    double s1 = 0.0;\n    double s2 = 1.0;\n    double s3 = s2 / p;\n    double s4 = 1.0 / p;\n    int n = 1;\n    double bn = x + n - 1.0 + a;\n    double term = s3;\n    while (Math.abs(term) > tol * Math.abs(s3)) {\n        s1 += term;\n        n++;\n        s2 *= bn / n;\n        s3 = s2 / (p + n - 1.0);\n        s4 += s3;\n        bn += 1.0;\n        term = s3 * s4;\n    }\n    return s1 + term;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..0ae17e0b4 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,33 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regGamma(double x, double a, double la) {\n+    double lng = lgamma(a + x);\n+    double p2 = LancerExp(p1, x, a, la);\n+    return p2 / Math.exp(lng);\n+}\n+\n+private static double LancerExp(double p, double x, double a, double la)\n+{\n+    double tol = 1e-15;\n+    double s1 = 0.0;\n+    double s2 = 1.0;\n+    double s3 = s2 / p;\n+    double s4 = 1.0 / p;\n+    int n = 1;\n+    double bn = x + n - 1.0 + a;\n+    double term = s3;\n+    while (Math.abs(term) > tol * Math.abs(s3)) {\n+        s1 += term;\n+        n++;\n+        s2 *= bn / n;\n+        s3 = s2 / (p + n - 1.0);\n+        s4 += s3;\n+        bn += 1.0;\n+        term = s3 * s4;\n+    }\n+    return s1 + term;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}