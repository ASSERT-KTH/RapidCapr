{
    "patch": "/**\n * See bug 32342\n */\n@Test\npublic void testISO8859_1_ESCAPE() {\n    String input =\"hello\\u0020world\\\\u00A9\".replace(\"\\\\\", \"\\\\\\\\\");\n    String goldenOutput = \"hello world\\\\u00A9\";\n    EscapeQuerySyntax escapeQuerySyntax = new EscapeQuerySyntax();\n    String output = null;\n    try {\n        output = escapeQuerySyntax.escape(input);\n    } catch (IllegalArgumentException e) {\n        fail(\"IllegalArgumentException is not supposed to be thrown\");\n    }\n    boolean success = goldenOutput.equals(output);\n    assertTrue(\"One or more errors detected\", success);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}