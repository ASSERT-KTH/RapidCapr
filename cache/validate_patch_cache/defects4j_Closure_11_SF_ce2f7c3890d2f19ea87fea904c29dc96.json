{
    "patch": "public void testGetprop4() throws Exception {\n    String[] warnings = new String[1];\n    ConfigurationParser cp = new ConfigurationParser(warnings);\n    Configuration config = cp.parseConfiguration(this.getClass().getResourceAsStream(\"Getprop4Test.xml\"));\n\n    assertEquals(config.getContexts().size(), 1);\n    assertEquals(config.getContexts().get(0).getProperties().size(), 1);\n    assertEquals(config.getContexts().get(0).getProperties().getProperty(\"prop1\"), \"value1\");\n    assertEquals(config.getContexts().get(0).getProperty(\"prop1\"), \"value1\");\n\n    assertTrue(\"expected a warning\", warnings.length > 0);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..de042641 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public void testGetprop4() throws Exception {\n+    String[] warnings = new String[1];\n+    ConfigurationParser cp = new ConfigurationParser(warnings);\n+    Configuration config = cp.parseConfiguration(this.getClass().getResourceAsStream(\"Getprop4Test.xml\"));\n+\n+    assertEquals(config.getContexts().size(), 1);\n+    assertEquals(config.getContexts().get(0).getProperties().size(), 1);\n+    assertEquals(config.getContexts().get(0).getProperties().getProperty(\"prop1\"), \"value1\");\n+    assertEquals(config.getContexts().get(0).getProperty(\"prop1\"), \"value1\");\n+\n+    assertTrue(\"expected a warning\", warnings.length > 0);\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}