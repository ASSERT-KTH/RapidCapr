{
    "patch": "        this.duration = duration;\n        this.years = (int) TimeUnit.MILLISECONDS.toDays(duration) / DAYS_IN_YEAR;\n        this.months = ((int) TimeUnit.MILLISECONDS.toDays(duration) % DAYS_IN_YEAR) / 31;\n        this.weeks = ((int) TimeUnit.MILLISECONDS.toDays(duration) % DAYS_IN_YEAR) % 31 / DAYS_IN_WEEK;\n        this.days = ((int) TimeUnit.MILLISECONDS.toDays(duration) % DAYS_IN_YEAR) % 31 % DAYS_IN_WEEK;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..3fe5173f 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,11 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        this.duration = duration;\n+        this.years = (int) TimeUnit.MILLISECONDS.toDays(duration) / DAYS_IN_YEAR;\n+        this.months = ((int) TimeUnit.MILLISECONDS.toDays(duration) % DAYS_IN_YEAR) / 31;\n+        this.weeks = ((int) TimeUnit.MILLISECONDS.toDays(duration) % DAYS_IN_YEAR) % 31 / DAYS_IN_WEEK;\n+        this.days = ((int) TimeUnit.MILLISECONDS.toDays(duration) % DAYS_IN_YEAR) % 31 % DAYS_IN_WEEK;\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}