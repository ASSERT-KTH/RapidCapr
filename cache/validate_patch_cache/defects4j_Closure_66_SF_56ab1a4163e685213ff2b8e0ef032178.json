{
    "patch": "public static double getTypedPercent(JsonArray jsonArray) {\n    double total = jsonArray.size();\n    double typed = 0.0;\n    for(JsonElement element : jsonArray) {\n        if(element.isJsonObject() && element.getAsJsonObject().has(\"type\")) {\n            typed++;\n        }\n    }\n    return (typed / total) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..50724558 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,16 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(JsonArray jsonArray) {\n+    double total = jsonArray.size();\n+    double typed = 0.0;\n+    for(JsonElement element : jsonArray) {\n+        if(element.isJsonObject() && element.getAsJsonObject().has(\"type\")) {\n+            typed++;\n+        }\n+    }\n+    return (typed / total) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}