{
    "patch": "    Set<String> unreferencedParams = new HashSet<>();\n    for (Var param : fnScope.getParameters()) {\n      if (!referenced.contains(param)) {\n        unreferencedParams.add(param.getName());\n      }\n    }\n    if (!unreferencedParams.isEmpty()) {\n      Node fnRoot = fnScope.getRootNode();\n      for (Node arg : fnRoot.getFirstChild().children()) {\n        if (unreferencedParams.contains(arg.getString())) {\n          if (arg.getNext() == null) {\n            Node prev = arg.getPrevious();\n            Node parent = arg.getParent();\n            parent.removeChild(arg);\n            if (prev != null) {\n              parent.removeChild(prev);\n            }\n          } else {\n            Node next = arg.getNext();\n            Node parent = arg.getParent();\n            parent.removeChild(arg);\n            next.detach();\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2a169213 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,29 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Set<String> unreferencedParams = new HashSet<>();\n+    for (Var param : fnScope.getParameters()) {\n+      if (!referenced.contains(param)) {\n+        unreferencedParams.add(param.getName());\n+      }\n+    }\n+    if (!unreferencedParams.isEmpty()) {\n+      Node fnRoot = fnScope.getRootNode();\n+      for (Node arg : fnRoot.getFirstChild().children()) {\n+        if (unreferencedParams.contains(arg.getString())) {\n+          if (arg.getNext() == null) {\n+            Node prev = arg.getPrevious();\n+            Node parent = arg.getParent();\n+            parent.removeChild(arg);\n+            if (prev != null) {\n+              parent.removeChild(prev);\n+            }\n+          } else {\n+            Node next = arg.getNext();\n+            Node parent = arg.getParent();\n+            parent.removeChild(arg);\n+            next.detach();\n+          }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}