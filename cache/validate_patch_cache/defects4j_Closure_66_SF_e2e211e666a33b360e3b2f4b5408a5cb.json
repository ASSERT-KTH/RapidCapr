{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    Gson gson = new Gson();\n    Type mapType = new TypeToken<Map<String, Object>>() {}.getType();\n    Map<String, Object> map = gson.fromJson(jsonStr, mapType);\n    List<Object> elems = (List<Object>) map.get(\"elements\");\n    int count = 0;\n    for (Object elem : elems) {\n        if (elem instanceof Map) {\n            Map<String, Object> elemMap = (Map<String, Object>) elem;\n            String type = (String) elemMap.get(\"type\");\n            if (type != null && !type.isEmpty()) {\n                count++;\n            }\n        }\n    }\n    return ((double)count / elems.size()) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..48707cc2 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,23 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    Gson gson = new Gson();\n+    Type mapType = new TypeToken<Map<String, Object>>() {}.getType();\n+    Map<String, Object> map = gson.fromJson(jsonStr, mapType);\n+    List<Object> elems = (List<Object>) map.get(\"elements\");\n+    int count = 0;\n+    for (Object elem : elems) {\n+        if (elem instanceof Map) {\n+            Map<String, Object> elemMap = (Map<String, Object>) elem;\n+            String type = (String) elemMap.get(\"type\");\n+            if (type != null && !type.isEmpty()) {\n+                count++;\n+            }\n+        }\n+    }\n+    return ((double)count / elems.size()) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}