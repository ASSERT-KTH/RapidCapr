{
    "patch": "class Cyclic {\n    String encode_cyclic(String s) {\n        StringBuilder result = new StringBuilder();\n        int i;\n        for (i = 0; i < s.length() - 2; i += 3) {\n            String group = s.substring(i, i + 3);\n            result.append(group.charAt(1)).append(group.charAt(2)).append(group.charAt(0));\n        }\n        if (i == s.length() - 1) {\n            result.append(s.charAt(i));\n        } else if (i == s.length() - 2) {\n            result.append(s.charAt(i + 1)).append(s.charAt(i));\n        }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\nindex 9ba739f..11261bf 100644\n--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java\n@@ -4,26 +4,18 @@ import java.util.ArrayList;\n \n public class DECODE_CYCLIC {\n     public static String decode_cyclic(String str) {\n-        class Cyclic {\n-            String encode_cyclic(String s) {\n-                ArrayList<String> groups = new ArrayList<String>();\n-\n-                for (int i = 0; i < s.length(); i += 3){\n-                    groups.add(s.substring(i, Math.min(s.length(), i + 3)));\n-                }\n-                int remain = s.length() % 3;\n-                \n-                String result = \"\";\n-                for (String group : groups){\n-                    result += group.substring(1) + group.substring(0, 1);\n-                }\n-\n-                if (remain > 0){\n-                    result += s.substring(s.length() - remain);\n-                }\n-\n-                return result;\n-            }\n+class Cyclic {\n+    String encode_cyclic(String s) {\n+        StringBuilder result = new StringBuilder();\n+        int i;\n+        for (i = 0; i < s.length() - 2; i += 3) {\n+            String group = s.substring(i, i + 3);\n+            result.append(group.charAt(1)).append(group.charAt(2)).append(group.charAt(0));\n+        }\n+        if (i == s.length() - 1) {\n+            result.append(s.charAt(i));\n+        } else if (i == s.length() - 2) {\n+            result.append(s.charAt(i + 1)).append(s.charAt(i));\n         }\n         \n         final Cyclic cyclic = new Cyclic();",
    "result_reason": " /tmp/humaneval-DECODE_CYCLIC/src/main/java/humaneval/buggy/DECODE_CYCLIC.java:[24,2] reached end of file while parsing",
    "test_result": "ERROR"
}