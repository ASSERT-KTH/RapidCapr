{
    "patch": "protected BasePeriod(long duration) {\n    PeriodType periodType = PeriodType.standard()\n        .withYearsRemoved()\n        .withMonthsRemoved()\n        .withWeeksRemoved()\n        .withHoursRemoved()\n        .withMinutesRemoved()\n        .withSecondsRemoved()\n        .withMillisRemoved();\n    this.duration = duration;\n    this.normalized = new MutablePeriod();\n    int timeValues = periodType.size();\n    for (int i = 0; i < timeValues; i++) {\n        DurationFieldType type = periodType.getFieldType(i);\n        float value = duration / (float) type.getUnitMillis();\n        int intValue = (int) value;\n        this.normalized.setPeriod(type, intValue);\n        duration -= intValue * type.getUnitMillis();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..e6bfff00 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,26 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    PeriodType periodType = PeriodType.standard()\n+        .withYearsRemoved()\n+        .withMonthsRemoved()\n+        .withWeeksRemoved()\n+        .withHoursRemoved()\n+        .withMinutesRemoved()\n+        .withSecondsRemoved()\n+        .withMillisRemoved();\n+    this.duration = duration;\n+    this.normalized = new MutablePeriod();\n+    int timeValues = periodType.size();\n+    for (int i = 0; i < timeValues; i++) {\n+        DurationFieldType type = periodType.getFieldType(i);\n+        float value = duration / (float) type.getUnitMillis();\n+        int intValue = (int) value;\n+        this.normalized.setPeriod(type, intValue);\n+        duration -= intValue * type.getUnitMillis();\n     }\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}