{
    "patch": "    if (n.type == Token.FUNCTION) {\n      return true;\n    } else if (n.type == Token.CALL) {\n      Node callee = n.getFirstChild();\n      return NodeUtil.isFunctionExpression(callee) || NodeUtil.isName(callee);\n    }\n    return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..9f5b34e3 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,13 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+    if (n.type == Token.FUNCTION) {\n+      return true;\n+    } else if (n.type == Token.CALL) {\n+      Node callee = n.getFirstChild();\n+      return NodeUtil.isFunctionExpression(callee) || NodeUtil.isName(callee);\n+    }\n+    return false;\n   }\n \n   /**",
    "result_reason": "error: type is not public in Node; cannot be accessed from outside package",
    "test_result": "ERROR"
}