{
    "patch": "@Test\npublic void should_return_empty_iterable() {\n    SampleClass sampleClass = new SampleClass();\n    SampleClass.MethodReturnType values = sampleClass.methodName(\"some parameter\");\n\n    assertNotNull(values);\n    assertNotNull(values.returnValueFor(String.class));\n    assertTrue(values.returnValueFor(String.class).isEmpty());\n\n    Iterable iterable = values.returnValueFor(Iterable.class);\n    assertNull(iterable);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}