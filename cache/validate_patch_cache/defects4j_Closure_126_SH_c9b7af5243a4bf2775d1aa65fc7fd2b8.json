{
    "patch": "      // Don't try to minimize the exits of finally blocks, as this can cause\n      // problems if it changes the completion type of the finally block.\n      // See ECMA 262 Sections 8.9 & 12.14\n      if (n.isTry() && NodeUtil.hasFinally(n)) {\n        Node finallyBlock = n.getLastChild();\n        tryMinimizeExits(finallyBlock, exitType, labelName);\n        return;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..66a167a5 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,9 +138,13 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n+      // Don't try to minimize the exits of finally blocks, as this can cause\n+      // problems if it changes the completion type of the finally block.\n+      // See ECMA 262 Sections 8.9 & 12.14\n+      if (n.isTry() && NodeUtil.hasFinally(n)) {\n         Node finallyBlock = n.getLastChild();\n         tryMinimizeExits(finallyBlock, exitType, labelName);\n+        return;\n       }\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}