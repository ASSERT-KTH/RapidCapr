{
    "patch": "public static String fixCode(String code) {\n    String[] lines = code.split(\"\\n\");\n    for(int i = 0; i < lines.length; i++) {\n        if (lines[i].contains(\"for(\")) {\n            int start = lines[i].indexOf(\"(\") + 1;\n            int end = lines[i].lastIndexOf(\")\");\n            String expr = lines[i].substring(start, end);\n            if (expr.contains(\"in \")) {\n                String[] parts = expr.split(\"\\\\s+in\\\\s+\");\n                String replacement = parts[1] + \".contains(\" + parts[0] + \")\";\n                String fixed = lines[i].substring(0, start) + replacement + lines[i].substring(end);\n                lines[i] = fixed;\n            }\n        }\n    }\n    return String.join(\"\\n\", lines);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..c58a2d75 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,23 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public static String fixCode(String code) {\n+    String[] lines = code.split(\"\\n\");\n+    for(int i = 0; i < lines.length; i++) {\n+        if (lines[i].contains(\"for(\")) {\n+            int start = lines[i].indexOf(\"(\") + 1;\n+            int end = lines[i].lastIndexOf(\")\");\n+            String expr = lines[i].substring(start, end);\n+            if (expr.contains(\"in \")) {\n+                String[] parts = expr.split(\"\\\\s+in\\\\s+\");\n+                String replacement = parts[1] + \".contains(\" + parts[0] + \")\";\n+                String fixed = lines[i].substring(0, start) + replacement + lines[i].substring(end);\n+                lines[i] = fixed;\n+            }\n+        }\n+    }\n+    return String.join(\"\\n\", lines);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}