{
    "patch": "public double getTypedPercent(String code) {\n    int numTyped = 0;\n    int total = 0;\n    \n    // Iterate through each variable in the code\n    Matcher matcher = Pattern.compile(\"var\\\\s+(\\\\w+)\\\\s*=\").matcher(code);\n    while (matcher.find()) {\n        total++;\n        String varName = matcher.group(1);\n        \n        // Check if the variable is typed\n        Matcher typeMatcher = Pattern.compile(varName + \"\\\\s*:\\\\s*(\\\\w+)\").matcher(code);\n        if (typeMatcher.find()) {\n            numTyped++;\n        }\n    }\n\n    if (total > 0) {\n        return (double) numTyped / total * 100.0;\n    } else {\n        return 0.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..0cbceb67 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,29 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(String code) {\n+    int numTyped = 0;\n+    int total = 0;\n+    \n+    // Iterate through each variable in the code\n+    Matcher matcher = Pattern.compile(\"var\\\\s+(\\\\w+)\\\\s*=\").matcher(code);\n+    while (matcher.find()) {\n+        total++;\n+        String varName = matcher.group(1);\n+        \n+        // Check if the variable is typed\n+        Matcher typeMatcher = Pattern.compile(varName + \"\\\\s*:\\\\s*(\\\\w+)\").matcher(code);\n+        if (typeMatcher.find()) {\n+            numTyped++;\n+        }\n+    }\n+\n+    if (total > 0) {\n+        return (double) numTyped / total * 100.0;\n+    } else {\n+        return 0.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}