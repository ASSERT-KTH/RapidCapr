{
    "patch": "Node lhs = callNode.getFirstChild();\nString methodName = NodeUtil.getBestLValueName(lhs);\nif (methodName != null) {\n  StaticMemberReference member =\n      convention.getStaticMember(\n          lhs.getQualifiedName(), methodName);\n  if (member != null && member.isConstant()) {\n    return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..4658e5e3 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,16 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+Node lhs = callNode.getFirstChild();\n+String methodName = NodeUtil.getBestLValueName(lhs);\n+if (methodName != null) {\n+  StaticMemberReference member =\n+      convention.getStaticMember(\n+          lhs.getQualifiedName(), methodName);\n+  if (member != null && member.isConstant()) {\n+    return false;\n+  }\n+}\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}