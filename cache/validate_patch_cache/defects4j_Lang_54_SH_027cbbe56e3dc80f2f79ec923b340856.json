{
    "patch": "            // Check if variant subtag is present\n            int variantStart = 0;\n            for (int i = 0; i < len; i++) {\n                if (str.charAt(i) == '_') {\n                    if (variantStart != 0) {\n                        // variant subtag present, parse it\n                        String language = str.substring(0, 2);\n                        String country = str.substring(3, variantStart);\n                        String variant = str.substring(variantStart + 1, len);\n                        return new Locale(language, country, variant);\n                    } else {\n                        // no variant subtag, parse language and country\n                        String language = str.substring(0, 2);\n                        String country = str.substring(3, len);\n                        return new Locale(language, country);\n                    }\n                } else if (i == 4) {\n                    // has to be hexdigit\n                    if (str.charAt(i) < '0' || str.charAt(i) > '9' && str.charAt(i) < 'A' || str.charAt(i) > 'F') {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    variantStart = i;\n                } else if (i != 2) {\n                    // has to be letter\n                    if (str.charAt(i) < 'a' || str.charAt(i) > 'z') {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                }\n            }\n            // reached end of string without finding '_'\n            if (variantStart != 0) {\n                // variant subtag present, parse it\n                String language = str.substring(0, 2);\n                String country = str.substring(3, variantStart);\n                String variant = str.substring(variantStart + 1, len);\n                return new Locale(language, country, variant);\n            } else {\n                // no variant subtag, parse language and country\n                String language = str.substring(0, 2);\n                String country = str.substring(3, len);\n                return new Locale(language, country);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..7641ad0d 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,47 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            // Check if variant subtag is present\n+            int variantStart = 0;\n+            for (int i = 0; i < len; i++) {\n+                if (str.charAt(i) == '_') {\n+                    if (variantStart != 0) {\n+                        // variant subtag present, parse it\n+                        String language = str.substring(0, 2);\n+                        String country = str.substring(3, variantStart);\n+                        String variant = str.substring(variantStart + 1, len);\n+                        return new Locale(language, country, variant);\n+                    } else {\n+                        // no variant subtag, parse language and country\n+                        String language = str.substring(0, 2);\n+                        String country = str.substring(3, len);\n+                        return new Locale(language, country);\n+                    }\n+                } else if (i == 4) {\n+                    // has to be hexdigit\n+                    if (str.charAt(i) < '0' || str.charAt(i) > '9' && str.charAt(i) < 'A' || str.charAt(i) > 'F') {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    variantStart = i;\n+                } else if (i != 2) {\n+                    // has to be letter\n+                    if (str.charAt(i) < 'a' || str.charAt(i) > 'z') {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                }\n+            }\n+            // reached end of string without finding '_'\n+            if (variantStart != 0) {\n+                // variant subtag present, parse it\n+                String language = str.substring(0, 2);\n+                String country = str.substring(3, variantStart);\n+                String variant = str.substring(variantStart + 1, len);\n+                return new Locale(language, country, variant);\n+            } else {\n+                // no variant subtag, parse language and country\n+                String language = str.substring(0, 2);\n+                String country = str.substring(3, len);\n+                return new Locale(language, country);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}