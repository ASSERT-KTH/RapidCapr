{
    "patch": "                long nextAdjusted = nextTransition(instantAdjusted - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    // try moving slowly forward\n                    long prevAdjusted = previousTransition(instantAdjusted - offsetAdjusted);\n                    if (prevAdjusted < instantAdjusted - offsetAdjusted) {\n                        int offsetPrev = getOffset(prevAdjusted);\n                        if (offsetPrev > offsetLocal) {\n                            return offsetPrev;\n                        }\n                    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..6774ed2b 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,16 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long nextAdjusted = nextTransition(instantAdjusted - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    // try moving slowly forward\n+                    long prevAdjusted = previousTransition(instantAdjusted - offsetAdjusted);\n+                    if (prevAdjusted < instantAdjusted - offsetAdjusted) {\n+                        int offsetPrev = getOffset(prevAdjusted);\n+                        if (offsetPrev > offsetLocal) {\n+                            return offsetPrev;\n+                        }\n+                    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}