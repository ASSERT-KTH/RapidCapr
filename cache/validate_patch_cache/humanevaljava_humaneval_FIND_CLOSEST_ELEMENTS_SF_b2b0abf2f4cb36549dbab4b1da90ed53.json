{
    "patch": "    public static double[] find_closest_elements(double[] numbers) {\n        double[] result = new double[2];\n\n        if(numbers.length < 2){\n            throw new IllegalArgumentException(\"Array length must be at least 2\");\n        }\n\n        double distance = Double.MAX_VALUE;\n        for (int i = 0; i < numbers.length; i += 1){\n            for (int j = i + 1; j < numbers.length; j += 1){\n                double new_distance = Math.abs(numbers[i] - numbers[j]);\n                if (new_distance < distance){\n                    distance = new_distance;\n                    if (numbers[i] < numbers[j]){\n                        result[0] = numbers[i];\n                        result[1] = numbers[j];\n                    } else{\n                        result[0] = numbers[j];\n                        result[1] = numbers[i];\n                    }\n                }\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\nindex 72388af..17db960 100644\n--- a/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n+++ b/src/main/java/humaneval/buggy/FIND_CLOSEST_ELEMENTS.java\n@@ -4,9 +4,13 @@ public class FIND_CLOSEST_ELEMENTS {\n     public static double[] find_closest_elements(double[] numbers) {\n         double[] result = new double[2];\n \n+        if(numbers.length < 2){\n+            throw new IllegalArgumentException(\"Array length must be at least 2\");\n+        }\n+\n         double distance = Double.MAX_VALUE;\n         for (int i = 0; i < numbers.length; i += 1){\n-            for (int j = 0; j < numbers.length; j += 1){\n+            for (int j = i + 1; j < numbers.length; j += 1){\n                 double new_distance = Math.abs(numbers[i] - numbers[j]);\n                 if (new_distance < distance){\n                     distance = new_distance;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}