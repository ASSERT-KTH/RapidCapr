{
    "patch": "        } else if (block.isLoop) {\n          int maybeDeclIndex = references.indexOf(ref) - 1;\n          if (isInitializingAssignmentAt(maybeDeclIndex)) {\n            return false;\n          } else {\n            break;\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..20ab86e5 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,14 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        } else if (block.isLoop) {\n+          int maybeDeclIndex = references.indexOf(ref) - 1;\n+          if (isInitializingAssignmentAt(maybeDeclIndex)) {\n+            return false;\n+          } else {\n+            break;\n+          }\n+        }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}