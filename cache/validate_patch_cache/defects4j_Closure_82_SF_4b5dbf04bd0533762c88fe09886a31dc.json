{
    "patch": "/**\n* Determines if this type is empty. A type is considered empty if it is any\n* of the following: {@link NoType}, {@link NoObjectType}, {@link UnknownType},\n* {@link NullType}, {@link VoidType} or {@link NoResolvedType}.\n*\n* @return {@code true} if this type is empty, {@code false} otherwise.\n*/\npublic final boolean isEmptyType() {\n    return isNoType() || isNoObjectType() || isUnknownType() || isNullType() || isVoidType() || isNoResolvedType();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..f6c5a582 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,16 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+/**\n+* Determines if this type is empty. A type is considered empty if it is any\n+* of the following: {@link NoType}, {@link NoObjectType}, {@link UnknownType},\n+* {@link NullType}, {@link VoidType} or {@link NoResolvedType}.\n+*\n+* @return {@code true} if this type is empty, {@code false} otherwise.\n+*/\n+public final boolean isEmptyType() {\n+    return isNoType() || isNoObjectType() || isUnknownType() || isNullType() || isVoidType() || isNoResolvedType();\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}