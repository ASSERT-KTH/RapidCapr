{
    "patch": "        for (int i = start; i <= end && i < this.data.size(); i++) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i).clone();\n            try {\n                copy.add(item);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..63bd819 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,13 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        for (int i = start; i <= end && i < this.data.size(); i++) {\n+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i).clone();\n+            try {\n+                copy.add(item);\n+            } catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}