{
    "patch": "public String unEscapeISO8859_1(final String input) {\n    StringBuffer out = new StringBuffer(input.length());\n    Matcher matcher = escapeseq.matcher(input);\n    int last = 0;\n    while (matcher.find()) {\n        out.append(input.substring(last, matcher.start()));\n        char c;\n        switch (matcher.group().charAt(1)) {\n            case '\\\"':\n                c = '\\\"';\n                break;\n            case '\\\\':\n                c = '\\\\';\n                break;\n            case 'b':\n                c = '\\b';\n                break;\n            case 'f':\n                c = '\\f';\n                break;\n            case 'n':\n                c = '\\n';\n                break;\n            case 'r':\n                c = '\\r';\n                break;\n            case 't':\n                c = '\\t';\n                break;\n            case 'u':\n                c = (char) Integer.parseInt(matcher.group().substring(2), 16);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unhandled escape character: \\\\\" + matcher.group().charAt(1));\n        }\n        out.append(c);\n        last = matcher.end();\n    }\n    out.append(input.substring(last));\n    return out.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..b5b1ef90 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,47 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String unEscapeISO8859_1(final String input) {\n+    StringBuffer out = new StringBuffer(input.length());\n+    Matcher matcher = escapeseq.matcher(input);\n+    int last = 0;\n+    while (matcher.find()) {\n+        out.append(input.substring(last, matcher.start()));\n+        char c;\n+        switch (matcher.group().charAt(1)) {\n+            case '\\\"':\n+                c = '\\\"';\n+                break;\n+            case '\\\\':\n+                c = '\\\\';\n+                break;\n+            case 'b':\n+                c = '\\b';\n+                break;\n+            case 'f':\n+                c = '\\f';\n+                break;\n+            case 'n':\n+                c = '\\n';\n+                break;\n+            case 'r':\n+                c = '\\r';\n+                break;\n+            case 't':\n+                c = '\\t';\n+                break;\n+            case 'u':\n+                c = (char) Integer.parseInt(matcher.group().substring(2), 16);\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\"Unhandled escape character: \\\\\" + matcher.group().charAt(1));\n+        }\n+        out.append(c);\n+        last = matcher.end();\n+    }\n+    out.append(input.substring(last));\n+    return out.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}