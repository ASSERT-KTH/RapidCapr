{
    "patch": "if (name.aliasingGets >= 1 && name.globalSets <= 1 && name.localSets == 0 &&\n    name.getDeclaration() != null && name.getDeclaration().getNode() != null &&\n    !NodeUtil.isLValue(name.getDeclaration().getNode())) {\n  InlineRenamer renamer = new InlineRenamer(t.getCompiler(), name, null);\n  NodeTraversal.traverse(t.getCompiler(), name.getDeclaration().getNode(), renamer);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..a034668c 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,12 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+if (name.aliasingGets >= 1 && name.globalSets <= 1 && name.localSets == 0 &&\n+    name.getDeclaration() != null && name.getDeclaration().getNode() != null &&\n+    !NodeUtil.isLValue(name.getDeclaration().getNode())) {\n+  InlineRenamer renamer = new InlineRenamer(t.getCompiler(), name, null);\n+  NodeTraversal.traverse(t.getCompiler(), name.getDeclaration().getNode(), renamer);\n+}\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}