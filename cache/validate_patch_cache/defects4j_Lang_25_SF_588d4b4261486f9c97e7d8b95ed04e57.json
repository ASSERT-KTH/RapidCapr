{
    "patch": "public String encodeStringForHTML(String inputString){\n    StringBuilder outputString = new StringBuilder();\n    for(int i = 0; i < inputString.length(); i++){\n        char currentChar = inputString.charAt(i);\n        switch(currentChar){\n            case '<':\n                outputString.append(\"&lt;\");\n                break;\n            case '>':\n                outputString.append(\"&gt;\");\n                break;\n            case '&':\n                outputString.append(\"&amp;\");\n                break;\n            case '\\\"':\n                outputString.append(\"&quot;\");\n                break;\n            case '\\'':\n                outputString.append(\"&#39;\");\n                break;\n            default:\n                outputString.append(currentChar);\n                break;    \n        }\n    }\n    return outputString.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..60656d66 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,33 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String encodeStringForHTML(String inputString){\n+    StringBuilder outputString = new StringBuilder();\n+    for(int i = 0; i < inputString.length(); i++){\n+        char currentChar = inputString.charAt(i);\n+        switch(currentChar){\n+            case '<':\n+                outputString.append(\"&lt;\");\n+                break;\n+            case '>':\n+                outputString.append(\"&gt;\");\n+                break;\n+            case '&':\n+                outputString.append(\"&amp;\");\n+                break;\n+            case '\\\"':\n+                outputString.append(\"&quot;\");\n+                break;\n+            case '\\'':\n+                outputString.append(\"&#39;\");\n+                break;\n+            default:\n+                outputString.append(currentChar);\n+                break;    \n+        }\n+    }\n+    return outputString.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}