{
    "patch": "                if ((offsetLocal - offsetAdjusted) < 0) {\n                    long prevTransition = previousTransition(instantAdjusted);\n                    if (prevTransition != instantAdjusted - offsetLocal) {\n                        return offsetLocal;\n                    }\n                    int offsetBeforePrev = getOffset(prevTransition);\n                    if (offsetBeforePrev < offsetAdjusted) { // we just crossed a gap\n                        return offsetBeforePrev;\n                    }\n                } else { // positive difference, we just crossed an overlap\n                    long nextTransition = nextTransition(instantAdjusted);\n                    if (nextTransition != instantAdjusted - offsetLocal) {\n                        return offsetLocal;\n                    }\n                    int offsetAfterNext = getOffset(nextTransition);\n                    if (offsetAdjusted < offsetAfterNext) {\n                        return offsetAfterNext;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..873f3ce1 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    long prevTransition = previousTransition(instantAdjusted);\n+                    if (prevTransition != instantAdjusted - offsetLocal) {\n+                        return offsetLocal;\n+                    }\n+                    int offsetBeforePrev = getOffset(prevTransition);\n+                    if (offsetBeforePrev < offsetAdjusted) { // we just crossed a gap\n+                        return offsetBeforePrev;\n+                    }\n+                } else { // positive difference, we just crossed an overlap\n+                    long nextTransition = nextTransition(instantAdjusted);\n+                    if (nextTransition != instantAdjusted - offsetLocal) {\n+                        return offsetLocal;\n+                    }\n+                    int offsetAfterNext = getOffset(nextTransition);\n+                    if (offsetAdjusted < offsetAfterNext) {\n+                        return offsetAfterNext;\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}