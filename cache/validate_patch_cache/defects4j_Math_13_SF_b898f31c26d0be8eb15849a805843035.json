{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    RealMatrix d = dec.getD();\n    RealMatrix v = dec.getV();\n\n    int n = d.getColumnDimension();\n    for (int j = 0; j < n; j++) {\n        double dj = d.getEntry(j, j);\n        for (int i = 0; i < n; i++) {\n            double vij = v.getEntry(i, j);\n            double di = d.getEntry(i, i);\n            double dij = Math.sqrt(di * dj);\n            v.setEntry(i, j, vij * di / dij);\n        }\n    }\n\n    return v.multiply(v.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..3bcf64973 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,22 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final EigenDecomposition dec = new EigenDecomposition(m);\n+    RealMatrix d = dec.getD();\n+    RealMatrix v = dec.getV();\n+\n+    int n = d.getColumnDimension();\n+    for (int j = 0; j < n; j++) {\n+        double dj = d.getEntry(j, j);\n+        for (int i = 0; i < n; i++) {\n+            double vij = v.getEntry(i, j);\n+            double di = d.getEntry(i, i);\n+            double dij = Math.sqrt(di * dj);\n+            v.setEntry(i, j, vij * di / dij);\n+        }\n     }\n+\n+    return v.multiply(v.transpose());\n+}\n }",
    "result_reason": "java.lang.OutOfMemoryError: Java heap space",
    "test_result": "FAIL"
}