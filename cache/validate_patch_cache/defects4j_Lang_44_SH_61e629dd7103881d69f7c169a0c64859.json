{
    "patch": "        // Remove leading plus sign if exists\n        if (val.startsWith(\"+\")) {\n            val = val.substring(1);\n        }\n        // Fix case of leading double minus sign\n        if (val.startsWith(\"--\")) {\n            // this is protection for poorness in java.lang.BigDecimal\n            // it accepts this as a legal value, but it does not appear \n            // to be in specification of class. OS X Java parses it to \n            // a wrong value.\n            return null;\n        }\n        if (val.equals(\"-\")) {\n            throw new NumberFormatException(\"\\\"-\\\" is not a valid number.\");",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..772bf662 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,20 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        // Remove leading plus sign if exists\n+        if (val.startsWith(\"+\")) {\n+            val = val.substring(1);\n+        }\n+        // Fix case of leading double minus sign\n+        if (val.startsWith(\"--\")) {\n+            // this is protection for poorness in java.lang.BigDecimal\n+            // it accepts this as a legal value, but it does not appear \n+            // to be in specification of class. OS X Java parses it to \n+            // a wrong value.\n+            return null;\n+        }\n+        if (val.equals(\"-\")) {\n+            throw new NumberFormatException(\"\\\"-\\\" is not a valid number.\");\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}