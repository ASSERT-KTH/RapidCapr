{
    "patch": "      // Initialize the referenced set with the 'this' parameter, since\n      // it may be used in the function body and we don't account for\n      // that as a reference.\n      Var thisVar = fnScope.getVar(\"this\");\n      if (thisVar != null) {\n        referenced.add(thisVar);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..613baf27 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,12 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      // Initialize the referenced set with the 'this' parameter, since\n+      // it may be used in the function body and we don't account for\n+      // that as a reference.\n+      Var thisVar = fnScope.getVar(\"this\");\n+      if (thisVar != null) {\n+        referenced.add(thisVar);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}