{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (n.getParent() != null && NodeUtil.isGet(n.getParent())) {\n        Node grandParent = n.getParent().getParent();\n        if (NodeUtil.isOrNode(grandParent) &&\n            grandParent.getParent() != null &&\n            grandParent.getParent().getType() == Token.BLOCK &&\n            NodeUtil.findEnclosingStatement(grandParent)\n                    .getFirstChild() != n.getParent()) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..12c1c993 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (n.getParent() != null && NodeUtil.isGet(n.getParent())) {\n+        Node grandParent = n.getParent().getParent();\n+        if (NodeUtil.isOrNode(grandParent) &&\n+            grandParent.getParent() != null &&\n+            grandParent.getParent().getType() == Token.BLOCK &&\n+            NodeUtil.findEnclosingStatement(grandParent)\n+                    .getFirstChild() != n.getParent()) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}