{
    "patch": "public <T> double getPct(T v) {\n    int pos = Collections.binarySearch(data, v, null);\n    if (pos >= 0) {\n        return (double) (pos + 1) / data.size();\n    } else {\n        pos = -(pos + 1);\n        return (double) pos / data.size();\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..27b74b701 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,15 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public <T> double getPct(T v) {\n+    int pos = Collections.binarySearch(data, v, null);\n+    if (pos >= 0) {\n+        return (double) (pos + 1) / data.size();\n+    } else {\n+        pos = -(pos + 1);\n+        return (double) pos / data.size();\n+    }\n+}\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}