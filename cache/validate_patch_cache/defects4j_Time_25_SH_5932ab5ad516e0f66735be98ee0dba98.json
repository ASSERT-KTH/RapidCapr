{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal == nextAdjusted) {\n        // Start: Fix for DST Bug\n        boolean dstGap = offsetLocal < offsetAdjusted;\n\n        if (dstGap) {\n            long prevTransitionLocal = previousTransition(instantAdjusted);\n            long nextTransitionLocal = nextTransition(instantAdjusted);\n            long prevTransitionAdjusted = previousTransition(instantLocal - offsetAdjusted);\n            long nextTransitionAdjusted = nextTransition(instantLocal - offsetAdjusted);\n\n            long wallLocal = prevTransitionLocal + offsetLocal;\n            long wallAdjusted = prevTransitionAdjusted + offsetLocal;\n\n            boolean prevLocalWins = ((instantAdjusted - prevTransitionAdjusted) <= (wallLocal - instantAdjusted));\n            boolean nextLocalWins = ((nextTransitionAdjusted - instantAdjusted) < (instantAdjusted - wallAdjusted));\n\n            if (prevLocalWins) {\n                 int previousOffset = getOffset(prevTransitionLocal);\n                 if (previousOffset > offsetLocal){\n                     return previousOffset;\n                 }\n            }\n\n            if (nextLocalWins) {\n                int nextOffset = getOffset(nextTransitionLocal);\n                if (nextOffset > offsetLocal || nextOffset == offsetAdjusted) {\n                    return nextOffset;\n                }\n            }\n       }\n       // End: Fix for DST Bug\n       return offsetLocal;\n    }\n} else if (offsetLocal > offsetAdjusted) {\n    long prevLocal = previousTransition(instantAdjusted);\n    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n    if (prevLocal == prevAdjusted) {\n        int prevOffset = getOffset(prevLocal);\n        if (prevOffset > offsetAdjusted || prevOffset == offsetLocal) {\n            return offsetLocal;\n        }\n        return prevOffset;\n    }\n} else if (offsetLocal == offsetAdjusted) {\n    return offsetLocal;\n}\n\nlong prevLocal = previousTransition(instantAdjusted);\nlong prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n\nif (prevAdjusted < instantAdjusted && prevLocal > instantAdjusted) {\n    int offsetBeforeGap = getOffset(prevLocal);\n    int offsetAfterGap = getOffset(prevLocal + offsetBeforeGap);\n    if (offsetAfterGap == offsetLocal) {\n        return offsetBeforeGap;\n    }\n}\n\nlong nextLocal = nextTransition(instantAdjusted);\nlong nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n\nif (nextLocal == nextAdjusted) {\n    return offsetLocal;\n}\n\nint offsetAfterGap = getOffset(nextLocal);\nint offsetBeforeGap = getOffset(nextLocal - offsetAfterGap);\nif (offsetBeforeGap == offsetLocal) {\n    return offsetLocal;\n}\nreturn offsetAfterGap;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d672e03d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,80 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal == nextAdjusted) {\n+        // Start: Fix for DST Bug\n+        boolean dstGap = offsetLocal < offsetAdjusted;\n+\n+        if (dstGap) {\n+            long prevTransitionLocal = previousTransition(instantAdjusted);\n+            long nextTransitionLocal = nextTransition(instantAdjusted);\n+            long prevTransitionAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+            long nextTransitionAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+\n+            long wallLocal = prevTransitionLocal + offsetLocal;\n+            long wallAdjusted = prevTransitionAdjusted + offsetLocal;\n+\n+            boolean prevLocalWins = ((instantAdjusted - prevTransitionAdjusted) <= (wallLocal - instantAdjusted));\n+            boolean nextLocalWins = ((nextTransitionAdjusted - instantAdjusted) < (instantAdjusted - wallAdjusted));\n+\n+            if (prevLocalWins) {\n+                 int previousOffset = getOffset(prevTransitionLocal);\n+                 if (previousOffset > offsetLocal){\n+                     return previousOffset;\n+                 }\n+            }\n+\n+            if (nextLocalWins) {\n+                int nextOffset = getOffset(nextTransitionLocal);\n+                if (nextOffset > offsetLocal || nextOffset == offsetAdjusted) {\n+                    return nextOffset;\n+                }\n+            }\n+       }\n+       // End: Fix for DST Bug\n+       return offsetLocal;\n+    }\n+} else if (offsetLocal > offsetAdjusted) {\n+    long prevLocal = previousTransition(instantAdjusted);\n+    long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+    if (prevLocal == prevAdjusted) {\n+        int prevOffset = getOffset(prevLocal);\n+        if (prevOffset > offsetAdjusted || prevOffset == offsetLocal) {\n+            return offsetLocal;\n+        }\n+        return prevOffset;\n+    }\n+} else if (offsetLocal == offsetAdjusted) {\n+    return offsetLocal;\n+}\n+\n+long prevLocal = previousTransition(instantAdjusted);\n+long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+\n+if (prevAdjusted < instantAdjusted && prevLocal > instantAdjusted) {\n+    int offsetBeforeGap = getOffset(prevLocal);\n+    int offsetAfterGap = getOffset(prevLocal + offsetBeforeGap);\n+    if (offsetAfterGap == offsetLocal) {\n+        return offsetBeforeGap;\n+    }\n+}\n+\n+long nextLocal = nextTransition(instantAdjusted);\n+long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+\n+if (nextLocal == nextAdjusted) {\n+    return offsetLocal;\n+}\n+\n+int offsetAfterGap = getOffset(nextLocal);\n+int offsetBeforeGap = getOffset(nextLocal - offsetAfterGap);\n+if (offsetBeforeGap == offsetLocal) {\n+    return offsetLocal;\n+}\n+return offsetAfterGap;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}