{
    "patch": "public static ArrayList<Integer> unique_digits(ArrayList<Integer> x) {\n    ArrayList<Integer> res = new ArrayList<Integer>();\n    for(int i : x) {\n        int num = i;\n        boolean all_odd = true;\n        while(num > 0) {\n            int curr_digit = num % 10;\n            if(curr_digit % 2 == 0) {\n                all_odd = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(all_odd) {\n            res.add(i);\n        }\n    }\n    // Use radix sort to sort the list\n    int maxDigit = Integer.MIN_VALUE;\n    for(int n : res) {\n        String numStr = Integer.toString(n);\n        maxDigit = Math.max(maxDigit, numStr.length());\n    }\n    for(int d = 0; d < maxDigit; d++) {\n        ArrayList<ArrayList<Integer>> buckets = new ArrayList<>(10);\n        for(int i = 0; i < 10; i++) {\n            buckets.add(new ArrayList<Integer>());\n        }\n        for(int n : res) {\n            String numStr = Integer.toString(n);\n            if(numStr.length() < d + 1) {\n                buckets.get(0).add(n);\n            } else {\n                int digit = Character.getNumericValue(numStr.charAt(numStr.length() - d - 1));\n                buckets.get(digit).add(n);\n            }\n        }\n        res.clear();\n        for(int i = 0; i < 10; i++) {\n            res.addAll(buckets.get(i));\n        }\n    }\n    return res;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/UNIQUE_DIGITS.java b/src/main/java/humaneval/buggy/UNIQUE_DIGITS.java\nindex 4045209..25e8a1e 100644\n--- a/src/main/java/humaneval/buggy/UNIQUE_DIGITS.java\n+++ b/src/main/java/humaneval/buggy/UNIQUE_DIGITS.java\n@@ -17,24 +17,48 @@ import java.util.Collections;\n  */\n \n public class UNIQUE_DIGITS {\n-    public static ArrayList<Integer> unique_digits(ArrayList<Integer> x) {\n-        ArrayList<Integer> res = new ArrayList<Integer>();\n-        for(int i : x) {\n-            int num = i;\n-            boolean all_odd = true;\n-            while(num > 0) {\n-                int curr_digit = num % 10;\n-                if((curr_digit % 2) != 0) {\n-                    all_odd = true;\n-                    break;\n-                }\n-                num /= 10;\n+public static ArrayList<Integer> unique_digits(ArrayList<Integer> x) {\n+    ArrayList<Integer> res = new ArrayList<Integer>();\n+    for(int i : x) {\n+        int num = i;\n+        boolean all_odd = true;\n+        while(num > 0) {\n+            int curr_digit = num % 10;\n+            if(curr_digit % 2 == 0) {\n+                all_odd = false;\n+                break;\n             }\n-            if(all_odd) {\n-                res.add(i);\n+            num /= 10;\n+        }\n+        if(all_odd) {\n+            res.add(i);\n+        }\n+    }\n+    // Use radix sort to sort the list\n+    int maxDigit = Integer.MIN_VALUE;\n+    for(int n : res) {\n+        String numStr = Integer.toString(n);\n+        maxDigit = Math.max(maxDigit, numStr.length());\n+    }\n+    for(int d = 0; d < maxDigit; d++) {\n+        ArrayList<ArrayList<Integer>> buckets = new ArrayList<>(10);\n+        for(int i = 0; i < 10; i++) {\n+            buckets.add(new ArrayList<Integer>());\n+        }\n+        for(int n : res) {\n+            String numStr = Integer.toString(n);\n+            if(numStr.length() < d + 1) {\n+                buckets.get(0).add(n);\n+            } else {\n+                int digit = Character.getNumericValue(numStr.charAt(numStr.length() - d - 1));\n+                buckets.get(digit).add(n);\n             }\n         }\n-        Collections.sort(res);\n-        return res;\n+        res.clear();\n+        for(int i = 0; i < 10; i++) {\n+            res.addAll(buckets.get(i));\n+        }\n     }\n+    return res;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}