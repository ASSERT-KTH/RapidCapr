{
    "patch": "            if(currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n            }\n            if(nextStrategy == null || currentStrategy != nextStrategy) {\n                if(currentStrategy.addRegex(this, regex)) {\n                    collector.add(currentStrategy);\n                }\n            }\n            currentFormatField= null;\n            strategies= collector.toArray(new Strategy[collector.size()]);\n            parsePattern= Pattern.compile(regex.toString());\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..703b6a62 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -140,6 +140,18 @@ public class FastDateParser implements DateParser, Serializable {\n             }\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n+        }\n+            if(currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+            }\n+            if(nextStrategy == null || currentStrategy != nextStrategy) {\n+                if(currentStrategy.addRegex(this, regex)) {\n+                    collector.add(currentStrategy);\n+                }\n+            }\n+            currentFormatField= null;\n+            strategies= collector.toArray(new Strategy[collector.size()]);\n+            parsePattern= Pattern.compile(regex.toString());\n         }\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}