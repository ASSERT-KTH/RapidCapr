{
    "patch": "public <T> void resetMock(T mock) {\n    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n    MockSettingsImpl mockSettings = org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\n    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, mockSettings);\n    for (int i = 0; i < Integer.MAX_VALUE; i++) {\n        try {\n            ((Factory)mock).setCallback(i, newFilter);\n            break;\n        } catch (IllegalArgumentException e) {\n            // try the next callback\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..e254551f6 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,21 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+\n+public <T> void resetMock(T mock) {\n+    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n+    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+    MockSettingsImpl mockSettings = org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);\n+    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, mockSettings);\n+    for (int i = 0; i < Integer.MAX_VALUE; i++) {\n+        try {\n+            ((Factory)mock).setCallback(i, newFilter);\n+            break;\n+        } catch (IllegalArgumentException e) {\n+            // try the next callback\n+        }\n+    }\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: incompatible types: MockSettings cannot be converted to MockSettingsImpl",
    "test_result": "ERROR"
}