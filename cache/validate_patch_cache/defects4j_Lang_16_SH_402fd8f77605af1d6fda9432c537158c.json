{
    "patch": "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n    // hexadecimal string\n    // remove any '_' separators used in java 7 and earlier\n    String s = StringUtils.remove(str, '_');\n    // minus is only allowed when it's -0x or -0X\n    int radix = Character.isUpperCase(s.charAt(1)) ? 16 : 0;\n    long result = parseNumber(s.substring(2), radix, true);\n    return createNumber(result);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..b3885a20 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,15 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n+    // hexadecimal string\n+    // remove any '_' separators used in java 7 and earlier\n+    String s = StringUtils.remove(str, '_');\n+    // minus is only allowed when it's -0x or -0X\n+    int radix = Character.isUpperCase(s.charAt(1)) ? 16 : 0;\n+    long result = parseNumber(s.substring(2), radix, true);\n+    return createNumber(result);\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}