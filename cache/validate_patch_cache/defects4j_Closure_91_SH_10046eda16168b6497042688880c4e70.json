{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (parent != null && NodeUtil.isGet(parent.getParent())) {\n  // Grab node with assign op.\n  Node assign = parent.getParent();\n\n  int assignParentType = assign.getParent().getType();\n\n  // Example:\n  // MyFunction.prototype.foo = function() {}\n  // In this case, we need to traverse the RHS (the function).\n  if (assignParentType == Token.EXPR_RESULT) {\n    Node lhs = assign.getFirstChild();\n    if (lhs.getType() == Token.GETPROP &&\n        lhs.getLastChild().getString().equals(\"prototype\")) {\n      return false;\n    }\n    // Example:\n    // MyFunction.staticProp = function() {}\n    // In this case, we don't need to traverse the RHS.\n  } else if (assignParentType == Token.ASSIGN) {\n    Node grandparent = assign.getParent();\n    if (grandparent != null && grandparent.getType() == Token.EXPR_RESULT) {\n      Node greatGrandparent = grandparent.getParent();\n      if (greatGrandparent != null && NodeUtil.isGet(greatGrandparent)) {\n        Node lhs = greatGrandparent.getFirstChild();\n        if (lhs.getType() == Token.GETPROP &&\n            lhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n      }\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..f9f76b79 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,39 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (parent != null && NodeUtil.isGet(parent.getParent())) {\n+  // Grab node with assign op.\n+  Node assign = parent.getParent();\n+\n+  int assignParentType = assign.getParent().getType();\n+\n+  // Example:\n+  // MyFunction.prototype.foo = function() {}\n+  // In this case, we need to traverse the RHS (the function).\n+  if (assignParentType == Token.EXPR_RESULT) {\n+    Node lhs = assign.getFirstChild();\n+    if (lhs.getType() == Token.GETPROP &&\n+        lhs.getLastChild().getString().equals(\"prototype\")) {\n+      return false;\n+    }\n+    // Example:\n+    // MyFunction.staticProp = function() {}\n+    // In this case, we don't need to traverse the RHS.\n+  } else if (assignParentType == Token.ASSIGN) {\n+    Node grandparent = assign.getParent();\n+    if (grandparent != null && grandparent.getType() == Token.EXPR_RESULT) {\n+      Node greatGrandparent = grandparent.getParent();\n+      if (greatGrandparent != null && NodeUtil.isGet(greatGrandparent)) {\n+        Node lhs = greatGrandparent.getFirstChild();\n+        if (lhs.getType() == Token.GETPROP &&\n+            lhs.getLastChild().getString().equals(\"prototype\")) {\n+          return false;\n+        }\n+      }\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}