{
    "patch": "        LUDecomposition decomposition = new LUDecomposition(m);\n        RealMatrix l = decomposition.getL();\n        RealMatrix d = decomposition.getSquareRoot();\n        RealMatrix lInverse = MatrixUtils.inverse(l);\n        return l.multiply(d).multiply(lInverse);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..582fd05a9 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,9 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+        LUDecomposition decomposition = new LUDecomposition(m);\n+        RealMatrix l = decomposition.getL();\n+        RealMatrix d = decomposition.getSquareRoot();\n+        RealMatrix lInverse = MatrixUtils.inverse(l);\n+        return l.multiply(d).multiply(lInverse);\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}