{
    "patch": "protected BasePeriod(long duration) {\n    super(duration);\n    int weeks = (int) (duration / DateTimeConstants.MILLIS_PER_WEEK);\n    int days = (int) ((duration % DateTimeConstants.MILLIS_PER_WEEK) / DateTimeConstants.MILLIS_PER_DAY);\n    int hours = (int) ((duration % DateTimeConstants.MILLIS_PER_DAY) / DateTimeConstants.MILLIS_PER_HOUR);\n    int minutes = (int) ((duration % DateTimeConstants.MILLIS_PER_HOUR) / DateTimeConstants.MILLIS_PER_MINUTE);\n    int seconds = (int) ((duration % DateTimeConstants.MILLIS_PER_MINUTE) / DateTimeConstants.MILLIS_PER_SECOND);\n    int millis = (int) (duration % DateTimeConstants.MILLIS_PER_SECOND);\n    iPeriod = new Period(0,0,weeks,days,hours,minutes,seconds,millis,PeriodType.standard());\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..588509c4 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,16 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super(duration);\n+    int weeks = (int) (duration / DateTimeConstants.MILLIS_PER_WEEK);\n+    int days = (int) ((duration % DateTimeConstants.MILLIS_PER_WEEK) / DateTimeConstants.MILLIS_PER_DAY);\n+    int hours = (int) ((duration % DateTimeConstants.MILLIS_PER_DAY) / DateTimeConstants.MILLIS_PER_HOUR);\n+    int minutes = (int) ((duration % DateTimeConstants.MILLIS_PER_HOUR) / DateTimeConstants.MILLIS_PER_MINUTE);\n+    int seconds = (int) ((duration % DateTimeConstants.MILLIS_PER_MINUTE) / DateTimeConstants.MILLIS_PER_SECOND);\n+    int millis = (int) (duration % DateTimeConstants.MILLIS_PER_SECOND);\n+    iPeriod = new Period(0,0,weeks,days,hours,minutes,seconds,millis,PeriodType.standard());\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}