{
    "patch": "        } else if (parent.isCall() && parent.getFirstChild() == n) {\n          // Exclude the rhs of the call expression from being associated with the lhs.\n          recordDepScope(recordNode, ns);\n        } else {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..e9aa12c2 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,6 +575,9 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n+        } else if (parent.isCall() && parent.getFirstChild() == n) {\n+          // Exclude the rhs of the call expression from being associated with the lhs.\n+          recordDepScope(recordNode, ns);\n         } else {\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}