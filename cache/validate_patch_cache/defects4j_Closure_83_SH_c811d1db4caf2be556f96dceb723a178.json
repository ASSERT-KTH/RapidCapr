{
    "patch": "String param;\ntry {\n    param = params.getParameter(0);\n} catch (CmdLineException e) {\n    // If there are no more parameters left, assume it's a boolean flag and set its value to true\n    // and return 0 (i.e., consumed only 1 argument)\n    if (setter.isMultiValued()) {\n        setter.addValue(true);\n        return 0;\n    } else {\n        throw e;\n    }\n}\n\nif (param == null) {\n    setter.addValue(true);\n    return 0;\n} else {\n    String lowerParam = param.toLowerCase();\n    if (TRUES.contains(lowerParam)) {\n        setter.addValue(true);\n    } else if (FALSES.contains(lowerParam)) {\n        setter.addValue(false);\n    } else {\n        setter.addValue(true);\n        return 0;\n    }\n    return 1;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..a7437851 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,35 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+String param;\n+try {\n+    param = params.getParameter(0);\n+} catch (CmdLineException e) {\n+    // If there are no more parameters left, assume it's a boolean flag and set its value to true\n+    // and return 0 (i.e., consumed only 1 argument)\n+    if (setter.isMultiValued()) {\n+        setter.addValue(true);\n+        return 0;\n+    } else {\n+        throw e;\n+    }\n+}\n+\n+if (param == null) {\n+    setter.addValue(true);\n+    return 0;\n+} else {\n+    String lowerParam = param.toLowerCase();\n+    if (TRUES.contains(lowerParam)) {\n+        setter.addValue(true);\n+    } else if (FALSES.contains(lowerParam)) {\n+        setter.addValue(false);\n+    } else {\n+        setter.addValue(true);\n+        return 0;\n+    }\n+    return 1;\n+}\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}