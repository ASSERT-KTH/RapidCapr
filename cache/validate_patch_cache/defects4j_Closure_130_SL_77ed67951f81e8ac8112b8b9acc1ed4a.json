{
    "patch": "      if (name.globalSets == 1 && name.localSets == 0 && name.aliasingGets == 0 &&\n          name.isGetOrSetDefinition() && name.getDeclaration().getParentNode().isExprResult() &&\n          // Don't inline if the type of the expression to the right of the = operator is not\n          // trivially a subtype of the assigned-to variable.\n          NodeUtil.mayBeObjectLitOrFunction(getAssignedValue(name.getDeclaration())) &&\n          // Don't inline if there are multiple assignments to the variable and a type inference\n          // would require us to give it a union type.\n          name.getDeclarationInfos().size() == 1 &&\n          !name.isBleedingFunction()) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..b2c9cf31 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,15 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.globalSets == 1 && name.localSets == 0 && name.aliasingGets == 0 &&\n+          name.isGetOrSetDefinition() && name.getDeclaration().getParentNode().isExprResult() &&\n+          // Don't inline if the type of the expression to the right of the = operator is not\n+          // trivially a subtype of the assigned-to variable.\n+          NodeUtil.mayBeObjectLitOrFunction(getAssignedValue(name.getDeclaration())) &&\n+          // Don't inline if there are multiple assignments to the variable and a type inference\n+          // would require us to give it a union type.\n+          name.getDeclarationInfos().size() == 1 &&\n+          !name.isBleedingFunction()) {\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}