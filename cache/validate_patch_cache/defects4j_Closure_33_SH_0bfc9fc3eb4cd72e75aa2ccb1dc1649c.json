{
    "patch": "if (!constraintObj.isNominalConstructor()) {\n    return;\n}\n\nif (constraintObj.isRecordType()) {\n    for (String propName : constraintObj.getOwnPropertyNames()) {\n        if (!isPropertyTypeDeclared(propName)) {\n            JSType propType = constraintObj.getPropertyType(propName);\n            if (propType != null) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(propName)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n                }\n                defineInferredProperty(propName, typeToInfer, null);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..e3382e14 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,24 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+if (!constraintObj.isNominalConstructor()) {\n+    return;\n+}\n+\n+if (constraintObj.isRecordType()) {\n+    for (String propName : constraintObj.getOwnPropertyNames()) {\n+        if (!isPropertyTypeDeclared(propName)) {\n+            JSType propType = constraintObj.getPropertyType(propName);\n+            if (propType != null) {\n+                JSType typeToInfer = propType;\n+                if (!hasProperty(propName)) {\n+                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n+                }\n+                defineInferredProperty(propName, typeToInfer, null);\n+            }\n+        }\n+    }\n+}\n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...arameter",
    "test_result": "FAIL"
}