{
    "patch": "@SuppressWarnings(\"unchecked\")\n@Test\nvoid should_return_empty_iterable() {\n    MethodStub stub = new MethodStub() {};\n    ReturnValueProvider values = new ReturnValueProvider();\n\n    stub.when(\"doSomething\", values.returnValueFor(String.class));\n\n    Iterable<String> iterable = (Iterable<String>) values.returnValueFor(Iterable.class);\n    assertFalse(iterable.iterator().hasNext());\n    assertEquals(0, Iterables.size(iterable));\n\n    assertTrue(stub.invocations().isEmpty());\n    assertEquals(null, stub.returnValue());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}