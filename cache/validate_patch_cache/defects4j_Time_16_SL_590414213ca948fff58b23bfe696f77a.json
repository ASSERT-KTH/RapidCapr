{
    "patch": "        instant.getChronology()\n                .getDateTimeMillis(instant.getYear(),\n                        instant.getMonthOfYear(),\n                        instant.getDayOfMonth(),\n                        instant.getHourOfDay(),\n                        instant.getMinuteOfHour(),\n                        instant.getSecondOfMinute(),\n                        instant.getMillisOfSecond()) + \n        instant.getChronology()\n                .getZone()\n                .getOffsetFromLocal(instant.getMillis());",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..8e9bcf9f 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,17 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+        instant.getChronology()\n+                .getDateTimeMillis(instant.getYear(),\n+                        instant.getMonthOfYear(),\n+                        instant.getDayOfMonth(),\n+                        instant.getHourOfDay(),\n+                        instant.getMinuteOfHour(),\n+                        instant.getSecondOfMinute(),\n+                        instant.getMillisOfSecond()) + \n+        instant.getChronology()\n+                .getZone()\n+                .getOffsetFromLocal(instant.getMillis());\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}