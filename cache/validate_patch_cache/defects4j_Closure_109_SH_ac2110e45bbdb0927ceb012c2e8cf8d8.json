{
    "patch": "    TokenStream.PeekIterator it = stream.peek();\n\n    if (it.getText().equals(\"|\") || it.getText().equals(\"!\")) {\n      return parseUnionTypeExpression(token);\n    }\n    if (it.getText().equals(\"=\")) {\n      it.next();\n      return parseDefaultTypeExpression(token);\n    }\n\n    return parseTypeName(token);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..df9ce52e 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,17 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+    TokenStream.PeekIterator it = stream.peek();\n+\n+    if (it.getText().equals(\"|\") || it.getText().equals(\"!\")) {\n+      return parseUnionTypeExpression(token);\n+    }\n+    if (it.getText().equals(\"=\")) {\n+      it.next();\n+      return parseDefaultTypeExpression(token);\n+    }\n+\n+    return parseTypeName(token);\n   }\n \n   /**",
    "result_reason": "error: package TokenStream does not exist",
    "test_result": "ERROR"
}