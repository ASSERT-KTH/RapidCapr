{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n                final int offsetNextAdjusted = getOffset(nextAdjusted);\n                if (offsetNextAdjusted == offsetAdjusted) {\n                    // There is a DST gap, the instant passed as parameter\n                    // is within the gap. The algorithm try to adjust the offset\n                    // to ensure that the instant is strictly after the DST gap.\n                    // Due to that, wrong offset may be returned if the gap is too large.\n                    return offsetAdjusted + 1;\n                }\n                return offsetLocal;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..e0c9cb39 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                // if we just return offsetAdjusted then the time is pushed\n+                // back before the transition, whereas it should be\n+                // on or after the transition\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    return offsetLocal;\n+                }\n+                final int offsetNextAdjusted = getOffset(nextAdjusted);\n+                if (offsetNextAdjusted == offsetAdjusted) {\n+                    // There is a DST gap, the instant passed as parameter\n+                    // is within the gap. The algorithm try to adjust the offset\n+                    // to ensure that the instant is strictly after the DST gap.\n+                    // Due to that, wrong offset may be returned if the gap is too large.\n+                    return offsetAdjusted + 1;\n+                }\n+                return offsetLocal;\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}