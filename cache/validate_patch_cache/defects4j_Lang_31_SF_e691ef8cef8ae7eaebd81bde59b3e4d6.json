{
    "patch": "public static boolean containsAny(final char[] str, final char[] searchChars) {\n    if (searchChars == null || str == null) {\n        return false;\n    }\n    final int len = str.length;\n    final int searchLen = searchChars.length;\n    final int max = Character.MAX_VALUE;\n    final boolean[] chrs = new boolean[max + 1];\n    for (final char searchChar : searchChars) {\n        if (searchChar < chrs.length) {\n            chrs[searchChar] = true;\n        }\n    }\n    for (int i = 0; i < len; i++) {\n        final char ch = str[i];\n        if (ch < chrs.length && chrs[ch]) {\n            if (Character.isHighSurrogate(ch)) {\n                if (i < len - 1) {\n                    final char ch2 = str[i + 1];\n                    if (ch2 < Character.MIN_SURROGATE || ch2 > Character.MAX_SURROGATE) {\n                        throw new IllegalArgumentException(\"Invalid surrogate pair at index \" + i + \": \" + ch + \", \" + ch2);\n                    }\n                    if (ch2 == searchChars[searchLen - 1]) {\n                        return true;\n                    }\n                }\n            } else {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..07cc3d4e 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,39 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final char[] str, final char[] searchChars) {\n+    if (searchChars == null || str == null) {\n+        return false;\n+    }\n+    final int len = str.length;\n+    final int searchLen = searchChars.length;\n+    final int max = Character.MAX_VALUE;\n+    final boolean[] chrs = new boolean[max + 1];\n+    for (final char searchChar : searchChars) {\n+        if (searchChar < chrs.length) {\n+            chrs[searchChar] = true;\n+        }\n+    }\n+    for (int i = 0; i < len; i++) {\n+        final char ch = str[i];\n+        if (ch < chrs.length && chrs[ch]) {\n+            if (Character.isHighSurrogate(ch)) {\n+                if (i < len - 1) {\n+                    final char ch2 = str[i + 1];\n+                    if (ch2 < Character.MIN_SURROGATE || ch2 > Character.MAX_SURROGATE) {\n+                        throw new IllegalArgumentException(\"Invalid surrogate pair at index \" + i + \": \" + ch + \", \" + ch2);\n+                    }\n+                    if (ch2 == searchChars[searchLen - 1]) {\n+                        return true;\n+                    }\n+                }\n+            } else {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}