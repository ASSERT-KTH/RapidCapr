{
    "patch": "    public void addValue(double value) {\n        sumImpl.increment(value);\n        sumsqImpl.increment(value);\n        minImpl.increment(value);\n        maxImpl.increment(value);\n        sumLogImpl.increment(value);\n        secondMoment.increment(value);\n        // If mean, variance or geomean have been overridden,\n        // need to increment these\n        if (!(meanImpl instanceof Mean)) {\n            meanImpl.increment(value);\n        } else {\n            Mean mean = (Mean) meanImpl;\n            if (!Double.isNaN(value)) {\n                mean.increment(value);\n                mean.increment();\n            }\n        }\n        if (!(varianceImpl instanceof Variance)) {\n            varianceImpl.increment(value);\n        } else {\n            Variance variance = (Variance) varianceImpl;\n            if (!Double.isNaN(value)) {\n                variance.increment(value);\n                variance.increment();\n            }\n        }\n        if (!(geoMeanImpl instanceof GeometricMean)) {\n            geoMeanImpl.increment(value);\n        } else {\n            GeometricMean geoMean = (GeometricMean) geoMeanImpl;\n            if (!Double.isNaN(value)) {\n                geoMean.increment(value);\n                geoMean.increment();\n            }\n        }\n        n++;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..8c0f44e99 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -157,12 +157,30 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n         // need to increment these\n         if (!(meanImpl instanceof Mean)) {\n             meanImpl.increment(value);\n+        } else {\n+            Mean mean = (Mean) meanImpl;\n+            if (!Double.isNaN(value)) {\n+                mean.increment(value);\n+                mean.increment();\n+            }\n         }\n         if (!(varianceImpl instanceof Variance)) {\n             varianceImpl.increment(value);\n+        } else {\n+            Variance variance = (Variance) varianceImpl;\n+            if (!Double.isNaN(value)) {\n+                variance.increment(value);\n+                variance.increment();\n+            }\n         }\n         if (!(geoMeanImpl instanceof GeometricMean)) {\n             geoMeanImpl.increment(value);\n+        } else {\n+            GeometricMean geoMean = (GeometricMean) geoMeanImpl;\n+            if (!Double.isNaN(value)) {\n+                geoMean.increment(value);\n+                geoMean.increment();\n+            }\n         }\n         n++;\n     }",
    "result_reason": "error: no suitable method found for increment()",
    "test_result": "ERROR"
}