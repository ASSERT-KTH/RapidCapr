{
    "patch": " Preconditions.checkState(fnScope.getRootNode().isFunction());\n    if (NodeUtil.isGetOrSetKey(fnScope.getRootNode().getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(fnScope.getRootNode());\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(fnScope.getRootNode());\n\n    if (!modifyCallers) {\n      for (int i = 0; i < argList.getChildCount(); i++) {\n        Node currentArg = argList.getChildAtIndex(i);\n        String argName = currentArg.getString();\n        Var var = fnScope.getVar(argName);\n        if (var == null) {\n          // An error occurred earlier in this function.\n          return;\n        }\n\n        if (!referenced.contains(var)) {\n          argList.removeChild(currentArg);\n          i--;\n          compiler.reportCodeChange();\n        }\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..a93baa86 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,35 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+ Preconditions.checkState(fnScope.getRootNode().isFunction());\n+    if (NodeUtil.isGetOrSetKey(fnScope.getRootNode().getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(fnScope.getRootNode());\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(fnScope.getRootNode());\n+\n+    if (!modifyCallers) {\n+      for (int i = 0; i < argList.getChildCount(); i++) {\n+        Node currentArg = argList.getChildAtIndex(i);\n+        String argName = currentArg.getString();\n+        Var var = fnScope.getVar(argName);\n+        if (var == null) {\n+          // An error occurred earlier in this function.\n+          return;\n+        }\n+\n+        if (!referenced.contains(var)) {\n+          argList.removeChild(currentArg);\n+          i--;\n+          compiler.reportCodeChange();\n+        }\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable argList is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}