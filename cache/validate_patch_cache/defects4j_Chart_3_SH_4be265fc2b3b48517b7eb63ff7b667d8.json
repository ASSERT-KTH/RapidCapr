{
    "patch": "            for (int index = start; index <= end && index < this.data.size(); index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clonedItem = (TimeSeriesDataItem) item.clone();\n                if (!copy.contains(clonedItem.getPeriod())) {\n                    copy.add(clonedItem);\n                }\n            }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..dd2d244 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,13 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+            for (int index = start; index <= end && index < this.data.size(); index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                TimeSeriesDataItem clonedItem = (TimeSeriesDataItem) item.clone();\n+                if (!copy.contains(clonedItem.getPeriod())) {\n+                    copy.add(clonedItem);\n+                }\n+            }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}