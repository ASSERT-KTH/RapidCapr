{
    "patch": "public static double getTypedPercent(String json) {\n    int typedListCount = 0, totalValueCount = 0;\n    boolean inTypedValue = false;\n    for (int i = 0; i < json.length(); i++) {\n        char c = json.charAt(i);\n        if (c == '\\'') {\n            inTypedValue = !inTypedValue;\n        } else if (inTypedValue && c == ':') {\n            typedListCount++;\n        } else if (c == ',') {\n            totalValueCount++;\n        }\n    }\n    if (totalValueCount == 0) {\n        return 100.0;\n    } else {\n        return (double)typedListCount / (double)totalValueCount * 100.0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..71963957 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    int typedListCount = 0, totalValueCount = 0;\n+    boolean inTypedValue = false;\n+    for (int i = 0; i < json.length(); i++) {\n+        char c = json.charAt(i);\n+        if (c == '\\'') {\n+            inTypedValue = !inTypedValue;\n+        } else if (inTypedValue && c == ':') {\n+            typedListCount++;\n+        } else if (c == ',') {\n+            totalValueCount++;\n+        }\n+    }\n+    if (totalValueCount == 0) {\n+        return 100.0;\n+    } else {\n+        return (double)typedListCount / (double)totalValueCount * 100.0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}