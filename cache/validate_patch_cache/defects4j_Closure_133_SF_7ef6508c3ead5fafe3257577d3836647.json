{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n\n    if (result == null || !result.startsWith(\"/**\")) {\n        return null;\n    }\n\n    result = result.trim().substring(3).trim();\n\n    if (result.endsWith(\"*/\")) {\n        result = result.substring(0, result.length() - 2).trim();\n    }\n\n    result = result.replaceAll(\"\\\\s*\\\\*\\\\s?\", \"\");\n\n    while (result.startsWith(\"@\")) {\n        int nextSpace = result.indexOf(' ');\n        if (nextSpace > -1) {\n            result = result.substring(nextSpace + 1).trim();\n        } else {\n            return null;\n        }\n    }\n\n    return result.trim();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..6281d820 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,32 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n+private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+\n+    if (result == null || !result.startsWith(\"/**\")) {\n+        return null;\n+    }\n+\n+    result = result.trim().substring(3).trim();\n+\n+    if (result.endsWith(\"*/\")) {\n+        result = result.substring(0, result.length() - 2).trim();\n+    }\n+\n+    result = result.replaceAll(\"\\\\s*\\\\*\\\\s?\", \"\");\n+\n+    while (result.startsWith(\"@\")) {\n+        int nextSpace = result.indexOf(' ');\n+        if (nextSpace > -1) {\n+            result = result.substring(nextSpace + 1).trim();\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    return result.trim();\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}