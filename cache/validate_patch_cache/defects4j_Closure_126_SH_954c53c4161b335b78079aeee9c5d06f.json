{
    "patch": "if (NodeUtil.hasFinally(n)) {\n        Node finallyBlock = n.getLastChild();\n        tryMinimizeExits(finallyBlock, exitType, labelName);\n        /* Don't try to minimize the exits of finally blocks,\n        * except when the finally block is empty, or when its only child is a block,\n        * as this can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n        if (finallyBlock.getFirstChild() == null) {\n          return;\n        } else if (finallyBlock.getFirstChild().isBlock()) {\n          tryMinimizeExits(finallyBlock.getFirstChild(), exitType, labelName);\n        }\n      } else {\n        Node nextNode = n.getNext();\n        if (nextNode != null) {\n          tryMinimizeExits(nextNode, exitType, labelName);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..2a46106d 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,9 +138,24 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n+if (NodeUtil.hasFinally(n)) {\n         Node finallyBlock = n.getLastChild();\n         tryMinimizeExits(finallyBlock, exitType, labelName);\n+        /* Don't try to minimize the exits of finally blocks,\n+        * except when the finally block is empty, or when its only child is a block,\n+        * as this can cause problems if it changes the completion type of the finally\n+        * block. See ECMA 262 Sections 8.9 & 12.14\n+        */\n+        if (finallyBlock.getFirstChild() == null) {\n+          return;\n+        } else if (finallyBlock.getFirstChild().isBlock()) {\n+          tryMinimizeExits(finallyBlock.getFirstChild(), exitType, labelName);\n+        }\n+      } else {\n+        Node nextNode = n.getNext();\n+        if (nextNode != null) {\n+          tryMinimizeExits(nextNode, exitType, labelName);\n+        }\n       }\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}