{
    "patch": "    // Preserve the parameter names in the function signature.\n    Set<String> usedParams = new HashSet<>();\n    Node argList = getFunctionArgList(function);\n    for (Node arg : argList.children()) {\n      String argName = arg.getString();\n      if (fnScope.getDeclaredVar(argName) != null) {\n        usedParams.add(argName);\n      }\n    }\n\n    // To preserve function prototype property 'length', don't remove parameters.\n    boolean preserveLength = fnScope.getDeclaredVar(\"arguments\") != null;\n    if (preserveLength || NodeUtil.isGetOrSetKey(function.getParent())) {\n      return;\n    }\n\n    // Strip unreferenced args off the end of the function declaration.\n    Node lastArg;\n    while ((lastArg = argList.getLastChild()) != null) {\n      String varName = lastArg.getString();\n      Var var = fnScope.getVar(varName);\n      if (!usedParams.contains(varName)) {\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();\n      } else {\n        break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..f240ed36 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,32 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Preserve the parameter names in the function signature.\n+    Set<String> usedParams = new HashSet<>();\n+    Node argList = getFunctionArgList(function);\n+    for (Node arg : argList.children()) {\n+      String argName = arg.getString();\n+      if (fnScope.getDeclaredVar(argName) != null) {\n+        usedParams.add(argName);\n+      }\n+    }\n+\n+    // To preserve function prototype property 'length', don't remove parameters.\n+    boolean preserveLength = fnScope.getDeclaredVar(\"arguments\") != null;\n+    if (preserveLength || NodeUtil.isGetOrSetKey(function.getParent())) {\n+      return;\n+    }\n+\n+    // Strip unreferenced args off the end of the function declaration.\n+    Node lastArg;\n+    while ((lastArg = argList.getLastChild()) != null) {\n+      String varName = lastArg.getString();\n+      Var var = fnScope.getVar(varName);\n+      if (!usedParams.contains(varName)) {\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n+      } else {\n+        break;\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}