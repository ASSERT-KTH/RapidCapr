{
    "patch": "        int nOdCompare = Double.compare(doubleValue(), object.doubleValue());\n        return (nOdCompare < 0) ? -1 : ((nOdCompare > 0) ? +1 : 0);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..270bd5959 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -255,11 +255,8 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n-    public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n-    }\n+        int nOdCompare = Double.compare(doubleValue(), object.doubleValue());\n+        return (nOdCompare < 0) ? -1 : ((nOdCompare > 0) ? +1 : 0);\n     \n     /**\n      * Gets the fraction as a <tt>double</tt>. This calculates the fraction as",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}