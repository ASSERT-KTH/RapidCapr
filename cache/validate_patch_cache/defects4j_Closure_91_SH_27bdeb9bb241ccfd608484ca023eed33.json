{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\nif (n.getType() == Token.FUNCTION &&\n    parent != null &&\n    parent.getType() == Token.EXPR_RESULT) {\n  Node assign = parent.getFirstChild();\n  Node lhs = assign.getFirstChild();\n  if (lhs != null && lhs.getType() == Token.GETPROP &&\n      lhs.getLastChild().getString().equals(\"prototype\")) {\n    // The function is getting assigned to a prototype.\n    // Check if the prototype assignment occurs at top level in the script.\n    if (NodeUtil.getEnclosingType(assign) == Token.SCRIPT) {\n      return false;\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..679b74ad 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,21 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+if (n.getType() == Token.FUNCTION &&\n+    parent != null &&\n+    parent.getType() == Token.EXPR_RESULT) {\n+  Node assign = parent.getFirstChild();\n+  Node lhs = assign.getFirstChild();\n+  if (lhs != null && lhs.getType() == Token.GETPROP &&\n+      lhs.getLastChild().getString().equals(\"prototype\")) {\n+    // The function is getting assigned to a prototype.\n+    // Check if the prototype assignment occurs at top level in the script.\n+    if (NodeUtil.getEnclosingType(assign) == Token.SCRIPT) {\n+      return false;\n+    }\n+  }\n+}\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}