{
    "patch": "        if (val.length() > 20) {\n            try {\n                return createBigDecimal(val);\n            } catch (NumberFormatException e) {\n                // empty catch\n            }\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..66f4da40 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,13 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.length() > 20) {\n+            try {\n+                return createBigDecimal(val);\n+            } catch (NumberFormatException e) {\n+                // empty catch\n+            }\n+        }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "junit.framework.AssertionFailedError: createNumber(String) 18 failed expected:<109223372036854775807> but was:<109223372036854775807>",
    "test_result": "FAIL"
}