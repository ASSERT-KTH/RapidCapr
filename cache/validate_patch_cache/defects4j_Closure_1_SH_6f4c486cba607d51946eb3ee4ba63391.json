{
    "patch": "Node function = fnScope.getRootNode();\n\nPreconditions.checkState(function.isFunction());\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n  // The parameters object literal setters can not be removed.\n  return;\n}\n\nNode argList = getFunctionArgList(function);\nboolean modifyCallers = modifyCallSites\n    && callSiteOptimizer.canModifyCallers(function);\n\nif (argList.hasChildren() && !modifyCallers) {\n  // Get the last argument node\n  Node lastArg = argList.getLastChild();\n  // Check if the last argument is referenced\n  Var var = fnScope.getVar(lastArg.getString());\n  while (lastArg != null && !referenced.contains(var)) {\n    // argument not referenced, remove it\n    argList.removeChild(lastArg);\n    lastArg = argList.getLastChild();\n    if (lastArg != null) {\n      var = fnScope.getVar(lastArg.getString());\n      compiler.reportCodeChange();\n    }\n  }\n} else if (modifyCallers) {\n  callSiteOptimizer.optimize(fnScope, referenced);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..ef56a50c 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,35 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+\n+Preconditions.checkState(function.isFunction());\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+  // The parameters object literal setters can not be removed.\n+  return;\n+}\n+\n+Node argList = getFunctionArgList(function);\n+boolean modifyCallers = modifyCallSites\n+    && callSiteOptimizer.canModifyCallers(function);\n+\n+if (argList.hasChildren() && !modifyCallers) {\n+  // Get the last argument node\n+  Node lastArg = argList.getLastChild();\n+  // Check if the last argument is referenced\n+  Var var = fnScope.getVar(lastArg.getString());\n+  while (lastArg != null && !referenced.contains(var)) {\n+    // argument not referenced, remove it\n+    argList.removeChild(lastArg);\n+    lastArg = argList.getLastChild();\n+    if (lastArg != null) {\n+      var = fnScope.getVar(lastArg.getString());\n+      compiler.reportCodeChange();\n+    }\n+  }\n+} else if (modifyCallers) {\n+  callSiteOptimizer.optimize(fnScope, referenced);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}