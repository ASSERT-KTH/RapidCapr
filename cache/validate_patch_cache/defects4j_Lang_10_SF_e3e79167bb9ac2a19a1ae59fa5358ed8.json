{
    "patch": "private static String escapeRegex(String s, boolean unquote) {\n    StringBuilder sb = new StringBuilder();\n    for(int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        switch (c) {\n            case '(':\n            case ')':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '?':\n            case '.':\n            case '^':\n            case '$':\n                sb.append('\\\\');\n                break;\n            case '\\'':\n                if (unquote) {\n                    if (++i == s.length()) {\n                        return sb.toString();\n                    }\n                    c = s.charAt(i);\n                    break;\n                }\n                // Fall through for normal quotes\n            default:\n                if(Character.isWhitespace(c)) {\n                    sb.append(\"\\\\s+\");\n                } else {\n                    sb.append(c);\n                }\n        }\n        sb.append(c);\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..2fed3b82 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,47 +300,47 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n-            case '?':\n-            case '[':\n-            case ']':\n+private static String escapeRegex(String s, boolean unquote) {\n+    StringBuilder sb = new StringBuilder();\n+    for(int i = 0; i < s.length(); i++) {\n+        char c = s.charAt(i);\n+        switch (c) {\n             case '(':\n             case ')':\n+            case '[':\n+            case ']':\n             case '{':\n             case '}':\n             case '\\\\':\n             case '|':\n             case '*':\n             case '+':\n+            case '?':\n+            case '.':\n             case '^':\n             case '$':\n-            case '.':\n-                regex.append('\\\\');\n-            }\n-            regex.append(c);\n+                sb.append('\\\\');\n+                break;\n+            case '\\'':\n+                if (unquote) {\n+                    if (++i == s.length()) {\n+                        return sb.toString();\n+                    }\n+                    c = s.charAt(i);\n+                    break;\n+                }\n+                // Fall through for normal quotes\n+            default:\n+                if(Character.isWhitespace(c)) {\n+                    sb.append(\"\\\\s+\");\n+                } else {\n+                    sb.append(c);\n+                }\n         }\n-        return regex;\n+        sb.append(c);\n     }\n+    return sb.toString();\n+}\n \n     /**\n      * A class to store Key / Value pairs",
    "result_reason": "error: method escapeRegex in class FastDateParser cannot be applied to given types;",
    "test_result": "ERROR"
}