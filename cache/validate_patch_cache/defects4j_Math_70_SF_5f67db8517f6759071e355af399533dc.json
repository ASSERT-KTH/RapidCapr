{
    "patch": "public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n    if (f == null) {\n        throw new NullPointerException(\"Input function cannot be null\");\n    }\n    if (initial < min || initial > max) {\n        initial = (min + max) / 2.0;\n    }\n    return solve(min, max);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..10290be40 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -67,10 +67,16 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     }\n \n     /** {@inheritDoc} */\n-    public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n+public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+    if (f == null) {\n+        throw new NullPointerException(\"Input function cannot be null\");\n     }\n+    if (initial < min || initial > max) {\n+        initial = (min + max) / 2.0;\n+    }\n+    return solve(min, max);\n+}\n \n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max)",
    "result_reason": "java.lang.NullPointerException",
    "test_result": "FAIL"
}