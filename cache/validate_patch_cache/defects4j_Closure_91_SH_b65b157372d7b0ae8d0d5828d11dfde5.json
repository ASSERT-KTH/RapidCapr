{
    "patch": "      JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n      if (jsDoc != null && jsDoc.isConstructor()) {\n        if (n.getFirstChild() == null ||\n            n.getFirstChild().getNext() == null) {\n          return false;\n        }\n\n        if (!NodeUtil.isQualifiedName(\n                n.getFirstChild().getNext())) {\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..fa92815b 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n+      if (jsDoc != null && jsDoc.isConstructor()) {\n+        if (n.getFirstChild() == null ||\n+            n.getFirstChild().getNext() == null) {\n+          return false;\n+        }\n+\n+        if (!NodeUtil.isQualifiedName(\n+                n.getFirstChild().getNext())) {\n+          return false;\n+        }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}