{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    boolean isMeanOverridden = !(meanImpl instanceof Mean);\n    boolean isVarianceOverridden = !(varianceImpl instanceof Variance);\n    boolean isGeoMeanOverridden = !(geoMeanImpl instanceof GeometricMean);\n\n    if (isMeanOverridden) {\n        meanImpl.increment(value);\n    }\n    if (isVarianceOverridden) {\n        varianceImpl.increment(value);\n    }\n    if (isGeoMeanOverridden) {\n        geoMeanImpl.increment(value);\n    }\n\n    // check for NaN, infinity or subnormal\n    if (Double.isNaN(value) || Double.isInfinite(value) || Double.isSubnormal(value)) {\n        sumImpl.clear();\n        sumsqImpl.clear();\n        minImpl.clear();\n        maxImpl.clear();\n        sumLogImpl.clear();\n        secondMoment.clear();\n    } else {\n        if (isMeanOverridden || isVarianceOverridden || isGeoMeanOverridden) {\n            // If any of the statistics measures have been overridden and we don't have NaN value,\n            // then only we should calculate mean, variance and geometric mean.\n            boolean includeSubnormalValues = (value != 0.0);\n            StatisticalSummary statisticalSummary = new StatisticalSummaryValues(sumImpl.getResult(),\n                    sumsqImpl.getResult(), n, getMin(), getMax(), getMean(), getVariance(), getStandardDeviation(),\n                    getGeometricMean());\n            meanImpl.increment(value);\n            varianceImpl.increment(value);\n            geoMeanImpl.increment(value);\n            setStats(statisticalSummary, includeSubnormalValues); // recalculate n, sumImpl and sumsqImpl\n        } else {\n            n++;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..4a6d21de9 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,53 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    boolean isMeanOverridden = !(meanImpl instanceof Mean);\n+    boolean isVarianceOverridden = !(varianceImpl instanceof Variance);\n+    boolean isGeoMeanOverridden = !(geoMeanImpl instanceof GeometricMean);\n+\n+    if (isMeanOverridden) {\n+        meanImpl.increment(value);\n+    }\n+    if (isVarianceOverridden) {\n+        varianceImpl.increment(value);\n+    }\n+    if (isGeoMeanOverridden) {\n+        geoMeanImpl.increment(value);\n+    }\n+\n+    // check for NaN, infinity or subnormal\n+    if (Double.isNaN(value) || Double.isInfinite(value) || Double.isSubnormal(value)) {\n+        sumImpl.clear();\n+        sumsqImpl.clear();\n+        minImpl.clear();\n+        maxImpl.clear();\n+        sumLogImpl.clear();\n+        secondMoment.clear();\n+    } else {\n+        if (isMeanOverridden || isVarianceOverridden || isGeoMeanOverridden) {\n+            // If any of the statistics measures have been overridden and we don't have NaN value,\n+            // then only we should calculate mean, variance and geometric mean.\n+            boolean includeSubnormalValues = (value != 0.0);\n+            StatisticalSummary statisticalSummary = new StatisticalSummaryValues(sumImpl.getResult(),\n+                    sumsqImpl.getResult(), n, getMin(), getMax(), getMean(), getVariance(), getStandardDeviation(),\n+                    getGeometricMean());\n             meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n             varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n             geoMeanImpl.increment(value);\n+            setStats(statisticalSummary, includeSubnormalValues); // recalculate n, sumImpl and sumsqImpl\n+        } else {\n+            n++;\n         }\n-        n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}