{
    "patch": "                // adjust the next transition according to the previous offset\n                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n                // check if we are still before the same next transition\n                if (nextLocal == nextAdjusted) {\n                    // get the offset after the transition\n                    int offsetAfter = getOffset(nextLocal + 1);\n                    // check if the transition is a DST gap\n                    if (offsetAfter > offsetLocal) {\n                        // set the offset after the transition\n                        // to ensure the time is after the transition\n                        return offsetAfter;\n                    }\n                }\n                return offsetLocal;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..6b0f3158 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // adjust the next transition according to the previous offset\n+                long nextAdjusted = nextTransition(instantLocal - offsetLocal);\n+                // check if we are still before the same next transition\n+                if (nextLocal == nextAdjusted) {\n+                    // get the offset after the transition\n+                    int offsetAfter = getOffset(nextLocal + 1);\n+                    // check if the transition is a DST gap\n+                    if (offsetAfter > offsetLocal) {\n+                        // set the offset after the transition\n+                        // to ensure the time is after the transition\n+                        return offsetAfter;\n+                    }\n+                }\n+                return offsetLocal;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}