{
    "patch": "if (len >= 7) {\n    int pos = 2;\n    if (len >= 8 && (str.charAt(2) == 'i' || str.charAt(2) == 'I') &&\n            (str.charAt(3) == 'n' || str.charAt(3) == 'N') &&\n            (str.charAt(4) == 'a' || str.charAt(4) == 'A') &&\n            (str.charAt(5) == '-' || str.charAt(5) == '_')) {\n        pos = 6;\n        while (pos < len && str.charAt(pos) != '-') {\n            pos++;\n        }\n        if (pos == len) {\n            return new Locale(str.substring(0, 2), str.substring(6, len));\n        }\n    }\n    if (str.charAt(pos) != '_' && str.charAt(pos) != '-') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int sep = str.indexOf('_', pos + 1);\n    if (sep == -1) {\n        sep = str.indexOf('-', pos + 1);\n    }\n    if (sep == -1) {\n        if (len - pos == 3) {\n            return new Locale(str.substring(0, 2), str.substring(pos + 1));\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String language = str.substring(pos + 1, sep);\n    if (sep + 1 < len) {\n        int nextIndex = sep + 1;\n        sep = str.indexOf('_', nextIndex);\n        if (sep == -1) {\n            sep = str.indexOf('-', nextIndex);\n        }\n        if (sep != -1) {\n            return new Locale(str.substring(0, 2), language, str.substring(nextIndex, sep));\n        } else {\n            return new Locale(str.substring(0, 2), language, str.substring(nextIndex));\n        }\n    } else {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..5d907c77 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,49 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (len >= 7) {\n+    int pos = 2;\n+    if (len >= 8 && (str.charAt(2) == 'i' || str.charAt(2) == 'I') &&\n+            (str.charAt(3) == 'n' || str.charAt(3) == 'N') &&\n+            (str.charAt(4) == 'a' || str.charAt(4) == 'A') &&\n+            (str.charAt(5) == '-' || str.charAt(5) == '_')) {\n+        pos = 6;\n+        while (pos < len && str.charAt(pos) != '-') {\n+            pos++;\n+        }\n+        if (pos == len) {\n+            return new Locale(str.substring(0, 2), str.substring(6, len));\n+        }\n+    }\n+    if (str.charAt(pos) != '_' && str.charAt(pos) != '-') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int sep = str.indexOf('_', pos + 1);\n+    if (sep == -1) {\n+        sep = str.indexOf('-', pos + 1);\n+    }\n+    if (sep == -1) {\n+        if (len - pos == 3) {\n+            return new Locale(str.substring(0, 2), str.substring(pos + 1));\n+        }\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    String language = str.substring(pos + 1, sep);\n+    if (sep + 1 < len) {\n+        int nextIndex = sep + 1;\n+        sep = str.indexOf('_', nextIndex);\n+        if (sep == -1) {\n+            sep = str.indexOf('-', nextIndex);\n+        }\n+        if (sep != -1) {\n+            return new Locale(str.substring(0, 2), language, str.substring(nextIndex, sep));\n+        } else {\n+            return new Locale(str.substring(0, 2), language, str.substring(nextIndex));\n+        }\n+    } else {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "junit.framework.AssertionFailedError: Should fail as not underscore",
    "test_result": "FAIL"
}