{
    "patch": "import org.kohsuke.args4j.CmdLineException;\n\npublic int parseArguments(Parameters params) throws CmdLineException {\n  try {\n    String param = params.getParameter(0);\n    if (param == null) {\n      setter.addValue(true);\n      return 0;\n    } else {\n      String lowerParam = param.toLowerCase();\n      if (TRUES.contains(lowerParam)) {\n        setter.addValue(true);\n      } else if (FALSES.contains(lowerParam)) {\n        setter.addValue(false);\n      } else {\n        setter.addValue(true);\n        return 0;\n      }\n      return 1;\n    }\n  } catch (CmdLineException e) {\n    throw new CmdLineException(owner, Messages.ILLEGAL_BOOLEAN, e.getLocalizedMessage());\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..b8518bd6 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,30 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+import org.kohsuke.args4j.CmdLineException;\n+\n+public int parseArguments(Parameters params) throws CmdLineException {\n+  try {\n+    String param = params.getParameter(0);\n+    if (param == null) {\n+      setter.addValue(true);\n+      return 0;\n+    } else {\n+      String lowerParam = param.toLowerCase();\n+      if (TRUES.contains(lowerParam)) {\n+        setter.addValue(true);\n+      } else if (FALSES.contains(lowerParam)) {\n+        setter.addValue(false);\n+      } else {\n+        setter.addValue(true);\n+        return 0;\n+      }\n+      return 1;\n+    }\n+  } catch (CmdLineException e) {\n+    throw new CmdLineException(owner, Messages.ILLEGAL_BOOLEAN, e.getLocalizedMessage());\n+  }\n+}\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}