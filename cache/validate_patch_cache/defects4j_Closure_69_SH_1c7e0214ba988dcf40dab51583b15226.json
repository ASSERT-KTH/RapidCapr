{
    "patch": "      ObjectLiteral thisType = NodeUtil.getObjectLitProperty(\n          functionType.getTypeOfThis(), \"this\");\n      if (thisType != null) {\n        switch (n.getParent().getToken()) {\n          case Token.GETELEM:\n          case Token.GETPROP:\n            break;\n          default:\n            report(t, n, EXPECTED_THIS_TYPE);\n            break;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..90031812 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      ObjectLiteral thisType = NodeUtil.getObjectLitProperty(\n+          functionType.getTypeOfThis(), \"this\");\n+      if (thisType != null) {\n+        switch (n.getParent().getToken()) {\n+          case Token.GETELEM:\n+          case Token.GETPROP:\n+            break;\n+          default:\n+            report(t, n, EXPECTED_THIS_TYPE);\n+            break;\n+        }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}