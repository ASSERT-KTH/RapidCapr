{
    "patch": "public static String unescape(String input) {\n    StringBuilder result = new StringBuilder();\n    int i = 0;\n    while (i < input.length()) {\n        char c = input.charAt(i);\n        if (c == '\\\\' && i + 1 < input.length()) {\n            char nc = input.charAt(i + 1);\n            if (nc == 'n') {\n                result.append(\"\\n\");\n                i += 2;\n                continue;\n            } else if (nc == '\\\\') {\n                result.append(\"\\\\\");\n                i += 2;\n                continue;\n            } else if (nc == 'r') {\n                result.append(\"\\r\");\n                i += 2;\n                continue;\n            } else if (nc == 't') {\n                result.append(\"\\t\");\n                i += 2;\n                continue;\n            } else if (nc == '\\\"') {\n                result.append(\"\\\"\");\n                i += 2;\n                continue;\n            } else if (nc == '\\'') {\n                result.append(\"\\'\");\n                i += 2;\n                continue;\n            } else if (nc == 'b') {\n                result.append(\"\\b\");\n                i += 2;\n                continue;\n            } else if (nc == 'f') {\n                result.append(\"\\f\");\n                i += 2;\n                continue;\n            } else if (nc == 'u' && i + 5 < input.length()) {\n                try {\n                    char unicodeChar = (char) Integer.parseInt(input.substring(i + 2, i + 6), 16);\n                    result.append(unicodeChar);\n                    i += 6;\n                    continue;\n                } catch (NumberFormatException e) {\n                    throw new IllegalArgumentException(\"Invalid Unicode escape sequence in \\\"\" + input + \"\\\" at index \" + i, e);\n                }\n            }\n        }\n        result.append(c);\n        i++;\n    }\n    return result.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d4a26245 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,61 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String input) {\n+    StringBuilder result = new StringBuilder();\n+    int i = 0;\n+    while (i < input.length()) {\n+        char c = input.charAt(i);\n+        if (c == '\\\\' && i + 1 < input.length()) {\n+            char nc = input.charAt(i + 1);\n+            if (nc == 'n') {\n+                result.append(\"\\n\");\n+                i += 2;\n+                continue;\n+            } else if (nc == '\\\\') {\n+                result.append(\"\\\\\");\n+                i += 2;\n+                continue;\n+            } else if (nc == 'r') {\n+                result.append(\"\\r\");\n+                i += 2;\n+                continue;\n+            } else if (nc == 't') {\n+                result.append(\"\\t\");\n+                i += 2;\n+                continue;\n+            } else if (nc == '\\\"') {\n+                result.append(\"\\\"\");\n+                i += 2;\n+                continue;\n+            } else if (nc == '\\'') {\n+                result.append(\"\\'\");\n+                i += 2;\n+                continue;\n+            } else if (nc == 'b') {\n+                result.append(\"\\b\");\n+                i += 2;\n+                continue;\n+            } else if (nc == 'f') {\n+                result.append(\"\\f\");\n+                i += 2;\n+                continue;\n+            } else if (nc == 'u' && i + 5 < input.length()) {\n+                try {\n+                    char unicodeChar = (char) Integer.parseInt(input.substring(i + 2, i + 6), 16);\n+                    result.append(unicodeChar);\n+                    i += 6;\n+                    continue;\n+                } catch (NumberFormatException e) {\n+                    throw new IllegalArgumentException(\"Invalid Unicode escape sequence in \\\"\" + input + \"\\\" at index \" + i, e);\n+                }\n+            }\n+        }\n+        result.append(c);\n+        i++;\n+    }\n+    return result.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}