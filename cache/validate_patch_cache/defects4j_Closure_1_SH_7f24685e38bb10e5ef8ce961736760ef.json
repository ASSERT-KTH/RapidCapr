{
    "patch": "    ArrayList<Node> toRemove = new ArrayList<>();\n    if (!modifyCallers) {\n      // Identify unreferenced args\n      for (Node arg : argList.children()) {\n        if (arg.isDefaultValue() || arg.isRest()) {\n          // Ignore default value and rest parameter\n          continue;\n        }\n\n        Var var = fnScope.getVar(arg.getString());\n        if (!referenced.contains(var)) {\n          toRemove.add(arg);\n        }\n      }\n\n      // Strip unreferenced args off the end of the function declaration.\n      if (toRemove.size() > 0) {\n        for (Node arg : toRemove) {\n          argList.removeChild(arg);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5fac88c8 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,25 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    ArrayList<Node> toRemove = new ArrayList<>();\n+    if (!modifyCallers) {\n+      // Identify unreferenced args\n+      for (Node arg : argList.children()) {\n+        if (arg.isDefaultValue() || arg.isRest()) {\n+          // Ignore default value and rest parameter\n+          continue;\n+        }\n+\n+        Var var = fnScope.getVar(arg.getString());\n+        if (!referenced.contains(var)) {\n+          toRemove.add(arg);\n+        }\n+      }\n+\n+      // Strip unreferenced args off the end of the function declaration.\n+      if (toRemove.size() > 0) {\n+        for (Node arg : toRemove) {\n+          argList.removeChild(arg);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}