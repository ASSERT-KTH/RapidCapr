{
    "patch": "          Node valueParent = value.getParent();\n          if (valueParent!= null && valueParent.isAssign()) {\n            Node assignParent = valueParent.getParent();\n            if (assignParent != null && assignParent.isExprResult()) {\n              Node varParent = assignParent.getParent();\n              if (varParent != null && varParent.isName()) {\n                Name varName = varParent.getQualifiedName();\n                if (compiler.getCodingConvention().isSingletonGetter(varName, value)) {\n                  return false;\n                }\n              }\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..56e3c47f 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,18 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          Node valueParent = value.getParent();\n+          if (valueParent!= null && valueParent.isAssign()) {\n+            Node assignParent = valueParent.getParent();\n+            if (assignParent != null && assignParent.isExprResult()) {\n+              Node varParent = assignParent.getParent();\n+              if (varParent != null && varParent.isName()) {\n+                Name varName = varParent.getQualifiedName();\n+                if (compiler.getCodingConvention().isSingletonGetter(varName, value)) {\n+                  return false;\n+                }\n+              }\n+            }\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}