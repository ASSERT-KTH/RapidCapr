{
    "patch": "if (block.isFunction || block.isLoop) {\n  return false;\n} else if (block.isFinally) {\n  if (block.getParent().isFunction) {\n      return false;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..893d0ffc 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,13 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+if (block.isFunction || block.isLoop) {\n+  return false;\n+} else if (block.isFinally) {\n+  if (block.getParent().isFunction) {\n+      return false;\n+  }\n+}\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}