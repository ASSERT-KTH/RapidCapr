{
    "patch": "private static synchronized String getConvertedId(String id) {\n    if (id == null || id.isEmpty()) {\n        return id;\n    }\n\n    switch (id) {\n        case \"GMT\":\n            return \"UTC\";\n        case \"MIT\":\n            return \"Pacific/Apia\";\n        case \"HST\":\n            return \"Pacific/Honolulu\";\n        case \"AST\":\n            return \"America/Anchorage\";\n        case \"PST\":\n            return \"America/Los_Angeles\";\n        case \"MST\":\n            return \"America/Denver\";\n        case \"PNT\":\n            return \"America/Phoenix\";\n        case \"CST\":\n            return \"America/Chicago\";\n        case \"EST\":\n            return \"America/New_York\";\n        case \"IET\":\n            return \"America/Indianapolis\";\n        case \"PRT\":\n            return \"America/Puerto_Rico\";\n        case \"CNT\":\n            return \"America/St_Johns\";\n        case \"AGT\":\n            return \"America/Buenos_Aires\";\n        case \"BET\":\n            return \"America/Sao_Paulo\";\n        case \"WET\":\n            return \"Europe/London\";\n        case \"ECT\":\n            return \"Europe/Paris\";\n        case \"ART\":\n            return \"Africa/Cairo\";\n        case \"CAT\":\n            return \"Africa/Harare\";\n        case \"EET\":\n            return \"Europe/Bucharest\";\n        case \"EAT\":\n            return \"Africa/Addis_Ababa\";\n        case \"MET\":\n            return \"Asia/Tehran\";\n        case \"NET\":\n            return \"Asia/Yerevan\";\n        case \"PLT\":\n            return \"Asia/Karachi\";\n        case \"IST\":\n            return \"Asia/Kolkata\";\n        case \"BST\":\n            return \"Asia/Dhaka\";\n        case \"VST\":\n            return \"Asia/Saigon\";\n        case \"CTT\":\n            return \"Asia/Shanghai\";\n        case \"JST\":\n            return \"Asia/Tokyo\";\n        case \"ACT\":\n            return \"Australia/Darwin\";\n        case \"AET\":\n            return \"Australia/Sydney\";\n        case \"SST\":\n            return \"Pacific/Guadalcanal\";\n        case \"NST\":\n            return \"Pacific/Auckland\";\n        default:\n            throw new IllegalArgumentException(\"Invalid timezone ID: \" + id);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 5d89e34b..c3549900 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -555,47 +555,80 @@ public abstract class DateTimeZone implements Serializable {\n      * @param id  the old style id\n      * @return the new style id, null if not found\n      */\n-    private static synchronized String getConvertedId(String id) {\n-        Map<String, String> map = cZoneIdConversion;\n-        if (map == null) {\n-            // Backwards compatibility with TimeZone.\n-            map = new HashMap<String, String>();\n-            map.put(\"GMT\", \"UTC\");\n-            map.put(\"MIT\", \"Pacific/Apia\");\n-            map.put(\"HST\", \"Pacific/Honolulu\");  // JDK 1.1 compatible\n-            map.put(\"AST\", \"America/Anchorage\");\n-            map.put(\"PST\", \"America/Los_Angeles\");\n-            map.put(\"MST\", \"America/Denver\");  // JDK 1.1 compatible\n-            map.put(\"PNT\", \"America/Phoenix\");\n-            map.put(\"CST\", \"America/Chicago\");\n-            map.put(\"EST\", \"America/New_York\");  // JDK 1.1 compatible\n-            map.put(\"IET\", \"America/Indianapolis\");\n-            map.put(\"PRT\", \"America/Puerto_Rico\");\n-            map.put(\"CNT\", \"America/St_Johns\");\n-            map.put(\"AGT\", \"America/Buenos_Aires\");\n-            map.put(\"BET\", \"America/Sao_Paulo\");\n-            map.put(\"WET\", \"Europe/London\");\n-            map.put(\"ECT\", \"Europe/Paris\");\n-            map.put(\"ART\", \"Africa/Cairo\");\n-            map.put(\"CAT\", \"Africa/Harare\");\n-            map.put(\"EET\", \"Europe/Bucharest\");\n-            map.put(\"EAT\", \"Africa/Addis_Ababa\");\n-            map.put(\"MET\", \"Asia/Tehran\");\n-            map.put(\"NET\", \"Asia/Yerevan\");\n-            map.put(\"PLT\", \"Asia/Karachi\");\n-            map.put(\"IST\", \"Asia/Calcutta\");\n-            map.put(\"BST\", \"Asia/Dhaka\");\n-            map.put(\"VST\", \"Asia/Saigon\");\n-            map.put(\"CTT\", \"Asia/Shanghai\");\n-            map.put(\"JST\", \"Asia/Tokyo\");\n-            map.put(\"ACT\", \"Australia/Darwin\");\n-            map.put(\"AET\", \"Australia/Sydney\");\n-            map.put(\"SST\", \"Pacific/Guadalcanal\");\n-            map.put(\"NST\", \"Pacific/Auckland\");\n-            cZoneIdConversion = map;\n-        }\n-        return map.get(id);\n+private static synchronized String getConvertedId(String id) {\n+    if (id == null || id.isEmpty()) {\n+        return id;\n+    }\n+\n+    switch (id) {\n+        case \"GMT\":\n+            return \"UTC\";\n+        case \"MIT\":\n+            return \"Pacific/Apia\";\n+        case \"HST\":\n+            return \"Pacific/Honolulu\";\n+        case \"AST\":\n+            return \"America/Anchorage\";\n+        case \"PST\":\n+            return \"America/Los_Angeles\";\n+        case \"MST\":\n+            return \"America/Denver\";\n+        case \"PNT\":\n+            return \"America/Phoenix\";\n+        case \"CST\":\n+            return \"America/Chicago\";\n+        case \"EST\":\n+            return \"America/New_York\";\n+        case \"IET\":\n+            return \"America/Indianapolis\";\n+        case \"PRT\":\n+            return \"America/Puerto_Rico\";\n+        case \"CNT\":\n+            return \"America/St_Johns\";\n+        case \"AGT\":\n+            return \"America/Buenos_Aires\";\n+        case \"BET\":\n+            return \"America/Sao_Paulo\";\n+        case \"WET\":\n+            return \"Europe/London\";\n+        case \"ECT\":\n+            return \"Europe/Paris\";\n+        case \"ART\":\n+            return \"Africa/Cairo\";\n+        case \"CAT\":\n+            return \"Africa/Harare\";\n+        case \"EET\":\n+            return \"Europe/Bucharest\";\n+        case \"EAT\":\n+            return \"Africa/Addis_Ababa\";\n+        case \"MET\":\n+            return \"Asia/Tehran\";\n+        case \"NET\":\n+            return \"Asia/Yerevan\";\n+        case \"PLT\":\n+            return \"Asia/Karachi\";\n+        case \"IST\":\n+            return \"Asia/Kolkata\";\n+        case \"BST\":\n+            return \"Asia/Dhaka\";\n+        case \"VST\":\n+            return \"Asia/Saigon\";\n+        case \"CTT\":\n+            return \"Asia/Shanghai\";\n+        case \"JST\":\n+            return \"Asia/Tokyo\";\n+        case \"ACT\":\n+            return \"Australia/Darwin\";\n+        case \"AET\":\n+            return \"Australia/Sydney\";\n+        case \"SST\":\n+            return \"Pacific/Guadalcanal\";\n+        case \"NST\":\n+            return \"Pacific/Auckland\";\n+        default:\n+            throw new IllegalArgumentException(\"Invalid timezone ID: \" + id);\n     }\n+}\n \n     private static int parseOffset(String str) {\n         // Can't use a real chronology if called during class",
    "result_reason": "error: strings in switch are not supported in -source 1.5",
    "test_result": "ERROR"
}