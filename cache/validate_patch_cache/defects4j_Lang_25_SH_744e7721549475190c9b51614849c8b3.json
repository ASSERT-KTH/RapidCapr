{
    "patch": "for (int i = 0; i < utf16char.length; i++) {\n    int c = utf16char[i];\n    if (c <= 0xFF) { //check for non-ascii character\n        try {\n            out.write(escape(c, quote));\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    } else if (c >= 0xD800 && c < 0xDC00 && i + 1 < utf16char.length) {\n        int d = utf16char[i + 1];\n        if (d >= 0xDC00 && d <= 0xDFFF) {\n            i++;\n            int uc = ((c - 0xD800) << 10) + (d - 0xDC00) + 0x10000;\n            try {\n                out.write(escape(uc, quote));\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    } else {\n        byte[] bytes;\n        if (c < 0x800) {\n            bytes = new byte[2];\n            bytes[1] = (byte) (0x80 | (c & 0x3F));\n            c = (c >> 6) | 0xC0;\n        } else if (c < 0x10000) {\n            bytes = new byte[3];\n            bytes[2] = (byte) (0x80 | (c & 0x3F));\n            c = (c >> 6) | 0xC0;\n            bytes[1] = (byte) (0x80 | (c & 0x3F));\n            c = (c >> 6) | 0xE0;\n        } else {\n            bytes = new byte[4];\n            bytes[3] = (byte) (0x80 | (c & 0x3F));\n            c = (c >> 6) | 0xC0;\n            bytes[2] = (byte) (0x80 | (c & 0x3F));\n            c = (c >> 6) | 0xC0;\n            bytes[1] = (byte) (0x80 | (c & 0x3F));\n            c = (c >> 6) | 0xF0;\n            bytes[0] = (byte) c;\n        }\n        for (int j = bytes.length - 1; j >= 0; j--) {\n            try {\n                out.write(bytes[j]);\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}