{
    "patch": "    private static int gcd(int a, int b) {\n        while(b != 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..1e04695e 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,13 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+    private static int gcd(int a, int b) {\n+        while(b != 0) {\n+            int temp = b;\n+            b = a % b;\n+            a = temp;\n+        }\n+        return a;\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}