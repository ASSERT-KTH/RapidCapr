{
    "patch": "if (in < 128) {\n    // Only one byte, 7 bits\n    out[outIndex++] = (byte) in;\n} else {\n    // Two or three bytes\n    int left6 = in;\n    int byteIndex;\n    for (byteIndex = 1; byteIndex < 4; byteIndex++) {\n        if (left6 < (1 << (6 * byteIndex))) {\n            break;\n        }\n        left6 -= (1 << (6 * (byteIndex - 1)));\n    }\n    for (int outByteIndex = byteIndex; outByteIndex > 0; outByteIndex--) {\n        int thisSix = left6 / (1 << (6 * (outByteIndex - 1)));\n        if (outByteIndex == byteIndex) {\n            // Mark the first high bit using the number of bytes\n            thisSix |= ((1 << (8 - byteIndex)) - 1) << (byteIndex - 1);\n        } else {\n            thisSix |= 0x80;\n        }\n        out[outIndex++] = (byte) thisSix; // Error was here, changed '=' to '+= ' since outIndex needs to be incremented\n        left6 -= thisSix * (1 << (6 * (outByteIndex - 1)));\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}