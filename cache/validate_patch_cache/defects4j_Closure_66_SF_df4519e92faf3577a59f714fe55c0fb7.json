{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    double totalNum = 0.0;\n    double typedNum = 0.0;\n    try {\n        JSONObject obj = new JSONObject(jsonStr);\n        JSONArray arr = obj.getJSONArray(\"data\");\n        for (int i = 0; i < arr.length(); i++) {\n            JSONObject item = arr.getJSONObject(i);\n            String type = item.getString(\"type\");\n            Double value = Double.parseDouble(item.getString(\"value\"));\n            switch (type) {\n                case \"typed\":\n                    typedNum += value;\n                    break;\n                case \"total\":\n                    totalNum += value;\n                    break;\n            }\n        }\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n    return typedNum / totalNum * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..3053bd8d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,30 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    double totalNum = 0.0;\n+    double typedNum = 0.0;\n+    try {\n+        JSONObject obj = new JSONObject(jsonStr);\n+        JSONArray arr = obj.getJSONArray(\"data\");\n+        for (int i = 0; i < arr.length(); i++) {\n+            JSONObject item = arr.getJSONObject(i);\n+            String type = item.getString(\"type\");\n+            Double value = Double.parseDouble(item.getString(\"value\"));\n+            switch (type) {\n+                case \"typed\":\n+                    typedNum += value;\n+                    break;\n+                case \"total\":\n+                    totalNum += value;\n+                    break;\n+            }\n+        }\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+    return typedNum / totalNum * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}