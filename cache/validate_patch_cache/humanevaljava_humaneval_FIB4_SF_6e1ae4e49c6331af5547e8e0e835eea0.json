{
    "patch": "public static int fib4(int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"Input must be non-negative\");\n    } else if (n == 0) {\n        return 0;\n    }\n\n    int prev1 = 0, prev2 = 0, prev3 = 2, res = 0;\n    for (int i = 3; i <= n; i++) {\n        res = prev1 + prev2 + prev3;\n        prev1 = prev2;\n        prev2 = prev3;\n        prev3 = res;\n    }\n    return res;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIB4.java b/src/main/java/humaneval/buggy/FIB4.java\nindex e4ae6f3..d7bc440 100644\n--- a/src/main/java/humaneval/buggy/FIB4.java\n+++ b/src/main/java/humaneval/buggy/FIB4.java\n@@ -17,20 +17,20 @@ Please write a function to efficiently compute the n-th element of the fib4 numb\n 14 */\n \n public class FIB4 {\n-    public static int fib4(int n) {\n-        ArrayList<Integer> result = new ArrayList<Integer>(); \n-        result.add(0);\n-        result.add(0);\n-        result.add(2);\n-        result.add(0);\n+public static int fib4(int n) {\n+    if (n < 0) {\n+        throw new IllegalArgumentException(\"Input must be non-negative\");\n+    } else if (n == 0) {\n+        return 0;\n+    }\n \n-        if (n < 4)\n-            return result.get(n);\n-        for (int i = 4; i < n + 1; i += 1) {\n-            result.add(\n-                result.get(0) + result.get(1) + result.get(2) + result.get(3)\n-            );\n-        }\n-        return result.get(result.size() - 1);\n+    int prev1 = 0, prev2 = 0, prev3 = 2, res = 0;\n+    for (int i = 3; i <= n; i++) {\n+        res = prev1 + prev2 + prev3;\n+        prev1 = prev2;\n+        prev2 = prev3;\n+        prev3 = res;\n     }\n+    return res;\n+}\n }",
    "result_reason": "   TEST_FIB4.test_0:7 expected:<8> but was:<4>",
    "test_result": "FAIL"
}