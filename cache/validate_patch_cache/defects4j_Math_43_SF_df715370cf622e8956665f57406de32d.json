{
    "patch": "public Dfp multiply(final int x) {\n    Dfp result;\n    if (x >= 0 && x < RADIX) {\n        result = newInstance(this);\n        result.exp = exp;\n        result.mant[(digits - 1) / LOG10RADIX] =\n            mant[(digits - 1) / LOG10RADIX];\n        result.dot-= ((digits - 1) / LOG10RADIX);\n        result.nans = nans;\n        result.dnan = dnan;\n        // result.snan = snan;\n        result = result.multiplyFast(x);\n    } else {\n        result = multiply(newInstance(x));\n    }\n    return result;\n\n}\n\npublic void addValue(final double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    // If mean, variance or geomean have been overridden,\n    // need to increment these\n    meanImpl.increment(value);\n    varianceImpl.increment(value);\n    geoMeanImpl.increment(value);\n\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..5ee964fd9 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,41 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n-        }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n-        }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n-        }\n-        n++;\n-    }\n+public Dfp multiply(final int x) {\n+    Dfp result;\n+    if (x >= 0 && x < RADIX) {\n+        result = newInstance(this);\n+        result.exp = exp;\n+        result.mant[(digits - 1) / LOG10RADIX] =\n+            mant[(digits - 1) / LOG10RADIX];\n+        result.dot-= ((digits - 1) / LOG10RADIX);\n+        result.nans = nans;\n+        result.dnan = dnan;\n+        // result.snan = snan;\n+        result = result.multiplyFast(x);\n+    } else {\n+        result = multiply(newInstance(x));\n+    }\n+    return result;\n+\n+}\n+\n+public void addValue(final double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    // If mean, variance or geomean have been overridden,\n+    // need to increment these\n+    meanImpl.increment(value);\n+    varianceImpl.increment(value);\n+    geoMeanImpl.increment(value);\n+\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}