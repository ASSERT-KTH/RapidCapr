{
    "patch": "static boolean mayBeString(Node n, boolean recurse) {\n    boolean results;\n    if (recurse) {\n        results = allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n    } else {\n        results = mayBeStringHelper(n);\n    }\n    return results;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eef27927..2d12fe93 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1414,7 +1414,15 @@ public final class NodeUtil {\n \n   static boolean mayBeString(Node n, boolean recurse) {\n     if (recurse) {\n-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n+static boolean mayBeString(Node n, boolean recurse) {\n+    boolean results;\n+    if (recurse) {\n+        results = allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n+    } else {\n+        results = mayBeStringHelper(n);\n+    }\n+    return results;\n+}\n     } else {\n       return mayBeStringHelper(n);\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}