{
    "patch": "public static double regGamma(double x, double a) {\n    if (x <= 0 || a <= 0) {\n        throw new IllegalArgumentException(\"Input values must be greater than zero.\");\n    }\n    if (x > 1) {\n        return (regGamma(x - 1, a) * (x - 1) + Math.pow(x - 1, a) * Math.exp(-(x - 1))) / x;\n    }\n\n    final double EPSILON = 10e-15;\n    double prevSum = 0;\n    double sum = 1 / a;\n    int n = 1;\n    double term = sum;\n\n    while (Math.abs(sum - prevSum) > EPSILON) {\n        prevSum = sum;\n        term *= x / (a + n);\n        sum += term;\n        n++;\n    }\n\n    return sum * Math.pow(x, a) * Math.exp(-x);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..2acc0cb5b 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regGamma(double x, double a) {\n+    if (x <= 0 || a <= 0) {\n+        throw new IllegalArgumentException(\"Input values must be greater than zero.\");\n+    }\n+    if (x > 1) {\n+        return (regGamma(x - 1, a) * (x - 1) + Math.pow(x - 1, a) * Math.exp(-(x - 1))) / x;\n+    }\n+\n+    final double EPSILON = 10e-15;\n+    double prevSum = 0;\n+    double sum = 1 / a;\n+    int n = 1;\n+    double term = sum;\n+\n+    while (Math.abs(sum - prevSum) > EPSILON) {\n+        prevSum = sum;\n+        term *= x / (a + n);\n+        sum += term;\n+        n++;\n+    }\n+\n+    return sum * Math.pow(x, a) * Math.exp(-x);\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}