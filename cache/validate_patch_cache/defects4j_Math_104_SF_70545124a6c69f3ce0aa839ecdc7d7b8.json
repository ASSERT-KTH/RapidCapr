{
    "patch": "public static double regularizedGammaP(double a, double x, double eps) {\n    double gln = lnGamma(a);\n    if (x < (a + 1.0)) {\n        return 1.0 - regularizedGammaQSeries(a, x, eps);\n    } else {\n        double result = regularizedGammaContinuedFraction(a, x, eps);\n        return Math.exp(-x + a * Math.log(x) - gln) * result;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..24e84efec 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,15 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x, double eps) {\n+    double gln = lnGamma(a);\n+    if (x < (a + 1.0)) {\n+        return 1.0 - regularizedGammaQSeries(a, x, eps);\n+    } else {\n+        double result = regularizedGammaContinuedFraction(a, x, eps);\n+        return Math.exp(-x + a * Math.log(x) - gln) * result;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}