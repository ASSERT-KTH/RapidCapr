{
    "patch": "if (searchStr.isEmpty()) {\n    return true;\n}\nint strLength = str.length();\nint searchLength = searchStr.length();\nfor (int i = 0; i <= strLength - searchLength; i++) {\n    boolean match = true;\n    for (int j = 0; j < searchLength; j++) {\n        char c1 = str.charAt(i+j);\n        char c2 = searchStr.charAt(j);\n        if (Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n            match = false;\n            break;\n        }\n    }\n    if (match) {\n        return true;\n    }\n}\nreturn false;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..eb286933 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,26 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+if (searchStr.isEmpty()) {\n+    return true;\n+}\n+int strLength = str.length();\n+int searchLength = searchStr.length();\n+for (int i = 0; i <= strLength - searchLength; i++) {\n+    boolean match = true;\n+    for (int j = 0; j < searchLength; j++) {\n+        char c1 = str.charAt(i+j);\n+        char c2 = searchStr.charAt(j);\n+        if (Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n+            match = false;\n+            break;\n+        }\n+    }\n+    if (match) {\n+        return true;\n+    }\n+}\n+return false;\n     }\n \n     // IndexOfAny chars",
    "result_reason": "junit.framework.AssertionFailedError: en: 2 \u03c2 \u03c3",
    "test_result": "FAIL"
}