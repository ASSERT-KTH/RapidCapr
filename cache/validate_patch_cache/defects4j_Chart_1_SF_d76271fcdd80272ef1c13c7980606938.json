{
    "patch": "public LegendItemCollection getLegendItems() {\n    LegendItemCollection result = new LegendItemCollection();\n    if (this.plot == null) {\n        return result;\n    }\n    int index = this.plot.getIndexOf(this);\n    CategoryDataset dataset = this.plot.getDataset(index);\n    if (dataset == null || dataset.getRowCount() == 0) {\n        return result;\n    }\n    int seriesCount = dataset.getRowCount();\n    SortOrder order = plot.getRowRenderingOrder();\n    int i = order == SortOrder.ASCENDING ? 0 : seriesCount - 1;\n    int increment = order == SortOrder.ASCENDING ? 1 : -1;\n    while (i >= 0 && i < seriesCount) {\n        if (isSeriesVisibleInLegend(i)) {\n            LegendItem item = getLegendItem(index, i);\n            if (item != null) {\n                result.add(item);\n            }\n        }\n        i += increment;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java b/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java\nindex 226b25a..354e10e 100644\n--- a/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java\n@@ -1787,39 +1787,31 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer\n      *\n      * @see #getLegendItem(int, int)\n      */\n-    public LegendItemCollection getLegendItems() {\n-        LegendItemCollection result = new LegendItemCollection();\n-        if (this.plot == null) {\n-            return result;\n-        }\n-        int index = this.plot.getIndexOf(this);\n-        CategoryDataset dataset = this.plot.getDataset(index);\n-        if (dataset != null) {\n-            return result;\n-        }\n-        int seriesCount = dataset.getRowCount();\n-        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {\n-            for (int i = 0; i < seriesCount; i++) {\n-                if (isSeriesVisibleInLegend(i)) {\n-                    LegendItem item = getLegendItem(index, i);\n-                    if (item != null) {\n-                        result.add(item);\n-                    }\n-                }\n-            }\n-        }\n-        else {\n-            for (int i = seriesCount - 1; i >= 0; i--) {\n-                if (isSeriesVisibleInLegend(i)) {\n-                    LegendItem item = getLegendItem(index, i);\n-                    if (item != null) {\n-                        result.add(item);\n-                    }\n-                }\n-            }\n-        }\n-        return result;\n-    }\n+public LegendItemCollection getLegendItems() {\n+    LegendItemCollection result = new LegendItemCollection();\n+    if (this.plot == null) {\n+        return result;\n+    }\n+    int index = this.plot.getIndexOf(this);\n+    CategoryDataset dataset = this.plot.getDataset(index);\n+    if (dataset == null || dataset.getRowCount() == 0) {\n+        return result;\n+    }\n+    int seriesCount = dataset.getRowCount();\n+    SortOrder order = plot.getRowRenderingOrder();\n+    int i = order == SortOrder.ASCENDING ? 0 : seriesCount - 1;\n+    int increment = order == SortOrder.ASCENDING ? 1 : -1;\n+    while (i >= 0 && i < seriesCount) {\n+        if (isSeriesVisibleInLegend(i)) {\n+            LegendItem item = getLegendItem(index, i);\n+            if (item != null) {\n+                result.add(item);\n+            }\n+        }\n+        i += increment;\n+    }\n+    return result;\n+}\n \n     /**\n      * Adds an entity with the specified hotspot.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}