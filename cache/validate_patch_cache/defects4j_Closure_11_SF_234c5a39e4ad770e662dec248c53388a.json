{
    "patch": "public String getprop(String key) {\n  String[] cmd = {\"/system/bin/getprop\", key};\n  Process p;\n  try {\n      p = Runtime.getRuntime().exec(cmd);\n      BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n      String line = \"\";\n      StringBuilder output = new StringBuilder();\n      while ((line = br.readLine()) != null) {\n          output.append(line).append('\\n');\n      }\n      return output.toString().trim();\n  } catch (IOException e) {\n      String message = String.format(\"An exception occurred while getting property %s\", key);\n      System.err.println(message);\n      e.printStackTrace();\n      return null;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..0e5c754d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,25 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getprop(String key) {\n+  String[] cmd = {\"/system/bin/getprop\", key};\n+  Process p;\n+  try {\n+      p = Runtime.getRuntime().exec(cmd);\n+      BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+      String line = \"\";\n+      StringBuilder output = new StringBuilder();\n+      while ((line = br.readLine()) != null) {\n+          output.append(line).append('\\n');\n+      }\n+      return output.toString().trim();\n+  } catch (IOException e) {\n+      String message = String.format(\"An exception occurred while getting property %s\", key);\n+      System.err.println(message);\n+      e.printStackTrace();\n+      return null;\n+  }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}