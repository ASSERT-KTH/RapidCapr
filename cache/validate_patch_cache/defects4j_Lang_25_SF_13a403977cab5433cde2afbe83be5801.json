{
    "patch": "public class StringUtil {\n    \n    public static String escapeString(String str) {\n        if (str == null) {\n            return null;\n        }\n        StringBuilder sb = new StringBuilder();\n        int len = str.length();\n        for (int i = 0; i < len; i++) {\n            char c = str.charAt(i);\n            switch (c) {\n                case '\\n':\n                    sb.append(\"\\\\n\");\n                    break;\n                case '\\r':\n                    sb.append(\"\\\\r\");\n                    break;\n                case '\\t':\n                    sb.append(\"\\\\t\");\n                    break;\n                case '\\\"':\n                    sb.append(\"\\\\\\\"\");\n                    break;\n                case '\\'':\n                    sb.append(\"\\\\'\");\n                    break;\n                case '\\\\':\n                    sb.append(\"\\\\\\\\\");\n                    break;\n                case '\\b':\n                    sb.append(\"\\\\b\");\n                    break;\n                case '\\f':\n                    sb.append(\"\\\\f\");\n                    break;\n                default:\n                    if (c < 32 || c > 127) {\n                        sb.append(\"\\\\u\");\n                        String hex = Integer.toHexString(c);\n                        int n = 4 - hex.length();\n                        for (int j = 0; j < n; j++) {\n                            sb.append('0');\n                        }\n                        sb.append(hex);\n                    } else {\n                        sb.append(c);\n                    }\n                    break;\n            }\n        }\n        return sb.toString(); // fixed error here\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..6660a9c0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,59 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public class StringUtil {\n+    \n+    public static String escapeString(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n+        StringBuilder sb = new StringBuilder();\n+        int len = str.length();\n+        for (int i = 0; i < len; i++) {\n+            char c = str.charAt(i);\n+            switch (c) {\n+                case '\\n':\n+                    sb.append(\"\\\\n\");\n+                    break;\n+                case '\\r':\n+                    sb.append(\"\\\\r\");\n+                    break;\n+                case '\\t':\n+                    sb.append(\"\\\\t\");\n+                    break;\n+                case '\\\"':\n+                    sb.append(\"\\\\\\\"\");\n+                    break;\n+                case '\\'':\n+                    sb.append(\"\\\\'\");\n+                    break;\n+                case '\\\\':\n+                    sb.append(\"\\\\\\\\\");\n+                    break;\n+                case '\\b':\n+                    sb.append(\"\\\\b\");\n+                    break;\n+                case '\\f':\n+                    sb.append(\"\\\\f\");\n+                    break;\n+                default:\n+                    if (c < 32 || c > 127) {\n+                        sb.append(\"\\\\u\");\n+                        String hex = Integer.toHexString(c);\n+                        int n = 4 - hex.length();\n+                        for (int j = 0; j < n; j++) {\n+                            sb.append('0');\n+                        }\n+                        sb.append(hex);\n+                    } else {\n+                        sb.append(c);\n+                    }\n+                    break;\n+            }\n+        }\n+        return sb.toString(); // fixed error here\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}