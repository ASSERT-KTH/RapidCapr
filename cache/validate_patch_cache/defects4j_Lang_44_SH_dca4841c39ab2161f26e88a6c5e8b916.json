{
    "patch": "    if (val == null) {\n        return null;\n    }\n    val = val.trim();\n    if (val.isEmpty() || val.startsWith(\"--\") || val.endsWith(\"--\")) {\n        throw new NumberFormatException(\"\\\"\" + val + \"\\\" is not a valid number.\");\n    }\n    char firstChar = val.charAt(0);\n    if ((val.length() == 1 && !Character.isDigit(firstChar)) || !Character.isDigit(firstChar) && firstChar != '-' && firstChar != '+') {\n        throw new NumberFormatException(\"\\\"\" + val + \"\\\" is not a valid number.\");\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..4749989d 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,17 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+    if (val == null) {\n+        return null;\n+    }\n+    val = val.trim();\n+    if (val.isEmpty() || val.startsWith(\"--\") || val.endsWith(\"--\")) {\n+        throw new NumberFormatException(\"\\\"\" + val + \"\\\" is not a valid number.\");\n+    }\n+    char firstChar = val.charAt(0);\n+    if ((val.length() == 1 && !Character.isDigit(firstChar)) || !Character.isDigit(firstChar) && firstChar != '-' && firstChar != '+') {\n+        throw new NumberFormatException(\"\\\"\" + val + \"\\\" is not a valid number.\");\n+    }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "junit.framework.AssertionFailedError: isNumber(String)/createNumber(String) 3 failed",
    "test_result": "FAIL"
}