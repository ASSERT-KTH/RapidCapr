{
    "patch": "// Don't traverse functions that are getting lent to a prototype.\n      Node parentParent = parent.getParent();\n      if (NodeUtil.isPrototypeProperty(parentParent) ||\n          (NodeUtil.isName(parentParent) &&\n           parentParent.getParent().getType() == Token.MEMBER_FUNCTION_DEF &&\n           ((MemberFunctionDefTree) parentParent.getParent()).isStatic())) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..94697ce1 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,14 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+// Don't traverse functions that are getting lent to a prototype.\n+      Node parentParent = parent.getParent();\n+      if (NodeUtil.isPrototypeProperty(parentParent) ||\n+          (NodeUtil.isName(parentParent) &&\n+           parentParent.getParent().getType() == Token.MEMBER_FUNCTION_DEF &&\n+           ((MemberFunctionDefTree) parentParent.getParent()).isStatic())) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}