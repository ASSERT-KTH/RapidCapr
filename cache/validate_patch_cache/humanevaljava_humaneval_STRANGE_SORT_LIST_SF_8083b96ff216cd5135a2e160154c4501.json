{
    "patch": "public static List<Integer> strange_sort_list(List<Integer> lst) {\n    List<Integer> result = new ArrayList<>();\n    if (lst == null || lst.isEmpty()) {\n        return result;\n    }\n    boolean useMin = true;\n    while (!lst.isEmpty()) {\n        int extrema;\n        if (useMin) {\n            extrema = Collections.min(lst);\n        } else {\n            extrema = Collections.max(lst);\n        }\n        result.add(extrema);\n        lst.remove(Integer.valueOf(extrema));\n        useMin = !useMin;\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\nindex 094f5de..8b379e2 100644\n--- a/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n+++ b/src/main/java/humaneval/buggy/STRANGE_SORT_LIST.java\n@@ -14,17 +14,23 @@ strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n strange_sort_list([]) == [] */\n \n public class STRANGE_SORT_LIST {\n-    public static List<Integer> strange_sort_list(List<Integer> lst) {\n-        List<Integer> result = new ArrayList<Integer>();\n-\n-        boolean switched = true;\n-        while (lst.size() > 0) {\n-            if (switched) {\n-                result.add(Collections.min(lst));\n-            } else {\n-                result.add(Collections.max(lst));\n-            }\n-        }\n+public static List<Integer> strange_sort_list(List<Integer> lst) {\n+    List<Integer> result = new ArrayList<>();\n+    if (lst == null || lst.isEmpty()) {\n         return result;\n     }\n+    boolean useMin = true;\n+    while (!lst.isEmpty()) {\n+        int extrema;\n+        if (useMin) {\n+            extrema = Collections.min(lst);\n+        } else {\n+            extrema = Collections.max(lst);\n+        }\n+        result.add(extrema);\n+        lst.remove(Integer.valueOf(extrema));\n+        useMin = !useMin;\n+    }\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}