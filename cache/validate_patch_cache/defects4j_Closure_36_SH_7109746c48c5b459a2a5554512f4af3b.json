{
    "patch": "    String[] expectedLines = {\n        \"strict digraph {\",\n        \"   graph [\",\n        \"     rankdir = \\\"LR\\\"\",\n        \"   ]\",\n        \"   splines=false;\",\n\n        \"  \\\"aexport\\\"[\",\n        \"    type=\\\"Ecma6Module\\\",\",\n        \"    module=\\\"goog:a\\\"\",\n        \"  ];\",\n        \"  \\\"bexport\\\"[\",\n        \"    type=\\\"Ecma6Module\\\",\",\n        \"    module=\\\"goog:b\\\"\",\n        \"  ];\",\n        \"  \\\"entry\\\"[\",\n        \"    type=\\\"Script\\\"\",\n        \"  ];\",\n        // These edges represent the exported symbols.\n        // Add them after the nodes to ensure they are rendered after\n        // the node entries.\n        \"  \\\"entry\\\" -> \\\"aexport\\\";\",\n        \"  \\\"entry\\\" -> \\\"bexport\\\";\",\n        // Add edges for the symbols exposed by \"a\".\n        \"  \\\"a-export-a\\\"[\",\n        \"    type=\\\"Export\\\",\",\n        \"    module=\\\"goog:a\\\"\",\n        \"  ];\",\n        \"  \\\"a-export-b\\\"[\",\n        \"    type=\\\"Export\\\",\",\n        \"    module=\\\"goog:a\\\"\",\n        \"  ];\",\n        \"  \\\"a-export-a\\\" -> \\\"dummy a\\\";\",\n        \"  \\\"a-export-b\\\" -> \\\"dummy b\\\";\",\n        // Add edges for the symbol exposed by \"b\".\n        \"  \\\"b-export-c\\\"[\",\n        \"    type=\\\"Export\\\",\",\n        \"    module=\\\"goog:b\\\"\",\n        \"  ];\",\n        \"  \\\"b-export-c\\\" -> \\\"dummy c\\\";\",\n        // Add edges for the symbols imported by \"b\".\n        \"  \\\"dummy a\\\" -> \\\"bimport\\\";\",\n        \"  \\\"dummy b\\\" -> \\\"bimport\\\";\",\n        // Add edges for the symbols imported by \"c\".\n        \"  \\\"dummy a\\\" -> \\\"cimport-a\\\";\",\n        \"  \\\"dummy c\\\" -> \\\"cimport-c\\\";\",\n        // Add edges for the internal dependencies.\n        \"  \\\"dummy a\\\" -> \\\"a-init\\\";\",\n        \"  \\\"dummy b\\\" -> \\\"a-init\\\";\",\n        \"  \\\"a-init\\\" -> \\\"a-fn\\\";\",\n        \"  \\\"a-fn\\\" -> \\\"a-var\\\";\",\n        \"  \\\"dummy c\\\" -> \\\"b-init\\\";\",\n        \"  \\\"b-init\\\" -> \\\"b-fn\\\";\",\n        \"  \\\"b-var\\\" -> \\\"b-import-b\\\";\",\n        \"  \\\"dummy a\\\" -> \\\"b-import-b\\\";\",\n        \"  \\\"b-fn\\\" -> \\\"b-var\\\";\",\n        \"  \\\"b-fn\\\" -> \\\"c-var\\\";\",\n        \"  \\\"c-var\\\" -> \\\"cimport-b\\\";\",\n        \"  \\\"a-fn\\\" -> \\\"cimport-a\\\";\",\n    };\n\n    String[] args = {\"--dependency_mode=PRUNE\",\n        \"--entry_point=goog:entry\",\n        \"--hide_warnings_for=\" + testSimpleDotExport.DUMMY_WARNING_CODE,\n        \"--format=DOT\",\n        testSimpleDotExport.getFilename(\n            \"simple_dot_export_entrypoint.js\",\n            testSimpleDotExport.LOAD_TYPE.BROWSER)};\n    String result = AbstractCommandLineRunnerTest.srcsToString(args);\n\n    testSimpleDotExport.checkDotOutput(expectedLines, result);\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..e1d4282f 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,78 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+    String[] expectedLines = {\n+        \"strict digraph {\",\n+        \"   graph [\",\n+        \"     rankdir = \\\"LR\\\"\",\n+        \"   ]\",\n+        \"   splines=false;\",\n+\n+        \"  \\\"aexport\\\"[\",\n+        \"    type=\\\"Ecma6Module\\\",\",\n+        \"    module=\\\"goog:a\\\"\",\n+        \"  ];\",\n+        \"  \\\"bexport\\\"[\",\n+        \"    type=\\\"Ecma6Module\\\",\",\n+        \"    module=\\\"goog:b\\\"\",\n+        \"  ];\",\n+        \"  \\\"entry\\\"[\",\n+        \"    type=\\\"Script\\\"\",\n+        \"  ];\",\n+        // These edges represent the exported symbols.\n+        // Add them after the nodes to ensure they are rendered after\n+        // the node entries.\n+        \"  \\\"entry\\\" -> \\\"aexport\\\";\",\n+        \"  \\\"entry\\\" -> \\\"bexport\\\";\",\n+        // Add edges for the symbols exposed by \"a\".\n+        \"  \\\"a-export-a\\\"[\",\n+        \"    type=\\\"Export\\\",\",\n+        \"    module=\\\"goog:a\\\"\",\n+        \"  ];\",\n+        \"  \\\"a-export-b\\\"[\",\n+        \"    type=\\\"Export\\\",\",\n+        \"    module=\\\"goog:a\\\"\",\n+        \"  ];\",\n+        \"  \\\"a-export-a\\\" -> \\\"dummy a\\\";\",\n+        \"  \\\"a-export-b\\\" -> \\\"dummy b\\\";\",\n+        // Add edges for the symbol exposed by \"b\".\n+        \"  \\\"b-export-c\\\"[\",\n+        \"    type=\\\"Export\\\",\",\n+        \"    module=\\\"goog:b\\\"\",\n+        \"  ];\",\n+        \"  \\\"b-export-c\\\" -> \\\"dummy c\\\";\",\n+        // Add edges for the symbols imported by \"b\".\n+        \"  \\\"dummy a\\\" -> \\\"bimport\\\";\",\n+        \"  \\\"dummy b\\\" -> \\\"bimport\\\";\",\n+        // Add edges for the symbols imported by \"c\".\n+        \"  \\\"dummy a\\\" -> \\\"cimport-a\\\";\",\n+        \"  \\\"dummy c\\\" -> \\\"cimport-c\\\";\",\n+        // Add edges for the internal dependencies.\n+        \"  \\\"dummy a\\\" -> \\\"a-init\\\";\",\n+        \"  \\\"dummy b\\\" -> \\\"a-init\\\";\",\n+        \"  \\\"a-init\\\" -> \\\"a-fn\\\";\",\n+        \"  \\\"a-fn\\\" -> \\\"a-var\\\";\",\n+        \"  \\\"dummy c\\\" -> \\\"b-init\\\";\",\n+        \"  \\\"b-init\\\" -> \\\"b-fn\\\";\",\n+        \"  \\\"b-var\\\" -> \\\"b-import-b\\\";\",\n+        \"  \\\"dummy a\\\" -> \\\"b-import-b\\\";\",\n+        \"  \\\"b-fn\\\" -> \\\"b-var\\\";\",\n+        \"  \\\"b-fn\\\" -> \\\"c-var\\\";\",\n+        \"  \\\"c-var\\\" -> \\\"cimport-b\\\";\",\n+        \"  \\\"a-fn\\\" -> \\\"cimport-a\\\";\",\n+    };\n+\n+    String[] args = {\"--dependency_mode=PRUNE\",\n+        \"--entry_point=goog:entry\",\n+        \"--hide_warnings_for=\" + testSimpleDotExport.DUMMY_WARNING_CODE,\n+        \"--format=DOT\",\n+        testSimpleDotExport.getFilename(\n+            \"simple_dot_export_entrypoint.js\",\n+            testSimpleDotExport.LOAD_TYPE.BROWSER)};\n+    String result = AbstractCommandLineRunnerTest.srcsToString(args);\n+\n+    testSimpleDotExport.checkDotOutput(expectedLines, result);\n+  }\n         }\n       }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}