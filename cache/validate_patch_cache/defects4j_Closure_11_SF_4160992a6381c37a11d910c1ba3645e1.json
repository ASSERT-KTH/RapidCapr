{
    "patch": "public String getProp(String key) {\n    Properties props = new Properties();\n    String value = \"\";\n    try (InputStream input = getClass().getClassLoader().getResourceAsStream(\"config.properties\")) {\n        props.load(input);\n        if (props.containsKey(key)) {\n            value = props.getProperty(key);\n        } else {\n            System.err.println(\"Property not found\");\n        }\n    } catch (IOException ex) {\n        System.err.println(\"Error reading config file\");\n    }\n    return value;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..0e3a28fe 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public String getProp(String key) {\n+    Properties props = new Properties();\n+    String value = \"\";\n+    try (InputStream input = getClass().getClassLoader().getResourceAsStream(\"config.properties\")) {\n+        props.load(input);\n+        if (props.containsKey(key)) {\n+            value = props.getProperty(key);\n+        } else {\n+            System.err.println(\"Property not found\");\n+        }\n+    } catch (IOException ex) {\n+        System.err.println(\"Error reading config file\");\n+    }\n+    return value;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: try-with-resources is not supported in -source 1.6",
    "test_result": "ERROR"
}