{
    "patch": "if (str == null || str.isEmpty()) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nint len = str.length();\nif (len < 2 || len > 10) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (!Character.isLowerCase(str.charAt(0)) || !Character.isLowerCase(str.charAt(1))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 2 && str.charAt(2) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 3 && str.charAt(3) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 4 && (len < 6 || str.charAt(4) != '_')) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 5 && !Character.isUpperCase(str.charAt(5))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 6 && str.charAt(6) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 7 && !Character.isUpperCase(str.charAt(7))) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 8 && str.charAt(8) != '_') {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nif (len > 9) {\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..947f1e50 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,50 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+if (str == null || str.isEmpty()) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+int len = str.length();\n+if (len < 2 || len > 10) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (!Character.isLowerCase(str.charAt(0)) || !Character.isLowerCase(str.charAt(1))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 2 && str.charAt(2) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 3 && str.charAt(3) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 4 && (len < 6 || str.charAt(4) != '_')) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 5 && !Character.isUpperCase(str.charAt(5))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 6 && str.charAt(6) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 7 && !Character.isUpperCase(str.charAt(7))) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 8 && str.charAt(8) != '_') {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n+\n+if (len > 9) {\n+    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: variable len is already defined in method toLocale(String)",
    "test_result": "ERROR"
}