{
    "patch": "private String getRemainingJSDocLine() {\n  String result = stream.getRemainingJSDocLine();\n  if(result == null) { \n    return null;\n  }\n  return result;\n}\n\npublic TextExtents getBounds(String text) {\n  setupFont(context.getFontRenderContext());\n  JSDocInfoParser jsdocParser =\n      new JSDocInfoParser(typeRegistry, getTextFormat().isStrictReferenceParsing());\n  InHtmlDoc inHtmlDoc = new InHtmlDoc();\n  inHtmlDoc.handle(text);\n  jsdocParser.parseComment(inHtmlDoc.getDoc(), inHtmlDoc.getStartLine());\n  if (inHtmlDoc.getCDataFunctionNames().size() > 0) {\n    return complexTextSize;\n  }\n  try {\n    jsdocParser.parse();\n  } catch (Exception e) {\n    // ignore the exception\n  }\n  return simpleTextSize;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..183d935f 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,31 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+  String result = stream.getRemainingJSDocLine();\n+  if(result == null) { \n+    return null;\n+  }\n+  return result;\n+}\n+\n+public TextExtents getBounds(String text) {\n+  setupFont(context.getFontRenderContext());\n+  JSDocInfoParser jsdocParser =\n+      new JSDocInfoParser(typeRegistry, getTextFormat().isStrictReferenceParsing());\n+  InHtmlDoc inHtmlDoc = new InHtmlDoc();\n+  inHtmlDoc.handle(text);\n+  jsdocParser.parseComment(inHtmlDoc.getDoc(), inHtmlDoc.getStartLine());\n+  if (inHtmlDoc.getCDataFunctionNames().size() > 0) {\n+    return complexTextSize;\n+  }\n+  try {\n+    jsdocParser.parse();\n+  } catch (Exception e) {\n+    // ignore the exception\n+  }\n+  return simpleTextSize;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}