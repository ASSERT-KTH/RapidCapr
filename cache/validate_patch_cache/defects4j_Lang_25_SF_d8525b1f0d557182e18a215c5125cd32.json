{
    "patch": "public static String unescape(String s) {\n        StringBuffer sb = new StringBuffer(s.length());\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            if (ch == '\\\\') {\n                if (++i < s.length()) {\n                    ch = s.charAt(i);\n                    switch (ch) {\n                        case 'n':\n                            sb.append('\\n');\n                            break;\n                        case 't':\n                            sb.append('\\t');\n                            break;\n                        case 'r':\n                            sb.append('\\r');\n                            break;\n                        case 'u':\n                            if (i + 4 < s.length()) {\n                                int code = Integer.parseInt(s.substring(i + 1, i + 5), 16);\n                                sb.append((char) code);\n                                i += 4;\n                                break;\n                            }\n                        default:\n                            // Unescape any other character by simply adding it to the string buffer\n                            sb.append(ch);\n                            break;\n                    }\n                }\n            } else {\n                sb.append(ch);\n            }\n        }\n        return sb.toString();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..8d03f6c8 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,42 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String unescape(String s) {\n+        StringBuffer sb = new StringBuffer(s.length());\n+        for (int i = 0; i < s.length(); i++) {\n+            char ch = s.charAt(i);\n+            if (ch == '\\\\') {\n+                if (++i < s.length()) {\n+                    ch = s.charAt(i);\n+                    switch (ch) {\n+                        case 'n':\n+                            sb.append('\\n');\n+                            break;\n+                        case 't':\n+                            sb.append('\\t');\n+                            break;\n+                        case 'r':\n+                            sb.append('\\r');\n+                            break;\n+                        case 'u':\n+                            if (i + 4 < s.length()) {\n+                                int code = Integer.parseInt(s.substring(i + 1, i + 5), 16);\n+                                sb.append((char) code);\n+                                i += 4;\n+                                break;\n+                            }\n+                        default:\n+                            // Unescape any other character by simply adding it to the string buffer\n+                            sb.append(ch);\n+                            break;\n+                    }\n+                }\n+            } else {\n+                sb.append(ch);\n+            }\n+        }\n+        return sb.toString();\n+    }\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}