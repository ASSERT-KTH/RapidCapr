{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n        if (!isPositiveDefinite(m)) {\n            throw new IllegalArgumentException(\"Matrix must be positive definite\");\n        }\n        final CholeskyDecomposition dec = new CholeskyDecomposition(m);\n        return dec.getL();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..c54db3f64 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,10 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+private RealMatrix squareRoot(RealMatrix m) {\n+        if (!isPositiveDefinite(m)) {\n+            throw new IllegalArgumentException(\"Matrix must be positive definite\");\n+        }\n+        final CholeskyDecomposition dec = new CholeskyDecomposition(m);\n+        return dec.getL();\n }",
    "result_reason": "error: reached end of file while parsing",
    "test_result": "ERROR"
}