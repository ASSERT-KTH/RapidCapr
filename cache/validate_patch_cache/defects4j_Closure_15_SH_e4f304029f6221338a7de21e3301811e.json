{
    "patch": "if (n != null && n.isCall()) {\n    Node callee = n.getFirstChild();\n    if (callee != null && callee.isQualifiedName() && \n        !callee.getJSDocInfo().hasNoSideEffectsAnnotation()) {\n        if (NodeUtil.functionCallHasSideEffects(n)) {\n            return true;\n        }\n    }\n}\nif (n != null && n.isNew()) {\n    Node ctor = n.getFirstChild();\n    if (ctor != null && ctor.isQualifiedName() && \n        !ctor.getJSDocInfo().hasNoSideEffectsAnnotation()) {\n        if (NodeUtil.constructorCallHasSideEffects(n)) {\n            return true;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..d5a8f08a 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,24 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n != null && n.isCall()) {\n+    Node callee = n.getFirstChild();\n+    if (callee != null && callee.isQualifiedName() && \n+        !callee.getJSDocInfo().hasNoSideEffectsAnnotation()) {\n+        if (NodeUtil.functionCallHasSideEffects(n)) {\n+            return true;\n+        }\n+    }\n+}\n+if (n != null && n.isNew()) {\n+    Node ctor = n.getFirstChild();\n+    if (ctor != null && ctor.isQualifiedName() && \n+        !ctor.getJSDocInfo().hasNoSideEffectsAnnotation()) {\n+        if (NodeUtil.constructorCallHasSideEffects(n)) {\n+            return true;\n+        }\n+    }\n+}\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}