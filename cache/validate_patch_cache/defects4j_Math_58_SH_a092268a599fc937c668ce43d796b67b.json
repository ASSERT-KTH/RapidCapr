{
    "patch": "        final double[] initialGuess = new double[guess.length];\n        System.arraycopy(guess, 0, initialGuess, 0, guess.length);\n        final WeightedObservedPoint[] observations = getObservations();\n        return fit(new Gaussian.Parametric(), observations, initialGuess, 0, new double[guess.length], -1.277);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..1fc5dde2f 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,10 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final double[] initialGuess = new double[guess.length];\n+        System.arraycopy(guess, 0, initialGuess, 0, guess.length);\n+        final WeightedObservedPoint[] observations = getObservations();\n+        return fit(new Gaussian.Parametric(), observations, initialGuess, 0, new double[guess.length], -1.277);\n     }\n \n     /**",
    "result_reason": "error: no suitable method found for fit(Parametric,WeightedObservedPoint[],double[],int,double[],double)",
    "test_result": "ERROR"
}