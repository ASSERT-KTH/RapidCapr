{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    ControlFlowGraph<Node> cfg = getCfg();\n    ExceptionHandlerCfgContext context = new ExceptionHandlerCfgContext();\n    ControlFlowGraphFinder.process(cfg, context, new NodeTraversal());\n    return context.handlerFound;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..2a01700b 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,12 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+    ControlFlowGraph<Node> cfg = getCfg();\n+    ExceptionHandlerCfgContext context = new ExceptionHandlerCfgContext();\n+    ControlFlowGraphFinder.process(cfg, context, new NodeTraversal());\n+    return context.handlerFound;\n+  }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}