{
    "patch": "    public static boolean containsIgnoreCase(String str, String searchStr) {\n        if (str == null || searchStr == null) {\n            return false;\n        }\n        String strLower = str.toLowerCase(Locale.ROOT);\n        String searchStrLower = searchStr.toLowerCase(Locale.ROOT);\n        int length = searchStrLower.length();\n        if (length == 0) {\n            return true;\n        }\n        for (int i = strLower.length() - length; i >= 0; i--) {\n            if (strLower.regionMatches(i, searchStrLower, 0, length)) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..802f95ea 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1045,7 +1045,23 @@ public class StringUtils {\n         if (str == null || searchStr == null) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+    public static boolean containsIgnoreCase(String str, String searchStr) {\n+        if (str == null || searchStr == null) {\n+            return false;\n+        }\n+        String strLower = str.toLowerCase(Locale.ROOT);\n+        String searchStrLower = searchStr.toLowerCase(Locale.ROOT);\n+        int length = searchStrLower.length();\n+        if (length == 0) {\n+            return true;\n+        }\n+        for (int i = strLower.length() - length; i >= 0; i--) {\n+            if (strLower.regionMatches(i, searchStrLower, 0, length)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n     }\n \n     // IndexOfAny chars",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}