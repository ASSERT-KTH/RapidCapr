{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    final double eps = 10e-15;\n    final int maxIterations = 1000;\n    double r = a;\n    double c = 1.0 / eps;\n    double d = 1.0 / r;\n    double ans = d;\n\n    for (int i = 1; i <= maxIterations; i++) {\n        double rn = -(a + i - 1) * r / i;\n        r = rn;\n        d = 1.0 / (rn * d + 1.0);\n        c = rn * c + 1.0;\n        double delta = rn * d;\n        ans *= delta;\n        if (Math.abs(delta - 1) < eps) {\n            return ans * Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n        }\n        if (i > 100 && Math.abs(delta - 1) > Math.max(eps, Math.abs(0.1 * ans))) {\n            throw new RuntimeException(\"Failed convergence\");\n        }\n    }\n    throw new RuntimeException(\"Failed convergence\");\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..9fb179cd4 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,30 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    final double eps = 10e-15;\n+    final int maxIterations = 1000;\n+    double r = a;\n+    double c = 1.0 / eps;\n+    double d = 1.0 / r;\n+    double ans = d;\n+\n+    for (int i = 1; i <= maxIterations; i++) {\n+        double rn = -(a + i - 1) * r / i;\n+        r = rn;\n+        d = 1.0 / (rn * d + 1.0);\n+        c = rn * c + 1.0;\n+        double delta = rn * d;\n+        ans *= delta;\n+        if (Math.abs(delta - 1) < eps) {\n+            return ans * Math.exp(-x + a * Math.log(x) - org.apache.commons.math3.special.Gamma.logGamma(a));\n+        }\n+        if (i > 100 && Math.abs(delta - 1) > Math.max(eps, Math.abs(0.1 * ans))) {\n+            throw new RuntimeException(\"Failed convergence\");\n+        }\n+    }\n+    throw new RuntimeException(\"Failed convergence\");\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}