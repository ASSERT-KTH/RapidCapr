{
    "patch": "@Test\npublic void testRegularizedGammaPositivePositive() {\n    double[] aValues = new double[]{0.1, 1.0, 5.5, 10.0, 100.0};\n    double[] zValues = new double[]{0.1, 1.0, 5.5, 10.0, 100.0};\n\n    double[][] expectedValues = new double[][]{\n            {0.038810517903012, 0.003329560203467}, {0.632120558828558, 0.367879441171442},\n            {0.994822424469698, 0.005177575530302}, {0.999999047672485, 9.523275515305996e-008},\n            {1.0, 6.914400106935229e-071}\n    };\n\n    for (int i = 0; i < aValues.length; i++) {\n        for (int j = 0; j < zValues.length; j++) {\n            double expected = expectedValues[i][j];\n            double actualP = Gamma.regularizedGammaP(aValues[i], zValues[j]);\n            TestUtils.assertEquals(expected, actualP, 10e-15);\n            double actualQ = Gamma.regularizedGammaQ(aValues[i], zValues[j]);\n            TestUtils.assertEquals(1 - expected, actualQ, 10e-15);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..8c797be89 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,27 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+@Test\n+public void testRegularizedGammaPositivePositive() {\n+    double[] aValues = new double[]{0.1, 1.0, 5.5, 10.0, 100.0};\n+    double[] zValues = new double[]{0.1, 1.0, 5.5, 10.0, 100.0};\n+\n+    double[][] expectedValues = new double[][]{\n+            {0.038810517903012, 0.003329560203467}, {0.632120558828558, 0.367879441171442},\n+            {0.994822424469698, 0.005177575530302}, {0.999999047672485, 9.523275515305996e-008},\n+            {1.0, 6.914400106935229e-071}\n+    };\n+\n+    for (int i = 0; i < aValues.length; i++) {\n+        for (int j = 0; j < zValues.length; j++) {\n+            double expected = expectedValues[i][j];\n+            double actualP = Gamma.regularizedGammaP(aValues[i], zValues[j]);\n+            TestUtils.assertEquals(expected, actualP, 10e-15);\n+            double actualQ = Gamma.regularizedGammaQ(aValues[i], zValues[j]);\n+            TestUtils.assertEquals(1 - expected, actualQ, 10e-15);\n+        }\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}