{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        try {\n            final EigenDecomposition dec = new EigenDecomposition(m);\n            return dec.getSquareRoot();\n        } catch (OutOfMemoryError e) {\n            // Try again with larger heap space\n            double defaultMaxSize = Runtime.getRuntime().maxMemory() / 1024 / 1024;\n            double newSize = defaultMaxSize * 2;\n            System.setProperty(\"jav",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..71c6f94c7 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,12 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n+        try {\n             final EigenDecomposition dec = new EigenDecomposition(m);\n             return dec.getSquareRoot();\n-    }\n+        } catch (OutOfMemoryError e) {\n+            // Try again with larger heap space\n+            double defaultMaxSize = Runtime.getRuntime().maxMemory() / 1024 / 1024;\n+            double newSize = defaultMaxSize * 2;\n+            System.setProperty(\"jav\n }",
    "result_reason": "error: unclosed string literal",
    "test_result": "ERROR"
}