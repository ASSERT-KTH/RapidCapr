{
    "patch": "                        && (numeric.chars().filter(ch -> ch == '-').count() <= 1) // check for only one '-' sign\n                        && (numeric.indexOf('-') == -1 // no '-' sign\n                            || numeric.startsWith(\"-\") && isDigits(numeric.substring(1)) // negative.number\n                            || numeric.endsWith(\"f\") || numeric.endsWith(\"d\") || numeric.endsWith(\"F\") || numeric.endsWith(\"D\") // suffix\n                            || (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))))) { // negative integer",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..ebc61030 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,11 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+                        && (numeric.chars().filter(ch -> ch == '-').count() <= 1) // check for only one '-' sign\n+                        && (numeric.indexOf('-') == -1 // no '-' sign\n+                            || numeric.startsWith(\"-\") && isDigits(numeric.substring(1)) // negative.number\n+                            || numeric.endsWith(\"f\") || numeric.endsWith(\"d\") || numeric.endsWith(\"F\") || numeric.endsWith(\"D\") // suffix\n+                            || (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))))) { // negative integer\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}