{
    "patch": "public final boolean isEmptyType() {\n    return isNoType() || (isObjectType() && isObjectParameterizedType() && !(isObjectClassType() || isCloneableType() || isSerializableType())) ||\n            isNullType() || isVoidType() || (isUnionType() && getUnionTypes().stream().allMatch(Type::isEmptyType)) ||\n            (isArrayType() && getComponentType().isEmptyType());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..9f483c0c 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,11 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    return isNoType() || (isObjectType() && isObjectParameterizedType() && !(isObjectClassType() || isCloneableType() || isSerializableType())) ||\n+            isNullType() || isVoidType() || (isUnionType() && getUnionTypes().stream().allMatch(Type::isEmptyType)) ||\n+            (isArrayType() && getComponentType().isEmptyType());\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}