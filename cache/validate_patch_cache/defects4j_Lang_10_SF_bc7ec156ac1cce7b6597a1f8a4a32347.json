{
    "patch": "private static String escapeRegex(String value) {\n    StringBuilder regex = new StringBuilder();\n    boolean wasWhite = false;\n    for (int i = 0; i < value.length(); i++) {\n        char c = value.charAt(i);\n        switch (c) {\n            case '.':\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '\\\\':\n                regex.append('\\\\').append(c);\n                wasWhite = false;\n                break;\n            case '\\'':\n                if (i + 1 < value.length() && value.charAt(i + 1) == '\\'') {\n                    regex.append(c);\n                    i++;\n                } else {\n                    wasWhite = false;\n                }\n                break;\n            default:\n                if (Character.isWhitespace(c)) {\n                    if (!wasWhite) {\n                        regex.append(\"\\\\s+\");\n                        wasWhite = true;\n                    }\n                } else {\n                    regex.append(c);\n                    wasWhite = false;\n                }\n                break;\n        }\n    }\n    return regex.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..4aa6791d 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,27 +300,13 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n+private static String escapeRegex(String value) {\n+    StringBuilder regex = new StringBuilder();\n+    boolean wasWhite = false;\n+    for (int i = 0; i < value.length(); i++) {\n+        char c = value.charAt(i);\n+        switch (c) {\n+            case '.':\n             case '?':\n             case '[':\n             case ']':\n@@ -328,19 +314,38 @@ public class FastDateParser implements DateParser, Serializable {\n             case ')':\n             case '{':\n             case '}':\n-            case '\\\\':\n             case '|':\n             case '*':\n             case '+':\n             case '^':\n             case '$':\n-            case '.':\n-                regex.append('\\\\');\n-            }\n-            regex.append(c);\n+            case '\\\\':\n+                regex.append('\\\\').append(c);\n+                wasWhite = false;\n+                break;\n+            case '\\'':\n+                if (i + 1 < value.length() && value.charAt(i + 1) == '\\'') {\n+                    regex.append(c);\n+                    i++;\n+                } else {\n+                    wasWhite = false;\n+                }\n+                break;\n+            default:\n+                if (Character.isWhitespace(c)) {\n+                    if (!wasWhite) {\n+                        regex.append(\"\\\\s+\");\n+                        wasWhite = true;\n+                    }\n+                } else {\n+                    regex.append(c);\n+                    wasWhite = false;\n+                }\n+                break;\n         }\n-        return regex;\n     }\n+    return regex.toString();\n+}\n \n     /**\n      * A class to store Key / Value pairs",
    "result_reason": "error: method escapeRegex in class FastDateParser cannot be applied to given types;",
    "test_result": "ERROR"
}