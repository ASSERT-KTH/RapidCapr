{
    "patch": "public static int multiply(int a, int b) {\n    int result = 0;\n    while (b != 0) {\n        if ((b & 1) != 0) {\n            result = add(result, a);\n        }\n        a = shiftLeft(a);\n        b = shiftRight(b);\n    }\n    return result;\n}\n\nprivate static int add(int a, int b) {\n    while (b != 0) {\n        int carry = a & b;\n        a = a ^ b;\n        b = carry << 1;\n    }\n    return a;\n}\n\nprivate static int shiftLeft(int x) {\n    return x << 1;\n}\n\nprivate static int shiftRight(int x) {\n    return x >> 1;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/MULTIPLY.java b/src/main/java/humaneval/buggy/MULTIPLY.java\nindex 7ea427a..2431039 100644\n--- a/src/main/java/humaneval/buggy/MULTIPLY.java\n+++ b/src/main/java/humaneval/buggy/MULTIPLY.java\n@@ -11,6 +11,33 @@ package humaneval.buggy;\n \n public class MULTIPLY {\n     public static int multiply(int a, int b) {\n-        return (a % 10) * (b % 10);\n+public static int multiply(int a, int b) {\n+    int result = 0;\n+    while (b != 0) {\n+        if ((b & 1) != 0) {\n+            result = add(result, a);\n+        }\n+        a = shiftLeft(a);\n+        b = shiftRight(b);\n+    }\n+    return result;\n+}\n+\n+private static int add(int a, int b) {\n+    while (b != 0) {\n+        int carry = a & b;\n+        a = a ^ b;\n+        b = carry << 1;\n+    }\n+    return a;\n+}\n+\n+private static int shiftLeft(int x) {\n+    return x << 1;\n+}\n+\n+private static int shiftRight(int x) {\n+    return x >> 1;\n+}\n     }\n }",
    "result_reason": " /tmp/humaneval-MULTIPLY/src/main/java/humaneval/buggy/MULTIPLY.java:[14,1] illegal start of expression",
    "test_result": "ERROR"
}