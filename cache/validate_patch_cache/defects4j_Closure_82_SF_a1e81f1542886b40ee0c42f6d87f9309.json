{
    "patch": "public void testIssue301() {\n    StringWriter sw = new StringWriter();\n    PrintWriter pw = new PrintWriter(sw);\n\n    Type type = new Type();\n\n    type.printWarnings(pw);\n\n    String warnings = sw.toString();\n\n    assertTrue(\"expected a warning containing empty type message\", \n               warnings.contains(\"empty type\"));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..21ce54e0 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,19 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public void testIssue301() {\n+    StringWriter sw = new StringWriter();\n+    PrintWriter pw = new PrintWriter(sw);\n+\n+    Type type = new Type();\n+\n+    type.printWarnings(pw);\n+\n+    String warnings = sw.toString();\n+\n+    assertTrue(\"expected a warning containing empty type message\", \n+               warnings.contains(\"empty type\"));\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}