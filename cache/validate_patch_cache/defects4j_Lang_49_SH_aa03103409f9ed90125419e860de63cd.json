{
    "patch": "        int gcd = greatestCommonDivisor(numerator, denominator);\n\n        if (gcd == denominator) {\n            return Fraction.getFraction(numerator / gcd, 1);\n        } else if (gcd == 1) {\n            return this;\n        } else {\n            return Fraction.getFraction(numerator / gcd, denominator / gcd);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..3f3ad238 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,14 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+        int gcd = greatestCommonDivisor(numerator, denominator);\n+\n+        if (gcd == denominator) {\n+            return Fraction.getFraction(numerator / gcd, 1);\n+        } else if (gcd == 1) {\n+            return this;\n+        } else {\n+            return Fraction.getFraction(numerator / gcd, denominator / gcd);\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}