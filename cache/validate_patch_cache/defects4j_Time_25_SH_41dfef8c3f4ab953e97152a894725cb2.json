{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal != nextAdjusted) {\n        int diff = offsetAdjusted - offsetLocal;\n        if ((instantLocal - nextLocal) >= diff * DateTimeConstants.MILLIS_PER_HOUR &&\n            (nextLocal - instantAdjusted) >= diff * DateTimeConstants.MILLIS_PER_HOUR)\n        {\n            return offsetLocal;\n        }\n        int offsetBefore = getOffset(nextLocal - 1);\n        int offsetAfter = getOffset(nextLocal);\n        if (offsetBefore <= offsetAfter) {\n            if (offsetLocal >= offsetBefore && offsetLocal < offsetAfter) {\n                return offsetLocal;\n            }\n            if (offsetAdjusted >= offsetBefore && offsetAdjusted < offsetAfter) {\n                return offsetBefore;\n            }\n            return offsetAfter;\n        }\n        if (offsetLocal >= offsetAfter || offsetLocal < offsetBefore) {\n            return offsetLocal;\n        }\n        return offsetAfter;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..ab3130da 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,33 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal != nextAdjusted) {\n+        int diff = offsetAdjusted - offsetLocal;\n+        if ((instantLocal - nextLocal) >= diff * DateTimeConstants.MILLIS_PER_HOUR &&\n+            (nextLocal - instantAdjusted) >= diff * DateTimeConstants.MILLIS_PER_HOUR)\n+        {\n+            return offsetLocal;\n+        }\n+        int offsetBefore = getOffset(nextLocal - 1);\n+        int offsetAfter = getOffset(nextLocal);\n+        if (offsetBefore <= offsetAfter) {\n+            if (offsetLocal >= offsetBefore && offsetLocal < offsetAfter) {\n+                return offsetLocal;\n+            }\n+            if (offsetAdjusted >= offsetBefore && offsetAdjusted < offsetAfter) {\n+                return offsetBefore;\n+            }\n+            return offsetAfter;\n+        }\n+        if (offsetLocal >= offsetAfter || offsetLocal < offsetBefore) {\n+            return offsetLocal;\n+        }\n+        return offsetAfter;\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}