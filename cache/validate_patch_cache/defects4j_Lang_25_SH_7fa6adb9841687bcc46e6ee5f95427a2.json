{
    "patch": "StringBuilder output = new StringBuilder();\nfor(Character c: input.toCharArray()) {\n    if(c > 127) {\n        output.append(String.format(\"\\\\u%04X\", (int) c));\n    } else {\n        switch(c) {\n            case '\\\"': output.append(\"\\\\\\\"\"); break;\n            case '\\\\': output.append(\"\\\\\\\\\"); break;\n            case '\\b': output.append(\"\\\\b\"); break;\n            case '\\f': output.append(\"\\\\f\"); break;\n            case '\\n': output.append(\"\\\\n\"); break;\n            case '\\r': output.append(\"\\\\r\"); break;\n            case '\\t': output.append(\"\\\\t\"); break;\n            default: output.append(c);\n        }\n    }\n}\nString result = output.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}