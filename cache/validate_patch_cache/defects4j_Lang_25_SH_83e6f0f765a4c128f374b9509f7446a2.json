{
    "patch": "public static String escapeISO8859_1(String input) {\n    StringBuilder sb = new StringBuilder(input.length());\n    for (int i = 0; i < input.length(); i++) {\n        char ch = input.charAt(i);\n        switch (ch) {\n            case '\\u00FF':\n                sb.append(\"\\\\FF\");\n                break;\n            case '\\u0000': case '\\b': case '\\t': case '\\n': case '\\f': case '\\r': case '\\\\': case '\\'':\n                sb.append('\\\\').append(ch);\n                break;\n            default:\n                if (ch >= 32 && ch < 127) {\n                    sb.append(ch);\n                } else {\n                    String encoding = Integer.toString(ch, 16).toUpperCase();\n                    if (encoding.length() < 2) sb.append(\"\\\\0\");\n                    sb.append('\\\\').append(encoding);\n                }\n                break;\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}