{
    "patch": "    public Fraction reduce() {\n        int temp_num = this.numerator;\n        int temp_den = this.denominator;\n        int common = greatestCommonDivisor(Math.abs(temp_num),temp_den);\n        if(common > 1){\n            temp_num /= common;\n            temp_den /= common;\n        }\n        return new Fraction(temp_num,temp_den);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..52b1e112 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,11 +463,14 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        int temp_num = this.numerator;\n+        int temp_den = this.denominator;\n+        int common = greatestCommonDivisor(Math.abs(temp_num),temp_den);\n+        if(common > 1){\n+            temp_num /= common;\n+            temp_den /= common;\n+        }\n+        return new Fraction(temp_num,temp_den);\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<-2/3> was not:<-2/3>",
    "test_result": "FAIL"
}