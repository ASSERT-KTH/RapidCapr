{
    "patch": "        if (val.startsWith(\"+\")) {\n            val = val.substring(1);\n            if (val.length() == 0) {\n                throw new NumberFormatException(\"\\\"+\\\" is not a valid number.\");\n            }\n        } else if ((val.charAt(0) == '-' && val.length() == 1) || !Character.isDigit(val.charAt(0))) {\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        }\n        if (val.startsWith(\"--\")) {\n            // this is protection for poorness in java.lang.BigDecimal.\n            // it accepts this as a legal value, but it does not appear\n            // to be in specification of class. OS X Java parses it to",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..5c5b2b1a 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,18 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.startsWith(\"+\")) {\n+            val = val.substring(1);\n+            if (val.length() == 0) {\n+                throw new NumberFormatException(\"\\\"+\\\" is not a valid number.\");\n+            }\n+        } else if ((val.charAt(0) == '-' && val.length() == 1) || !Character.isDigit(val.charAt(0))) {\n+            throw new NumberFormatException(val + \" is not a valid number.\");\n+        }\n+        if (val.startsWith(\"--\")) {\n+            // this is protection for poorness in java.lang.BigDecimal.\n+            // it accepts this as a legal value, but it does not appear\n+            // to be in specification of class. OS X Java parses it to\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}