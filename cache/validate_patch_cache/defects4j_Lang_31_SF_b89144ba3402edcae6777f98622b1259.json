{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    for (int i = 0; i < searchChars.length; i++) {\n        char searchChar = searchChars[i];\n        if (Character.isHighSurrogate(searchChar)) {\n            if (i + 1 < searchChars.length) {\n                i++;\n                if (Character.isLowSurrogate(searchChars[i])) {\n                    if (str.toString().indexOf(String.valueOf(searchChars, i - 1, 2)) >= 0) {\n                        return true;\n                    }\n                }\n            }\n        } else {\n            if (str.toString().indexOf(searchChar) >= 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..03332f13 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,26 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    for (int i = 0; i < searchChars.length; i++) {\n+        char searchChar = searchChars[i];\n+        if (Character.isHighSurrogate(searchChar)) {\n+            if (i + 1 < searchChars.length) {\n+                i++;\n+                if (Character.isLowSurrogate(searchChars[i])) {\n+                    if (str.toString().indexOf(String.valueOf(searchChars, i - 1, 2)) >= 0) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        } else {\n+            if (str.toString().indexOf(searchChar) >= 0) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}