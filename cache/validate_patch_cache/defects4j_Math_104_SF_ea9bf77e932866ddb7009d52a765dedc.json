{
    "patch": "public static double regularizedGamma(double a, double x) {\n    double eps = 1e-15;\n    double g = 0;\n    double t = x;\n    while (t < a + 1) {\n        g += Math.pow(t, a) * Math.exp(-t);\n        t += eps;\n    }\n    return g / gamma(a);\n}\n\npublic static double gamma(double x) {\n    if (x == 0) {\n        return Double.POSITIVE_INFINITY;\n    } else if (x < 0) {\n        return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n    } else {\n        double z = x - 1;\n        double a = 0.99999999999980993;\n        double[] p = { 676.5203681218851, -1259.1392167224028, 771.32342877765313,\n                -176.61502916214059, 12.507343278686905, -0.13857109526572012,\n                9.9843695780195716e-6, 1.5056327351493116e-7 };\n\n        double sum = p[0];\n        for (int i = 1; i < p.length; i++) {\n            sum += p[i] / (z + i);\n        }\n\n        double t = z + p.length - 0.5;\n\n        return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * sum / a;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..f11324940 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,39 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    double eps = 1e-15;\n+    double g = 0;\n+    double t = x;\n+    while (t < a + 1) {\n+        g += Math.pow(t, a) * Math.exp(-t);\n+        t += eps;\n+    }\n+    return g / gamma(a);\n+}\n+\n+public static double gamma(double x) {\n+    if (x == 0) {\n+        return Double.POSITIVE_INFINITY;\n+    } else if (x < 0) {\n+        return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n+    } else {\n+        double z = x - 1;\n+        double a = 0.99999999999980993;\n+        double[] p = { 676.5203681218851, -1259.1392167224028, 771.32342877765313,\n+                -176.61502916214059, 12.507343278686905, -0.13857109526572012,\n+                9.9843695780195716e-6, 1.5056327351493116e-7 };\n+\n+        double sum = p[0];\n+        for (int i = 1; i < p.length; i++) {\n+            sum += p[i] / (z + i);\n+        }\n+\n+        double t = z + p.length - 0.5;\n+\n+        return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * sum / a;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}