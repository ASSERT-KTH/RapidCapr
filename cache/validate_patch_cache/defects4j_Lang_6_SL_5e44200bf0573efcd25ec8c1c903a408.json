{
    "patch": "if (Character.isHighSurrogate(input.charAt(pos)) && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {\n    out.write(input.charAt(pos));\n    out.write(input.charAt(pos + 1));\n    pos += 2;\n} else {\n    int consumed = translate(input, pos, out);\n    if (consumed == 0) {\n        char[] c = Character.toChars(Character.codePointAt(input, pos));\n        out.write(c);\n        consumed = c.length;\n    }\n    pos += consumed;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..e3a9085f 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,19 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+if (Character.isHighSurrogate(input.charAt(pos)) && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {\n+    out.write(input.charAt(pos));\n+    out.write(input.charAt(pos + 1));\n+    pos += 2;\n+} else {\n+    int consumed = translate(input, pos, out);\n+    if (consumed == 0) {\n+        char[] c = Character.toChars(Character.codePointAt(input, pos));\n+        out.write(c);\n+        consumed = c.length;\n+    }\n+    pos += consumed;\n+}\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}