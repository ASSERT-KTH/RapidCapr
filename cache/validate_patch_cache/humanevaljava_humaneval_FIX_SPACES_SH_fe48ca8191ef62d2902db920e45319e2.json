{
    "patch": "public static String fix_spaces(String text) {\n    String new_text = \"\";\n    int i = 0;\n    int start = 0;\n    int end = 0;\n    while (i < text.length()) {\n        if (text.charAt(i) == ' ') end += 1;\n        else {\n            if (end - start > 2) {\n                new_text += \"-\" + text.substring(start, end);\n            }\n            else if (end - start > 0) {\n                if (new_text.length() > 0) new_text += \"_\";\n                new_text += text.substring(start, end);\n            }\n            new_text += text.substring(i, i + 1);\n            start = i + 1;\n            end = i + 1;\n        }\n        i += 1;\n    }\n    if (end - start > 2) {\n        new_text += \"-\" + text.substring(start, end);\n    }\n    else if (end - start > 0) {\n        if (new_text.length() > 0) new_text += \"_\";\n        new_text += text.substring(start, end);\n    }\n    return new_text;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..8b06690 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -33,6 +33,36 @@ public class FIX_SPACES {\n             i += 1;\n         }\n \n+public static String fix_spaces(String text) {\n+    String new_text = \"\";\n+    int i = 0;\n+    int start = 0;\n+    int end = 0;\n+    while (i < text.length()) {\n+        if (text.charAt(i) == ' ') end += 1;\n+        else {\n+            if (end - start > 2) {\n+                new_text += \"-\" + text.substring(start, end);\n+            }\n+            else if (end - start > 0) {\n+                if (new_text.length() > 0) new_text += \"_\";\n+                new_text += text.substring(start, end);\n+            }\n+            new_text += text.substring(i, i + 1);\n+            start = i + 1;\n+            end = i + 1;\n+        }\n+        i += 1;\n+    }\n+    if (end - start > 2) {\n+        new_text += \"-\" + text.substring(start, end);\n+    }\n+    else if (end - start > 0) {\n+        if (new_text.length() > 0) new_text += \"_\";\n+        new_text += text.substring(start, end);\n+    }\n+    return new_text;\n+}\n         return new_text;\n     }\n }",
    "result_reason": " /tmp/humaneval-FIX_SPACES/src/main/java/humaneval/buggy/FIX_SPACES.java:[36,1] illegal start of expression",
    "test_result": "ERROR"
}