{
    "patch": "    // Remove any unreferenced parameters from the function\n    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      for (Node child = argList.getFirstChild(); child != null;) {\n        Node next = child.getNext();\n        if (!referenced.contains(fnScope.getVar(child.getString()))) {\n          argList.removeChild(child);\n          compiler.reportCodeChange();\n        }\n        child = next;\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..e52b5de7 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,22 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Remove any unreferenced parameters from the function\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      for (Node child = argList.getFirstChild(); child != null;) {\n+        Node next = child.getNext();\n+        if (!referenced.contains(fnScope.getVar(child.getString()))) {\n+          argList.removeChild(child);\n+          compiler.reportCodeChange();\n+        }\n+        child = next;\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}