{
    "patch": "public boolean getprop(List<String> properties, OutputStream out) {\n    try {\n        ProcessBuilder pb = new ProcessBuilder(\"/system/bin/getprop\");\n        Process process = pb.start();\n        InputStream stdout = process.getInputStream();\n        byte[] buffer = new byte[4096];\n        int length;\n        while ((length = stdout.read(buffer)) != -1) {\n            out.write(buffer, 0, length);\n        }\n        process.waitFor();\n\n        // Check for warnings.\n        InputStream stderr = process.getErrorStream();\n        byte[] warnbuf = new byte[4096];\n        int numWarnings = stderr.read(warnbuf);\n        if (numWarnings > 0) {\n            String warnings = new String(warnbuf, 0, numWarnings);\n            System.err.println(\"getprop: warnings encountered:\\n\" + warnings);\n            return false;\n        }\n\n        return true;\n    } catch (IOException | InterruptedException e) {\n        System.err.println(\"getprop error: \" + e.getMessage());\n        e.printStackTrace();\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..4d8c0218 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,35 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public boolean getprop(List<String> properties, OutputStream out) {\n+    try {\n+        ProcessBuilder pb = new ProcessBuilder(\"/system/bin/getprop\");\n+        Process process = pb.start();\n+        InputStream stdout = process.getInputStream();\n+        byte[] buffer = new byte[4096];\n+        int length;\n+        while ((length = stdout.read(buffer)) != -1) {\n+            out.write(buffer, 0, length);\n+        }\n+        process.waitFor();\n+\n+        // Check for warnings.\n+        InputStream stderr = process.getErrorStream();\n+        byte[] warnbuf = new byte[4096];\n+        int numWarnings = stderr.read(warnbuf);\n+        if (numWarnings > 0) {\n+            String warnings = new String(warnbuf, 0, numWarnings);\n+            System.err.println(\"getprop: warnings encountered:\\n\" + warnings);\n+            return false;\n+        }\n+\n+        return true;\n+    } catch (IOException | InterruptedException e) {\n+        System.err.println(\"getprop error: \" + e.getMessage());\n+        e.printStackTrace();\n+        return false;\n+    }\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: multi-catch statement is not supported in -source 1.6",
    "test_result": "ERROR"
}