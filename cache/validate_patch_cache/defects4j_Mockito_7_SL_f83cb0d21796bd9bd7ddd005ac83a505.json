{
    "patch": "Type[] actualTypeArguments = null;\nif (typeVariable.getGenericDeclaration() instanceof Class) {\n    TypeVariable<?>[] typeVars = ((Class<?>) typeVariable.getGenericDeclaration()).getTypeParameters();\n    for (int i = 0; i < typeVars.length; i++) {\n        if (typeVars[i].equals(typeVariable)) {\n            actualTypeArguments = ((Class<?>) typeVariable.getGenericDeclaration()).getTypeParameters()[i]\n                    .getBounds();\n            break;\n        }\n    }\n} else if (typeVariable.getGenericDeclaration() instanceof ParameterizedType) {\n    actualTypeArguments = ((ParameterizedType) typeVariable.getGenericDeclaration())\n            .getActualTypeArguments();\n}\nif (actualTypeArguments != null) {\n    for (Type actualType : actualTypeArguments) {\n        registerTypeVariablesOn(actualType);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..128acee5b 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,30 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+Type[] actualTypeArguments = null;\n+if (typeVariable.getGenericDeclaration() instanceof Class) {\n+    TypeVariable<?>[] typeVars = ((Class<?>) typeVariable.getGenericDeclaration()).getTypeParameters();\n+    for (int i = 0; i < typeVars.length; i++) {\n+        if (typeVars[i].equals(typeVariable)) {\n+            actualTypeArguments = ((Class<?>) typeVariable.getGenericDeclaration()).getTypeParameters()[i]\n+                    .getBounds();\n+            break;\n+        }\n+    }\n+} else if (typeVariable.getGenericDeclaration() instanceof ParameterizedType) {\n+    actualTypeArguments = ((ParameterizedType) typeVariable.getGenericDeclaration())\n+            .getActualTypeArguments();\n+}\n+if (actualTypeArguments != null) {\n+    for (Type actualType : actualTypeArguments) {\n+        registerTypeVariablesOn(actualType);\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}