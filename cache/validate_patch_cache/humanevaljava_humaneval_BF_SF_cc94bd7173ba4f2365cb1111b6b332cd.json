{
    "patch": "public static ArrayList<String> bf(String planet1, String planet2) {\n    String[] planets = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"};\n    ArrayList<String> result = new ArrayList<>();\n\n    if (Arrays.asList(planets).contains(planet1) && Arrays.asList(planets).contains(planet2)) {\n        int startIndex = Arrays.asList(planets).indexOf(planet1);\n        int endIndex = Arrays.asList(planets).indexOf(planet2);\n        int lower = Math.min(startIndex, endIndex);\n        int upper = Math.max(startIndex, endIndex);\n\n        for (int i = lower + 1; i < upper; i++) {\n            result.add(planets[i]);\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/BF.java b/src/main/java/humaneval/buggy/BF.java\nindex dd3c22b..7decea5 100644\n--- a/src/main/java/humaneval/buggy/BF.java\n+++ b/src/main/java/humaneval/buggy/BF.java\n@@ -18,18 +18,21 @@ bf(\"Earth\", \"Mercury\") ==> (\"Venus\")\n bf(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\") */\n \n public class BF {\n-    public static ArrayList<String> bf(String planet1, String planet2) {\n-        ArrayList<String> planet_names = new ArrayList<String>(Arrays.asList(\n-            \"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\n-        ));\n+public static ArrayList<String> bf(String planet1, String planet2) {\n+    String[] planets = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"};\n+    ArrayList<String> result = new ArrayList<>();\n \n-        ArrayList<String> result = new ArrayList<String>();\n-        if ((! planet_names.contains(planet1)) || (! planet_names.contains(planet2)))\n-            return result;\n-        int planet1_index = planet_names.indexOf(planet1);\n-        int planet2_index = planet_names.indexOf(planet2);\n-        for (int i = planet1_index; i < planet2_index; i += 1)\n-            result.add(planet_names.get(i));\n-        return result;\n+    if (Arrays.asList(planets).contains(planet1) && Arrays.asList(planets).contains(planet2)) {\n+        int startIndex = Arrays.asList(planets).indexOf(planet1);\n+        int endIndex = Arrays.asList(planets).indexOf(planet2);\n+        int lower = Math.min(startIndex, endIndex);\n+        int upper = Math.max(startIndex, endIndex);\n+\n+        for (int i = lower + 1; i < upper; i++) {\n+            result.add(planets[i]);\n+        }\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}