{
    "patch": "public double getTypedPercent(JSONArray arr) {\n    double typedCount = 0;\n    double totalCount = arr.length();\n    for (int i = 0; i < totalCount; i++) {\n        JSONObject obj = arr.getJSONObject(i);\n        String type = obj.getString(\"type\");\n        if (type != null && !type.equals(\"null\") && !type.isEmpty()) {\n            typedCount += 1;\n        }\n    }\n    return (typedCount / totalCount) * 100;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..774fe13a 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,18 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public double getTypedPercent(JSONArray arr) {\n+    double typedCount = 0;\n+    double totalCount = arr.length();\n+    for (int i = 0; i < totalCount; i++) {\n+        JSONObject obj = arr.getJSONObject(i);\n+        String type = obj.getString(\"type\");\n+        if (type != null && !type.equals(\"null\") && !type.isEmpty()) {\n+            typedCount += 1;\n+        }\n+    }\n+    return (typedCount / totalCount) * 100;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}