{
    "patch": "public static double getTypedPercent(String jsonStr) {\n    double result = 0.0;\n    try {\n        JSONObject json = new JSONObject(jsonStr);\n        JSONArray data = json.getJSONArray(\"data\");\n\n        double total = 0.0;\n        double typed = 0.0;\n        int count = 0;\n\n        for (int i = 0; i < data.length(); i++) {\n            JSONObject item = data.getJSONObject(i);\n            if (item.has(\"total\") && item.has(\"typed\") && item.get(\"total\") instanceof Number && item.get(\"typed\") instanceof Number) {\n                total += item.getDouble(\"total\");\n                typed += item.getDouble(\"typed\");\n                count++;\n            }\n        }\n\n        if (count > 0 && total > 0.0) {\n            result = (typed / total) * 100.0;\n        }\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..db27b9d8 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,34 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String jsonStr) {\n+    double result = 0.0;\n+    try {\n+        JSONObject json = new JSONObject(jsonStr);\n+        JSONArray data = json.getJSONArray(\"data\");\n+\n+        double total = 0.0;\n+        double typed = 0.0;\n+        int count = 0;\n+\n+        for (int i = 0; i < data.length(); i++) {\n+            JSONObject item = data.getJSONObject(i);\n+            if (item.has(\"total\") && item.has(\"typed\") && item.get(\"total\") instanceof Number && item.get(\"typed\") instanceof Number) {\n+                total += item.getDouble(\"total\");\n+                typed += item.getDouble(\"typed\");\n+                count++;\n+            }\n+        }\n+\n+        if (count > 0 && total > 0.0) {\n+            result = (typed / total) * 100.0;\n+        }\n+    } catch (JSONException e) {\n+        e.printStackTrace();\n+    }\n+\n+    return result;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}