{
    "patch": "public static boolean same_chars(String s0, String s1) {\n    if (s0.length() != s1.length()) {\n        return false;\n    }\n    Map<Character, Integer> charFreqMap0 = getCharFrequencyMap(s0);\n    Map<Character, Integer> charFreqMap1 = getCharFrequencyMap(s1);\n\n    return charFreqMap0.equals(charFreqMap1);\n}\n\nprivate static Map<Character, Integer> getCharFrequencyMap(String s) {\n    Map<Character, Integer> charFreqMap = new HashMap<>();\n    for (char c : s.toCharArray()) {\n        charFreqMap.put(c, charFreqMap.getOrDefault(c, 0) + 1);\n    }\n    return charFreqMap;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SAME_CHARS.java b/src/main/java/humaneval/buggy/SAME_CHARS.java\nindex 9367e85..ef5a9b7 100644\n--- a/src/main/java/humaneval/buggy/SAME_CHARS.java\n+++ b/src/main/java/humaneval/buggy/SAME_CHARS.java\n@@ -17,16 +17,21 @@ False\n False */\n \n public class SAME_CHARS {\n-    public static boolean same_chars(String s0, String s1) {\n-        ArrayList<Character> set0 = new ArrayList<Character>();\n-        ArrayList<Character> set1 = new ArrayList<Character>();\n+public static boolean same_chars(String s0, String s1) {\n+    if (s0.length() != s1.length()) {\n+        return false;\n+    }\n+    Map<Character, Integer> charFreqMap0 = getCharFrequencyMap(s0);\n+    Map<Character, Integer> charFreqMap1 = getCharFrequencyMap(s1);\n+\n+    return charFreqMap0.equals(charFreqMap1);\n+}\n \n-        for (char c0 : s0.toCharArray()) {\n-            set0.add(c0);\n-        }\n-        for (char c1 : s1.toCharArray()) {\n-            set1.add(c1);\n-        }\n-        return set0.equals(set1);\n+private static Map<Character, Integer> getCharFrequencyMap(String s) {\n+    Map<Character, Integer> charFreqMap = new HashMap<>();\n+    for (char c : s.toCharArray()) {\n+        charFreqMap.put(c, charFreqMap.getOrDefault(c, 0) + 1);\n     }\n+    return charFreqMap;\n+}\n }",
    "result_reason": "   TEST_SAME_CHARS.test_0:7 expected:<false> but was:<true>",
    "test_result": "FAIL"
}