{
    "patch": "        // try with fixed point iteration if bracketing failed\n        if (getRootBracketMin() == null || getRootBracketMax() == null) {\n            return solveFixedPoint(f, min, max, initial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..9889b6302 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,9 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // try with fixed point iteration if bracketing failed\n+        if (getRootBracketMin() == null || getRootBracketMax() == null) {\n+            return solveFixedPoint(f, min, max, initial);\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}