{
    "patch": "    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    \n    ArrayList<Node> unusedArgs = new ArrayList<>();\n    for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n      String argName = arg.getString();\n      Var argVar = fnScope.getVar(argName);\n      if (!argNodeHasAssignment(arg) && argVar != null && !referenced.contains(argVar)) {\n        unusedArgs.add(arg);\n      }\n    }\n\n    for (Node unusedArg : unusedArgs) {\n      argList.removeChild(unusedArg);\n    }\n\n    compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..18372a3b 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,30 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return;\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    \n+    ArrayList<Node> unusedArgs = new ArrayList<>();\n+    for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n+      String argName = arg.getString();\n+      Var argVar = fnScope.getVar(argName);\n+      if (!argNodeHasAssignment(arg) && argVar != null && !referenced.contains(argVar)) {\n+        unusedArgs.add(arg);\n+      }\n+    }\n+\n+    for (Node unusedArg : unusedArgs) {\n+      argList.removeChild(unusedArg);\n+    }\n+\n+    compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}