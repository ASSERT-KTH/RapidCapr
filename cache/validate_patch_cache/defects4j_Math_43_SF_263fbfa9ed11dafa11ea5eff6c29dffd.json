{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    // If mean, variance or geomean have been overridden,\n    // and can handle NaN values, then increment them\n    if (meanImpl instanceof UnivariateStatistic) {\n        if (Double.isNaN(value)) {\n            ((UnivariateStatistic) meanImpl).increment(0); // handle NaN values for mean implementation\n        } else {\n            ((UnivariateStatistic) meanImpl).increment(value);\n        }\n    }\n    if (varianceImpl instanceof StorelessUnivariateStatistic) {\n        if (Double.isNaN(value)) {\n            ((StorelessUnivariateStatistic) varianceImpl).increment(0); // handle NaN values for variance implementation\n        } else {\n            ((StorelessUnivariateStatistic) varianceImpl).increment(value);\n        }\n    }\n    if (geoMeanImpl instanceof StorelessUnivariateStatistic) {\n        if (Double.isNaN(value)) {\n            ((StorelessUnivariateStatistic) geoMeanImpl).increment(Math.log(0)); // handle NaN values for geomean implementation\n        } else {\n            ((StorelessUnivariateStatistic) geoMeanImpl).increment(value);\n        }\n    }\n    n++;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..5c889efb7 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,39 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    // If mean, variance or geomean have been overridden,\n+    // and can handle NaN values, then increment them\n+    if (meanImpl instanceof UnivariateStatistic) {\n+        if (Double.isNaN(value)) {\n+            ((UnivariateStatistic) meanImpl).increment(0); // handle NaN values for mean implementation\n+        } else {\n+            ((UnivariateStatistic) meanImpl).increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+    }\n+    if (varianceImpl instanceof StorelessUnivariateStatistic) {\n+        if (Double.isNaN(value)) {\n+            ((StorelessUnivariateStatistic) varianceImpl).increment(0); // handle NaN values for variance implementation\n+        } else {\n+            ((StorelessUnivariateStatistic) varianceImpl).increment(value);\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+    }\n+    if (geoMeanImpl instanceof StorelessUnivariateStatistic) {\n+        if (Double.isNaN(value)) {\n+            ((StorelessUnivariateStatistic) geoMeanImpl).increment(Math.log(0)); // handle NaN values for geomean implementation\n+        } else {\n+            ((StorelessUnivariateStatistic) geoMeanImpl).increment(value);\n         }\n-        n++;\n     }\n+    n++;\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}