{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.MathUtils;\nimport org.apache.commons.math3.util.Precision;\nimport org.apache.commons.math3.stat.inference.TTest;\nimport org.apache.commons.math3.stat.inference.TestUtils;\n\npublic class GammaFunction {\n\n    public static double gamma(double x) { // function where the correction is made \n        if (x < 0.5) {\n            return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n        } else {\n            return Math.exp(logGamma(x));\n        }\n    }\n\n    public static double logGamma(double x) {\n        double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n        double ser = 101.19539853003;\n        return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n    }\n\n    public static void main(String[] args) {\n        double x = 1.5;\n        double expected = Gamma.gamma(x);\n        double actual = gamma(x);\n\n        TestUtils.assertEquals(expected, actual, 10e-15); // test function to compare expected and actual\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..d53641ab8 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,36 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.MathUtils;\n+import org.apache.commons.math3.util.Precision;\n+import org.apache.commons.math3.stat.inference.TTest;\n+import org.apache.commons.math3.stat.inference.TestUtils;\n+\n+public class GammaFunction {\n+\n+    public static double gamma(double x) { // function where the correction is made \n+        if (x < 0.5) {\n+            return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n+        } else {\n+            return Math.exp(logGamma(x));\n+        }\n+    }\n+\n+    public static double logGamma(double x) {\n+        double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n+        double ser = 101.19539853003;\n+        return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n+    }\n+\n+    public static void main(String[] args) {\n+        double x = 1.5;\n+        double expected = Gamma.gamma(x);\n+        double actual = gamma(x);\n+\n+        TestUtils.assertEquals(expected, actual, 10e-15); // test function to compare expected and actual\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}