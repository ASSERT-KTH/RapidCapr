{
    "patch": "public static List<Integer> count_up_to(int n) {\n    List<Integer> primes = new ArrayList<Integer>();\n    if (n < 2) {\n        return primes;\n    }\n\n    boolean[] isPrime = new boolean[n+1];\n    Arrays.fill(isPrime, true);\n\n    for (int i = 2; i <= n; i++) {\n        if (isPrime[i]) {\n            primes.add(i);\n            for (int j = i*i; j <= n; j += i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n\n    return primes;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COUNT_UP_TO.java b/src/main/java/humaneval/buggy/COUNT_UP_TO.java\nindex 2952188..b0cf42d 100644\n--- a/src/main/java/humaneval/buggy/COUNT_UP_TO.java\n+++ b/src/main/java/humaneval/buggy/COUNT_UP_TO.java\n@@ -14,18 +14,24 @@ import java.util.List;\n // count_up_to(18) => [2,3,5,7,11,13,17]\n \n public class COUNT_UP_TO {\n-    public static List<Integer> count_up_to(int n) {\n-        List<Integer> primes = new ArrayList<Integer>();\n+public static List<Integer> count_up_to(int n) {\n+    List<Integer> primes = new ArrayList<Integer>();\n+    if (n < 2) {\n+        return primes;\n+    }\n+\n+    boolean[] isPrime = new boolean[n+1];\n+    Arrays.fill(isPrime, true);\n \n-        for (int i = 2; i < n; i += 1){\n-            boolean is_prime = false;\n-            for (int j = 2; j < i; j += 1){\n-                if (i % j == 0) {\n-                    is_prime = false;\n-                }\n+    for (int i = 2; i <= n; i++) {\n+        if (isPrime[i]) {\n+            primes.add(i);\n+            for (int j = i*i; j <= n; j += i) {\n+                isPrime[j] = false;\n             }\n-            if (is_prime) primes.add(i);\n         }\n-        return primes;\n     }\n+\n+    return primes;\n+}\n }",
    "result_reason": " /tmp/humaneval-COUNT_UP_TO/src/main/java/humaneval/buggy/COUNT_UP_TO.java:[24,5] cannot find symbol",
    "test_result": "ERROR"
}