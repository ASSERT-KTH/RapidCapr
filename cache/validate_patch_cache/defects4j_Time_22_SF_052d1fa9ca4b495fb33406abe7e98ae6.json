{
    "patch": "        this(new Duration(duration));\n    }\n\n    protected BasePeriod(Duration duration) {\n        iDuration = duration;\n\n        iYears = FieldUtils.safeToInt(duration.getStandardYears());\n        iMonths = FieldUtils.safeToInt(duration.getStandardMonths() % 12);\n        iWeeks = FieldUtils.safeToInt(duration.getStandardDays() / 7);\n        iDays = FieldUtils.safeToInt(duration.getStandardDays() % 7);\n        iHours = FieldUtils.safeToInt(duration.getStandardHours() % 24);\n        iMinutes = FieldUtils.safeToInt(duration.getStandardMinutes() % 60);\n        iSeconds = FieldUtils.safeToInt(duration.getStandardSeconds() % 60);\n        iMillis = FieldUtils.safeToInt(duration.getMillis() % 1000);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..bc6aa40c 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,11 +218,21 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(new Duration(duration));\n     }\n \n+    protected BasePeriod(Duration duration) {\n+        iDuration = duration;\n+\n+        iYears = FieldUtils.safeToInt(duration.getStandardYears());\n+        iMonths = FieldUtils.safeToInt(duration.getStandardMonths() % 12);\n+        iWeeks = FieldUtils.safeToInt(duration.getStandardDays() / 7);\n+        iDays = FieldUtils.safeToInt(duration.getStandardDays() % 7);\n+        iHours = FieldUtils.safeToInt(duration.getStandardHours() % 24);\n+        iMinutes = FieldUtils.safeToInt(duration.getStandardMinutes() % 60);\n+        iSeconds = FieldUtils.safeToInt(duration.getStandardSeconds() % 60);\n+        iMillis = FieldUtils.safeToInt(duration.getMillis() % 1000);\n+\n     /**\n      * Creates a period from the given millisecond duration, which is only really\n      * suitable for durations less than one day.",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}