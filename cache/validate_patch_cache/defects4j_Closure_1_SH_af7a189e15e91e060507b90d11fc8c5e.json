{
    "patch": "    Deque<Node> unusedArgs = new ArrayDeque<>();\n    for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n      Var var = fnScope.getVar(arg.getString());\n      if (!referenced.contains(var)) {\n        unusedArgs.add(arg);\n      } else {\n        unusedArgs.clear();\n      }\n    }\n    unusedArgs.forEach(argList::removeChild);\n    compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..632caf2f 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,17 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Deque<Node> unusedArgs = new ArrayDeque<>();\n+    for (Node arg = argList.getFirstChild(); arg != null; arg = arg.getNext()) {\n+      Var var = fnScope.getVar(arg.getString());\n+      if (!referenced.contains(var)) {\n+        unusedArgs.add(arg);\n+      } else {\n+        unusedArgs.clear();\n+      }\n+    }\n+    unusedArgs.forEach(argList::removeChild);\n+    compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}