{
    "patch": "                int codePoint = Character.codePointAt(input, pos);\n                int written = Character.toChars(codePoint, cbuf, 0);\n                out.write(cbuf, 0, written);\n                pos += Character.charCount(codePoint);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..d37924de 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,10 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                int codePoint = Character.codePointAt(input, pos);\n+                int written = Character.toChars(codePoint, cbuf, 0);\n+                out.write(cbuf, 0, written);\n+                pos += Character.charCount(codePoint);\n             }\n         }\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}