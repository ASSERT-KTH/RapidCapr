{
    "patch": "public static boolean containsAny(final CharSequence string, final char[] searchChars) {\n    if (StringUtils.isEmpty(string) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n\n    final int strLen = string.length();\n    final int searchLen = searchChars.length;\n    final int[] chars = new int[Character.MAX_VALUE + 1];\n\n    for (int i = 0; i < searchLen; i++) {\n        final char ch = searchChars[i];\n        if (ch < chars.length) {\n            chars[ch] = 1;\n        }\n    }\n\n    for (int i = 0; i < strLen; i++) {\n        final char ch = string.charAt(i);\n        if (ch < chars.length && chars[ch] == 1) {\n            return true;\n        }\n    }\n\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..eb46f31b 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,31 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence string, final char[] searchChars) {\n+    if (StringUtils.isEmpty(string) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+\n+    final int strLen = string.length();\n+    final int searchLen = searchChars.length;\n+    final int[] chars = new int[Character.MAX_VALUE + 1];\n+\n+    for (int i = 0; i < searchLen; i++) {\n+        final char ch = searchChars[i];\n+        if (ch < chars.length) {\n+            chars[ch] = 1;\n+        }\n+    }\n+\n+    for (int i = 0; i < strLen; i++) {\n+        final char ch = string.charAt(i);\n+        if (ch < chars.length && chars[ch] == 1) {\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}