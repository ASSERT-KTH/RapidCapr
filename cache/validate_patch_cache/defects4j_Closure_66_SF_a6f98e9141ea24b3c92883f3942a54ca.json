{
    "patch": "public static double getTypedPercent(String json) {\n    ObjectMapper mapper = new ObjectMapper();\n    Map<String, Object> map = new HashMap<>();\n    double typedCount = 0;\n    try {\n        JsonNode rootNode = mapper.readTree(json);\n        Iterator<Map.Entry<String, JsonNode>> fieldsIterator = rootNode.fields();\n        while (fieldsIterator.hasNext()) {\n            Map.Entry<String, JsonNode> field = fieldsIterator.next();\n            String type = field.getValue().get(\"type\").asText();\n            if (type != null && !type.isEmpty()) {\n                typedCount += 1;\n            }\n        }\n        double totalCount = rootNode.size();\n        return (typedCount / totalCount) * 100.0;\n    } catch (Exception e) {\n        System.out.println(\"Error parsing JSON: \" + e.getMessage());\n        return 0;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..066b34e1 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,27 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+    ObjectMapper mapper = new ObjectMapper();\n+    Map<String, Object> map = new HashMap<>();\n+    double typedCount = 0;\n+    try {\n+        JsonNode rootNode = mapper.readTree(json);\n+        Iterator<Map.Entry<String, JsonNode>> fieldsIterator = rootNode.fields();\n+        while (fieldsIterator.hasNext()) {\n+            Map.Entry<String, JsonNode> field = fieldsIterator.next();\n+            String type = field.getValue().get(\"type\").asText();\n+            if (type != null && !type.isEmpty()) {\n+                typedCount += 1;\n+            }\n+        }\n+        double totalCount = rootNode.size();\n+        return (typedCount / totalCount) * 100.0;\n+    } catch (Exception e) {\n+        System.out.println(\"Error parsing JSON: \" + e.getMessage());\n+        return 0;\n+    }\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}