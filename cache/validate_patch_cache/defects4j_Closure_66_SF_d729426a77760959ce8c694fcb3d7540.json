{
    "patch": "public static double getTypedPercent(String json) {\n  double count = 0.0;\n  double totalCount = 0.0;\n  try {\n    JSONObject jsonObject = new JSONObject(json);\n    JSONArray features = jsonObject.getJSONArray(\"features\");\n    for (int i = 0; i < features.length(); i++) {\n        JSONObject feature = features.getJSONObject(i);\n        JSONObject properties = feature.getJSONObject(\"properties\");\n        String type = properties.optString(\"type\", \"\");\n        if (type.equals(\"Typed\")) {\n            count += 1.0;\n        }\n        totalCount += 1.0;\n    }\n  } catch (JSONException e) {\n    e.printStackTrace();\n  }\n  return (count / totalCount) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..6f02e588 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,26 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+  double count = 0.0;\n+  double totalCount = 0.0;\n+  try {\n+    JSONObject jsonObject = new JSONObject(json);\n+    JSONArray features = jsonObject.getJSONArray(\"features\");\n+    for (int i = 0; i < features.length(); i++) {\n+        JSONObject feature = features.getJSONObject(i);\n+        JSONObject properties = feature.getJSONObject(\"properties\");\n+        String type = properties.optString(\"type\", \"\");\n+        if (type.equals(\"Typed\")) {\n+            count += 1.0;\n+        }\n+        totalCount += 1.0;\n+    }\n+  } catch (JSONException e) {\n+    e.printStackTrace();\n+  }\n+  return (count / totalCount) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}