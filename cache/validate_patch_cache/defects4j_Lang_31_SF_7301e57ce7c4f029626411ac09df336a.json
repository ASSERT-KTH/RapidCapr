{
    "patch": "public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int csLength = sequence.length();\n    final int searchLength = searchChars.length;\n    final int csLast = csLength - 1;\n    final int searchLast = searchLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        final char ch = sequence.charAt(i);\n        if (searchChars[0] == ch && isCharSequenceEquals(sequence, i, searchChars)) {\n            return true;\n        }\n        if (Character.isHighSurrogate(ch)) {\n            if (searchLast == 0) {\n                return false;\n            }\n            if (i < csLast && isCharSequenceEquals(sequence, i, searchChars)) {\n                return true;\n            }\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                final char searchChar = searchChars[j];\n                if (searchChar == ch) {\n                    if (isCharSequenceEquals(sequence, i, searchChars)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isCharSequenceEquals(final CharSequence cs, final int start, final char[] searchChars) {\n    final int len = searchChars.length;\n    final int end = start + len;\n    int ci = 0;\n    for (int si = start; si < end; si++, ci++) {\n        if (cs.charAt(si) != searchChars[ci]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean isEmpty(final CharSequence cs) {\n    return cs == null || cs.length() == 0;\n}\n\nprivate static boolean isEmpty(final Object[] array) {\n    return array == null || array.length == 0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..6d85ed99 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,59 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence sequence, final char[] searchChars) {\n+    if (isEmpty(sequence) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int csLength = sequence.length();\n+    final int searchLength = searchChars.length;\n+    final int csLast = csLength - 1;\n+    final int searchLast = searchLength - 1;\n+    for (int i = 0; i < csLength; i++) {\n+        final char ch = sequence.charAt(i);\n+        if (searchChars[0] == ch && isCharSequenceEquals(sequence, i, searchChars)) {\n+            return true;\n+        }\n+        if (Character.isHighSurrogate(ch)) {\n+            if (searchLast == 0) {\n+                return false;\n+            }\n+            if (i < csLast && isCharSequenceEquals(sequence, i, searchChars)) {\n+                return true;\n+            }\n+        } else {\n+            for (int j = 0; j < searchLength; j++) {\n+                final char searchChar = searchChars[j];\n+                if (searchChar == ch) {\n+                    if (isCharSequenceEquals(sequence, i, searchChars)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isCharSequenceEquals(final CharSequence cs, final int start, final char[] searchChars) {\n+    final int len = searchChars.length;\n+    final int end = start + len;\n+    int ci = 0;\n+    for (int si = start; si < end; si++, ci++) {\n+        if (cs.charAt(si) != searchChars[ci]) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n+\n+private static boolean isEmpty(final CharSequence cs) {\n+    return cs == null || cs.length() == 0;\n+}\n+\n+private static boolean isEmpty(final Object[] array) {\n+    return array == null || array.length == 0;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}