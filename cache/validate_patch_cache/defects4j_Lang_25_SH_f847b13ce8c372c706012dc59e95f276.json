{
    "patch": "int j = 0;\nfor(int i = 0; i < utf8.length(); i++) {\n    char ch = utf8.charAt(i);\n    if (ch == '\\\\') {\n        if ((i+5) < utf8.length() && utf8.charAt(i+1) == 'u') {\n            int num = Integer.parseInt(utf8.substring(i+2,i+6),16);\n            i += 5;\n            sb.append((char)num);\n        } else if ((i+1) < utf8.length()) {\n            char sch = utf8.charAt(++i);\n            switch(sch) {\n                case '\\\\': sb.append('\\\\'); break;\n                case 'r': sb.append('\\r'); break;\n                case 'n': sb.append('\\n'); break;\n                case 't': sb.append('\\t'); break;\n                case 'f': sb.append('\\f'); break;\n                case 'b': sb.append('\\b'); break;\n                default: \n                // XXX: What to do here?\n            }\n        } else {\n            // XXX What to do here?\n        }\n    } else {\n        sb.append(ch);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}