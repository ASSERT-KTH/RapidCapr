{
    "patch": "    if (n == null) {\n      return false;\n    }\n\n    if (n.isDelProp() || NodeUtil.isCallOrNew(n)) {\n      return NodeUtil.mayEffectMutableState(n);\n    }\n\n    if (n.isExprResult() && n.getFirstChild().isGetProp() && !n.getFirstChild().getLastChild().isString()) {\n      return true;\n    }\n\n    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {\n        return true;\n      }\n    }\n\n    return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..bcf44a2a 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,25 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+    if (n == null) {\n+      return false;\n+    }\n+\n+    if (n.isDelProp() || NodeUtil.isCallOrNew(n)) {\n+      return NodeUtil.mayEffectMutableState(n);\n+    }\n+\n+    if (n.isExprResult() && n.getFirstChild().isGetProp() && !n.getFirstChild().getLastChild().isString()) {\n+      return true;\n+    }\n+\n+    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n+      if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {\n+        return true;\n+      }\n+    }\n+\n+    return false;\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}