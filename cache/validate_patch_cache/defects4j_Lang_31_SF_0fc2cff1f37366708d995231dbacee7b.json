{
    "patch": "public static boolean containsAny(final CharSequence string, final char... searchChars) {\n    if (isEmpty(string) || searchChars == null || searchChars.length == 0) {\n      return false;\n    }\n    final int len = string.length();\n    final int searchLen = searchChars.length;\n    final int endIndex = len - searchLen;\n    for (int i = 0; i <= endIndex; ++i) {\n      int j = 0;\n      int k = i;\n      while (j < searchLen) {\n        if (Character.codePointAt(string, k) == Character.codePointAt(searchChars, j)) {\n          j += Character.charCount(Character.codePointAt(string, k));\n          if (j == searchLen) {\n            return true;\n          }\n        }\n        else {\n          ++k;\n          if (k > endIndex) {\n            return false;\n          }\n          j = 0;\n        }\n      }\n    }\n    return false;\n}\n\nprivate static boolean isEmpty(final CharSequence cs) {\n    return cs == null || cs.length() == 0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..e72c4b6c 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,38 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence string, final char... searchChars) {\n+    if (isEmpty(string) || searchChars == null || searchChars.length == 0) {\n+      return false;\n+    }\n+    final int len = string.length();\n+    final int searchLen = searchChars.length;\n+    final int endIndex = len - searchLen;\n+    for (int i = 0; i <= endIndex; ++i) {\n+      int j = 0;\n+      int k = i;\n+      while (j < searchLen) {\n+        if (Character.codePointAt(string, k) == Character.codePointAt(searchChars, j)) {\n+          j += Character.charCount(Character.codePointAt(string, k));\n+          if (j == searchLen) {\n+            return true;\n+          }\n+        }\n+        else {\n+          ++k;\n+          if (k > endIndex) {\n+            return false;\n+          }\n+          j = 0;\n+        }\n+      }\n+    }\n+    return false;\n+}\n+\n+private static boolean isEmpty(final CharSequence cs) {\n+    return cs == null || cs.length() == 0;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}