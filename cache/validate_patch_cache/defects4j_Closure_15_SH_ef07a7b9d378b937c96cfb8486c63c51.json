{
    "patch": "        if (n.isForOfIn() || (n.isForIn() && n.getLastChild().isName())) {\n          Var var = null;\n          if (n.isForOfIn()) {\n            var = getVar(n.getSecondChild());\n          } else {\n            var = getVar(n.getLastChild());\n          }\n          if (var != null && !var.isLocal() && !var.isParam()) {\n            return true;\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..fa0451f7 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,17 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isForOfIn() || (n.isForIn() && n.getLastChild().isName())) {\n+          Var var = null;\n+          if (n.isForOfIn()) {\n+            var = getVar(n.getSecondChild());\n+          } else {\n+            var = getVar(n.getLastChild());\n+          }\n+          if (var != null && !var.isLocal() && !var.isParam()) {\n+            return true;\n+          }\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}