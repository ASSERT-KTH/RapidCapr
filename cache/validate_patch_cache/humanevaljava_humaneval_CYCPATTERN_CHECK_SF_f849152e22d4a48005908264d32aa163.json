{
    "patch": "public static boolean cycpattern_check(String a, String b) {\n    int lenA = a.length();\n    int lenB = b.length();\n    \n    if (lenA < lenB) {\n        return false; // a is shorter than b, no cyclical pattern possible\n    }\n    \n    String pat = b + b; // create a cyclical pattern of b\n    \n    for (int i = 0; i < lenA; i++) {\n        int j = i % lenB; // index to access pat cyclically\n        if (a.charAt(i) != pat.charAt(j)) {\n            return false; // mismatch found\n        }\n    }\n    \n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\nindex 763802b..da70662 100644\n--- a/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n+++ b/src/main/java/humaneval/buggy/CYCPATTERN_CHECK.java\n@@ -9,14 +9,23 @@ package humaneval.buggy;\n // cycpattern_check(\"himenss\",\"simen\") => True\n \n public class CYCPATTERN_CHECK {\n-    public static boolean cycpattern_check(String a, String b) {\n-        int l = b.length();\n-        String pat = b;\n-        for (int i = 0; i < a.length(); i += 1) {\n-            for (int j = 0; j < l; j += 1) {\n-                if (a.substring(i, i + l).equals(pat.substring(j, j + l))) return true;\n-            }\n+public static boolean cycpattern_check(String a, String b) {\n+    int lenA = a.length();\n+    int lenB = b.length();\n+    \n+    if (lenA < lenB) {\n+        return false; // a is shorter than b, no cyclical pattern possible\n+    }\n+    \n+    String pat = b + b; // create a cyclical pattern of b\n+    \n+    for (int i = 0; i < lenA; i++) {\n+        int j = i % lenB; // index to access pat cyclically\n+        if (a.charAt(i) != pat.charAt(j)) {\n+            return false; // mismatch found\n         }\n-        return false;\n     }\n+    \n+    return true;\n+}\n }",
    "result_reason": "   TEST_CYCPATTERN_CHECK.test_1:15 expected:<false> but was:<true>",
    "test_result": "FAIL"
}