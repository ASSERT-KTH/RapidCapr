{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                \n                int totalAdjustment = offsetAdjusted - offsetLocal;\n                \n                // make sure that we don't skip any transitions\n                while (nextAdjusted <= instantAdjusted) {\n                    totalAdjustment += (offsetAdjusted - getOffset(nextAdjusted));\n                    nextAdjusted = nextTransition(nextAdjusted);\n                }\n                \n                // make sure that we don't repeat any transitions\n                while (nextLocal <= instantAdjusted) {\n                    totalAdjustment -= (offsetLocal - getOffset(nextLocal));\n                    nextLocal = nextTransition(nextLocal);\n                }\n                \n                if (totalAdjustment <= 0) {\n                    return offsetAdjusted;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..c5399a9a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,28 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                \n+                int totalAdjustment = offsetAdjusted - offsetLocal;\n+                \n+                // make sure that we don't skip any transitions\n+                while (nextAdjusted <= instantAdjusted) {\n+                    totalAdjustment += (offsetAdjusted - getOffset(nextAdjusted));\n+                    nextAdjusted = nextTransition(nextAdjusted);\n+                }\n+                \n+                // make sure that we don't repeat any transitions\n+                while (nextLocal <= instantAdjusted) {\n+                    totalAdjustment -= (offsetLocal - getOffset(nextLocal));\n+                    nextLocal = nextTransition(nextLocal);\n+                }\n+                \n+                if (totalAdjustment <= 0) {\n+                    return offsetAdjusted;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}