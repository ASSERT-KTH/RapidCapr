{
    "patch": "      Node enclosingObjectFunction = NodeUtil.getEnclosingFunction(n.getParent());\n      JSDocInfo enclosingInfo = null;\n      if (enclosingObjectFunction != null) {\n        enclosingInfo = getFunctionJsDocInfo(enclosingObjectFunction);\n        if (enclosingInfo == null || !enclosingInfo.isConstructor()) {\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..596294b8 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,13 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node enclosingObjectFunction = NodeUtil.getEnclosingFunction(n.getParent());\n+      JSDocInfo enclosingInfo = null;\n+      if (enclosingObjectFunction != null) {\n+        enclosingInfo = getFunctionJsDocInfo(enclosingObjectFunction);\n+        if (enclosingInfo == null || !enclosingInfo.isConstructor()) {\n+          return false;\n+        }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}