{
    "patch": "                long prevAdjusted = previousTransition(instantAdjusted);\n                if (prevAdjusted == instantAdjusted) {\n                    throw new IllegalArgumentException();\n                }\n                int offsetPrev = getOffset(prevAdjusted);\n                if (offsetPrev == offsetAdjusted) {\n                    return offsetLocal;\n                }\n                long nextAdjusted = nextTransition(instantAdjusted);\n                if (nextAdjusted == instantAdjusted) {\n                    throw new IllegalArgumentException();\n                }\n                int offsetNext = getOffset(nextAdjusted);\n                if (offsetPrev < offsetNext) {\n                    return offsetPrev;\n                }\n                return offsetNext;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..cd6913e1 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,23 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long prevAdjusted = previousTransition(instantAdjusted);\n+                if (prevAdjusted == instantAdjusted) {\n+                    throw new IllegalArgumentException();\n+                }\n+                int offsetPrev = getOffset(prevAdjusted);\n+                if (offsetPrev == offsetAdjusted) {\n+                    return offsetLocal;\n+                }\n+                long nextAdjusted = nextTransition(instantAdjusted);\n+                if (nextAdjusted == instantAdjusted) {\n+                    throw new IllegalArgumentException();\n+                }\n+                int offsetNext = getOffset(nextAdjusted);\n+                if (offsetPrev < offsetNext) {\n+                    return offsetPrev;\n+                }\n+                return offsetNext;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}