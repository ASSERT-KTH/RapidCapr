{
    "patch": "if(currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\nif(nextStrategy == null) {\n    currentFormatField= null;\n    if(currentStrategy.addRegex(this, regex)) {\n        collector.add(currentStrategy);\n    }\n} else {\n    currentFormatField= nextFormatField;\n}\nstrategies= collector.toArray(new Strategy[collector.size()]);\nparsePattern= Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..add2ac75 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if(currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+if(nextStrategy == null) {\n+    currentFormatField= null;\n+    if(currentStrategy.addRegex(this, regex)) {\n+        collector.add(currentStrategy);\n+    }\n+} else {\n+    currentFormatField= nextFormatField;\n+}\n+strategies= collector.toArray(new Strategy[collector.size()]);\n+parsePattern= Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}