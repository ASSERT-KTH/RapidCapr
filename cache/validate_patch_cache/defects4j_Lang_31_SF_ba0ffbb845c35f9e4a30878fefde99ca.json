{
    "patch": "public static boolean containsAny(String str, char[] chars) {\n    if (str != null && chars != null) {\n        int strLen = str.length();\n        int charsLen = chars.length;\n        for (int i = 0; i < strLen; i++) {\n            char ch = str.charAt(i);\n            for (int j = 0; j < charsLen; j++) {\n                if (chars[j] == ch) {\n                    return true;\n                }\n            }\n            // Check for supplementary characters\n            if (Character.isHighSurrogate(ch) && i + 1 < strLen) {\n                i++;\n                char ch2 = str.charAt(i);\n                if (Character.isLowSurrogate(ch2)) {\n                    int codePoint = Character.toCodePoint(ch, ch2);\n                    for (int j = 0; j < charsLen; j++) {\n                        if (Character.isValidCodePoint(codePoint) && chars[j] == codePoint) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..0cdeb8c3 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,34 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] chars) {\n+    if (str != null && chars != null) {\n+        int strLen = str.length();\n+        int charsLen = chars.length;\n+        for (int i = 0; i < strLen; i++) {\n+            char ch = str.charAt(i);\n+            for (int j = 0; j < charsLen; j++) {\n+                if (chars[j] == ch) {\n+                    return true;\n+                }\n+            }\n+            // Check for supplementary characters\n+            if (Character.isHighSurrogate(ch) && i + 1 < strLen) {\n+                i++;\n+                char ch2 = str.charAt(i);\n+                if (Character.isLowSurrogate(ch2)) {\n+                    int codePoint = Character.toCodePoint(ch, ch2);\n+                    for (int j = 0; j < charsLen; j++) {\n+                        if (Character.isValidCodePoint(codePoint) && chars[j] == codePoint) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}