{
    "patch": "        boolean inArray = false;\n        try {\n            inArray = ((Boolean) d.getClass().getMethod(\"isArray\").invoke(d)).booleanValue();\n        } catch (IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            e.printStackTrace();\n        }\n        Object[] rhsContextObj = conditionStack.pop() ? new Object[] {inArray, null} : new Object[] {null, Context.OTHER};\n        Context rhsContext = (boolean) rhsContextObj[0] ? Context.OTHER : (Context) rhsContextObj[1];",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}