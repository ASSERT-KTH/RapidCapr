{
    "patch": "    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        if (type.isFunctionType()) {\n          return getNativeType(U2U_CONSTRUCTOR_TYPE);\n        } else {\n          return null;\n        }\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\nindex 0afabc8a..1d7e4f25 100644\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n@@ -609,10 +609,11 @@ public abstract class ChainableReverseAbstractInterpreter\n     @Override\n     public JSType caseObjectType(ObjectType type) {\n       if (value.equals(\"function\")) {\n-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n-          // Objects are restricted to \"Function\", subtypes are left\n-          // Only filter out subtypes of \"function\"\n+        if (type.isFunctionType()) {\n+          return getNativeType(U2U_CONSTRUCTOR_TYPE);\n+        } else {\n+          return null;\n+        }\n       }\n       return matchesExpectation(\"object\") ? type : null;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Expected: Function",
    "test_result": "FAIL"
}