{
    "patch": "        // Remove unused params in the middle of the arguments as well.\n        if (!lastArg.isUnusedParameter()) {\n          break;\n        }\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();\n      }\n      for (Node arg = argList.getFirstChild();\n           arg != null && arg.isUnusedParameter(); arg = arg.getNext()) {\n        Node name = arg.removeFirstChild();\n        if (name != null) {\n          fnScope.getVar(name.getString()).removeReference(name);\n        }\n        argList.removeChild(arg);\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..9f33e7f2 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,21 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+        // Remove unused params in the middle of the arguments as well.\n+        if (!lastArg.isUnusedParameter()) {\n+          break;\n+        }\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n+      }\n+      for (Node arg = argList.getFirstChild();\n+           arg != null && arg.isUnusedParameter(); arg = arg.getNext()) {\n+        Node name = arg.removeFirstChild();\n+        if (name != null) {\n+          fnScope.getVar(name.getString()).removeReference(name);\n+        }\n+        argList.removeChild(arg);\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}