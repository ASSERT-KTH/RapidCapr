{
    "patch": "    Node firstChildOfCall = callNode.getFirstChild();\n    if (firstChildOfCall == null || firstChildOfCall.getType() != Token.NAME) {\n      return false;\n    }\n\n    String calleeName = callNode.getFirstChild().getString();\n    return calleeName.equals(\"goog.module.get\") || calleeName.equals(\"goog.module.declareLegacyNamespace\");",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..77dba8c0 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,13 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+    Node firstChildOfCall = callNode.getFirstChild();\n+    if (firstChildOfCall == null || firstChildOfCall.getType() != Token.NAME) {\n+      return false;\n+    }\n+\n+    String calleeName = callNode.getFirstChild().getString();\n+    return calleeName.equals(\"goog.module.get\") || calleeName.equals(\"goog.module.declareLegacyNamespace\");\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}