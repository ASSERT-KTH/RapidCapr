{
    "patch": "          if (value.isFunction()) {\n            Node callNode = reference.getParent();\n            if (reference.getParent().isCall()) {\n              CodingConvention convention = compiler.getCodingConvention();\n              // Bug 2388531: Don't inline subclass definitions into class defining\n              // calls as this confused class removing logic.\n              SubclassRelationship relationship =\n                  convention.getClassesDefinedByCall(callNode);\n              if (relationship != null) {\n                return false;\n              }\n\n              String singletonGetterClassName =\n                  convention.getSingletonGetterClassName(value);\n              boolean isCalledAsConstructor = callNode.isNew() || callNode.getParent().isNew();\n              if (singletonGetterClassName != null\n                  && !isCalledAsConstructor) {\n                // Don't inline a non-constructor getter if it's not called with 'new'.\n                // Issue https://github.com/google/closure-compiler/issues/372\n                return false;\n              }\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..872418aa 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,29 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          if (value.isFunction()) {\n+            Node callNode = reference.getParent();\n+            if (reference.getParent().isCall()) {\n+              CodingConvention convention = compiler.getCodingConvention();\n+              // Bug 2388531: Don't inline subclass definitions into class defining\n+              // calls as this confused class removing logic.\n+              SubclassRelationship relationship =\n+                  convention.getClassesDefinedByCall(callNode);\n+              if (relationship != null) {\n+                return false;\n+              }\n+\n+              String singletonGetterClassName =\n+                  convention.getSingletonGetterClassName(value);\n+              boolean isCalledAsConstructor = callNode.isNew() || callNode.getParent().isNew();\n+              if (singletonGetterClassName != null\n+                  && !isCalledAsConstructor) {\n+                // Don't inline a non-constructor getter if it's not called with 'new'.\n+                // Issue https://github.com/google/closure-compiler/issues/372\n+                return false;\n+              }\n+            }\n+          }\n         }\n       }\n ",
    "result_reason": "error: variable callNode is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}