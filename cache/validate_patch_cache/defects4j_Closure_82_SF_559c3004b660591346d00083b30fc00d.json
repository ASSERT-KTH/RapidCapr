{
    "patch": "public final boolean isEmptyType() {\n    /*\n     * Types are considered empty if they do not provide any useful information. That is,\n     * if they are one of the following: no-type, no-object-type, no-resolved-type, void-type,\n     * null-type, or unknown-type (if not supposed to be an array type).\n     */\n    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() ||\n           isNullType() || (isUnknownType() && !isArrayType());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..a6ee4dd6 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,15 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    /*\n+     * Types are considered empty if they do not provide any useful information. That is,\n+     * if they are one of the following: no-type, no-object-type, no-resolved-type, void-type,\n+     * null-type, or unknown-type (if not supposed to be an array type).\n+     */\n+    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() ||\n+           isNullType() || (isUnknownType() && !isArrayType());\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "junit.framework.ComparisonFailure: expected:</**",
    "test_result": "FAIL"
}