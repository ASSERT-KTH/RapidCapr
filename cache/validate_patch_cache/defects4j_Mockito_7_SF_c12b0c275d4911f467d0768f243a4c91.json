{
    "patch": "private Type getActualTypeArgumentFor(TypeVariable<?> typeVariable) {\n    Type[] typeArgs = typeVariable.getBounds().length > 0 && typeVariable.getBounds()[0] instanceof ParameterizedType ?\n            ((ParameterizedType) typeVariable.getBounds()[0]).getActualTypeArguments() : null;\n    return typeArgs != null && typeArgs.length > 0 ? typeArgs[0] : null;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..e820ecfa9 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,12 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private Type getActualTypeArgumentFor(TypeVariable<?> typeVariable) {\n+    Type[] typeArgs = typeVariable.getBounds().length > 0 && typeVariable.getBounds()[0] instanceof ParameterizedType ?\n+            ((ParameterizedType) typeVariable.getBounds()[0]).getActualTypeArguments() : null;\n+    return typeArgs != null && typeArgs.length > 0 ? typeArgs[0] : null;\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}