{
    "patch": "public static double getTypedPercent(String json) {\n  JsonElement jelem = JsonParser.parseString(json);\n  JsonObject jobject = jelem.getAsJsonObject();\n  int total = jobject.get(\"total\").getAsInt();\n  int typed = jobject.get(\"typed\").getAsInt();\n  return 100.0 * (double) typed / (double) total;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..a9f43add 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+public static double getTypedPercent(String json) {\n+  JsonElement jelem = JsonParser.parseString(json);\n+  JsonObject jobject = jelem.getAsJsonObject();\n+  int total = jobject.get(\"total\").getAsInt();\n+  int typed = jobject.get(\"typed\").getAsInt();\n+  return 100.0 * (double) typed / (double) total;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}