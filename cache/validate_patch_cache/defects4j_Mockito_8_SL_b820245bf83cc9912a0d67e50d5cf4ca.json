{
    "patch": "            } else if (actualTypeArgument instanceof ParameterizedType) {\n                TypeVariable[] innerTypeParameters = ((Class<?>) ((ParameterizedType) actualTypeArgument).getRawType()).getTypeParameters();\n                Type[] innerActualTypeArguments = ((ParameterizedType) actualTypeArgument).getActualTypeArguments();\n                Map<TypeVariable<?>, Type> innerContext = new HashMap<>();\n                for (int j = 0; j < innerActualTypeArguments.length; j++) {\n                    TypeVariable<?> innerTypeParameter = innerTypeParameters[j];\n                    Type innerActualTypeArgument = innerActualTypeArguments[j];\n                    innerContext.put(innerTypeParameter, innerActualTypeArgument);\n                }\n                contextualActualTypeParameters.putAll(innerContext);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..31f337102 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,16 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+            } else if (actualTypeArgument instanceof ParameterizedType) {\n+                TypeVariable[] innerTypeParameters = ((Class<?>) ((ParameterizedType) actualTypeArgument).getRawType()).getTypeParameters();\n+                Type[] innerActualTypeArguments = ((ParameterizedType) actualTypeArgument).getActualTypeArguments();\n+                Map<TypeVariable<?>, Type> innerContext = new HashMap<>();\n+                for (int j = 0; j < innerActualTypeArguments.length; j++) {\n+                    TypeVariable<?> innerTypeParameter = innerTypeParameters[j];\n+                    Type innerActualTypeArgument = innerActualTypeArguments[j];\n+                    innerContext.put(innerTypeParameter, innerActualTypeArgument);\n+                }\n+                contextualActualTypeParameters.putAll(innerContext);\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}