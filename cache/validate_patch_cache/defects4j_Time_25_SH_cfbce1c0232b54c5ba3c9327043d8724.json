{
    "patch": "                if ((offsetLocal - offsetAdjusted) < 0) {\n                    // if we just return offsetAdjusted then the time is pushed\n                    // back before the transition, whereas it should be\n                    // on or after the transition\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    } else if (getOffset(nextLocal + 1) == offsetAdjusted) {\n                        // We need to ensure that both the past and the future have the same offset.\n                        // The edge case here is daylight savings fall-back transition, which only\n                        // occurs for ONE hour per year, and hence the resolution of milliseconds is not enough\n                        // for us to see it in the calculations above, hence we need to bring the future\n                        // into this year where possible\n                        return offsetLocal;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..9dad9d90 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,23 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    // if we just return offsetAdjusted then the time is pushed\n+                    // back before the transition, whereas it should be\n+                    // on or after the transition\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    } else if (getOffset(nextLocal + 1) == offsetAdjusted) {\n+                        // We need to ensure that both the past and the future have the same offset.\n+                        // The edge case here is daylight savings fall-back transition, which only\n+                        // occurs for ONE hour per year, and hence the resolution of milliseconds is not enough\n+                        // for us to see it in the calculations above, hence we need to bring the future\n+                        // into this year where possible\n+                        return offsetLocal;\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-04-01T02:00:00.000-04:00 expected:<2007-04-01T0[1]:00:00.000-04:00> but was:<2007-04-01T0[2]:00:00.000-04:00>",
    "test_result": "FAIL"
}