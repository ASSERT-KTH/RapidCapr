{
    "patch": "          Node callParent = callNode.getParent();\n          if (callParent.isExprResult()) {\n            Node callGrandParent = callParent.getParent();\n            if (!callGrandParent.isForIn() &&\n                !callGrandParent.isFor() &&\n                !callGrandParent.isWhile()) {\n              Name functionName =\n                  new Name(callNode.getFirstChild().getQualifiedName());\n              if (compiler.getReferences(functionName).size() == 1) {\n                return false;\n              }\n            }\n          }\n        }\n      }\n\n      return canMoveAggressively(value) ||\n          canMoveModerately(initialization, reference);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..fe219209 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,25 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          Node callParent = callNode.getParent();\n+          if (callParent.isExprResult()) {\n+            Node callGrandParent = callParent.getParent();\n+            if (!callGrandParent.isForIn() &&\n+                !callGrandParent.isFor() &&\n+                !callGrandParent.isWhile()) {\n+              Name functionName =\n+                  new Name(callNode.getFirstChild().getQualifiedName());\n+              if (compiler.getReferences(functionName).size() == 1) {\n+                return false;\n+              }\n+            }\n+          }\n+        }\n+      }\n+\n+      return canMoveAggressively(value) ||\n+          canMoveModerately(initialization, reference);\n+    }\n         }\n       }\n ",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}