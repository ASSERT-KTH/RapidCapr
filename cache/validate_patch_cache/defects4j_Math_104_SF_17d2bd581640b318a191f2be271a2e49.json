{
    "patch": "public static double regularizedGamma(double a, double x) {\n    if (a <= 0.0 || x < 0.0) {\n        throw new IllegalArgumentException(\"a must be > 0 and x must be >= 0\");\n    }\n    if (x == 0.0) {\n        return 0.0;\n    }\n    double incompleteGamma = incompleteGamma(a, x);\n    double gamma = Gamma.gamma(a);\n    return incompleteGamma / gamma;\n}\n",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..428fc6088 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,18 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    if (a <= 0.0 || x < 0.0) {\n+        throw new IllegalArgumentException(\"a must be > 0 and x must be >= 0\");\n+    }\n+    if (x == 0.0) {\n+        return 0.0;\n+    }\n+    double incompleteGamma = incompleteGamma(a, x);\n+    double gamma = Gamma.gamma(a);\n+    return incompleteGamma / gamma;\n+}\n+\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}