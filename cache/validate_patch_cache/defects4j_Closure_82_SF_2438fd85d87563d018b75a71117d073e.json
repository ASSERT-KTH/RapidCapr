{
    "patch": "public void testIssue301() {\n    Type type = TypeUtils.getType(\"abc\");\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    PrintStream oldOut = System.out;\n    System.setOut(new PrintStream(out));\n    try {\n        assertTrue(type.isEmptyType());\n    } finally {\n        System.setOut(oldOut);\n    }\n    assertEquals(\"\", out.toString().trim());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..cd0e6dae 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -159,9 +159,18 @@ public abstract class JSType implements Serializable {\n     return false;\n   }\n \n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public void testIssue301() {\n+    Type type = TypeUtils.getType(\"abc\");\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    PrintStream oldOut = System.out;\n+    System.setOut(new PrintStream(out));\n+    try {\n+        assertTrue(type.isEmptyType());\n+    } finally {\n+        System.setOut(oldOut);\n+    }\n+    assertEquals(\"\", out.toString().trim());\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}