{
    "patch": "        ((Factory) mock).setCallbacks(new Callback[] { newFilter });\n        if (mock instanceof Serializable) {\n            try {\n                ObjectOutputStream oos = new ObjectOutputStream(new ByteArrayOutputStream());\n                oos.writeObject(mock);\n            } catch (Exception e) {\n                throw new MockitoException(\"Unable to serialize mock object \" + mock.getClass(), e);\n            }\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..9cfdc5262 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,10 +59,18 @@ public class MockUtil {\n         return mock;\n     }\n \n+\n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        ((Factory) mock).setCallbacks(new Callback[] { newFilter });\n+        if (mock instanceof Serializable) {\n+            try {\n+                ObjectOutputStream oos = new ObjectOutputStream(new ByteArrayOutputStream());\n+                oos.writeObject(mock);\n+            } catch (Exception e) {\n+                throw new MockitoException(\"Unable to serialize mock object \" + mock.getClass(), e);\n+            }\n+        }\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}