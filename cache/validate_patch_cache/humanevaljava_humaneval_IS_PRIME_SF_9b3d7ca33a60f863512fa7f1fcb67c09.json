{
    "patch": "public static boolean is_prime(int n){\n    if (n < 2) {\n        return false;\n    }\n    boolean[] primes = new boolean[n+1];\n    Arrays.fill(primes, true);\n    primes[0] = primes[1] = false;\n    for (int i = 2; i <= Math.sqrt(n); i++) {\n        if (primes[i]) {\n            for (int j = i*i; j <= n; j += i) {\n                primes[j] = false;\n            }\n        }\n    }\n    return primes[n];\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/IS_PRIME.java b/src/main/java/humaneval/buggy/IS_PRIME.java\nindex e55a04c..1edbd35 100644\n--- a/src/main/java/humaneval/buggy/IS_PRIME.java\n+++ b/src/main/java/humaneval/buggy/IS_PRIME.java\n@@ -1,13 +1,20 @@\n package humaneval.buggy;\n \n public class IS_PRIME {\n-    public static boolean is_prime(int n){\n-        if (n < 2)\n-            return false;\n-        for (int k = 0; k < n; k += 1){\n-            if (n % k == 0)\n-                return false;\n+public static boolean is_prime(int n){\n+    if (n < 2) {\n+        return false;\n+    }\n+    boolean[] primes = new boolean[n+1];\n+    Arrays.fill(primes, true);\n+    primes[0] = primes[1] = false;\n+    for (int i = 2; i <= Math.sqrt(n); i++) {\n+        if (primes[i]) {\n+            for (int j = i*i; j <= n; j += i) {\n+                primes[j] = false;\n+            }\n         }\n-        return true;\n     }\n+    return primes[n];\n+}\n }",
    "result_reason": " /tmp/humaneval-IS_PRIME/src/main/java/humaneval/buggy/IS_PRIME.java:[9,5] cannot find symbol",
    "test_result": "ERROR"
}