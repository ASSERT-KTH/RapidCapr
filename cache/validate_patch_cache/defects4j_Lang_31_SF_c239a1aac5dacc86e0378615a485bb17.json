{
    "patch": "public static boolean containsAny(CharSequence str, char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    int csLength = str.length();\n    int searchLength = searchChars.length;\n    if (csLength == 0 || searchLength == 0) {\n        return false;\n    }\n    int csLast = csLength - 1;\n    int searchLast = searchLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        char ch = str.charAt(i);\n        if (searchChars[0] == ch && (i + searchLength <= csLength)) {\n            if (searchLength == 1) {\n                return true;\n            }\n            boolean found = true;\n            for (int j = 1; j < searchLength && found; j++) {\n                if (str.charAt(i + j) != searchChars[j]) {\n                    found = false;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        if (i < csLast) {\n            int ch1 = (int) ch;\n            int ch2 = (int) str.charAt(i + 1);\n            if (ch1 >= 0xd800 && ch1 <= 0xdbff && ch2 >= 0xdc00 && ch2 <= 0xdfff) {\n                int c = ((ch1 - 0xd800) << 10) + (ch2 - 0xdc00) + 0x10000;\n                if (contains(searchChars, (char) c)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean contains(char[] array, char ch) {\n    for (char element : array) {\n        if (element == ch) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..4d7e99d1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,55 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence str, char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    int csLength = str.length();\n+    int searchLength = searchChars.length;\n+    if (csLength == 0 || searchLength == 0) {\n+        return false;\n+    }\n+    int csLast = csLength - 1;\n+    int searchLast = searchLength - 1;\n+    for (int i = 0; i < csLength; i++) {\n+        char ch = str.charAt(i);\n+        if (searchChars[0] == ch && (i + searchLength <= csLength)) {\n+            if (searchLength == 1) {\n+                return true;\n+            }\n+            boolean found = true;\n+            for (int j = 1; j < searchLength && found; j++) {\n+                if (str.charAt(i + j) != searchChars[j]) {\n+                    found = false;\n+                }\n+            }\n+            if (found) {\n+                return true;\n+            }\n+        }\n+        if (i < csLast) {\n+            int ch1 = (int) ch;\n+            int ch2 = (int) str.charAt(i + 1);\n+            if (ch1 >= 0xd800 && ch1 <= 0xdbff && ch2 >= 0xdc00 && ch2 <= 0xdfff) {\n+                int c = ((ch1 - 0xd800) << 10) + (ch2 - 0xdc00) + 0x10000;\n+                if (contains(searchChars, (char) c)) {\n+                    return true;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean contains(char[] array, char ch) {\n+    for (char element : array) {\n+        if (element == ch) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}