{
    "patch": "    public int getOffsetFromLocal(long instantLocal) {\n        int offsetLocal = getOffset(instantLocal);\n        final long instantAdjusted = instantLocal - offsetLocal;\n        int offsetAdjusted = getOffset(instantAdjusted);\n        if (offsetLocal != offsetAdjusted) {\n            // Calculate 3 offsets. \n            int offsetBefore = getOffset(instantAdjusted - 1);\n            int offsetAfter = getOffset(instantAdjusted + 1);\n            if (offsetBefore == offsetAfter) {\n                return offsetBefore;\n            }\n            long transition = (offsetLocal < offsetAdjusted) ?\n                              nextTransition(instantAdjusted) :\n                              previousTransition(instantAdjusted);\n            boolean dstGap = (transition == instantLocal - offsetLocal);\n            boolean beforeGap = (transition == instantAdjusted - offsetAdjusted);\n            if (dstGap || beforeGap) {\n                return (offsetLocal < offsetAdjusted) ? offsetAfter : offsetBefore;\n            } else {\n                return (offsetLocal > offsetAdjusted) ? offsetAfter : offsetBefore;\n            }\n        }\n        return offsetAdjusted;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..869d7c54 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,30 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+    public int getOffsetFromLocal(long instantLocal) {\n+        int offsetLocal = getOffset(instantLocal);\n+        final long instantAdjusted = instantLocal - offsetLocal;\n+        int offsetAdjusted = getOffset(instantAdjusted);\n+        if (offsetLocal != offsetAdjusted) {\n+            // Calculate 3 offsets. \n+            int offsetBefore = getOffset(instantAdjusted - 1);\n+            int offsetAfter = getOffset(instantAdjusted + 1);\n+            if (offsetBefore == offsetAfter) {\n+                return offsetBefore;\n+            }\n+            long transition = (offsetLocal < offsetAdjusted) ?\n+                              nextTransition(instantAdjusted) :\n+                              previousTransition(instantAdjusted);\n+            boolean dstGap = (transition == instantLocal - offsetLocal);\n+            boolean beforeGap = (transition == instantAdjusted - offsetAdjusted);\n+            if (dstGap || beforeGap) {\n+                return (offsetLocal < offsetAdjusted) ? offsetAfter : offsetBefore;\n+            } else {\n+                return (offsetLocal > offsetAdjusted) ? offsetAfter : offsetBefore;\n+            }\n+        }\n+        return offsetAdjusted;\n+    }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}