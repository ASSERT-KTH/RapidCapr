{
    "patch": "    public static Integer[] order_by_points(Integer[] nums) {\n        ArrayList<Integer> digits = new ArrayList<Integer>();\n        HashMap<Integer, ArrayList<Integer>> digits_number = new HashMap<Integer, ArrayList<Integer>>();\n\n        for (int i = 0; i < nums.length; i += 1){\n            int neg = 1;\n            int n = nums[i];\n            if (n < 0) {\n                n = -1 * n;\n                neg = -1;\n            }\n            int digit = 0;\n            int pow = 1;\n            do {\n                int mod = n % 10;\n                n = n / 10;\n                digit = digit + (mod * pow * neg);\n                pow *= 10;\n            } while (n != 0);\n            \n            digits.add(digit);\n            if (! digits_number.containsKey(digit))\n                digits_number.put(digit, new ArrayList<Integer>());\n            digits_number.get(digit).add(nums[i]);\n        }\n        Collections.sort(digits);\n        \n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i = 0; i < digits.size(); i += 1) {\n            result.addAll(digits_number.get(digits.get(i)));\n        }\n        return result.toArray(new Integer[] {});\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\nindex 4e6cd94..0936be6 100644\n--- a/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n+++ b/src/main/java/humaneval/buggy/ORDER_BY_POINTS.java\n@@ -26,9 +26,14 @@ public class ORDER_BY_POINTS {\n                 neg = -1;\n             }\n             int digit = 0;\n-            for (int j = 0; j < (n + \"\").toCharArray().length; j += 1){\n-                digit += ((n + \"\").toCharArray()[j] - '0') * neg;\n-            }\n+            int pow = 1;\n+            do {\n+                int mod = n % 10;\n+                n = n / 10;\n+                digit = digit + (mod * pow * neg);\n+                pow *= 10;\n+            } while (n != 0);\n+            \n             digits.add(digit);\n             if (! digits_number.containsKey(digit))\n                 digits_number.put(digit, new ArrayList<Integer>());",
    "result_reason": "   TEST_ORDER_BY_POINTS.test_0:9 arrays first differed at element [0]; expected:<-12> but was:<-1>",
    "test_result": "FAIL"
}