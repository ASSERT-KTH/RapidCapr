{
    "patch": "if (offsetLocal != offsetAdjusted) {\n    int offsetBefore = getOffset(instantAdjusted - 1);\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal == nextAdjusted) {\n        // We are in a DST gap or overlap\n        int offsetBeforeNext = getOffset(nextLocal - 1);\n        if (offsetLocal > offsetAdjusted && offsetLocal > offsetBefore) {\n            // Fall back to standard time\n            return offsetLocal;\n        } else if (offsetLocal < offsetAdjusted && offsetLocal < offsetBefore) {\n            // Spring forward to DST time\n            return offsetLocal + 1;\n        } else if ((offsetLocal - offsetAdjusted) < 0) {\n            return offsetLocal;\n        } else {\n            return offsetBeforeNext;\n        }\n    } else {\n        // We are not in a DST gap or overlap\n        if ((offsetLocal - offsetAdjusted) < 0) {\n            return offsetLocal;\n        } else {\n            return offsetAdjusted;\n        }\n    }\n} else {\n    // We are not near a DST boundary\n    return offsetAdjusted;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..0cb660f0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,36 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal != offsetAdjusted) {\n+    int offsetBefore = getOffset(instantAdjusted - 1);\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal == nextAdjusted) {\n+        // We are in a DST gap or overlap\n+        int offsetBeforeNext = getOffset(nextLocal - 1);\n+        if (offsetLocal > offsetAdjusted && offsetLocal > offsetBefore) {\n+            // Fall back to standard time\n+            return offsetLocal;\n+        } else if (offsetLocal < offsetAdjusted && offsetLocal < offsetBefore) {\n+            // Spring forward to DST time\n+            return offsetLocal + 1;\n+        } else if ((offsetLocal - offsetAdjusted) < 0) {\n+            return offsetLocal;\n+        } else {\n+            return offsetBeforeNext;\n+        }\n+    } else {\n+        // We are not in a DST gap or overlap\n+        if ((offsetLocal - offsetAdjusted) < 0) {\n+            return offsetLocal;\n+        } else {\n+            return offsetAdjusted;\n+        }\n+    }\n+} else {\n+    // We are not near a DST boundary\n+    return offsetAdjusted;\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}