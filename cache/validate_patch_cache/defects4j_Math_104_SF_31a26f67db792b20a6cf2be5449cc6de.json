{
    "patch": "public static double regularizedGammaP(double a, double x) {\n    final double eps = 10e-15;\n    final int maxIterations = 1000;\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException();\n    }\n\n    if (x > (a + 1)) {\n        return 1 - regularizedGammaQ(a, x);\n    }\n\n    double n = 1;\n    double an = a;\n    double sum = an / n;\n    while (Math.abs(sum) > eps && n < maxIterations && an < Double.MAX_VALUE / x) {\n        n++;\n        an *= x / (a + n);\n        sum += an / n;\n    }\n\n    if (n >= maxIterations) {\n        throw new ArithmeticException();\n    }\n\n    return Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..25e2e3c31 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,32 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaP(double a, double x) {\n+    final double eps = 10e-15;\n+    final int maxIterations = 1000;\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException();\n+    }\n+\n+    if (x > (a + 1)) {\n+        return 1 - regularizedGammaQ(a, x);\n+    }\n+\n+    double n = 1;\n+    double an = a;\n+    double sum = an / n;\n+    while (Math.abs(sum) > eps && n < maxIterations && an < Double.MAX_VALUE / x) {\n+        n++;\n+        an *= x / (a + n);\n+        sum += an / n;\n+    }\n+\n+    if (n >= maxIterations) {\n+        throw new ArithmeticException();\n+    }\n+\n+    return Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}