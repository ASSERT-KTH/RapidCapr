{
    "patch": "-    return parseTypeName(token); // original buggy hunk\n+    try {\n+        return parseTypeName(token);\n+    } catch (JSException e) {\n+        // attempt to recover by parsing the token as a type expression\n+        return parseTypeExpression(token);\n+    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..b7ea2d48 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,13 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+-    return parseTypeName(token); // original buggy hunk\n++    try {\n++        return parseTypeName(token);\n++    } catch (JSException e) {\n++        // attempt to recover by parsing the token as a type expression\n++        return parseTypeExpression(token);\n++    }\n   }\n \n   /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}