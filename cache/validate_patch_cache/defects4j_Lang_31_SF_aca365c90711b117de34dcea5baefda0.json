{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    int strLen = StringUtils.length(str);\n    int searchLen = searchChars.length;\n    int endIndex = strLen - 1;\n    for (int i = 0; i < strLen; i++) {\n        int codePoint = str.codePointAt(i);\n        if (Character.charCount(codePoint) > 1) {\n            i += Character.charCount(codePoint) - 1;\n        }\n        for (int j = 0; j < searchLen; j++) {\n            if (searchChars[j] == codePoint) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..fb80a240 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,23 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    int strLen = StringUtils.length(str);\n+    int searchLen = searchChars.length;\n+    int endIndex = strLen - 1;\n+    for (int i = 0; i < strLen; i++) {\n+        int codePoint = str.codePointAt(i);\n+        if (Character.charCount(codePoint) > 1) {\n+            i += Character.charCount(codePoint) - 1;\n+        }\n+        for (int j = 0; j < searchLen; j++) {\n+            if (searchChars[j] == codePoint) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}