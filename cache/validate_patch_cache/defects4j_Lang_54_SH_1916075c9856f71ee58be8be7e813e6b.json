{
    "patch": "private static boolean isValidCountryCode(String code) {\n    return code.length() == 2 && Character.isUpperCase(code.charAt(0)) && Character.isUpperCase(code.charAt(1));\n}\n\nprivate static boolean isValidVariantCode(String code) {\n    if (code.length() == 0) {\n        return true;\n    }\n    if (code.charAt(0) == '_') {\n        code = code.substring(1);\n    }\n    for (int i = 0; i < code.length(); i++) {\n        char ch = code.charAt(i);\n        if (!Character.isLetterOrDigit(ch) && ch != '-' && ch != '_') {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..59d8363e 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,25 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+private static boolean isValidCountryCode(String code) {\n+    return code.length() == 2 && Character.isUpperCase(code.charAt(0)) && Character.isUpperCase(code.charAt(1));\n+}\n+\n+private static boolean isValidVariantCode(String code) {\n+    if (code.length() == 0) {\n+        return true;\n+    }\n+    if (code.charAt(0) == '_') {\n+        code = code.substring(1);\n+    }\n+    for (int i = 0; i < code.length(); i++) {\n+        char ch = code.charAt(i);\n+        if (!Character.isLetterOrDigit(ch) && ch != '-' && ch != '_') {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}