{
    "patch": "        if (o1 == null && o2 == null) {\n            return true;\n        }\n        if (o1 == null || o2 == null) {\n            return false;\n        }\n        if (o1.getClass() != o2.getClass()) {\n            return false;\n        }\n        if (o1 instanceof Object[]) {\n            return areArraysEqual((Object[]) o1, (Object[]) o2);\n        }\n        return o1.equals(o2);\n    }\n    \n    private static boolean areArraysEqual(Object[] o1, Object[] o2) {\n        if (o1 == null && o2 == null) {\n            return true;\n        }\n        if (o1 == null || o2 == null) {\n            return false;\n        }\n        if (o1.length != o2.length) {\n            return false;\n        }\n        for (int i = 0; i < o1.length; i++) {\n            if (!areEqual(o1[i], o2[i])) {\n                return false;\n            }\n        }\n        return true;",
    "patch_diff": "diff --git a/src/org/mockito/internal/matchers/Equality.java b/src/org/mockito/internal/matchers/Equality.java\nindex 43e11fca9..362293738 100644\n--- a/src/org/mockito/internal/matchers/Equality.java\n+++ b/src/org/mockito/internal/matchers/Equality.java\n@@ -9,15 +9,38 @@ import java.lang.reflect.Array;\n //stolen from hamcrest because I didn't want to have more dependency than Matcher class \n public class Equality {\n \n-    public static boolean areEqual(Object o1, Object o2) {\n-        if (o1 == null || o2 == null) {\n-            return o1 == null && o2 == null;\n-        } else if (isArray(o1)) {\n-            return isArray(o2) && areArraysEqual(o1, o2);\n-        } else {\n-            return o1.equals(o2);\n-        }\n-    }\n+\n+        if (o1 == null && o2 == null) {\n+            return true;\n+        }\n+        if (o1 == null || o2 == null) {\n+            return false;\n+        }\n+        if (o1.getClass() != o2.getClass()) {\n+            return false;\n+        }\n+        if (o1 instanceof Object[]) {\n+            return areArraysEqual((Object[]) o1, (Object[]) o2);\n+        }\n+        return o1.equals(o2);\n+    }\n+    \n+    private static boolean areArraysEqual(Object[] o1, Object[] o2) {\n+        if (o1 == null && o2 == null) {\n+            return true;\n+        }\n+        if (o1 == null || o2 == null) {\n+            return false;\n+        }\n+        if (o1.length != o2.length) {\n+            return false;\n+        }\n+        for (int i = 0; i < o1.length; i++) {\n+            if (!areEqual(o1[i], o2[i])) {\n+                return false;\n+            }\n+        }\n+        return true;\n \n     static boolean areArraysEqual(Object o1, Object o2) {\n         return areArrayLengthsEqual(o1, o2)\n@@ -38,4 +61,4 @@ public class Equality {\n     static boolean isArray(Object o) {\n         return o.getClass().isArray();\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}