{
    "patch": "protected BasePeriod(long duration) {\n    Period p = Period.standardDays(duration);\n    int days = p.getDays();\n    if (days != 0) {\n        p = p.minusDays(days);\n        p = p.plusWeeks(days / 7);\n    }\n    this(p.toDurationFrom(new DateTime(0L)), null, null);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..d4980447 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,15 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    Period p = Period.standardDays(duration);\n+    int days = p.getDays();\n+    if (days != 0) {\n+        p = p.minusDays(days);\n+        p = p.plusWeeks(days / 7);\n+    }\n+    this(p.toDurationFrom(new DateTime(0L)), null, null);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}