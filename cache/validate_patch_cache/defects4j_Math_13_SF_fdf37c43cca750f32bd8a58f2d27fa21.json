{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    RealMatrix sqrt;\n    EigenDecomposition dec = new EigenDecomposition(m);\n    RealMatrix eigenvalues = dec.getD();\n    RealMatrix eigenvectors = dec.getV();\n    RealMatrix sqrtEigenvalues = eigenvalues.scalarMap(Math::sqrt);\n    sqrt = eigenvectors.multiply(sqrtEigenvalues).multiply(eigenvectors.transpose());\n    if (!MatrixUtils.isSymmetric(sqrt, 1E-10)) {\n        sqrt = sqrt.scalarMultiply(0.5).add(sqrt.transpose().scalarMultiply(0.5));\n    }\n    return sqrt;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..ccacfcdd6 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,16 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    RealMatrix sqrt;\n+    EigenDecomposition dec = new EigenDecomposition(m);\n+    RealMatrix eigenvalues = dec.getD();\n+    RealMatrix eigenvectors = dec.getV();\n+    RealMatrix sqrtEigenvalues = eigenvalues.scalarMap(Math::sqrt);\n+    sqrt = eigenvectors.multiply(sqrtEigenvalues).multiply(eigenvectors.transpose());\n+    if (!MatrixUtils.isSymmetric(sqrt, 1E-10)) {\n+        sqrt = sqrt.scalarMultiply(0.5).add(sqrt.transpose().scalarMultiply(0.5));\n     }\n+    return sqrt;\n+}\n }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}