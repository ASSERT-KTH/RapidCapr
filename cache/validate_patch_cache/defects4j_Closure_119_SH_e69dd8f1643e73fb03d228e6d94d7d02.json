{
    "patch": "      case Token.NAME:\n        // This may be a variable get or set.\n        if (parent != null) {\n          switch (parent.getType()) {\n            case Token.VAR:\n              isSet = true;\n              Node rvalue = n.getFirstChild();\n              type = rvalue == null ? Name.Type.OTHER : getValueType(rvalue);\n              break;\n            case Token.ASSIGN:\n              if (parent.getFirstChild() == n) {\n                isSet = true;\n                type = getValueType(n.getNext());\n              }\n              break;\n            case Token.GETPROP:\n              return;\n            case Token.LABEL:\n            case Token.BLOCK:\n            case Token.SWITCH:\n            case Token.CASE:\n            case Token.DEFAULT:\n            case Token.IF:\n            case Token.CONDITIONAL:\n            case Token.WHILE:\n            case Token.DO:\n            case Token.FOR:\n            case Token.FOR_IN:\n            case Token.TRY:\n            case Token.DEBUGGER:\n            case Token.SCRIPT:\n              isSet = false;\n              break;\n            case Token.FUNCTION:\n              Node gramps = parent.getParent();\n              if (gramps == null || NodeUtil.isFunctionExpression(parent)) {\n                return;\n              }\n              isSet = true;\n              type = Name.Type.FUNCTION;\n              break;\n            case Token.INC:\n            case Token.DEC:\n              isSet = true;\n              type = Name.Type.OTHER;\n              break;\n            default:\n              if (NodeUtil.isAssignmentOp(parent) &&\n                  parent.getFirstChild() == n) {\n                isSet = true;\n                type = Name.Type.OTHER;\n              }\n          }\n        }\n        name = n.getString();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..e98516e1 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,61 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+      case Token.NAME:\n+        // This may be a variable get or set.\n+        if (parent != null) {\n+          switch (parent.getType()) {\n+            case Token.VAR:\n+              isSet = true;\n+              Node rvalue = n.getFirstChild();\n+              type = rvalue == null ? Name.Type.OTHER : getValueType(rvalue);\n+              break;\n+            case Token.ASSIGN:\n+              if (parent.getFirstChild() == n) {\n+                isSet = true;\n+                type = getValueType(n.getNext());\n+              }\n+              break;\n+            case Token.GETPROP:\n+              return;\n+            case Token.LABEL:\n+            case Token.BLOCK:\n+            case Token.SWITCH:\n+            case Token.CASE:\n+            case Token.DEFAULT:\n+            case Token.IF:\n+            case Token.CONDITIONAL:\n+            case Token.WHILE:\n+            case Token.DO:\n+            case Token.FOR:\n+            case Token.FOR_IN:\n+            case Token.TRY:\n+            case Token.DEBUGGER:\n+            case Token.SCRIPT:\n+              isSet = false;\n+              break;\n+            case Token.FUNCTION:\n+              Node gramps = parent.getParent();\n+              if (gramps == null || NodeUtil.isFunctionExpression(parent)) {\n+                return;\n+              }\n+              isSet = true;\n+              type = Name.Type.FUNCTION;\n+              break;\n+            case Token.INC:\n+            case Token.DEC:\n+              isSet = true;\n+              type = Name.Type.OTHER;\n+              break;\n+            default:\n+              if (NodeUtil.isAssignmentOp(parent) &&\n+                  parent.getFirstChild() == n) {\n+                isSet = true;\n+                type = Name.Type.OTHER;\n+              }\n+          }\n+        }\n+        name = n.getString();\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: variable rvalue is already defined in method collect(JSModule,Scope,Node)",
    "test_result": "ERROR"
}