{
    "patch": "public static Object compare_one(Object a, Object b) {\n    double temp_a = 0, temp_b = 0;\n\n    if(a instanceof String){\n        try{\n            temp_a = Double.parseDouble(((String)a).replace(',', '.'));\n        } catch(NumberFormatException e){\n            temp_a = Double.NEGATIVE_INFINITY;\n        }\n    } else if(a instanceof Double){\n        temp_a = ((Double)a).doubleValue();\n    } else if(a instanceof Integer){\n        temp_a = ((Integer)a).doubleValue();\n    }\n\n    if(b instanceof String){\n        try{\n            temp_b = Double.parseDouble(((String)b).replace(',', '.'));\n        } catch(NumberFormatException e){\n            temp_b = Double.NEGATIVE_INFINITY;\n        }\n    } else if(b instanceof Double){\n        temp_b = ((Double)b).doubleValue();\n    } else if(b instanceof Integer){\n        temp_b = ((Integer)b).doubleValue();\n    }\n\n    if(temp_a == Double.NEGATIVE_INFINITY){\n        return b;\n    } else if(temp_b == Double.NEGATIVE_INFINITY){\n        return a;\n    } else if(temp_a == temp_b){\n        return null;\n    } else if(temp_a > temp_b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMPARE_ONE.java b/src/main/java/humaneval/buggy/COMPARE_ONE.java\nindex cdf822c..98e0214 100644\n--- a/src/main/java/humaneval/buggy/COMPARE_ONE.java\n+++ b/src/main/java/humaneval/buggy/COMPARE_ONE.java\n@@ -14,24 +14,44 @@ package humaneval.buggy;\n  */\n \n public class COMPARE_ONE {\n-    public static Object compare_one(Object a, Object b) {\n-        double temp_a = 0, temp_b = 0;\n-        if(a instanceof String) {\n-            String temp_a_string = a.toString();\n-            temp_a_string = temp_a_string.replace(',', '.');\n-            temp_a = Double.parseDouble(temp_a_string);\n+public static Object compare_one(Object a, Object b) {\n+    double temp_a = 0, temp_b = 0;\n+\n+    if(a instanceof String){\n+        try{\n+            temp_a = Double.parseDouble(((String)a).replace(',', '.'));\n+        } catch(NumberFormatException e){\n+            temp_a = Double.NEGATIVE_INFINITY;\n         }\n-        if(b instanceof String) {\n-            String temp_b_string = b.toString();\n-            temp_b_string = temp_b_string.replace(',', '.');\n-            temp_b = Double.parseDouble(temp_b_string);\n+    } else if(a instanceof Double){\n+        temp_a = ((Double)a).doubleValue();\n+    } else if(a instanceof Integer){\n+        temp_a = ((Integer)a).doubleValue();\n+    }\n+\n+    if(b instanceof String){\n+        try{\n+            temp_b = Double.parseDouble(((String)b).replace(',', '.'));\n+        } catch(NumberFormatException e){\n+            temp_b = Double.NEGATIVE_INFINITY;\n         }\n-        if(a instanceof Double) temp_a = ((Integer) b).doubleValue();\n-        if(b instanceof Double) temp_b = ((Integer) a).doubleValue();\n-        if(a instanceof Integer) temp_a = (Double) a;\n-        if(b instanceof Integer) temp_b = (Double) b;\n-        if(temp_a == temp_b) return null;\n-        if(temp_a > temp_b) return a;\n-        else return b;\n+    } else if(b instanceof Double){\n+        temp_b = ((Double)b).doubleValue();\n+    } else if(b instanceof Integer){\n+        temp_b = ((Integer)b).doubleValue();\n     }\n+\n+    if(temp_a == Double.NEGATIVE_INFINITY){\n+        return b;\n+    } else if(temp_b == Double.NEGATIVE_INFINITY){\n+        return a;\n+    } else if(temp_a == temp_b){\n+        return null;\n+    } else if(temp_a > temp_b){\n+        return a;\n+    }\n+    else{\n+        return b;\n+    }\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}