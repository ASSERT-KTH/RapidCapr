{
    "patch": "              case Token.INC:\n              case Token.DEC:\n                if (n.getFirstChild().getType() == Token.NAME) {\n                  isSet = true;\n                  type = Name.Type.OTHER;\n                  name = n.getFirstChild().getString();\n                }\n                break;\n              default:\n                if (NodeUtil.isAssignmentOp(parent) &&\n                    parent.getFirstChild() == n) {\n                  isSet = true;\n                  type = Name.Type.OTHER;\n                  Node lhs = n.getFirstChild();\n                  if (lhs.getType() == Token.GETPROP) {\n                    name = lhs.getQualifiedName();\n                  } else if (lhs.getType() == Token.NAME) {\n                    name = lhs.getString();\n                  } else {\n                    throw new IllegalStateException(\n                        \"Unexpected assignment target \" + lhs);\n                  }\n                }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..c9f2e0d3 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -364,6 +364,29 @@ class GlobalNamespace\n                 type = Name.Type.FUNCTION;\n                 break;\n               case Token.INC:\n+              case Token.DEC:\n+                if (n.getFirstChild().getType() == Token.NAME) {\n+                  isSet = true;\n+                  type = Name.Type.OTHER;\n+                  name = n.getFirstChild().getString();\n+                }\n+                break;\n+              default:\n+                if (NodeUtil.isAssignmentOp(parent) &&\n+                    parent.getFirstChild() == n) {\n+                  isSet = true;\n+                  type = Name.Type.OTHER;\n+                  Node lhs = n.getFirstChild();\n+                  if (lhs.getType() == Token.GETPROP) {\n+                    name = lhs.getQualifiedName();\n+                  } else if (lhs.getType() == Token.NAME) {\n+                    name = lhs.getString();\n+                  } else {\n+                    throw new IllegalStateException(\n+                        \"Unexpected assignment target \" + lhs);\n+                  }\n+                }\n+              case Token.INC:\n               case Token.DEC:\n                 isSet = true;\n                 type = Name.Type.OTHER;",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}