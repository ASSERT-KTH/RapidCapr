{
    "patch": "    public double solve(double min, double max) throws MaxIterationsExceededException, \n        FunctionEvaluationException {\n        \n        clearResult();\n        verifyInterval(min, max);\n        \n        double ret = Double.NaN;\n        \n        double yMin = f.value(min);\n        double yMax = f.value(max);\n        \n        // Check if either endpoint is a root\n        if (yMin == 0) {\n            setResult(min, 0);\n            return min;\n        }\n        if (yMax == 0) {\n            setResult(max, 0);\n            return max;\n        }\n        \n        // Verify bracketing\n        double sign = yMin * yMax;\n        if (sign >= 0) {\n            // check if either value is close to a zero\n                // neither value is close to zero and min and max do not bracket root.\n                throw new IllegalArgumentException\n                (\"Function values at endpoints do not have different signs.\" +\n                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n        } else {\n            // solve using only the first endpoint as initial guess\n            ret = solve(min, yMin, max, yMax, min, yMin);\n            // either min or max is a root\n        }\n\n        return ret;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/BrentSolver.java b/src/java/org/apache/commons/math/analysis/BrentSolver.java\nindex 766d87ed5..b2298bf10 100644\n--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -133,6 +133,16 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n         double yMin = f.value(min);\n         double yMax = f.value(max);\n         \n+        // Check if either endpoint is a root\n+        if (yMin == 0) {\n+            setResult(min, 0);\n+            return min;\n+        }\n+        if (yMax == 0) {\n+            setResult(max, 0);\n+            return max;\n+        }\n+        \n         // Verify bracketing\n         double sign = yMin * yMax;\n         if (sign >= 0) {",
    "result_reason": "java.lang.IllegalArgumentException: Function values at endpoints do not have different signs. Endpoints: [3.0,3.141592653589793] Values: [0.1411200080598672,1.2246467991473532E-16]",
    "test_result": "FAIL"
}