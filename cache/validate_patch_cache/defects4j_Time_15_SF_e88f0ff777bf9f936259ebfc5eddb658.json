{
    "patch": "    public static long safeMultiply(long val1, int val2) {\n        if (val2 == -1) {\n            if (val1 == Long.MIN_VALUE) {\n                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n            }\n            return -val1;\n        }\n        if (val2 == 0) {\n            return 0L;\n        }\n        if (val2 == 1) {\n            return val1;\n        }\n        long total = val1 * val2;\n        if (total / val2 != val1) {\n          throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        return total;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..6ab5fa14 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -133,13 +133,17 @@ public class FieldUtils {\n      * @since 1.2\n      */\n     public static long safeMultiply(long val1, int val2) {\n-        switch (val2) {\n-            case -1:\n-                return -val1;\n-            case 0:\n-                return 0L;\n-            case 1:\n-                return val1;\n+        if (val2 == -1) {\n+            if (val1 == Long.MIN_VALUE) {\n+                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+            }\n+            return -val1;\n+        }\n+        if (val2 == 0) {\n+            return 0L;\n+        }\n+        if (val2 == 1) {\n+            return val1;\n         }\n         long total = val1 * val2;\n         if (total / val2 != val1) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}