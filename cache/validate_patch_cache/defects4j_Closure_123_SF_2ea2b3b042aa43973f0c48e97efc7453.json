{
    "patch": "public String fixCode(String code) {\n   // find for loops with 'in' operator and enclosed brackets [], replace them with ternary operator\n   String result = code.replaceAll(\"for\\\\((.*?) (in) (\\\\w+)\\\\[(.*?)](.*?)\\\\)\", \"for($1 = $3.length > $4 ? $4 : $3.length; $1 < $3.length;$1++)$5\")\n       .replaceAll(\"for\\\\((.*?) (in) (.*?)\\\\)(.*?)\", \"for($1 : $3)$4\");\n   return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..d383ab03 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,12 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(String code) {\n+   // find for loops with 'in' operator and enclosed brackets [], replace them with ternary operator\n+   String result = code.replaceAll(\"for\\\\((.*?) (in) (\\\\w+)\\\\[(.*?)](.*?)\\\\)\", \"for($1 = $3.length > $4 ? $4 : $3.length; $1 < $3.length;$1++)$5\")\n+       .replaceAll(\"for\\\\((.*?) (in) (.*?)\\\\)(.*?)\", \"for($1 : $3)$4\");\n+   return result;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}