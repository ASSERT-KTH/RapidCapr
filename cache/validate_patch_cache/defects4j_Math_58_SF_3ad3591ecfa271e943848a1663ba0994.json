{
    "patch": "    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        final double[] lowerBounds = new double[guess.length];\n        Arrays.fill(lowerBounds, Double.NEGATIVE_INFINITY);\n        return fit(new Gaussian.Parametric(), guess, new LeastSquaresBuilder().maxEvaluations(Integer.MAX_VALUE).maxIterations(Integer.MAX_VALUE).start(guess).lowerBound(lowerBounds).build());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..5dd054f62 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,9 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final double[] lowerBounds = new double[guess.length];\n+        Arrays.fill(lowerBounds, Double.NEGATIVE_INFINITY);\n+        return fit(new Gaussian.Parametric(), guess, new LeastSquaresBuilder().maxEvaluations(Integer.MAX_VALUE).maxIterations(Integer.MAX_VALUE).start(guess).lowerBound(lowerBounds).build());\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}