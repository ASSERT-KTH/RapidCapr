{
    "patch": "      //Check if there is any destructuring required\n      if(!argList.hasChildren()){\n        return;\n      } else if(argList.hasOneChild() && argList.getFirstChild().isDestructuringLhs()){\n        Node expression = argList.getFirstChild();\n        Node newExpression = createExpressionForDestructuring(expression);\n        argList.replaceChild(expression, newExpression);\n        compiler.reportCodeChange();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..c3eb54e9 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,14 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+      //Check if there is any destructuring required\n+      if(!argList.hasChildren()){\n+        return;\n+      } else if(argList.hasOneChild() && argList.getFirstChild().isDestructuringLhs()){\n+        Node expression = argList.getFirstChild();\n+        Node newExpression = createExpressionForDestructuring(expression);\n+        argList.replaceChild(expression, newExpression);\n+        compiler.reportCodeChange();\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}