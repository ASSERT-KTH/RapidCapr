{
    "patch": "import java.util.Random;\n\npublic class Distribution {\n    private final double[] values;\n    private final double total;\n\n    public Distribution(double[] values) {\n        this.values = values;\n        double total = 0;\n        for (double d : values) {\n            total += d;\n        }\n        this.total = total;\n    }\n\n    public Distribution(int n, Random random) {\n        if (n <= 0) {\n            throw new IllegalArgumentException(\"n must be positive\");\n        }\n        values = new double[n];\n        double sum = 0;\n        for (int i = 0; i < n - 1; i++) {\n            values[i] = random.nextDouble();\n            sum += values[i];\n        }\n        values[n - 1] = 1.0 - sum;\n        this.total = 1.0;\n    }\n\n    public Distribution clone() {\n        double[] newValues = new double[values.length];\n        System.arraycopy(values, 0, newValues, 0, values.length);\n        return new Distribution(newValues);\n    }\n\n    public double cumulativeProbability(double x) {\n        if (x < 0) {\n            return 0;\n        }\n        if (x > 1) {\n            return 1;\n        }\n        double sum = 0;\n        for (double d : values) {\n            if (d < 0) {\n                throw new IllegalStateException(\"Negative probability\");\n            }\n            sum += d / total;\n            if (sum >= x) {\n                return sum;\n            }\n        }\n        return sum;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}