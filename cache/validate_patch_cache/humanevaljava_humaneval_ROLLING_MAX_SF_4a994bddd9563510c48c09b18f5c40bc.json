{
    "patch": "public static List<Integer> rolling_max(List<Integer> numbers) {\n    List<Integer> result = new ArrayList<>();\n    Deque<Integer> deque = new LinkedList<>();\n\n    for (int i = 0; i < numbers.size(); i++) {\n        int current = numbers.get(i);\n        while (!deque.isEmpty() && deque.peekLast() < current) {\n            deque.pollLast();\n        }\n        deque.addLast(current);\n        if (i >= deque.size() - 1) {\n            result.add(deque.peekFirst());\n        }\n    }\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/ROLLING_MAX.java b/src/main/java/humaneval/buggy/ROLLING_MAX.java\nindex d95e9dc..28f7988 100644\n--- a/src/main/java/humaneval/buggy/ROLLING_MAX.java\n+++ b/src/main/java/humaneval/buggy/ROLLING_MAX.java\n@@ -4,14 +4,21 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class ROLLING_MAX {\n-    public static List<Integer> rolling_max(List<Integer> numbers) {\n-        List<Integer> result = new ArrayList<Integer>();\n-        Integer running_max = null;\n+public static List<Integer> rolling_max(List<Integer> numbers) {\n+    List<Integer> result = new ArrayList<>();\n+    Deque<Integer> deque = new LinkedList<>();\n \n-        for (Integer n : numbers){\n-            running_max = Math.max(running_max, n);\n-            result.add(running_max);\n+    for (int i = 0; i < numbers.size(); i++) {\n+        int current = numbers.get(i);\n+        while (!deque.isEmpty() && deque.peekLast() < current) {\n+            deque.pollLast();\n+        }\n+        deque.addLast(current);\n+        if (i >= deque.size() - 1) {\n+            result.add(deque.peekFirst());\n         }\n-        return result;\n     }\n+\n+    return result;\n+}\n }",
    "result_reason": " /tmp/humaneval-ROLLING_MAX/src/main/java/humaneval/buggy/ROLLING_MAX.java:[9,5] cannot find symbol",
    "test_result": "ERROR"
}