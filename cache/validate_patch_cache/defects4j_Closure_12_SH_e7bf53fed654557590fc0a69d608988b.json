{
    "patch": "  private static boolean hasExceptionCatchStatements(Node block) {\n    for (Node statement = block.getFirstChild(); statement != null; statement = statement.getNext()) {\n      if (statement.isTry()) {\n        return true;\n      }\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..4a82a46c 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,14 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+  private static boolean hasExceptionCatchStatements(Node block) {\n+    for (Node statement = block.getFirstChild(); statement != null; statement = statement.getNext()) {\n+      if (statement.isTry()) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}