{
    "patch": "      if (parent != null && parent.getLastChild() == n &&\n          NodeUtil.isObjectLitKey(parent, n)) {\n        // Don't traverse functions that are getting added to an object literal\n        // unless the object literal is inside of a function (because then the\n        // function may be lent elsewhere).\n        if (!NodeUtil.isFunctionBlock(t.getScopeRoot().getParent())) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..e1f47fce 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,15 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && parent.getLastChild() == n &&\n+          NodeUtil.isObjectLitKey(parent, n)) {\n+        // Don't traverse functions that are getting added to an object literal\n+        // unless the object literal is inside of a function (because then the\n+        // function may be lent elsewhere).\n+        if (!NodeUtil.isFunctionBlock(t.getScopeRoot().getParent())) {\n+          return false;\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}