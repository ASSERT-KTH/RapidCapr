{
    "patch": "  static boolean isSimpleNumber(String s) {\n    if (s == null || s.length() == 0) {\n      return false;\n    }\n\n    boolean nonZeroDigitFound = false;\n    for (int i = 0; i < s.length(); i++) {\n      char digit = s.charAt(i);\n      if (digit >= '0' && digit <= '9') {\n        nonZeroDigitFound |= digit != '0';\n      } else {\n        return false; // invalid char found\n      }\n    }\n\n    return nonZeroDigitFound;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 2270c172..1a90307b 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -781,14 +781,21 @@ class CodeGenerator {\n   }\n \n   static boolean isSimpleNumber(String s) {\n-    int len = s.length();\n-    for (int index = 0; index < len; index++) {\n-      char c = s.charAt(index);\n-      if (c < '0' || c > '9') {\n-        return false;\n+    if (s == null || s.length() == 0) {\n+      return false;\n+    }\n+\n+    boolean nonZeroDigitFound = false;\n+    for (int i = 0; i < s.length(); i++) {\n+      char digit = s.charAt(i);\n+      if (digit >= '0' && digit <= '9') {\n+        nonZeroDigitFound |= digit != '0';\n+      } else {\n+        return false; // invalid char found\n       }\n     }\n-    return len > 0 && s.charAt(0) != '0';\n+\n+    return nonZeroDigitFound;\n   }\n \n   static double getSimpleNumber(String s) {",
    "result_reason": "junit.framework.ComparisonFailure: expected:<var x={[\"010\"]:1}> but was:<var x={[10]:1}>",
    "test_result": "FAIL"
}