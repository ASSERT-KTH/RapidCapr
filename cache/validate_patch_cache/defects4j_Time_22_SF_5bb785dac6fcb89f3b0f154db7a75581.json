{
    "patch": "        long weeks = duration / 604800000; // 1 week = 7*24*60*60*1000 milliseconds\n        for (int i = 0; i < weeks; i++) {\n            // add one week to the period, adjusting the start and end instants if necessary\n            duration += WEEK;\n            if (endInstant != null) {\n                endInstant = endInstant.plus(WEEK);\n            }\n            if (startInstant != null) {\n                startInstant = startInstant.plus(WEEK);\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..05a1f8a3 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+        long weeks = duration / 604800000; // 1 week = 7*24*60*60*1000 milliseconds\n+        for (int i = 0; i < weeks; i++) {\n+            // add one week to the period, adjusting the start and end instants if necessary\n+            duration += WEEK;\n+            if (endInstant != null) {\n+                endInstant = endInstant.plus(WEEK);\n+            }\n+            if (startInstant != null) {\n+                startInstant = startInstant.plus(WEEK);\n+            }\n+        }\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}