{
    "patch": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (!Character.isLetter(ch0) || !Character.isLetter(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        int pos = 3;\n        char ch = str.charAt(pos);\n        while (pos < len && ch != '_') {\n            if (!Character.isLetterOrDigit(ch) && ch != '-') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            pos++;\n            if (pos < len) {\n                ch = str.charAt(pos);\n            }\n        }\n        if (pos == len) {\n            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n        } else {\n            String country = str.substring(3, pos);\n            if (pos + 1 == len) {\n                return new Locale(str.substring(0, 2), country);\n            } else {\n                if (str.charAt(pos + 1) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), country, str.substring(pos + 2));\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..d236c833 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,40 +91,51 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+public static Locale toLocale(String str) {\n+    if (str == null) {\n+        return null;\n+    }\n+    int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    char ch0 = str.charAt(0);\n+    char ch1 = str.charAt(1);\n+    if (!Character.isLetter(ch0) || !Character.isLetter(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str, \"\");\n+    } else {\n+        if (str.charAt(2) != '_') {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n+        int pos = 3;\n+        char ch = str.charAt(pos);\n+        while (pos < len && ch != '_') {\n+            if (!Character.isLetterOrDigit(ch) && ch != '-') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            pos++;\n+            if (pos < len) {\n+                ch = str.charAt(pos);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        }\n+        if (pos == len) {\n+            return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+        } else {\n+            String country = str.substring(3, pos);\n+            if (pos + 1 == len) {\n+                return new Locale(str.substring(0, 2), country);\n             } else {\n-                if (str.charAt(5) != '_') {\n+                if (str.charAt(pos + 1) != '_') {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                return new Locale(str.substring(0, 2), country, str.substring(pos + 2));\n             }\n         }\n     }\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}