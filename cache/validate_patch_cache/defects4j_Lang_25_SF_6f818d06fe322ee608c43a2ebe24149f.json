{
    "patch": "public static byte[] escape(String s, String encoding) throws UnsupportedEncodingException {\n     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n     for (int i = 0; i < s.length(); i++) {\n         int ch = s.charAt(i) & 0xff;\n         if (ch == '+') {\n             buffer.write(' ');\n         } else if (ch == '%' && i + 2 < s.length()) {\n             int d1 = Character.digit(s.charAt(i+1), 16);\n             int d2 = Character.digit(s.charAt(i+2), 16);\n             if (d1 != -1 && d2 != -1) {\n                 buffer.write((byte) ((d1 << 4) + d2));\n                 i += 2;\n             } else {\n                 buffer.write(ch);\n             }\n         } else {\n             buffer.write(ch);\n         }\n     }\n     return buffer.toByteArray();\n }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..492d8e78 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,27 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static byte[] escape(String s, String encoding) throws UnsupportedEncodingException {\n+     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n+     for (int i = 0; i < s.length(); i++) {\n+         int ch = s.charAt(i) & 0xff;\n+         if (ch == '+') {\n+             buffer.write(' ');\n+         } else if (ch == '%' && i + 2 < s.length()) {\n+             int d1 = Character.digit(s.charAt(i+1), 16);\n+             int d2 = Character.digit(s.charAt(i+2), 16);\n+             if (d1 != -1 && d2 != -1) {\n+                 buffer.write((byte) ((d1 << 4) + d2));\n+                 i += 2;\n+             } else {\n+                 buffer.write(ch);\n+             }\n+         } else {\n+             buffer.write(ch);\n+         }\n+     }\n+     return buffer.toByteArray();\n+ }\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}