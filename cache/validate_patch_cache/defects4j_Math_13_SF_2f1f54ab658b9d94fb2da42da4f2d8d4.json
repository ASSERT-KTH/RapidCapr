{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    EigenDecomposition dec = new EigenDecomposition(m);\n    RealMatrix sqrtD = squareRoot(dec.getD());\n    RealMatrix v = dec.getV();\n    RealMatrix vInv = new LUDecomposition(v).getSolver().getInverse();\n    return v.multiply(sqrtD).multiply(vInv);\n}\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    RealMatrix sqrtM = MatrixUtils.createRealMatrix(m.getRowDimension(), m.getColumnDimension());\n    for (int i = 0; i < m.getRowDimension(); i++) {\n        for (int j = 0; j < m.getColumnDimension(); j++) {\n            if (i == j) {\n                sqrtM.setEntry(i, j, Math.sqrt(m.getEntry(i, j)));\n            } else {\n                sqrtM.setEntry(i, j, 0.0);\n            }\n        }\n    }\n    return sqrtM;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..842ac793f 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,25 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    EigenDecomposition dec = new EigenDecomposition(m);\n+    RealMatrix sqrtD = squareRoot(dec.getD());\n+    RealMatrix v = dec.getV();\n+    RealMatrix vInv = new LUDecomposition(v).getSolver().getInverse();\n+    return v.multiply(sqrtD).multiply(vInv);\n+}\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    RealMatrix sqrtM = MatrixUtils.createRealMatrix(m.getRowDimension(), m.getColumnDimension());\n+    for (int i = 0; i < m.getRowDimension(); i++) {\n+        for (int j = 0; j < m.getColumnDimension(); j++) {\n+            if (i == j) {\n+                sqrtM.setEntry(i, j, Math.sqrt(m.getEntry(i, j)));\n+            } else {\n+                sqrtM.setEntry(i, j, 0.0);\n+            }\n+        }\n     }\n+    return sqrtM;\n+}\n }",
    "result_reason": "error: method squareRoot(RealMatrix) is already defined in class AbstractLeastSquaresOptimizer",
    "test_result": "ERROR"
}