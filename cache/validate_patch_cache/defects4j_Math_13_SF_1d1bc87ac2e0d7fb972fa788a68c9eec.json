{
    "patch": "private RealMatrix squareRoot(RealMatrix m) {\n    SingularValueDecomposition svd = new SingularValueDecomposition(m);\n    RealMatrix s = svd.getS();\n    RealMatrix v = svd.getV();\n    RealMatrix sSqrt = MatrixUtils.createRealMatrix(s.getRowDimension(), s.getColumnDimension());\n    for (int i = 0; i < s.getRowDimension(); i++) {\n        double val = s.getEntry(i, i);\n        sSqrt.setEntry(i, i, Math.sqrt(Math.max(0.0, val)));\n    }\n    RealMatrix vSqrt = v.scalarMultiply(1.0 / Math.sqrt(2.0));\n    return vSqrt.multiply(sSqrt).multiply(vSqrt.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..ffadfd20c 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,16 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+private RealMatrix squareRoot(RealMatrix m) {\n+    SingularValueDecomposition svd = new SingularValueDecomposition(m);\n+    RealMatrix s = svd.getS();\n+    RealMatrix v = svd.getV();\n+    RealMatrix sSqrt = MatrixUtils.createRealMatrix(s.getRowDimension(), s.getColumnDimension());\n+    for (int i = 0; i < s.getRowDimension(); i++) {\n+        double val = s.getEntry(i, i);\n+        sSqrt.setEntry(i, i, Math.sqrt(Math.max(0.0, val)));\n     }\n+    RealMatrix vSqrt = v.scalarMultiply(1.0 / Math.sqrt(2.0));\n+    return vSqrt.multiply(sSqrt).multiply(vSqrt.transpose());\n+}\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}