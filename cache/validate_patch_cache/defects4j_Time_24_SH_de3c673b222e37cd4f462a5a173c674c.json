{
    "patch": "            if (savedFields[i].iLeapSecond == null &&\n                savedFields[i].iZone == null &&\n                savedFields[i].iZoneOffset != null) {\n                if (iZone == null) {\n                    millis -= savedFields[i].iZoneOffset.intValue();\n                } else {\n                    int offset = iZone.getOffset(millis);\n                    int diff = savedFields[i].iZoneOffset.intValue() - offset;\n                    if (diff != 0) {\n                        throw new IllegalArgumentException\n                            (\"Illegal instant due to time zone offset transition (\" + iZone + ')');\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..7e67c593 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,20 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iLeapSecond == null &&\n+                savedFields[i].iZone == null &&\n+                savedFields[i].iZoneOffset != null) {\n+                if (iZone == null) {\n+                    millis -= savedFields[i].iZoneOffset.intValue();\n+                } else {\n+                    int offset = iZone.getOffset(millis);\n+                    int diff = savedFields[i].iZoneOffset.intValue() - offset;\n+                    if (diff != 0) {\n+                        throw new IllegalArgumentException\n+                            (\"Illegal instant due to time zone offset transition (\" + iZone + ')');\n+                    }\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}