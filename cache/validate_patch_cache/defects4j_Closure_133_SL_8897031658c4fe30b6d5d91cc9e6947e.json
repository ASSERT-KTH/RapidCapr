{
    "patch": "private String getRemainingJSDocLine() {\n  String result = null;\n  try {\n    result = stream.getRemainingJSDocLine().trim();\n    result = result.trim();\n  } catch (IllegalStateException e) {\n    e.printStackTrace(); // add debug print to diagnose error\n  }\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..1f7c0fac 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,16 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+  String result = null;\n+  try {\n+    result = stream.getRemainingJSDocLine().trim();\n+    result = result.trim();\n+  } catch (IllegalStateException e) {\n+    e.printStackTrace(); // add debug print to diagnose error\n+  }\n+  return result;\n+}\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}