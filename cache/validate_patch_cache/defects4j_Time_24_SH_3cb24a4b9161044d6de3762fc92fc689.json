{
    "patch": "            DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n            DurationField months = DurationFieldType.months().getField(iChrono);\n            DurationField years = DurationFieldType.years().getField(iChrono);\n\n            int woyYear = savedFields[0].getWOYYear();\n            int weekOfWeekyear = savedFields[0].getWeekOfWeekyear();\n            int weekyear = savedFields[0].getWeekyear();\n\n            if (savedFields[0].getFieldType() == DateTimeFieldType.weekyear()) {\n                woyYear = weekyear;\n            }\n            else if (savedFields[0].getFieldType() == DateTimeFieldType.weekOfWeekyear()) {\n                int yearField = 0;\n                int maxYear = Integer.MIN_VALUE;\n                for (int i = 0; i < count; i++) {\n                    int fieldType = savedFields[i].getFieldType();\n                    if (fieldType == DateTimeFieldType.weekyear()) {\n                        int value = savedFields[i].getValue();\n                        if (value > maxYear) {\n                            maxYear = value;\n                            yearField = i;\n                        }\n                    }\n                }\n                if (maxYear != Integer.MIN_VALUE) {\n                    weekyear = maxYear;\n                    woyYear = maxYear;\n                    if (savedFields[yearField].getFieldType() == DateTimeFieldType.weekOfCentury()) {\n                        weekOfWeekyear = savedFields[yearField].getWeekOfWeekyear();\n                    }\n                    else {\n                        weekOfWeekyear = savedFields[yearField + 1].getWeekOfWeekyear();\n                    }\n                }\n            }\n\n            DateTimeField woyDF = iChrono.weekyearOfMaster().getField(iChrono);\n            long newWOYMillis = woyDF.set(millis, woyYear);\n            DateTimeField wDF = iChrono.weekOfWeekyear().getField(iChrono);\n            long newWMillis = wDF.set(newWOYMillis, weekOfWeekyear);\n\n            int maxYear = years.getMaximumValue(millis);\n            long nextYearMillis = years.add(newWMillis, 1);\n            if(weekyear >= maxYear && newWMillis > nextYearMillis)\n                throw new IllegalFieldValueException(\"weekyear\", text);\n            millis = newWMillis;\n            if (newWMillis > nextYearMillis) {\n                millis = wDF.add(newWOYMillis, weekOfWeekyear == 1 ? 7 : -1);\n            }\n\n            if (count == 0 || savedFields[0].getFieldType() != DateTimeFieldType.monthOfYear()) {\n                return millis;\n            }\n            // java.lang.IndexOutOfBoundsException: Index: 12, Size: 12\n            // on testSampleToString fails here!!\n            int month = (int)savedFields[0].getValue();\n            for (int i = 1; i < count; i++) {\n                DateTimeField f = savedFields[i].getField();\n                if (f.getType() == DateTimeFieldType.monthOfYear()) {\n                    month = (int)savedFields[i].getValue();\n                    break;\n                }\n            }\n            millis = setMonthOfYear(millis, month);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..332f2834 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,70 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n+            DurationField months = DurationFieldType.months().getField(iChrono);\n+            DurationField years = DurationFieldType.years().getField(iChrono);\n+\n+            int woyYear = savedFields[0].getWOYYear();\n+            int weekOfWeekyear = savedFields[0].getWeekOfWeekyear();\n+            int weekyear = savedFields[0].getWeekyear();\n+\n+            if (savedFields[0].getFieldType() == DateTimeFieldType.weekyear()) {\n+                woyYear = weekyear;\n+            }\n+            else if (savedFields[0].getFieldType() == DateTimeFieldType.weekOfWeekyear()) {\n+                int yearField = 0;\n+                int maxYear = Integer.MIN_VALUE;\n+                for (int i = 0; i < count; i++) {\n+                    int fieldType = savedFields[i].getFieldType();\n+                    if (fieldType == DateTimeFieldType.weekyear()) {\n+                        int value = savedFields[i].getValue();\n+                        if (value > maxYear) {\n+                            maxYear = value;\n+                            yearField = i;\n+                        }\n+                    }\n+                }\n+                if (maxYear != Integer.MIN_VALUE) {\n+                    weekyear = maxYear;\n+                    woyYear = maxYear;\n+                    if (savedFields[yearField].getFieldType() == DateTimeFieldType.weekOfCentury()) {\n+                        weekOfWeekyear = savedFields[yearField].getWeekOfWeekyear();\n+                    }\n+                    else {\n+                        weekOfWeekyear = savedFields[yearField + 1].getWeekOfWeekyear();\n+                    }\n+                }\n+            }\n+\n+            DateTimeField woyDF = iChrono.weekyearOfMaster().getField(iChrono);\n+            long newWOYMillis = woyDF.set(millis, woyYear);\n+            DateTimeField wDF = iChrono.weekOfWeekyear().getField(iChrono);\n+            long newWMillis = wDF.set(newWOYMillis, weekOfWeekyear);\n+\n+            int maxYear = years.getMaximumValue(millis);\n+            long nextYearMillis = years.add(newWMillis, 1);\n+            if(weekyear >= maxYear && newWMillis > nextYearMillis)\n+                throw new IllegalFieldValueException(\"weekyear\", text);\n+            millis = newWMillis;\n+            if (newWMillis > nextYearMillis) {\n+                millis = wDF.add(newWOYMillis, weekOfWeekyear == 1 ? 7 : -1);\n+            }\n+\n+            if (count == 0 || savedFields[0].getFieldType() != DateTimeFieldType.monthOfYear()) {\n+                return millis;\n+            }\n+            // java.lang.IndexOutOfBoundsException: Index: 12, Size: 12\n+            // on testSampleToString fails here!!\n+            int month = (int)savedFields[0].getValue();\n+            for (int i = 1; i < count; i++) {\n+                DateTimeField f = savedFields[i].getField();\n+                if (f.getType() == DateTimeFieldType.monthOfYear()) {\n+                    month = (int)savedFields[i].getValue();\n+                    break;\n+                }\n+            }\n+            millis = setMonthOfYear(millis, month);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}