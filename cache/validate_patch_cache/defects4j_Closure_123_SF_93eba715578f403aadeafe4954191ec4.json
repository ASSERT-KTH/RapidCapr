{
    "patch": "public void printInOperatorInForLoop(boolean c, Object[] d) {\n    Object[] expected = new Object[10];\n    int j = 0;\n    for (int i = 0; i < 10; i++) {\n        if (c) {\n            expected[i] = j;\n            j++;\n        } else {\n            expected[i] = (i in d); // using in operator\n        }\n    }\n    Object[] actual = new Object[10];\n    j = 0;\n    for (int i = 0; i < 10; i++) {\n        if (c) {\n            actual[i] = j;\n            j++;\n        } else {\n            actual[i] = (i in d); // using in operator\n        }\n    }\n    assertArrayEquals(expected, actual);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..114739e6 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,29 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void printInOperatorInForLoop(boolean c, Object[] d) {\n+    Object[] expected = new Object[10];\n+    int j = 0;\n+    for (int i = 0; i < 10; i++) {\n+        if (c) {\n+            expected[i] = j;\n+            j++;\n+        } else {\n+            expected[i] = (i in d); // using in operator\n+        }\n+    }\n+    Object[] actual = new Object[10];\n+    j = 0;\n+    for (int i = 0; i < 10; i++) {\n+        if (c) {\n+            actual[i] = j;\n+            j++;\n+        } else {\n+            actual[i] = (i in d); // using in operator\n+        }\n+    }\n+    assertArrayEquals(expected, actual);\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}