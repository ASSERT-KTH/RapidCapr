{
    "patch": "case Token.CATCH:\n  // Provide the exception variable as a reference, and add a reference for\n  // any global variables used within the catch block.\n  Node e = n.getFirstChild();\n  if (e != null) {\n    scope.addReference(Ref.createCatch(e.getString(), e, parent));\n    collectVar(e, scope, parent);\n  }\n  currentScope = scopeCreator.createScope(n, scope.getClosestHoistScopeNode());\n  traverseInnerNode(n.getChildAtIndex(2), currentScope);\n  currentScope = scope;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..d78f0b64 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,17 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.CATCH:\n+  // Provide the exception variable as a reference, and add a reference for\n+  // any global variables used within the catch block.\n+  Node e = n.getFirstChild();\n+  if (e != null) {\n+    scope.addReference(Ref.createCatch(e.getString(), e, parent));\n+    collectVar(e, scope, parent);\n+  }\n+  currentScope = scopeCreator.createScope(n, scope.getClosestHoistScopeNode());\n+  traverseInnerNode(n.getChildAtIndex(2), currentScope);\n+  currentScope = scope;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}