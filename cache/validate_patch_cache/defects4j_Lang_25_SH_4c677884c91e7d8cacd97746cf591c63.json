{
    "patch": "// Convert Unicode escapes to characters\nStringBuffer buf = new StringBuffer();\nfor (int i = 0; i < escaped.length(); i++) {\n    char ch = escaped.charAt(i);\n    if (ch == '\\\\' && i + 1 < escaped.length() && escaped.charAt(i + 1) == 'u') {\n        char unicode[] = new char[4];\n        escaped.getChars(i + 2, i + 6, unicode, 0);\n        try {\n            ch = (char) Integer.parseInt(new String(unicode), 16);\n        } catch (NumberFormatException e) {\n            // Ignore the illegal Unicode escape\n        }\n        i += 5;\n    }\n    buf.append(ch);\n}\nreturn buf.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}