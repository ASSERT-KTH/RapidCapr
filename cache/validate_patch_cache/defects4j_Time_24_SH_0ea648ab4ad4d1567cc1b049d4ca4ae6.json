{
    "patch": "                long curMillis = savedFields[i].set(millis, resetFields);\n                if ((curMillis < millis) != (savedFields[i].getFieldType() instanceof DateTimeFieldType)) {\n                    throw new IllegalArgumentException(\"Parse failed due to illegal input\");\n                }\n                millis = curMillis;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..6f830b49 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,11 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                long curMillis = savedFields[i].set(millis, resetFields);\n+                if ((curMillis < millis) != (savedFields[i].getFieldType() instanceof DateTimeFieldType)) {\n+                    throw new IllegalArgumentException(\"Parse failed due to illegal input\");\n+                }\n+                millis = curMillis;\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}