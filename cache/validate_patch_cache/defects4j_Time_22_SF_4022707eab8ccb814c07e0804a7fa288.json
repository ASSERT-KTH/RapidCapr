{
    "patch": "protected BasePeriod(long duration) {\n    Period period = Duration.millis(duration).toPeriod(PeriodType.standard());\n    if (period.getWeeks() > 0) {\n        period = period.normalizedStandard();\n    }\n    this(period, PeriodType.standard(), ISOChronology.getInstanceUTC());\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..cf4a1ccc 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,13 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    Period period = Duration.millis(duration).toPeriod(PeriodType.standard());\n+    if (period.getWeeks() > 0) {\n+        period = period.normalizedStandard();\n     }\n+    this(period, PeriodType.standard(), ISOChronology.getInstanceUTC());\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}