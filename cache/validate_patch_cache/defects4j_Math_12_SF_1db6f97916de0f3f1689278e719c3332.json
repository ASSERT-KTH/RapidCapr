{
    "patch": "public class Main {\n\n    public static double[] distribution(double[] data) {\n        if (data == null || data.length == 0 || data.length > 1000000) {\n            return new double[]{};\n        }\n\n        if (data.length == 1) {\n            return new double[]{1d};\n        }\n\n        Arrays.sort(data);\n\n        List<Double> uniqueValues = new ArrayList<>();\n        List<Integer> counts = new ArrayList<>();\n        double lastValue = data[0];\n        int count = 1;\n        for (int i = 1; i < data.length; i++) {\n            if (data[i] != lastValue) {\n                uniqueValues.add(lastValue);\n                counts.add(count);\n                lastValue = data[i];\n                count = 1;\n            } else {\n                count++;\n            }\n        }\n\n        uniqueValues.add(lastValue);\n        counts.add(count);\n\n        double[] result = new double[data.length];\n        for (int i = 0; i < uniqueValues.size(); i++) {\n            double probability = (double) counts.get(i) / data.length;\n\n            int startIndex = i == 0 ? 0 : binarySearch(data, uniqueValues.get(i - 1), false);\n            int endIndex = binarySearch(data, uniqueValues.get(i), true);\n            for (int j = startIndex; j < endIndex; j++) {\n                result[j] = probability;\n            }\n        }\n\n        return result;\n    }\n\n    private static int binarySearch(double[] arr, double key, boolean inclusive) {\n        int low = 0, high = arr.length - 1;\n        while (low <= high) {\n            int mid = (low + high) >>> 1;\n            double midVal = arr[mid];\n            int cmp = Double.compare(midVal, key);\n\n            if (cmp < 0 || (inclusive && cmp == 0)) {\n                low = mid + 1;\n            } else if (cmp > 0) {\n                high = mid - 1;\n            } else {\n                return mid;\n            }\n        }\n        return low;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}