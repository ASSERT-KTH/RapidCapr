{
    "patch": "        copy.data = new java.util.ArrayList(this.data.subList(start, end + 1));\n        if(copy.data.size() > 0) {\n            for (int i = 0; i < copy.data.size(); i++) {\n                copy.data.set(i, (TimeSeriesDataItem) copy.data.get(i).clone());\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..65b184e 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,12 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList(this.data.subList(start, end + 1));\n+        if(copy.data.size() > 0) {\n+            for (int i = 0; i < copy.data.size(); i++) {\n+                copy.data.set(i, (TimeSeriesDataItem) copy.data.get(i).clone());\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: clone() has protected access in Object",
    "test_result": "ERROR"
}