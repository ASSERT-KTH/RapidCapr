{
    "patch": "if (result != null) {\n  if (this.isObject() && that.isObject()) {\n    return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n  } else if (!result.equals(getNativeType(JSTypeNative.NO_TYPE))) {\n    return result;\n  }\n}\nreturn getNativeType(JSTypeNative.NO_TYPE);",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/UnionType.java b/src/com/google/javascript/rhino/jstype/UnionType.java\nindex a9c9a0ae..8c6dda71 100644\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n@@ -288,7 +288,14 @@ public class UnionType extends JSType {\n       builder.addAlternate(that);\n     }\n     JSType result = builder.build();\n-    if (result != null) {\n+if (result != null) {\n+  if (this.isObject() && that.isObject()) {\n+    return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n+  } else if (!result.equals(getNativeType(JSTypeNative.NO_TYPE))) {\n+    return result;\n+  }\n+}\n+return getNativeType(JSTypeNative.NO_TYPE);\n       return result;\n     } else if (this.isObject() && that.isObject()) {\n       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}