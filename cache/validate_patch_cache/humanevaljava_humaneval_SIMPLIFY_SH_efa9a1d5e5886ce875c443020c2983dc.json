{
    "patch": "if (a == 0 || b == 0 || c == 0 || d == 0) {\n    return false; // no need for simplification\n} else if (numerator == 0) {\n    return true; // numerator is already 0\n} else {\n    int gcd = getGcd(Math.abs(numerator), Math.abs(denom));\n    numerator = numerator / gcd;\n    denom = denom / gcd;\n    return denom > 0 ? numerator == a * c && denom == b * d : numerator == -a * c && denom == -b * d;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/SIMPLIFY.java b/src/main/java/humaneval/buggy/SIMPLIFY.java\nindex a55ee2e..4206463 100644\n--- a/src/main/java/humaneval/buggy/SIMPLIFY.java\n+++ b/src/main/java/humaneval/buggy/SIMPLIFY.java\n@@ -20,7 +20,16 @@ public class SIMPLIFY {\n \n         int numerator = a * c;\n         int denom = b * d;\n-        if (numerator / denom == (int) (numerator / denom))\n+if (a == 0 || b == 0 || c == 0 || d == 0) {\n+    return false; // no need for simplification\n+} else if (numerator == 0) {\n+    return true; // numerator is already 0\n+} else {\n+    int gcd = getGcd(Math.abs(numerator), Math.abs(denom));\n+    numerator = numerator / gcd;\n+    denom = denom / gcd;\n+    return denom > 0 ? numerator == a * c && denom == b * d : numerator == -a * c && denom == -b * d;\n+}\n             return true;\n         return false;\n     }",
    "result_reason": " /tmp/humaneval-SIMPLIFY/src/main/java/humaneval/buggy/SIMPLIFY.java:[28,15] cannot find symbol",
    "test_result": "ERROR"
}