{
    "patch": "if (number <= 0) {\n    return \"\";\n}\n\nif (number < 1 || number > 3999) {\n    throw new IllegalArgumentException(\"Number cannot be represented in mini roman numerals.\");\n}\n\nStringBuilder resultBuilder = new StringBuilder();\n\nfor (int i = num.length - 1; i >= 0; i--) {\n    while (number >= num[i]) {\n        number -= num[i];\n        resultBuilder.append(sym[i]);\n    }\n}\n\nreturn resultBuilder.toString().toLowerCase();",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\nindex 0f3c881..96195dc 100644\n--- a/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n+++ b/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java\n@@ -19,7 +19,24 @@ public class INT_TO_MINI_ROMAN {\n         int i = 12;\n         String result = \"\";\n         while (number > 0) {\n-            result += sym[i];\n+if (number <= 0) {\n+    return \"\";\n+}\n+\n+if (number < 1 || number > 3999) {\n+    throw new IllegalArgumentException(\"Number cannot be represented in mini roman numerals.\");\n+}\n+\n+StringBuilder resultBuilder = new StringBuilder();\n+\n+for (int i = num.length - 1; i >= 0; i--) {\n+    while (number >= num[i]) {\n+        number -= num[i];\n+        resultBuilder.append(sym[i]);\n+    }\n+}\n+\n+return resultBuilder.toString().toLowerCase();\n             number %= num[i];\n             i -= 1;\n         }",
    "result_reason": " /tmp/humaneval-INT_TO_MINI_ROMAN/src/main/java/humaneval/buggy/INT_TO_MINI_ROMAN.java:[32,10] variable i is already defined in method int_to_mini_roman(int)",
    "test_result": "ERROR"
}