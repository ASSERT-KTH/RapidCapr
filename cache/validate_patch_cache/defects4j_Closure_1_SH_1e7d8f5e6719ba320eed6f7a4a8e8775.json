{
    "patch": "// Strip unreferenced args off the end of the function declaration.\nNode lastArg;\nwhile ((lastArg = argList.getLastChild()) != null && !referenced.contains(fnScope.getVar(lastArg.getString()))) {\n    argList.removeChild(lastArg);\n    compiler.reportCodeChange();\n}\nif (lastArg == null && argList.hasChildren()) {\n    var unusedCount = argList.getChildCount();\n    argList.removeChildren();\n    compiler.reportCodeChange();\n    compiler.getSyntheticCodeInfo().removeUnusedFunctionArgument(function, unusedCount);\n} ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..d9ebbc94 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,18 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+// Strip unreferenced args off the end of the function declaration.\n+Node lastArg;\n+while ((lastArg = argList.getLastChild()) != null && !referenced.contains(fnScope.getVar(lastArg.getString()))) {\n+    argList.removeChild(lastArg);\n+    compiler.reportCodeChange();\n+}\n+if (lastArg == null && argList.hasChildren()) {\n+    var unusedCount = argList.getChildCount();\n+    argList.removeChildren();\n+    compiler.reportCodeChange();\n+    compiler.getSyntheticCodeInfo().removeUnusedFunctionArgument(function, unusedCount);\n+} \n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}