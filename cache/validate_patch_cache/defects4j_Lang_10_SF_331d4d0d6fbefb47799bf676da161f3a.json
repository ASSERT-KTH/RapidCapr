{
    "patch": "    public void testLANG_831() throws Exception {\n        String pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n\n        SimpleDateFormat format = new SimpleDateFormat(pattern);\n\n        Date d1 = format.parse(\"2008-02-01T09:00:00.000-0800\");\n        Date d2 = format.parse(\"2008-02-01T09:00:00.000-0800\");\n        \n        Date dsdf = null; // Initialize to null\n        Date dfdp = null; // Initialize to null\n\n        String strDate = format.format(d1);\n\n        if (NumberUtils.isNumber(strDate)) {\n            dsdf = DateUtils.parseDate(strDate, new String[] {\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"});\n        }\n\n        strDate = StringUtils.replace(strDate, \".\", \",\");\n        dfdp = DateUtils.parseDate(strDate, new String[] {\"yyyy-MM-dd'T'HH:mm:ss,SSSZ\"});\n\n        assertEquals(\"Parsed dates should be equal\", dsdf, dfdp);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..a7cd9786 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,46 +300,27 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n-            case '?':\n-            case '[':\n-            case ']':\n-            case '(':\n-            case ')':\n-            case '{':\n-            case '}':\n-            case '\\\\':\n-            case '|':\n-            case '*':\n-            case '+':\n-            case '^':\n-            case '$':\n-            case '.':\n-                regex.append('\\\\');\n-            }\n-            regex.append(c);\n+    public void testLANG_831() throws Exception {\n+        String pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+\n+        SimpleDateFormat format = new SimpleDateFormat(pattern);\n+\n+        Date d1 = format.parse(\"2008-02-01T09:00:00.000-0800\");\n+        Date d2 = format.parse(\"2008-02-01T09:00:00.000-0800\");\n+        \n+        Date dsdf = null; // Initialize to null\n+        Date dfdp = null; // Initialize to null\n+\n+        String strDate = format.format(d1);\n+\n+        if (NumberUtils.isNumber(strDate)) {\n+            dsdf = DateUtils.parseDate(strDate, new String[] {\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"});\n         }\n-        return regex;\n+\n+        strDate = StringUtils.replace(strDate, \".\", \",\");\n+        dfdp = DateUtils.parseDate(strDate, new String[] {\"yyyy-MM-dd'T'HH:mm:ss,SSSZ\"});\n+\n+        assertEquals(\"Parsed dates should be equal\", dsdf, dfdp);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}