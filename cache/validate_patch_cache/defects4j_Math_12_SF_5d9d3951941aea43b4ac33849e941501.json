{
    "patch": "import java.math.BigDecimal;\n\npublic class Distribution {\n    public static double[] getDistribution(double[] input) {\n        if (input == null || input.length == 0) {\n            return new double[0];\n        }\n\n        double[] result = new double[input.length];\n        BigDecimal sum = BigDecimal.ZERO;\n        BigDecimal max = BigDecimal.valueOf(input[0]);\n\n        for (int i = 0; i < input.length; i++) {\n            BigDecimal inputVal = BigDecimal.valueOf(input[i]);\n            if (inputVal.compareTo(max) > 0) {\n                max = inputVal;\n            }\n        }\n\n        for (int i = 0; i < input.length; i++) {\n            BigDecimal inputVal = BigDecimal.valueOf(input[i]);\n            BigDecimal adjustedVal = inputVal.subtract(max);\n            result[i] = adjustedVal.doubleValue();\n            sum = sum.add(adjustedVal);\n        }\n\n        BigDecimal sumPerLength = sum.divide(BigDecimal.valueOf(input.length), 25, BigDecimal.ROUND_HALF_UP);\n\n        for (int i = 0; i < input.length; i++) {\n            BigDecimal adjustedVal = BigDecimal.valueOf(result[i]);\n            BigDecimal distVal = adjustedVal.add(sumPerLength);\n            BigDecimal dist = distVal.divide(sum, 25, BigDecimal.ROUND_HALF_UP);\n            result[i] = dist.doubleValue();\n        }\n\n        return result;\n    }\n}",
    "patch_diff": "",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}