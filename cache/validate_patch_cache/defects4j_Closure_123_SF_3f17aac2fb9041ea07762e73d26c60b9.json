{
    "patch": "public String fixCode(boolean c, Object[] d) {\n    String expected = \"\";\n    if (c) {\n        expected = \"for (a = 0; ;) foo()\";\n    } else {\n        expected = \"for (a = (Arrays.asList(d).contains(0) ? 0 : -1); ;) foo()\";\n    }\n    return expected;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..df85083e 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,15 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public String fixCode(boolean c, Object[] d) {\n+    String expected = \"\";\n+    if (c) {\n+        expected = \"for (a = 0; ;) foo()\";\n+    } else {\n+        expected = \"for (a = (Arrays.asList(d).contains(0) ? 0 : -1); ;) foo()\";\n+    }\n+    return expected;\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}