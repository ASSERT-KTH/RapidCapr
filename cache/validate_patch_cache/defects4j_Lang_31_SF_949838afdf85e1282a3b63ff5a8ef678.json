{
    "patch": "import java.lang.Character;\n\npublic class StringUtils {\n    \n    public static boolean containsAny(String str, char[] searchChars) {\n        if (str == null || str.isEmpty() || searchChars == null || searchChars.length == 0) {\n            return false;\n        }\n\n        boolean found = false;\n        for (int i = 0; i < str.length() && !found; i++) {\n            char ch = str.charAt(i);\n            if (Character.isHighSurrogate(ch) && i < str.length() - 1) {\n                int codePoint = Character.codePointAt(str, i);\n                i++;\n                found = contains(searchChars, codePoint);\n            } else {\n                found = contains(searchChars, ch);\n            }\n        }\n\n        return found;\n    }\n\n    private static boolean contains(char[] searchChars, int ch) {\n        for (char searchChar : searchChars) {\n            if (searchChar == ch) {\n                return true;\n            }\n        }\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..6baa1a06 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,39 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.lang.Character;\n+\n+public class StringUtils {\n+    \n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || str.isEmpty() || searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+\n+        boolean found = false;\n+        for (int i = 0; i < str.length() && !found; i++) {\n+            char ch = str.charAt(i);\n+            if (Character.isHighSurrogate(ch) && i < str.length() - 1) {\n+                int codePoint = Character.codePointAt(str, i);\n+                i++;\n+                found = contains(searchChars, codePoint);\n+            } else {\n+                found = contains(searchChars, ch);\n+            }\n+        }\n+\n+        return found;\n+    }\n+\n+    private static boolean contains(char[] searchChars, int ch) {\n+        for (char searchChar : searchChars) {\n+            if (searchChar == ch) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}