{
    "patch": "public static boolean containsAny(CharSequence cs, char... searchChars) {\n    if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n        return false;\n    }\n    for (int i = 0; i < cs.length(); i++) {\n        char ch = cs.charAt(i);\n        if (isInvalidCodePoint(ch)) {\n            continue;\n        }\n        for (int j = 0; j < searchChars.length; j++) {\n            char searchChar = searchChars[j];\n            if (isInvalidCodePoint(searchChar)) {\n                continue;\n            }\n            if (ch == searchChar || isSurrogatePair(searchChar, ch)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean isInvalidCodePoint(char c) {\n    return Character.isHighSurrogate(c) || Character.isLowSurrogate(c);\n}\n\nprivate static boolean isSurrogatePair(char high, char low) {\n    return Character.isHighSurrogate(high) && Character.isLowSurrogate(low);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..89a65269 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(CharSequence cs, char... searchChars) {\n+    if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n+        return false;\n+    }\n+    for (int i = 0; i < cs.length(); i++) {\n+        char ch = cs.charAt(i);\n+        if (isInvalidCodePoint(ch)) {\n+            continue;\n+        }\n+        for (int j = 0; j < searchChars.length; j++) {\n+            char searchChar = searchChars[j];\n+            if (isInvalidCodePoint(searchChar)) {\n+                continue;\n+            }\n+            if (ch == searchChar || isSurrogatePair(searchChar, ch)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean isInvalidCodePoint(char c) {\n+    return Character.isHighSurrogate(c) || Character.isLowSurrogate(c);\n+}\n+\n+private static boolean isSurrogatePair(char high, char low) {\n+    return Character.isHighSurrogate(high) && Character.isLowSurrogate(low);\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}