{
    "patch": "public Object returnValueFor(Class clazz) {\n    if (clazz.equals(int.class) || clazz.equals(Integer.class)) {\n        return 0;\n    } else if (clazz.equals(long.class) || clazz.equals(Long.class)) {\n        return 0L;\n    } else if (clazz.equals(double.class) || clazz.equals(Double.class)) {\n        return 0.0;\n    } else if (clazz.equals(float.class) || clazz.equals(Float.class)) {\n        return 0.0f;\n    } else if (clazz.equals(boolean.class) || clazz.equals(Boolean.class)) {\n        return false;\n    } else if (clazz.equals(char.class) || clazz.equals(Character.class)) {\n        return '\\0';\n    } else if (clazz.equals(String.class)) {\n        return \"\";\n    } else if (clazz.equals(List.class) || clazz.equals(Collection.class)) {\n        return new ArrayList<>();\n    } else if (clazz.equals(Map.class)) {\n        return new HashMap<>();\n    } else if (clazz.equals(Set.class)) {\n        return new HashSet<>();\n    } else {\n        // Add a default return statement to avoid compilation error\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}