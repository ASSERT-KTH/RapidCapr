{
    "patch": "        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n                // Added code starts here\n                float duration = savedFields[i].iField.getType().getField(durationType).getDurationField().getUnitMillis();\n                if (duration < 0) {\n                    savedFields[i].iField.roundFloor(millis);\n                } else {\n                    savedFields[i].iField.roundCeiling(millis);\n                }\n                // Added code ends here\n            }\n        } catch (IllegalFieldValueException e) {",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..3776dccf 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,19 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        try {\n+            for (int i = 0; i < count; i++) {\n+                millis = savedFields[i].set(millis, resetFields);\n+                // Added code starts here\n+                float duration = savedFields[i].iField.getType().getField(durationType).getDurationField().getUnitMillis();\n+                if (duration < 0) {\n+                    savedFields[i].iField.roundFloor(millis);\n+                } else {\n+                    savedFields[i].iField.roundCeiling(millis);\n+                }\n+                // Added code ends here\n+            }\n+        } catch (IllegalFieldValueException e) {\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'try' without 'catch' or 'finally'",
    "test_result": "ERROR"
}