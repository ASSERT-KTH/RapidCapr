{
    "patch": "                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n                \n                // if there are two transitions very close to each other,\n                // using just the previous one may result in the wrong offset\n                long nextLocal = nextTransition(instantAdjusted);\n                if (nextLocal < instantLocal - offsetAdjusted) {\n                    prevLocal = nextLocal;\n                }\n                \n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                } else {\n                    return offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a2b8ae4a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,20 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                long prevLocal = previousTransition(instantAdjusted);\n+                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+                \n+                // if there are two transitions very close to each other,\n+                // using just the previous one may result in the wrong offset\n+                long nextLocal = nextTransition(instantAdjusted);\n+                if (nextLocal < instantLocal - offsetAdjusted) {\n+                    prevLocal = nextLocal;\n+                }\n+                \n+                if (prevLocal != prevAdjusted) {\n+                    return offsetLocal;\n+                } else {\n+                    return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}