{
    "patch": "            if (resetFields && count > 0) {\n                SavedField last = savedFields[count - 1];\n                DateTimeField field = last.iField;\n                int value = last.iValue;\n                for (int i = count - 2; i >= 0; i--) {\n                    value = savedFields[i].set(value, false);\n                }\n                millis = field.getDurationField().add(millis, value);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..8993a87c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,14 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (resetFields && count > 0) {\n+                SavedField last = savedFields[count - 1];\n+                DateTimeField field = last.iField;\n+                int value = last.iValue;\n+                for (int i = count - 2; i >= 0; i--) {\n+                    value = savedFields[i].set(value, false);\n+                }\n+                millis = field.getDurationField().add(millis, value);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}