{
    "patch": "public static Locale toLocale(final String str) {\n    if (str == null || str.isEmpty()) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int lastSeparatorIndex = 2;\n    for (int i = 3; i < len; i++) {\n        final char ch = str.charAt(i);\n        if (ch == '_') {\n            if (i - lastSeparatorIndex == 3) {\n                if (!Character.isUpperCase(str.charAt(i - 1)) ||\n                        !Character.isUpperCase(str.charAt(i - 2))) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            } else if (i - lastSeparatorIndex != 4) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            lastSeparatorIndex = i;\n        } else if (!Character.isLowerCase(ch)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    if (lastSeparatorIndex != len) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final String language = str.substring(0, 2);\n    final String country = lastSeparatorIndex == 2 ? \"\" : str.substring(3, 5);\n    final String variant = lastSeparatorIndex < len ? str.substring(lastSeparatorIndex + 1) : \"\";\n    return new Locale(language, country, variant);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..135e4bce 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,47 +85,50 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        final int len = str.length();\n-        if (len < 2) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n-            }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            }\n-            if (len < 7) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(5) != '_') {\n+public static Locale toLocale(final String str) {\n+    if (str == null || str.isEmpty()) {\n+        return null;\n+    }\n+    final int len = str.length();\n+    if (len < 2) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    final char ch0 = str.charAt(0);\n+    final char ch1 = str.charAt(1);\n+    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    if (len == 2) {\n+        return new Locale(str);\n+    }\n+    if (str.charAt(2) != '_') {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    int lastSeparatorIndex = 2;\n+    for (int i = 3; i < len; i++) {\n+        final char ch = str.charAt(i);\n+        if (ch == '_') {\n+            if (i - lastSeparatorIndex == 3) {\n+                if (!Character.isUpperCase(str.charAt(i - 1)) ||\n+                        !Character.isUpperCase(str.charAt(i - 2))) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+            } else if (i - lastSeparatorIndex != 4) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            lastSeparatorIndex = i;\n+        } else if (!Character.isLowerCase(ch)) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n+    }\n+    if (lastSeparatorIndex != len) {\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n     }\n+    final String language = str.substring(0, 2);\n+    final String country = lastSeparatorIndex == 2 ? \"\" : str.substring(3, 5);\n+    final String variant = lastSeparatorIndex < len ? str.substring(lastSeparatorIndex + 1) : \"\";\n+    return new Locale(language, country, variant);\n+}\n \n     //-----------------------------------------------------------------------\n     /**",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__P",
    "test_result": "FAIL"
}