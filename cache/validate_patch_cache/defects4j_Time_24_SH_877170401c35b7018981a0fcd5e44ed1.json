{
    "patch": "        } catch (IllegalFieldValueException e) {\n            for (int i = 0, isize = savedFields.length; i < isize; i++) {\n                if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n                    if (savedFields[i].iValue == 0) {\n                        savedFields[i].iValue = getWeekyear();\n                        millis = savedFields[i].set(millis, resetFields);\n                    } else {\n                        savedFields[i].set(millis, savedFields[i].iValue + ((savedFields[i].iValue < 0) ? 1 : -1));\n                    }\n                }\n            }\n            \n            try {\n                for (int i = 0; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e2) {\n                if (text != null) {\n                    e2.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e2;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..58cfacb5 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,29 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+        } catch (IllegalFieldValueException e) {\n+            for (int i = 0, isize = savedFields.length; i < isize; i++) {\n+                if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+                    if (savedFields[i].iValue == 0) {\n+                        savedFields[i].iValue = getWeekyear();\n+                        millis = savedFields[i].set(millis, resetFields);\n+                    } else {\n+                        savedFields[i].set(millis, savedFields[i].iValue + ((savedFields[i].iValue < 0) ? 1 : -1));\n+                    }\n+                }\n+            }\n+            \n+            try {\n+                for (int i = 0; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e2) {\n+                if (text != null) {\n+                    e2.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e2;\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}