{
    "patch": "public static boolean containsAny(final CharSequence str, final char[] searchChars) {\n    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    final int len = str.length();\n    final int searchLen = searchChars.length;\n    final int loopCount = Math.max(len, searchLen);\n    final boolean[] chrs = new boolean[Character.MAX_VALUE + 1]; // use array instead of map\n    for (int i = 0; i < loopCount; i++) {\n        if (i < len) {\n            final int ch = Character.codePointAt(str, i);\n            chrs[ch] = true;\n        }\n        if (i < searchLen && chrs[searchChars[i]]) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..a840e2e1 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,25 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(final CharSequence str, final char[] searchChars) {\n+    if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {\n+        return false;\n+    }\n+    final int len = str.length();\n+    final int searchLen = searchChars.length;\n+    final int loopCount = Math.max(len, searchLen);\n+    final boolean[] chrs = new boolean[Character.MAX_VALUE + 1]; // use array instead of map\n+    for (int i = 0; i < loopCount; i++) {\n+        if (i < len) {\n+            final int ch = Character.codePointAt(str, i);\n+            chrs[ch] = true;\n+        }\n+        if (i < searchLen && chrs[searchChars[i]]) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}