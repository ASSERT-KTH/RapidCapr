{
    "patch": "        Type actualTypeArg = /* initialize with a non-null value */;\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable, actualTypeArg));",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..5ca77dbf5 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,9 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+        Type actualTypeArg = /* initialize with a non-null value */;\n+        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable, actualTypeArg));\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}