{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    // if we just return offsetAdjusted then the time is pushed\n    // back before the transition, whereas it should be\n    // on or after the transition\n    long nextLocal = nextTransition(instantAdjusted);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n    if (nextLocal == nextAdjusted) {\n        return offsetAdjusted;\n    } else {\n        int checkOffset = getOffset(nextAdjusted);\n        if (checkOffset == offsetAdjusted) {\n            return offsetAdjusted;\n        } else if (checkOffset > offsetAdjusted) {\n            // it's a gap transition\n            return offsetLocal;\n        } else {\n            // it's an overlap transition, continue iterating\n            long next = nextAdjusted;\n            while (checkOffset < offsetAdjusted) {\n                next = nextTransition(next);\n                checkOffset = getOffset(next);\n            }\n            if (checkOffset > offsetAdjusted) {\n                // it's a gap transition\n                return offsetLocal;\n            }\n            return offsetAdjusted;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..fb107ee0 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,36 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    // if we just return offsetAdjusted then the time is pushed\n+    // back before the transition, whereas it should be\n+    // on or after the transition\n+    long nextLocal = nextTransition(instantAdjusted);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+    if (nextLocal == nextAdjusted) {\n+        return offsetAdjusted;\n+    } else {\n+        int checkOffset = getOffset(nextAdjusted);\n+        if (checkOffset == offsetAdjusted) {\n+            return offsetAdjusted;\n+        } else if (checkOffset > offsetAdjusted) {\n+            // it's a gap transition\n+            return offsetLocal;\n+        } else {\n+            // it's an overlap transition, continue iterating\n+            long next = nextAdjusted;\n+            while (checkOffset < offsetAdjusted) {\n+                next = nextTransition(next);\n+                checkOffset = getOffset(next);\n+            }\n+            if (checkOffset > offsetAdjusted) {\n+                // it's a gap transition\n+                return offsetLocal;\n+            }\n+            return offsetAdjusted;\n+        }\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}