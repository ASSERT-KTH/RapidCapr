{
    "patch": "        boolean currentFieldAdded = false;\n        boolean nextFieldAdded = false;\n        if (currentStrategy != null) {\n            currentFieldAdded = currentStrategy.addRegex(this, regex);\n            if (currentFieldAdded) {\n                collector.add(currentStrategy);\n            }\n        }\n        if (nextStrategy != null) {\n            nextFieldAdded = nextStrategy.addRegex(this, regex);\n            if (nextFieldAdded && !currentFieldAdded) {\n                collector.add(nextStrategy);\n            }\n        }\n        currentFormatField = null;\n        if (collector.isEmpty()) {",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..93aceda3 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,22 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        boolean currentFieldAdded = false;\n+        boolean nextFieldAdded = false;\n+        if (currentStrategy != null) {\n+            currentFieldAdded = currentStrategy.addRegex(this, regex);\n+            if (currentFieldAdded) {\n+                collector.add(currentStrategy);\n+            }\n+        }\n+        if (nextStrategy != null) {\n+            nextFieldAdded = nextStrategy.addRegex(this, regex);\n+            if (nextFieldAdded && !currentFieldAdded) {\n+                collector.add(nextStrategy);\n+            }\n+        }\n+        currentFormatField = null;\n+        if (collector.isEmpty()) {\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}