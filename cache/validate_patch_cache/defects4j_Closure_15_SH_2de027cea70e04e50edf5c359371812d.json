{
    "patch": "if (n.isGetProp() && NodeUtil.mayHaveSideEffects(n.getFirstChild())\n            && (n.getFirstChild().getString().equals(dependentVarName)\n                || n.getFirstChild().matchesQualifiedName(dependentVarQualifiedName))) {\n          return true;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..33ca4aae 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,11 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+if (n.isGetProp() && NodeUtil.mayHaveSideEffects(n.getFirstChild())\n+            && (n.getFirstChild().getString().equals(dependentVarName)\n+                || n.getFirstChild().matchesQualifiedName(dependentVarQualifiedName))) {\n+          return true;\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}