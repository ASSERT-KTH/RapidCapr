{
    "patch": "        double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n        double twoTailedP = 2 * (1 - tDistribution.cumulativeProbability(t));\n        // correcting for extreme doubleing point values \n        if(Double.isNaN(twoTailedP)){\n          twoTailedP = 0d;\n        }\n        if(twoTailedP > 1d){\n          twoTailedP = 1d;\n        }\n        out[i][j] = twoTailedP;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..ba84507f6 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,16 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+        double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n+        double twoTailedP = 2 * (1 - tDistribution.cumulativeProbability(t));\n+        // correcting for extreme doubleing point values \n+        if(Double.isNaN(twoTailedP)){\n+          twoTailedP = 0d;\n+        }\n+        if(twoTailedP > 1d){\n+          twoTailedP = 1d;\n+        }\n+        out[i][j] = twoTailedP;\n                 }\n             }\n         }",
    "result_reason": "error: variable t is already defined in method getCorrelationPValues()",
    "test_result": "ERROR"
}