{
    "patch": "import java.util.regex.Pattern;\n\npublic class UnicodeEscape {\n\n    // Supported escape types\n    enum EscapeType {\n        UNICODE, ISO8859_1);\n    }\n\n    public static String escape(String input, EscapeType type) {\n        StringBuilder builder = new StringBuilder();\n        final int len = input.length();\n        for (int i = 0; i < len; i++) {\n            char ch = input.charAt(i);\n            switch (ch) {\n                case '\\b':\n                    builder.append(\"\\\\b\");\n                    break;\n                case '\\t':\n                    builder.append(\"\\\\t\");\n                    break;\n                case '\\n':\n                    builder.append(\"\\\\n\");\n                    break;\n                case '\\f':\n                    builder.append(\"\\\\f\");\n                    break;\n                case '\\r':\n                    builder.append(\"\\\\r\");\n                    break;\n                case '\\\\':\n                    builder.append(\"\\\\\\\\\");\n                    break;\n                case '/':\n                    builder.append(\"\\\\/\");\n                    break;\n                default:\n                    if (Character.isISOControl(ch) || \n                            (type == EscapeType.ISO8859_1 && ch > 0xFF)) {\n                        builder.append(String.format(\"\\\\u%04x\", (int) ch));\n                    } else {\n                        builder.append(ch);\n                    }\n                    break;\n            }\n        }\n        return builder.toString();\n    }\n    \n    public static void main(String[] args) {\n        System.out.println(escape(\"foo \\u00A9 bar\", EscapeType.UNICODE));\n        System.out.println(escape(\"foo \u00a9 bar\", EscapeType.ISO8859_1));\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..e0fe8e56 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,60 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+import java.util.regex.Pattern;\n+\n+public class UnicodeEscape {\n+\n+    // Supported escape types\n+    enum EscapeType {\n+        UNICODE, ISO8859_1);\n+    }\n+\n+    public static String escape(String input, EscapeType type) {\n+        StringBuilder builder = new StringBuilder();\n+        final int len = input.length();\n+        for (int i = 0; i < len; i++) {\n+            char ch = input.charAt(i);\n+            switch (ch) {\n+                case '\\b':\n+                    builder.append(\"\\\\b\");\n+                    break;\n+                case '\\t':\n+                    builder.append(\"\\\\t\");\n+                    break;\n+                case '\\n':\n+                    builder.append(\"\\\\n\");\n+                    break;\n+                case '\\f':\n+                    builder.append(\"\\\\f\");\n+                    break;\n+                case '\\r':\n+                    builder.append(\"\\\\r\");\n+                    break;\n+                case '\\\\':\n+                    builder.append(\"\\\\\\\\\");\n+                    break;\n+                case '/':\n+                    builder.append(\"\\\\/\");\n+                    break;\n+                default:\n+                    if (Character.isISOControl(ch) || \n+                            (type == EscapeType.ISO8859_1 && ch > 0xFF)) {\n+                        builder.append(String.format(\"\\\\u%04x\", (int) ch));\n+                    } else {\n+                        builder.append(ch);\n+                    }\n+                    break;\n+            }\n+        }\n+        return builder.toString();\n+    }\n+    \n+    public static void main(String[] args) {\n+        System.out.println(escape(\"foo \\u00A9 bar\", EscapeType.UNICODE));\n+        System.out.println(escape(\"foo \u00a9 bar\", EscapeType.ISO8859_1));\n+    }\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}