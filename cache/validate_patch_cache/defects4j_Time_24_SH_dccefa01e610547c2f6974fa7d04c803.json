{
    "patch": "            String errorValue = e.getIllegalFieldValueAsString();\n            StringBuilder errorMessage = new StringBuilder();\n            errorMessage.append(\"Cannot parse \\\"\").append(text)\n                .append(\"\\\": Value \").append(errorValue)\n                .append(\" for \").append(e.getFieldName());\n            if (e.getDurationFieldType() == DurationFieldType.months()\n                || e.getDurationFieldType() == DurationFieldType.days()) {\n                errorMessage.append(\" not supported\");\n            }\n            throw new IllegalArgumentException(errorMessage.toString(), e);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..f15b6c24 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,16 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            String errorValue = e.getIllegalFieldValueAsString();\n+            StringBuilder errorMessage = new StringBuilder();\n+            errorMessage.append(\"Cannot parse \\\"\").append(text)\n+                .append(\"\\\": Value \").append(errorValue)\n+                .append(\" for \").append(e.getFieldName());\n+            if (e.getDurationFieldType() == DurationFieldType.months()\n+                || e.getDurationFieldType() == DurationFieldType.days()) {\n+                errorMessage.append(\" not supported\");\n+            }\n+            throw new IllegalArgumentException(errorMessage.toString(), e);\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}