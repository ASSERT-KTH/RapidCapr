{
    "patch": "public void addValue(double value) {\n    sumImpl.increment(value);\n    sumsqImpl.increment(value);\n    minImpl.increment(value);\n    maxImpl.increment(value);\n    sumLogImpl.increment(value);\n    secondMoment.increment(value);\n\n    if (meanImpl instanceof Mean) {\n        ((Mean)meanImpl).increment(value);\n    } else if (meanImpl instanceof AbstractStorelessUnivariateStatistic) {\n        ((AbstractStorelessUnivariateStatistic)meanImpl).increment(value);\n    }\n\n    if (varianceImpl instanceof Variance) {\n        ((Variance)varianceImpl).increment(value);\n    } else if (varianceImpl instanceof AbstractStorelessUnivariateStatistic) {\n        ((AbstractStorelessUnivariateStatistic)varianceImpl).increment(value);\n    }\n\n    if (geoMeanImpl instanceof GeometricMean) {\n        try {\n            ((GeometricMean)geoMeanImpl).increment(value);\n        } catch (NullArgumentException e) {\n            geoMeanImpl = new GeometricMean();\n            ((GeometricMean)geoMeanImpl).increment(value);\n        }\n    } else if (geoMeanImpl instanceof AbstractStorelessUnivariateStatistic) {\n        ((AbstractStorelessUnivariateStatistic)geoMeanImpl).increment(Math.log(value));\n    }\n\n    n++;\n    if (n == 1) {\n        if (meanImpl instanceof Mean) {\n            ((Mean)meanImpl).incrementAll(new double[]{value});\n        }\n        if (varianceImpl instanceof Variance) {\n            ((Variance)varianceImpl).incrementAll(new double[]{value});\n        }\n        if (geoMeanImpl instanceof GeometricMean) {\n            try {\n                ((GeometricMean)geoMeanImpl).incrementAll(new double[]{Math.log(value)});\n            } catch (NullArgumentException e) {\n                geoMeanImpl = new GeometricMean();\n                ((GeometricMean)geoMeanImpl).increment(Math.log(value));\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\nindex 1203d516c..dc5f48b3d 100644\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n@@ -146,26 +146,55 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {\n      * Add a value to the data\n      * @param value the value to add\n      */\n-    public void addValue(double value) {\n-        sumImpl.increment(value);\n-        sumsqImpl.increment(value);\n-        minImpl.increment(value);\n-        maxImpl.increment(value);\n-        sumLogImpl.increment(value);\n-        secondMoment.increment(value);\n-        // If mean, variance or geomean have been overridden,\n-        // need to increment these\n-        if (!(meanImpl instanceof Mean)) {\n-            meanImpl.increment(value);\n+public void addValue(double value) {\n+    sumImpl.increment(value);\n+    sumsqImpl.increment(value);\n+    minImpl.increment(value);\n+    maxImpl.increment(value);\n+    sumLogImpl.increment(value);\n+    secondMoment.increment(value);\n+\n+    if (meanImpl instanceof Mean) {\n+        ((Mean)meanImpl).increment(value);\n+    } else if (meanImpl instanceof AbstractStorelessUnivariateStatistic) {\n+        ((AbstractStorelessUnivariateStatistic)meanImpl).increment(value);\n+    }\n+\n+    if (varianceImpl instanceof Variance) {\n+        ((Variance)varianceImpl).increment(value);\n+    } else if (varianceImpl instanceof AbstractStorelessUnivariateStatistic) {\n+        ((AbstractStorelessUnivariateStatistic)varianceImpl).increment(value);\n+    }\n+\n+    if (geoMeanImpl instanceof GeometricMean) {\n+        try {\n+            ((GeometricMean)geoMeanImpl).increment(value);\n+        } catch (NullArgumentException e) {\n+            geoMeanImpl = new GeometricMean();\n+            ((GeometricMean)geoMeanImpl).increment(value);\n         }\n-        if (!(varianceImpl instanceof Variance)) {\n-            varianceImpl.increment(value);\n+    } else if (geoMeanImpl instanceof AbstractStorelessUnivariateStatistic) {\n+        ((AbstractStorelessUnivariateStatistic)geoMeanImpl).increment(Math.log(value));\n+    }\n+\n+    n++;\n+    if (n == 1) {\n+        if (meanImpl instanceof Mean) {\n+            ((Mean)meanImpl).incrementAll(new double[]{value});\n         }\n-        if (!(geoMeanImpl instanceof GeometricMean)) {\n-            geoMeanImpl.increment(value);\n+        if (varianceImpl instanceof Variance) {\n+            ((Variance)varianceImpl).incrementAll(new double[]{value});\n+        }\n+        if (geoMeanImpl instanceof GeometricMean) {\n+            try {\n+                ((GeometricMean)geoMeanImpl).incrementAll(new double[]{Math.log(value)});\n+            } catch (NullArgumentException e) {\n+                geoMeanImpl = new GeometricMean();\n+                ((GeometricMean)geoMeanImpl).increment(Math.log(value));\n+            }\n         }\n-        n++;\n     }\n+}\n \n     /**\n      * Returns the number of available values",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.0> but was:<NaN>",
    "test_result": "FAIL"
}