{
    "patch": "public static double regularizedGamma(double a, double x) {\n    final double epsilon = 10e-15;\n    final int maxIterations = 1000;\n    double sum = 0.0;\n    double term = 1.0 / a;\n    int n = 1;\n    while (Math.abs(term) > epsilon && n <= maxIterations) {\n        sum += term;\n        term *= x / (a + n);\n        n++;\n    }\n    if (n > maxIterations) {\n        throw new RuntimeException(\n                \"Maximum number of iterations exceeded\");\n    }\n    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n}\n\nprivate static double logGamma(double x) {\n    double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n    double ser = 1.0\n            + 76.18009172947146 / (x + 0) - 86.50532032941677 / (x + 1)\n            + 24.01409824083091 / (x + 2) - 1.231739572450155 / (x + 3)\n            + 0.001208650973866179 / (x + 4) - 0.000005395239384953 / (x + 5);\n    return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..0a7fd870e 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,32 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGamma(double a, double x) {\n+    final double epsilon = 10e-15;\n+    final int maxIterations = 1000;\n+    double sum = 0.0;\n+    double term = 1.0 / a;\n+    int n = 1;\n+    while (Math.abs(term) > epsilon && n <= maxIterations) {\n+        sum += term;\n+        term *= x / (a + n);\n+        n++;\n+    }\n+    if (n > maxIterations) {\n+        throw new RuntimeException(\n+                \"Maximum number of iterations exceeded\");\n+    }\n+    return Math.exp(-x + a * Math.log(x) - logGamma(a)) * sum;\n+}\n+\n+private static double logGamma(double x) {\n+    double tmp = (x - 0.5) * Math.log(x + 4.5) - (x + 4.5);\n+    double ser = 1.0\n+            + 76.18009172947146 / (x + 0) - 86.50532032941677 / (x + 1)\n+            + 24.01409824083091 / (x + 2) - 1.231739572450155 / (x + 3)\n+            + 0.001208650973866179 / (x + 4) - 0.000005395239384953 / (x + 5);\n+    return tmp + Math.log(ser * Math.sqrt(2 * Math.PI));\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}