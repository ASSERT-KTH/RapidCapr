{
    "patch": "if (typeVariable == null) {\n    return;\n}\n\nfor (Type type : typeVariable.getBounds()) {\n    registerTypeVariablesOn(type);\n}\n\nif (typeVariable.getBounds().length == 0) {\n    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n    if (actualTypeArgument != null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n} else {\n    Type firstBound = typeVariable.getBounds()[0];\n    if (firstBound instanceof TypeVariable) {\n        registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) firstBound));\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..716b3dfae 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,30 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+if (typeVariable == null) {\n+    return;\n+}\n+\n+for (Type type : typeVariable.getBounds()) {\n+    registerTypeVariablesOn(type);\n+}\n+\n+if (typeVariable.getBounds().length == 0) {\n+    Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+    if (actualTypeArgument != null) {\n+        registerTypeVariablesOn(actualTypeArgument);\n+    }\n+} else {\n+    Type firstBound = typeVariable.getBounds()[0];\n+    if (firstBound instanceof TypeVariable) {\n+        registerTypeVariablesOn(getActualTypeArgumentFor((TypeVariable<?>) firstBound));\n+    }\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}