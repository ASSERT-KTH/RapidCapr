{
    "patch": "The correct hunk at the infill location is:\n``` java\n// Strip unreferenced args off the end of the function declaration.\nNode argList = getFunctionArgList(function);\nNode lastArg;\nwhile ((lastArg = argList.getLastChild()) != null) {\n  if (!referenced.contains(fnScope.getVar(lastArg.getString()))) {\n    Preconditions.checkState(lastArg.isName());\n    argList.removeChild(lastArg);\n    compiler.reportCodeChange();\n  } else {\n    break;\n  }\n}\n```",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..2b97d3cb 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,21 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+The correct hunk at the infill location is:\n+``` java\n+// Strip unreferenced args off the end of the function declaration.\n+Node argList = getFunctionArgList(function);\n+Node lastArg;\n+while ((lastArg = argList.getLastChild()) != null) {\n+  if (!referenced.contains(fnScope.getVar(lastArg.getString()))) {\n+    Preconditions.checkState(lastArg.isName());\n+    argList.removeChild(lastArg);\n+    compiler.reportCodeChange();\n+  } else {\n+    break;\n+  }\n+}\n+```\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}