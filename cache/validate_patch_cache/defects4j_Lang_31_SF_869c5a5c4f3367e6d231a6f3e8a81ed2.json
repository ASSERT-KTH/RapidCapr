{
    "patch": "public static boolean containsAny(char[] str, char[] searchChars) {\n    if (str == null || searchChars == null || str.length == 0 || searchChars.length == 0) {\n        return false;\n    }\n    for (char ch : str) {\n        if (Character.isHighSurrogate(ch) && str.length > 1) {\n            int codePoint = Character.toCodePoint(ch, str[1]);\n            if (containsChar(searchChars, codePoint)) {\n                return true;\n            }\n            str = Arrays.copyOfRange(str, 2, str.length);\n        } else {\n            if (containsChar(searchChars, ch)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate static boolean containsChar(char[] array, int codePoint) {\n    char[] chars = Character.toChars(codePoint);\n    for (char ch : chars) {\n        if (ArrayUtils.contains(array, ch)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..4afafc17 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,35 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(char[] str, char[] searchChars) {\n+    if (str == null || searchChars == null || str.length == 0 || searchChars.length == 0) {\n+        return false;\n+    }\n+    for (char ch : str) {\n+        if (Character.isHighSurrogate(ch) && str.length > 1) {\n+            int codePoint = Character.toCodePoint(ch, str[1]);\n+            if (containsChar(searchChars, codePoint)) {\n+                return true;\n+            }\n+            str = Arrays.copyOfRange(str, 2, str.length);\n+        } else {\n+            if (containsChar(searchChars, ch)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+private static boolean containsChar(char[] array, int codePoint) {\n+    char[] chars = Character.toChars(codePoint);\n+    for (char ch : chars) {\n+        if (ArrayUtils.contains(array, ch)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}