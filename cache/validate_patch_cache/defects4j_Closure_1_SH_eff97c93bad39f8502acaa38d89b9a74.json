{
    "patch": "    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n\n    // Collect all vars declared in the arg list.\n    Set<String> argNames = new HashSet<>();\n    Node argList = function.getSecondChild();\n    for (Node argNode = argList.getFirstChild(); argNode != null; argNode = argNode.getNext()) {\n      String name = argNode.getString();\n      Preconditions.checkState(!Strings.isNullOrEmpty(name));\n      argNames.add(name);\n    }\n\n    // Remove unused variables in the arg list.\n    Node lastArg;\n    while ((lastArg = argList.getLastChild()) != null) {\n      String name = lastArg.getString();\n      if (!argNames.contains(name)) {\n        argList.removeChild(lastArg);\n        compiler.reportCodeChange();\n      } else {\n        break;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..0b8a79ca 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,29 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+\n+    // Collect all vars declared in the arg list.\n+    Set<String> argNames = new HashSet<>();\n+    Node argList = function.getSecondChild();\n+    for (Node argNode = argList.getFirstChild(); argNode != null; argNode = argNode.getNext()) {\n+      String name = argNode.getString();\n+      Preconditions.checkState(!Strings.isNullOrEmpty(name));\n+      argNames.add(name);\n+    }\n+\n+    // Remove unused variables in the arg list.\n+    Node lastArg;\n+    while ((lastArg = argList.getLastChild()) != null) {\n+      String name = lastArg.getString();\n+      if (!argNames.contains(name)) {\n+        argList.removeChild(lastArg);\n+        compiler.reportCodeChange();\n+      } else {\n+        break;\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}