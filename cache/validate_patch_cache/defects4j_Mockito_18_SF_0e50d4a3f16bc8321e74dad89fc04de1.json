{
    "patch": "public Iterable<String> getFirstTwoElements(String[] arr) {\n    if (arr == null || arr.length == 0) {\n        return Collections.EMPTY_LIST;\n    } else if (arr.length == 1) {\n        return Collections.singletonList(arr[0]);\n    } else {\n        return Arrays.asList(arr[0], arr[1]);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..c3465c409 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,15 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public Iterable<String> getFirstTwoElements(String[] arr) {\n+    if (arr == null || arr.length == 0) {\n+        return Collections.EMPTY_LIST;\n+    } else if (arr.length == 1) {\n+        return Collections.singletonList(arr[0]);\n+    } else {\n+        return Arrays.asList(arr[0], arr[1]);\n+    }\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}