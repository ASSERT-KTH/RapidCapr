{
    "patch": "public static String printInOperatorInForLoop(boolean c, Object[] d) {\n    Context lhsContext = Context.OTHER;\n    String expected = \"for(a=c?0:[\";\n    boolean breakLoop = false;\n\n    for (int i = 0; i < d.length; i++) {\n        try {\n            lhsContext.getSafe(new InOperator(lhsContext, d[i], Boolean.TRUE));\n        } catch(Exception e) {\n            expected += i + \" in d];;)foo()\";\n            breakLoop = true;\n            break;\n        }\n    }\n    if (!breakLoop) {\n        expected += \"0 in d];;)foo()\";\n    }\n    return expected;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}