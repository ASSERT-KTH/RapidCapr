{
    "patch": "\n        List<Integer> common = new ArrayList<>();\n        \n        for (int i = 0; i < l1.length; i++) {\n            for (int j = 0; j < l2.length; j++) {\n                if (l1[i] == l2[j] && !common.contains(l1[i])) {\n                    common.add(l1[i]);\n                }\n            }\n        }\n        \n        int[] resultArr = new int[common.size()];\n        for (int i = 0; i < resultArr.length; i++) {\n            resultArr[i] = common.get(i);\n        }\n        Arrays.sort(resultArr);\n        return resultArr;",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/COMMON.java b/src/main/java/humaneval/buggy/COMMON.java\nindex f818c29..3b820ce 100644\n--- a/src/main/java/humaneval/buggy/COMMON.java\n+++ b/src/main/java/humaneval/buggy/COMMON.java\n@@ -10,7 +10,23 @@ import java.util.*;\n \n public class COMMON {\n     public static int[] common(int[] l1, int[] l2) {\n-        ArrayList<Integer> common = new ArrayList<Integer>();\n+\n+        List<Integer> common = new ArrayList<>();\n+        \n+        for (int i = 0; i < l1.length; i++) {\n+            for (int j = 0; j < l2.length; j++) {\n+                if (l1[i] == l2[j] && !common.contains(l1[i])) {\n+                    common.add(l1[i]);\n+                }\n+            }\n+        }\n+        \n+        int[] resultArr = new int[common.size()];\n+        for (int i = 0; i < resultArr.length; i++) {\n+            resultArr[i] = common.get(i);\n+        }\n+        Arrays.sort(resultArr);\n+        return resultArr;\n         \n         for (int i = 0; i < l1.length; i += 1){\n             for (int j = 0; j < l2.length; j += 1){",
    "result_reason": " /tmp/humaneval-COMMON/src/main/java/humaneval/buggy/COMMON.java:[31,9] unreachable statement",
    "test_result": "ERROR"
}