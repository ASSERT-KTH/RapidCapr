{
    "patch": "public <T> ReturnValue<T> returnValueFor(Class<T> clazz) {\n    for(ReturnValue<?> returnValue : values) {\n        if(clazz.isInstance(returnValue.value)) {\n            return (ReturnValue<T>) returnValue;\n        }\n    }\n    return new ReturnValue<>(null);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..dd7ef9fda 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,14 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+public <T> ReturnValue<T> returnValueFor(Class<T> clazz) {\n+    for(ReturnValue<?> returnValue : values) {\n+        if(clazz.isInstance(returnValue.value)) {\n+            return (ReturnValue<T>) returnValue;\n+        }\n+    }\n+    return new ReturnValue<>(null);\n+}\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}