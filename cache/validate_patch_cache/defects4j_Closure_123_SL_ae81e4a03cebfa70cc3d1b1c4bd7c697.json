{
    "patch": "public static String printInOperatorInForLoop(Object c, Object d) {\n    Context rhsContext = Context.STATUS_IGNORE;\n    \n    String condition = \"\";\n    if (c instanceof Boolean) {\n        condition = (Boolean) c ? \"0\" : \"(false)\";\n    } else {\n        condition = \"0\";\n        if (c.getClass().isArray()) {\n            condition = String.format(\"%d in %s\", 0, toJSArray((Object[]) c));\n        }\n    }\n    \n    String forLoop = String.format(\"for(var a=%s;;)foo()\", condition);\n\n    return \"/* comment before */\" + forLoop + \"/* comment after */\";\n}\n\npublic static String toJSArray(Object[] arr) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"[\");\n    for (int i = 0; i < arr.length; i++) {\n        sb.append(toJSValue(arr[i]));\n        if (i < arr.length - 1) {\n            sb.append(\",\");\n        }\n    }\n    sb.append(\"]\");\n    return sb.toString();\n}\n\npublic static String toJSValue(Object obj) {\n    if (obj == null) {\n        return \"null\";\n    } else if (obj instanceof String) {\n        return \"\\\"\" + obj.toString() + \"\\\"\";\n    } else if (obj instanceof Integer) {\n        return obj.toString();\n    } else if (obj instanceof Double) {\n        return obj.toString();\n    } else if (obj instanceof Character) {\n        return \"'\" + obj.toString() + \"'\";\n    } else if (obj instanceof Boolean) {\n        return obj.toString();\n    } else {\n        return obj.toString();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}