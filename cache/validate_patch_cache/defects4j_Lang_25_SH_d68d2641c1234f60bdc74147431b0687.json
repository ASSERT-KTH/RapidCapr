{
    "patch": "byte[] byteArr = bytes.getBytes(\"ISO8859_1\");\nStringBuilder builder = new StringBuilder();\nfor (byte b : byteArr) {\n    if ((b < 0x30 || b >= 0x3A) && (b < 0x41 || b > 0x5A) && (b < 0x61 || b > 0x7A)) {\n        builder.append(String.format(\"=%02X\", b)); // fixed the compilation error\n    } else {\n        builder.append((char) b);\n    }\n}\nString result = builder.toString();\nassertTrue(\"One or more errors detected\", success);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}