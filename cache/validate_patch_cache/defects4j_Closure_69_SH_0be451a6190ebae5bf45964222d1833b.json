{
    "patch": "      boolean isCallInGetpropOrGetelem =\n          NodeUtil.isGet(child.getParent()) || NodeUtil.isGetElem(child.getParent());\n      if (functionType.getTypeOfThis() != null && !isCallInGetpropOrGetelem) {\n        report(t, n, INVALID_THIS_TYPE_FOR_FUNC_CALL);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..c724f449 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,10 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      boolean isCallInGetpropOrGetelem =\n+          NodeUtil.isGet(child.getParent()) || NodeUtil.isGetElem(child.getParent());\n+      if (functionType.getTypeOfThis() != null && !isCallInGetpropOrGetelem) {\n+        report(t, n, INVALID_THIS_TYPE_FOR_FUNC_CALL);\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}