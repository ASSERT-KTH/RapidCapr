{
    "patch": "@Test\npublic void testLANG_831() throws Exception {\n    String date = \"02 Mar 2009 04:06:59 GMT+00:00\";\n    String pattern = \"dd MMM yyyy HH:mm:ss zZ\";\n    DateFormat df = new SimpleDateFormat(pattern, Locale.US);\n    df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n    cal.set(2009, 2, 2, 21, 0, 0);\n    cal.set(Calendar.MILLISECOND, 0);\n\n    Date date1 = df.parse(date);\n    Date date2 = cal.getTime();\n\n    assertEquals(\"Parsed dates should have the same time in millis\", date1.getTime(), date2.getTime());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..cc138d8a 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,47 +300,23 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n-            case '?':\n-            case '[':\n-            case ']':\n-            case '(':\n-            case ')':\n-            case '{':\n-            case '}':\n-            case '\\\\':\n-            case '|':\n-            case '*':\n-            case '+':\n-            case '^':\n-            case '$':\n-            case '.':\n-                regex.append('\\\\');\n-            }\n-            regex.append(c);\n-        }\n-        return regex;\n-    }\n+@Test\n+public void testLANG_831() throws Exception {\n+    String date = \"02 Mar 2009 04:06:59 GMT+00:00\";\n+    String pattern = \"dd MMM yyyy HH:mm:ss zZ\";\n+    DateFormat df = new SimpleDateFormat(pattern, Locale.US);\n+    df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+\n+    Calendar cal = Calendar.getInstance();\n+    cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+    cal.set(2009, 2, 2, 21, 0, 0);\n+    cal.set(Calendar.MILLISECOND, 0);\n+\n+    Date date1 = df.parse(date);\n+    Date date2 = cal.getTime();\n+\n+    assertEquals(\"Parsed dates should have the same time in millis\", date1.getTime(), date2.getTime());\n+}\n \n     /**\n      * A class to store Key / Value pairs",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}