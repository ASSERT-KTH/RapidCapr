{
    "patch": "public String escape(String input, String encoding) throws UnsupportedEncodingException {\n    String escapedString = \"\";\n    try {\n        byte[] bytes = input.getBytes(encoding);\n        for (byte b : bytes) {\n            if ((b >= 'a' && b <= 'z') || (b >= 'A' && b <= 'Z') || (b >= '0' && b <= '9')) {\n                escapedString += (char) b;\n            } else {\n                escapedString += \"%\" + String.format(\"%02X\", b);\n            }\n        }\n    } catch (UnsupportedEncodingException e) {\n        throw new UnsupportedEncodingException(encoding);\n    }\n    return escapedString;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..c0cf2657 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,22 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public String escape(String input, String encoding) throws UnsupportedEncodingException {\n+    String escapedString = \"\";\n+    try {\n+        byte[] bytes = input.getBytes(encoding);\n+        for (byte b : bytes) {\n+            if ((b >= 'a' && b <= 'z') || (b >= 'A' && b <= 'Z') || (b >= '0' && b <= '9')) {\n+                escapedString += (char) b;\n+            } else {\n+                escapedString += \"%\" + String.format(\"%02X\", b);\n+            }\n+        }\n+    } catch (UnsupportedEncodingException e) {\n+        throw new UnsupportedEncodingException(encoding);\n+    }\n+    return escapedString;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}