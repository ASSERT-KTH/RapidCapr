{
    "patch": "            if (len == 7) { // check for variant subtag\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else if (len > 7 && str.charAt(5) == '_') { // check for extensions\n                int idx = str.indexOf('_', 6);\n                if (idx == -1) {\n                    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n                } else {\n                    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, idx), str.substring(idx + 1));\n                }\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..75e18942 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,18 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            if (len == 7) { // check for variant subtag\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else if (len > 7 && str.charAt(5) == '_') { // check for extensions\n+                int idx = str.indexOf('_', 6);\n+                if (idx == -1) {\n+                    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                } else {\n+                    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6, idx), str.substring(idx + 1));\n+                }\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: no suitable constructor found for Locale(String,String,String,String)",
    "test_result": "ERROR"
}