{
    "patch": "public static String getprop(String propertyName) throws IOException {\n    Properties props = new Properties();\n    InputStream inputStream = null;\n    try {\n        inputStream = ClassLoader.getSystemClassLoader().getResourceAsStream(\"project.properties\");\n        if (inputStream == null) {\n            throw new FileNotFoundException(\"property file 'project.properties' not found in the classpath\");\n        }\n        props.load(inputStream);\n    } finally {\n        if (inputStream != null) {\n            inputStream.close();\n        }\n    }\n    String value = props.getProperty(propertyName);\n    if (value == null) {\n        System.err.println(\"Property '\" + propertyName + \"' not found in property file\");\n    }\n    return value;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex ae8a3200..64bed19c 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1300,7 +1300,26 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of <code>n</code>\n    */\n-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+public static String getprop(String propertyName) throws IOException {\n+    Properties props = new Properties();\n+    InputStream inputStream = null;\n+    try {\n+        inputStream = ClassLoader.getSystemClassLoader().getResourceAsStream(\"project.properties\");\n+        if (inputStream == null) {\n+            throw new FileNotFoundException(\"property file 'project.properties' not found in the classpath\");\n+        }\n+        props.load(inputStream);\n+    } finally {\n+        if (inputStream != null) {\n+            inputStream.close();\n+        }\n+    }\n+    String value = props.getProperty(propertyName);\n+    if (value == null) {\n+        System.err.println(\"Property '\" + propertyName + \"' not found in property file\");\n+    }\n+    return value;\n+}\n     // obj.prop or obj.method()\n     // Lots of types can appear on the left, a call to a void function can\n     // never be on the left. getPropertyType will decide what is acceptable",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}