{
    "patch": "          Node functionParent = value.getParent();\n          if (functionParent.isAssign()) {\n            String className = convention.getSingletonGetterClassName(value);\n            if (className != null) {\n              Node name = functionParent.getFirstChild();\n              return name.matchesQualifiedName(className);\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..7a0546c4 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,13 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+          Node functionParent = value.getParent();\n+          if (functionParent.isAssign()) {\n+            String className = convention.getSingletonGetterClassName(value);\n+            if (className != null) {\n+              Node name = functionParent.getFirstChild();\n+              return name.matchesQualifiedName(className);\n+            }\n         }\n       }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}