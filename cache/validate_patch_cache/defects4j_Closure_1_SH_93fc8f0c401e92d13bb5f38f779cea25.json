{
    "patch": "    // Strip unreferenced args off the end of the function declaration.\n    Node argList = getFunctionArgList(function);\n    Node lastArg = argList.getFirstChild();\n    while (lastArg != null && !referenceStrong(lastArg, referenced)) {\n      argList.removeChild(lastArg);\n      compiler.reportCodeChange();\n      lastArg = argList.getLastChild();\n    }\n    if (lastArg != null) {\n      Node arg = lastArg.getNext();\n      while (arg != null) {\n        Node nextArg = arg.getNext();\n        if (!referenceStrong(arg, referenced)) {\n          argList.removeChild(arg);\n          compiler.reportCodeChange();\n        }\n        arg = nextArg;\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..59fdb67a 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,25 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    // Strip unreferenced args off the end of the function declaration.\n+    Node argList = getFunctionArgList(function);\n+    Node lastArg = argList.getFirstChild();\n+    while (lastArg != null && !referenceStrong(lastArg, referenced)) {\n+      argList.removeChild(lastArg);\n+      compiler.reportCodeChange();\n+      lastArg = argList.getLastChild();\n+    }\n+    if (lastArg != null) {\n+      Node arg = lastArg.getNext();\n+      while (arg != null) {\n+        Node nextArg = arg.getNext();\n+        if (!referenceStrong(arg, referenced)) {\n+          argList.removeChild(arg);\n+          compiler.reportCodeChange();\n+        }\n+        arg = nextArg;\n+      }\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}