{
    "patch": "public static double regularizedGammaQ(double a, double x) {\n    if (a <= 0 || x < 0) {\n        throw new IllegalArgumentException(\"Invalid input values a=\" + a + \", x=\" + x);\n    }\n    if (x == 0) {\n        return 1.0d;\n    }\n    double term = a * Math.log(x) - x - LogGamma.logGamma(a);\n    double sum = 1.0d;\n    double n = 1.0d;\n    double an = a;\n    while (Math.abs(an / sum) > 1E-15) {\n        sum += (an / sum);\n        n += 1.0d;\n        an *= (a + n - 1.0d) * (-x) / n;\n    }\n    return Math.exp(-x + (a * Math.log(x)) - LogGamma.logGamma(a)) * sum;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..990d61cdf 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,24 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public static double regularizedGammaQ(double a, double x) {\n+    if (a <= 0 || x < 0) {\n+        throw new IllegalArgumentException(\"Invalid input values a=\" + a + \", x=\" + x);\n+    }\n+    if (x == 0) {\n+        return 1.0d;\n+    }\n+    double term = a * Math.log(x) - x - LogGamma.logGamma(a);\n+    double sum = 1.0d;\n+    double n = 1.0d;\n+    double an = a;\n+    while (Math.abs(an / sum) > 1E-15) {\n+        sum += (an / sum);\n+        n += 1.0d;\n+        an *= (a + n - 1.0d) * (-x) / n;\n+    }\n+    return Math.exp(-x + (a * Math.log(x)) - LogGamma.logGamma(a)) * sum;\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}