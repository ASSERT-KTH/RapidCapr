{
    "patch": "public Object execute(Method method, Object[] args) throws Throwable {\n    ReturnType returnType = new ReturnType(method.getReturnType());\n    if (returnType.isVoid()) {\n        method.invoke(target, args);\n        return null;\n    } else {\n        ReturnValues values = new ReturnValues();\n        returnValueFor(returnType.get(), values, method.getReturnType());\n        if (values.hasValue()) {\n            return values.returnValueFor(returnType.get());\n        } else {\n            throw new IllegalArgumentException(\n              \"No return value specified for mock method: \" + method);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}