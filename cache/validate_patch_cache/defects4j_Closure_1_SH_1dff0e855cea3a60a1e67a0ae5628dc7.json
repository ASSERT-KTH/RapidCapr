{
    "patch": "Node function = fnScope.getRootNode();\nPreconditions.checkState(function.isFunction());\nif (NodeUtil.isGetOrSetKey(function.getParent())) {\n    // The parameters object literal setters can not be removed.\n    return;\n}\n\nNode argList = getFunctionArgList(function);\nboolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\nif (referenced.isEmpty()) {\n    argList.removeChildren();\n    compiler.reportCodeChange();\n    return;\n}\nif (!modifyCallers) {\n    // Strip unreferenced args off the end of the function declaration.\n    Node lastArg = argList.getLastChild();\n    while (lastArg != null) {\n        String name = lastArg.getString();\n        Var var = fnScope.getVar(name);\n        if (!referenced.contains(var)) {\n            // Remove the last argument if it is not being referenced\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n        } else {\n            break;\n        }\n        lastArg = argList.getLastChild();\n    }\n} else {\n    callSiteOptimizer.optimize(fnScope, referenced);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..76fd4ed3 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,38 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+Node function = fnScope.getRootNode();\n+Preconditions.checkState(function.isFunction());\n+if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+    // The parameters object literal setters can not be removed.\n+    return;\n+}\n+\n+Node argList = getFunctionArgList(function);\n+boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(function);\n+if (referenced.isEmpty()) {\n+    argList.removeChildren();\n+    compiler.reportCodeChange();\n+    return;\n+}\n+if (!modifyCallers) {\n+    // Strip unreferenced args off the end of the function declaration.\n+    Node lastArg = argList.getLastChild();\n+    while (lastArg != null) {\n+        String name = lastArg.getString();\n+        Var var = fnScope.getVar(name);\n+        if (!referenced.contains(var)) {\n+            // Remove the last argument if it is not being referenced\n+            argList.removeChild(lastArg);\n+            compiler.reportCodeChange();\n+        } else {\n+            break;\n+        }\n+        lastArg = argList.getLastChild();\n+    }\n+} else {\n+    callSiteOptimizer.optimize(fnScope, referenced);\n+}\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}