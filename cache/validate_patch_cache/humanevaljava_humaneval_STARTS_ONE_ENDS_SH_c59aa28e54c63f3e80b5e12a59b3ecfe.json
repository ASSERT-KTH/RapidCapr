{
    "patch": "if (n < 1) {\n    throw new IllegalArgumentException(\"Input should be greater than or equal to 1\");\n} else {\n    if (n == 1) {\n        return 1;\n    } else {\n        try {\n            return Math.addExact((int) Math.pow(10, n - 1), 8 * (int) Math.pow(10, n - 2));\n        } catch (ArithmeticException e) {\n            throw new IllegalArgumentException(\"Result is too large to fit in an integer\", e);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\nindex b8a4679..65c09d8 100644\n--- a/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n+++ b/src/main/java/humaneval/buggy/STARTS_ONE_ENDS.java\n@@ -7,6 +7,18 @@ public class STARTS_ONE_ENDS {\n     public static int starts_one_ends(int n) {\n         if (n == 1)\n             return 1;\n-        return (int) ((10 + 9) * Math.pow(10, n - 2));\n+if (n < 1) {\n+    throw new IllegalArgumentException(\"Input should be greater than or equal to 1\");\n+} else {\n+    if (n == 1) {\n+        return 1;\n+    } else {\n+        try {\n+            return Math.addExact((int) Math.pow(10, n - 1), 8 * (int) Math.pow(10, n - 2));\n+        } catch (ArithmeticException e) {\n+            throw new IllegalArgumentException(\"Result is too large to fit in an integer\", e);\n+        }\n+    }\n+}\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}