{
    "patch": "        if (!Character.isDigit(lastChar) && (lastChar == 'f' || lastChar == 'F')) {\n            String floatStr = val.substring(0, val.length() - 1);\n            try {\n                Float f = createFloat(floatStr);\n                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                    return f;\n                }\n            } catch (NumberFormatException nfe) {\n                // ignore the bad number\n            }\n            //Fall through\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..8a0110e2 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,18 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (!Character.isDigit(lastChar) && (lastChar == 'f' || lastChar == 'F')) {\n+            String floatStr = val.substring(0, val.length() - 1);\n+            try {\n+                Float f = createFloat(floatStr);\n+                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n+                    return f;\n+                }\n+            } catch (NumberFormatException nfe) {\n+                // ignore the bad number\n+            }\n+            //Fall through\n+        }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}