{
    "patch": "public static String decodeUnicode(String s) {\n    StringBuffer sb = new StringBuffer();\n    char[] ca = s.toCharArray();\n    for (int i = 0; i < ca.length; i++) {\n        if (ca[i] == '\\\\' && ca[i + 1] == 'u') {\n            char c = 0;\n            for (int j = 0; j < 4; j++) {\n                char ch = Character.toLowerCase(ca[i + 2 + j]);\n                if ((ch >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f')) {\n                    c |= (Character.digit(ch, 16) << ((3 - j) * 4));\n                } else {\n                    sb.append(\"\\\\u\");\n                    sb.append(ca[i + 2]);\n                    i = i + 1;\n                    break;\n                }\n            }\n            sb.append(c);\n            i = i + 5;\n        } else {\n            sb.append(ca[i]);\n        }\n    }\n    return sb.toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..d1f9efb5 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,31 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+public static String decodeUnicode(String s) {\n+    StringBuffer sb = new StringBuffer();\n+    char[] ca = s.toCharArray();\n+    for (int i = 0; i < ca.length; i++) {\n+        if (ca[i] == '\\\\' && ca[i + 1] == 'u') {\n+            char c = 0;\n+            for (int j = 0; j < 4; j++) {\n+                char ch = Character.toLowerCase(ca[i + 2 + j]);\n+                if ((ch >= '0' && ch <= '9') || (ch >= 'a' && ch <= 'f')) {\n+                    c |= (Character.digit(ch, 16) << ((3 - j) * 4));\n+                } else {\n+                    sb.append(\"\\\\u\");\n+                    sb.append(ca[i + 2]);\n+                    i = i + 1;\n+                    break;\n+                }\n+            }\n+            sb.append(c);\n+            i = i + 5;\n+        } else {\n+            sb.append(ca[i]);\n+        }\n+    }\n+    return sb.toString();\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}