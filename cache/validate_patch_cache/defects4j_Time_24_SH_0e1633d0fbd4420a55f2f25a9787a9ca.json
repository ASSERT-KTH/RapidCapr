{
    "patch": "try {\n    for (int i = 0; i < count; i++) {\n        millis = savedFields[i].set(millis, resetFields);\n        // check if setting the field resulted in a valid date\n        if (!DateTimeUtils.isContiguous(millis)) {\n            throw new IllegalFieldValueException(\n                savedFields[i].iField.getType(),\n                savedFields[i].getValue(),\n                \"Value \" + savedFields[i].getValue() +\n                \" for \" + savedFields[i].iField +\n                \" is not supported: \" +\n                \"It had an invalid value after setting the fields in \" + text\n            );\n        }\n    }\n} catch (IllegalFieldValueException e) {\n    if (text != null) {\n        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n    }\n    throw e;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..11e7c48e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,27 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+try {\n+    for (int i = 0; i < count; i++) {\n+        millis = savedFields[i].set(millis, resetFields);\n+        // check if setting the field resulted in a valid date\n+        if (!DateTimeUtils.isContiguous(millis)) {\n+            throw new IllegalFieldValueException(\n+                savedFields[i].iField.getType(),\n+                savedFields[i].getValue(),\n+                \"Value \" + savedFields[i].getValue() +\n+                \" for \" + savedFields[i].iField +\n+                \" is not supported: \" +\n+                \"It had an invalid value after setting the fields in \" + text\n+            );\n+        }\n+    }\n+} catch (IllegalFieldValueException e) {\n+    if (text != null) {\n+        e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+    }\n+    throw e;\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: method isContiguous in class DateTimeUtils cannot be applied to given types;",
    "test_result": "ERROR"
}