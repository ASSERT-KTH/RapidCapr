{
    "patch": "public static String fix_spaces(String text) {\n    if (text == null || text.length() == 0) {\n        return \"\";\n    }\n    \n    String new_text = \"\";\n    int i = 0;\n    int start = 0;\n    int end = 0;\n    boolean lastCharIsSpace = false;\n    while (i < text.length()) {\n        if (text.charAt(i) == ' ') {\n            end += 1;\n            lastCharIsSpace = true;\n        } else {\n            if (end - start > 2) {\n                new_text += \"-\" + text.substring(i, i + 1);\n                lastCharIsSpace = false;\n            } else if (end - start > 0) {\n                if (!new_text.equals(\"\") && !lastCharIsSpace) {\n                    new_text += \"_\";\n                }\n                new_text += text.substring(start, end);\n                new_text += text.substring(i, i + 1);\n                lastCharIsSpace = false;\n            } else {\n                if (new_text.equals(\"\")) {\n                    new_text += text.substring(start, i + 1);\n                } else if (lastCharIsSpace) {\n                    new_text += text.substring(start, i + 1);\n                } else {\n                    new_text += \"_\" + text.substring(start, i + 1);\n                }\n                lastCharIsSpace = false;\n            }\n            start = i + 1;\n            end = i + 1;\n        }\n        i += 1;\n    }\n    if (end - start > 2) {\n        new_text += \"-\" + text.substring(start);\n    } else {\n        if (!new_text.equals(\"\") && !lastCharIsSpace) {\n            new_text += \"_\";\n        }\n        new_text += text.substring(start);\n    }\n    return new_text;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIX_SPACES.java b/src/main/java/humaneval/buggy/FIX_SPACES.java\nindex 2f27898..909d258 100644\n--- a/src/main/java/humaneval/buggy/FIX_SPACES.java\n+++ b/src/main/java/humaneval/buggy/FIX_SPACES.java\n@@ -10,29 +10,54 @@ fix_spaces(\" Example 2\") == \"_Example_2\"\n fix_spaces(\" Example   3\") == \"_Example-3\" */\n \n public class FIX_SPACES {\n-    public static String fix_spaces(String text) {\n-        String new_text = \"\";\n-        int i = 0;\n-        int start = 0;\n-        int end = 0;\n-        while (i < text.length()) {\n-            if (text.charAt(i) == ' ') end += 1;\n-            else {\n-                if (end - start > 2) new_text += \"-\" + text.substring(i, i + 1);\n-                else if (end - start > 0) {\n-                    for (int j = start; j < end; j += 1) {\n-                        new_text += \"_\";\n-                    }\n-                    new_text += text.substring(i, i + 1);\n+public static String fix_spaces(String text) {\n+    if (text == null || text.length() == 0) {\n+        return \"\";\n+    }\n+    \n+    String new_text = \"\";\n+    int i = 0;\n+    int start = 0;\n+    int end = 0;\n+    boolean lastCharIsSpace = false;\n+    while (i < text.length()) {\n+        if (text.charAt(i) == ' ') {\n+            end += 1;\n+            lastCharIsSpace = true;\n+        } else {\n+            if (end - start > 2) {\n+                new_text += \"-\" + text.substring(i, i + 1);\n+                lastCharIsSpace = false;\n+            } else if (end - start > 0) {\n+                if (!new_text.equals(\"\") && !lastCharIsSpace) {\n+                    new_text += \"_\";\n+                }\n+                new_text += text.substring(start, end);\n+                new_text += text.substring(i, i + 1);\n+                lastCharIsSpace = false;\n+            } else {\n+                if (new_text.equals(\"\")) {\n+                    new_text += text.substring(start, i + 1);\n+                } else if (lastCharIsSpace) {\n+                    new_text += text.substring(start, i + 1);\n                 } else {\n-                    new_text += text.substring(i, i + 1);\n+                    new_text += \"_\" + text.substring(start, i + 1);\n                 }\n-                start = i + 1;\n-                end = i + 1;\n+                lastCharIsSpace = false;\n             }\n-            i += 1;\n+            start = i + 1;\n+            end = i + 1;\n         }\n-\n-        return new_text;\n+        i += 1;\n     }\n+    if (end - start > 2) {\n+        new_text += \"-\" + text.substring(start);\n+    } else {\n+        if (!new_text.equals(\"\") && !lastCharIsSpace) {\n+            new_text += \"_\";\n+        }\n+        new_text += text.substring(start);\n+    }\n+    return new_text;\n+}\n }",
    "result_reason": "   TEST_FIX_SPACES.test_0:9 expected:<E[_x_a_m_p_l_e_]> but was:<E[xample]>",
    "test_result": "FAIL"
}