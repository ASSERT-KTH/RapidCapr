{
    "patch": "Context rhsContext = Context.START_OF_EXPR;\nToken token = ts.next();\nwhile (token.kind == Kind.COMMA) {\n    lhsList.add(lhsExpr);\n    opList.add(token);\n    rhsExpr = parseExpression(rhsContext);\n    rhsList.add(rhsExpr);\n    rhsContext = Context.IN;\n    token = ts.next();\n}\nlhsList.add(lhsExpr);\nopList.add(token);\nrhsList.add(parseExpression(rhsContext));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..6267f6c9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,7 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}