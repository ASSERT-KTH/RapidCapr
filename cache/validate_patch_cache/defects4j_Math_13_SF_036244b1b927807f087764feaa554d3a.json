{
    "patch": "import org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.EigenDecomposition;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.SquareMatrix;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    final EigenDecomposition dec = new EigenDecomposition(new SquareMatrix(m.getData()));\n    final double[] eigenvalues = dec.getRealEigenvalues();\n    final RealMatrix eigenvectors = dec.getV();\n    final double[] sqrtEigenvalues = new double[eigenvalues.length];\n    for (int i = 0; i < eigenvalues.length; i++) {\n        sqrtEigenvalues[i] = Math.sqrt(eigenvalues[i]);\n    }\n    final RealMatrix sqrtEigenvalueMatrix = new Array2DRowRealMatrix(sqrtEigenvalues);\n    final RealMatrix sqrtMatrix = eigenvectors.multiply(sqrtEigenvalueMatrix).multiply(eigenvectors.transpose());\n    return new Array2DRowRealMatrix(sqrtMatrix.getData());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..60b81210c 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,21 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+import org.apache.commons.math3.linear.Array2DRowRealMatrix;\n+import org.apache.commons.math3.linear.EigenDecomposition;\n+import org.apache.commons.math3.linear.RealMatrix;\n+import org.apache.commons.math3.linear.SquareMatrix;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final EigenDecomposition dec = new EigenDecomposition(new SquareMatrix(m.getData()));\n+    final double[] eigenvalues = dec.getRealEigenvalues();\n+    final RealMatrix eigenvectors = dec.getV();\n+    final double[] sqrtEigenvalues = new double[eigenvalues.length];\n+    for (int i = 0; i < eigenvalues.length; i++) {\n+        sqrtEigenvalues[i] = Math.sqrt(eigenvalues[i]);\n     }\n+    final RealMatrix sqrtEigenvalueMatrix = new Array2DRowRealMatrix(sqrtEigenvalues);\n+    final RealMatrix sqrtMatrix = eigenvectors.multiply(sqrtEigenvalueMatrix).multiply(eigenvectors.transpose());\n+    return new Array2DRowRealMatrix(sqrtMatrix.getData());\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}