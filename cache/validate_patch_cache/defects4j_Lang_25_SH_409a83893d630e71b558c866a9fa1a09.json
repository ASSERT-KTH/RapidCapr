{
    "patch": "StringBuffer result = new StringBuffer();\nfor(int i = 0; i < input.length(); i++) {\n    char c = input.charAt(i);\n    if(c == ' ')\n        result.append('+');\n    else if((c >= '0' && c <= '9') ||\n            (c >= 'A' && c <= 'Z') ||\n            (c >= 'a' && c <= 'z') ||\n            c == '-' || c == '_' || c == '.' || c == '~')\n        result.append(c);\n    else {\n        result.append('%');\n        result.append(hex(c));\n    }\n}\nreturn result.toString();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..5033afe0 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -27,7 +27,7 @@ package org.apache.commons.lang3.text.translate;\n  */\n public class EntityArrays {\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}