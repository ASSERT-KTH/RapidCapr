{
    "patch": "public static boolean containsAny(char[] str, char[] searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    int strSize = str.length;\n    int searchSize = searchChars.length;\n    int count = 0;\n    int[] search = new int[Character.MAX_VALUE + 1];\n    for (int i = 0; i < searchSize; i++) {\n        char ch = searchChars[i];\n        if (search[ch] == 0) {\n            count++;\n        }\n        search[ch]++;\n    }\n    for (int i = 0; i < strSize; i++) {\n        char ch = str[i];\n        if (search[ch] != 0) {\n            if (Character.isHighSurrogate(ch)) {\n                if (i < strSize - 1 && Character.isLowSurrogate(str[i + 1])) {\n                    char pair = str[i + 1];\n                    int codePoint = Character.toCodePoint(ch, pair);\n                    if (search[codePoint] != 0) {\n                        return true;\n                    }\n                }\n            } else if (--search[ch] == 0) {\n                if (--count == 0) {\n                    break;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..94443499 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,41 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(char[] str, char[] searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    int strSize = str.length;\n+    int searchSize = searchChars.length;\n+    int count = 0;\n+    int[] search = new int[Character.MAX_VALUE + 1];\n+    for (int i = 0; i < searchSize; i++) {\n+        char ch = searchChars[i];\n+        if (search[ch] == 0) {\n+            count++;\n+        }\n+        search[ch]++;\n+    }\n+    for (int i = 0; i < strSize; i++) {\n+        char ch = str[i];\n+        if (search[ch] != 0) {\n+            if (Character.isHighSurrogate(ch)) {\n+                if (i < strSize - 1 && Character.isLowSurrogate(str[i + 1])) {\n+                    char pair = str[i + 1];\n+                    int codePoint = Character.toCodePoint(ch, pair);\n+                    if (search[codePoint] != 0) {\n+                        return true;\n+                    }\n+                }\n+            } else if (--search[ch] == 0) {\n+                if (--count == 0) {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}