{
    "patch": "      if (functionType.getTypeOfThis() != null) {\n        Node parent = n.getParent();\n        if (parent == null ||\n            (parent.isNot(PARAM_LIST) &&\n            parent.isNot(GETPROP) &&\n            parent.isNot(GETELEM))) {\n          report(t, n, FN_CALL_CANNOT_INLINE_THIS, childType.toString());\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..e1d7afc2 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,15 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      if (functionType.getTypeOfThis() != null) {\n+        Node parent = n.getParent();\n+        if (parent == null ||\n+            (parent.isNot(PARAM_LIST) &&\n+            parent.isNot(GETPROP) &&\n+            parent.isNot(GETELEM))) {\n+          report(t, n, FN_CALL_CANNOT_INLINE_THIS, childType.toString());\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}