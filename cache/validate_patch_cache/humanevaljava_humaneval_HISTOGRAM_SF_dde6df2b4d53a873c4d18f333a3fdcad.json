{
    "patch": "public static HashMap<Character, Integer> histogram(String s) {\n    HashMap<Character, Integer> res = new HashMap<Character, Integer>();\n    if(s == null || s.isEmpty()) return res;\n    char[] list_letters = s.toLowerCase().replaceAll(\"[^a-z]\", \"\").toCharArray(); // Keep only alphabets and convert to lowercase\n    int[] count_letter = new int[26];\n    for(char c : list_letters) {\n        count_letter[c - 'a']++;\n    }\n    int most_count = 0;\n    for(int i = 0; i < 26; i++) {\n        if(count_letter[i] > most_count) {\n            most_count = count_letter[i];\n            res.clear();\n            res.put((char) ('a' + i), most_count);\n        } else if(count_letter[i] == most_count) {\n            res.put((char) ('a' + i), most_count);\n        }\n    }\n    if(most_count == 0) res.clear();\n    return res;\n}",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/HISTOGRAM.java b/src/main/java/humaneval/buggy/HISTOGRAM.java\nindex 7ebdd21..fe2ff37 100644\n--- a/src/main/java/humaneval/buggy/HISTOGRAM.java\n+++ b/src/main/java/humaneval/buggy/HISTOGRAM.java\n@@ -16,26 +16,25 @@ import java.util.HashMap;\n  */\n \n public class HISTOGRAM {\n-    public static HashMap<Character, Integer> histogram(String s) {\n-        HashMap<Character, Integer> res = new HashMap<Character, Integer>();\n-        if(s.isEmpty()) return res;\n-        String[] list_letters = s.split(\" \");\n-        int[] count_letter = new int[26];\n-        for(int i = 0; i < list_letters.length; i++) {\n-            char c = list_letters[i].charAt(0);\n-            count_letter[c - 'a']++;\n-        }\n-        int most_count = 0;\n-        for(int i = 0; i < 26; i++) {\n-            if(count_letter[i] < most_count) {\n-                most_count = count_letter[i];\n-                res.clear();\n-                res.put((char) ('a' + i), most_count);\n-            } else if(count_letter[i] == most_count) {\n-                res.put((char) ('a' + i), most_count);\n-            }\n+public static HashMap<Character, Integer> histogram(String s) {\n+    HashMap<Character, Integer> res = new HashMap<Character, Integer>();\n+    if(s == null || s.isEmpty()) return res;\n+    char[] list_letters = s.toLowerCase().replaceAll(\"[^a-z]\", \"\").toCharArray(); // Keep only alphabets and convert to lowercase\n+    int[] count_letter = new int[26];\n+    for(char c : list_letters) {\n+        count_letter[c - 'a']++;\n+    }\n+    int most_count = 0;\n+    for(int i = 0; i < 26; i++) {\n+        if(count_letter[i] > most_count) {\n+            most_count = count_letter[i];\n+            res.clear();\n+            res.put((char) ('a' + i), most_count);\n+        } else if(count_letter[i] == most_count) {\n+            res.put((char) ('a' + i), most_count);\n         }\n-        if(most_count == 0) res.clear();\n-        return res;\n     }\n+    if(most_count == 0) res.clear();\n+    return res;\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}