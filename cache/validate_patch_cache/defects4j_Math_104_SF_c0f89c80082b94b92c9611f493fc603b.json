{
    "patch": "import org.apache.commons.math3.special.Gamma;\nimport org.apache.commons.math3.util.FastMath;\n\npublic class GammaFunction {\n\n    public static double gamma(double n) {\n        if (n == 0) {\n            return Double.POSITIVE_INFINITY;\n        } else if (n < 0) {\n            return Double.NaN;\n        } else if (n < 1) {\n            return gamma(n + 1) / n;\n        } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n        } else if (n == 3) {\n            return 2;\n        } else if (n == 4) {\n            return 6;\n        } else {\n            return FastMath.exp(Gamma.logGamma(n));\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..52d5c64c8 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,31 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+import org.apache.commons.math3.special.Gamma;\n+import org.apache.commons.math3.util.FastMath;\n+\n+public class GammaFunction {\n+\n+    public static double gamma(double n) {\n+        if (n == 0) {\n+            return Double.POSITIVE_INFINITY;\n+        } else if (n < 0) {\n+            return Double.NaN;\n+        } else if (n < 1) {\n+            return gamma(n + 1) / n;\n+        } else if (n == 1) {\n+            return 1;\n+        } else if (n == 2) {\n+            return 1;\n+        } else if (n == 3) {\n+            return 2;\n+        } else if (n == 4) {\n+            return 6;\n+        } else {\n+            return FastMath.exp(Gamma.logGamma(n));\n+        }\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}