{
    "patch": "        double newMax = Double.NEGATIVE_INFINITY; // added line to initialize new maximum Y value\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n\n                    // added lines to check if the new item's Y value is greater than the current maximum\n                    if (clone.getValue().doubleValue() > newMax) {\n                        newMax = clone.getValue().doubleValue();\n                    }\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        copy.maxY = newMax; // added line to set the new maximum Y value",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..dc245a1 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,25 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        double newMax = Double.NEGATIVE_INFINITY; // added line to initialize new maximum Y value\n+        if (this.data.size() > 0) {\n+            for (int index = start; index <= end; index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                try {\n+                    copy.add(clone);\n+\n+                    // added lines to check if the new item's Y value is greater than the current maximum\n+                    if (clone.getValue().doubleValue() > newMax) {\n+                        newMax = clone.getValue().doubleValue();\n+                    }\n+                }\n+                catch (SeriesException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+        copy.maxY = newMax; // added line to set the new maximum Y value\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "junit.framework.AssertionFailedError: expected:<101.0> but was:<100.0>",
    "test_result": "FAIL"
}