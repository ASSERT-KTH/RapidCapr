{
    "patch": "        if(getNamesRequest == null)\n        {\n            return new GetNamesResponse(Error.INVALID_REQUEST);\n        }\n        else if(names == null || names.isEmpty())\n        {\n            return new GetNamesResponse(Error.INVALID_ARGUMENT);\n        }\n        else\n        {\n            List<String> validNames = new ArrayList<>();\n            for(String name : names)\n            {\n                if(mapping.containsKey(name))\n                {\n                    validNames.add(mapping.get(name));\n                }\n            }\n            return new GetNamesResponse(validNames);\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}