{
    "patch": "      Node grandparent = null;\n      if (parent != null) {\n        grandparent = parent.getParent();\n      }\n\n      // Don't traverse functions that are getting lent to a prototype,\n      // or are a prototype function.\n      if ((parent != null && parent.getType() == Token.ASSIGN &&\n          grandparent != null && grandparent.getType() == Token.EXPR &&\n          grandparent.getParent() != null &&\n          isPrototypeProperty(parent.getFirstChild(), grandparent.getFirstChild())) ||\n          isPrototypeMethod(n)) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..95b331ab 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,18 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      Node grandparent = null;\n+      if (parent != null) {\n+        grandparent = parent.getParent();\n+      }\n+\n+      // Don't traverse functions that are getting lent to a prototype,\n+      // or are a prototype function.\n+      if ((parent != null && parent.getType() == Token.ASSIGN &&\n+          grandparent != null && grandparent.getType() == Token.EXPR &&\n+          grandparent.getParent() != null &&\n+          isPrototypeProperty(parent.getFirstChild(), grandparent.getFirstChild())) ||\n+          isPrototypeMethod(n)) {\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}