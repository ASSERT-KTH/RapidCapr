{
    "patch": "    public static double find_zero(List<Double> xs){\n        double begin = -1.;\n        double end = 1.;\n        double tol = 1e-10;\n        \n        if (poly(xs, begin) == 0) {\n            return begin;\n        }\n        if (poly(xs, end) == 0) {\n            return end;\n        }\n\n        while (end - begin > tol) {\n            double center = (begin + end) / 2.;\n            double sign = Math.signum(poly(xs, center));\n            \n            if (sign == Math.signum(poly(xs, begin))) {\n                begin = center;\n            } else {\n                end = center;\n            }\n        }\n        return (begin + end) / 2.;\n    }",
    "patch_diff": "diff --git a/src/main/java/humaneval/buggy/FIND_ZERO.java b/src/main/java/humaneval/buggy/FIND_ZERO.java\nindex 9e2c137..b13dd71 100644\n--- a/src/main/java/humaneval/buggy/FIND_ZERO.java\n+++ b/src/main/java/humaneval/buggy/FIND_ZERO.java\n@@ -14,20 +14,25 @@ public class FIND_ZERO {\n     public static double find_zero(List<Double> xs){\n         double begin = -1.;\n         double end = 1.;\n-\n-        while (poly(xs, begin) * poly(xs, end) > 0) {\n-            begin *= 2.;\n-            end *= 2.;\n+        double tol = 1e-10;\n+        \n+        if (poly(xs, begin) == 0) {\n+            return begin;\n+        }\n+        if (poly(xs, end) == 0) {\n+            return end;\n         }\n-        while (end - begin > 1e-10) {\n+\n+        while (end - begin > tol) {\n             double center = (begin + end) / 2.;\n+            double sign = Math.signum(poly(xs, center));\n             \n-            if (poly(xs, begin) * poly(xs, end) < 0) {\n+            if (sign == Math.signum(poly(xs, begin))) {\n                 begin = center;\n             } else {\n                 end = center;\n             }\n         }\n-        return begin;\n+        return (begin + end) / 2.;\n     }\n }",
    "result_reason": "   TEST_FIND_ZERO.test_3:39",
    "test_result": "FAIL"
}