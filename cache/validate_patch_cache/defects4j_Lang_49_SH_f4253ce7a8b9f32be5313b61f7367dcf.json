{
    "patch": "import org.apache.commons.lang3.math.Fraction;\n\npublic class MyClass {\n    private int numerator;\n    private int denominator;\n\n    public MyClass(int numerator, int denominator) {\n        this.numerator = numerator;\n        if (denominator == 0) {\n            throw new IllegalArgumentException(\"Denominator cannot be zero.\");\n        }\n        this.denominator = denominator;\n    }\n\n    public Fraction reduce() {\n        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        if (gcd == 1) {\n            return new Fraction(numerator, denominator);\n        }\n        int num = numerator / gcd;\n        int denom = denominator / gcd;\n        return new Fraction(num, denom);\n    }\n\n    private int greatestCommonDivisor(int a, int b) {\n        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b, a % b);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..d40b8edd 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,6 +463,37 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n+import org.apache.commons.lang3.math.Fraction;\n+\n+public class MyClass {\n+    private int numerator;\n+    private int denominator;\n+\n+    public MyClass(int numerator, int denominator) {\n+        this.numerator = numerator;\n+        if (denominator == 0) {\n+            throw new IllegalArgumentException(\"Denominator cannot be zero.\");\n+        }\n+        this.denominator = denominator;\n+    }\n+\n+    public Fraction reduce() {\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n+        if (gcd == 1) {\n+            return new Fraction(numerator, denominator);\n+        }\n+        int num = numerator / gcd;\n+        int denom = denominator / gcd;\n+        return new Fraction(num, denom);\n+    }\n+\n+    private int greatestCommonDivisor(int a, int b) {\n+        if (b == 0) {\n+            return a;\n+        }\n+        return greatestCommonDivisor(b, a % b);\n+    }\n+}\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}