{
    "patch": "        // Use the position of the function keyword as a stand-in for the\n        // entire function's line and char position.\n        //\n        // RhinoParser treats `function () {...}` as a valid function\n        // definition without a name.\n        name = new Name();\n        name.setIdentifier(\"\");\n        name.setLineno(functionNode.getLineno());\n        name.setCharno(position2charno(functionNode.getAbsolutePosition()));",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..0a0ed3ad 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,15 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+        // Use the position of the function keyword as a stand-in for the\n+        // entire function's line and char position.\n+        //\n+        // RhinoParser treats `function () {...}` as a valid function\n+        // definition without a name.\n+        name = new Name();\n+        name.setIdentifier(\"\");\n+        name.setLineno(functionNode.getLineno());\n+        name.setCharno(position2charno(functionNode.getAbsolutePosition()));\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}