{
    "patch": "public void printInOperatorInForLoop(boolean c, Object[] d, String expected) {\n    String result = \"\";\n    if(c) {\n        for(int a = 0; a < d.length; a++) {\n            result += d[a];\n        }\n    } else {\n        for(int a = 0; !((Integer)a).equals(d); a++) {\n            result += d[a];\n        }\n    }\n    assertEquals(expected, \"for(a=c?0:(0 in d);;)foo()\".replace(\"(0 in d)\", result));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 54eb5cf8..cb0a52e6 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -104,7 +104,19 @@ class CodeGenerator {\n     add(n, Context.OTHER);\n   }\n \n-  void add(Node n, Context context) {\n+public void printInOperatorInForLoop(boolean c, Object[] d, String expected) {\n+    String result = \"\";\n+    if(c) {\n+        for(int a = 0; a < d.length; a++) {\n+            result += d[a];\n+        }\n+    } else {\n+        for(int a = 0; !((Integer)a).equals(d); a++) {\n+            result += d[a];\n+        }\n+    }\n+    assertEquals(expected, \"for(a=c?0:(0 in d);;)foo()\".replace(\"(0 in d)\", result));\n+}\n     if (!cc.continueProcessing()) {\n       return;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}