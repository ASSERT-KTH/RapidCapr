{
    "call": {
        "messages": [
            {
                "content": "You are an automated program repair tool. Please answer with the correct line in a code block.",
                "role": "system"
            },
            {
                "content": "The following Java code contains a buggy line that has been replaced with INFILL:\n```java\npublic class JsonWriter implements Closeable, Flushable {\n   */\n  public JsonWriter value(double value) throws IOException {\n    writeDeferredName();\nINFILL\n      throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n    }\n    beforeValue();\n```\n\nThis was the original buggy line which was at the INFILL location:\n```java\n    if (Double.isNaN(value) || Double.isInfinite(value)) {\n```\n\nThe code fails on this test:\n```java\ntestNonFiniteDoublesWhenLenient\n```\n\non this test line:\n```java\njsonWriter.value(Double.NaN);\n```\n\nwith this error message:\n```java\njava.lang.IllegalArgumentException: Numeric values must be finite, but was NaN\n```\n\nPlease provide the correct line at the INFILL location.\n",
                "role": "user"
            },
            {
                "content": "```java\nif (Double.isNaN(value) || Double.isInfinite(value)) {\n    throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n}\n```",
                "role": "assistant"
            },
            {
                "content": "The fixed version is still incorrect, it contains the test error:\njava.lang.IllegalArgumentException: Numeric values must be finite, but was NaN\nPlease provide the correct patch line at the infill location.",
                "role": "user"
            },
            {
                "content": "```java\nif (Double.isNaN(value) || Double.isInfinite(value)) {\n    throw new IOException(\"Numeric values must be finite, but was \" + value);\n}\n``` \nNote: Since `JsonWriter` implements `Closeable` and `Flushable`, it is appropriate to throw an `IOException`.",
                "role": "assistant"
            },
            {
                "content": "The fixed version is still incorrect, it contains the test error:\njava.lang.IllegalArgumentException: Numeric values must be finite, but was NaN\nPlease provide the correct patch line at the infill location.",
                "role": "user"
            }
        ],
        "model": "gpt-3.5-turbo",
        "n": 1
    },
    "response": {
        "choices": [
            {
                "finish_reason": "stop",
                "index": 0,
                "message": {
                    "content": "```java\nif (!throwOnNonFiniteDouble && (Double.isNaN(value) || Double.isInfinite(value))) {\n    throw new IOException(\"Numeric values must be finite, but was \" + value);\n}\n``` \nNote: This solution checks if `throwOnNonFiniteDouble` is `false` before throwing the exception to avoid throwing an exception when `throwOnNonFiniteDouble` is `true`.",
                    "role": "assistant"
                }
            }
        ],
        "created": 1681670960,
        "id": "chatcmpl-761j6RASp0dBK8JLUpqZMYumnwJQ2",
        "model": "gpt-3.5-turbo-0301",
        "object": "chat.completion",
        "usage": {
            "completion_tokens": 83,
            "prompt_tokens": 417,
            "total_tokens": 500
        }
    }
}