diff --git a/src/main/java/humaneval/buggy/COMPARE_ONE.java b/src/main/java/humaneval/buggy/COMPARE_ONE.java
index cdf822c..f36a3a5 100644
--- a/src/main/java/humaneval/buggy/COMPARE_ONE.java
+++ b/src/main/java/humaneval/buggy/COMPARE_ONE.java
@@ -14,24 +14,47 @@ package humaneval.buggy;
  */
 
 public class COMPARE_ONE {
-    public static Object compare_one(Object a, Object b) {
-        double temp_a = 0, temp_b = 0;
-        if(a instanceof String) {
-            String temp_a_string = a.toString();
-            temp_a_string = temp_a_string.replace(',', '.');
-            temp_a = Double.parseDouble(temp_a_string);
+public static Object compare_one(Object a, Object b) {
+    double tempA = 0, tempB = 0;
+
+    if (a instanceof String) {
+        try {
+            tempA = Double.parseDouble(((String) a).replace(",", "."));
+        } catch (NumberFormatException e) {
+            tempA = Double.MIN_VALUE;
         }
-        if(b instanceof String) {
-            String temp_b_string = b.toString();
-            temp_b_string = temp_b_string.replace(',', '.');
-            temp_b = Double.parseDouble(temp_b_string);
+    } else if (a instanceof Double) {
+        tempA = (Double) a;
+    } else if (a instanceof Integer) {
+        tempA = ((Integer) a).doubleValue();
+    }
+
+    if (b instanceof String) {
+        try {
+            tempB = Double.parseDouble(((String) b).replace(",", "."));
+        } catch (NumberFormatException e) {
+            tempB = Double.MIN_VALUE;
         }
-        if(a instanceof Double) temp_a = ((Integer) b).doubleValue();
-        if(b instanceof Double) temp_b = ((Integer) a).doubleValue();
-        if(a instanceof Integer) temp_a = (Double) a;
-        if(b instanceof Integer) temp_b = (Double) b;
-        if(temp_a == temp_b) return null;
-        if(temp_a > temp_b) return a;
-        else return b;
+    } else if (b instanceof Double) {
+        tempB = (Double) b;
+    } else if (b instanceof Integer) {
+        tempB = ((Integer) b).doubleValue();
+    }
+
+    if (tempA == Double.MIN_VALUE) {
+        return b;
     }
+
+    if (tempB == Double.MIN_VALUE) {
+        return a;
+    }
+
+    if (tempA == tempB) {
+        return null;
+    } else if (tempA > tempB) {
+        return a;
+    } else {
+        return b;
+    }
+}
 }