diff --git a/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java b/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java
index 1ef65fc..bf9fe63 100644
--- a/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java
+++ b/src/main/java/humaneval/buggy/EVEN_ODD_PALINDROME.java
@@ -36,13 +36,18 @@ public class EVEN_ODD_PALINDROME {
         return n_str.equals(n_str_rev);
     }
 
-    public static ArrayList<Integer> even_odd_palindrome(int n) {
-        int even_palindrome_count = 0, odd_palindrome_count = 0;
-        for(int i = 1; i <= n; i++) {
-            if((i % 2) == 0 && is_palindrome(i)) odd_palindrome_count--;
-            else if((i % 2) == 1 && is_palindrome(i)) even_palindrome_count--;
+public static ArrayList<Integer> even_odd_palindrome(int n) {
+    int even_palindrome_count = 0, odd_palindrome_count = 0;
+    for(int i = 1; i <= n; i++) {
+        boolean isPalindrome = is_palindrome(i);
+        if(isPalindrome) {
+            if(i % 2 == 0) {
+                even_palindrome_count++;
+            } else {
+                odd_palindrome_count++;
+            }
         }
-        ArrayList<Integer> result = new ArrayList<>(Arrays.asList(even_palindrome_count, odd_palindrome_count));
-        return result;
     }
-}
\ No newline at end of file
+    return new ArrayList<>(Arrays.asList(even_palindrome_count, odd_palindrome_count));
+}
+}