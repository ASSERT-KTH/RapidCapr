diff --git a/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java b/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java
index ce2ea8a..8d3e9e3 100644
--- a/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java
+++ b/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java
@@ -5,26 +5,15 @@ import java.util.Collections;
 
 public class MOVE_ONE_BALL {
     public static boolean move_one_ball(ArrayList<Integer> arr) {
-        if(arr.size() == 0) return true;
+        if (arr.size() == 0)
+            return true;
         ArrayList<Integer> sorted_arr = new ArrayList<>(arr);
         Collections.sort(sorted_arr);
-        int min_value = sorted_arr.get(sorted_arr.size() - 1);
-        int min_index = 0;
-        for(int i = 0; i < arr.size(); i++) {
-            if(arr.get(i) == min_value) min_index = i;
-        }
+        Integer min_value = sorted_arr.get(0);
+        Integer min_index = arr.indexOf(min_value);
         ArrayList<Integer> arr_after_move = new ArrayList<>();
-        for(int i = min_index; i < arr.size(); i++) {
-            arr_after_move.add(arr.get(i));
-        }
-        for(int i = 0; i < min_index; i++) {
-            arr_after_move.add(arr.get(i));
-        }
-        for(int i = 0; i < arr.size(); i++) {
-            if(arr_after_move.get(i) != sorted_arr.get(i)) {
-                return false;
-            }
-        }
-        return true;
+        arr_after_move.addAll(arr.subList(min_index, arr.size()));
+        arr_after_move.addAll(arr.subList(0, min_index));
+        return arr_after_move.equals(sorted_arr);
     }
 }