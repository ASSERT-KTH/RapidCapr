diff --git a/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java b/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java
index fe9a279..06fe129 100644
--- a/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java
+++ b/src/main/java/humaneval/buggy/FILE_NAME_CHECK.java
@@ -14,23 +14,35 @@ file_name_check("example.txt") # => 'Yes'
 file_name_check("1example.dll") # => 'No' (the name should start with a latin alphapet letter) */
 
 public class FILE_NAME_CHECK {
-    public static String file_name_check(String file_name) {
-        String[] lst = file_name.split("\\.");
+public static String file_name_check(String file_name) {
+    String[] parts = file_name.split("\\.");
 
-        if (lst.length != 2)
-            return "No";
-        if (! (lst[1].equals("txt") || lst[1].equals("exe") || lst[1].equals("dll")))
-            return "No";
-        if (lst[0].length() == 0)
-            return "No";
-        if ('a' > lst[0].charAt(0) && lst[0].charAt(0) > 'z' || 'A' > lst[0].charAt(0) && lst[0].charAt(0) > 'Z')
-            return "No";
-        int digit_cnt = 0;
-        for (char c : file_name.toCharArray()){
-            if ('0' <= c && c <= '9')
-                digit_cnt += 1;
+    if (parts.length != 2) {
+        return "No";
+    }
+
+    String fileName = parts[0];
+    String extension = parts[1].toLowerCase();
+
+    if (fileName.isEmpty() || !Character.isLetter(fileName.charAt(0))) {
+        return "No";
+    }
+
+    int digitCount = 0;
+    for (char c : fileName.toCharArray()) {
+        if (Character.isDigit(c)) {
+            digitCount++;
+            if (digitCount > 3) {
+                return "No";
+            }
         }
-        if (digit_cnt > 3)  return "No";
-        return "Yes";
     }
+
+    boolean isExtensionValid = extension.matches("(?i)txt|exe|dll");
+    if (!isExtensionValid) {
+        return "No";
+    }
+    
+    return "Yes";
+}
 }