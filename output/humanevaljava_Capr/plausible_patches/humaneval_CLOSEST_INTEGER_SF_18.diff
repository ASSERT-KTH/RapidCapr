diff --git a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java
index 23630cd..25eac5c 100644
--- a/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java
+++ b/src/main/java/humaneval/buggy/CLOSEST_INTEGER.java
@@ -17,20 +17,30 @@ package humaneval.buggy;
 // return 15 and closest_integer("-14.5") should return -15.
 
 public class CLOSEST_INTEGER {
-    public static int closest_integer(String value) {
-        if (value.indexOf('.') >= 0) {
-            while (value.charAt(value.length() - 1) == '0')
-                value = value.substring(0, value.length() - 1);
-        }
+public static int closest_integer(String value) {
+    if (value == null || value.isEmpty()) {
+        return 0;
+    }
 
-        double num = Double.parseDouble(value);
-        int result = 0;
-        if (value.substring(value.length() - 2).equals(".5")) {
-            result = num > 0 ? (int)Math.floor(num) : (int)Math.ceil(num);
-        } else if (value.length() > 0){
-            result = (int)Math.round(num);
+    // Remove trailing zeroes if decimal point present
+    if (value.contains(".")) {
+        while (value.endsWith("0")) {
+            value = value.substring(0, value.length() - 1);
         }
+        if (value.endsWith(".")) {
+            value = value.substring(0, value.length() - 1);
+        }
+    }
 
-        return result;
+    double num = Double.parseDouble(value);
+
+    int result;
+    if (Math.abs(num - Math.round(num)) == 0.5) {
+        result = (num > 0) ? (int) Math.ceil(num - 0.1) : (int) Math.floor(num + 0.1);
+    } else {
+        result = (int) Math.round(num);
     }
+
+    return result;
+}
 }