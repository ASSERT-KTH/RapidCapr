diff --git a/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java b/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java
index ce2ea8a..c19fcb3 100644
--- a/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java
+++ b/src/main/java/humaneval/buggy/MOVE_ONE_BALL.java
@@ -4,27 +4,22 @@ import java.util.ArrayList;
 import java.util.Collections;
 
 public class MOVE_ONE_BALL {
-    public static boolean move_one_ball(ArrayList<Integer> arr) {
-        if(arr.size() == 0) return true;
-        ArrayList<Integer> sorted_arr = new ArrayList<>(arr);
-        Collections.sort(sorted_arr);
-        int min_value = sorted_arr.get(sorted_arr.size() - 1);
-        int min_index = 0;
-        for(int i = 0; i < arr.size(); i++) {
-            if(arr.get(i) == min_value) min_index = i;
+public static boolean move_one_ball(ArrayList<Integer> arr) {
+    if(arr.size() == 0) return true;
+    int min_value = arr.get(0);
+    int min_index = 0;
+    for(int i = 1; i < arr.size(); i++) {
+        if(arr.get(i) < min_value) {
+            min_value = arr.get(i);
+            min_index = i;
         }
-        ArrayList<Integer> arr_after_move = new ArrayList<>();
-        for(int i = min_index; i < arr.size(); i++) {
-            arr_after_move.add(arr.get(i));
-        }
-        for(int i = 0; i < min_index; i++) {
-            arr_after_move.add(arr.get(i));
-        }
-        for(int i = 0; i < arr.size(); i++) {
-            if(arr_after_move.get(i) != sorted_arr.get(i)) {
-                return false;
-            }
-        }
-        return true;
     }
+    ArrayList<Integer> arr_after_move = new ArrayList<>(arr.size());
+    for(int i = 0; i < arr.size(); i++) {
+        arr_after_move.add(arr.get((min_index+i)%arr.size()));
+    }
+    ArrayList<Integer> sorted_arr = new ArrayList<>(arr);
+    Collections.sort(sorted_arr);
+    return arr_after_move.equals(sorted_arr);
+}
 }