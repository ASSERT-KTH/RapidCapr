diff --git a/src/main/java/humaneval/buggy/SIMPLIFY.java b/src/main/java/humaneval/buggy/SIMPLIFY.java
index a55ee2e..79c1d96 100644
--- a/src/main/java/humaneval/buggy/SIMPLIFY.java
+++ b/src/main/java/humaneval/buggy/SIMPLIFY.java
@@ -12,16 +12,44 @@ simplify("1/6", "2/1") = False
 simplify("7/10", "10/2") = False */
 
 public class SIMPLIFY {
-    public static boolean simplify(String x, String n) {
-        int a = Integer.parseInt(x.split("/")[0]);
-        int b = Integer.parseInt(x.split("/")[1]);
-        int c = Integer.parseInt(n.split("/")[0]);
-        int d = Integer.parseInt(n.split("/")[1]);
+public static boolean simplify(String x, String n) {
+    try {
+        String[] xSplit = x.split("/");
+        String[] nSplit = n.split("/");
+        int a = Integer.parseInt(xSplit[0]);
+        int b = Integer.parseInt(xSplit[1]);
+        int c = Integer.parseInt(nSplit[0]);
+        int d = Integer.parseInt(nSplit[1]);
 
+        if (b == 0 || d == 0) {
+            return false; // denominator is zero
+        }
+
+        // find greatest common divisor of a and b, then divide both by it
+        int gcd1 = findGCD(Math.abs(a), Math.abs(b));
+        a /= gcd1;
+        b /= gcd1;
+
+        // find greatest common divisor of c and d, then divide both by it
+        int gcd2 = findGCD(Math.abs(c), Math.abs(d));
+        c /= gcd2;
+        d /= gcd2;
+
+        // numerator and denominator after multiplication
         int numerator = a * c;
         int denom = b * d;
-        if (numerator / denom == (int) (numerator / denom))
-            return true;
-        return false;
+
+        if (numerator % denom == 0) {
+            return true; // result is an integer
+        }
+    } catch (NumberFormatException | ArithmeticException | ArrayIndexOutOfBoundsException e) {
+        // invalid input
     }
+    return false;
+}
+
+// recursive function to find greatest common divisor
+private static int findGCD(int a, int b) {
+    return b == 0 ? a : findGCD(b, a % b);
+}
 }