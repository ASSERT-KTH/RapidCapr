diff --git a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
index 905614f..77d0af3 100644
--- a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
+++ b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
@@ -1,23 +1,31 @@
 package humaneval.buggy;
 
 public class RESCALE_TO_UNIT {
-    public static double[] rescale_to_unit(double[] numbers){
-        double min = Double.MAX_VALUE;
-        double max = Double.MIN_VALUE;
+public static double[] rescale_to_unit(double[] numbers){
+	// Check if the input array is null or empty
+	if(numbers == null || numbers.length == 0)
+		return new double[0];
 
-        for (int i = 0; i < numbers.length; i += 1) {
-            if (numbers[i] > max) {
-                max = numbers[i];
-            }
-            else if (numbers[i] < min) {
-                min = numbers[i];
-            }
-        }
+	// Find the minimum and maximum values in the array
+	double min = numbers[0];
+	double max = numbers[0];
 
-        double[] result = new double[numbers.length];
-        for (int i = 0; i < numbers.length; i += 1) {
-            result[i] = (numbers[i] - min) / (max - min);
-        }
-        return result;
-    }
+	for(int i = 1; i < numbers.length; i++) {
+		if(numbers[i] < min)
+			min = numbers[i];
+		if(numbers[i] > max)
+			max = numbers[i];
+	}
+
+	// Check if the range is zero
+	if(max == min)
+		return new double[numbers.length];
+
+	// Scale the values to the range [0, 1]
+	double[] result = new double[numbers.length];
+	for(int i = 0; i < numbers.length; i++)
+		result[i] = (numbers[i] - min) / (max - min);
+
+	return result;
+}
 }