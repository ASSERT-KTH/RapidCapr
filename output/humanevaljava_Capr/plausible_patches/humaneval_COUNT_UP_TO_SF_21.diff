diff --git a/src/main/java/humaneval/buggy/COUNT_UP_TO.java b/src/main/java/humaneval/buggy/COUNT_UP_TO.java
index 2952188..78563b1 100644
--- a/src/main/java/humaneval/buggy/COUNT_UP_TO.java
+++ b/src/main/java/humaneval/buggy/COUNT_UP_TO.java
@@ -14,18 +14,35 @@ import java.util.List;
 // count_up_to(18) => [2,3,5,7,11,13,17]
 
 public class COUNT_UP_TO {
-    public static List<Integer> count_up_to(int n) {
-        List<Integer> primes = new ArrayList<Integer>();
-
-        for (int i = 2; i < n; i += 1){
-            boolean is_prime = false;
-            for (int j = 2; j < i; j += 1){
-                if (i % j == 0) {
-                    is_prime = false;
-                }
+public static List<Integer> count_up_to(int n) {
+    List<Integer> primes = new ArrayList<Integer>();
+
+    if (n < 2) {
+        return primes;
+    }
+
+    if (n == 2) {
+        primes.add(2);
+        return primes;
+    }
+
+    boolean[] isComposite = new boolean[n];
+    primes.add(2);
+    int limit = (int) Math.sqrt(n);
+    for (int i = 3; i <= limit; i += 2) {
+        if (!isComposite[i]) {
+            for (int j = i * i; j < n; j += 2 * i) {
+                isComposite[j] = true;
             }
-            if (is_prime) primes.add(i);
         }
-        return primes;
     }
+
+    for (int i = 3; i < n; i += 2) {
+        if (!isComposite[i]) {
+            primes.add(i);
+        }
+    }
+
+    return primes;
+}
 }