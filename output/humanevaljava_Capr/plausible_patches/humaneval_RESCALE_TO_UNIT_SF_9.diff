diff --git a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
index 905614f..3b913d5 100644
--- a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
+++ b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
@@ -1,23 +1,31 @@
 package humaneval.buggy;
 
 public class RESCALE_TO_UNIT {
-    public static double[] rescale_to_unit(double[] numbers){
-        double min = Double.MAX_VALUE;
-        double max = Double.MIN_VALUE;
+public static double[] rescale_to_unit(double[] numbers){
+    if (numbers == null || numbers.length == 0) {
+        return new double[0];
+    }
 
-        for (int i = 0; i < numbers.length; i += 1) {
-            if (numbers[i] > max) {
-                max = numbers[i];
-            }
-            else if (numbers[i] < min) {
-                min = numbers[i];
-            }
-        }
+    double min = numbers[0];
+    double max = numbers[0];
 
-        double[] result = new double[numbers.length];
-        for (int i = 0; i < numbers.length; i += 1) {
-            result[i] = (numbers[i] - min) / (max - min);
+    for (int i = 1; i < numbers.length; i += 1) {
+        if (numbers[i] > max) {
+            max = numbers[i];
         }
-        return result;
+        if (numbers[i] < min) {
+            min = numbers[i];
+        }
+    }
+
+    if (Math.abs(max - min) < 1e-9) { // Use an epsilon for floating-point comparisons
+        return new double[numbers.length];
+    }
+
+    double[] result = new double[numbers.length];
+    for (int i = 0; i < numbers.length; i += 1) {
+        result[i] = (numbers[i] - min) / (max - min);
     }
+    return result;
+}
 }