diff --git a/src/main/java/humaneval/buggy/HISTOGRAM.java b/src/main/java/humaneval/buggy/HISTOGRAM.java
index 7ebdd21..b617eb1 100644
--- a/src/main/java/humaneval/buggy/HISTOGRAM.java
+++ b/src/main/java/humaneval/buggy/HISTOGRAM.java
@@ -18,24 +18,26 @@ import java.util.HashMap;
 public class HISTOGRAM {
     public static HashMap<Character, Integer> histogram(String s) {
         HashMap<Character, Integer> res = new HashMap<Character, Integer>();
-        if(s.isEmpty()) return res;
-        String[] list_letters = s.split(" ");
+        if(s == null || s.isEmpty()) return res;
+        String[] list_letters = s.toLowerCase().split("");
         int[] count_letter = new int[26];
         for(int i = 0; i < list_letters.length; i++) {
             char c = list_letters[i].charAt(0);
-            count_letter[c - 'a']++;
+            if(Character.isLetter(c)) {
+                count_letter[c - 'a']++;
+            }
         }
         int most_count = 0;
         for(int i = 0; i < 26; i++) {
-            if(count_letter[i] < most_count) {
+            if(count_letter[i] > most_count) {
                 most_count = count_letter[i];
-                res.clear();
-                res.put((char) ('a' + i), most_count);
-            } else if(count_letter[i] == most_count) {
+            }
+        }
+        for(int i = 0; i < 26; i++) {
+            if(count_letter[i] == most_count) {
                 res.put((char) ('a' + i), most_count);
             }
         }
-        if(most_count == 0) res.clear();
         return res;
     }
 }