diff --git a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java
index 7791efd..3ce986f 100644
--- a/src/main/java/humaneval/buggy/NEXT_SMALLEST.java
+++ b/src/main/java/humaneval/buggy/NEXT_SMALLEST.java
@@ -12,15 +12,26 @@ next_smallest([]) == None
 next_smallest([1, 1]) == None */
 
 public class NEXT_SMALLEST {
-    public static Integer next_smallest(int[] lst) {
-        List<Integer> numbers = new ArrayList<Integer>();
-        for (Integer n : lst)
-            numbers.add(n);
-        Integer[] no_duplicate = numbers.toArray(new Integer[] {});
-        Arrays.sort(no_duplicate);
-
-        if (no_duplicate.length < 2)
-            return null;
-        return no_duplicate[1];
+public static Integer next_smallest(int[] lst) {
+    if (lst == null || lst.length < 2) {
+        return null;
     }
+
+    // Create a TreeSet to store the distinct elements and keep them sorted
+    TreeSet<Integer> set = new TreeSet<>();
+
+    for (int n : lst) {
+        set.add(n);
+    }
+
+    // If there are fewer than two unique elements, return null
+    if (set.size() < 2) {
+        return null;
+    }
+
+    // Get an iterator for the TreeSet and advance it once to get the second smallest element
+    Iterator<Integer> iterator = set.iterator();
+    iterator.next();
+    return iterator.next();
+}
 }