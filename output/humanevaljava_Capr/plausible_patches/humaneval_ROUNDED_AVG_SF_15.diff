diff --git a/src/main/java/humaneval/buggy/ROUNDED_AVG.java b/src/main/java/humaneval/buggy/ROUNDED_AVG.java
index 4f7aba3..c311533 100644
--- a/src/main/java/humaneval/buggy/ROUNDED_AVG.java
+++ b/src/main/java/humaneval/buggy/ROUNDED_AVG.java
@@ -12,20 +12,12 @@ package humaneval.buggy;
  */
 
 public class ROUNDED_AVG {
-    public static String rounded_avg(int n, int m) {
-        if(m < n) return "-1";
-        int summation = 0;
-        for(int i = n; i < m + 1; i++) {
-            summation += i;
-        }
-        double avg = ((double) summation)/((double) (m - n + 1));
-        double rem = avg - Math.floor(avg);
-        int avg_rounded = 0;
-        if(rem <= 0.5) {
-            avg_rounded = (int) Math.ceil(avg);
-        } else {
-            avg_rounded = (int) Math.ceil(avg);
-        }
-        return Integer.toBinaryString(avg_rounded);
-    }
+public static String rounded_avg(int n, int m) {
+    if (m < n) return "-1";
+    long sum = ((long)m + n) * (m - n + 1) / 2;
+    long ceilAvg = (long) Math.ceil(sum / (double) (m - n + 1));
+    long floorAvg = (long) Math.floor(sum / (double) (m - n + 1));
+    long avg_rounded = (ceilAvg - sum / (double) (m - n + 1)) < (sum / (double) (m - n + 1) - floorAvg) ? ceilAvg : floorAvg;
+    return Long.toBinaryString(avg_rounded);
+}
 }