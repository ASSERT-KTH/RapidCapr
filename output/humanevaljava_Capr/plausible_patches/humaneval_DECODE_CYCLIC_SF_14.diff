diff --git a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java
index 9ba739f..fd8a2a1 100644
--- a/src/main/java/humaneval/buggy/DECODE_CYCLIC.java
+++ b/src/main/java/humaneval/buggy/DECODE_CYCLIC.java
@@ -4,27 +4,39 @@ import java.util.ArrayList;
 
 public class DECODE_CYCLIC {
     public static String decode_cyclic(String str) {
-        class Cyclic {
-            String encode_cyclic(String s) {
-                ArrayList<String> groups = new ArrayList<String>();
+class Cyclic {
+    String encode_cyclic(String s) {
+        StringBuilder result = new StringBuilder();
 
-                for (int i = 0; i < s.length(); i += 3){
-                    groups.add(s.substring(i, Math.min(s.length(), i + 3)));
-                }
-                int remain = s.length() % 3;
-                
-                String result = "";
-                for (String group : groups){
-                    result += group.substring(1) + group.substring(0, 1);
-                }
+        for (int i = 0; i < s.length(); i += 3) {
+            if (i + 2 < s.length()) {
+                String group = s.substring(i, i + 3);
+                result.append(group.charAt(1)).append(group.charAt(2)).append(group.charAt(0));
+            } else {
+                result.append(s.substring(i));
+                break;
+            }
+        }
+
+        return result.toString();
+    }
 
-                if (remain > 0){
-                    result += s.substring(s.length() - remain);
-                }
+    String decode_cyclic(String s) {
+        StringBuilder result = new StringBuilder();
 
-                return result;
+        for (int i = 0; i < s.length(); i += 3) {
+            if (i + 2 < s.length()) {
+                String group = s.substring(i, i + 3);
+                result.append(group.charAt(2)).append(group.charAt(0)).append(group.charAt(1));
+            } else {
+                result.append(s.substring(i));
+                break;
             }
         }
+
+        return result.toString();
+    }
+}
         
         final Cyclic cyclic = new Cyclic();
         return cyclic.encode_cyclic(cyclic.encode_cyclic(str));