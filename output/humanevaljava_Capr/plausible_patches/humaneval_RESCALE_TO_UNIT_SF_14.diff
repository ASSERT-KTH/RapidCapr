diff --git a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
index 905614f..d958116 100644
--- a/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
+++ b/src/main/java/humaneval/buggy/RESCALE_TO_UNIT.java
@@ -1,23 +1,34 @@
 package humaneval.buggy;
 
 public class RESCALE_TO_UNIT {
-    public static double[] rescale_to_unit(double[] numbers){
-        double min = Double.MAX_VALUE;
-        double max = Double.MIN_VALUE;
+public static double[] rescale_to_unit(double[] numbers) {
+    if (numbers == null || numbers.length == 0) {
+        return new double[0];
+    }
+
+    double min = numbers[0];
+    double max = numbers[0];
 
-        for (int i = 0; i < numbers.length; i += 1) {
-            if (numbers[i] > max) {
-                max = numbers[i];
-            }
-            else if (numbers[i] < min) {
-                min = numbers[i];
-            }
+    for (int i = 1; i < numbers.length; i++) {
+        if (numbers[i] > max) {
+            max = numbers[i];
+        }
+        if (numbers[i] < min) {
+            min = numbers[i];
         }
+    }
 
-        double[] result = new double[numbers.length];
-        for (int i = 0; i < numbers.length; i += 1) {
-            result[i] = (numbers[i] - min) / (max - min);
+    double[] result = new double[numbers.length];
+    if (max == min) {
+        for (int i = 0; i < numbers.length; i++) {
+            result[i] = 0.5;
+        }
+    } else {
+        double range = max - min;
+        for (int i = 0; i < numbers.length; i++) {
+            result[i] = (numbers[i] - min) / range;
         }
-        return result;
     }
+    return result;
+}
 }