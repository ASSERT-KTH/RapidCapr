diff --git a/src/main/java/humaneval/buggy/INTERSECTION.java b/src/main/java/humaneval/buggy/INTERSECTION.java
index 2955ca2..d23dfc5 100644
--- a/src/main/java/humaneval/buggy/INTERSECTION.java
+++ b/src/main/java/humaneval/buggy/INTERSECTION.java
@@ -30,11 +30,31 @@ public class INTERSECTION {
         }
         return true;
     }
-    public static String intersection(int[] interval1, int[] interval2) {
-        int l = Math.min(interval1[0], interval2[0]);
-        int r = Math.max(interval1[1], interval2[1]);
-        int length = r - l;
-        if(length > 0 && is_prime(length)) return "YES";
+public static String intersection(int[] interval1, int[] interval2) {
+    // check if intervals are valid
+    if (interval1 == null || interval2 == null || interval1.length != 2 || interval2.length != 2) {
         return "NO";
     }
+
+    int maxLeft = Math.max(interval1[0], interval2[0]);
+    int minRight = Math.min(interval1[1], interval2[1]);
+
+    // check if intervals do not intersect
+    if (maxLeft > minRight) {
+        return "NO";
+    }
+
+    int length = minRight - maxLeft;
+
+    // handle edge cases
+    if (length < 1) {
+        return "NO";
+    } else if (length == 1) {
+        return "NO"; // 1 is not considered a prime number
+    } else if (is_prime(length)) {
+        return "YES";
+    } else {
+        return "NO";
+    }
+}
 }