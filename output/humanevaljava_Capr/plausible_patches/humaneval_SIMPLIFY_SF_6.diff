diff --git a/src/main/java/humaneval/buggy/SIMPLIFY.java b/src/main/java/humaneval/buggy/SIMPLIFY.java
index a55ee2e..e9115cc 100644
--- a/src/main/java/humaneval/buggy/SIMPLIFY.java
+++ b/src/main/java/humaneval/buggy/SIMPLIFY.java
@@ -12,16 +12,37 @@ simplify("1/6", "2/1") = False
 simplify("7/10", "10/2") = False */
 
 public class SIMPLIFY {
-    public static boolean simplify(String x, String n) {
-        int a = Integer.parseInt(x.split("/")[0]);
-        int b = Integer.parseInt(x.split("/")[1]);
-        int c = Integer.parseInt(n.split("/")[0]);
-        int d = Integer.parseInt(n.split("/")[1]);
-
+public static boolean simplify(String x, String n) {
+    String[] xParts = x.split("/");
+    String[] nParts = n.split("/");
+    if (xParts.length != 2 || nParts.length != 2) {
+        return false; // invalid input
+    }
+    try {
+        int a = Integer.parseInt(xParts[0]);
+        int b = Integer.parseInt(xParts[1]);
+        int c = Integer.parseInt(nParts[0]);
+        int d = Integer.parseInt(nParts[1]);
+        int gcd1 = findGCD(a, b);
+        int gcd2 = findGCD(c, d);
+        a /= gcd1;
+        b /= gcd1;
+        c /= gcd2;
+        d /= gcd2;
         int numerator = a * c;
-        int denom = b * d;
-        if (numerator / denom == (int) (numerator / denom))
-            return true;
-        return false;
+        int denominator = b * d;
+        if (numerator == 0 || denominator == 0) {
+            return numerator == 0 && denominator == 0;
+        } else {
+            int gcd3 = findGCD(Math.abs(numerator), Math.abs(denominator));
+            return denominator / gcd3 == 1;
+        }
+    } catch (NumberFormatException e) {
+        return false; // invalid input
     }
 }
+
+private static int findGCD(int a, int b) {
+    return b == 0 ? a : findGCD(b, a % b);
+}
+}