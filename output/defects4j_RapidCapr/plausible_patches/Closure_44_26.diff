diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java
index 47556652..7a3fc900 100644
--- a/src/com/google/javascript/jscomp/CodeConsumer.java
+++ b/src/com/google/javascript/jscomp/CodeConsumer.java
@@ -178,28 +178,33 @@ abstract class CodeConsumer {
   void endCaseBody() {
   }
 
-  void add(String newcode) {
+void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
-      return;
+        return;
     }
 
-    char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
-      append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
+    // check if we need to add a space to separate this code from the previous one
+    char last = getLastChar();
+    char first = newcode.charAt(0);
+    boolean lastIsWordChar = isWordChar(last) || last == '\\';
+    boolean firstIsWordChar = isWordChar(first) || first == '\\';
+    boolean currentIsComment = (first == '/' && newcode.length() > 1 && (newcode.charAt(1) == '/' || newcode.charAt(1) == '*'));
+
+    if (lastIsWordChar && firstIsWordChar) {
+        // handle cases like "foo + bar"
+        append(" ");
+    } else if (!currentIsComment && (last == '/' || last == '*') && first == '/') {
+        // handle case where "/" or "/*" is followed by a comment "//" or "/*"
+        append(" ");
+    } else if (!currentIsComment && last == '*' && first == '*') {
+        // handle cases like "/* foo */ /* bar */"
+        append(" ");
     }
 
     append(newcode);
-  }
+}
 
   void appendOp(String op, boolean binOp) {
     append(op);