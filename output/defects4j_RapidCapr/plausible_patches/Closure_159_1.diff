diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java
index 814a07f4..bbb589c6 100644
--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -773,14 +773,12 @@ class InlineFunctions implements SpecializationAwareCompilerPass {
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
-    // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
-      }
+    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {
+        String functionName = node.getFirstChild().getString();
+        if (functionName != null && !functionName.startsWith("goog.") && !functionName.startsWith("$")) {
+          changed.add(functionName);
+        }
     }
-
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }