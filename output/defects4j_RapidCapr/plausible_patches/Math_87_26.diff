diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
index 0ab790cd6..89b537068 100644
--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
@@ -269,19 +269,27 @@ class SimplexTableau implements Serializable {
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
-    private Integer getBasicRow(final int col) {
-        Integer row = null;
+private Integer getBasicRow(final int col) {
+    Integer basicRow = null;
+    try {
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
+            final double entry = getEntry(i, col);
+            if (MathUtils.equals(entry, 1.0, epsilon)) {
+                if (basicRow == null) {
+                    basicRow = i;
                 } else {
-                return null;
+                    throw new IllegalStateException("More than one basic variable found in column " + col);
                 }
+            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {
+                return null;
             }
         }
-        return row;
+    } catch (IllegalStateException e) {
+        System.err.println(e.getMessage());
+        return null;
     }
+    return basicRow;
+}
 
     /**
      * Removes the phase 1 objective function and artificial variables from this tableau.