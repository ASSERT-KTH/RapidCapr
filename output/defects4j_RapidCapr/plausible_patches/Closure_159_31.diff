diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java
index 814a07f4..889ce41d 100644
--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -774,10 +774,31 @@ class InlineFunctions implements SpecializationAwareCompilerPass {
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
+    if (node != null && node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+      if (child != null && child.getType() == Token.NAME) {
+        String functionName = child.getString();
+        if (functionName != null && !functionName.isEmpty() &&
+            !functionName.startsWith("$") && !functionName.startsWith("goog.")
+            && !functionName.equals("assert") && !functionName.equals("fail")
+            && !functionName.equals("assertTrue") && !functionName.equals("assertFalse")
+            && !functionName.equals("assertEquals") && !functionName.equals("assertSame")
+            && !functionName.equals("assertNotSame") && !functionName.equals("assertArrayEquals")
+            && !functionName.equals("assertNotNull") && !functionName.equals("assertNull")
+            && !functionName.equals("expect") && !functionName.equals("expectFail")
+            && !functionName.equals("expectNoWarning") && !functionName.equals("expectWarning")
+            && !functionName.equals("expectError") && !functionName.equals("expectNoError")
+            && !functionName.equals("Promise")) {
+          changed.add(functionName);
+        }
+      }
+      Node grandChild = child.getFirstChild();
+      if (grandChild != null) {
+        findCalledFunctions(grandChild, changed);
+      }
+    } else {
+      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+        findCalledFunctions(c, changed);
       }
     }
 