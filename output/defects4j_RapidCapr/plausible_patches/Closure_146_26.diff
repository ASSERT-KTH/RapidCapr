diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java
index aa8c7bc9..483513f7 100644
--- a/src/com/google/javascript/rhino/jstype/JSType.java
+++ b/src/com/google/javascript/rhino/jstype/JSType.java
@@ -703,7 +703,27 @@ public abstract class JSType implements Serializable {
     // other types
     switch (this.testForEquality(that)) {
       case TRUE:
-        return new TypePair(null, null);
+// unions types
+if (that instanceof UnionType) {
+    JSType thisRestricted = this.restrictByNotNullOrUndefined();
+    JSType thatRestricted = that.restrictByNotNullOrUndefined();
+    if (thisRestricted == null || thatRestricted == null || thisRestricted.isEquivalentTo(thatRestricted)) {
+        TypePair p = that.getTypesUnderInequality(this);
+        return new TypePair(p.typeB, p.typeA);
+    } else {
+        return new TypePair(thisRestricted, thatRestricted);
+    }
+}
+
+// other types
+JSType thisRestricted = this.restrictByNotNullOrUndefined();
+JSType thatRestricted = that.restrictByNotNullOrUndefined();
+if (thisRestricted == null || thatRestricted == null || thisRestricted.isEquivalentTo(thatRestricted)) {
+    TypePair pair = new TypePair(thisRestricted, thatRestricted);
+    return new TypePair(pair.typeA, pair.typeB);
+} else {
+    return new TypePair(thisRestricted, thatRestricted);
+}
 
       case FALSE:
       case UNKNOWN: