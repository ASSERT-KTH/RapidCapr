diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
index e19e97aef..04bf444b6 100644
--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -140,13 +140,20 @@ public class FDistributionImpl
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
-    protected double getInitialDomain(double p) {
-        double ret;
-        double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+protected double getInitialDomain(double p) {
+    double ret = 0.0;
+    double d = getDenominatorDegreesOfFreedom();
+    if (d > 2.0) {
+        ret = d / (d - 2.0);
+        // Check if result is infinite or NaN
+        if (!Double.isFinite(ret)) {
+            // If result is infinite or NaN, set initial domain to maximum representable value
+            ret = Double.MAX_VALUE;
+        }
     }
+    // If degrees of freedom is less than or equal to 2, set initial domain to the midpoint
+    return ret;
+}
     
     /**
      * Modify the numerator degrees of freedom.