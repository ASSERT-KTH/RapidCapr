diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java
index dbf00069..b3aaa7dc 100644
--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -114,7 +114,30 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+if (!NodeUtil.isFunctionExpression(n)) {
+    return false;
+}
+Node parent = n.getParent();
+if (parent == null) {
+    return false;
+}
+int parentType = parent.getType();
+if (parentType == Token.CALL || parentType == Token.NEW ||
+    NodeUtil.isExpressionNode(parent)) {
+    return false;
+} else if (parentType == Token.EXPR_RESULT || parentType == Token.IF ||
+    parentType == Token.ASSIGN || parentType == Token.VAR || parentType == Token.RETURN) {
+    return true;
+} else if (parentType == Token.BLOCK && parent.getParent() != null &&
+    parent.getParent().getType() == Token.FUNCTION) {
+    Node grandParent = parent.getParent();
+    int grandParentType = grandParent.getType();
+    if (grandParentType == Token.OBJECTLIT || grandParentType == Token.BLOCK) {
+        return false;
+    }
+    return true;
+}
+return false;
   }
 
   /**