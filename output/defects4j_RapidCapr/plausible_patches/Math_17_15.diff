diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index 0f78330a5..bdee486e1 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -1599,9 +1599,21 @@ public class Dfp implements FieldElement<Dfp> {
      * @param x multiplicand
      * @return product of this and x
      */
-    public Dfp multiply(final int x) {
-            return multiplyFast(x);
+public Dfp multiply(final int x) {
+    if (isNaN() || Double.isNaN(x)) {
+        return newInstance(this);
     }
+    Dfp result;
+    try {
+        result = multiply(new Dfp(getField(), x));
+    } catch (ArithmeticException e) {
+        result = null;
+    }
+    if (result == null || result.isNaN()) {
+        result = multiplyFast(x);
+    }
+    return result;
+}
 
     /** Multiply this by a single digit 0&lt;=x&lt;radix.
      * There are speed advantages in this special case.