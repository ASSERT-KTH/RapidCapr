diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java
index dbf00069..9257aa94 100644
--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -114,7 +114,29 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+if (!NodeUtil.isFunctionExpression(n)) {
+  return false;
+}
+
+Node parent = n.getParent();
+if (parent == null) {
+  return false;
+}
+
+int parentType = parent.getType();
+if (parentType == Token.CALL || parentType == Token.NEW || parentType == Token.OBJECTLIT) {
+  return false;
+} else if (parentType == Token.EXPR_RESULT || parentType == Token.ASSIGN || parentType == Token.VAR ||
+           parentType == Token.RETURN || parentType == Token.TYPEOF || parentType == Token.INSTANCEOF) {
+  return true;
+} else if (parentType == Token.BLOCK && parent.getParent() != null &&
+           parent.getParent().getType() == Token.FUNCTION) {
+  Node grandParent = parent.getParent();
+  int grandParentType = grandParent.getType();
+  return grandParentType != Token.OBJECTLIT && grandParentType != Token.BLOCK;
+} else {
+  return false;
+}
   }
 
   /**