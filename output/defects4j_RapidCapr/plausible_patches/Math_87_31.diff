diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
index 0ab790cd6..ccfb9feae 100644
--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
@@ -269,19 +269,25 @@ class SimplexTableau implements Serializable {
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
-    private Integer getBasicRow(final int col) {
-        Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
-                return null;
-                }
+private Integer getBasicRow(final int col) {
+    Integer basicRow = null;
+    int basicCount = 0; // count of basic variables in the column
+    double entry;
+    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
+        entry = getEntry(i, col);
+        if (MathUtils.equals(entry, 1.0, epsilon)) {
+            basicCount++;
+            if (basicCount > 1) {
+                return null; // more than one basic variable in the column
+            } else {
+                basicRow = i;
             }
+        } else if (!MathUtils.equals(entry, 0.0, epsilon)) {
+            return null; // non-basic variable found in the column
         }
-        return row;
     }
+    return basicCount == 1 ? basicRow : null;
+}
 
     /**
      * Removes the phase 1 objective function and artificial variables from this tableau.