diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
index 8df302f9..2a300574 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
@@ -141,12 +141,27 @@ public class FastDateParser implements DateParser, Serializable {
             currentFormatField= nextFormatField;
             currentStrategy= nextStrategy;
         }
-        if(currentStrategy.addRegex(this, regex)) {
-            collector.add(currentStrategy);
+        // Add current strategy if it's not null
+        if(currentStrategy != null) {
+            if(currentStrategy.addRegex(this, regex)) {
+                collector.add(currentStrategy);
+            }
+        }
+        // Set parsePattern and strategies based on the collector size
+        if(!collector.isEmpty()) {
+            strategies= collector.toArray(new Strategy[collector.size()]);
+            parsePattern= Pattern.compile(regex.toString());
+        } else {
+            strategies= new Strategy[0];
+            parsePattern= null;
+        }
+        // Set currentFormatField to null if there are no more matches
+        if(patternMatcher.regionStart() == patternMatcher.regionEnd()) {
+            currentFormatField= null;
+        } else {
+            // There is a remaining format field that does not match any strategy
+            throw new IllegalArgumentException("Invalid pattern");
         }
-        currentFormatField= null;
-        strategies= collector.toArray(new Strategy[collector.size()]);
-        parsePattern= Pattern.compile(regex.toString());
     }
 
     // Accessors