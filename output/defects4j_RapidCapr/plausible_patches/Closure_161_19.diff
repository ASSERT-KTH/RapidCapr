diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0b2636f4..de83b3df 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -1280,6 +1280,20 @@ class PeepholeFoldConstants extends AbstractPeepholeOptimization {
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
+if (left.getType() == Token.ARRAYLIT) {
+  if (left.getFirstChild() == null) { // empty array literal
+    if (parent != null && NodeUtil.isAssignmentOp(parent)) {
+      // Empty array literal acting as an assignment target, leave as is
+      return n;
+    } else {
+      // Replace GETELEM with 'undefined'
+      Node undefinedNode = NodeUtil.newUndefinedNode(n);
+      parent.replaceChild(n, undefinedNode);
+      reportCodeChange();
+      return undefinedNode;
+    }
+  }
+}
 
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into