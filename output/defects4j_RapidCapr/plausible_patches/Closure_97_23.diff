diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index d6c194a3..1f48d462 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -695,7 +695,16 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
           // JavaScript handles zero shifts on signed numbers differently than
           // Java as an Java int can not represent the unsigned 32-bit number
           // where JavaScript can so use a long here.
-          result = lvalInt >>> rvalInt;
+if (n.getType() == Token.URSH) {
+    // Perform the unsigned shift operation
+    long lvalLong = lvalInt & 0xffffffffL;
+    result = lvalLong >>> (rvalInt & 0x1f);
+} else {
+    result = lvalInt >> rvalInt;
+    if (n.getType() == Token.LSH) {
+        result = lvalInt << (rvalInt & 0x1f);
+    }
+}
           break;
         default:
           throw new AssertionError("Unknown shift operator: " +