diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
index 152e9424e..628a7c86c 100644
--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
@@ -76,7 +76,22 @@ public abstract class GenericMetadataSupport {
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+} else if (actualTypeArgument instanceof TypeVariable && contextualActualTypeParameters.containsKey(actualTypeArgument)) {
+            Type resolvedType = this.contextualActualTypeParameters.get(actualTypeArgument);
+            if (resolvedType == null) {
+                // No resolved type was found for this type variable in the current context, use the original type variable
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            } else {
+                if (resolvedType.equals(typeParameter)) {
+                    // Resolved type refers to this type parameter, use the original type variable
+                    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+                } else {
+                    // Use the resolved type for this type parameter
+                    contextualActualTypeParameters.put(typeParameter, resolvedType);
+                }
+            }
+        } else {
+            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");