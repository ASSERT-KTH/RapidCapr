diff --git a/src/com/google/javascript/jscomp/ExploitAssigns.java b/src/com/google/javascript/jscomp/ExploitAssigns.java
index 0f03e355..49ad7cdc 100644
--- a/src/com/google/javascript/jscomp/ExploitAssigns.java
+++ b/src/com/google/javascript/jscomp/ExploitAssigns.java
@@ -204,18 +204,22 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
-    // No checks are needed for simple names.
     if (node.isName()) {
       return true;
+    } else if (node.isGetProp()) {
+      Node child = node.getFirstChild();
+      if (child.isName()
+          && isNameAssignedTo(child.getString(), replacement)) {
+        return false;
+      }
+      while (child.isGetProp()) {
+        child = child.getFirstChild();
+        if (child.isName()
+            && isNameAssignedTo(child.getString(), replacement)) {
+          return false;
+        }
+      }
     }
-    Preconditions.checkArgument(node.isGetProp());
-
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
-      return false;
-    }
-
     return true;
   }
 
@@ -241,4 +245,4 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
 
     return false;
   }
-}
\ No newline at end of file
+}