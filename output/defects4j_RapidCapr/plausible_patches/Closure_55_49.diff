diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java
index dbf00069..b975dba7 100644
--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -114,7 +114,33 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+if (NodeUtil.isFunctionExpression(n)) {
+  Node parent = n.getParent();
+  if (parent == null) {
+    return false;
+  }
+  int parentType = parent.getType();
+  if (parentType == Token.CALL || parentType == Token.NEW || parentType == Token.OBJECTLIT) {
+    return false;
+  } else if (parentType == Token.EXPR_RESULT || parentType == Token.ASSIGN ||
+             parentType == Token.VAR || parentType == Token.RETURN) {
+    return true;
+  } else if (parentType == Token.BLOCK && parent.getParent() != null &&
+             parent.getParent().getType() == Token.FUNCTION) {
+    return true;
+  } else {
+    Node grandParent = parent.getParent();
+    if (grandParent == null) {
+      return false;
+    }
+    int grandParentType = grandParent.getType();
+    if (parentType == Token.RETURN && grandParentType == Token.BLOCK &&
+        grandParent.getParent() != null && grandParent.getParent().getType() == Token.FUNCTION) {
+      return true;
+    }
+  }
+}
+return false;
   }
 
   /**