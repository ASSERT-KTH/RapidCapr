diff --git a/src/org/mockito/internal/util/reflection/GenericMaster.java b/src/org/mockito/internal/util/reflection/GenericMaster.java
index 64bf1540f..7af717bbf 100644
--- a/src/org/mockito/internal/util/reflection/GenericMaster.java
+++ b/src/org/mockito/internal/util/reflection/GenericMaster.java
@@ -13,14 +13,18 @@ public class GenericMaster {
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
-        }
-        
-        return Object.class;
-    }
+public Class<?> getGenericType(Field field) {
+    Type generic = field.getGenericType();
+    if (generic instanceof ParameterizedType) {
+        ParameterizedType parameterizedType = (ParameterizedType) generic;
+        Type actualType = parameterizedType.getActualTypeArguments()[0];
+        while (actualType instanceof ParameterizedType) {
+            actualType = ((ParameterizedType) actualType).getRawType();
+        }
+        if (actualType instanceof Class<?>) {
+            return (Class<?>) actualType;
+        }
+    }
+    return Object.class;
+}
 }