diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
index 558a5864..5daf0d6e 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
@@ -2537,17 +2537,26 @@ public class DateTimeFormatterBuilder {
             return MAX_LENGTH;
         }
 
-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
-            String str = text.substring(position);
-            for (String id : ALL_IDS) {
-                if (str.startsWith(id)) {
+public int parseInto(DateTimeParserBucket bucket, String text, int position) {
+    String str = text.substring(position);
+    for (String id : ALL_IDS) {
+        if (str.startsWith(id) && (str.length() == id.length() || str.charAt(id.length()) == '/' || Character.isWhitespace(str.charAt(id.length())))) {
+            bucket.setZone(DateTimeZone.forID(id));
+            return position + id.length();
+        } else if (str.contains("/") && str.contains(id)) {
+            String[] split = str.split("/");
+            for (int i = 0; i < split.length; i++) {
+                if (split[i].equals(id)) {
                     bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+                    int slashIndex = str.indexOf("/");
+                    return position + slashIndex + 1 + (id.length() * i);
                 }
             }
-            return ~position;
         }
     }
+    return ~position;
+}
+    }
 
     //-----------------------------------------------------------------------
     static class Composite