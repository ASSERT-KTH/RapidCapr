diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
index 8a667dad3..c1d7f52d8 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
@@ -186,6 +186,28 @@ public abstract class BaseSecantSolver
                 case REGULA_FALSI:
                     // Detect early that algorithm is stuck, instead of waiting
                     // for the maximum number of iterations to be exceeded.
+// Detect early that algorithm is stuck, instead of waiting
+// for the maximum number of iterations to be exceeded.
+if (FastMath.abs(x - x1) < FastMath.ulp(x1)) {
+    throw new ConvergenceException();
+}
+
+if (FastMath.abs(fx) <= ftol) {
+    switch (allowed) {
+        case ANY_SIDE:
+            return x;
+        case LEFT_SIDE:
+            return inverted ? x : x0;
+        case RIGHT_SIDE:
+            return inverted ? x0 : x;
+        case BELOW_SIDE:
+            return (fx <= 0) ? x : x0;
+        case ABOVE_SIDE:
+            return (fx >= 0) ? x : x0;
+        default:
+            throw new MathInternalError();
+    }
+}
                     break;
                 default:
                     // Should never happen.