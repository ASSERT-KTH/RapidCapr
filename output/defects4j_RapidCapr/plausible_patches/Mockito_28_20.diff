diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
index 213ebf351..6672fd145 100644
--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
@@ -88,9 +88,24 @@ public class DefaultInjectionEngine {
         }
     }
 
+
     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+            if(candidate != null) {
+                if(field.getType().isAssignableFrom(candidate.getClass())) {
+                    field.setAccessible(true);
+                    try {
+                        field.set(fieldInstance, candidate);
+                        mocks.remove(candidate);
+                    } catch(IllegalAccessException e) {
+                        throw new RuntimeException("Unable to inject mock candidate", e);
+                    }
+                } else {
+                    throw new RuntimeException("Cannot assign mock candidate of type " + candidate.getClass().getSimpleName() +
+                                               " to field of type " + field.getType().getSimpleName());
+                }
+            }
         }
     }
 