diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java
index 814a07f4..ac4a5ffb 100644
--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -774,10 +774,21 @@ class InlineFunctions implements SpecializationAwareCompilerPass {
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
+    if (node != null && node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+      while (child != null) {
+        if (child.getType() == Token.NAME) {
+          String functionName = child.getString();
+          if (functionName != null && !functionName.startsWith("$") && !functionName.startsWith("goog.")) {
+            changed.add(functionName);
+          }
+        }
+        findCalledFunctions(child, changed);
+        child = child.getNext();
+      }
+    } else if (node != null) {
+      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+        findCalledFunctions(c, changed);
       }
     }
 