diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0b2636f4..9ea3944c 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -1280,6 +1280,22 @@ class PeepholeFoldConstants extends AbstractPeepholeOptimization {
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
+if (left.getType() != Token.ARRAYLIT) {
+  return n;
+}
+
+if (left.getFirstChild() == null) {
+  if (NodeUtil.isAssignmentOp(parent)) {
+    // Empty array literals cannot be folded if used as targets of an
+    // assignment because they lack the correct side-effects.
+    return n;
+  }
+  // Replace the entire GETELEM with 'undefined'
+  Node undefinedNode = NodeUtil.newUndefinedNode(n);
+  parent.replaceChild(n, undefinedNode);
+  reportCodeChange();
+  return undefinedNode;
+}
 
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into