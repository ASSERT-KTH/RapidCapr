diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
index 0afabc8a..28b1cc17 100644
--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
@@ -607,15 +607,24 @@ public abstract class ChainableReverseAbstractInterpreter
     }
 
     @Override
-    public JSType caseObjectType(ObjectType type) {
-      if (value.equals("function")) {
-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
+public JSType caseObjectType(ObjectType type) {
+  if ("function".equals(value)) {
+    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
+    if (ctorType != null && ctorType.isSubtype(type)) {
+      if (resultEqualsValue) {
+        return ctorType;
+      } else {
+        return type;
       }
-      return matchesExpectation("object") ? type : null;
+    } else {
+      return null;
     }
+  } else if ("object".equals(value) || value == null) {
+    return type;
+  } else {
+    return null;
+  }
+}
 
     @Override
     public JSType caseStringType() {