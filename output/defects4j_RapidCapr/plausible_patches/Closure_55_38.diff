diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java
index dbf00069..d6b44e68 100644
--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -114,7 +114,36 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+if (!NodeUtil.isFunctionExpression(n)) {
+  return false;
+}
+Node parent = n.getParent();
+if (parent == null) {
+  return false;
+}
+int parentType = parent.getType();
+Node grandParent = parent.getParent();
+if (grandParent == null) {
+  return false;
+}
+int grandParentType = grandParent.getType();
+if (parentType == Token.CALL || parentType == Token.NEW) {
+  return false;
+} else if (parentType == Token.EXPR_RESULT || parentType == Token.ASSIGN ||
+           parentType == Token.VAR || grandParentType == Token.FUNCTION ||
+           (grandParentType == Token.BLOCK && grandParent.getParent() != null &&
+           grandParent.getParent().getType() == Token.FUNCTION)) {
+  return true;
+} else if (parentType == Token.RETURN) {
+  Node greatGrandParent = grandParent.getParent();
+  if (greatGrandParent == null) {
+    return false;
+  }
+  int greatGrandParentType = greatGrandParent.getType();
+  return greatGrandParentType == Token.FUNCTION || (greatGrandParentType == Token.BLOCK &&
+         greatGrandParent.getParent() != null && greatGrandParent.getParent().getType() == Token.FUNCTION);
+}
+return false;
   }
 
   /**