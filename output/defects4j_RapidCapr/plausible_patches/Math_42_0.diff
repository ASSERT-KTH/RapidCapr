diff --git a/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
index 02c22b59f..c23b7efa6 100644
--- a/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
+++ b/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
@@ -407,12 +407,18 @@ class SimplexTableau implements Serializable {
             continue;
           }
           Integer basicRow = getBasicRow(colIndex);
-              // if the basic row is found to be the objective function row
-              // set the coefficient to 0 -> this case handles unconstrained 
-              // variables that are still part of the objective function
+          
+          // if the basic row is found to be the objective function row
+          // set the coefficient to 0 -> this case handles unconstrained 
+          // variables that are still part of the objective function
+          if (basicRow != null && basicRow < getNumObjectiveFunctions()) {
+            coefficients[i] = 0;
+            continue;
+          }
+          
+          // if multiple variables can take a given value
+          // then we choose the first and set the rest equal to 0
           if (basicRows.contains(basicRow)) {
-              // if multiple variables can take a given value
-              // then we choose the first and set the rest equal to 0
               coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);
           } else {
               basicRows.add(basicRow);
@@ -422,7 +428,7 @@ class SimplexTableau implements Serializable {
           }
       }
       return new RealPointValuePair(coefficients, f.getValue(coefficients));
-    }
+    } 
 
     /**
      * Subtracts a multiple of one row from another.