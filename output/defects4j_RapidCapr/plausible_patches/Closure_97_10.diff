diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index d6c194a3..78fe0d6d 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -695,7 +695,17 @@ public class PeepholeFoldConstants extends AbstractPeepholeOptimization {
           // JavaScript handles zero shifts on signed numbers differently than
           // Java as an Java int can not represent the unsigned 32-bit number
           // where JavaScript can so use a long here.
-          result = lvalInt >>> rvalInt;
+if (n.getType() == Token.URSH) {
+    if (lvalInt < 0) {
+        long unsignedShiftValue = ((long) lvalInt) & 0xffffffffL;
+        result = (double) (unsignedShiftValue >>> rvalInt);
+    } else {
+        result = lvalInt >>> rvalInt;
+    }
+} else {
+    result = lvalInt >> rvalInt;
+}
+
           break;
         default:
           throw new AssertionError("Unknown shift operator: " +