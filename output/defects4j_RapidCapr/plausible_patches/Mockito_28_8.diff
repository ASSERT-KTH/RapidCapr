diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
index 213ebf351..a3d5f9c60 100644
--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
@@ -88,11 +88,21 @@ public class DefaultInjectionEngine {
         }
     }
 
-    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
-        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
-        }
-    }
+
+    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
+        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+            Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+            if(candidate != null) {
+                field.setAccessible(true);
+                try {
+                    field.set(fieldInstance, candidate);
+                } catch(IllegalAccessException e) {
+                    throw new RuntimeException("Unable to inject mock candidate", e);
+                }
+                mocks.remove(candidate); // move the removal here
+            }
+        }
+    }
 
     private Field[] orderedInstanceFieldsFrom(Class<?> awaitingInjectionClazz) {
         Field[] declaredFields = awaitingInjectionClazz.getDeclaredFields();