diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java
index d993bee7..6f996d0d 100644
--- a/src/com/google/javascript/jscomp/PrepareAst.java
+++ b/src/com/google/javascript/jscomp/PrepareAst.java
@@ -163,6 +163,20 @@ class PrepareAst implements CompilerPass {
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
+// Traverse through any cast nodes and update first node accordingly
+while (first != null && first.isCast()) {
+  first = first.getFirstChild();
+}
+
+if (!NodeUtil.isGet(first)) {
+  n.putBooleanProp(Node.FREE_CALL, true);
+}
+
+// Keep track of the context in which eval is called. It is important
+// to distinguish between "(0, eval)()" and "eval()".
+if (first != null && first.isName() && "eval".equals(first.getString())) {
+  first.putBooleanProp(Node.DIRECT_EVAL, true);
+}
 
       if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);