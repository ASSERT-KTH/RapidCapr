diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java
index d993bee7..77420ad8 100644
--- a/src/com/google/javascript/jscomp/PrepareAst.java
+++ b/src/com/google/javascript/jscomp/PrepareAst.java
@@ -163,6 +163,26 @@ class PrepareAst implements CompilerPass {
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
+// Traverse through any cast nodes and update first node accordingly
+Node current = first;
+while (current != null && current.isCast()) {
+  current = current.getFirstChild();
+}
+first = current != null ? current : first;
+
+if (!first.isNull() && !NodeUtil.isGet(first)) {
+  n.putBooleanProp(Node.FREE_CALL, true);
+}
+
+// Keep track of the context in which eval is called
+if (first.isName() && "eval".equals(first.getString())) {
+  // Check if the parent node is a free call
+  if (first.getParent() != null && first.getParent().getBooleanProp(Node.FREE_CALL)) {
+    first.getParent().putBooleanProp(Node.DIRECT_EVAL, true);
+  } else {
+    first.putBooleanProp(Node.DIRECT_EVAL, true);
+  }
+}
 
       if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);