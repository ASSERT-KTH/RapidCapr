diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java
index 47556652..ec5f0825 100644
--- a/src/com/google/javascript/jscomp/CodeConsumer.java
+++ b/src/com/google/javascript/jscomp/CodeConsumer.java
@@ -178,28 +178,38 @@ abstract class CodeConsumer {
   void endCaseBody() {
   }
 
-  void add(String newcode) {
+void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
-      return;
+        return;
     }
 
-    char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
-      append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
+    char first = newcode.charAt(0);
+    char last = getLastChar();
+
+    // avoid consecutive slashes or asterisks when one of them comes after a slash
+    if ((last == '/' || last == '*') && (first == '/' || first == '*')) {
+        append(" ");
+    }
+    // avoid having a closing multi-line comment "*/" come right after opening "/*"
+    else if (last == '*' && first == '/') {
+        if (newcode.length() > 1 && newcode.charAt(1) == '/') {
+            append(" ");
+        }
+    }
+    // avoid having a forward slash to appear after a DIV
+    else if (last == '/' && first == '/') {
+        append(" ");
+    }
+    else if ((isWordChar(first) || first == '\\') && isWordChar(last)) {
+        // need space to separate. This is not pretty printing.
+        // For example: "return foo;"
+        append(" ");
     }
 
     append(newcode);
-  }
+}
 
   void appendOp(String op, boolean binOp) {
     append(op);