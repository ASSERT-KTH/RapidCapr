diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java
index c5a66c501..be3bef177 100644
--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java
+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java
@@ -72,31 +72,29 @@ public class VerificationOverTimeImpl implements VerificationMode {
      *
      * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout
      */
-    public void verify(VerificationData data) {
-        AssertionError error = null;
-
-        timer.start();
-        while (timer.isCounting()) {
-            try {
-                delegate.verify(data);
-
-                if (returnOnSuccess) {
-                    return;
-                } else {
-                    error = null;
-                }
-            } catch (MockitoAssertionError e) {
-                error = handleVerifyException(e);
+public void verify(VerificationData data) {
+    AssertionError error = null;
+    timer.start();
+    while (timer.isCounting()) {
+        try {
+            delegate.verify(data);
+            if (returnOnSuccess) {
+                return;
+            } else {
+                error = null;
             }
-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {
-                error = handleVerifyException(e);
+        } catch (Throwable t) {
+            if (t.getMessage() != null && t.getMessage().contains("JUnit")) {
+                throw new AssertionError(String.format("'%s' has some dependency to JUnit", delegate.getClass().getName()), t);
+            } else {
+                error = handleVerifyException(new MockitoAssertionError("Verification exception: " + t.getMessage()));
             }
         }
-
-        if (error != null) {
-            throw error;
-        }
     }
+    if (error != null) {
+        throw error;
+    }
+}
 
     private AssertionError handleVerifyException(AssertionError e) {
         if (canRecoverFromFailure(delegate)) {