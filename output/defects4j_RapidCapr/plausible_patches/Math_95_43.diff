diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
index e19e97aef..e40cc35e9 100644
--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -140,13 +140,28 @@ public class FDistributionImpl
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
-    protected double getInitialDomain(double p) {
-        double ret;
-        double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+protected double getInitialDomain(double p) {
+
+    double d = getDenominatorDegreesOfFreedom();
+
+    if(Double.isNaN(d) || d <= 2.0){
+        return 0.0;
     }
+    // check if degrees of freedom is larger than maximum double value
+    else if(d == Double.POSITIVE_INFINITY) {
+        return Double.MAX_VALUE;
+    }
+    else{
+        // calculate mean
+        double ret = d / (d - 2.0);
+        // check if result is finite
+        if(!Double.isFinite(ret)){
+            // if result is infinite or NaN, set initial domain to half the maximum double value
+            ret = Double.MAX_VALUE/2;
+        }
+        return ret;
+    }   
+}
     
     /**
      * Modify the numerator degrees of freedom.