diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
index 213ebf351..0d995c7ba 100644
--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
@@ -88,9 +88,22 @@ public class DefaultInjectionEngine {
         }
     }
 
+
     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+if(candidate != null) {
+    if (!field.getType().isAssignableFrom(candidate.getClass())) {
+        throw new RuntimeException("Mock candidate " + candidate.getClass().getSimpleName() + " is not compatible with field type " + field.getType().getSimpleName());
+    }
+    field.setAccessible(true);
+    try {
+        field.set(fieldInstance, field.getType().cast(candidate));
+    } catch(IllegalAccessException e) {
+        throw new RuntimeException("Unable to inject mock candidate", e);
+    }
+    mocks.remove(candidate); // remove the used mock from the set of available mocks
+}
         }
     }
 