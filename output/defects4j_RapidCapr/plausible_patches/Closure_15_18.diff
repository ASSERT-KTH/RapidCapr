diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
index a8e92fcc..5716f873 100644
--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -88,23 +88,28 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
           return false;
         }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
-        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
+        // We care about calls to non-pure functions that may affect dependent variables.
+        if (NodeUtil.isCallOrNew(n) && NodeUtil.mayEffectMutableState(n)) {
           return true;
         }
 
-        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
+        // We care about the delete operations
+        if (n.isDelProp()) {
           return true;
         }
 
+        // Handle dynamic property access
+        if (n.isGetElem() && !n.getLastChild().isString()) {
+          return true;
+        }
 
+        // Recurse on child nodes
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
           }
         }
+
         return false;
       }
   };