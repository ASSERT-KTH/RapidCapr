diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java
index dbf00069..dcf873c1 100644
--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -114,7 +114,36 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+if (!NodeUtil.isFunctionExpression(n)) {
+  return false;
+}
+Node parent = n.getParent();
+if (parent == null) {
+  return false;
+}
+int parentType = parent.getType();
+if (parentType == Token.CALL || parentType == Token.NEW || parentType == Token.OBJECTLIT) {
+  return false;
+} else if (NodeUtil.isStatementBlock(parent)) {
+  Node functionParent = parent.getParent();
+  if (functionParent == null || functionParent.getType() != Token.FUNCTION) {
+    return false;
+  }
+  return true;
+} else if (parentType == Token.EXPR_RESULT || parentType == Token.ASSIGN || parentType == Token.VAR ||
+           parentType == Token.RETURN || parentType == Token.IF || parentType == Token.WHILE ||
+           parentType == Token.DO || parentType == Token.FOR) {
+  return true;
+}
+Node grandParent = parent.getParent();
+if (grandParent != null) {
+  int grandParentType = grandParent.getType();
+  if (grandParentType == Token.FUNCTION || (grandParentType == Token.BLOCK && grandParent.getParent() != null &&
+        grandParent.getParent().getType() == Token.FUNCTION)) {
+    return true;
+  }
+}
+return false;
   }
 
   /**