diff --git a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
index 0afabc8a..639e823e 100644
--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
@@ -607,15 +607,16 @@ public abstract class ChainableReverseAbstractInterpreter
     }
 
     @Override
-    public JSType caseObjectType(ObjectType type) {
-      if (value.equals("function")) {
-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
-      }
-      return matchesExpectation("object") ? type : null;
+public JSType caseObjectType(ObjectType type) {
+  if ("function".equals(value)) {
+    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
+    if (ctorType.isSubtype(type)) {
+      return resultEqualsValue ? ctorType : type; // only return ctorType if resultEqualsValue is true
     }
+    return null; // return null if ctorType is not a subtype of type
+  }
+  return matchesExpectation("object") ? type : null;
+}
 
     @Override
     public JSType caseStringType() {