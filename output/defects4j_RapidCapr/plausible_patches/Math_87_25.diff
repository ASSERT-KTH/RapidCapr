diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
index 0ab790cd6..de7d13943 100644
--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
@@ -269,19 +269,22 @@ class SimplexTableau implements Serializable {
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
-    private Integer getBasicRow(final int col) {
-        Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
-                return null;
-                }
+private Integer getBasicRow(final int col) {
+    Integer row = null; 
+    boolean foundOne = false;
+    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
+        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon)) {
+            if (foundOne) {
+                return null; // if we have already found a basic variable in this column before, return null
             }
+            row = i;
+            foundOne = true;            
+        } else if (Math.abs(getEntry(i, col)) > epsilon) {
+            return null; // if we find a non-zero non-basic variable in this column, return null
         }
-        return row;
     }
+    return row;
+}
 
     /**
      * Removes the phase 1 objective function and artificial variables from this tableau.