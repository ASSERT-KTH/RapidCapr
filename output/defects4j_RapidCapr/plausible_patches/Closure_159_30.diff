diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java
index 814a07f4..ad262f55 100644
--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -774,11 +774,23 @@ class InlineFunctions implements SpecializationAwareCompilerPass {
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
+    if (node == null) {
+      return;
+    }
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+      if (child != null && child.getType() == Token.NAME && !child.getString().startsWith("$") &&
+          !child.getString().startsWith("goog.")) {
         changed.add(child.getString());
       }
+      Node grandChild = child.getFirstChild();
+      if (grandChild != null) {
+        findCalledFunctions(grandChild, changed);
+      }
+    } else {
+      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+        findCalledFunctions(c, changed);
+      }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {