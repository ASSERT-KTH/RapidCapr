diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java
index 7b877b1e2..d1378abe2 100644
--- a/src/org/mockito/internal/invocation/InvocationMatcher.java
+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java
@@ -120,7 +120,23 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF
     public void captureArgumentsFrom(Invocation invocation) {
         if (invocation.getMethod().isVarArgs()) {
             int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+Object[] args = invocation.getRawArguments();
+int argsLength = args == null ? 0 : args.length; // added null check
+for(int i = 0; i < argsLength; i++) {
+    Object arg = args[i];
+    for (int position = 0; position < matchers.size(); position++) {
+        Matcher m = matchers.get(position);
+        if (m instanceof CapturesArguments) {
+            if (position == i && !(m instanceof VarargMatcher)) {
+                ((CapturesArguments) m).captureFrom(arg);
+            } else if (position == i && m instanceof VarargMatcher && arg != null && arg.getClass().isArray()) {
+                for (int j = 0; j < Array.getLength(arg); j++) {
+                    ((CapturesArguments) m).captureFrom(Array.get(arg, j));
+                }
+            }
+        }
+    }
+}
 
         } else {
             for (int position = 0; position < matchers.size(); position++) {