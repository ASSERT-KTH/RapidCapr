diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java
index d993bee7..306150bc 100644
--- a/src/com/google/javascript/jscomp/PrepareAst.java
+++ b/src/com/google/javascript/jscomp/PrepareAst.java
@@ -163,6 +163,27 @@ class PrepareAst implements CompilerPass {
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
+// Traverse through any cast nodes and update first node accordingly
+while (first.isCast()) {
+  first = first.getFirstChild();
+}
+
+if (NodeUtil.isGet(first)) {
+  // If the first child is a getter, traverse into it to check if it is an eval call
+  Node getterFirstChild = first.getFirstChild();
+  while (getterFirstChild.isCast()) {
+    getterFirstChild = getterFirstChild.getFirstChild();
+  }
+  if (getterFirstChild.isName() && "eval".equals(getterFirstChild.getString())) {
+    getterFirstChild.putBooleanProp(Node.DIRECT_EVAL, true);
+  }
+} else {
+  // Otherwise, mark the call as a free call and check if the first child is an eval call
+  n.putBooleanProp(Node.FREE_CALL, true);
+  if (first.isName() && "eval".equals(first.getString())) {
+    first.putBooleanProp(Node.DIRECT_EVAL, true);
+  }
+}
 
       if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);