diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java
index dbf00069..b2ce6870 100644
--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -114,7 +114,35 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+// Return false if n is not a function expression.
+if (!NodeUtil.isFunctionExpression(n)) {
+  return false;
+}
+
+// Get the parent node.
+Node parent = n.getParent();
+if (parent == null) {
+  return false;
+}
+
+// Determine the parent type and check if it's a valid context for a reduceable function expression.
+int parentType = parent.getType();
+switch (parentType) {
+  case Token.CALL:
+  case Token.NEW:
+  case Token.OBJECTLIT:
+    return false;
+  case Token.EXPR_RESULT:
+  case Token.ASSIGN:
+  case Token.VAR:
+  case Token.RETURN:
+    return true;
+  case Token.BLOCK:
+    Node grandParent = parent.getParent();
+    return grandParent != null && grandParent.getType() == Token.FUNCTION;
+  default:
+    return false;
+}
   }
 
   /**