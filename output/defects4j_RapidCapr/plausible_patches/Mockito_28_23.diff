diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
index 213ebf351..1a9fb71dc 100644
--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
@@ -88,9 +88,23 @@ public class DefaultInjectionEngine {
         }
     }
 
+
     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+Object candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+if(candidate != null) {
+    if(field.getType().isAssignableFrom(candidate.getClass())) {
+        try {
+            field.setAccessible(true);
+            field.set(fieldInstance, candidate);
+            mocks.remove(candidate);
+        } catch(IllegalAccessException e) {
+            throw new RuntimeException("Unable to inject mock candidate", e);
+        }
+    } else {
+        throw new RuntimeException("Mock candidate of type " + candidate.getClass().getSimpleName() + " is not compatible with field type " + field.getType().getSimpleName());
+    }
+}
         }
     }
 