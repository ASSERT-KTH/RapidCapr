diff --git a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
index 02810e142..18abc7b8e 100644
--- a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
@@ -105,10 +105,22 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
-    public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+public double cumulativeProbability(double x) throws MathException {
+    if (Double.isNaN(x)) {
+        throw new MathException("Input is NaN");
     }
+    if (Double.isInfinite(x)) {
+        return x < 0 ? 0.0 : 1.0;
+    }
+    double z = (x - mean) / Math.sqrt(2) / standardDeviation;
+    double ret;
+    if (Math.abs(z) > 6.0) {
+        ret = z < 0.0 ? 0.0 : 1.0;
+    } else {
+        ret = 0.5 * (1.0 + Erf.erf(z));
+    }
+    return ret;
+}
     
     /**
      * For this distribution, X, this method returns the critical point x, such