diff --git a/src/org/mockito/internal/util/reflection/GenericMaster.java b/src/org/mockito/internal/util/reflection/GenericMaster.java
index 64bf1540f..167f713e4 100644
--- a/src/org/mockito/internal/util/reflection/GenericMaster.java
+++ b/src/org/mockito/internal/util/reflection/GenericMaster.java
@@ -13,14 +13,18 @@ public class GenericMaster {
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
-        }
-        
-        return Object.class;
-    }
+    public Class getGenericType(Field field) {        
+        Type generic = field.getGenericType();
+        if (generic != null && generic instanceof ParameterizedType) {
+            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actual instanceof Class) {
+                return (Class) actual;
+            } else if (actual instanceof ParameterizedType) {
+                return (Class) ((ParameterizedType) actual).getRawType();
+            }
+            //in case of any other type of Type, just return Object.class
+        }
+        
+        return Object.class;
+    }
 }