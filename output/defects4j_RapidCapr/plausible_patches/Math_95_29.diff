diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
index e19e97aef..8e13f64ac 100644
--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -140,13 +140,18 @@ public class FDistributionImpl
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
-    protected double getInitialDomain(double p) {
-        double ret;
-        double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+protected double getInitialDomain(double p) {
+    double ret;
+    double d = getDenominatorDegreesOfFreedom();
+    if (Double.isNaN(d) || d <= 2.0) {
+        // if degrees of freedom is less than or equal to 2 or is NaN, use a small value for the initial domain to avoid division by zero
+        ret = Double.MIN_VALUE;
+    } else {
+        // use mean
+        ret = d / (d - 2.0);
     }
+    return ret;
+}
     
     /**
      * Modify the numerator degrees of freedom.