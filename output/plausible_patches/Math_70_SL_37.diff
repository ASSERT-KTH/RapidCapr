diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
index 3f669271a..dd038ab01 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
@@ -69,7 +69,23 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+if (f == null || Double.isNaN(min) || Double.isNaN(max) || f.value(min) * f.value(max) > 0 || min >= max) {
+    return Double.NaN;
+}
+double fInitial = f.value(initial);
+if(Double.isNaN(fInitial) || Double.isInfinite(fInitial)){
+    fInitial = (f.value(max)+f.value(min))/2.0; // Choose midpoint as initial value
+}
+if (fInitial == 0) {
+    return initial;
+}
+if (f.value(min) * fInitial < 0) {
+    return solve(f, min, initial);
+}
+if (f.value(max) * fInitial < 0) {
+    return solve(f, initial, max);
+}
+return Double.NaN;
     }
 
     /** {@inheritDoc} */