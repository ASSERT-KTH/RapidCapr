diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index cf87eaaf..1113d655 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1985,15 +1985,7 @@ final class TypedScopeCreator implements ScopeCreator {
     }
 
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
-      if (t.inGlobalScope()) {
-        return;
-      }
-
-      if (n.isReturn() && n.getFirstChild() != null) {
-        data.get(t.getScopeRoot()).recordNonEmptyReturn();
-      }
-
-      if (t.getScopeDepth() <= 2) {
+      if (t.getScopeDepth() <= 1) {
         // The first-order function analyzer looks at two types of variables:
         //
         // 1) Local variables that are assigned in inner scopes ("escaped vars")
@@ -2004,6 +1996,14 @@ final class TypedScopeCreator implements ScopeCreator {
         // no reason to do this extra computation for them.
         return;
       }
+      
+      if (t.inGlobalScope()) {
+        return;
+      }
+
+      if (n.isReturn() && n.getFirstChild() != null) {
+        data.get(t.getScopeRoot()).recordNonEmptyReturn();
+      }
 
       if (n.isName() && NodeUtil.isLValue(n) &&
           // Be careful of bleeding functions, which create variables