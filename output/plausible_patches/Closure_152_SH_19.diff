diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java
index fc2578d8..fe65d0c8 100644
--- a/src/com/google/javascript/rhino/jstype/FunctionType.java
+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -868,7 +868,27 @@ public class FunctionType extends PrototypeObjectType {
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);
+if (resolvedTypeOfThis == null) {
+  // if typeOfThis does not resolve to any type, set it to UNKNOWN_TYPE
+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+} else if (resolvedTypeOfThis.isNamedType()) {
+  // typeOfThis resolved to a NamedType. Check if the referenced type is an ObjectType.
+  JSType referencedType = ((NamedType) resolvedTypeOfThis).getReferencedType();
+  if (referencedType instanceof ObjectType) {
+    // Set typeOfThis to the referenced ObjectType
+    typeOfThis = (ObjectType) referencedType;
+  } else {
+    // Set typeOfThis to UNKNOWN_TYPE
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+  }
+} else if (resolvedTypeOfThis instanceof ObjectType) {
+  // typeOfThis resolved to an ObjectType. Use it as is.
+  typeOfThis = (ObjectType) resolvedTypeOfThis;
+} else {
+  // typeOfThis resolved to some other non-object type. Set it to UNKNOWN_TYPE
+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+}
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =