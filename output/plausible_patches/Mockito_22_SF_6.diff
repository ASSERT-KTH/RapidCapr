diff --git a/src/org/mockito/internal/matchers/Equality.java b/src/org/mockito/internal/matchers/Equality.java
index 43e11fca9..ab279eaef 100644
--- a/src/org/mockito/internal/matchers/Equality.java
+++ b/src/org/mockito/internal/matchers/Equality.java
@@ -9,15 +9,39 @@ import java.lang.reflect.Array;
 //stolen from hamcrest because I didn't want to have more dependency than Matcher class 
 public class Equality {
 
-    public static boolean areEqual(Object o1, Object o2) {
-        if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
-            return o1.equals(o2);
-        }
-    }
+
+public static boolean areEqual(Object o1, Object o2) {
+    if (o1 == o2) {
+        return true;
+    }
+    if (o1 == null || o2 == null) {
+        return o1 == null && o2 == null;
+    }
+    if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        int length = Array.getLength(o1);
+        if (length != Array.getLength(o2)) {
+            return false;
+        }
+        for (int i = 0; i < length; i++) {
+            Object e1 = Array.get(o1, i);
+            Object e2 = Array.get(o2, i);
+            if (e1 == e2) {
+                continue;
+            }
+            if (e1 == null || e2 == null) {
+                return false;
+            }
+            if (!e1.getClass().isArray() && !e2.getClass().isArray() && !e1.equals(e2)) {
+                return false;
+            }
+            if (e1.getClass().isArray() && e2.getClass().isArray() && !areEqual(e1, e2)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    return o1.equals(o2);
+}
 
     static boolean areArraysEqual(Object o1, Object o2) {
         return areArrayLengthsEqual(o1, o2)
@@ -38,4 +62,4 @@ public class Equality {
     static boolean isArray(Object o) {
         return o.getClass().isArray();
     }
-}
\ No newline at end of file
+}