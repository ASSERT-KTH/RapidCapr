diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java
index 174eda6ac..0dd8343c4 100644
--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java
+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java
@@ -45,12 +45,19 @@ public class OpenMapRealMatrix extends AbstractRealMatrix
      * @param rowDimension Number of rows of the matrix.
      * @param columnDimension Number of columns of the matrix.
      */
-    public OpenMapRealMatrix(int rowDimension, int columnDimension) {
-        super(rowDimension, columnDimension);
-        this.rows = rowDimension;
-        this.columns = columnDimension;
-        this.entries = new OpenIntToDoubleHashMap(0.0);
+public OpenMapRealMatrix(int rowDimension, int columnDimension) {
+    super(rowDimension, columnDimension);
+    if (rowDimension <= 0 || columnDimension <= 0) {
+        throw new IllegalArgumentException("Matrix dimensions must be positive.");
     }
+    if (rowDimension > Integer.MAX_VALUE / columnDimension) {
+        throw new NumberIsTooLargeException(Long.valueOf((long) rowDimension * (long) columnDimension), Integer.valueOf(Integer.MAX_VALUE), false);
+    }
+    int expectedSize = (int) Math.min((long) rowDimension * (long) columnDimension, Integer.MAX_VALUE);
+    this.rows = rowDimension;
+    this.columns = columnDimension;
+    this.entries = new OpenIntToDoubleHashMap(expectedSize, 0.0);
+}
 
     /**
      * Build a matrix by copying another one.