diff --git a/source/org/jfree/data/time/TimePeriodValues.java b/source/org/jfree/data/time/TimePeriodValues.java
index 0a3e7a1..d8806f8 100644
--- a/source/org/jfree/data/time/TimePeriodValues.java
+++ b/source/org/jfree/data/time/TimePeriodValues.java
@@ -254,85 +254,71 @@ public class TimePeriodValues extends Series implements Serializable {
      * @param period  the time period.
      * @param index  the index of the time period.
      */
-    private void updateBounds(TimePeriod period, int index) {
-        
-        long start = period.getStart().getTime();
-        long end = period.getEnd().getTime();
-        long middle = start + ((end - start) / 2);
-
-        if (this.minStartIndex >= 0) {
-            long minStart = getDataItem(this.minStartIndex).getPeriod()
-                .getStart().getTime();
-            if (start < minStart) {
-                this.minStartIndex = index;           
-            }
-        }
-        else {
-            this.minStartIndex = index;
-        }
-        
-        if (this.maxStartIndex >= 0) {
-            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
-                .getStart().getTime();
-            if (start > maxStart) {
-                this.maxStartIndex = index;           
-            }
-        }
-        else {
-            this.maxStartIndex = index;
-        }
-        
-        if (this.minMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long minMiddle = s + (e - s) / 2;
-            if (middle < minMiddle) {
-                this.minMiddleIndex = index;           
-            }
-        }
-        else {
-            this.minMiddleIndex = index;
-        }
-        
-        if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long maxMiddle = s + (e - s) / 2;
-            if (middle > maxMiddle) {
-                this.maxMiddleIndex = index;           
-            }
-        }
-        else {
-            this.maxMiddleIndex = index;
-        }
-        
-        if (this.minEndIndex >= 0) {
-            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
-                .getTime();
-            if (end < minEnd) {
-                this.minEndIndex = index;           
-            }
-        }
-        else {
-            this.minEndIndex = index;
-        }
-       
-        if (this.maxEndIndex >= 0) {
-            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
-                .getTime();
-            if (end > maxEnd) {
-                this.maxEndIndex = index;           
-            }
-        }
-        else {
-            this.maxEndIndex = index;
-        }
-        
-    }
+private void updateBounds(TimePeriod period, int index) {
+    long start = period.getStart().getTime();
+    long end = period.getEnd().getTime();
+    long middle = start + ((end - start) / 2);
+
+    if (this.minStartIndex == -1) {
+        this.minStartIndex = index;
+    } else {
+        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+        if (start < minStart) {
+            this.minStartIndex = index;
+        }
+    }
+
+    if (this.maxStartIndex == -1) {
+        this.maxStartIndex = index;
+    } else {
+        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+        if (start > maxStart) {
+            this.maxStartIndex = index;
+        }
+    }
+
+    if (this.minMiddleIndex == -1) {
+        this.minMiddleIndex = index;
+    } else {
+        long minMiddle = getMiddleTime(this.minMiddleIndex);
+        if (middle < minMiddle) {
+            this.minMiddleIndex = index;
+        }
+    }
+
+    if (this.maxMiddleIndex == -1) {
+        this.maxMiddleIndex = index;
+    } else {
+        long maxMiddle = getMiddleTime(this.maxMiddleIndex);
+        if (middle > maxMiddle) {
+            this.maxMiddleIndex = index;
+        }
+    }
+
+    if (this.minEndIndex == -1) {
+        this.minEndIndex = index;
+    } else {
+        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+        if (end < minEnd) {
+            this.minEndIndex = index;
+        }
+    }
+
+    if (this.maxEndIndex == -1) {
+        this.maxEndIndex = index;
+    } else {
+        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+        if (end > maxEnd) {
+            this.maxEndIndex = index;
+        }
+    }
+}
+
+private long getMiddleTime(int index) {
+    long start = getDataItem(index).getPeriod().getStart().getTime();
+    long end = getDataItem(index).getPeriod().getEnd().getTime();
+    return start + ((end - start) / 2);
+}
     
     /**
      * Recalculates the bounds for the collection of items.