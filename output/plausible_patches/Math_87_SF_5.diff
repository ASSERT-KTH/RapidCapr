diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
index 0ab790cd6..da9c6eb77 100644
--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
@@ -269,19 +269,30 @@ class SimplexTableau implements Serializable {
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
-    private Integer getBasicRow(final int col) {
-        Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
+private Integer getBasicRow(final int col) {
+    Integer row = null;
+    boolean oneFound = false;
+    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
+        final double entry = getEntry(i, col);
+        if (Math.abs(entry - 1) <= epsilon) {
+            if (!oneFound) {
+                oneFound = true;
                 row = i;
-                } else {
+            } else {
+                // more than one non-zero coefficient
                 return null;
-                }
             }
+        } else if (Math.abs(entry) > epsilon) {
+            // non-zero coefficient is not 1
+            return null;
         }
-        return row;
     }
+    if (!oneFound) {
+        // no non-zero coefficient found
+        return null;
+    }
+    return row;
+}
 
     /**
      * Removes the phase 1 objective function and artificial variables from this tableau.