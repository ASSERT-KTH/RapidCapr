diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
index e47d98204..91bc09a81 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
@@ -184,10 +184,24 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
+if (f0 * fx < 0) {
+    x1 = x;
+    f1 = fx;
+} else if (f0 * f1 > 0) {
+    x0 = x;
+    f0 = fx;
+} else {
+    // Bisect the interval if the bracket is not tight enough.
+    if (FastMath.abs(f1) < FastMath.abs(f0)) {
+        x0 = x1;
+        f0 = f1;
+    }
+    x1 = x;
+    f1 = fx;
+    if (x1 == x0) {
+        break;
+    }
+}
                     break;
                 default:
                     // Should never happen.