diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java
index 7b877b1e2..541f2b996 100644
--- a/src/org/mockito/internal/invocation/InvocationMatcher.java
+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java
@@ -120,7 +120,23 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF
     public void captureArgumentsFrom(Invocation invocation) {
         if (invocation.getMethod().isVarArgs()) {
             int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+        Object[] rawArguments = invocation.getRawArguments();
+        for (int position = 0; position < matchers.size(); position++) {
+            Matcher m = matchers.get(position);
+            if (m instanceof CapturesArguments) {
+                Object arg = null; //New line
+                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
+                    Object array = rawArguments[position];
+                    for (int i = 0; i < Array.getLength(array); i++) {
+                        arg = Array.get(array, i); //modified line
+                        ((CapturesArguments) m).captureFrom(arg);
+                    }
+                } else {
+                    arg = invocation.getArgumentAt(position, Object.class); //modified line
+                    ((CapturesArguments) m).captureFrom(arg);
+                }
+            }
+        }
 
         } else {
             for (int position = 0; position < matchers.size(); position++) {