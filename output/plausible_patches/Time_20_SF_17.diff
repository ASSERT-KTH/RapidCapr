diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
index 558a5864..e726c475 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
@@ -2537,18 +2537,27 @@ public class DateTimeFormatterBuilder {
             return MAX_LENGTH;
         }
 
-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
-            String str = text.substring(position);
-            for (String id : ALL_IDS) {
-                if (str.startsWith(id)) {
-                    bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
-                }
+public int parseInto(DateTimeParserBucket bucket, String text, int position) {
+    int len = text.length();
+    if (position > len) {
+        return ~position;
+    }
+    String str = text.substring(position);
+
+    for (String id : ALL_IDS) {
+        int idLen = id.length();
+        if (str.startsWith(id) && (str.length() == idLen || str.charAt(idLen) == '/' || str.charAt(idLen) == ' ' || str.charAt(idLen) == '\t')) {
+            if (str.length() == idLen || (!Character.isLetterOrDigit(str.charAt(idLen))  && str.charAt(idLen) != '_')) {
+                bucket.setZone(DateTimeZone.forID(id));
+                return position + idLen;
             }
-            return ~position;
         }
     }
 
+    return ~position;
+}
+    }
+
     //-----------------------------------------------------------------------
     static class Composite
             implements DateTimePrinter, DateTimeParser {