diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
index a7990575..644e35d6 100644
--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
@@ -220,16 +220,24 @@ public class RandomStringUtils {
      * @throws IllegalArgumentException if {@code count} &lt; 0 or the provided chars array is empty.
      * @since 2.0
      */
-    public static String random(int count, int start, int end, boolean letters, boolean numbers,
+public static String random(int count, int start, int end, boolean letters, boolean numbers,
                                 char[] chars, Random random) {
-        if (count == 0) {
-            return "";
-        } else if (count < 0) {
+        if (count < 0) {
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
         if (chars != null && chars.length == 0) {
             throw new IllegalArgumentException("The chars array must not be empty");
         }
+        if (start == end && start != 0) {
+            throw new IllegalArgumentException("Invalid range specified. Parameter start (" + start + 
+                                                   ") must not equal parameter end (" + end + ")");
+        }
+
+        if (start > end) {
+            int temp = end;
+            end = start;
+            start = temp;
+        }
 
         if (start == 0 && end == 0) {
             if (chars != null) {
@@ -239,7 +247,7 @@ public class RandomStringUtils {
                     end = Integer.MAX_VALUE;
                 } else {
                     end = 'z' + 1;
-                    start = ' ';                
+                    start = ' ';
                 }
             }
         }
@@ -257,8 +265,8 @@ public class RandomStringUtils {
             if (letters && Character.isLetter(ch)
                     || numbers && Character.isDigit(ch)
                     || !letters && !numbers) {
-                if(ch >= 56320 && ch <= 57343) {
-                    if(count == 0) {
+                if (ch >= 56320 && ch <= 57343) {
+                    if (count == 0) {
                         count++;
                     } else {
                         // low surrogate, insert high surrogate after putting it in
@@ -266,8 +274,8 @@ public class RandomStringUtils {
                         count--;
                         buffer[count] = (char) (55296 + random.nextInt(128));
                     }
-                } else if(ch >= 55296 && ch <= 56191) {
-                    if(count == 0) {
+                } else if (ch >= 55296 && ch <= 56191) {
+                    if (count == 0) {
                         count++;
                     } else {
                         // high surrogate, insert low surrogate before putting it in
@@ -275,7 +283,7 @@ public class RandomStringUtils {
                         count--;
                         buffer[count] = ch;
                     }
-                } else if(ch >= 56192 && ch <= 56319) {
+                } else if (ch >= 56192 && ch <= 56319) {
                     // private high surrogate, no effing clue, so skip it
                     count++;
                 } else {
@@ -285,6 +293,7 @@ public class RandomStringUtils {
                 count++;
             }
         }
+
         return new String(buffer);
     }
 