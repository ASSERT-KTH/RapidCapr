diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
index e47d98204..78ebe0fc6 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
@@ -184,10 +184,41 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
+if (f0 * fx < 0) {
+    x1 = x;
+    f1 = fx;
+} else {
+    if (FastMath.abs(f1) < FastMath.abs(f0)) {
+        double temp = x0;
+        x0 = x1;
+        x1 = temp;
+        temp = f0;
+        f0 = f1;
+        f1 = temp;
+    }
+    if (x1 == x0) {
+        break;
+    }
+    double dx = FastMath.max(rtol * FastMath.abs(x1), atol);
+    double x2 = x1 - (f1 * (x1 - x0)) / (f1 - f0);
+    double f2 = computeObjectiveValue(x2);
+    if (FastMath.abs(x2 - x1) <= 0.5 * FastMath.abs(x1 - x0) || FastMath.abs(f2) < FastMath.abs(f1)) {
+        x0 = x1;
+        f0 = f1;
+        x1 = x2;
+        f1 = f2;
+    } else {
+        double dx0 = FastMath.abs(x0 - x2);
+        double dx1 = FastMath.abs(x1 - x2);
+        if (dx0 < dx1) {
+            x1 = x2;
+            f1 = f2;
+        } else {
+            x0 = x2;
+            f0 = f2;
+        }
+    }
+}
                     break;
                 default:
                     // Should never happen.