diff --git a/source/org/jfree/chart/plot/XYPlot.java b/source/org/jfree/chart/plot/XYPlot.java
index ec26162..0586d0b 100644
--- a/source/org/jfree/chart/plot/XYPlot.java
+++ b/source/org/jfree/chart/plot/XYPlot.java
@@ -4422,101 +4422,111 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
      *
      * @return The range.
      */
-    public Range getDataRange(ValueAxis axis) {
-
-        Range result = null;
-        List mappedDatasets = new ArrayList();
-        List includedAnnotations = new ArrayList();
-        boolean isDomainAxis = true;
-
-        // is it a domain axis?
-        int domainIndex = getDomainAxisIndex(axis);
-        if (domainIndex >= 0) {
-            isDomainAxis = true;
-            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
-                    new Integer(domainIndex)));
-            if (domainIndex == 0) {
-                // grab the plot's annotations
-                Iterator iterator = this.annotations.iterator();
-                while (iterator.hasNext()) {
-                    XYAnnotation annotation = (XYAnnotation) iterator.next();
-                    if (annotation instanceof XYAnnotationBoundsInfo) {
-                        includedAnnotations.add(annotation);
-                    }
-                }
-            }
-        }
-
-        // or is it a range axis?
-        int rangeIndex = getRangeAxisIndex(axis);
-        if (rangeIndex >= 0) {
-            isDomainAxis = false;
-            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(
-                    new Integer(rangeIndex)));
-            if (rangeIndex == 0) {
-                Iterator iterator = this.annotations.iterator();
-                while (iterator.hasNext()) {
-                    XYAnnotation annotation = (XYAnnotation) iterator.next();
-                    if (annotation instanceof XYAnnotationBoundsInfo) {
-                        includedAnnotations.add(annotation);
-                    }
-                }
-            }
-        }
-
-        // iterate through the datasets that map to the axis and get the union
-        // of the ranges.
-        Iterator iterator = mappedDatasets.iterator();
-        while (iterator.hasNext()) {
-            XYDataset d = (XYDataset) iterator.next();
-            if (d != null) {
-                XYItemRenderer r = getRendererForDataset(d);
-                if (isDomainAxis) {
-                    if (r != null) {
-                        result = Range.combine(result, r.findDomainBounds(d));
-                    }
-                    else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findDomainBounds(d));
-                    }
-                }
-                else {
-                    if (r != null) {
-                        result = Range.combine(result, r.findRangeBounds(d));
-                    }
-                    else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findRangeBounds(d));
-                    }
-                }
-                
-                    Collection c = r.getAnnotations();
-                    Iterator i = c.iterator();
-                    while (i.hasNext()) {
-                        XYAnnotation a = (XYAnnotation) i.next();
-                        if (a instanceof XYAnnotationBoundsInfo) {
-                            includedAnnotations.add(a);
-                        }
-                    }
-            }
-        }
-
-        Iterator it = includedAnnotations.iterator();
-        while (it.hasNext()) {
-            XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();
-            if (xyabi.getIncludeInDataBounds()) {
-                if (isDomainAxis) {
-                    result = Range.combine(result, xyabi.getXRange());
-                }
-                else {
-                    result = Range.combine(result, xyabi.getYRange());
-                }
-            }
-        }
-
-        return result;
-
-    }
+public Range getDataRange(ValueAxis axis) {
+    Range result = null;
+    List mappedDatasets = new ArrayList();
+    List includedAnnotations = new ArrayList();
+    boolean isDomainAxis = true;
+
+    // is it a domain axis?
+    int domainIndex = getDomainAxisIndex(axis);
+    if (domainIndex >= 0) {
+        isDomainAxis = true;
+        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+        if (domainIndex == 0) {
+            // grab the plot's annotations
+            if (this.annotations != null) {
+                Iterator iterator = this.annotations.iterator();
+                while (iterator.hasNext()) {
+                    Object obj = iterator.next();
+                    if (obj instanceof XYAnnotation) {
+                        XYAnnotation annotation = (XYAnnotation) obj;
+                        if (annotation instanceof XYAnnotationBoundsInfo) {
+                            includedAnnotations.add(annotation);
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    // or is it a range axis?
+    int rangeIndex = getRangeAxisIndex(axis);
+    if (rangeIndex >= 0) {
+        isDomainAxis = false;
+        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
+        if (rangeIndex == 0) {
+            if (this.annotations != null) {
+                Iterator iterator = this.annotations.iterator();
+                while (iterator.hasNext()) {
+                    Object obj = iterator.next();
+                    if (obj instanceof XYAnnotation) {
+                        XYAnnotation annotation = (XYAnnotation) obj;
+                        if (annotation instanceof XYAnnotationBoundsInfo) {
+                            includedAnnotations.add(annotation);
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    // iterate through the datasets that map to the axis and get the union
+    // of the ranges.
+    Iterator iter = mappedDatasets.iterator();
+    while (iter.hasNext()) {
+        XYDataset dataset = (XYDataset) iter.next();
+        if (dataset != null) {
+            XYItemRenderer renderer = getRendererForDataset(dataset);
+            if (isDomainAxis) {
+                if (renderer != null) {
+                    result = Range.combine(result, renderer.findDomainBounds(dataset));
+                } else {
+                    result = Range.combine(result, DatasetUtilities.findDomainBounds(dataset));
+                }
+            } else {
+                if (renderer != null) {
+                    result = Range.combine(result, renderer.findRangeBounds(dataset));
+                } else {
+                    result = Range.combine(result, DatasetUtilities.findRangeBounds(dataset));
+                }
+            }
+
+            if (renderer != null) {
+                Collection annotations = renderer.getAnnotations();
+                if (annotations != null) {
+                    Iterator iterator = annotations.iterator();
+                    while (iterator.hasNext()) {
+                        Object obj = iterator.next();
+                        if (obj instanceof XYAnnotation) {
+                            XYAnnotation annotation = (XYAnnotation) obj;
+                            if (annotation instanceof XYAnnotationBoundsInfo) {
+                                includedAnnotations.add(annotation);
+                            }
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    Iterator iterator = includedAnnotations.iterator();
+    while (iterator.hasNext()) {
+        XYAnnotation annotation = (XYAnnotation) iterator.next();
+        if (annotation instanceof XYAnnotationBoundsInfo) {
+            XYAnnotationBoundsInfo xyAnnotationBoundsInfo = (XYAnnotationBoundsInfo) annotation;
+            if (xyAnnotationBoundsInfo.getIncludeInDataBounds()) {
+                if (isDomainAxis) {
+                    result = Range.combine(result, xyAnnotationBoundsInfo.getXRange());
+                } else {
+                    result = Range.combine(result, xyAnnotationBoundsInfo.getYRange());
+                }
+            }
+        }
+    }
+
+    return result;
+}
 
     /**
      * Receives notification of a change to the plot's dataset.