diff --git a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
index df2713da8..25f051e58 100644
--- a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
+++ b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
@@ -127,83 +127,70 @@ public class ProperFractionFormat extends FractionFormat {
      * @param pos input/ouput parsing parameter.
      * @return the parsed {@link Fraction} object.
      */
-    public Fraction parse(String source, ParsePosition pos) {
-        // try to parse improper fraction
-        Fraction ret = super.parse(source, pos);
-        if (ret != null) {
-            return ret;
-        }
-        
-        int initialIndex = pos.getIndex();
-
-        // parse whitespace
-        parseAndIgnoreWhitespace(source, pos);
-
-        // parse whole
-        Number whole = getWholeFormat().parse(source, pos);
-        if (whole == null) {
-            // invalid integer number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
-            return null;
-        }
-
-        // parse whitespace
-        parseAndIgnoreWhitespace(source, pos);
-        
-        // parse numerator
-        Number num = getNumeratorFormat().parse(source, pos);
-        if (num == null) {
-            // invalid integer number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
-            return null;
-        }
-        
-            // minus signs should be leading, invalid expression
-
-        // parse '/'
-        int startIndex = pos.getIndex();
-        char c = parseNextCharacter(source, pos);
-        switch (c) {
-        case 0 :
-            // no '/'
-            // return num as a fraction
-            return new Fraction(num.intValue(), 1);
-        case '/' :
-            // found '/', continue parsing denominator
-            break;
-        default :
-            // invalid '/'
-            // set index back to initial, error index should be the last
-            // character examined.
-            pos.setIndex(initialIndex);
-            pos.setErrorIndex(startIndex);
-            return null;
-        }
-
-        // parse whitespace
-        parseAndIgnoreWhitespace(source, pos);
-
-        // parse denominator
-        Number den = getDenominatorFormat().parse(source, pos);
-        if (den == null) {
-            // invalid integer number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
-            return null;
-        }
-        
-            // minus signs must be leading, invalid
-
-        int w = whole.intValue();
-        int n = num.intValue();
-        int d = den.intValue();
-        return new Fraction(((Math.abs(w) * d) + n) * MathUtils.sign(w), d);
-    }
+public Fraction parse(String source, ParsePosition pos) {
+    // Try to parse improper fraction
+    Fraction ret = super.parse(source, pos);
+    if (ret != null) {
+        return ret;
+    }
+
+    // Reset index to the start of input
+    int initialIndex = pos.getIndex();
+
+    // Parse whitespace
+    parseAndIgnoreWhitespace(source, pos);
+
+    // Parse whole
+    Number whole = getWholeFormat().parse(source, pos);
+    if (whole == null) {
+        pos.setIndex(initialIndex);
+        return null;
+    }
+
+    // Parse whitespace
+    parseAndIgnoreWhitespace(source, pos);
+
+    // Parse numerator
+    Number num = getNumeratorFormat().parse(source, pos);
+    if (num == null || num.intValue() < 0) {
+        pos.setIndex(initialIndex);
+        return null;
+    }
+
+    // Parse '/'. If not found, return num as a fraction
+    int startIndex = pos.getIndex();
+    char c = parseNextCharacter(source, pos);
+    switch (c) {
+        case 0:
+            return new Fraction(num.intValue(), 1);
+        case '/':
+            break;
+        default:
+            pos.setIndex(initialIndex);
+            pos.setErrorIndex(startIndex);
+            return null;
+    }
+
+    // Parse whitespace
+    parseAndIgnoreWhitespace(source, pos);
+
+    // Parse denominator
+    Number den = getDenominatorFormat().parse(source, pos);
+    if (den == null || den.intValue() <= 0) {
+        pos.setIndex(initialIndex);
+        return null;
+    }
+
+    // Compute result
+    int w = whole.intValue();
+    int n = num.intValue();
+    int d = den.intValue();
+    int sign = (w < 0) ? -1 : 1;
+    w = Math.abs(w);
+    int nume = w * d + n;
+
+    return new Fraction(sign * nume, d);
+}
     
     /**
      * Modify the whole format.