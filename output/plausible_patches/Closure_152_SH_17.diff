diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java
index fc2578d8..3c79d1bb 100644
--- a/src/com/google/javascript/rhino/jstype/FunctionType.java
+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -868,7 +868,24 @@ public class FunctionType extends PrototypeObjectType {
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);
+if (resolvedTypeOfThis == null) {
+    // if type of "this" did not resolve to anything, set it to UNKNOWN_TYPE
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+} else if (resolvedTypeOfThis instanceof ObjectType) {
+    // if type of "this" resolved to an ObjectType, use it
+    typeOfThis = (ObjectType) resolvedTypeOfThis;
+} else if (resolvedTypeOfThis.isNamedType()) {
+    // if type of "this" resolved to a NamedType, use the referenced type if its an ObjectType
+    JSType referencedType = ((NamedType) resolvedTypeOfThis).getReferencedType();
+    if (referencedType instanceof ObjectType) {
+        typeOfThis = (ObjectType) referencedType;
+    } else {
+        typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+    }
+} else {
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+}
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =