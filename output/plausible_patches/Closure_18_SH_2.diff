diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java
index 8898f77f..07d04ea6 100644
--- a/src/com/google/javascript/jscomp/Compiler.java
+++ b/src/com/google/javascript/jscomp/Compiler.java
@@ -1285,7 +1285,40 @@ public class Compiler extends AbstractCompiler {
 
       // Check if the sources need to be re-ordered.
       boolean staleInputs = false;
-      if (options.dependencyOptions.needsManagement() && options.closurePass) {
+if (options.dependencyOptions.needsManagement()) {
+  for (CompilerInput input : inputs) {
+    // Forward-declare all the provided types, so that they
+    // are not flagged even if they are dropped from the process.
+    for (String provide : input.getProvides()) {
+      getTypeRegistry().forwardDeclareType(provide);
+    }
+  }
+
+  try {
+    inputs =
+        (moduleGraph == null ? new JSModuleGraph(modules) : moduleGraph)
+        .manageDependencies(options.dependencyOptions, inputs);
+    staleInputs = true;
+  } catch (CircularDependencyException e) {
+    report(JSError.make(
+        JSModule.CIRCULAR_DEPENDENCY_ERROR, e.getMessage()));
+
+    // If in IDE mode, we ignore the error and keep going.
+    if (hasErrors()) {
+      return null;
+    }
+  } catch (MissingProvideException e) {
+    report(JSError.make(
+        MISSING_ENTRY_ERROR, e.getMessage()));
+
+    // If in IDE mode, we ignore the error and keep going.
+    if (hasErrors()) {
+      return null;
+    }
+  }
+}
+
+if (options.closurePass && options.dependencyOptions.needsManagement()) {
         for (CompilerInput input : inputs) {
           // Forward-declare all the provided types, so that they
           // are not flagged even if they are dropped from the process.