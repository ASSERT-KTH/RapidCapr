diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index c3cb8695..14dbab82 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -34,34 +34,39 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if (index >= input.length() - 2) {
+            return 0;
+        }
+        char currCharAtIdx = input.charAt(index);
+        char nextCharAtIdx = input.charAt(index + 1);
+        if (currCharAtIdx == '&' && nextCharAtIdx == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+            if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
-
             int end = start;
-            while(input.charAt(end) != ';') {
+            while (end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
-
-            int entityValue;
+            String entityValue = input.subSequence(start, end).toString();
+            if (entityValue.length() == 0) {
+                return 0;
+            }
+            int unicodeValue = 0;
             try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
-            } catch(NumberFormatException nfe) {
+                unicodeValue = Integer.parseInt(entityValue, isHex ? 16 : 10);
+            } catch (NumberFormatException nfe) {
                 return 0;
             }
-
-                out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            if (!Character.isValidCodePoint(unicodeValue)) {
+                return 0;
+            }
+            char[] chars = Character.toChars(unicodeValue);
+            out.write(chars);
+            return end - index + 1;
         }
         return 0;
     }