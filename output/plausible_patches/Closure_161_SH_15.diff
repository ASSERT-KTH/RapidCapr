diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 0b2636f4..a66af360 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -1280,6 +1280,15 @@ class PeepholeFoldConstants extends AbstractPeepholeOptimization {
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
+// Check that the access is not used as an assignment target in a FOR initialization statement
+if (parent != null && parent.getType() == Token.ASSIGN && parent.getFirstChild().isEquivalentTo(n)) {
+  Node grandParent = parent.getParent();
+  if (grandParent != null && grandParent.getType() == Token.EXPR_RESULT) {
+    return n;
+  } else if (grandParent != null && grandParent.getType() == Token.FOR && grandParent.getFirstChild() == parent) {
+    return n;
+  }
+}
 
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into