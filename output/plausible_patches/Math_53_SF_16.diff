diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java
index e0a8e97e9..b06199016 100644
--- a/src/main/java/org/apache/commons/math/complex/Complex.java
+++ b/src/main/java/org/apache/commons/math/complex/Complex.java
@@ -147,12 +147,30 @@ public class Complex implements FieldElement<Complex>, Serializable  {
      * @return the complex number sum
      * @throws NullArgumentException if <code>rhs</code> is null
      */
-    public Complex add(Complex rhs)
-        throws NullArgumentException {
-        MathUtils.checkNotNull(rhs);
-        return createComplex(real + rhs.getReal(),
-            imaginary + rhs.getImaginary());
+public Complex add(Complex rhs) throws NullArgumentException {
+    MathUtils.checkNotNull(rhs);
+    double newReal = real + rhs.getReal();
+    double newImaginary = imaginary + rhs.getImaginary();
+    if (!Double.isFinite(newReal) || !Double.isFinite(newImaginary)) {
+        if (Double.isNaN(newReal) || Double.isNaN(newImaginary)) {
+            return createComplex(Double.NaN, Double.NaN);
+        } else if (Double.isInfinite(newReal) && Double.isInfinite(newImaginary)) {
+            if (Math.signum(newReal) == Math.signum(newImaginary)) {
+                double infSign = Math.signum(newReal);
+                return createComplex(infSign * Double.POSITIVE_INFINITY, infSign * Double.POSITIVE_INFINITY);
+            } else {
+                return createComplex(Double.NaN, Double.NaN);
+            }
+        } else if (Double.isInfinite(newReal)) {
+            double overflowSign = Math.signum(newReal);
+            return createComplex(overflowSign * Double.POSITIVE_INFINITY, newImaginary);
+        } else if (Double.isInfinite(newImaginary)) {
+            double overflowSign = Math.signum(newImaginary);
+            return createComplex(newReal, overflowSign * Double.POSITIVE_INFINITY);
+        }
     }
+    return createComplex(newReal, newImaginary);
+}
 
     /**
      * Return the conjugate of this complex number. The conjugate of