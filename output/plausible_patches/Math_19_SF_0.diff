diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 51d1c6428..a21b5a89a 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -535,8 +535,12 @@ public class CMAESOptimizer
                 boundaries = new double[2][];
                 boundaries[0] = lB;
                 boundaries[1] = uB;
-
-                // Abort early if the normalization will overflow (cf. "encode" method).
+                // check if the difference between the upper and lower bound exceeds the range of double
+                for (int i = 0; i < lB.length; i++) {
+                    if (uB[i] - lB[i] > Math.sqrt(Double.MAX_VALUE)) {
+                        throw new NumberIsTooLargeException(uB[i], lB[i], false);
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.