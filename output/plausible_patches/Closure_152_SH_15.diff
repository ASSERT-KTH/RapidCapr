diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java
index fc2578d8..8e6a3c9d 100644
--- a/src/com/google/javascript/rhino/jstype/FunctionType.java
+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -868,7 +868,26 @@ public class FunctionType extends PrototypeObjectType {
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+JSType typeOfThisResolved = safeResolve(typeOfThis, t, scope);
+if (typeOfThisResolved == null) {
+  // Case 1: typeOfThis did not resolve to anything, set it to UNKNOWN_TYPE
+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+} else if (typeOfThisResolved instanceof NamedType) {
+  // Case 2: typeOfThis resolved to a NamedType, use the referenced type
+  NamedType namedType = (NamedType) typeOfThisResolved;
+  JSType resolvedType = namedType.getReferencedType();
+  if (resolvedType instanceof ObjectType) {
+    typeOfThis = (ObjectType) resolvedType;
+  } else {
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+  }
+} else if (typeOfThisResolved instanceof ObjectType) {
+  // Case 3: typeOfThis resolved to an ObjectType
+  typeOfThis = (ObjectType) typeOfThisResolved;
+} else {
+  // Case 4: typeOfThis resolved to another type, set it to UNKNOWN_TYPE
+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+}
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =