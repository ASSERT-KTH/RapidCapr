diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
index 3f669271a..7781a867e 100644
--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
@@ -69,7 +69,25 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        // Use initial value as a starting point for the solver
+        if (initial < min || initial > max) {
+            initial = (min + max) / 2.0;
+        }
+
+        // Ensure that min and max have opposite signs
+        if (f.value(min) * f.value(max) > 0) {
+            double temp = min;
+            min = max;
+            max = temp;
+        }
+
+        // Create a new instance of the solver and set the tolerance and maximum iterations
+        BrentSolver solver = new BrentSolver();
+        solver.setAbsoluteAccuracy(getAbsoluteAccuracy());
+        solver.setMaximalIterationCount(getMaximalIterationCount());
+
+        // Solve the function using the given solver
+        return solver.solve(f, min, max, initial);
     }
 
     /** {@inheritDoc} */