diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java
index 42c9ab38..397d273c 100644
--- a/src/com/google/javascript/jscomp/CodeGenerator.java
+++ b/src/com/google/javascript/jscomp/CodeGenerator.java
@@ -705,14 +705,15 @@ class CodeGenerator {
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
-  private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+private boolean isOneExactlyFunctionOrDo(Node n) {
+  if (n.getType() == Token.LABEL) {
+    return isOneExactlyFunctionOrDo(n.getFirstChild().getNext());
+  } else if (n.getType() == Token.BLOCK && !n.hasChildren()) {
+    // An empty statement is a valid 'DO' statement
+    return true;
   }
+  return n.getType() == Token.FUNCTION || n.getType() == Token.DO;
+}
 
   /**
    * Adds a node at the left-hand side of an expression. Unlike