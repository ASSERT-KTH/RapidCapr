diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java
index 7b877b1e2..3b2199279 100644
--- a/src/org/mockito/internal/invocation/InvocationMatcher.java
+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java
@@ -120,7 +120,25 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF
     public void captureArgumentsFrom(Invocation invocation) {
         if (invocation.getMethod().isVarArgs()) {
             int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+Object[] rawArguments = invocation.getRawArguments();
+for (int position = 0; position < matchers.size() && position < rawArguments.length; position++) {
+    Matcher m = matchers.get(position);
+    Object arg = rawArguments[position];
+    if (m instanceof CapturesArguments) {
+        if (isVariableArgument(invocation, position) && isVarargMatcher(m)) {
+            if (arg != null && arg.getClass().isArray()) {
+                int arrayLength = Array.getLength(arg);
+                for (int i = 0; i < arrayLength; i++) {
+                    ((CapturesArguments) m).captureFrom(Array.get(arg, i));
+                }
+            } else {
+                ((CapturesArguments) m).captureFrom(arg);
+            }
+        } else {
+            ((CapturesArguments) m).captureFrom(arg);
+        }
+    }
+}
 
         } else {
             for (int position = 0; position < matchers.size(); position++) {