diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
index bf6dd65d5..ce8dc0657 100644
--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
@@ -1416,6 +1416,26 @@ public class DSCompiler {
         }
 
         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly
+if (Double.isNaN(result[resultOffset])) {
+    if (Double.compare(x[xOffset], 0.0) == 0 && Double.compare(y[yOffset], 0.0) == 0) {
+        result[resultOffset] = 0.0;
+    } else if (Double.isInfinite(x[xOffset]) || Double.isInfinite(y[yOffset])) {
+        // Handle infinite cases
+        if (x[xOffset] > 0 && y[yOffset] > 0) {
+            result[resultOffset] = FastMath.PI / 4.0;
+        } else if (x[xOffset] < 0 && y[yOffset] > 0) {
+            result[resultOffset] = 3.0 * FastMath.PI / 4.0;
+        } else if (x[xOffset] < 0 && y[yOffset] < 0) {
+            result[resultOffset] = -3.0 * FastMath.PI / 4.0;
+        } else if (x[xOffset] > 0 && y[yOffset] < 0) {
+            result[resultOffset] = -FastMath.PI / 4.0;
+        } else {
+            result[resultOffset] = Double.NaN;
+        }
+    } else {
+        result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);
+    }
+}
 
     }
 