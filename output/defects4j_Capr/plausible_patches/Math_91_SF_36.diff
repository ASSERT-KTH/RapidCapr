diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java
index 0706f8c41..ecc338dae 100644
--- a/src/java/org/apache/commons/math/fraction/Fraction.java
+++ b/src/java/org/apache/commons/math/fraction/Fraction.java
@@ -255,12 +255,37 @@ public class Fraction extends Number implements Comparable<Fraction> {
      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
      *         than <tt>object</tt>, 0 if they are equal.
      */
-    public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+public int compareTo(Fraction object) {
+    if (this == object) {
+        return 0;
     }
     
+    int lcm = lcm(this.denominator, object.denominator);
+    int thisNumerator = this.numerator * (lcm / this.denominator);
+    int otherNumerator = object.numerator * (lcm / object.denominator);
+    
+    if (thisNumerator < otherNumerator) {
+        return -1;
+    } else if (thisNumerator > otherNumerator) {
+        return 1;
+    } else {
+        return 0;
+    }
+}
+
+private int lcm(int a, int b) {
+    return a * b / gcd(a, b);
+}
+
+private int gcd(int a, int b) {
+    while (b != 0) {
+        int temp = b;
+        b = a % b;
+        a = temp;
+    }
+    return a;
+}
+    
     /**
      * Gets the fraction as a <tt>double</tt>. This calculates the fraction as
      * the numerator divided by denominator.