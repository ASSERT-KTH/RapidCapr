diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
index 9a24c00f..76445aef 100644
--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
@@ -255,19 +255,26 @@ public class DateUtils {
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
-    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
-        if (cal1 == null || cal2 == null) {
-            throw new IllegalArgumentException("The date must not be null");
-        }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
-                cal1.getClass() == cal2.getClass());
+public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
+    if (cal1 == null || cal2 == null) {
+        throw new IllegalArgumentException("The calendar must not be null");
     }
+    
+    TimeZone timeZone = cal1.getTimeZone();
+    
+    // Set both calendars to the same time zone
+    cal1.setTimeZone(timeZone);
+    cal2.setTimeZone(timeZone);
+    
+    // Set both calendars to the same milliseconds value
+    long cal1Millis = cal1.getTimeInMillis();
+    long cal2Millis = cal2.getTimeInMillis();
+    cal1.setTimeInMillis(cal2Millis);
+    cal2.setTimeInMillis(cal1Millis);
+    
+    // Compare the calendars
+    return cal1.compareTo(cal2) == 0;
+}
 
     //-----------------------------------------------------------------------
     /**