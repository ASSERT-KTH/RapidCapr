diff --git a/src/main/java/org/apache/commons/math3/complex/Complex.java b/src/main/java/org/apache/commons/math3/complex/Complex.java
index 22b23f24e..d9937b55f 100644
--- a/src/main/java/org/apache/commons/math3/complex/Complex.java
+++ b/src/main/java/org/apache/commons/math3/complex/Complex.java
@@ -296,30 +296,24 @@ public class Complex implements FieldElement<Complex>, Serializable  {
     }
 
     /** {@inheritDoc} */
-    public Complex reciprocal() {
-        if (isNaN) {
-            return NaN;
-        }
-
-        if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
-        }
+public Complex reciprocal() {
+    if (isNaN) {
+        return NaN;
+    }
 
-        if (isInfinite) {
-            return ZERO;
-        }
+    if (real == 0.0 && imaginary == 0.0) {
+        return INF;
+    }
 
-        if (FastMath.abs(real) < FastMath.abs(imaginary)) {
-            double q = real / imaginary;
-            double scale = 1. / (real * q + imaginary);
-            return createComplex(scale * q, -scale);
-        } else {
-            double q = imaginary / real;
-            double scale = 1. / (imaginary * q + real);
-            return createComplex(scale, -scale * q);
-        }
+    if (isInfinite) {
+        return isNaN ? NaN : ZERO;
     }
 
+    double norm = real * real + imaginary * imaginary;
+    double reciprocal = 1.0 / norm;
+    return new Complex(real * reciprocal, -imaginary * reciprocal);
+}
+
     /**
      * Test for the equality of two Complex objects.
      * If both the real and imaginary parts of two complex numbers