diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java
index e0a8e97e9..9b10ad4af 100644
--- a/src/main/java/org/apache/commons/math/complex/Complex.java
+++ b/src/main/java/org/apache/commons/math/complex/Complex.java
@@ -147,12 +147,26 @@ public class Complex implements FieldElement<Complex>, Serializable  {
      * @return the complex number sum
      * @throws NullArgumentException if <code>rhs</code> is null
      */
-    public Complex add(Complex rhs)
-        throws NullArgumentException {
-        MathUtils.checkNotNull(rhs);
-        return createComplex(real + rhs.getReal(),
-            imaginary + rhs.getImaginary());
+public Complex add(Complex rhs) throws NullArgumentException {
+    MathUtils.checkNotNull(rhs);
+    double sumReal = real + rhs.getReal();
+    double sumImag = imaginary + rhs.getImaginary();
+    Complex result;
+    if (Double.isNaN(sumReal) || Double.isNaN(sumImag)) {
+        result = new Complex(Double.NaN, Double.NaN);
+    } else if (Double.isInfinite(sumReal) || Double.isInfinite(sumImag)) {
+        if (Double.isInfinite(sumReal) && Double.isInfinite(sumImag)) {
+            result = new Complex(
+                Math.copySign(Double.POSITIVE_INFINITY, sumReal),
+                Math.copySign(Double.POSITIVE_INFINITY, sumImag));
+        } else {
+            result = new Complex(sumReal, sumImag);
+        }
+    } else {
+        result = new Complex(sumReal, sumImag);
     }
+    return result;
+}
 
     /**
      * Return the conjugate of this complex number. The conjugate of