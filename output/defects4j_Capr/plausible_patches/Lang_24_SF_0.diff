diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
index 4a1d8459..2eac8cf7 100644
--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
@@ -1324,10 +1324,14 @@ public class NumberUtils {
         int sz = chars.length;
         boolean hasExp = false;
         boolean hasDecPoint = false;
-        boolean allowSigns = false;
+        boolean allowSigns = true;
         boolean foundDigit = false;
         // deal with any possible sign up front
-        int start = (chars[0] == '-') ? 1 : 0;
+        int start = 0;
+        if (sz > 1 && chars[0] == '-') {
+            start = 1;
+            allowSigns = false;
+        }
         if (sz > start + 1) {
             if (chars[start] == '0' && chars[start + 1] == 'x') {
                 int i = start + 2;
@@ -1345,8 +1349,8 @@ public class NumberUtils {
                 return true;
             }
         }
-        sz--; // don't want to loop to the last char, check it afterwords
-              // for type qualifiers
+        sz--; // don't want to loop to the last char, check it afterwards
+        // for type qualifiers
         int i = start;
         // loop to the next to last char or to the last char if we need another digit to
         // make a valid number (e.g. chars[0..5] = "1234E")
@@ -1354,7 +1358,6 @@ public class NumberUtils {
             if (chars[i] >= '0' && chars[i] <= '9') {
                 foundDigit = true;
                 allowSigns = false;
-
             } else if (chars[i] == '.') {
                 if (hasDecPoint || hasExp) {
                     // two decimal points or dec in exponent   
@@ -1410,7 +1413,7 @@ public class NumberUtils {
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return foundDigit && !hasExp && !hasDecPoint;
             }
             // last character is illegal
             return false;