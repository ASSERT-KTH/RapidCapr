diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java
index 7b877b1e2..7240cdee2 100644
--- a/src/org/mockito/internal/invocation/InvocationMatcher.java
+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java
@@ -120,7 +120,27 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF
     public void captureArgumentsFrom(Invocation invocation) {
         if (invocation.getMethod().isVarArgs()) {
             int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+        Object[] rawArguments = invocation.getRawArguments();
+
+        for (int position = 0; position < Math.max(matchers.size(), rawArguments.length); position++) {
+            Matcher m = position < matchers.size() ? matchers.get(position) : null;
+            Object arg = position < rawArguments.length ? rawArguments[position] : null;
+
+            if (m instanceof CapturesArguments) {
+                if (isVariableArgument(invocation, position) && isVarargMatcher(m)) {
+                    if (arg != null && arg.getClass().isArray()) {
+                        int varArgLength = Array.getLength(arg);
+                        for (int i = 0; i < varArgLength; i++) {
+                            ((CapturesArguments) m).captureFrom(Array.get(arg, i));
+                        }
+                    } else {
+                        ((CapturesArguments) m).captureFrom(arg);
+                    }
+                } else {
+                    ((CapturesArguments) m).captureFrom(arg);
+                }
+            }
+        }
 
         } else {
             for (int position = 0; position < matchers.size(); position++) {