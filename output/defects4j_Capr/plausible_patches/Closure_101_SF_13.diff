diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java
index bdf55921..7ab73405 100644
--- a/src/com/google/javascript/jscomp/CommandLineRunner.java
+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java
@@ -416,27 +416,42 @@ public class CommandLineRunner extends
   }
 
   @Override
-  protected CompilerOptions createOptions() {
+protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
-    CompilationLevel level = flags.compilation_level;
-    level.setOptionsForCompilationLevel(options);
-    if (flags.debug) {
-      level.setDebugOptionsForCompilationLevel(options);
-    }
 
-    WarningLevel wLevel = flags.warning_level;
-    wLevel.setOptionsForWarningLevel(options);
-    for (FormattingOption formattingOption : flags.formatting) {
-      formattingOption.applyToOptions(options);
-    }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
+    if (flags != null) {
+        CompilationLevel level = flags.compilation_level;
+        if (level != null) {
+            level.setOptionsForCompilationLevel(options);
+            if (flags.debug) {
+                level.setDebugOptionsForCompilationLevel(options);
+            }
+        }
+
+        WarningLevel wLevel = flags.warning_level;
+        if (wLevel != null) {
+            wLevel.setOptionsForWarningLevel(options);
+        }
+
+        List<FormattingOption> formattingOptions = flags.formatting;
+        if (formattingOptions != null) {
+            for (FormattingOption formattingOption : formattingOptions) {
+                formattingOption.applyToOptions(options);
+            }
+        }
+
+        Boolean process_closure_primitives = flags.process_closure_primitives;
+        if (process_closure_primitives != null) {
+            options.closurePass = process_closure_primitives;
+        }
+    } else {
+        options.closurePass = false;
     }
 
     initOptionsFromFlags(options);
     return options;
-  }
+}
 
   @Override
   protected Compiler createCompiler() {