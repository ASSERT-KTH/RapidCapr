diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
index 558a5864..a711d6db 100644
--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
@@ -2537,16 +2537,38 @@ public class DateTimeFormatterBuilder {
             return MAX_LENGTH;
         }
 
-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
-            String str = text.substring(position);
-            for (String id : ALL_IDS) {
-                if (str.startsWith(id)) {
-                    bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+    public int parseInto(DateTimeParserBucket bucket, String text, int position) {
+        String str = text.substring(position);
+
+        for (String id : ALL_IDS) {
+            int idx = str.indexOf(id);
+
+            while (idx != -1) {
+                int idLen = id.length();
+
+                if (((idx == 0) || (Character.isWhitespace(str.charAt(idx - 1)))) &&
+                        ((idx + idLen == str.length()) ||
+                                (str.charAt(idx + idLen) == '/') ||
+                                (Character.isWhitespace(str.charAt(idx + idLen))))) {
+
+                    char nextChar = '\0';
+
+                    if (idx + idLen < str.length()) {
+                        nextChar = str.charAt(idx + idLen);
+                    }
+
+                    if (!Character.isLetterOrDigit(nextChar) && nextChar != '_') {
+                        bucket.setZone(DateTimeZone.forID(id));
+                        return position + idx + idLen;
+                    }
                 }
+
+                idx = str.indexOf(id, idx + 1);
             }
-            return ~position;
         }
+
+        return ~position;
+    }
     }
 
     //-----------------------------------------------------------------------