diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java
index 0e889892..effbc003 100644
--- a/src/java/org/apache/commons/lang/text/StrBuilder.java
+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java
@@ -1757,35 +1757,38 @@ public class StrBuilder implements Cloneable {
      * @param startIndex  the index to start at, invalid index rounded to edge
      * @return the first index of the string, or -1 if not found
      */
-    public int indexOf(String str, int startIndex) {
-        startIndex = (startIndex < 0 ? 0 : startIndex);
-        if (str == null || startIndex >= size) {
-            return -1;
-        }
-        int strLen = str.length();
-        if (strLen == 1) {
-            return indexOf(str.charAt(0), startIndex);
-        }
-        if (strLen == 0) {
-            return startIndex;
-        }
-        if (strLen > size) {
-            return -1;
-        }
-        char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
-        outer:
-        for (int i = startIndex; i < len; i++) {
-            for (int j = 0; j < strLen; j++) {
-                if (str.charAt(j) != thisBuf[i + j]) {
-                    continue outer;
-                }
+public int indexOf(String str, int startIndex) {
+    if (str == null) {
+        return -1;
+    }
+
+    startIndex = Math.max(0, startIndex);
+    int strLen = str.length();
+
+    if (strLen == 0) {
+        return startIndex <= size ? startIndex : size;
+    }
+
+    if (startIndex >= size) {
+        return -1;
+    }
+
+    char[] thisBuf = buffer;
+
+    int maxIndex = size - strLen;
+    for (int i = startIndex; i <= maxIndex; i++) {
+        for (int j = 0; j < strLen; j++) {
+            if (thisBuf[i + j] != str.charAt(j)) {
+                break;
+            } else if (j == strLen - 1) {
+                return i;
             }
-            return i;
         }
-        return -1;
     }
 
+    return -1;
+}
+
     /**
      * Searches the string builder using the matcher to find the first match.
      * <p>