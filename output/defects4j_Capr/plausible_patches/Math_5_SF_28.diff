diff --git a/src/main/java/org/apache/commons/math3/complex/Complex.java b/src/main/java/org/apache/commons/math3/complex/Complex.java
index 22b23f24e..ee6377aa8 100644
--- a/src/main/java/org/apache/commons/math3/complex/Complex.java
+++ b/src/main/java/org/apache/commons/math3/complex/Complex.java
@@ -297,27 +297,26 @@ public class Complex implements FieldElement<Complex>, Serializable  {
 
     /** {@inheritDoc} */
     public Complex reciprocal() {
-        if (isNaN) {
-            return NaN;
+        if (Double.isNaN(real) || Double.isNaN(imaginary)) {
+            return Complex.NaN;
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return Complex.INF;
         }
 
-        if (isInfinite) {
-            return ZERO;
+        if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {
+            return Complex.ZERO;
         }
 
-        if (FastMath.abs(real) < FastMath.abs(imaginary)) {
-            double q = real / imaginary;
-            double scale = 1. / (real * q + imaginary);
-            return createComplex(scale * q, -scale);
-        } else {
-            double q = imaginary / real;
-            double scale = 1. / (imaginary * q + real);
-            return createComplex(scale, -scale * q);
+        double scale = 1.0 / (real * real + imaginary * imaginary);
+        Complex result = new Complex(real * scale, -imaginary * scale);
+
+        if (Double.isNaN(result.real) || Double.isNaN(result.imaginary)) {
+            return Complex.NaN;
         }
+
+        return result;
     }
 
     /**