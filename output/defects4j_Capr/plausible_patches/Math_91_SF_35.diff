diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java
index 0706f8c41..d0a220267 100644
--- a/src/java/org/apache/commons/math/fraction/Fraction.java
+++ b/src/java/org/apache/commons/math/fraction/Fraction.java
@@ -255,11 +255,29 @@ public class Fraction extends Number implements Comparable<Fraction> {
      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
      *         than <tt>object</tt>, 0 if they are equal.
      */
-    public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+public int compareTo(Fraction object) {
+    if (this.equals(object)) { // check if fractions are equal
+        return 0;
     }
+    // compute the common denominator
+    int commonDenominator = lcm(this.denominator, object.denominator);
+    // compute the numerators using the common denominator
+    int thisNumerator = this.numerator * (commonDenominator / this.denominator);
+    int otherNumerator = object.numerator * (commonDenominator / object.denominator);
+    // compare the numerators
+    return Integer.compare(thisNumerator, otherNumerator);
+}
+
+private int gcd(int a, int b) {
+    if (b == 0) {
+        return a;
+    }
+    return gcd(b, a % b);
+}
+
+private int lcm(int a, int b) {
+    return Math.abs(a * b) / gcd(a, b);
+}
     
     /**
      * Gets the fraction as a <tt>double</tt>. This calculates the fraction as