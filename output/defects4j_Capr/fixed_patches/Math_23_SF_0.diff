diff --git a/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
index 5136a1401..6c433e7be 100644
--- a/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
@@ -147,6 +147,7 @@ public class BrentOptimizer extends BaseAbstractUnivariateOptimizer {
         UnivariatePointValuePair previous = null;
         UnivariatePointValuePair current
             = new UnivariatePointValuePair(x, isMinim ? fx : -fx);
+        UnivariatePointValuePair bestGlobal = current;
         // Best point encountered so far (which is the initial guess).
 
         int iter = 0;
@@ -234,7 +235,9 @@ public class BrentOptimizer extends BaseAbstractUnivariateOptimizer {
 
                 if (checker != null) {
                     if (checker.converged(iter, previous, current)) {
-                        return best(current, previous, isMinim);
+                        return best(bestGlobal,
+                                    best(current, previous, isMinim),
+                                    isMinim);
                     }
                 }
 
@@ -251,6 +254,11 @@ public class BrentOptimizer extends BaseAbstractUnivariateOptimizer {
                     fw = fx;
                     x = u;
                     fx = fu;
+
+                    if (isMinim && fu < bestGlobal.getValue() || !isMinim &&
+                        fu > bestGlobal.getValue()) {
+                        bestGlobal = current;
+                    }
                 } else {
                     if (u < x) {
                         a = u;
@@ -272,9 +280,9 @@ public class BrentOptimizer extends BaseAbstractUnivariateOptimizer {
                 }
             } else { // Default termination (Brent's criterion).
                 return
-                            best(current,
+                            best(bestGlobal,
                                  previous,
-                            isMinim);
+                                 isMinim);
             }
             ++iter;
         }