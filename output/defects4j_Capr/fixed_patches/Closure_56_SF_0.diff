diff --git a/src/com/google/javascript/jscomp/SourceFile.java b/src/com/google/javascript/jscomp/SourceFile.java
index fc0cf3fc..540d129d 100644
--- a/src/com/google/javascript/jscomp/SourceFile.java
+++ b/src/com/google/javascript/jscomp/SourceFile.java
@@ -202,7 +202,7 @@ public class SourceFile implements StaticSourceFile, Serializable {
    *     of the file. Returns {@code null} if it does not exist,
    *     or if there was an IO exception.
    */
-  public String getLine(int lineNumber) {
+public String getLine(int lineNumber) {
     String js = "";
     try {
       // NOTE(nicksantos): Right now, this is optimized for few warnings.
@@ -214,34 +214,34 @@ public class SourceFile implements StaticSourceFile, Serializable {
     }
 
     int pos = 0;
-    int startLine = 1;
+    int line = 1;
+    int len = js.length();
 
     // If we've saved a previous offset and it's for a line less than the
     // one we're searching for, then start at that point.
     if (lineNumber >= lastLine) {
       pos = lastOffset;
-      startLine = lastLine;
+      line = lastLine;
     }
 
-    for (int n = startLine; n < lineNumber; n++) {
-      int nextpos = js.indexOf('\n', pos);
-      if (nextpos == -1) {
-        return null;
+    while (pos < len && line < lineNumber) {
+      if (js.charAt(pos++) == '\n') {
+        line++;
       }
-      pos = nextpos + 1;
     }
 
-    // Remember this offset for the next search we do.
-    lastOffset = pos;
-    lastLine = lineNumber;
-
-    if (js.indexOf('\n', pos) == -1) {
+    if (pos >= len) {
       // If next new line cannot be found, there are two cases
       // 1. pos already reaches the end of file, then null should be returned
       // 2. otherwise, return the contents between pos and the end of file.
         return null;
     } else {
-      return js.substring(pos, js.indexOf('\n', pos));
+      int nextpos = js.indexOf('\n', pos);
+      if (nextpos == -1) {
+        return js.substring(pos);
+      } else {
+        return js.substring(pos, nextpos);
+      }
     }
   }
 