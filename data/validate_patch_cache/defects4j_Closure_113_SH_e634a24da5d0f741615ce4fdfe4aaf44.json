{
    "patch": " if (provided == null || !provided.isExplicitlyProvided()) {\n  UnrecognizedRequire unrecognizedRequire = new UnrecognizedRequire(n, ns, t.getSourceName());\n  unrecognizedRequire.setModuleName(module.getName());\n  unrecognizedRequires.add(unrecognizedRequire);\n\n  parent.detachFromParent();\n  compiler.reportCodeChange();\n  return;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..e78ad432 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,15 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+ if (provided == null || !provided.isExplicitlyProvided()) {\n+  UnrecognizedRequire unrecognizedRequire = new UnrecognizedRequire(n, ns, t.getSourceName());\n+  unrecognizedRequire.setModuleName(module.getName());\n+  unrecognizedRequires.add(unrecognizedRequire);\n+\n+  parent.detachFromParent();\n+  compiler.reportCodeChange();\n+  return;\n+}\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}