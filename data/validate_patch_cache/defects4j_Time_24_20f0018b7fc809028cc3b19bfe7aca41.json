{
    "patch": "for (int i = 0; i < count; i++) {\n    if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n        millis = iChrono.weekyear().set(millis, savedFields[i].iValue);\n    } else {\n        millis = savedFields[i].iField.set(millis, savedFields[i].iValue, null);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..30fc7bff 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,13 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+for (int i = 0; i < count; i++) {\n+    if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear()) {\n+        millis = iChrono.weekyear().set(millis, savedFields[i].iValue);\n+    } else {\n+        millis = savedFields[i].iField.set(millis, savedFields[i].iValue, null);\n+    }\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: no suitable method found for set(long,int,<null>)",
    "test_result": "ERROR"
}