{
    "patch": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn, Locale locale) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (escapingOn && c[start] == QUOTE) {\n            return appendTo == null ? null : appendTo.append(QUOTE);\n        }\n        int lastHold = start;\n        DateFormatSymbols symbols = DateFormatSymbols.getInstance(locale);\n        String[] months = symbols.getMonths();\n        String[] shortMonths = symbols.getShortMonths();\n        for (int i = pos.getIndex(); i < pattern.length(); i++) {\n            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(\n                        QUOTE);\n                pos.setIndex(i + ESCAPED_QUOTE.length());\n                lastHold = pos.getIndex();\n                continue;\n            }\n            switch (c[pos.getIndex()]) {\n            case QUOTE:\n                next(pos);\n                return appendTo == null ? null : appendTo.append(c, lastHold,\n                        pos.getIndex() - lastHold);\n            case 'M':\n                if (pos.getIndex() + 1 < pattern.length() && c[pos.getIndex() + 1] == 'M') {\n                    String month = months[getCurrentCalendarField(Calendar.MONTH)];\n                    appendTo.append(month);\n                    next(pos);\n                } else {\n                    String month = shortMonths[getCurrentCalendarField(Calendar.MONTH)];\n                    appendTo.append(month);\n                }\n                break;\n            default:\n                next(pos);\n            }\n            lastHold = pos.getIndex();\n        }\n        if (lastHold < pattern.length()) {\n            appendTo.append(c, lastHold, pattern.length() - lastHold);\n        }\n        return appendTo;\n    }\n\n    private int getCurrentCalendarField(int field) {\n        return calendar.get(field);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..f043e656 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -414,14 +414,17 @@ public class ExtendedMessageFormat extends MessageFormat {\n      * @param escapingOn whether to process escaped quotes\n      * @return <code>appendTo</code>\n      */\n-    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n-            StringBuffer appendTo, boolean escapingOn) {\n+private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n+            StringBuffer appendTo, boolean escapingOn, Locale locale) {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;\n+        DateFormatSymbols symbols = DateFormatSymbols.getInstance(locale);\n+        String[] months = symbols.getMonths();\n+        String[] shortMonths = symbols.getShortMonths();\n         for (int i = pos.getIndex(); i < pattern.length(); i++) {\n             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                 appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(\n@@ -435,12 +438,29 @@ public class ExtendedMessageFormat extends MessageFormat {\n                 next(pos);\n                 return appendTo == null ? null : appendTo.append(c, lastHold,\n                         pos.getIndex() - lastHold);\n+            case 'M':\n+                if (pos.getIndex() + 1 < pattern.length() && c[pos.getIndex() + 1] == 'M') {\n+                    String month = months[getCurrentCalendarField(Calendar.MONTH)];\n+                    appendTo.append(month);\n+                    next(pos);\n+                } else {\n+                    String month = shortMonths[getCurrentCalendarField(Calendar.MONTH)];\n+                    appendTo.append(month);\n+                }\n+                break;\n             default:\n                 next(pos);\n             }\n+            lastHold = pos.getIndex();\n         }\n-        throw new IllegalArgumentException(\n-                \"Unterminated quoted string at position \" + start);\n+        if (lastHold < pattern.length()) {\n+            appendTo.append(c, lastHold, pattern.length() - lastHold);\n+        }\n+        return appendTo;\n+    }\n+\n+    private int getCurrentCalendarField(int field) {\n+        return calendar.get(field);\n     }\n \n     /**",
    "result_reason": "error: method appendQuotedString in class ExtendedMessageFormat cannot be applied to given types;",
    "test_result": "ERROR"
}