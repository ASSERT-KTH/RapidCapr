{
    "patch": "    private boolean toStringEquals(Matcher m, Object arg) {\n        String argString = arg == null ? \"null\" : arg.toString();\n        return StringDescription.toString(m).equals(argString);\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..ee08e5733 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -376,6 +376,10 @@ public abstract class GenericMetadataSupport {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+    private boolean toStringEquals(Matcher m, Object arg) {\n+        String argString = arg == null ? \"null\" : arg.toString();\n+        return StringDescription.toString(m).equals(argString);\n+    }\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}