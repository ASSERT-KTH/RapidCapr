{
    "patch": "        } else if (NodeUtil.isExpressionNode(parent)) {\n          Node grandparent = parent.getParent();\n          if (grandparent != null && grandparent.isCall()\n              && grandparent.getFirstChild() == parent) {\n            // The rhs of the assignment is the caller, so it's used by the\n            // context. Don't associate it w/ the lhs. This fixes the specific\n            // case where the assignment is the caller expression.\n            recordDepScope(recordNode, ns);\n          } else {\n            recordDepScope(nameNode, ns);\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..b4688b4a 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -554,7 +554,6 @@ final class NameAnalyzer implements CompilerPass {\n           break;\n       }\n     }\n-\n     private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n       Node nameNode = n.getFirstChild();\n       Node parent = n.getParent();\n@@ -575,7 +574,18 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+        } else if (NodeUtil.isExpressionNode(parent)) {\n+          Node grandparent = parent.getParent();\n+          if (grandparent != null && grandparent.isCall()\n+              && grandparent.getFirstChild() == parent) {\n+            // The rhs of the assignment is the caller, so it's used by the\n+            // context. Don't associate it w/ the lhs. This fixes the specific\n+            // case where the assignment is the caller expression.\n+            recordDepScope(recordNode, ns);\n+          } else {\n+            recordDepScope(nameNode, ns);\n+          }\n+        }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}