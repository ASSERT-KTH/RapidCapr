{
    "patch": "    public void captureArgumentsFrom(Invocation i) {\n        int k = 0;\n        for (Matcher m : matchers) {\n            if (m instanceof CapturesArguments) {\n                ((CapturesArguments) m).captureFrom(i.getArgument(k++));\n            } else {\n                k++;\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex c72b119dd..fd04d1167 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -99,14 +99,22 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n     public String toString(PrintSettings printSettings) {\n         return invocation.toString(matchers, printSettings);\n     }\n-\n+    public void captureArgumentsFrom(Invocation i) {\n+        int k = 0;\n+        for (Matcher m : matchers) {\n     public void captureArgumentsFrom(Invocation i) {\n         int k = 0;\n         for (Matcher m : matchers) {\n             if (m instanceof CapturesArguments) {\n+                ((CapturesArguments) m).captureFrom(i.getArgument(k++));\n+            } else {\n+                k++;\n+            }\n+        }\n+    }\n                 ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n             }\n             k++;\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}