{
    "patch": "private String getRemainingJSDocLine() {\n  StringBuilder sb = new StringBuilder();\n  String line = stream.getRemainingJSDocLine();\n  if (line != null && line.startsWith(\"*\")) {\n    sb.append(line.substring(1).trim());\n  }\n  while (stream.advance() != null) {\n    line = stream.getRemainingJSDocLine();\n    if (line == null) {\n      break;\n    }\n    if (!line.startsWith(\"*\")) {\n      break;\n    }\n    sb.append(line.substring(1).trim());\n  }\n  return (sb.length() != 0) ? sb.toString() : null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..2bf7077e 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,24 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+private String getRemainingJSDocLine() {\n+  StringBuilder sb = new StringBuilder();\n+  String line = stream.getRemainingJSDocLine();\n+  if (line != null && line.startsWith(\"*\")) {\n+    sb.append(line.substring(1).trim());\n+  }\n+  while (stream.advance() != null) {\n+    line = stream.getRemainingJSDocLine();\n+    if (line == null) {\n+      break;\n+    }\n+    if (!line.startsWith(\"*\")) {\n+      break;\n+    }\n+    sb.append(line.substring(1).trim());\n   }\n+  return (sb.length() != 0) ? sb.toString() : null;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}