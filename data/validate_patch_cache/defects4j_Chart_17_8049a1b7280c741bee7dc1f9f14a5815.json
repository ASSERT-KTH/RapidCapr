{
    "patch": "public Object clone() throws CloneNotSupportedException {\n    TimeSeries clone = (TimeSeries) super.clone();\n    clone.data = (List) ObjectUtilities.deepClone(this.data);\n    clone.timePeriodClass = this.timePeriodClass;\n    clone.domainIsPointsInTime = this.domainIsPointsInTime;\n    clone.domain = (Range) ObjectUtilities.clone(this.domain);\n    clone.range = (Range) ObjectUtilities.clone(this.range);\n    clone.itemBounds = new TreeMap();\n    clone.seriesKeys = new ArrayList(this.seriesKeys);\n    for (int i = 0; i < getSeriesCount(); i++) {\n        clone.itemBounds.put(this.seriesKeys.get(i), new TreeMap());\n    }\n    clone.seriesDescriptions = new ArrayList(this.seriesDescriptions);\n    clone.seriesVisible = new BooleanList(this.seriesVisible);\n    clone.seriesColors = (PaintList) this.seriesColors.clone();\n    clone.seriesShapes = (ShapeList) this.seriesShapes.clone();\n    if (this.defaultEntityCollection != null) {\n        clone.defaultEntityCollection = (EntityCollection) ObjectUtilities.clone(this.defaultEntityCollection);\n    }\n    return clone;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..a7b84a7 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,27 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+public Object clone() throws CloneNotSupportedException {\n+    TimeSeries clone = (TimeSeries) super.clone();\n+    clone.data = (List) ObjectUtilities.deepClone(this.data);\n+    clone.timePeriodClass = this.timePeriodClass;\n+    clone.domainIsPointsInTime = this.domainIsPointsInTime;\n+    clone.domain = (Range) ObjectUtilities.clone(this.domain);\n+    clone.range = (Range) ObjectUtilities.clone(this.range);\n+    clone.itemBounds = new TreeMap();\n+    clone.seriesKeys = new ArrayList(this.seriesKeys);\n+    for (int i = 0; i < getSeriesCount(); i++) {\n+        clone.itemBounds.put(this.seriesKeys.get(i), new TreeMap());\n+    }\n+    clone.seriesDescriptions = new ArrayList(this.seriesDescriptions);\n+    clone.seriesVisible = new BooleanList(this.seriesVisible);\n+    clone.seriesColors = (PaintList) this.seriesColors.clone();\n+    clone.seriesShapes = (ShapeList) this.seriesShapes.clone();\n+    if (this.defaultEntityCollection != null) {\n+        clone.defaultEntityCollection = (EntityCollection) ObjectUtilities.clone(this.defaultEntityCollection);\n+    }\n+    return clone;\n+}\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}