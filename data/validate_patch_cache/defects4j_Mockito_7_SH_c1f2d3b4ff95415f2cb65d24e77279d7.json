{
    "patch": "            Type actualType = getActualTypeArgumentFor(typeVariable);\n            if (actualType instanceof TypeVariable) {\n                readTypeVariablesOn((TypeVariable) actualType);\n            } else if (actualType instanceof ParameterizedType) {\n                readTypeArgumentsOn((ParameterizedType) actualType);\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..bf5dd88ed 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,10 +372,17 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n+\n         private void readTypeVariables() {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+            Type actualType = getActualTypeArgumentFor(typeVariable);\n+            if (actualType instanceof TypeVariable) {\n+                readTypeVariablesOn((TypeVariable) actualType);\n+            } else if (actualType instanceof ParameterizedType) {\n+                readTypeArgumentsOn((ParameterizedType) actualType);\n+            }\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}