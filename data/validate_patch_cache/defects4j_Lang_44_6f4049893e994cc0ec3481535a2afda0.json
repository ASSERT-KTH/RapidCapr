{
    "patch": "if (val.startsWith(\"+\")) {\n    val = val.substring(1);\n}\nif (val.toLowerCase().endsWith(\"l\")) {\n    return createLong(val.substring(0, val.length() - 1));\n}\nif (val.toLowerCase().endsWith(\"f\")) {\n    return createFloat(val.substring(0, val.length() - 1));\n}\nif (val.toLowerCase().endsWith(\"d\")) {\n    return createDouble(val.substring(0, val.length() - 1));\n}\nif (val.startsWith(\"--\")) {\n    return null;\n}\nif (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n    return createInteger(val);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..d85cc5e5 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,24 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val.startsWith(\"+\")) {\n+    val = val.substring(1);\n+}\n+if (val.toLowerCase().endsWith(\"l\")) {\n+    return createLong(val.substring(0, val.length() - 1));\n+}\n+if (val.toLowerCase().endsWith(\"f\")) {\n+    return createFloat(val.substring(0, val.length() - 1));\n+}\n+if (val.toLowerCase().endsWith(\"d\")) {\n+    return createDouble(val.substring(0, val.length() - 1));\n+}\n+if (val.startsWith(\"--\")) {\n+    return null;\n+}\n+if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n+    return createInteger(val);\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "java.lang.NumberFormatException: For input string: \"92233720368547758070\"",
    "test_result": "FAIL"
}