{
    "patch": "public Dfp multiply(final int x) {\n    if (x >= 0 && x < RADIX) {\n        return multiplyFast(x);\n    } else {\n        Dfp result = newInstance();\n        if (x >= 0) {\n            int q = x / RADIX_BITS;\n            int r = x - q * RADIX_BITS;\n            Dfp t = newInstance();\n            t.exp = q;\n            t.mant[RADIX] = 1 << r;\n            result = multiplyByUnitary(t);\n        } else {\n            int q = -x / RADIX_BITS;\n            int r = -x - q * RADIX_BITS;\n            Dfp t = newInstance();\n            t.exp = -q;\n            t.mant[RADIX - 1] = 1 << r;\n            result = divideByUnitary(t);\n        }\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..a50de765a 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,29 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public Dfp multiply(final int x) {\n+    if (x >= 0 && x < RADIX) {\n+        return multiplyFast(x);\n+    } else {\n+        Dfp result = newInstance();\n+        if (x >= 0) {\n+            int q = x / RADIX_BITS;\n+            int r = x - q * RADIX_BITS;\n+            Dfp t = newInstance();\n+            t.exp = q;\n+            t.mant[RADIX] = 1 << r;\n+            result = multiplyByUnitary(t);\n+        } else {\n+            int q = -x / RADIX_BITS;\n+            int r = -x - q * RADIX_BITS;\n+            Dfp t = newInstance();\n+            t.exp = -q;\n+            t.mant[RADIX - 1] = 1 << r;\n+            result = divideByUnitary(t);\n+        }\n+        return result;\n+    }\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}