{
    "patch": "case Token.CALL:\n  return callHasLocalResult(value)\n      || isToStringMethodCall(value)\n      || (value.getFirstChild().isQualifiedName()\n          && locals.apply(value.getFirstChild()));\ncase Token.CLASS:\n  return locals.apply(value.getFirstChild());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex dd78f900..759a6ac8 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -2462,7 +2462,13 @@ public final class NodeUtil {\n         // TODO(nicksantos): This needs to be changed so that it\n         // returns true iff we're sure the value was never aliased from inside\n         // the constructor (similar to callHasLocalResult)\n-        return true;\n+case Token.CALL:\n+  return callHasLocalResult(value)\n+      || isToStringMethodCall(value)\n+      || (value.getFirstChild().isQualifiedName()\n+          && locals.apply(value.getFirstChild()));\n+case Token.CLASS:\n+  return locals.apply(value.getFirstChild());\n       case Token.FUNCTION:\n       case Token.REGEXP:\n       case Token.ARRAYLIT:",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}