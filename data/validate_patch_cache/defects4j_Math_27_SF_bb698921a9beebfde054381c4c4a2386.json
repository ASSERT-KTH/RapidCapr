{
    "patch": "public double percentageValue() {\n    final Dfp result = multiply(newInstance(100));\n    final double doubleResult = result.toDouble();\n    return (result.classify() == Dfp.INFINITE || result.classify() == Dfp.QNAN || result.classify() == Dfp.SNAN) ? doubleResult : ((int) Math.floor(doubleResult + 0.5)) / 100.0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\nindex f84218ebd..873c65ecf 100644\n--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n@@ -593,9 +593,11 @@ public class Fraction\n      *\n      * @return the fraction percentage as a <tt>double</tt>.\n      */\n-    public double percentageValue() {\n-        return multiply(100).doubleValue();\n-    }\n+public double percentageValue() {\n+    final Dfp result = multiply(newInstance(100));\n+    final double doubleResult = result.toDouble();\n+    return (result.classify() == Dfp.INFINITE || result.classify() == Dfp.QNAN || result.classify() == Dfp.SNAN) ? doubleResult : ((int) Math.floor(doubleResult + 0.5)) / 100.0;\n+}\n \n     /**\n      * <p>Creates a {@code Fraction} instance with the 2 parts",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}