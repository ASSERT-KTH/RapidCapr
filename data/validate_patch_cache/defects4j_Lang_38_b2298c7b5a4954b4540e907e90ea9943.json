{
    "patch": "        if (mTimeZoneForced) {\n            GregorianCalendar forcedCalendar = new GregorianCalendar(mTimeZone);\n            forcedCalendar.set(Calendar.ERA, calendar.get(Calendar.ERA));\n            forcedCalendar.set(Calendar.YEAR, calendar.get(Calendar.YEAR));\n            forcedCalendar.set(Calendar.MONTH, calendar.get(Calendar.MONTH));\n            forcedCalendar.set(Calendar.DAY_OF_MONTH, calendar.get(Calendar.DAY_OF_MONTH));\n            forcedCalendar.set(Calendar.HOUR_OF_DAY, calendar.get(Calendar.HOUR_OF_DAY));\n            forcedCalendar.set(Calendar.MINUTE, calendar.get(Calendar.MINUTE));\n            forcedCalendar.set(Calendar.SECOND, calendar.get(Calendar.SECOND));\n            calendar = forcedCalendar;\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..a5a6a79d 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,17 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        if (mTimeZoneForced) {\n+            GregorianCalendar forcedCalendar = new GregorianCalendar(mTimeZone);\n+            forcedCalendar.set(Calendar.ERA, calendar.get(Calendar.ERA));\n+            forcedCalendar.set(Calendar.YEAR, calendar.get(Calendar.YEAR));\n+            forcedCalendar.set(Calendar.MONTH, calendar.get(Calendar.MONTH));\n+            forcedCalendar.set(Calendar.DAY_OF_MONTH, calendar.get(Calendar.DAY_OF_MONTH));\n+            forcedCalendar.set(Calendar.HOUR_OF_DAY, calendar.get(Calendar.HOUR_OF_DAY));\n+            forcedCalendar.set(Calendar.MINUTE, calendar.get(Calendar.MINUTE));\n+            forcedCalendar.set(Calendar.SECOND, calendar.get(Calendar.SECOND));\n+            calendar = forcedCalendar;\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<2009-10-16T[16:42:16.000]Z> but was:<2009-10-16T[08:42:16.823]Z>",
    "test_result": "FAIL"
}