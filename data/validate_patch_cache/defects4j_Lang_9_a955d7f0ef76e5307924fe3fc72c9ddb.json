{
    "patch": "        Matcher patternMatcher = formatPattern.matcher(pattern);\n        StringBuilder regex = new StringBuilder();\n        List<Strategy> collector = new ArrayList<>();\n\n        if (!patternMatcher.find()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n\n        do {\n            currentFormatField = patternMatcher.group();\n            Strategy currentStrategy = getStrategy(currentFormatField);\n\n            if(!currentStrategy.addRegex(this, regex)) {\n                 currentFormatField = null;\n            } else {\n                collector.add(currentStrategy);\n                patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n            }\n        } while (patternMatcher.find());\n\n        currentFormatField = null;\n        strategies = collector.toArray(new Strategy[collector.size()]);\n        parsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..2e45895f 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,29 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        Matcher patternMatcher = formatPattern.matcher(pattern);\n+        StringBuilder regex = new StringBuilder();\n+        List<Strategy> collector = new ArrayList<>();\n+\n+        if (!patternMatcher.find()) {\n+            throw new IllegalArgumentException(\"Invalid pattern\");\n+        }\n+\n+        do {\n+            currentFormatField = patternMatcher.group();\n+            Strategy currentStrategy = getStrategy(currentFormatField);\n+\n+            if(!currentStrategy.addRegex(this, regex)) {\n+                 currentFormatField = null;\n+            } else {\n+                collector.add(currentStrategy);\n+                patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n+            }\n+        } while (patternMatcher.find());\n+\n+        currentFormatField = null;\n+        strategies = collector.toArray(new Strategy[collector.size()]);\n+        parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}