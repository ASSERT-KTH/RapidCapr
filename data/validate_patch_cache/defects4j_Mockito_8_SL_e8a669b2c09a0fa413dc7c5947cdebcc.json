{
    "patch": "} else if (actualTypeArgument instanceof WildcardType) {\n    Type[] upperBounds = ((WildcardType) actualTypeArgument).getUpperBounds();\n    if (upperBounds.length > 0 && upperBounds[0] instanceof TypeVariable<?>) {\n        actualTypeArgument = contextualActualTypeParameters.get(upperBounds[0]);\n    }\n    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n} else {\n    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..9248f904e 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,15 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+} else if (actualTypeArgument instanceof WildcardType) {\n+    Type[] upperBounds = ((WildcardType) actualTypeArgument).getUpperBounds();\n+    if (upperBounds.length > 0 && upperBounds[0] instanceof TypeVariable<?>) {\n+        actualTypeArgument = contextualActualTypeParameters.get(upperBounds[0]);\n+    }\n+    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n+} else {\n+    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n+}\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}