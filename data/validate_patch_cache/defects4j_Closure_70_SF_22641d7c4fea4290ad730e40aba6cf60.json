{
    "patch": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), true);\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        } else {\n          for (Node astParameter : astParameters.children()) {\n            defineSlot(astParameter, functionNode, null, true);\n          }\n        }\n      }\n    } // end declareArguments",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..add68209 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1748,6 +1748,10 @@ final class TypedScopeCreator implements ScopeCreator {\n               defineSlot(astParameter, functionNode, null, true);\n             }\n           }\n+        } else {\n+          for (Node astParameter : astParameters.children()) {\n+            defineSlot(astParameter, functionNode, null, true);\n+          }\n         }\n       }\n     } // end declareArguments",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2> but was:<1>",
    "test_result": "FAIL"
}