{
    "patch": "private String getRemainingJSDocLine() {\n    String remainingLine = stream.getRemainingJSDocLine().trim();\n    if (remainingLine.startsWith(\"*\")) {\n        remainingLine = remainingLine.substring(1).trim();\n        if (remainingLine.startsWith(\"*\")) {\n            remainingLine = remainingLine.substring(1).trim();\n        }\n    }\n    return remainingLine;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..accbbf06 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,16 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+    String remainingLine = stream.getRemainingJSDocLine().trim();\n+    if (remainingLine.startsWith(\"*\")) {\n+        remainingLine = remainingLine.substring(1).trim();\n+        if (remainingLine.startsWith(\"*\")) {\n+            remainingLine = remainingLine.substring(1).trim();\n+        }\n+    }\n+    return remainingLine;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "junit.framework.ComparisonFailure: expected:<Another[ ]function.> but was:<Another[]function.>",
    "test_result": "FAIL"
}