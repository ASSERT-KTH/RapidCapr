{
    "patch": "            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n            if (!iChronology.validate(newPartial, newValues)) {\n                newPartial = new Partial(iChronology, newTypes, iValues);\n                iChronology.validate(newPartial, iValues);\n                throw new IllegalArgumentException(\"Invalid value for field (type \" + fieldType.getName() + \"): \" + value);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..9a52a8d7 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -462,6 +462,11 @@ public final class Partial\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n             Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            if (!iChronology.validate(newPartial, newValues)) {\n+                newPartial = new Partial(iChronology, newTypes, iValues);\n+                iChronology.validate(newPartial, iValues);\n+                throw new IllegalArgumentException(\"Invalid value for field (type \" + fieldType.getName() + \"): \" + value);\n+            }\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: 'void' type not allowed here",
    "test_result": "ERROR"
}