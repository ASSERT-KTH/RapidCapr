{
    "patch": "public Object clone() throws CloneNotSupportedException {\n    TimeSeries copy = (TimeSeries) super.clone();\n    copy.data = (List) ((ArrayList) copy.data).clone();\n    for (int i = 0; i < copy.data.size(); i++) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) copy.data.get(i);\n        copy.data.set(i, (TimeSeriesDataItem) item.clone());\n    }\n    return copy;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..ff2fecc 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -853,10 +853,15 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      * @throws CloneNotSupportedException not thrown by this class, but \n      *         subclasses may differ.\n      */\n-    public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n-        return clone;\n-    }\n+public Object clone() throws CloneNotSupportedException {\n+    TimeSeries copy = (TimeSeries) super.clone();\n+    copy.data = (List) ((ArrayList) copy.data).clone();\n+    for (int i = 0; i < copy.data.size(); i++) {\n+        TimeSeriesDataItem item = (TimeSeriesDataItem) copy.data.get(i);\n+        copy.data.set(i, (TimeSeriesDataItem) item.clone());\n+    }\n+    return copy;\n+}\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}