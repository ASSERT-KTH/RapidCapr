{
    "patch": "        int idx = 1;\n        while (count < index) {\n            count += idx;\n            ++idx;\n        }\n        --idx;\n        indices[last-1] = idx;\n        int sum = idx * (idx + 1) / 2;\n        for (int i = last-2; i >= 0; --i) {\n            idx = 1;\n            while (sum + idx * uniCounterOffset[i] <= index) {\n                sum += idx * uniCounterOffset[i];\n                ++idx;\n            }\n            --idx;\n            indices[i] = idx;\n            sum += idx * uniCounterOffset[i];\n        }\n\n        return indices;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..377e518ea 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -240,7 +240,20 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             ++idx;\n         }\n         --idx;\n-        indices[last] = idx;\n+        indices[last-1] = idx;\n+        int sum = idx * (idx + 1) / 2;\n+        for (int i = last-2; i >= 0; --i) {\n+            idx = 1;\n+            while (sum + idx * uniCounterOffset[i] <= index) {\n+                sum += idx * uniCounterOffset[i];\n+                ++idx;\n+            }\n+            --idx;\n+            indices[i] = idx;\n+            sum += idx * uniCounterOffset[i];\n+        }\n+\n+        return indices;\n \n         return indices;\n     }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}