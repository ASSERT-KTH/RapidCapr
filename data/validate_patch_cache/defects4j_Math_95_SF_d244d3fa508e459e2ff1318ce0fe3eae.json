{
    "patch": "    protected double getInitialDomain(double p) {\n        double ret = 0.0;\n        double d = getDenominatorDegreesOfFreedom();\n        if (Double.isFinite(d) && d > 2.0) {\n            // use mean\n            ret = d / (d - 2.0);\n        } else if (Double.isInfinite(d)) {\n            ret = Double.POSITIVE_INFINITY;\n        }\n        return ret;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\nindex e19e97aef..7856243e8 100644\n--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n@@ -141,10 +141,14 @@ public class FDistributionImpl\n      * @return initial domain value\n      */\n     protected double getInitialDomain(double p) {\n-        double ret;\n+        double ret = 0.0;\n         double d = getDenominatorDegreesOfFreedom();\n+        if (Double.isFinite(d) && d > 2.0) {\n             // use mean\n             ret = d / (d - 2.0);\n+        } else if (Double.isInfinite(d)) {\n+            ret = Double.POSITIVE_INFINITY;\n+        }\n         return ret;\n     }\n     ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}