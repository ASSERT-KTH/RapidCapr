{
    "patch": "            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n                if (pos.getIndex() == pattern.length() - 1) {\n                    next(pos);\n                    return appendTo == null ? null : appendTo.append(QUOTE);\n                }\n                if (c[pos.getIndex() + 1] == QUOTE) {\n                    next(pos, 2);\n                    return appendTo == null ? null : appendTo.append(QUOTE);\n                }\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..a30e18b1 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,16 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+            if (escapingOn && c[pos.getIndex()] == QUOTE) {\n+                if (pos.getIndex() == pattern.length() - 1) {\n+                    next(pos);\n+                    return appendTo == null ? null : appendTo.append(QUOTE);\n+                }\n+                if (c[pos.getIndex() + 1] == QUOTE) {\n+                    next(pos, 2);\n+                    return appendTo == null ? null : appendTo.append(QUOTE);\n+                }\n+            }\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: method next in class ExtendedMessageFormat cannot be applied to given types;",
    "test_result": "ERROR"
}