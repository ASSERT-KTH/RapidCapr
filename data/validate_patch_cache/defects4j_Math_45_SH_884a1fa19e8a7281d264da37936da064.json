{
    "patch": "if (rowDimension <= 0 || columnDimension <= 0) {\n    throw new IllegalArgumentException(\"Matrix dimensions must be positive\");\n}\n// The maximum number of elements allowed in the matrix is governed by the maximum\n// value allowed for an array in Java.\n// We safely make an estimate of the maximum allowed number of elements and check if\n// it is exceeded by the actual number of elements.\n// We subtract one from Integer.MAX_VALUE, to make sure we stay within the array size.\n// The estimate is guaranteed to be correct for one-dimensional arrays.\nif ((long) rowDimension * columnDimension > (long) Integer.MAX_VALUE - 1L) {\n    throw new NumberIsTooLargeException((long) rowDimension * columnDimension, (long) Integer.MAX_VALUE - 1L, true);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..bd125e2c8 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,18 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+if (rowDimension <= 0 || columnDimension <= 0) {\n+    throw new IllegalArgumentException(\"Matrix dimensions must be positive\");\n+}\n+// The maximum number of elements allowed in the matrix is governed by the maximum\n+// value allowed for an array in Java.\n+// We safely make an estimate of the maximum allowed number of elements and check if\n+// it is exceeded by the actual number of elements.\n+// We subtract one from Integer.MAX_VALUE, to make sure we stay within the array size.\n+// The estimate is guaranteed to be correct for one-dimensional arrays.\n+if ((long) rowDimension * columnDimension > (long) Integer.MAX_VALUE - 1L) {\n+    throw new NumberIsTooLargeException((long) rowDimension * columnDimension, (long) Integer.MAX_VALUE - 1L, true);\n+}\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}