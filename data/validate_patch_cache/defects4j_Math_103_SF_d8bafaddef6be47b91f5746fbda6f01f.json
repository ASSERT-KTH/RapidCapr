{
    "patch": "public double cumulativeProbability(double x) throws MathException {\n    if (Double.isNaN(x)) {\n        throw new MathException(\"x must not be NaN\");\n    }\n    if (Double.isInfinite(x)) {\n        return x < 0 ? 0.0 : 1.0;\n    }\n    double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));\n    double result = 0.5 * (1.0 + Erf.erf(z));\n    if (result < 0 || result > 1) {\n        throw new MathException(\"Result is out of range: \" + result);\n    }\n    return result;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\nindex 02810e142..be821fb8d 100644\n--- a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n@@ -105,10 +105,20 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution\n      * x is more than 20 standard deviations from the mean, in which case the\n      * convergence exception is caught and 0 or 1 is returned.\n      */\n-    public double cumulativeProbability(double x) throws MathException {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n-                    (standardDeviation * Math.sqrt(2.0))));\n+public double cumulativeProbability(double x) throws MathException {\n+    if (Double.isNaN(x)) {\n+        throw new MathException(\"x must not be NaN\");\n     }\n+    if (Double.isInfinite(x)) {\n+        return x < 0 ? 0.0 : 1.0;\n+    }\n+    double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));\n+    double result = 0.5 * (1.0 + Erf.erf(z));\n+    if (result < 0 || result > 1) {\n+        throw new MathException(\"Result is out of range: \" + result);\n+    }\n+    return result;\n+}\n     \n     /**\n      * For this distribution, X, this method returns the critical point x, such",
    "result_reason": "org.apache.commons.math.MathException: Result is out of range: -3.1086244689504383E-15",
    "test_result": "FAIL"
}