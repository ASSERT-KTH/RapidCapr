{
    "patch": "private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n\n    // add this line to update the ts field in the stream\n    stream.ts += result.length();\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/UnionType.java b/src/com/google/javascript/rhino/jstype/UnionType.java\nindex a9c9a0ae..559f1d53 100644\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n@@ -288,7 +288,14 @@ public class UnionType extends JSType {\n       builder.addAlternate(that);\n     }\n     JSType result = builder.build();\n-    if (result != null) {\n+private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+\n+    // add this line to update the ts field in the stream\n+    stream.ts += result.length();\n+\n+    return result;\n+}\n       return result;\n     } else if (this.isObject() && that.isObject()) {\n       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}