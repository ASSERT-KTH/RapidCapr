{
    "patch": "if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n    Object[] arguments = invocation.getArguments();\n    Object other = arguments[0];\n    if (other == null) {\n        return 1;\n    } else if (invocation.getMock() == other) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 4c00f50b1..d663b4dac 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -73,7 +73,17 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             //see issue 184.\n             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).\n             //Only for compareTo() method by the Comparable interface\n-            return 1;\n+if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n+    Object[] arguments = invocation.getArguments();\n+    Object other = arguments[0];\n+    if (other == null) {\n+        return 1;\n+    } else if (invocation.getMock() == other) {\n+        return 0;\n+    } else {\n+        return 1;\n+    }\n+}\n         }\n         \n         Class<?> returnType = invocation.getMethod().getReturnType();\n@@ -120,4 +130,4 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n         return null;\n     }\n \n-}\n\\ No newline at end of file\n+}",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}