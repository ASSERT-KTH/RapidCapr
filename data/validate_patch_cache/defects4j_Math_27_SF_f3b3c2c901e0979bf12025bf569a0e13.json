{
    "patch": "    public double percentageValue() {\n        if (this.field.getRadixDigits() <= 2) {\n            // special case tiny numbers\n            return multiply(100).doubleValue();\n        } else {\n            // use specialized algorithm\n            Dfp result = newInstance(10);\n            result = result.pow(this.field.getIEEE754DPPE());\n            result = subtract(newInstance(1)).multiply(result);\n            result = result.multiply(newInstance(100));\n            return result.doubleValue();\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\nindex f84218ebd..4db8bf26b 100644\n--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n@@ -594,7 +594,17 @@ public class Fraction\n      * @return the fraction percentage as a <tt>double</tt>.\n      */\n     public double percentageValue() {\n-        return multiply(100).doubleValue();\n+        if (this.field.getRadixDigits() <= 2) {\n+            // special case tiny numbers\n+            return multiply(100).doubleValue();\n+        } else {\n+            // use specialized algorithm\n+            Dfp result = newInstance(10);\n+            result = result.pow(this.field.getIEEE754DPPE());\n+            result = subtract(newInstance(1)).multiply(result);\n+            result = result.multiply(newInstance(100));\n+            return result.doubleValue();\n+        }\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}