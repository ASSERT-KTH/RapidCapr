{
    "patch": "        if (endIndex < 0 || startIndex > endIndex) {\n            throw new IllegalArgumentException(\n                    \"Invalid start/end index: \" + startIndex + \"/\" + endIndex);\n        } else if (startIndex == endIndex && !start.equals(getTimePeriod(startIndex))) {\n            throw new IllegalArgumentException(\n                    \"Failed to locate starting point in series.\");\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 4067e3e..bb00bd6 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -941,7 +941,13 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             endIndex = -(endIndex + 1); // this is first item AFTER end period\n             endIndex = endIndex - 1;    // so this is last item BEFORE end\n         }\n-        if (endIndex < 0) {\n+        if (endIndex < 0 || startIndex > endIndex) {\n+            throw new IllegalArgumentException(\n+                    \"Invalid start/end index: \" + startIndex + \"/\" + endIndex);\n+        } else if (startIndex == endIndex && !start.equals(getTimePeriod(startIndex))) {\n+            throw new IllegalArgumentException(\n+                    \"Failed to locate starting point in series.\");\n+        }\n             emptyRange = true;\n         }\n         if (emptyRange) {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}