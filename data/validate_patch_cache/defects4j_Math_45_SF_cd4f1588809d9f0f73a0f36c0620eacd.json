{
    "patch": "public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n    super(rowDimension, columnDimension);\n    if (rowDimension <= 0 || columnDimension <= 0) {\n        throw new IllegalArgumentException(\"Matrix dimensions must be positive.\");\n    } else {\n        this.rows = rowDimension;\n        this.columns = columnDimension;\n        this.entries = new OpenIntToDoubleHashMap(rowDimension * columnDimension, 0.0);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..94bdf2164 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -45,12 +45,16 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      * @param rowDimension Number of rows of the matrix.\n      * @param columnDimension Number of columns of the matrix.\n      */\n-    public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n-        super(rowDimension, columnDimension);\n+public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n+    super(rowDimension, columnDimension);\n+    if (rowDimension <= 0 || columnDimension <= 0) {\n+        throw new IllegalArgumentException(\"Matrix dimensions must be positive.\");\n+    } else {\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n-        this.entries = new OpenIntToDoubleHashMap(0.0);\n+        this.entries = new OpenIntToDoubleHashMap(rowDimension * columnDimension, 0.0);\n     }\n+}\n \n     /**\n      * Build a matrix by copying another one.",
    "result_reason": "java.lang.Exception: Unexpected exception, expected<org.apache.commons.math.exception.NumberIsTooLargeException> but was<java.lang.NegativeArraySizeException>",
    "test_result": "FAIL"
}