{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (m == null && arg == null) {\n        return true;\n    } else if (m == null || arg == null) {\n        return false;\n    } else {\n        String mStr;\n        try {\n            mStr = StringDescription.toString(m);\n        } catch (NullPointerException e) {\n            return false;\n        }\n        return arg.toString().equals(mStr);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..55839a367 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,20 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n-    private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n-    }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (m == null && arg == null) {\n+        return true;\n+    } else if (m == null || arg == null) {\n+        return false;\n+    } else {\n+        String mStr;\n+        try {\n+            mStr = StringDescription.toString(m);\n+        } catch (NullPointerException e) {\n+            return false;\n+        }\n+        return arg.toString().equals(mStr);\n+    }\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}