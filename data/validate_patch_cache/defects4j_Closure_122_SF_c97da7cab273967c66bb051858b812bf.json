{
    "patch": "private void handleBlockComment(Comment comment) {\n    String commentValue = comment.getValue();\n    boolean hasTag = commentValue.matches(\".*\\\\*\\\\s*@.*\");\n    if (hasTag) {\n        String[] lines = commentValue.split(\"\\\\r?\\\\n\");\n        for (int i = 1; i < lines.length - 1; i++) {\n            String line = lines[i].trim();\n            if (line.startsWith(\"*\")) {\n                line = line.substring(1).trim();\n            }\n            if (line.startsWith(\"@\")) {\n                errorReporter.warning(\n                    SUSPICIOUS_COMMENT_WARNING,\n                    sourceName,\n                    comment.getLineno() + i, \"\", 0);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..502e4d0f 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,25 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n+private void handleBlockComment(Comment comment) {\n+    String commentValue = comment.getValue();\n+    boolean hasTag = commentValue.matches(\".*\\\\*\\\\s*@.*\");\n+    if (hasTag) {\n+        String[] lines = commentValue.split(\"\\\\r?\\\\n\");\n+        for (int i = 1; i < lines.length - 1; i++) {\n+            String line = lines[i].trim();\n+            if (line.startsWith(\"*\")) {\n+                line = line.substring(1).trim();\n+            }\n+            if (line.startsWith(\"@\")) {\n+                errorReporter.warning(\n+                    SUSPICIOUS_COMMENT_WARNING,\n+                    sourceName,\n+                    comment.getLineno() + i, \"\", 0);\n+            }\n+        }\n     }\n-  }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}