{
    "patch": "        } else {\n          // Patch for assignments that appear as part of call expressions.\n          // Without this change, the rhs of the assignment is incorrectly\n          // associated with the lhs.\n          if (!n.getParent().isCall()) {\n            recordDepScope(recordNode, ns);\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..c26db2ae 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -576,6 +576,13 @@ final class NameAnalyzer implements CompilerPass {\n             recordDepScope(nameNode, ns);\n           }\n         } else {\n+          // Patch for assignments that appear as part of call expressions.\n+          // Without this change, the rhs of the assignment is incorrectly\n+          // associated with the lhs.\n+          if (!n.getParent().isCall()) {\n+            recordDepScope(recordNode, ns);\n+          }\n+        }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}