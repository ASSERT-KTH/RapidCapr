{
    "patch": "        protected JSType caseTopType(JSType topType) {\n          if (topType.isUnknownType() || topType.isAllType()) {\n            return getCommonTypes().getArrayType(bottomReferenceName());\n          }\n          return topType;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..2513af0d 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,8 +51,13 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n+        protected JSType caseTopType(JSType topType) {\n+          if (topType.isUnknownType() || topType.isAllType()) {\n+            return getCommonTypes().getArrayType(bottomReferenceName());\n+          }\n           return topType;\n         }\n+        }\n \n         @Override\n         public JSType caseObjectType(ObjectType type) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}