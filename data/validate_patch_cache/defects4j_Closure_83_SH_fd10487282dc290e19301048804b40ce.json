{
    "patch": "public int parseArguments(Parameters params) throws CmdLineException {\n  String param = null;\n  if (params.size() > 0) {\n    param = params.getParameter(0);\n  }\n\n  if (param == null) {\n    setter.addValue(true);\n    return 1;\n  }\n\n  String lowerParam = param.toLowerCase();\n  if (TRUES.contains(lowerParam)) {\n    setter.addValue(true);\n    return 1;\n  } else if (FALSES.contains(lowerParam)) {\n    setter.addValue(false);\n    return 1;\n  } else {\n    setter.addValue(true);\n    return 1;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..8f0472b5 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,29 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+public int parseArguments(Parameters params) throws CmdLineException {\n+  String param = null;\n+  if (params.size() > 0) {\n+    param = params.getParameter(0);\n+  }\n+\n+  if (param == null) {\n+    setter.addValue(true);\n+    return 1;\n+  }\n+\n+  String lowerParam = param.toLowerCase();\n+  if (TRUES.contains(lowerParam)) {\n+    setter.addValue(true);\n+    return 1;\n+  } else if (FALSES.contains(lowerParam)) {\n+    setter.addValue(false);\n+    return 1;\n+  } else {\n+    setter.addValue(true);\n+    return 1;\n+  }\n+}\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}