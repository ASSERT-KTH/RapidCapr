{
    "patch": "    protected JSType caseTopType(JSType topType) {\n        if (topType.isTop()) {\n          return JSTypeNative.UNKNOWN_TYPE;\n        }\n        if (topType.isEnumElementType()) {\n          return caseUnionType(topType.getEnumeratedTypeOfEnumElement());\n        }\n        if (topType.isEnumObject()) {\n          return caseObjectType(topType.getEnumeratedType().getCombinedObject());\n        }\n        if (topType.isEnumElementTypeOf(JSTypeNative.ARRAY_TYPE)) {\n          return JSTypeNative.ARRAY_TYPE;\n        }\n        return topType;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..469ff7e7 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,21 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+    protected JSType caseTopType(JSType topType) {\n+        if (topType.isTop()) {\n+          return JSTypeNative.UNKNOWN_TYPE;\n+        }\n+        if (topType.isEnumElementType()) {\n+          return caseUnionType(topType.getEnumeratedTypeOfEnumElement());\n+        }\n+        if (topType.isEnumObject()) {\n+          return caseObjectType(topType.getEnumeratedType().getCombinedObject());\n+        }\n+        if (topType.isEnumElementTypeOf(JSTypeNative.ARRAY_TYPE)) {\n+          return JSTypeNative.ARRAY_TYPE;\n+        }\n+        return topType;\n+      }\n         }\n \n         @Override",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}