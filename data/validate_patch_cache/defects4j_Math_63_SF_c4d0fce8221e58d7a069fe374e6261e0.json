{
    "patch": "public static boolean equals(double[] expected, double[] actual, double eps) {\n    if (expected == null || actual == null) {\n        return expected == actual;\n    }\n    if (expected.length != actual.length) {\n        return false;\n    }\n    for (int i = 0; i < expected.length; i++) {\n        if (Math.abs(expected[i] - actual[i]) > eps) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..b72b44a3a 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -413,9 +413,20 @@ public final class MathUtils {\n      * @param y second value\n      * @return {@code true} if the values are equal.\n      */\n-    public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+public static boolean equals(double[] expected, double[] actual, double eps) {\n+    if (expected == null || actual == null) {\n+        return expected == actual;\n     }\n+    if (expected.length != actual.length) {\n+        return false;\n+    }\n+    for (int i = 0; i < expected.length; i++) {\n+        if (Math.abs(expected[i] - actual[i]) > eps) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n \n     /**\n      * Returns true if both arguments are NaN or neither is NaN and they are",
    "result_reason": "error: no suitable method found for equals(double,double)",
    "test_result": "ERROR"
}