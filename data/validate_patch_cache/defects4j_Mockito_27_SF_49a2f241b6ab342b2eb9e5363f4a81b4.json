{
    "patch": "public <T> void resetMock(T mock) {\n    MockHandler<?> oldHandler = Mockito.getMockHandler(mock);\n    MockHandler<?> newHandler = new MockHandler<>(oldHandler);\n    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newHandler, (MockSettingsImpl) Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS));\n    ((Mockito) mock).setMockHandler(newHandler);\n    ((Mockito) mock).getInterceptorSupport().setMethodInterceptorChainFactory(i -> {\n        MethodInterceptorChain chain = new DefaultMethodInterceptorChain(i);\n        chain.addFirst(newFilter);\n        return chain;\n    });\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..853385690 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -59,12 +59,17 @@ public class MockUtil {\n         return mock;\n     }\n \n-    public <T> void resetMock(T mock) {\n-        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n-        ((Factory) mock).setCallback(0, newFilter);\n-    }\n+public <T> void resetMock(T mock) {\n+    MockHandler<?> oldHandler = Mockito.getMockHandler(mock);\n+    MockHandler<?> newHandler = new MockHandler<>(oldHandler);\n+    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newHandler, (MockSettingsImpl) Mockito.withSettings().defaultAnswer(Mockito.RETURNS_DEFAULTS));\n+    ((Mockito) mock).setMockHandler(newHandler);\n+    ((Mockito) mock).getInterceptorSupport().setMethodInterceptorChainFactory(i -> {\n+        MethodInterceptorChain chain = new DefaultMethodInterceptorChain(i);\n+        chain.addFirst(newFilter);\n+        return chain;\n+    });\n+}\n \n     private <T> MethodInterceptorFilter newMethodInterceptorFilter(MockSettingsImpl settings) {\n         MockHandler<T> mockHandler = new MockHandler<T>(settings);",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}