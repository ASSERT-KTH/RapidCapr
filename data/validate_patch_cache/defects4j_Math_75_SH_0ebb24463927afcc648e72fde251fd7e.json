{
    "patch": "        if (values.isEmpty()) {\n            return Double.NaN;\n        }\n        int index = Collections.binarySearch(values, v);\n        if (index >= 0) {\n            return (double) (index + 1) / values.size();\n        } else {\n            index = -index - 1;\n            return (double) index / values.size();\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..1d822c726 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,16 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+        if (values.isEmpty()) {\n+            return Double.NaN;\n+        }\n+        int index = Collections.binarySearch(values, v);\n+        if (index >= 0) {\n+            return (double) (index + 1) / values.size();\n+        } else {\n+            index = -index - 1;\n+            return (double) index / values.size();\n+        }\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}