{
    "patch": "private double getTypedPercent(String js) {\n  int totalChars = js.length();\n  int typedChars = 0;\n  boolean inComment = false;\n  boolean inString = false;\n  \n  for (int i = 0; i < totalChars; i++) {\n    char c = js.charAt(i);\n    \n    if (inComment) {\n      if (c == '*' && i < totalChars - 1 && js.charAt(i + 1) == '/') {\n        inComment = false;\n        i++;\n      }\n    } else if (inString) {\n      if (c == '\"' && (i == 0 || js.charAt(i - 1) != '\\\\')) {\n        inString = false;\n      }\n    } else {\n      if (c == '/' && i < totalChars - 1 && js.charAt(i + 1) == '/') {\n        break; // Ignore rest of line if single-line comment\n      } else if (c == '/' && i < totalChars - 1 && js.charAt(i + 1) == '*') {\n        inComment = true;\n        i++;\n      } else if (c == '\"' || c == '\\'') {\n        inString = true;\n      } else if (c != ' ' && c != '\\t' && c != '\\n' && c != '\\r') {\n        typedChars++;\n      }\n    }\n  }\n  \n  return ((double)typedChars / (double)totalChars) * 100.0;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex edb78051..86047d58 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -458,7 +458,40 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n    * @param n The node being visited.\n    * @param parent The parent of the node n.\n    */\n-  public void visit(NodeTraversal t, Node n, Node parent) {\n+private double getTypedPercent(String js) {\n+  int totalChars = js.length();\n+  int typedChars = 0;\n+  boolean inComment = false;\n+  boolean inString = false;\n+  \n+  for (int i = 0; i < totalChars; i++) {\n+    char c = js.charAt(i);\n+    \n+    if (inComment) {\n+      if (c == '*' && i < totalChars - 1 && js.charAt(i + 1) == '/') {\n+        inComment = false;\n+        i++;\n+      }\n+    } else if (inString) {\n+      if (c == '\"' && (i == 0 || js.charAt(i - 1) != '\\\\')) {\n+        inString = false;\n+      }\n+    } else {\n+      if (c == '/' && i < totalChars - 1 && js.charAt(i + 1) == '/') {\n+        break; // Ignore rest of line if single-line comment\n+      } else if (c == '/' && i < totalChars - 1 && js.charAt(i + 1) == '*') {\n+        inComment = true;\n+        i++;\n+      } else if (c == '\"' || c == '\\'') {\n+        inString = true;\n+      } else if (c != ' ' && c != '\\t' && c != '\\n' && c != '\\r') {\n+        typedChars++;\n+      }\n+    }\n+  }\n+  \n+  return ((double)typedChars / (double)totalChars) * 100.0;\n+}\n     JSType childType;\n     JSType leftType, rightType;\n     Node left, right;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}