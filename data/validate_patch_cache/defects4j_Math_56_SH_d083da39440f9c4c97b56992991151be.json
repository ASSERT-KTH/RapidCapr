{
    "patch": "        int remaining = index;\n        for (int i = 0; i < indices.length; i++) {\n            int maxCount = uniCounter[i] - 1;\n            int j = maxCount;\n            while (remaining - uniCounterOffset[i] > 0) {\n                j--;\n                remaining -= uniCounterOffset[i];\n            }\n            indices[i] = j;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..d14edfcdb 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,16 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n+        int remaining = index;\n+        for (int i = 0; i < indices.length; i++) {\n+            int maxCount = uniCounter[i] - 1;\n+            int j = maxCount;\n+            while (remaining - uniCounterOffset[i] > 0) {\n+                j--;\n+                remaining -= uniCounterOffset[i];\n+            }\n+            indices[i] = j;\n         }\n-        --idx;\n-        indices[last] = idx;\n \n         return indices;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}