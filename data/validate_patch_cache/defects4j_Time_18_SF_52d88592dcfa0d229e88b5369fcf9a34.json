{
    "patch": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        // Assume date is Gregorian.\n        long instant;\n        boolean isGregorian = true;\n        if (year < 1582 || (year == 1582 && (monthOfYear < 10 || (monthOfYear == 10 && dayOfMonth < 15)))) {\n            // Date is Julian\n            instant = iJulianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            isGregorian = false;\n        } else {\n            instant = iGregorianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        if (instant < iCutoverMillis) {\n            // Maybe it's the other calendar system.\n            if (isGregorian) {\n                // Date is Gregorian, try Julian.\n                instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                if (instant >= iCutoverMillis) {\n                    // Okay, it's in the illegal cutover gap.\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n            } else {\n                // Date is Julian, try Gregorian.\n                instant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                if (instant < iCutoverMillis) {\n                    // Okay, it's in the illegal cutover gap.\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n            }\n        }\n        return instant;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 29e559d4..566a7d93 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -346,7 +346,6 @@ public final class GJChronology extends AssembledChronology {\n         }\n         return instant;\n     }\n-\n     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                   int hourOfDay, int minuteOfHour,\n                                   int secondOfMinute, int millisOfSecond)\n@@ -361,17 +360,39 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n+        boolean isGregorian = true;\n+        if (year < 1582 || (year == 1582 && (monthOfYear < 10 || (monthOfYear == 10 && dayOfMonth < 15)))) {\n+            // Date is Julian\n+            instant = iJulianChronology.getDateTimeMillis\n+            (year, monthOfYear, dayOfMonth,\n+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+            isGregorian = false;\n+        } else {\n             instant = iGregorianChronology.getDateTimeMillis\n+            (year, monthOfYear, dayOfMonth,\n+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n+        }\n+\n+        if (instant < iCutoverMillis) {\n+            // Maybe it's the other calendar system.\n+            if (isGregorian) {\n+                // Date is Gregorian, try Julian.\n+                instant = iJulianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        if (instant < iCutoverMillis) {\n-            // Maybe it's Julian.\n-            instant = iJulianChronology.getDateTimeMillis\n+                if (instant >= iCutoverMillis) {\n+                    // Okay, it's in the illegal cutover gap.\n+                    throw new IllegalArgumentException(\"Specified date does not exist\");\n+                }\n+            } else {\n+                // Date is Julian, try Gregorian.\n+                instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                // Okay, it's in the illegal cutover gap.\n-                throw new IllegalArgumentException(\"Specified date does not exist\");\n+                if (instant < iCutoverMillis) {\n+                    // Okay, it's in the illegal cutover gap.\n+                    throw new IllegalArgumentException(\"Specified date does not exist\");\n+                }\n             }\n         }\n         return instant;",
    "result_reason": "java.lang.IllegalArgumentException: Specified date does not exist",
    "test_result": "FAIL"
}