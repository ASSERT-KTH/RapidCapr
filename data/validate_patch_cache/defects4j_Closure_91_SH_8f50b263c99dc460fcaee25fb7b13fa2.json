{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (n.getParent() != null\n          && NodeUtil.isGet(n.getParent())\n          && NodeUtil.isGet(n.getParent().getParent())\n          && n.getParent().getParent().getType() == Token.ASSIGN\n          && NodeUtil.isGet(n.getParent().getParent().getFirstChild())\n          && \"prototype\".equals(\n              n.getParent().getParent().getFirstChild().getLastChild().getString()\n          )) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..08dd9d75 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,17 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (n.getParent() != null\n+          && NodeUtil.isGet(n.getParent())\n+          && NodeUtil.isGet(n.getParent().getParent())\n+          && n.getParent().getParent().getType() == Token.ASSIGN\n+          && NodeUtil.isGet(n.getParent().getParent().getFirstChild())\n+          && \"prototype\".equals(\n+              n.getParent().getParent().getFirstChild().getLastChild().getString()\n+          )) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}