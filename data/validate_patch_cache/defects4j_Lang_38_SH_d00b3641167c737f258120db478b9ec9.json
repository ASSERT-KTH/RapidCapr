{
    "patch": "        if (mTimeZoneForced) {\n            buf.append(calendar.getTimeInMillis());\n            TimeZone.setDefault(mTimeZone);\n            Date date = new Date(calendar.getTimeInMillis());\n            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n            buf.setLength(0);\n            buf.append(sdf.format(date));\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..13cd0a0a 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,14 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        if (mTimeZoneForced) {\n+            buf.append(calendar.getTimeInMillis());\n+            TimeZone.setDefault(mTimeZone);\n+            Date date = new Date(calendar.getTimeInMillis());\n+            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n+            buf.setLength(0);\n+            buf.append(sdf.format(date));\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<...-10-16T16:42:16.000Z[]> but was:<...-10-16T16:42:16.000Z[2009-10-16T16:42:16.000Z]>",
    "test_result": "FAIL"
}