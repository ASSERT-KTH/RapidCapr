{
    "patch": "      boolean isOverride = t.inGlobalScope() &&\n          (parent.getType() == Token.ASSIGN ||\n          parent.getType() == Token.CLASS_MEMBERS ||\n          parent.getType() == Token.EXPRESSION ||\n          parent.getType() == Token.FUNCTION ||\n          parent.getType() == Token.VAR);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..2f7a3294 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -414,6 +414,11 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n       boolean isOverride = t.inGlobalScope() &&\n+          (parent.getType() == Token.ASSIGN ||\n+          parent.getType() == Token.CLASS_MEMBERS ||\n+          parent.getType() == Token.EXPRESSION ||\n+          parent.getType() == Token.FUNCTION ||\n+          parent.getType() == Token.VAR);\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}