{
    "patch": "        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            int startIndex = getTimePeriodIndex(this.getDomain().getStart(), \n                    this.getDomainIsPointsInTime());\n            int endIndex = getTimePeriodIndex(this.getDomain().getEnd(), \n                    this.getDomainIsPointsInTime());\n            \n            if (startIndex == -1) {\n                // start is earlier than the data range...use first item\n                startIndex = 0;\n            }\n            if (endIndex == -1) {\n                // end is later than the data range...use last item\n                endIndex = this.data.size() - 1;\n            }\n            \n            startIndex = Math.max(start, startIndex);\n            endIndex = Math.min(end, endIndex);\n            \n            for (int index = startIndex; index <= endIndex; index++) {\n                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..0a4aacf 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,36 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        if (this.data.size() > 0) {\n+            int startIndex = getTimePeriodIndex(this.getDomain().getStart(), \n+                    this.getDomainIsPointsInTime());\n+            int endIndex = getTimePeriodIndex(this.getDomain().getEnd(), \n+                    this.getDomainIsPointsInTime());\n+            \n+            if (startIndex == -1) {\n+                // start is earlier than the data range...use first item\n+                startIndex = 0;\n+            }\n+            if (endIndex == -1) {\n+                // end is later than the data range...use last item\n+                endIndex = this.data.size() - 1;\n+            }\n+            \n+            startIndex = Math.max(start, startIndex);\n+            endIndex = Math.min(end, endIndex);\n+            \n+            for (int index = startIndex; index <= endIndex; index++) {\n+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+                try {\n+                    copy.add(clone);\n+                }\n+                catch (SeriesException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}