{
    "patch": "            try {\n                for (int i = 0; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                    if (i < count - 1 && savedFields[i].isSaved()) {\n                        DurationField conflict = savedFields[i].getField().getDurationField();\n                        int conflictIndex = findDifferingFieldIndex(savedFields, count, i + 1, conflict);\n                        if (conflictIndex >= 0) {\n                            throw new IllegalFieldValueException(conflict.getType(),\n                                \"Conflict found: \" + conflict.getFieldName());\n                        }\n                    }\n                }\n            } catch (IllegalFieldValueException e) {\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                throw e;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..65ae969b 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,24 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            try {\n+                for (int i = 0; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                    if (i < count - 1 && savedFields[i].isSaved()) {\n+                        DurationField conflict = savedFields[i].getField().getDurationField();\n+                        int conflictIndex = findDifferingFieldIndex(savedFields, count, i + 1, conflict);\n+                        if (conflictIndex >= 0) {\n+                            throw new IllegalFieldValueException(conflict.getType(),\n+                                \"Conflict found: \" + conflict.getFieldName());\n+                        }\n+                    }\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                throw e;\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}