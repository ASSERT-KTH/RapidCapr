{
    "patch": "int padLen = width - strLen;\nif (padLen <= 0) {\n    return this.append(str);\n} else if (padLen > 1) {\n    Arrays.fill(buffer, size + strLen, size + width, padChar);\n} else {\n    buffer[size + strLen] = padChar;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java\nindex 886d424e..8318fdb8 100644\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n@@ -881,7 +881,14 @@ public class StrBuilder implements Cloneable {\n             String str = (obj == null ? getNullText() : obj.toString());\n             int strLen = str.length();\n             if (strLen >= width) {\n-                str.getChars(0, strLen, buffer, size);\n+int padLen = width - strLen;\n+if (padLen <= 0) {\n+    return this.append(str);\n+} else if (padLen > 1) {\n+    Arrays.fill(buffer, size + strLen, size + width, padChar);\n+} else {\n+    buffer[size + strLen] = padChar;\n+}\n             } else {\n                 int padLen = width - strLen;\n                 str.getChars(0, strLen, buffer, size);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}