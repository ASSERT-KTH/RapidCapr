{
    "patch": "public void escape(Writer writer, String str) throws IOException {\n    int len = str.length();\n    int i = 0;\n    while (i < len) {\n        char c = str.charAt(i);\n        String entityName = this.entityName(c);\n        if (entityName != null) {\n            writer.write('&');\n            writer.write(entityName);\n            writer.write(';');\n        } else if (c >= 0xD800 && c <= 0xDBFF && i + 1 < len) { // high surrogate\n            char d = str.charAt(i + 1);\n            int cp = Character.toCodePoint(c, d);\n            writer.write(\"&#\");\n            writer.write(Integer.toString(cp, 10));\n            writer.write(';');\n            i += 2;\n        } else if (c >= 0xDC00 && c <= 0xDFFF) { // low surrogate\n            writer.write(\"&#\"); // error\n            writer.write(Integer.toString(c, 10));\n            writer.write(';');\n            i++;\n        } else if (c > 0x7F) {\n            writer.write(\"&#\");\n            writer.write(Integer.toString(c, 10));\n            writer.write(';');\n        } else {\n            writer.write(c);\n        }\n        i++;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java\nindex 900e1a89..bebe0177 100644\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n@@ -822,26 +822,38 @@ class Entities {\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void escape(Writer writer, String str) throws IOException {\n-        int len = str.length();\n-        for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n-            String entityName = this.entityName(c);\n-            if (entityName == null) {\n-                if (c > 0x7F) {\n-                    writer.write(\"&#\");\n-                    writer.write(Integer.toString(c, 10));\n-                    writer.write(';');\n-                } else {\n-                    writer.write(c);\n-                }\n-            } else {\n-                writer.write('&');\n-                writer.write(entityName);\n-                writer.write(';');\n-            }\n+public void escape(Writer writer, String str) throws IOException {\n+    int len = str.length();\n+    int i = 0;\n+    while (i < len) {\n+        char c = str.charAt(i);\n+        String entityName = this.entityName(c);\n+        if (entityName != null) {\n+            writer.write('&');\n+            writer.write(entityName);\n+            writer.write(';');\n+        } else if (c >= 0xD800 && c <= 0xDBFF && i + 1 < len) { // high surrogate\n+            char d = str.charAt(i + 1);\n+            int cp = Character.toCodePoint(c, d);\n+            writer.write(\"&#\");\n+            writer.write(Integer.toString(cp, 10));\n+            writer.write(';');\n+            i += 2;\n+        } else if (c >= 0xDC00 && c <= 0xDFFF) { // low surrogate\n+            writer.write(\"&#\"); // error\n+            writer.write(Integer.toString(c, 10));\n+            writer.write(';');\n+            i++;\n+        } else if (c > 0x7F) {\n+            writer.write(\"&#\");\n+            writer.write(Integer.toString(c, 10));\n+            writer.write(';');\n+        } else {\n+            writer.write(c);\n         }\n+        i++;\n     }\n+}\n \n     /**\n      * <p>",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}