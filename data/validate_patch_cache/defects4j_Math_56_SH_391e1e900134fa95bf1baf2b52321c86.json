{
    "patch": "        int idx = 1;\n        while (count < index) {\n            count += idx;\n            ++idx;\n        }\n        --idx;\n        int remaining = index - count + idx;\n        for (int i = 0; i < dimension; ++i) {\n            indices[i] = (remaining - 1) % uniCounter[i];\n            remaining = (remaining - indices[i]) / uniCounter[i] + 1;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..89a678ac0 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -240,7 +240,11 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             ++idx;\n         }\n         --idx;\n-        indices[last] = idx;\n+        int remaining = index - count + idx;\n+        for (int i = 0; i < dimension; ++i) {\n+            indices[i] = (remaining - 1) % uniCounter[i];\n+            remaining = (remaining - indices[i]) / uniCounter[i] + 1;\n+        }\n \n         return indices;\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}