{
    "patch": "import org.apache.commons.math3.distribution.TDistribution;\nimport org.apache.commons.math3.distribution.TDistributionImpl;\nimport org.apache.commons.math3.distribution.NormalDistribution;\n\npublic RealMatrix getCorrelationPValues(double alpha) throws MathException {\n    TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n    int nVars = correlationMatrix.getColumnDimension();\n    double[][] out = new double[nVars][nVars];\n    for (int i = 0; i < nVars; i++) {\n        for (int j = 0; j < nVars; j++) {\n            if (i == j) {\n                out[i][j] = 0d;\n            } else {\n                double r = correlationMatrix.getEntry(i, j);\n                double dof = nObs - 2;\n                double mult = new TDistribution(dof).inverseCumulativeProbability(1.0 - alpha/2);\n                double se = Math.sqrt((1 - r * r) / dof);\n                double z = Math.abs(r) / se;\n                double p = 2 * (1 - new NormalDistribution().cumulativeProbability(z));\n                out[i][j] = p;\n            }\n        }\n    }\n    return new Array2DRowRealMatrix(out);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..9cafd62b1 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,31 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+import org.apache.commons.math3.distribution.TDistribution;\n+import org.apache.commons.math3.distribution.TDistributionImpl;\n+import org.apache.commons.math3.distribution.NormalDistribution;\n+\n+public RealMatrix getCorrelationPValues(double alpha) throws MathException {\n+    TDistribution tDistribution = new TDistributionImpl(nObs - 2);\n+    int nVars = correlationMatrix.getColumnDimension();\n+    double[][] out = new double[nVars][nVars];\n+    for (int i = 0; i < nVars; i++) {\n+        for (int j = 0; j < nVars; j++) {\n+            if (i == j) {\n+                out[i][j] = 0d;\n+            } else {\n+                double r = correlationMatrix.getEntry(i, j);\n+                double dof = nObs - 2;\n+                double mult = new TDistribution(dof).inverseCumulativeProbability(1.0 - alpha/2);\n+                double se = Math.sqrt((1 - r * r) / dof);\n+                double z = Math.abs(r) / se;\n+                double p = 2 * (1 - new NormalDistribution().cumulativeProbability(z));\n+                out[i][j] = p;\n+            }\n+        }\n+    }\n+    return new Array2DRowRealMatrix(out);\n+}\n                 }\n             }\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}