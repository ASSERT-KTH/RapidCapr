{
    "patch": "public Paint getPaint(double value) {\n    double clampedValue = Math.max(lowerBound, Math.min(upperBound, value));\n    int grayColor = (int) Math.round((clampedValue - lowerBound) / (upperBound - lowerBound) * 255);\n\n    if (grayColor < 0) {\n        grayColor = 0;\n    } else if (grayColor > 255) {\n        grayColor = 255;\n    }\n\n    return new Color(grayColor, grayColor, grayColor);\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/GrayPaintScale.java b/source/org/jfree/chart/renderer/GrayPaintScale.java\nindex 1e1e075..a5bd6f3 100644\n--- a/source/org/jfree/chart/renderer/GrayPaintScale.java\n+++ b/source/org/jfree/chart/renderer/GrayPaintScale.java\n@@ -120,13 +120,18 @@ public class GrayPaintScale\n      * \n      * @return A paint for the specified value.\n      */\n-    public Paint getPaint(double value) {\n-        double v = Math.max(value, this.lowerBound);\n-        v = Math.min(v, this.upperBound);\n-        int g = (int) ((value - this.lowerBound) / (this.upperBound \n-                - this.lowerBound) * 255.0);\n-        return new Color(g, g, g);\n-    }\n+public Paint getPaint(double value) {\n+    double clampedValue = Math.max(lowerBound, Math.min(upperBound, value));\n+    int grayColor = (int) Math.round((clampedValue - lowerBound) / (upperBound - lowerBound) * 255);\n+\n+    if (grayColor < 0) {\n+        grayColor = 0;\n+    } else if (grayColor > 255) {\n+        grayColor = 255;\n+    }\n+\n+    return new Color(grayColor, grayColor, grayColor);\n+}\n     \n     /**\n      * Tests this <code>GrayPaintScale</code> instance for equality with an",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}