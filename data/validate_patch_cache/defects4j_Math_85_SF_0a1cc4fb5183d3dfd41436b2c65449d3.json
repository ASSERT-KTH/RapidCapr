{
    "patch": "    public static double[] bracket(UnivariateRealFunction function,\n                                   double initial, double lowerBound, double upperBound,\n                                   int maximumIterations) throws ConvergenceException,\n            FunctionEvaluationException {\n\n        if (function == null) {\n            throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n        }\n        if (maximumIterations <= 0) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                    \"bad value for maximum iterations number: {0}\", maximumIterations);\n        }\n        if (initial <= lowerBound || initial >= upperBound) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                    \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                    lowerBound, initial, upperBound);\n        }\n\n        double a = initial;\n        double b = initial;\n        double fa;\n        double fb;\n        int numIterations = 0;\n\n        do {\n            double previousA = a;\n            double previousB = b;\n            fa = function.value(a);\n            fb = function.value(b);\n            if (fa * fb > 0.0) {\n                if (Math.abs(fa) < Math.abs(fb)) {\n                    a = Math.max(a - 1.234567901234568, lowerBound);\n                    fa = function.value(a);\n                } else {\n                    b = Math.min(b + 1.234567901234568, upperBound);\n                    fb = function.value(b);\n                }\n            }\n            numIterations++;\n            if (numIterations >= maximumIterations) {\n                throw new ConvergenceException(\"maximum number of iterations exceeded\");\n            }\n            if (fa * fb <= 0.0) {\n                break;\n            }\n        } while ((a > lowerBound) || (b < upperBound));\n\n        if (fa * fb > 0.0) {\n            throw new ConvergenceException(\n                    \"number of iterations={0}, maximum iterations={1}, \" +\n                            \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                            \"final b value={6}, f(a)={7}, f(b)={8}\",\n                    numIterations, maximumIterations, initial,\n                    lowerBound, upperBound, a, b, fa, fb);\n        }\n\n        return new double[]{a, b};\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\nindex bf3e4bf53..2597c634f 100644\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n@@ -163,47 +163,61 @@ public class UnivariateRealSolverUtils {\n      * is not positive, or initial is not between lowerBound and upperBound\n      */\n     public static double[] bracket(UnivariateRealFunction function,\n-            double initial, double lowerBound, double upperBound, \n-            int maximumIterations) throws ConvergenceException, \n+                                   double initial, double lowerBound, double upperBound,\n+                                   int maximumIterations) throws ConvergenceException,\n             FunctionEvaluationException {\n-        \n+\n         if (function == null) {\n             throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n         }\n-        if (maximumIterations <= 0)  {\n+        if (maximumIterations <= 0) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                  \"bad value for maximum iterations number: {0}\", maximumIterations);\n+                    \"bad value for maximum iterations number: {0}\", maximumIterations);\n         }\n-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n+        if (initial <= lowerBound || initial >= upperBound) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                  \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n-                  lowerBound, initial, upperBound);\n+                    \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+                    lowerBound, initial, upperBound);\n         }\n+\n         double a = initial;\n         double b = initial;\n         double fa;\n         double fb;\n-        int numIterations = 0 ;\n-    \n+        int numIterations = 0;\n+\n         do {\n-            a = Math.max(a - 1.0, lowerBound);\n-            b = Math.min(b + 1.0, upperBound);\n+            double previousA = a;\n+            double previousB = b;\n             fa = function.value(a);\n-            \n             fb = function.value(b);\n-            numIterations++ ;\n-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n-                ((a > lowerBound) || (b < upperBound)));\n-   \n-        if (fa * fb >= 0.0 ) {\n+            if (fa * fb > 0.0) {\n+                if (Math.abs(fa) < Math.abs(fb)) {\n+                    a = Math.max(a - 1.234567901234568, lowerBound);\n+                    fa = function.value(a);\n+                } else {\n+                    b = Math.min(b + 1.234567901234568, upperBound);\n+                    fb = function.value(b);\n+                }\n+            }\n+            numIterations++;\n+            if (numIterations >= maximumIterations) {\n+                throw new ConvergenceException(\"maximum number of iterations exceeded\");\n+            }\n+            if (fa * fb <= 0.0) {\n+                break;\n+            }\n+        } while ((a > lowerBound) || (b < upperBound));\n+\n+        if (fa * fb > 0.0) {\n             throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n+                    \"number of iterations={0}, maximum iterations={1}, \" +\n+                            \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n+                            \"final b value={6}, f(a)={7}, f(b)={8}\",\n+                    numIterations, maximumIterations, initial,\n+                    lowerBound, upperBound, a, b, fa, fb);\n         }\n-        \n+\n         return new double[]{a, b};\n     }\n ",
    "result_reason": "Test timed out after 600 seconds",
    "test_result": "ERROR"
}