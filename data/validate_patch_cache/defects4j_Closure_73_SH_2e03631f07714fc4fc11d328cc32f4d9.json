{
    "patch": "if (c > 0x7f) {\n  appendHexJavaScriptRepresentation(sb, c);\n} else if (c > 0x1f || c == '\\t') {\n  sb.append(c);\n} else {\n  switch(c) {\n    case '\\n': sb.append(\"\\\\n\"); break;\n    case '\\r': sb.append(\"\\\\r\"); break;\n    case '\\f': sb.append(\"\\\\f\"); break;\n    case '\\b': sb.append(\"\\\\b\"); break;\n    case '\\001': sb.append(\"\\\\1\"); break;\n    case '\\002': sb.append(\"\\\\2\"); break;\n    case '\\003': sb.append(\"\\\\3\"); break;\n    case '\\004': sb.append(\"\\\\4\"); break;\n    case '\\005': sb.append(\"\\\\5\"); break;\n    case '\\006': sb.append(\"\\\\6\"); break;\n    case '\\7': sb.append(\"\\\\7\"); break;\n    default: appendHexJavaScriptRepresentation(sb, c);\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..af73e628 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,26 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+if (c > 0x7f) {\n+  appendHexJavaScriptRepresentation(sb, c);\n+} else if (c > 0x1f || c == '\\t') {\n+  sb.append(c);\n+} else {\n+  switch(c) {\n+    case '\\n': sb.append(\"\\\\n\"); break;\n+    case '\\r': sb.append(\"\\\\r\"); break;\n+    case '\\f': sb.append(\"\\\\f\"); break;\n+    case '\\b': sb.append(\"\\\\b\"); break;\n+    case '\\001': sb.append(\"\\\\1\"); break;\n+    case '\\002': sb.append(\"\\\\2\"); break;\n+    case '\\003': sb.append(\"\\\\3\"); break;\n+    case '\\004': sb.append(\"\\\\4\"); break;\n+    case '\\005': sb.append(\"\\\\5\"); break;\n+    case '\\006': sb.append(\"\\\\6\"); break;\n+    case '\\7': sb.append(\"\\\\7\"); break;\n+    default: appendHexJavaScriptRepresentation(sb, c);\n+  }\n+}\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}