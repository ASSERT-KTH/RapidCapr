{
    "patch": "if (chars[i] == 'l' || chars[i] == 'L') {\n    // not allowing L with an exponent or decimal point\n    if (hasExp || hasDecPoint) {\n        return false;\n    }\n    // last character is legal if at least one digit other than \"0\" was found before it\n    if (foundDigit) {\n        for (int j = start; j < sz; j++) {\n            if (chars[j] != '0' && chars[j] != '+' && chars[j] != '-') {\n                return i == sz;\n            }\n        }\n    }\n    return false;\n}\n// last character is illegal if it has an exponent or decimal point\nreturn foundDigit && !hasExp && !hasDecPoint;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 4a1d8459..a1d1ecf1 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -1410,7 +1410,23 @@ public class NumberUtils {\n             if (chars[i] == 'l'\n                 || chars[i] == 'L') {\n                 // not allowing L with an exponent or decimal point\n-                return foundDigit && !hasExp;\n+if (chars[i] == 'l' || chars[i] == 'L') {\n+    // not allowing L with an exponent or decimal point\n+    if (hasExp || hasDecPoint) {\n+        return false;\n+    }\n+    // last character is legal if at least one digit other than \"0\" was found before it\n+    if (foundDigit) {\n+        for (int j = start; j < sz; j++) {\n+            if (chars[j] != '0' && chars[j] != '+' && chars[j] != '-') {\n+                return i == sz;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+// last character is illegal if it has an exponent or decimal point\n+return foundDigit && !hasExp && !hasDecPoint;\n             }\n             // last character is illegal\n             return false;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}