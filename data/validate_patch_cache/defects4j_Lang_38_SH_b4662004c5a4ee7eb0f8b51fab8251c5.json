{
    "patch": "if (mTimeZoneForced) {\n    long currentTimeInMillis = calendar.getTimeInMillis();\n    int offsetInMillis = mTimeZone.getOffset(currentTimeInMillis);\n    int currentOffset = calendar.getTimeZone().getOffset(currentTimeInMillis);\n    if (offsetInMillis != currentOffset) {\n        calendar.setTimeZone(mTimeZone);\n        currentTimeInMillis += (currentOffset - offsetInMillis);\n        calendar.setTimeInMillis(currentTimeInMillis);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..9169f367 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,16 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    long currentTimeInMillis = calendar.getTimeInMillis();\n+    int offsetInMillis = mTimeZone.getOffset(currentTimeInMillis);\n+    int currentOffset = calendar.getTimeZone().getOffset(currentTimeInMillis);\n+    if (offsetInMillis != currentOffset) {\n+        calendar.setTimeZone(mTimeZone);\n+        currentTimeInMillis += (currentOffset - offsetInMillis);\n+        calendar.setTimeInMillis(currentTimeInMillis);\n+    }\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08]:42:16.000Z>",
    "test_result": "FAIL"
}