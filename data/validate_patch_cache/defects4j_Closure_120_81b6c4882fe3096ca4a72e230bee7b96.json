{
    "patch": "        if (block.isFunction) {\n            Set<BasicBlock> visitedBlocks = new HashSet<>();\n            visitedBlocks.add(block);\n            Deque<BasicBlock> queue = new ArrayDeque<>(block.getUniqueSuccessors());\n            while (!queue.isEmpty()) {\n                BasicBlock nextBlock = queue.removeFirst();\n                if (!visitedBlocks.contains(nextBlock)) {\n                    visitedBlocks.add(nextBlock);\n                    if (nextBlock.isLoop) {\n                        return false;\n                    }\n                    queue.addAll(nextBlock.getUniqueSuccessors());\n                }\n            }\n            break;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\nindex cdacc5f7..dc851cc6 100644\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n@@ -428,6 +428,22 @@ class ReferenceCollectingCallback implements ScopedCallback,\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+        if (block.isFunction) {\n+            Set<BasicBlock> visitedBlocks = new HashSet<>();\n+            visitedBlocks.add(block);\n+            Deque<BasicBlock> queue = new ArrayDeque<>(block.getUniqueSuccessors());\n+            while (!queue.isEmpty()) {\n+                BasicBlock nextBlock = queue.removeFirst();\n+                if (!visitedBlocks.contains(nextBlock)) {\n+                    visitedBlocks.add(nextBlock);\n+                    if (nextBlock.isLoop) {\n+                        return false;\n+                    }\n+                    queue.addAll(nextBlock.getUniqueSuccessors());\n+                }\n+            }\n+            break;\n+        }\n           break;\n         } else if (block.isLoop) {\n           return false;",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}