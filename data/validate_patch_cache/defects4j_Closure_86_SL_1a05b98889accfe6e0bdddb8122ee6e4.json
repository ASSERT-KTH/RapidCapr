{
    "patch": "...\ncase Token.NEW:\n  // TODO(nicksantos): This needs to be changed so that it\n  // returns true iff we're sure the value was never aliased from inside\n  // the constructor (similar to callHasLocalResult)\n  break;\ncase Token.FUNCTION:\n  // Functions are always local values.\n  return true;\ncase Token.REGEXP:\ncase Token.ARRAYLIT:\ncase Token.OBJECTLIT:\n  // Literal objects with non-literal children are allowed.\n  return true;\n...",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex dd78f900..7e927337 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -2462,7 +2462,21 @@ public final class NodeUtil {\n         // TODO(nicksantos): This needs to be changed so that it\n         // returns true iff we're sure the value was never aliased from inside\n         // the constructor (similar to callHasLocalResult)\n-        return true;\n+...\n+case Token.NEW:\n+  // TODO(nicksantos): This needs to be changed so that it\n+  // returns true iff we're sure the value was never aliased from inside\n+  // the constructor (similar to callHasLocalResult)\n+  break;\n+case Token.FUNCTION:\n+  // Functions are always local values.\n+  return true;\n+case Token.REGEXP:\n+case Token.ARRAYLIT:\n+case Token.OBJECTLIT:\n+  // Literal objects with non-literal children are allowed.\n+  return true;\n+...\n       case Token.FUNCTION:\n       case Token.REGEXP:\n       case Token.ARRAYLIT:",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}