{
    "patch": "// No charsetEncoder provided - pass straight latin characters\n// through, and escape the rest.\nif (c > 0x1f && c <= 0x7e) {\n  // ASCII\n  if (c == quote || c == '\\\\') {\n    sb.append('\\\\');\n  }\n  sb.append(c);\n} else if (c <= 0xff && outputCharsetEncoder == null) {\n  // No CharsetEncoder provided\n  sb.append(\"\\\\x\");\n  sb.append(Character.forDigit(c >> 4, 16));\n  sb.append(Character.forDigit(c & 0xf, 16));\n} else {\n  // Unicode escape\n  appendHexJavaScriptRepresentation(sb, c);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..0851767d 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,23 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+// No charsetEncoder provided - pass straight latin characters\n+// through, and escape the rest.\n+if (c > 0x1f && c <= 0x7e) {\n+  // ASCII\n+  if (c == quote || c == '\\\\') {\n+    sb.append('\\\\');\n+  }\n+  sb.append(c);\n+} else if (c <= 0xff && outputCharsetEncoder == null) {\n+  // No CharsetEncoder provided\n+  sb.append(\"\\\\x\");\n+  sb.append(Character.forDigit(c >> 4, 16));\n+  sb.append(Character.forDigit(c & 0xf, 16));\n+} else {\n+  // Unicode escape\n+  appendHexJavaScriptRepresentation(sb, c);\n+}\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}