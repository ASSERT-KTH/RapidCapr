{
    "patch": "if (start >= end && (chars == null || chars.length == 0)) {\n    throw new IllegalArgumentException(\"bound must be greater than start\");\n}\nint gap = end - start;\nif (chars != null && chars.length > 0 && gap > 0) {\n    for (int i = 0; i < buffer.length; i++) {\n        buffer[i] = chars[random.nextInt(chars.length)];\n    }\n} else {\n    while (count-- != 0) {\n        char ch;\n        if (chars == null || chars.length == 0) {\n            ch = (char) (random.nextInt(gap) + start);\n        } else {\n            ch = chars[random.nextInt(chars.length)];\n        }\n        if (letters && Character.isLetter(ch)\n                || numbers && Character.isDigit(ch)\n                || !letters && !numbers) {\n            if (ch >= 56320 && ch <= 57343) {\n                if (count == 0) {\n                    count++;\n                } else {\n                    // low surrogate, insert high surrogate after putting it in\n                    buffer[count] = ch;\n                    count--;\n                    buffer[count] = (char) (55296 + random.nextInt(128));\n                }\n            } else if (ch >= 55296 && ch <= 56191) {\n                if (count == 0) {\n                    count++;\n                } else {\n                    // high surrogate, insert low surrogate before putting it in\n                    buffer[count] = (char) (56320 + random.nextInt(128));\n                    count--;\n                    buffer[count] = ch;\n                }\n            } else if (ch >= 56192 && ch <= 56319) {\n                // private high surrogate, no effing clue, so skip it\n                count++;\n            } else {\n                buffer[count] = ch;\n            }\n        } else {\n            count++;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..127a6e77 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,54 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+if (start >= end && (chars == null || chars.length == 0)) {\n+    throw new IllegalArgumentException(\"bound must be greater than start\");\n+}\n+int gap = end - start;\n+if (chars != null && chars.length > 0 && gap > 0) {\n+    for (int i = 0; i < buffer.length; i++) {\n+        buffer[i] = chars[random.nextInt(chars.length)];\n+    }\n+} else {\n+    while (count-- != 0) {\n+        char ch;\n+        if (chars == null || chars.length == 0) {\n+            ch = (char) (random.nextInt(gap) + start);\n+        } else {\n+            ch = chars[random.nextInt(chars.length)];\n+        }\n+        if (letters && Character.isLetter(ch)\n+                || numbers && Character.isDigit(ch)\n+                || !letters && !numbers) {\n+            if (ch >= 56320 && ch <= 57343) {\n+                if (count == 0) {\n+                    count++;\n+                } else {\n+                    // low surrogate, insert high surrogate after putting it in\n+                    buffer[count] = ch;\n+                    count--;\n+                    buffer[count] = (char) (55296 + random.nextInt(128));\n+                }\n+            } else if (ch >= 55296 && ch <= 56191) {\n+                if (count == 0) {\n+                    count++;\n+                } else {\n+                    // high surrogate, insert low surrogate before putting it in\n+                    buffer[count] = (char) (56320 + random.nextInt(128));\n+                    count--;\n+                    buffer[count] = ch;\n+                }\n+            } else if (ch >= 56192 && ch <= 56319) {\n+                // private high surrogate, no effing clue, so skip it\n+                count++;\n+            } else {\n+                buffer[count] = ch;\n+            }\n+        } else {\n+            count++;\n+        }\n+    }\n+}\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}