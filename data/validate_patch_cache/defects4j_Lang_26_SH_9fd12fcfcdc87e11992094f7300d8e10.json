{
    "patch": "Calendar c = new GregorianCalendar(mTimeZone, getLocale());\nc.setMinimalDaysInFirstWeek(4);\nc.setFirstDayOfWeek(Calendar.MONDAY);\nc.setTime(date);\nint year = c.get(Calendar.YEAR);\nint weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\nif (weekOfYear == 1 && c.get(Calendar.MONTH) == Calendar.DECEMBER) {\n    weekOfYear = 53;\n} else if (weekOfYear >= 52 && c.get(Calendar.MONTH) == Calendar.JANUARY) {\n    weekOfYear = 0;\n}\nif (weekOfYear == 0) {\n    c.set(Calendar.YEAR, year-1);\n    c.set(Calendar.WEEK_OF_YEAR, 52);\n    weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n} else if (weekOfYear == 53) {\n    c.set(Calendar.YEAR, year+1);\n    c.set(Calendar.WEEK_OF_YEAR, 1);\n    weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n}\nc.set(Calendar.YEAR, year);\nc.set(Calendar.WEEK_OF_YEAR, weekOfYear);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..d9dd9a36 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -817,7 +817,28 @@ public class FastDateFormat extends Format {\n      * @return the formatted string\n      */\n     public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n+Calendar c = new GregorianCalendar(mTimeZone, getLocale());\n+c.setMinimalDaysInFirstWeek(4);\n+c.setFirstDayOfWeek(Calendar.MONDAY);\n+c.setTime(date);\n+int year = c.get(Calendar.YEAR);\n+int weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n+if (weekOfYear == 1 && c.get(Calendar.MONTH) == Calendar.DECEMBER) {\n+    weekOfYear = 53;\n+} else if (weekOfYear >= 52 && c.get(Calendar.MONTH) == Calendar.JANUARY) {\n+    weekOfYear = 0;\n+}\n+if (weekOfYear == 0) {\n+    c.set(Calendar.YEAR, year-1);\n+    c.set(Calendar.WEEK_OF_YEAR, 52);\n+    weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n+} else if (weekOfYear == 53) {\n+    c.set(Calendar.YEAR, year+1);\n+    c.set(Calendar.WEEK_OF_YEAR, 1);\n+    weekOfYear = c.get(Calendar.WEEK_OF_YEAR);\n+}\n+c.set(Calendar.YEAR, year);\n+c.set(Calendar.WEEK_OF_YEAR, weekOfYear);\n         c.setTime(date);\n         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}