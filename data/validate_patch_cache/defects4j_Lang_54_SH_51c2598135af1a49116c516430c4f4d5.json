{
    "patch": "        if (len == 2) {\n            return new Locale(str, \"\");\n        } else if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else if (len >= 7) {\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (!isAlphaUpper(ch3) || !isAlphaUpper(ch4)) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 7) {\n                char ch5 = str.charAt(5);\n                char ch6 = str.charAt(6);\n                if (!isDigit(ch5) || !isDigit(ch6)) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(5));\n            } else if (len >= 9) {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    private static boolean isAlphaUpper(char ch) {\n        return ch >= 'A' && ch <= 'Z';\n    }\n    \n    private static boolean isDigit(char ch) {\n        return ch >= '0' && ch <= '9';\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..fdb41c9c 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,43 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        if (len == 2) {\n+            return new Locale(str, \"\");\n+        } else if (len == 5) {\n+            return new Locale(str.substring(0, 2), str.substring(3, 5));\n+        } else if (len >= 7) {\n+            if (str.charAt(2) != '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            char ch3 = str.charAt(3);\n+            char ch4 = str.charAt(4);\n+            if (!isAlphaUpper(ch3) || !isAlphaUpper(ch4)) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (len == 7) {\n+                char ch5 = str.charAt(5);\n+                char ch6 = str.charAt(6);\n+                if (!isDigit(ch5) || !isDigit(ch6)) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(5));\n+            } else if (len >= 9) {\n+                if (str.charAt(5) != '_') {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+    }\n+    \n+    private static boolean isAlphaUpper(char ch) {\n+        return ch >= 'A' && ch <= 'Z';\n+    }\n+    \n+    private static boolean isDigit(char ch) {\n+        return ch >= '0' && ch <= '9';\n+    }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}