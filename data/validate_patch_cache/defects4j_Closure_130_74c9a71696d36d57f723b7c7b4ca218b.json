{
    "patch": "    if (name.globalSets == 1 && name.localSets == 0 &&\n        name.aliasingGets == 0 && name.props != null) {\n      // {@code name} meets condition (a) and has no aliases, so it can be\n      // inlined.\n      for (Name prop : name.props) {\n        inlinePropertyIfPossible(prop, namespace);\n      }\n      workList.addAll(name.props);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..947f9436 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,15 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+    if (name.globalSets == 1 && name.localSets == 0 &&\n+        name.aliasingGets == 0 && name.props != null) {\n+      // {@code name} meets condition (a) and has no aliases, so it can be\n+      // inlined.\n+      for (Name prop : name.props) {\n+        inlinePropertyIfPossible(prop, namespace);\n+      }\n+      workList.addAll(name.props);\n+    }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}