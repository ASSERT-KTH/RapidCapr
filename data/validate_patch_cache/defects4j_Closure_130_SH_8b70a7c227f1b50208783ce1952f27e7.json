{
    "patch": "      if (name.globalSets == 1 && name.localSets == 0 &&\n          name.aliasingGets == 0 && !name.isBleedingRed()) {\n        // {@code name} meets condition (a).\n        if (inlineNameIfPossible(name)) {\n          // The inlining succeeded, so remove {@code name} from the forest.\n          namespace.removeName(name);\n          // Since we've removed {@code name} from the forest, we can stop examining\n          // its descendants and move onto the next name in the worklist.\n          continue;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..0ba670de 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -170,6 +170,16 @@ class CollapseProperties implements CompilerPass {\n       }\n \n       if (name.globalSets == 1 && name.localSets == 0 &&\n+          name.aliasingGets == 0 && !name.isBleedingRed()) {\n+        // {@code name} meets condition (a).\n+        if (inlineNameIfPossible(name)) {\n+          // The inlining succeeded, so remove {@code name} from the forest.\n+          namespace.removeName(name);\n+          // Since we've removed {@code name} from the forest, we can stop examining\n+          // its descendants and move onto the next name in the worklist.\n+          continue;\n+        }\n+      }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}