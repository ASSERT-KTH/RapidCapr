{
    "patch": "if(Double.isNaN(x) && Double.isNaN(y)) {\n    return true;\n} else if (Double.isInfinite(x) || Double.isInfinite(y) || (x == 0 && y == 0)) {\n    return Double.doubleToRawLongBits(x) == Double.doubleToRawLongBits(y);\n} else {\n    final double eps = Math.ulp(Math.max(Math.abs(x), Math.abs(y)));\n    return Math.abs(x - y) <= eps;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..00a6a01d0 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -414,7 +414,14 @@ public final class MathUtils {\n      * @return {@code true} if the values are equal.\n      */\n     public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+if(Double.isNaN(x) && Double.isNaN(y)) {\n+    return true;\n+} else if (Double.isInfinite(x) || Double.isInfinite(y) || (x == 0 && y == 0)) {\n+    return Double.doubleToRawLongBits(x) == Double.doubleToRawLongBits(y);\n+} else {\n+    final double eps = Math.ulp(Math.max(Math.abs(x), Math.abs(y)));\n+    return Math.abs(x - y) <= eps;\n+}\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}