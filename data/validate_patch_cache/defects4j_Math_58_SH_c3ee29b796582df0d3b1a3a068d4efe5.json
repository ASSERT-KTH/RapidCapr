{
    "patch": "public double[] fit() {\n    final double[] guess = (new ParameterGuesser(getObservations())).guess();\n    try {\n        final double[] bestFit = new GaussianCurveFitter(new LevenbergMarquardtOptimizer())\n                .fit(getObservations().toList(), guess);\n        return new double[]{bestFit[1], bestFit[2], bestFit[0] / SQRT2};\n    } catch (final Exception e) {\n        return null;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..981d0aea6 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,16 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+public double[] fit() {\n+    final double[] guess = (new ParameterGuesser(getObservations())).guess();\n+    try {\n+        final double[] bestFit = new GaussianCurveFitter(new LevenbergMarquardtOptimizer())\n+                .fit(getObservations().toList(), guess);\n+        return new double[]{bestFit[1], bestFit[2], bestFit[0] / SQRT2};\n+    } catch (final Exception e) {\n+        return null;\n+    }\n+}\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}