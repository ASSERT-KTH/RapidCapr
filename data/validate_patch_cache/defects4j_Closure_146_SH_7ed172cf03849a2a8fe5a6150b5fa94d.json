{
    "patch": "if (this.isOnSharp()) {\n    if (!that.isOnSharp() && !that.isBottom()) {\n        return new TypePair(JSType.BOTTOM, JSType.BOTTOM);\n    }\n}\nif (this.isBottom()) {\n    if (!that.isBottom()) {\n        return new TypePair(JSType.BOTTOM, JSType.BOTTOM);\n    }\n}\nif (this == JSType.NO_TYPE) {\n    if (that != JSType.NO_TYPE) {\n        return new TypePair(JSType.BOTTOM, JSType.BOTTOM);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..145657fd 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,21 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+if (this.isOnSharp()) {\n+    if (!that.isOnSharp() && !that.isBottom()) {\n+        return new TypePair(JSType.BOTTOM, JSType.BOTTOM);\n+    }\n+}\n+if (this.isBottom()) {\n+    if (!that.isBottom()) {\n+        return new TypePair(JSType.BOTTOM, JSType.BOTTOM);\n+    }\n+}\n+if (this == JSType.NO_TYPE) {\n+    if (that != JSType.NO_TYPE) {\n+        return new TypePair(JSType.BOTTOM, JSType.BOTTOM);\n+    }\n+}\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}