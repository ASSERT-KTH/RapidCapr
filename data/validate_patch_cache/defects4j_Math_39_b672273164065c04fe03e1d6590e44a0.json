{
    "patch": "final double maxStep = 0.1 * (end - equations.getTime());\ndouble hNew = FastMath.min(maxStep, initializeStep(forward, getOrder(), scale,\n                       stepStart, y, yDotK[0], yTmp, yDotK[1]));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..eef5c845b 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,9 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+final double maxStep = 0.1 * (end - equations.getTime());\n+double hNew = FastMath.min(maxStep, initializeStep(forward, getOrder(), scale,\n+                       stepStart, y, yDotK[0], yTmp, yDotK[1]));\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}