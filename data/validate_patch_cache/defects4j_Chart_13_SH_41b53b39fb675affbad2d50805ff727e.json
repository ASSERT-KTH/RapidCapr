{
    "patch": "        if (this.rightBlock != null) {\n            RectangleConstraint c4 = new RectangleConstraint(0.0,\n                    new Range(0.0, Math.max(0.0, constraint.getWidth() - w[2] - w[3])),\n                    LengthConstraintType.RANGE, h[2], null,\n                    LengthConstraintType.FIXED);\n            Size2D size = this.rightBlock.arrange(g2, c4);\n            w[3] = size.width;\n        }",
    "patch_diff": "diff --git a/source/org/jfree/chart/block/BorderArrangement.java b/source/org/jfree/chart/block/BorderArrangement.java\nindex 730aeb3..e4cb172 100644\n--- a/source/org/jfree/chart/block/BorderArrangement.java\n+++ b/source/org/jfree/chart/block/BorderArrangement.java\n@@ -452,7 +452,14 @@ public class BorderArrangement implements Arrangement, Serializable {\n         h[3] = h[2];\n         if (this.rightBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(0.0,\n-                    new Range(0.0, constraint.getWidth() - w[2]),\n+        if (this.rightBlock != null) {\n+            RectangleConstraint c4 = new RectangleConstraint(0.0,\n+                    new Range(0.0, Math.max(0.0, constraint.getWidth() - w[2] - w[3])),\n+                    LengthConstraintType.RANGE, h[2], null,\n+                    LengthConstraintType.FIXED);\n+            Size2D size = this.rightBlock.arrange(g2, c4);\n+            w[3] = size.width;\n+        }\n                     LengthConstraintType.RANGE, h[2], null,\n                     LengthConstraintType.FIXED);\n             Size2D size = this.rightBlock.arrange(g2, c4);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}