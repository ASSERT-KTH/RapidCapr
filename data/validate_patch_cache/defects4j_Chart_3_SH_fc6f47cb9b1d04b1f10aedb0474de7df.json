{
    "patch": "import org.jfree.data.general.SeriesException;\nimport java.util.ArrayList;\n\npublic String generateToolTipFragment(String toolTipText) {\n    String htmlToolTip = toolTipText.replaceAll(\"\\\"\", \"&quot;\");\n    return \" title=\\\"\" + htmlToolTip + \"\\\" alt=\\\"\\\"\";\n}\n\npublic TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n    if (start < 0) {\n        throw new IllegalArgumentException(\"Requires start >= 0.\");\n    }\n    if (end < start) {\n        throw new IllegalArgumentException(\"Requires start <= end.\");\n    }\n    TimeSeries copy = (TimeSeries) super.clone();\n    copy.data = new ArrayList<>();\n    if (this.data.size() > 0) {\n        for (int index = start; index < this.data.size() && index <= end; index++) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            }\n            catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    return copy;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..74dd25e 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,37 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+import org.jfree.data.general.SeriesException;\n+import java.util.ArrayList;\n+\n+public String generateToolTipFragment(String toolTipText) {\n+    String htmlToolTip = toolTipText.replaceAll(\"\\\"\", \"&quot;\");\n+    return \" title=\\\"\" + htmlToolTip + \"\\\" alt=\\\"\\\"\";\n+}\n+\n+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {\n+    if (start < 0) {\n+        throw new IllegalArgumentException(\"Requires start >= 0.\");\n+    }\n+    if (end < start) {\n+        throw new IllegalArgumentException(\"Requires start <= end.\");\n+    }\n+    TimeSeries copy = (TimeSeries) super.clone();\n+    copy.data = new ArrayList<>();\n+    if (this.data.size() > 0) {\n+        for (int index = start; index < this.data.size() && index <= end; index++) {\n+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n+            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n+            try {\n+                copy.add(clone);\n+            }\n+            catch (SeriesException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    return copy;\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}