{
    "patch": "      JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n      Node parent = n.getParent();\n      if (functionJSDocInfo != null && parent != null\n          && parent.isGetProp()) {\n        JSType propType = getJSType(parent.getFirstChild());\n        if (propType != null && propType.isExplicitThisType()) {\n          report(t, n,\n              EXPLICIT_THIS_TYPE_MUST_BE_FIRST,\n              functionType.toString());\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..d5d827a4 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,17 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n+      Node parent = n.getParent();\n+      if (functionJSDocInfo != null && parent != null\n+          && parent.isGetProp()) {\n+        JSType propType = getJSType(parent.getFirstChild());\n+        if (propType != null && propType.isExplicitThisType()) {\n+          report(t, n,\n+              EXPLICIT_THIS_TYPE_MUST_BE_FIRST,\n+              functionType.toString());\n+        }\n+      }\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: variable functionJSDocInfo is already defined in method visitCall(NodeTraversal,Node)",
    "test_result": "ERROR"
}