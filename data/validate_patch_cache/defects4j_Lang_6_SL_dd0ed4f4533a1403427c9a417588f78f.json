{
    "patch": "    if (consumed != 0) {\n        pos += Character.charCount(Character.codePointAt(input, pos));\n    } else {\n        out.write(Character.toChars(Character.codePointAt(input, pos)));\n        pos++;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..f2d8c916 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,12 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+    if (consumed != 0) {\n+        pos += Character.charCount(Character.codePointAt(input, pos));\n+    } else {\n+        out.write(Character.toChars(Character.codePointAt(input, pos)));\n+        pos++;\n+    }\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: 2",
    "test_result": "FAIL"
}