{
    "patch": "public Object clone() throws CloneNotSupportedException {\n    int itemCount = getItemCount();\n    if (itemCount <= 0) {\n        return createCopy(0, 0);\n    }\n    int start = 0, end = itemCount - 1;\n    if (start > end) {\n        throw new IllegalArgumentException(\"Requires start <= end.\");\n    }\n    return createCopy(start, end);\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..16f9065 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -853,10 +853,17 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      * @throws CloneNotSupportedException not thrown by this class, but \n      *         subclasses may differ.\n      */\n-    public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n-        return clone;\n-    }\n+public Object clone() throws CloneNotSupportedException {\n+    int itemCount = getItemCount();\n+    if (itemCount <= 0) {\n+        return createCopy(0, 0);\n+    }\n+    int start = 0, end = itemCount - 1;\n+    if (start > end) {\n+        throw new IllegalArgumentException(\"Requires start <= end.\");\n+    }\n+    return createCopy(start, end);\n+}\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}