{
    "patch": "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n\n        Class<?> typeToMock = settings.getTypeToMock();\n        Class<?>[] extraInterfaces = settings.getExtraInterfaces();\n\n        List<Class<?>> allInterfaces = new ArrayList<>();\n        allInterfaces.add(typeToMock);\n        Collections.addAll(allInterfaces, extraInterfaces);\n\n        Class<?>[] interfaces = allInterfaces.toArray(new Class<?>[0]);\n\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(typeToMock, extraInterfaces);\n\n        T mockInstance = null;\n        try {\n            mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(typeToMock),\n                    \"  proxy instance class : \" + describeClass(mockInstance.getClass()),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ), cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\nindex 9dc44e663..6d66f3999 100644\n--- a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n+++ b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n@@ -20,15 +20,22 @@ public class ByteBuddyMockMaker implements MockMaker {\n         classInstantiator = initializeClassInstantiator();\n         cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();\n     }\n-\n     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n             throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n         }\n-        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n-                settings.getTypeToMock(),\n-                settings.getExtraInterfaces()\n-        );\n+\n+        Class<?> typeToMock = settings.getTypeToMock();\n+        Class<?>[] extraInterfaces = settings.getExtraInterfaces();\n+\n+        List<Class<?>> allInterfaces = new ArrayList<>();\n+        allInterfaces.add(typeToMock);\n+        Collections.addAll(allInterfaces, extraInterfaces);\n+\n+        Class<?>[] interfaces = allInterfaces.toArray(new Class<?>[0]);\n+\n+        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(typeToMock, extraInterfaces);\n+\n         T mockInstance = null;\n         try {\n             mockInstance = classInstantiator.instantiate(mockedProxyType);\n@@ -40,13 +47,13 @@ public class ByteBuddyMockMaker implements MockMaker {\n             throw new MockitoException(join(\n                     \"ClassCastException occurred while creating the mockito mock :\",\n                     \"  class to mock : \" + describeClass(mockedProxyType),\n-                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n-                    \"  proxy instance class : \" + describeClass(mockInstance),\n+                    \"  created class : \" + describeClass(typeToMock),\n+                    \"  proxy instance class : \" + describeClass(mockInstance.getClass()),\n                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                     \"\",\n                     \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                     \"\"\n-            ),cce);\n+            ), cce);\n         } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n             throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.5",
    "test_result": "ERROR"
}