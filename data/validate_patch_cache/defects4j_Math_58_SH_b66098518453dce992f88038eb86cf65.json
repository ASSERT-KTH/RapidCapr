{
    "patch": "    try {\n        return fit(new Gaussian.Parametric(), guess);\n    } catch (NotStrictlyPositiveException e) {\n        for (int i = 0; i < guess.length; ++i) {\n            if (guess[i] < 0) {\n                guess[i] = -guess[i];\n            }\n        }\n        return fit(new Gaussian.Parametric(), guess);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..e9dce6a1f 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,16 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n+    try {\n         return fit(new Gaussian.Parametric(), guess);\n+    } catch (NotStrictlyPositiveException e) {\n+        for (int i = 0; i < guess.length; ++i) {\n+            if (guess[i] < 0) {\n+                guess[i] = -guess[i];\n+            }\n+        }\n+        return fit(new Gaussian.Parametric(), guess);\n+    }\n     }\n \n     /**",
    "result_reason": "org.apache.commons.math.exception.NotStrictlyPositiveException: -1.277 is smaller than, or equal to, the minimum (0)",
    "test_result": "FAIL"
}