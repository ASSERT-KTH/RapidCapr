{
    "patch": "      Node jsDocParameter = jsDocParameters.getFirstChild();\n      // Go through all the declared arguments in the function statement\n      for (Node astParameter : astParameters.children()) {\n        // If there is a corresponding JSDocs parameter exists for the current function argument\n        if (jsDocParameter != null) {\n          defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n          jsDocParameter = jsDocParameter.getNext();\n        } else {\n          // There is no corresponding JSDocs parameter exists for the current function argument,\n          // this is an error, so return early.\n          return;\n        }\n      }\n      // This check is in case of excess JSDocs parameters exists that are not used by the function arguments.\n      if (jsDocParameter != null) {\n        report(JSError.make(jsDocParameter, FunctionTypeI.MISPLACED_PARAMETER_DOCUMENTATION));\n      } ",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..e983eb33 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1742,7 +1742,23 @@ final class TypedScopeCreator implements ScopeCreator {\n           for (Node astParameter : astParameters.children()) {\n             if (jsDocParameter != null) {\n               defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), true);\n+      Node jsDocParameter = jsDocParameters.getFirstChild();\n+      // Go through all the declared arguments in the function statement\n+      for (Node astParameter : astParameters.children()) {\n+        // If there is a corresponding JSDocs parameter exists for the current function argument\n+        if (jsDocParameter != null) {\n+          defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n+          jsDocParameter = jsDocParameter.getNext();\n+        } else {\n+          // There is no corresponding JSDocs parameter exists for the current function argument,\n+          // this is an error, so return early.\n+          return;\n+        }\n+      }\n+      // This check is in case of excess JSDocs parameters exists that are not used by the function arguments.\n+      if (jsDocParameter != null) {\n+        report(JSError.make(jsDocParameter, FunctionTypeI.MISPLACED_PARAMETER_DOCUMENTATION));\n+      } \n               jsDocParameter = jsDocParameter.getNext();\n             } else {\n               defineSlot(astParameter, functionNode, null, true);",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}