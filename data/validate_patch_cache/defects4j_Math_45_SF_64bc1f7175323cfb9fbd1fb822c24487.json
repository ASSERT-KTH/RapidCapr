{
    "patch": "public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n    if (rowDimension < 1 || columnDimension < 1) { // change to check for < 1 instead of < 0\n        throw new IllegalArgumentException(\"Matrix dimensions must be positive.\");\n    }\n    long size = (long) rowDimension * (long) columnDimension;\n    if (size > Integer.MAX_VALUE) {\n        throw new NumberIsTooLargeException(Long.valueOf(size), Integer.valueOf(Integer.MAX_VALUE), false);\n    }\n    this.rows = rowDimension;\n    this.columns = columnDimension;\n    this.entries = new OpenIntToDoubleHashMap(0.0);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..ba6b16850 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -45,12 +45,18 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      * @param rowDimension Number of rows of the matrix.\n      * @param columnDimension Number of columns of the matrix.\n      */\n-    public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n-        super(rowDimension, columnDimension);\n-        this.rows = rowDimension;\n-        this.columns = columnDimension;\n-        this.entries = new OpenIntToDoubleHashMap(0.0);\n+public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n+    if (rowDimension < 1 || columnDimension < 1) { // change to check for < 1 instead of < 0\n+        throw new IllegalArgumentException(\"Matrix dimensions must be positive.\");\n     }\n+    long size = (long) rowDimension * (long) columnDimension;\n+    if (size > Integer.MAX_VALUE) {\n+        throw new NumberIsTooLargeException(Long.valueOf(size), Integer.valueOf(Integer.MAX_VALUE), false);\n+    }\n+    this.rows = rowDimension;\n+    this.columns = columnDimension;\n+    this.entries = new OpenIntToDoubleHashMap(0.0);\n+}\n \n     /**\n      * Build a matrix by copying another one.",
    "result_reason": "java.lang.IllegalArgumentException: Matrix dimensions must be positive.",
    "test_result": "FAIL"
}