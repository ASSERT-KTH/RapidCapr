{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      // Skip the traversal of the function expression itself. This has to be separate from the\n      // check for function expressions immediately getting assigned to objects (covered later).\n      if (n.getParent().isGetProp() && n.getParent().getParent().isAssign()\n          && n == n.getParent().getNext()) {\n        return false;\n      }\n\n      // Don't traverse function expressions immediately getting assigned to objects.\n      if (n.getParent().isNew() && n.getParent().getParent().isAssign() && n == n.getParent().getNext()) {\n        return false;\n      }\n\n      return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..b93c34f4 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,20 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      // Skip the traversal of the function expression itself. This has to be separate from the\n+      // check for function expressions immediately getting assigned to objects (covered later).\n+      if (n.getParent().isGetProp() && n.getParent().getParent().isAssign()\n+          && n == n.getParent().getNext()) {\n+        return false;\n+      }\n+\n+      // Don't traverse function expressions immediately getting assigned to objects.\n+      if (n.getParent().isNew() && n.getParent().getParent().isAssign() && n == n.getParent().getNext()) {\n+        return false;\n+      }\n+\n+      return true;\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}