{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (Objects.equals(m, arg)) {\n        return true;\n    } else if (Objects.isNull(m) || Objects.isNull(arg)) {\n        return false;\n    } else {\n        try {\n            return StringDescription.toString(m).equals(arg.toString());\n        } catch (NullPointerException e) {\n            return false;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..a9d65691c 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,18 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n-    private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n-    }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (Objects.equals(m, arg)) {\n+        return true;\n+    } else if (Objects.isNull(m) || Objects.isNull(arg)) {\n+        return false;\n+    } else {\n+        try {\n+            return StringDescription.toString(m).equals(arg.toString());\n+        } catch (NullPointerException e) {\n+            return false;\n+        }\n+    }\n+}\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}