{
    "patch": "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n        Complex w = createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n        if (w == null) {\n            return createComplex(Double.NaN, Double.NaN);\n        }\n        return w;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..62c0673e4 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,6 +150,16 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+    public Complex add(Complex rhs)\n+        throws NullArgumentException {\n+        MathUtils.checkNotNull(rhs);\n+        Complex w = createComplex(real + rhs.getReal(),\n+            imaginary + rhs.getImaginary());\n+        if (w == null) {\n+            return createComplex(Double.NaN, Double.NaN);\n+        }\n+        return w;\n+    }\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}