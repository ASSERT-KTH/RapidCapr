{
    "patch": "if (!(v instanceof Comparable<?>)) {\n    throw new IllegalArgumentException();\n}\nint rank = getRank(v);\nint count = getCount();\nreturn rank == 0 || count == 0 ? 0.0 : (double) rank / count;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..1398fde09 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,12 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+if (!(v instanceof Comparable<?>)) {\n+    throw new IllegalArgumentException();\n+}\n+int rank = getRank(v);\n+int count = getCount();\n+return rank == 0 || count == 0 ? 0.0 : (double) rank / count;\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}