{
    "patch": "        int[] indices = new int[dimension];\n        int remainingIndex = index;\n        for (int i = last - 1; i >= 0; i--) {\n            int idx = remainingIndex / uniCounterOffset[i];\n            indices[i] = idx;\n            remainingIndex -= idx * uniCounterOffset[i];\n        }\n        return indices;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..bce045923 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,14 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n+        int[] indices = new int[dimension];\n+        int remainingIndex = index;\n+        for (int i = last - 1; i >= 0; i--) {\n+            int idx = remainingIndex / uniCounterOffset[i];\n+            indices[i] = idx;\n+            remainingIndex -= idx * uniCounterOffset[i];\n         }\n-        --idx;\n-        indices[last] = idx;\n+        return indices;\n \n         return indices;\n     }",
    "result_reason": "error: variable indices is already defined in method getCounts(int)",
    "test_result": "ERROR"
}