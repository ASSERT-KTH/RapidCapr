{
    "patch": "            MockCandidateFilter.FilterResult filterResult = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            if (filterResult.isInjectable()) {\n                try {\n                    Object candidate = filterResult.getCandidate().newInstance();\n                    field.setAccessible(true);\n                    field.set(fieldInstance, candidate);\n                    break;\n                } catch (InstantiationException | IllegalAccessException e) {\n                    throw new RuntimeException(e);\n                }\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..902ecfa1e 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -90,7 +90,17 @@ public class DefaultInjectionEngine {\n \n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+            MockCandidateFilter.FilterResult filterResult = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+            if (filterResult.isInjectable()) {\n+                try {\n+                    Object candidate = filterResult.getCandidate().newInstance();\n+                    field.setAccessible(true);\n+                    field.set(fieldInstance, candidate);\n+                    break;\n+                } catch (InstantiationException | IllegalAccessException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n         }\n     }\n ",
    "result_reason": "error: multi-catch statement is not supported in -source 1.5",
    "test_result": "ERROR"
}