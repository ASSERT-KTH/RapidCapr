{
    "patch": "        if (start >= end) {\n            throw new IllegalArgumentException(\"Start (\" + start + \") must be less than end (\" + end + \")\");\n        }\n        if (letters || numbers || chars != null) {\n            int gap = end - start;\n            char[] buffer = new char[count];\n            while (count-- != 0) {\n                int ch = random.nextInt(gap) + start;\n                if (chars != null) {\n                    ch = chars[ch - start];\n                } else if (ch >= 56320 && ch <= 57343) {\n                    if (count == 0) {\n                        count++;\n                    } else {\n                        // low surrogate, insert high surrogate after putting it in\n                        buffer[count] = (char) ch;\n                        count--;\n                        buffer[count] = (char) (55296 + random.nextInt(128));\n                    }\n                    continue;\n                } else if (ch >= 55296 && ch <= 56191) {\n                    if (count == 0) {\n                        count++;\n                    } else {\n                        // high surrogate, insert low surrogate before putting it in\n                        buffer[count] = (char) (56320 + random.nextInt(128));\n                        count--;\n                        buffer[count] = (char) ch;\n                    }\n                    continue;\n                } else if (ch >= 56192 && ch <= 56319) {\n                    // private high surrogate, no effing clue, so skip it\n                    count++;\n                    continue;\n                }\n                buffer[count] = (char) ch;\n            }\n            return new String(buffer);\n        } else {\n            throw new IllegalArgumentException(\"Requested string with letters=\" + letters\n                    + \", numbers=\" + numbers + \" and chars=\" + Arrays.toString(chars));\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..53ca36a5 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,48 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+        if (start >= end) {\n+            throw new IllegalArgumentException(\"Start (\" + start + \") must be less than end (\" + end + \")\");\n+        }\n+        if (letters || numbers || chars != null) {\n+            int gap = end - start;\n+            char[] buffer = new char[count];\n+            while (count-- != 0) {\n+                int ch = random.nextInt(gap) + start;\n+                if (chars != null) {\n+                    ch = chars[ch - start];\n+                } else if (ch >= 56320 && ch <= 57343) {\n+                    if (count == 0) {\n+                        count++;\n+                    } else {\n+                        // low surrogate, insert high surrogate after putting it in\n+                        buffer[count] = (char) ch;\n+                        count--;\n+                        buffer[count] = (char) (55296 + random.nextInt(128));\n+                    }\n+                    continue;\n+                } else if (ch >= 55296 && ch <= 56191) {\n+                    if (count == 0) {\n+                        count++;\n+                    } else {\n+                        // high surrogate, insert low surrogate before putting it in\n+                        buffer[count] = (char) (56320 + random.nextInt(128));\n+                        count--;\n+                        buffer[count] = (char) ch;\n+                    }\n+                    continue;\n+                } else if (ch >= 56192 && ch <= 56319) {\n+                    // private high surrogate, no effing clue, so skip it\n+                    count++;\n+                    continue;\n+                }\n+                buffer[count] = (char) ch;\n+            }\n+            return new String(buffer);\n+        } else {\n+            throw new IllegalArgumentException(\"Requested string with letters=\" + letters\n+                    + \", numbers=\" + numbers + \" and chars=\" + Arrays.toString(chars));\n+        }\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}