{
    "patch": "public double getPct(Object v) {\n        int idx = Arrays.binarySearch(data, normalize(v));\n        if (idx >= 0) {\n            return (idx + 0.5) / data.length;\n        } else {\n            idx = -(idx + 1);\n            return idx / (double) data.length;\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..905d7f2d1 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,15 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public double getPct(Object v) {\n+        int idx = Arrays.binarySearch(data, normalize(v));\n+        if (idx >= 0) {\n+            return (idx + 0.5) / data.length;\n+        } else {\n+            idx = -(idx + 1);\n+            return idx / (double) data.length;\n+        }\n+    }\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}