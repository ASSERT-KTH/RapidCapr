{
    "patch": "import org.mockito.exceptions.verification.invocation.ArgumentsAreDifferentException;\n\npublic void verify(VerificationData data) {\n        AssertionError error = null;\n\n        timer.start();\n        while (timer.isCounting()) {\n            try {\n                delegate.verify(data);\n\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            } catch (MockitoAssertionError e) {\n                error = handleVerifyException(e);\n            } catch (ArgumentsAreDifferentException e) {\n                error = handleVerifyException(new MockitoAssertionError(e.getMessage()));\n            }\n        }\n\n        if (error != null) {\n            throw error;\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..1de0ac7c6 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -72,7 +72,9 @@ public class VerificationOverTimeImpl implements VerificationMode {\n      *\n      * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout\n      */\n-    public void verify(VerificationData data) {\n+import org.mockito.exceptions.verification.invocation.ArgumentsAreDifferentException;\n+\n+public void verify(VerificationData data) {\n         AssertionError error = null;\n \n         timer.start();\n@@ -87,9 +89,8 @@ public class VerificationOverTimeImpl implements VerificationMode {\n                 }\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n-            }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n-                error = handleVerifyException(e);\n+            } catch (ArgumentsAreDifferentException e) {\n+                error = handleVerifyException(new MockitoAssertionError(e.getMessage()));\n             }\n         }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}