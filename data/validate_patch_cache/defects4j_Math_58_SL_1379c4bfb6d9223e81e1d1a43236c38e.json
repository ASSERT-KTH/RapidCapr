{
    "patch": "final LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer().withCostRelativeTolerance(1E-10).withMaxIterations(1000);\nreturn optimizer.optimize(new Gaussian.Parametric(), new WeightedObservedPoints().add(getObservations()), guess).getPoint().toArray();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..da965d721 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,8 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+final LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer().withCostRelativeTolerance(1E-10).withMaxIterations(1000);\n+return optimizer.optimize(new Gaussian.Parametric(), new WeightedObservedPoints().add(getObservations()), guess).getPoint().toArray();\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}