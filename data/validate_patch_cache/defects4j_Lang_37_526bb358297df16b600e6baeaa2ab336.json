{
    "patch": "public void testJira567() {\n    Integer[] n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Integer[]{Integer.valueOf(2)});\n    assertNotNull(n);\n    assertEquals(2, n.length);\n    assertEquals(Integer.valueOf(1), n[0]);\n    assertEquals(Integer.valueOf(2), n[1]);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java\nindex 889497e9..2807d95a 100644\n--- a/src/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -2950,19 +2950,13 @@ public class ArrayUtils {\n      * @since 2.1\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public static <T> T[] addAll(T[] array1, T... array2) {\n-        if (array1 == null) {\n-            return clone(array2);\n-        } else if (array2 == null) {\n-            return clone(array1);\n-        }\n-        final Class<?> type1 = array1.getClass().getComponentType();\n-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n-            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n-            // Check if problem is incompatible types\n-        return joinedArray;\n-    }\n+public void testJira567() {\n+    Integer[] n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Integer[]{Integer.valueOf(2)});\n+    assertNotNull(n);\n+    assertEquals(2, n.length);\n+    assertEquals(Integer.valueOf(1), n[0]);\n+    assertEquals(Integer.valueOf(2), n[1]);\n+}\n \n     /**\n      * <p>Adds all the elements of the given arrays into a new array.</p>",
    "result_reason": "error: no suitable method found for addAll(Integer[],Integer[])",
    "test_result": "ERROR"
}