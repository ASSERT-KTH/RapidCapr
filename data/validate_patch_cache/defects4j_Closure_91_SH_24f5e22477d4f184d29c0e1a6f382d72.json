{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent.getType() == Token.EXPR_RESULT) {\n        Node gramp = parent.getParent().getParent();\n        if (gramp != null && gramp.getType() == Token.ASSIGN) {\n          Node greatgramp = gramp.getParent();\n          if (greatgramp != null && greatgramp.getType() == Token.EXPR_RESULT) {\n            Node ancestor = parent;\n            while (ancestor != greatgramp) {\n              if (ancestor.getType() == Token.GETELEM ||\n                  ancestor.getType() == Token.GETPROP) {\n                break;\n              }\n              ancestor = ancestor.getParent();\n            }\n            if (ancestor != greatgramp) {\n              // The function is getting lent to a prototype.\n              return false;\n            }\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..69b4716f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,27 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent.getType() == Token.EXPR_RESULT) {\n+        Node gramp = parent.getParent().getParent();\n+        if (gramp != null && gramp.getType() == Token.ASSIGN) {\n+          Node greatgramp = gramp.getParent();\n+          if (greatgramp != null && greatgramp.getType() == Token.EXPR_RESULT) {\n+            Node ancestor = parent;\n+            while (ancestor != greatgramp) {\n+              if (ancestor.getType() == Token.GETELEM ||\n+                  ancestor.getType() == Token.GETPROP) {\n+                break;\n+              }\n+              ancestor = ancestor.getParent();\n+            }\n+            if (ancestor != greatgramp) {\n+              // The function is getting lent to a prototype.\n+              return false;\n+            }\n+          }\n+        }\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}