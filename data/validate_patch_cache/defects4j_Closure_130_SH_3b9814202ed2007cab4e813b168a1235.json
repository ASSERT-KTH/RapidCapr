{
    "patch": "      if (name.getGlobalSets() == 1 && name.getLocalSets() == 0 &&\n          name.getAliasingGets() == 0 && name.getAliasingSets() == 0 &&\n          name.getProps() != null && name.getProps().size() == 1) {  // condition (a)\n        // If {@code name} is a global variable with only one reference, which is\n        // guaranteed to be a read, and it has no properties or a single property\n        // which meets the same conditions, then inline it into any referencing\n        // expressions/declarations.\n        Ref decl = Iterables.getOnlyElement(name.getRefs());\n        Node refNode = decl.getNode();\n        // ...",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..a603fbf6 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,16 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.getGlobalSets() == 1 && name.getLocalSets() == 0 &&\n+          name.getAliasingGets() == 0 && name.getAliasingSets() == 0 &&\n+          name.getProps() != null && name.getProps().size() == 1) {  // condition (a)\n+        // If {@code name} is a global variable with only one reference, which is\n+        // guaranteed to be a read, and it has no properties or a single property\n+        // which meets the same conditions, then inline it into any referencing\n+        // expressions/declarations.\n+        Ref decl = Iterables.getOnlyElement(name.getRefs());\n+        Node refNode = decl.getNode();\n+        // ...\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}