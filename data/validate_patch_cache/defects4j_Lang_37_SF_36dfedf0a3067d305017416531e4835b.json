{
    "patch": "    public static <T> T[] addAll(T[] array1, T... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        final Class<?> type1 = array1.getClass().getComponentType();\n        final Class<?> type2 = array2.getClass().getComponentType();\n        if (!type1.equals(type2)) {\n            T[] newArray = Arrays.copyOf(array1, array1.length + array2.length);\n            System.arraycopy(array2, 0, newArray, array1.length, array2.length);\n            return newArray;\n        } else {\n            T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n            System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n            return joinedArray;\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java\nindex 889497e9..52258d45 100644\n--- a/src/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -2957,11 +2957,17 @@ public class ArrayUtils {\n             return clone(array1);\n         }\n         final Class<?> type1 = array1.getClass().getComponentType();\n-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n+        final Class<?> type2 = array2.getClass().getComponentType();\n+        if (!type1.equals(type2)) {\n+            T[] newArray = Arrays.copyOf(array1, array1.length + array2.length);\n+            System.arraycopy(array2, 0, newArray, array1.length, array2.length);\n+            return newArray;\n+        } else {\n+            T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n+            System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n             System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n-            // Check if problem is incompatible types\n-        return joinedArray;\n+            return joinedArray;\n+        }\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}