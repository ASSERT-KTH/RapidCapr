{
    "patch": "        if (Double.isNaN(sumXX) || Double.isNaN(sumXY) || Double.isNaN(sumYY) ||\n            Double.isInfinite(sumXX) || Double.isInfinite(sumXY) || Double.isInfinite(sumYY) || sumXX == 0 || sumYY - sumXY * sumXY / sumXX < 0) {\n            return 0.0;\n        } else {\n            return sumYY - sumXY * sumXY / sumXX;\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\nindex dcf512b72..9b5efdc60 100644\n--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n@@ -261,7 +261,12 @@ public class SimpleRegression implements Serializable {\n      * @return sum of squared errors associated with the regression model\n      */\n     public double getSumSquaredErrors() {\n-        return sumYY - sumXY * sumXY / sumXX;\n+        if (Double.isNaN(sumXX) || Double.isNaN(sumXY) || Double.isNaN(sumYY) ||\n+            Double.isInfinite(sumXX) || Double.isInfinite(sumXY) || Double.isInfinite(sumYY) || sumXX == 0 || sumYY - sumXY * sumXY / sumXX < 0) {\n+            return 0.0;\n+        } else {\n+            return sumYY - sumXY * sumXY / sumXX;\n+        }\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: SSE not NaN",
    "test_result": "FAIL"
}