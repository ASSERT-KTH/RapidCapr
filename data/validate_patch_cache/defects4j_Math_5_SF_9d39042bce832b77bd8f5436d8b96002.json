{
    "patch": "public Complex reciprocal() {\n    if (Double.isNaN(real) || Double.isNaN(imaginary)) {\n        return NaN;\n    }\n\n    double realSquared = real * real;\n    double imagSquared = imaginary * imaginary;\n\n    if (Double.isInfinite(realSquared) && Double.isInfinite(imagSquared)) {\n        return NaN;\n    }\n\n    if (realSquared + imagSquared == 0.0) {\n        return INF;\n    }\n\n    return createComplex(real / (realSquared + imagSquared), -imaginary / (realSquared + imagSquared));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/complex/Complex.java b/src/main/java/org/apache/commons/math3/complex/Complex.java\nindex 22b23f24e..b7a0819a2 100644\n--- a/src/main/java/org/apache/commons/math3/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math3/complex/Complex.java\n@@ -296,30 +296,25 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     }\n \n     /** {@inheritDoc} */\n-    public Complex reciprocal() {\n-        if (isNaN) {\n-            return NaN;\n-        }\n+public Complex reciprocal() {\n+    if (Double.isNaN(real) || Double.isNaN(imaginary)) {\n+        return NaN;\n+    }\n \n-        if (real == 0.0 && imaginary == 0.0) {\n-            return NaN;\n-        }\n+    double realSquared = real * real;\n+    double imagSquared = imaginary * imaginary;\n \n-        if (isInfinite) {\n-            return ZERO;\n-        }\n+    if (Double.isInfinite(realSquared) && Double.isInfinite(imagSquared)) {\n+        return NaN;\n+    }\n \n-        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n-            double q = real / imaginary;\n-            double scale = 1. / (real * q + imaginary);\n-            return createComplex(scale * q, -scale);\n-        } else {\n-            double q = imaginary / real;\n-            double scale = 1. / (imaginary * q + real);\n-            return createComplex(scale, -scale * q);\n-        }\n+    if (realSquared + imagSquared == 0.0) {\n+        return INF;\n     }\n \n+    return createComplex(real / (realSquared + imagSquared), -imaginary / (realSquared + imagSquared));\n+}\n+\n     /**\n      * Test for the equality of two Complex objects.\n      * If both the real and imaginary parts of two complex numbers",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}