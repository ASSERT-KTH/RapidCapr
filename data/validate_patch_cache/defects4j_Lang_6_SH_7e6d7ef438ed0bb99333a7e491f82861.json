{
    "patch": "                if (consumed == 1) {\n                    out.write(input.charAt(pos));\n                } else {\n                    final int codepoint = Character.codePointAt(input, pos);\n                    out.write(Character.toChars(codepoint));\n                }\n                pos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..e6d492eb 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,13 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                if (consumed == 1) {\n+                    out.write(input.charAt(pos));\n+                } else {\n+                    final int codepoint = Character.codePointAt(input, pos);\n+                    out.write(Character.toChars(codepoint));\n+                }\n+                pos += consumed;\n             }\n         }\n     }",
    "result_reason": "java.lang.StringIndexOutOfBoundsException: String index out of range: 8",
    "test_result": "FAIL"
}