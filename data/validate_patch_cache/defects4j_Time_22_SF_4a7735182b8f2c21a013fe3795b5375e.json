{
    "patch": "protected BasePeriod(long duration) {\n    super(duration, null, null);\n    weeks = (int) (duration / (7L * 24L * 60L * 60L * 1000L));\n    duration = duration - (weeks * 7L * 24L * 60L * 60L * 1000L);\n    days = (int) (duration / (24L * 60L * 60L * 1000L));\n    duration = duration - (days * 24L * 60L * 60L * 1000L);\n    hours = (int) (duration / (60L * 60L * 1000L));\n    duration = duration - (hours * 60L * 60L * 1000L);\n    minutes = (int) (duration / (60L * 1000L));\n    duration = duration - (minutes * 60L * 1000L);\n    seconds = (int) (duration / 1000L);\n    duration = duration - (seconds * 1000L);\n    millis = (int) duration;\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..4ea897db 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,20 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    super(duration, null, null);\n+    weeks = (int) (duration / (7L * 24L * 60L * 60L * 1000L));\n+    duration = duration - (weeks * 7L * 24L * 60L * 60L * 1000L);\n+    days = (int) (duration / (24L * 60L * 60L * 1000L));\n+    duration = duration - (days * 24L * 60L * 60L * 1000L);\n+    hours = (int) (duration / (60L * 60L * 1000L));\n+    duration = duration - (hours * 60L * 60L * 1000L);\n+    minutes = (int) (duration / (60L * 1000L));\n+    duration = duration - (minutes * 60L * 1000L);\n+    seconds = (int) (duration / 1000L);\n+    duration = duration - (seconds * 1000L);\n+    millis = (int) duration;\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}