{
    "patch": "public void addValue(Object v) {\n    if (v == null) {\n        throw new IllegalArgumentException(\"Value cannot be null\");\n    } else if (!(v instanceof Comparable)) {\n        System.out.println(\"Warning: Value is not comparable and will not be added\");\n    } else {\n        addValue((Comparable<?>) v);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/Frequency.java b/src/java/org/apache/commons/math/stat/Frequency.java\nindex c8deca31a..0f53e94b5 100644\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n@@ -106,9 +106,15 @@ public class Frequency implements Serializable {\n      * @deprecated use {@link #addValue(Comparable)} instead\n      */\n     @Deprecated\n-    public void addValue(Object v) {\n-            addValue((Comparable<?>) v);            \n+public void addValue(Object v) {\n+    if (v == null) {\n+        throw new IllegalArgumentException(\"Value cannot be null\");\n+    } else if (!(v instanceof Comparable)) {\n+        System.out.println(\"Warning: Value is not comparable and will not be added\");\n+    } else {\n+        addValue((Comparable<?>) v);\n     }\n+}\n     \n     /**\n      * Adds 1 to the frequency count for v.",
    "result_reason": "junit.framework.AssertionFailedError: Expected IllegalArgumentException",
    "test_result": "FAIL"
}