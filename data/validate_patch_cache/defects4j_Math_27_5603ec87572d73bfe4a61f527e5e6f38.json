{
    "patch": "import org.apache.commons.math3.util.ArithmeticUtils;\n\npublic class Dfp {\n\n    public Dfp multiply(final int x) {\n        if (x >= 0 && x < getField().getRadixDigits()) {\n            return multiplyFast(x);\n        } else if (x == Integer.MIN_VALUE) {\n            return newInstance(Integer.MAX_VALUE).add(1).negate();\n        } else {\n            final int[] product = new int[getDimension()];\n            final int[] source = getMantissa();\n            final int[] target = newInstance(x).getMantissa();\n            ArithmeticUtils.mul(source, target, product);\n            return newInstance(getSign(), product).round(getField().getMaxDigits(), getRoundingMode());\n        }\n    }\n\n    public double percentageValue() {\n        final int[] work = new int[getDimension()];\n        final Dfp product = newInstance(work);\n        product[0] = 100;\n        return multiply(product).round(getField().getMaxDigits(), getRoundingMode()).doubleValue();\n    }\n    \n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\nindex f84218ebd..1551d140d 100644\n--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n@@ -593,9 +593,32 @@ public class Fraction\n      *\n      * @return the fraction percentage as a <tt>double</tt>.\n      */\n+import org.apache.commons.math3.util.ArithmeticUtils;\n+\n+public class Dfp {\n+\n+    public Dfp multiply(final int x) {\n+        if (x >= 0 && x < getField().getRadixDigits()) {\n+            return multiplyFast(x);\n+        } else if (x == Integer.MIN_VALUE) {\n+            return newInstance(Integer.MAX_VALUE).add(1).negate();\n+        } else {\n+            final int[] product = new int[getDimension()];\n+            final int[] source = getMantissa();\n+            final int[] target = newInstance(x).getMantissa();\n+            ArithmeticUtils.mul(source, target, product);\n+            return newInstance(getSign(), product).round(getField().getMaxDigits(), getRoundingMode());\n+        }\n+    }\n+\n     public double percentageValue() {\n-        return multiply(100).doubleValue();\n+        final int[] work = new int[getDimension()];\n+        final Dfp product = newInstance(work);\n+        product[0] = 100;\n+        return multiply(product).round(getField().getMaxDigits(), getRoundingMode()).doubleValue();\n     }\n+    \n+}\n \n     /**\n      * <p>Creates a {@code Fraction} instance with the 2 parts",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}