{
    "patch": "if (val2 == -1) {\n    long result = -val1;\n    if (val1 < 0 && result < 0) {\n        throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n    } else {\n        return result;\n    }\n}\nif (val2 == 0) {\n    return 0L;\n}\nif (val2 == 1) {\n    return val1;\n}\nlong total = val1 * val2;\nif (total / val2 != val1) {\n    throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n}\nreturn total;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..01d4b72e 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -135,6 +135,25 @@ public class FieldUtils {\n     public static long safeMultiply(long val1, int val2) {\n         switch (val2) {\n             case -1:\n+if (val2 == -1) {\n+    long result = -val1;\n+    if (val1 < 0 && result < 0) {\n+        throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+    } else {\n+        return result;\n+    }\n+}\n+if (val2 == 0) {\n+    return 0L;\n+}\n+if (val2 == 1) {\n+    return val1;\n+}\n+long total = val1 * val2;\n+if (total / val2 != val1) {\n+    throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+}\n+return total;\n                 return -val1;\n             case 0:\n                 return 0L;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}