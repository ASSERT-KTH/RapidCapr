{
    "patch": "            } else {\n                // we need to ensure that time is always after the DST gap\n                // this happens naturally for positive offsets, but not for negative\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n                if (prevLocal != prevAdjusted) {\n                    return offsetAdjusted;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..1a7a5444 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            } else {\n+                // we need to ensure that time is always after the DST gap\n+                // this happens naturally for positive offsets, but not for negative\n+                long prevLocal = previousTransition(instantAdjusted);\n+                long prevAdjusted = previousTransition(instantLocal - offsetLocal);\n+                if (prevLocal != prevAdjusted) {\n+                    return offsetAdjusted;\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}