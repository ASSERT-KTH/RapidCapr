{
    "patch": "    public Object clone() throws CloneNotSupportedException {\n        TimeSeriesDataItem clone = (TimeSeriesDataItem) super.clone();\n        if (m_moment != null) {\n            clone.m_moment = (RegularTimePeriod) m_moment.clone();\n        }\n        if (m_y != null) {\n            Number n = (Number) m_y;\n            if (n instanceof Cloneable) {\n                try {\n                    Method method = n.getClass().getMethod(\"clone\");\n                    n = (Number) method.invoke(n);\n                }\n                catch (Exception e) {\n                    // ignore, keep the original reference\n                }\n            }\n            clone.m_y = n;\n        }\n        return clone;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..25a4c70 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,26 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+    public Object clone() throws CloneNotSupportedException {\n+        TimeSeriesDataItem clone = (TimeSeriesDataItem) super.clone();\n+        if (m_moment != null) {\n+            clone.m_moment = (RegularTimePeriod) m_moment.clone();\n+        }\n+        if (m_y != null) {\n+            Number n = (Number) m_y;\n+            if (n instanceof Cloneable) {\n+                try {\n+                    Method method = n.getClass().getMethod(\"clone\");\n+                    n = (Number) method.invoke(n);\n+                }\n+                catch (Exception e) {\n+                    // ignore, keep the original reference\n+                }\n+            }\n+            clone.m_y = n;\n+        }\n+        return clone;\n+    }\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: method clone() is already defined in class TimeSeries",
    "test_result": "ERROR"
}