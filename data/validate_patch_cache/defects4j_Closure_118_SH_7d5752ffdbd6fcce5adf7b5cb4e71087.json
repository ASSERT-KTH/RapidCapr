{
    "patch": "        Node key = child.getFirstChild();\n        if (key == null || !key.isString()) {\n          continue;\n        }\n        String name = key.getString();\n        T type = typeSystem.getType(getScope(), n, name);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..f3f0107d 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,12 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        Node key = child.getFirstChild();\n+        if (key == null || !key.isString()) {\n+          continue;\n+        }\n+        String name = key.getString();\n+        T type = typeSystem.getType(getScope(), n, name);\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: variable name is already defined in method handleObjectLit(NodeTraversal,Node)",
    "test_result": "ERROR"
}