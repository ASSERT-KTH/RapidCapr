{
    "patch": "  static boolean isSimpleNumber(String s) {\n    int len = s.length();\n    for (int index = 0; index < len; index++) {\n      char c = s.charAt(index);\n      if (c < '0' || c > '9') {\n        return false;\n      }\n    }\n    return len > 0 && s.matches(\"[0-9]+\");\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex ac6299d1..18e3b86f 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -733,7 +733,6 @@ class CodeGenerator {\n \n     cc.endSourceMapping(n);\n   }\n-\n   static boolean isSimpleNumber(String s) {\n     int len = s.length();\n     for (int index = 0; index < len; index++) {\n@@ -742,7 +741,16 @@ class CodeGenerator {\n         return false;\n       }\n     }\n-    return len > 0;\n+  static boolean isSimpleNumber(String s) {\n+    int len = s.length();\n+    for (int index = 0; index < len; index++) {\n+      char c = s.charAt(index);\n+      if (c < '0' || c > '9') {\n+        return false;\n+      }\n+    }\n+    return len > 0 && s.matches(\"[0-9]+\");\n+  }\n   }\n \n   static double getSimpleNumber(String s) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}