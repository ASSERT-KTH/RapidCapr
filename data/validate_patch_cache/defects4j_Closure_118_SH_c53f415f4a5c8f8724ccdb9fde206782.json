{
    "patch": "        ObjectType objectType = ObjectType.cast(\n            typeSystem.getType(getScope(), n, null));\n        if (objectType != null) {\n          JSType type = objectType.getPropertyType(child.getString());\n          if (type != null) {\n            maybeDeclareAccessor(child, type);\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..83104f62 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,14 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        ObjectType objectType = ObjectType.cast(\n+            typeSystem.getType(getScope(), n, null));\n+        if (objectType != null) {\n+          JSType type = objectType.getPropertyType(child.getString());\n+          if (type != null) {\n+            maybeDeclareAccessor(child, type);\n+          }\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: method cast in class ObjectType cannot be applied to given types;",
    "test_result": "ERROR"
}