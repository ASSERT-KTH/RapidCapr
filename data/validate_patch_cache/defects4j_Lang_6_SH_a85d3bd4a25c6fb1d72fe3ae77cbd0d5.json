{
    "patch": "            if (c == 'r') {\n                out.write('\\r');\n            } else if (c == 'n') {\n                out.write('\\n');\n            } else if (c == 't') {\n                out.write('\\t');\n            } else if (c == 'b') {\n                out.write('\\b');\n            } else if (c == 'f') {\n                out.write('\\f');\n            } else if (c == '\\'') {\n                out.write('\\'');\n            } else if (c == '\\\"') {\n                out.write('\\\"');\n            } else if (c == '\\\\') {\n                out.write('\\\\');\n            } else if (c == 'u') {\n                int codepoint = Integer.parseInt(input.subSequence(pos+1, pos+5).toString(), 16);\n                out.write(Character.toChars(codepoint));\n                pos += 4;\n            }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..069f0b82 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,27 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+            if (c == 'r') {\n+                out.write('\\r');\n+            } else if (c == 'n') {\n+                out.write('\\n');\n+            } else if (c == 't') {\n+                out.write('\\t');\n+            } else if (c == 'b') {\n+                out.write('\\b');\n+            } else if (c == 'f') {\n+                out.write('\\f');\n+            } else if (c == '\\'') {\n+                out.write('\\'');\n+            } else if (c == '\\\"') {\n+                out.write('\\\"');\n+            } else if (c == '\\\\') {\n+                out.write('\\\\');\n+            } else if (c == 'u') {\n+                int codepoint = Integer.parseInt(input.subSequence(pos+1, pos+5).toString(), 16);\n+                out.write(Character.toChars(codepoint));\n+                pos += 4;\n+            }\n             }\n         }\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}