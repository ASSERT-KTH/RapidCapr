{
    "patch": "              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n              Node computedFollowNode = computeFollowNode(fromNode, finallyNode, cfa);\n              if (computedFollowNode == null) {\n                computedFollowNode = finallyNode;\n              }\n              return computedFollowNode;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..42b450d6 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -765,6 +765,11 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n               cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+              Node computedFollowNode = computeFollowNode(fromNode, finallyNode, cfa);\n+              if (computedFollowNode == null) {\n+                computedFollowNode = finallyNode;\n+              }\n+              return computedFollowNode;\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}