{
    "patch": "return new LevenbergMarquardtOptimizer(\n          new GaussianParametric(),\n          getObservations(),\n          new Weight(new double[getObservations().length])).withCostRelativeTolerance(1.0e-10).withParameterRelativeTolerance(1.0e-10).withOrthoTolerance(1.0e-10).optimize(guess);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..bf11f6998 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,10 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+return new LevenbergMarquardtOptimizer(\n+          new GaussianParametric(),\n+          getObservations(),\n+          new Weight(new double[getObservations().length])).withCostRelativeTolerance(1.0e-10).withParameterRelativeTolerance(1.0e-10).withOrthoTolerance(1.0e-10).optimize(guess);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}