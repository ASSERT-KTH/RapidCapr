{
    "patch": "private void readTypeVariables(TypeVariable<?> typeVariable) {\n    for (Type type : typeVariable.getBounds()) {\n        if (type instanceof TypeVariable) {\n            readTypeVariables((TypeVariable<?>) type);\n        } else {\n            registerTypeVariablesOn(type);\n        }\n    }\n    registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b72778866 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,16 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+private void readTypeVariables(TypeVariable<?> typeVariable) {\n+    for (Type type : typeVariable.getBounds()) {\n+        if (type instanceof TypeVariable) {\n+            readTypeVariables((TypeVariable<?>) type);\n+        } else {\n+            registerTypeVariablesOn(type);\n+        }\n+    }\n+    registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: method readTypeVariables in class TypeVariableReturnType cannot be applied to given types;",
    "test_result": "ERROR"
}