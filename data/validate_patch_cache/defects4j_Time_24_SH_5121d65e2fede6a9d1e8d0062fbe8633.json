{
    "patch": "                if (e.getFieldName() == DateTimeFieldType.year()) {\n                    throw new IllegalFieldValueException(\n                        e.getFieldType(), e.getFieldName(), e.getIllegalValue(), \"Invalid year: \" + e.getIllegalValue());\n                } else {\n                    throw e;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..8216eed1 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,12 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+                if (e.getFieldName() == DateTimeFieldType.year()) {\n+                    throw new IllegalFieldValueException(\n+                        e.getFieldType(), e.getFieldName(), e.getIllegalValue(), \"Invalid year: \" + e.getIllegalValue());\n+                } else {\n+                    throw e;\n+                }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}