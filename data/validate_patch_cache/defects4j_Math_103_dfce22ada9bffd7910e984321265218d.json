{
    "patch": "    Erf.setIterations(100000); // allow more iterations\n    double lowerTail = distribution.cumulativeProbability((double)-i);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\nindex 02810e142..1edab762f 100644\n--- a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n@@ -105,10 +105,8 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution\n      * x is more than 20 standard deviations from the mean, in which case the\n      * convergence exception is caught and 0 or 1 is returned.\n      */\n-    public double cumulativeProbability(double x) throws MathException {\n-            return 0.5 * (1.0 + Erf.erf((x - mean) /\n-                    (standardDeviation * Math.sqrt(2.0))));\n-    }\n+    Erf.setIterations(100000); // allow more iterations\n+    double lowerTail = distribution.cumulativeProbability((double)-i);\n     \n     /**\n      * For this distribution, X, this method returns the critical point x, such",
    "result_reason": "error: <identifier> expected",
    "test_result": "ERROR"
}