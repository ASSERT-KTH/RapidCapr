{
    "patch": "// We only want to analyze top-level, non-arrow functions for escaping variables.\nif (NodeUtil.isFunction(n) && !NodeUtil.isArrowFunction(n) &&\n    t.getScopeDepth() == 1) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex cf87eaaf..3fb0bdfa 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1993,7 +1993,9 @@ final class TypedScopeCreator implements ScopeCreator {\n         data.get(t.getScopeRoot()).recordNonEmptyReturn();\n       }\n \n-      if (t.getScopeDepth() <= 2) {\n+// We only want to analyze top-level, non-arrow functions for escaping variables.\n+if (NodeUtil.isFunction(n) && !NodeUtil.isArrowFunction(n) &&\n+    t.getScopeDepth() == 1) {\n         // The first-order function analyzer looks at two types of variables:\n         //\n         // 1) Local variables that are assigned in inner scopes (\"escaped vars\")",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}