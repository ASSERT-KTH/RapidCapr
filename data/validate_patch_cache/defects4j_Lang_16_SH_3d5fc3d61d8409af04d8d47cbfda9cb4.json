{
    "patch": "if (str.matches(\"-?(0[xX])?[0-9a-fA-F]+\")) {\n    if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n        str = str.substring(2);\n    }\n    try {\n        return createInteger(Integer.parseInt(str, 16));\n    } catch (NumberFormatException ex) {\n        try {\n            return createLong(Long.parseLong(str, 16));\n        } catch (NumberFormatException ex2) {\n            return createBigInteger(str, 16);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..ca014347 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,20 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.matches(\"-?(0[xX])?[0-9a-fA-F]+\")) {\n+    if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n+        str = str.substring(2);\n+    }\n+    try {\n+        return createInteger(Integer.parseInt(str, 16));\n+    } catch (NumberFormatException ex) {\n+        try {\n+            return createLong(Long.parseLong(str, 16));\n+        } catch (NumberFormatException ex2) {\n+            return createBigInteger(str, 16);\n+        }\n+    }\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}