{
    "patch": "      if (value.isFunction() && value.getLastChild().isBlock()\n          && NodeUtil.isFunctionExpression(value)\n          && reference.getParent().isCall()) {\n        List<Node> singletonGetterCallNodePath = NodeUtil.getLhsNodesByRhsFunctionName(\n            reference.getParent(), value.getFirstChild().getString());\n        if (singletonGetterCallNodePath == null) {\n          return false;\n        }\n        Node ancestorToCheck = singletonGetterCallNodePath.get(\n            singletonGetterCallNodePath.size() - 2);\n        if (!NodeUtil.isArrowFunctionExpression(ancestorToCheck)) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..267618b8 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,20 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+      if (value.isFunction() && value.getLastChild().isBlock()\n+          && NodeUtil.isFunctionExpression(value)\n+          && reference.getParent().isCall()) {\n+        List<Node> singletonGetterCallNodePath = NodeUtil.getLhsNodesByRhsFunctionName(\n+            reference.getParent(), value.getFirstChild().getString());\n+        if (singletonGetterCallNodePath == null) {\n+          return false;\n+        }\n+        Node ancestorToCheck = singletonGetterCallNodePath.get(\n+            singletonGetterCallNodePath.size() - 2);\n+        if (!NodeUtil.isArrowFunctionExpression(ancestorToCheck)) {\n+          return false;\n+        }\n+      }\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}