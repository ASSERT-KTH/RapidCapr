{
    "patch": "    private void init() {\n        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n\n        nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();\n\n        StringBuilder regex= new StringBuilder();\n        List<Strategy> collector = new ArrayList<Strategy>();\n\n        Matcher patternMatcher= formatPattern.matcher(pattern);\n        if(!patternMatcher.lookingAt()) {\n            throw new IllegalArgumentException(\"Invalid pattern\");\n        }\n\n        currentFormatField= patternMatcher.group();\n        Strategy currentStrategy= getStrategy(currentFormatField);\n        for(;;) {\n            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n            if(!patternMatcher.lookingAt()) {\n                nextStrategy = null;\n                break;\n            }\n            String nextFormatField= patternMatcher.group();\n            nextStrategy = getStrategy(nextFormatField);\n            if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n            }\n            currentFormatField= nextFormatField;\n            currentStrategy= nextStrategy;\n        }\n        if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n            collector.add(currentStrategy);\n        }\n        currentFormatField= null;\n        strategies= collector.toArray(new Strategy[collector.size()]);\n        parsePattern= Pattern.compile(regex.toString());\n\n        // Initialize defaultCenturyStart field\n        Calendar calendar = Calendar.getInstance(timeZone, locale);\n        calendar.set(2000, Calendar.JANUARY, 1, 0, 0, 0);\n        calendar.set(Calendar.MILLISECOND, 0);\n        defaultCenturyStart = calendar.getTime();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..c992c132 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -135,18 +135,24 @@ public class FastDateParser implements DateParser, Serializable {\n             }\n             String nextFormatField= patternMatcher.group();\n             nextStrategy = getStrategy(nextFormatField);\n-            if(currentStrategy.addRegex(this, regex)) {\n+            if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n                 collector.add(currentStrategy);\n             }\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n-        if(currentStrategy.addRegex(this, regex)) {\n+        if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }\n         currentFormatField= null;\n         strategies= collector.toArray(new Strategy[collector.size()]);\n         parsePattern= Pattern.compile(regex.toString());\n+\n+        // Initialize defaultCenturyStart field\n+        Calendar calendar = Calendar.getInstance(timeZone, locale);\n+        calendar.set(2000, Calendar.JANUARY, 1, 0, 0, 0);\n+        calendar.set(Calendar.MILLISECOND, 0);\n+        defaultCenturyStart = calendar.getTime();\n     }\n \n     // Accessors",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}