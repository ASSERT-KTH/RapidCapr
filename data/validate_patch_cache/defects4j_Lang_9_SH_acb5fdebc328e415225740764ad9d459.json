{
    "patch": "    public int hashCode() {\n        int result = 17; // set initial value to any prime number\n        result = 31 * result + getFirst().hashCode();\n        result = 31 * result + getLast().hashCode();\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..2a9769dd 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,12 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+    public int hashCode() {\n+        int result = 17; // set initial value to any prime number\n+        result = 31 * result + getFirst().hashCode();\n+        result = 31 * result + getLast().hashCode();\n+        return result;\n+    }\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}