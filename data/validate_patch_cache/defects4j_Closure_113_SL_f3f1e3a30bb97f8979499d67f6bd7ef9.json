{
    "patch": "      maybeAddToSymbolTable(left);\n      maybeAddStringNodeToSymbolTable(arg);\n\n      // Requires should be removed before further processing. This cannot be\n      // done with arg.remove(), since the order of NodeChanged events would be\n      // incorrect. Instead we remove the parent of the require from the AST.\n      // See https://github.com/google/closure-compiler/issues/1719 for details.\n      parent.detach();\n      compiler.reportCodeChange();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 70bf1b00..193a7c96 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -326,7 +326,16 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n       // the checks for broken requires turned off. In these cases, we\n       // allow broken requires to be preserved by the first run to\n       // let them be caught in the subsequent run.\n-      if (provided != null) {\n+      maybeAddToSymbolTable(left);\n+      maybeAddStringNodeToSymbolTable(arg);\n+\n+      // Requires should be removed before further processing. This cannot be\n+      // done with arg.remove(), since the order of NodeChanged events would be\n+      // incorrect. Instead we remove the parent of the require from the AST.\n+      // See https://github.com/google/closure-compiler/issues/1719 for details.\n+      parent.detach();\n+      compiler.reportCodeChange();\n+    }\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}