{
    "patch": "  private String getRemainingJSDocLine() {\n    String result = stream.getRemainingJSDocLine();\n    // If there is no remaining line, return null\n    if (result == null) {\n        return null;\n    }\n      \n    // Trim leading/trailing whitespace and remove leading '*'\n    result = result.trim().replaceFirst(\"\\\\*\", \"\");\n    \n    return result.trim();\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..982f581d 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,18 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+  private String getRemainingJSDocLine() {\n+    String result = stream.getRemainingJSDocLine();\n+    // If there is no remaining line, return null\n+    if (result == null) {\n+        return null;\n+    }\n+      \n+    // Trim leading/trailing whitespace and remove leading '*'\n+    result = result.trim().replaceFirst(\"\\\\*\", \"\");\n+    \n+    return result.trim();\n+  }\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}