{
    "patch": "if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n    Object[] arguments = invocation.getArguments();\n    Object other = arguments[0];\n    if (invocation.getMock().getClass().equals(other.getClass())) {\n        if (invocation.getMock() == other) {\n            return 0;\n        } else {\n            return 1;\n        }\n    } else {\n        throw new ClassCastException(invocation.getMock().getClass().getName() + \" cannot be cast to \" + other.getClass().getName());\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 4c00f50b1..eb49b8306 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -73,8 +73,20 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             //see issue 184.\n             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).\n             //Only for compareTo() method by the Comparable interface\n+if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n+    Object[] arguments = invocation.getArguments();\n+    Object other = arguments[0];\n+    if (invocation.getMock().getClass().equals(other.getClass())) {\n+        if (invocation.getMock() == other) {\n+            return 0;\n+        } else {\n             return 1;\n         }\n+    } else {\n+        throw new ClassCastException(invocation.getMock().getClass().getName() + \" cannot be cast to \" + other.getClass().getName());\n+    }\n+}\n+        }\n         \n         Class<?> returnType = invocation.getMethod().getReturnType();\n         return returnValueFor(returnType);\n@@ -120,4 +132,4 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n         return null;\n     }\n \n-}\n\\ No newline at end of file\n+}",
    "result_reason": "java.lang.ClassCastException: $java.util.Date$$EnhancerByMockitoWithCGLIB$$21aee579 cannot be cast to java.util.Date",
    "test_result": "FAIL"
}