{
    "patch": "public static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null && array2 == null) {\n        return null;\n    }\n    else if (array1 == null) {\n        return array2.clone();\n    }\n    else if (array2 == null) {\n        return array1.clone();\n    }\n    \n    final Class<?> type1 = array1.getClass().getComponentType();\n    final Class<?> type2 = array2.getClass().getComponentType();\n\n    if (type1 == null) {\n        throw new IllegalArgumentException(\"Cannot add arrays of unknown type\");\n    }\n\n    if (!type1.equals(type2)) {\n        if (type1.isAssignableFrom(type2)) {\n            @SuppressWarnings(\"unchecked\")\n            T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n            System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n            for (int i = 0; i < array2.length; i++) {\n                joinedArray[array1.length + i] = array2[i];\n            }\n            return joinedArray;\n        } else {\n            throw new ArrayStoreException(\"Cannot store \" + type2.getName() + \" in an array of \" + type1.getName());\n        }\n    }\n    else {\n        T[] joinedArray = Arrays.copyOf(array1, arra",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java\nindex 889497e9..c0d98db7 100644\n--- a/src/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -2950,19 +2950,39 @@ public class ArrayUtils {\n      * @since 2.1\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public static <T> T[] addAll(T[] array1, T... array2) {\n-        if (array1 == null) {\n-            return clone(array2);\n-        } else if (array2 == null) {\n-            return clone(array1);\n+public static <T> T[] addAll(T[] array1, T... array2) {\n+    if (array1 == null && array2 == null) {\n+        return null;\n+    }\n+    else if (array1 == null) {\n+        return array2.clone();\n+    }\n+    else if (array2 == null) {\n+        return array1.clone();\n+    }\n+    \n+    final Class<?> type1 = array1.getClass().getComponentType();\n+    final Class<?> type2 = array2.getClass().getComponentType();\n+\n+    if (type1 == null) {\n+        throw new IllegalArgumentException(\"Cannot add arrays of unknown type\");\n+    }\n+\n+    if (!type1.equals(type2)) {\n+        if (type1.isAssignableFrom(type2)) {\n+            @SuppressWarnings(\"unchecked\")\n+            T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n+            System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n+            for (int i = 0; i < array2.length; i++) {\n+                joinedArray[array1.length + i] = array2[i];\n+            }\n+            return joinedArray;\n+        } else {\n+            throw new ArrayStoreException(\"Cannot store \" + type2.getName() + \" in an array of \" + type1.getName());\n         }\n-        final Class<?> type1 = array1.getClass().getComponentType();\n-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n-            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n-            // Check if problem is incompatible types\n-        return joinedArray;\n     }\n+    else {\n+        T[] joinedArray = Arrays.copyOf(array1, arra\n \n     /**\n      * <p>Adds all the elements of the given arrays into a new array.</p>",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}