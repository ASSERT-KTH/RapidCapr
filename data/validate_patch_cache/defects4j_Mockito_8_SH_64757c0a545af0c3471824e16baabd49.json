{
    "patch": "if (!(classType instanceof ParameterizedType)) {\n    return;\n}\n\nParameterizedType parameterizedType = (ParameterizedType) classType;\nType[] actualTypeArguments = parameterizedType.getActualTypeArguments();\nfor (int i = 0; i < actualTypeArguments.length; i++) {\n    Type actualTypeArgument = actualTypeArguments[i];\n\n    if (actualTypeArgument instanceof WildcardType) {\n        Type resolvedType = resolveWildcardType((WildcardType) actualTypeArgument);\n        contextualActualTypeParameters.put(i, resolvedType);\n    } else if (actualTypeArgument instanceof TypeVariable) {\n        Type resolvedType = resolveTypeVariable((TypeVariable<?>) actualTypeArgument);\n        contextualActualTypeParameters.put(i, resolvedType);\n    } else if (actualTypeArgument instanceof ParameterizedType) {\n        Type resolvedType = resolveParameterizedType((ParameterizedType) actualTypeArgument);\n        contextualActualTypeParameters.put(i, resolvedType);\n    } else {\n        contextualActualTypeParameters.put(i, actualTypeArgument);\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..a405ddeac 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,28 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+if (!(classType instanceof ParameterizedType)) {\n+    return;\n+}\n+\n+ParameterizedType parameterizedType = (ParameterizedType) classType;\n+Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();\n+for (int i = 0; i < actualTypeArguments.length; i++) {\n+    Type actualTypeArgument = actualTypeArguments[i];\n+\n+    if (actualTypeArgument instanceof WildcardType) {\n+        Type resolvedType = resolveWildcardType((WildcardType) actualTypeArgument);\n+        contextualActualTypeParameters.put(i, resolvedType);\n+    } else if (actualTypeArgument instanceof TypeVariable) {\n+        Type resolvedType = resolveTypeVariable((TypeVariable<?>) actualTypeArgument);\n+        contextualActualTypeParameters.put(i, resolvedType);\n+    } else if (actualTypeArgument instanceof ParameterizedType) {\n+        Type resolvedType = resolveParameterizedType((ParameterizedType) actualTypeArgument);\n+        contextualActualTypeParameters.put(i, resolvedType);\n+    } else {\n+        contextualActualTypeParameters.put(i, actualTypeArgument);\n+    }\n+}\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: variable parameterizedType is already defined in method registerTypeVariablesOn(Type)",
    "test_result": "ERROR"
}