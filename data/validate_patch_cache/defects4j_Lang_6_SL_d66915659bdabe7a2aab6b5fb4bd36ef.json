{
    "patch": "for (int pt = 0; pt < consumed; pt++) {\n    int codepoint = Character.codePointAt(input, pos + pt); // get current codepoint\n    if (Character.isSupplementaryCodePoint(codepoint)) { // check if it's a surrogate pair\n        pos += 2;\n    } else {\n        pos++;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..c68d0931 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,14 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+for (int pt = 0; pt < consumed; pt++) {\n+    int codepoint = Character.codePointAt(input, pos + pt); // get current codepoint\n+    if (Character.isSupplementaryCodePoint(codepoint)) { // check if it's a surrogate pair\n+        pos += 2;\n+    } else {\n+        pos++;\n+    }\n+}\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}