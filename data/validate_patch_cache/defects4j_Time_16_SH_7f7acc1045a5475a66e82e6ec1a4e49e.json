{
    "patch": "            instantLocal,\n            chrono,\n            iLocale,\n            iPivotYear,\n            iDefaultYear,\n            bucket.getZone() == null ? chrono.getZone() : bucket.getZone());",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..1f51bb51 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,12 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+            instantLocal,\n+            chrono,\n+            iLocale,\n+            iPivotYear,\n+            iDefaultYear,\n+            bucket.getZone() == null ? chrono.getZone() : bucket.getZone());\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: no suitable constructor found for DateTimeParserBucket(long,Chronology,Locale,Integer,int,DateTimeZone)",
    "test_result": "ERROR"
}