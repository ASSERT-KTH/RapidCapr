{
    "patch": "import com.google.javascript.rhino.Token;\n\n//...\n\ntarget = callee.getNext();\nif (target != null && target.getType() == Token.STRING) {\n  className = target.getString();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ClosureCodingConvention.java b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\nindex c507c924..d279645e 100644\n--- a/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n+++ b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n@@ -194,7 +194,14 @@ public class ClosureCodingConvention extends DefaultCodingConvention {\n         String qualifiedName = callee.getQualifiedName();\n         if (functionName.equals(qualifiedName)) {\n           Node target = callee.getNext();\n-          if (target != null) {\n+import com.google.javascript.rhino.Token;\n+\n+//...\n+\n+target = callee.getNext();\n+if (target != null && target.getType() == Token.STRING) {\n+  className = target.getString();\n+}\n             className = target.getString();\n           }\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}