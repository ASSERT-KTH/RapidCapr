{
    "patch": "if (mTimeZoneForced) {\n    DateFormat originalFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    originalFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    String originalDate = originalFormat.format(calendar.getTime());\n    try {\n        DateFormat targetFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n        targetFormat.setTimeZone(mTimeZone);\n        calendar.setTime(targetFormat.parse(originalDate));\n    } catch (ParseException e) {\n        e.printStackTrace();\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..d710f1e9 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,18 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    DateFormat originalFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n+    originalFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+    String originalDate = originalFormat.format(calendar.getTime());\n+    try {\n+        DateFormat targetFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n+        targetFormat.setTimeZone(mTimeZone);\n+        calendar.setTime(targetFormat.parse(originalDate));\n+    } catch (ParseException e) {\n+        e.printStackTrace();\n+    }\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}