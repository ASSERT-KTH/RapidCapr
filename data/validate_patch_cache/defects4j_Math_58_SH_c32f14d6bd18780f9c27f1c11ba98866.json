{
    "patch": "        final double[] parameters = fit(new Gaussian.Parametric(), guess);\n        final double[] observations = getObservations();\n        final double[] residuals = new double[observations.length];\n        for (int i = 0; i < residuals.length; ++i) {\n            residuals[i] = observations[i] - new Gaussian.Parametric().value(i, parameters);\n        }\n        return residuals;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..b45d9c652 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,13 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final double[] parameters = fit(new Gaussian.Parametric(), guess);\n+        final double[] observations = getObservations();\n+        final double[] residuals = new double[observations.length];\n+        for (int i = 0; i < residuals.length; ++i) {\n+            residuals[i] = observations[i] - new Gaussian.Parametric().value(i, parameters);\n+        }\n+        return residuals;\n     }\n \n     /**",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}