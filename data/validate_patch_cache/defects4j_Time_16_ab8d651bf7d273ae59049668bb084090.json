{
    "patch": "new DateTimeParserBucket(\n        instantLocal, chrono, iLocale, iPivotYear,\n        bucket.getZone(), bucket.getOffsetInteger(), bucket.getPivotYear(), bucket.getDefaultYear(),\n        bucket.isSavedHour(), bucket.getSaveMillis()));",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..d230724e 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,10 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+new DateTimeParserBucket(\n+        instantLocal, chrono, iLocale, iPivotYear,\n+        bucket.getZone(), bucket.getOffsetInteger(), bucket.getPivotYear(), bucket.getDefaultYear(),\n+        bucket.isSavedHour(), bucket.getSaveMillis()));\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}