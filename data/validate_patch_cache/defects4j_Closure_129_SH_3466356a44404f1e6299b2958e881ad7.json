{
    "patch": "    if (NodeUtil.isName(first)) {\n      // Handle calls to functions bound to \"this\" via \"call\" or \"apply\"\n      if (NodeUtil.isGet(first) && first.getNext() != null &&\n          (first.getNext().isGetProp() || first.getNext().isGetElem())) {\n        Node second = first.getNext();\n        if ((NodeUtil.isGet(second) &&\n             \"call\".equals(NodeUtil.getStringValue(second.getNext()))) ||\n            (NodeUtil.isCall(second) &&\n             \"call\".equals(NodeUtil.getStringValue(second.getFirstFirstChild())))) {\n          n.putBooleanProp(Node.FREE_CALL, false);\n        }\n      }\n      // Handle direct calls to non-arrow non-generator non-strict functions\n      if (first.getNext() == null &&\n          parent.getBooleanProp(Node.INSIDE_NON_ARROW_NON_GENERATOR_FUNCTION) &&\n          parent.getBooleanProp(Node.NON_STRICT_THIS) &&\n          !parent.getBooleanProp(Node.IS_GENERATOR_FUNCTION)) {\n        n.putBooleanProp(Node.FREE_CALL, false);\n      }\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..b33d1afa 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,26 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+    if (NodeUtil.isName(first)) {\n+      // Handle calls to functions bound to \"this\" via \"call\" or \"apply\"\n+      if (NodeUtil.isGet(first) && first.getNext() != null &&\n+          (first.getNext().isGetProp() || first.getNext().isGetElem())) {\n+        Node second = first.getNext();\n+        if ((NodeUtil.isGet(second) &&\n+             \"call\".equals(NodeUtil.getStringValue(second.getNext()))) ||\n+            (NodeUtil.isCall(second) &&\n+             \"call\".equals(NodeUtil.getStringValue(second.getFirstFirstChild())))) {\n+          n.putBooleanProp(Node.FREE_CALL, false);\n+        }\n+      }\n+      // Handle direct calls to non-arrow non-generator non-strict functions\n+      if (first.getNext() == null &&\n+          parent.getBooleanProp(Node.INSIDE_NON_ARROW_NON_GENERATOR_FUNCTION) &&\n+          parent.getBooleanProp(Node.NON_STRICT_THIS) &&\n+          !parent.getBooleanProp(Node.IS_GENERATOR_FUNCTION)) {\n+        n.putBooleanProp(Node.FREE_CALL, false);\n+      }\n+    }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}