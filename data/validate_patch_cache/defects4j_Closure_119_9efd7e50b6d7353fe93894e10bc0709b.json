{
    "patch": "case Token.ASSIGN:\n      if (parent != null && parent.getFirstChild() == n) {\n        // Check if this is a conditional statement\n        Node rvalue = NodeUtil.getRValueOfLValue(parent);\n        if (rvalue != null) {\n          type = getValueType(rvalue);\n        }\n        isSet = true;\n      }\n      break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..5b330926 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -302,7 +302,6 @@ class GlobalNamespace\n \n       return true;\n     }\n-\n     public void collect(JSModule module, Scope scope, Node n) {\n       Node parent = n.getParent();\n \n@@ -363,6 +362,16 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.ASSIGN:\n+      if (parent != null && parent.getFirstChild() == n) {\n+        // Check if this is a conditional statement\n+        Node rvalue = NodeUtil.getRValueOfLValue(parent);\n+        if (rvalue != null) {\n+          type = getValueType(rvalue);\n+        }\n+        isSet = true;\n+      }\n+      break;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}