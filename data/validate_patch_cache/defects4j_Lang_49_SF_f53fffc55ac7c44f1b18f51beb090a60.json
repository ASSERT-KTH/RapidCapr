{
    "patch": "    public Fraction reduce() {\n        int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n        int sign = numerator * denominator < 0 ? -1 : 1;\n        return new Fraction(sign * Math.abs(numerator) / gcd, Math.abs(denominator) / gcd);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..64f674c7 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -463,11 +463,9 @@ public final class Fraction extends Number implements Comparable {\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n     public Fraction reduce() {\n-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n-        if (gcd == 1) {\n-            return this;\n-        }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n+        int sign = numerator * denominator < 0 ? -1 : 1;\n+        return new Fraction(sign * Math.abs(numerator) / gcd, Math.abs(denominator) / gcd);\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected same:<-2/3> was not:<-2/3>",
    "test_result": "FAIL"
}