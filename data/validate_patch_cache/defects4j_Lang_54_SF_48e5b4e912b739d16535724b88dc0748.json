{
    "patch": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len != 2 && len != 5 && len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_' || str.charAt(len-1) == '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            int index = str.substring(3).indexOf('_');\n            if (index < 0 || index == len-4) {\n                return new Locale(str.substring(0, 2), str.substring(3));\n            } else {\n                index += 3;\n                int nextIndex = str.substring(index+1).indexOf('_');\n                if (nextIndex < 0) {\n                    nextIndex = len;\n                } else {\n                    nextIndex += index + 1;\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, index), str.substring(index+1, nextIndex));\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..d36121e2 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -107,21 +107,21 @@ public class LocaleUtils {\n         if (len == 2) {\n             return new Locale(str, \"\");\n         } else {\n-            if (str.charAt(2) != '_') {\n+            if (str.charAt(2) != '_' || str.charAt(len-1) == '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            int index = str.substring(3).indexOf('_');\n+            if (index < 0 || index == len-4) {\n+                return new Locale(str.substring(0, 2), str.substring(3));\n             } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                index += 3;\n+                int nextIndex = str.substring(index+1).indexOf('_');\n+                if (nextIndex < 0) {\n+                    nextIndex = len;\n+                } else {\n+                    nextIndex += index + 1;\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+                return new Locale(str.substring(0, 2), str.substring(3, index), str.substring(index+1, nextIndex));\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Should fail second part not uppercase",
    "test_result": "FAIL"
}