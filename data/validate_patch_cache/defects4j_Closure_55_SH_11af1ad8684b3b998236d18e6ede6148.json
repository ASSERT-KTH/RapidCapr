{
    "patch": "     if (NodeUtil.isFunctionExpression(n)) {\n         String name = NodeUtil.getFunctionName(n);\n         return !Strings.isNullOrEmpty(name);\n     }\n     return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex dbf00069..74c941d1 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,7 +114,11 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n);\n+     if (NodeUtil.isFunctionExpression(n)) {\n+         String name = NodeUtil.getFunctionName(n);\n+         return !Strings.isNullOrEmpty(name);\n+     }\n+     return false;\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}