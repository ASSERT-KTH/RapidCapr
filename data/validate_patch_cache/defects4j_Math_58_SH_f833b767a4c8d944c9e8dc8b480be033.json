{
    "patch": "if (guess[1] <= 0) {\n    guess[1] = Math.max(Math.abs(guess[1]), Math.ulp(1d));\n} \nif (guess[2] <= 0) {\n    guess[2] = Math.max(Math.abs(guess[2]), Math.ulp(1d));\n}\nreturn fit(new Gaussian.Parametric(), guess);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..ff126b043 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,13 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+if (guess[1] <= 0) {\n+    guess[1] = Math.max(Math.abs(guess[1]), Math.ulp(1d));\n+} \n+if (guess[2] <= 0) {\n+    guess[2] = Math.max(Math.abs(guess[2]), Math.ulp(1d));\n+}\n+return fit(new Gaussian.Parametric(), guess);\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<233003.2967252038> but was:<233003.3424587905>",
    "test_result": "FAIL"
}