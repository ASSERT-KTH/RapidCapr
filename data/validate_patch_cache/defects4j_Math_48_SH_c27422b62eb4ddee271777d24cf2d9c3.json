{
    "patch": "                case REGULA_FALSI:\n                    // Detect early that algorithm is stuck, instead of waiting\n                    // for the maximum number of iterations to be exceeded.\n                    if (evaluations.getCount() >= getMaxEvaluations()) {\n                        throw new ConvergenceException(LocalizedFormats.FAILED_BRACKETING,\n                                                       getMaxEvaluations(),\n                                                       getAbsoluteAccuracy(),\n                                                       getRelativeAccuracy());\n                    }\n                    break;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\nindex 8a667dad3..f2bda5614 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n@@ -186,6 +186,16 @@ public abstract class BaseSecantSolver\n                 case REGULA_FALSI:\n                     // Detect early that algorithm is stuck, instead of waiting\n                     // for the maximum number of iterations to be exceeded.\n+                case REGULA_FALSI:\n+                    // Detect early that algorithm is stuck, instead of waiting\n+                    // for the maximum number of iterations to be exceeded.\n+                    if (evaluations.getCount() >= getMaxEvaluations()) {\n+                        throw new ConvergenceException(LocalizedFormats.FAILED_BRACKETING,\n+                                                       getMaxEvaluations(),\n+                                                       getAbsoluteAccuracy(),\n+                                                       getRelativeAccuracy());\n+                    }\n+                    break;\n                     break;\n                 default:\n                     // Should never happen.",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}