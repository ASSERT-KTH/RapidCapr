{
    "patch": "private static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n    if (!NodeUtil.isExprCall(parent)) {\n        return null;\n    }\n    Node callee = node.getFirstChild();\n    if (callee == null || callee.getType() != Token.GETPROP) {\n        return null;\n    }\n    String qualifiedName = callee.getQualifiedName();\n    if (!functionName.equals(qualifiedName)) {\n        return null;\n    }\n    Node target = calle",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ClosureCodingConvention.java b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\nindex c507c924..6e017479 100644\n--- a/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n+++ b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n@@ -185,23 +185,19 @@ public class ClosureCodingConvention extends DefaultCodingConvention {\n     return extractClassNameIfGoog(node, parent, \"goog.require\");\n   }\n \n-  private static String extractClassNameIfGoog(Node node, Node parent,\n-      String functionName){\n-    String className = null;\n-    if (NodeUtil.isExprCall(parent)) {\n-      Node callee = node.getFirstChild();\n-      if (callee != null && callee.getType() == Token.GETPROP) {\n-        String qualifiedName = callee.getQualifiedName();\n-        if (functionName.equals(qualifiedName)) {\n-          Node target = callee.getNext();\n-          if (target != null) {\n-            className = target.getString();\n-          }\n-        }\n-      }\n+private static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n+    if (!NodeUtil.isExprCall(parent)) {\n+        return null;\n     }\n-    return className;\n-  }\n+    Node callee = node.getFirstChild();\n+    if (callee == null || callee.getType() != Token.GETPROP) {\n+        return null;\n+    }\n+    String qualifiedName = callee.getQualifiedName();\n+    if (!functionName.equals(qualifiedName)) {\n+        return null;\n+    }\n+    Node target = calle\n \n   /**\n    * Use closure's implementation.",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}