{
    "patch": "    public static int gcd(final int... array) {\n        if (array == null || array.length == 0) {\n            throw new IllegalArgumentException(\"No argument passed\");\n        }\n        int result = array[0];\n        for (int i = 1; i < array.length; i++) {\n            result = gcd(result, array[i]);\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java\nindex c5342aeb3..b792884ed 100644\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n@@ -409,7 +409,16 @@ public final class MathUtils {\n      * @since 1.1\n      */\n     public static int gcd(int u, int v) {\n-        if (u * v == 0) {\n+    public static int gcd(final int... array) {\n+        if (array == null || array.length == 0) {\n+            throw new IllegalArgumentException(\"No argument passed\");\n+        }\n+        int result = array[0];\n+        for (int i = 1; i < array.length; i++) {\n+            result = gcd(result, array[i]);\n+        }\n+        return result;\n+    }\n             return (Math.abs(u) + Math.abs(v));\n         }\n         // keep u and v negative, as negative integers range down to",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}