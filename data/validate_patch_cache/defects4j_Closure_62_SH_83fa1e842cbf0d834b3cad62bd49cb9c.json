{
    "patch": "if (excerpt.equals(LINE)) {\n  int paddingLength = sourceExcerpt.length() - charno;\n  if (paddingLength > 0) {\n    b.append(sourceExcerpt, 0, charno);\n    b.append(String.format(\"%\" + paddingLength + \"s\", \"\").replace(' ', ' '));\n    b.append(\"^\\n\");\n  } else {\n    b.append(sourceExcerpt);\n  }\n} else {\n  b.append(sourceExcerpt);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..a9e45e45 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,18 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+if (excerpt.equals(LINE)) {\n+  int paddingLength = sourceExcerpt.length() - charno;\n+  if (paddingLength > 0) {\n+    b.append(sourceExcerpt, 0, charno);\n+    b.append(String.format(\"%\" + paddingLength + \"s\", \"\").replace(' ', ' '));\n+    b.append(\"^\\n\");\n+  } else {\n+    b.append(sourceExcerpt);\n+  }\n+} else {\n+  b.append(sourceExcerpt);\n+}\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}