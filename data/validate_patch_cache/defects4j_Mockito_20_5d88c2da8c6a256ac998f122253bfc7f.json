{
    "patch": "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n        T mockInstance;\n        try {\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) classInstantiator.instantiate(mockedProxyType);\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            mockInstance = ensureMockIsAssignableToMockedType(settings, mockAccess);\n\n            return mockInstance;\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance type : \" + describeClass(MockMethodInterceptor.MockAccess.class),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\nindex 9dc44e663..81cdcd76e 100644\n--- a/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n+++ b/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java\n@@ -20,7 +20,6 @@ public class ByteBuddyMockMaker implements MockMaker {\n         classInstantiator = initializeClassInstantiator();\n         cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();\n     }\n-\n     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n             throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n@@ -29,19 +28,19 @@ public class ByteBuddyMockMaker implements MockMaker {\n                 settings.getTypeToMock(),\n                 settings.getExtraInterfaces()\n         );\n-        T mockInstance = null;\n+        T mockInstance;\n         try {\n-            mockInstance = classInstantiator.instantiate(mockedProxyType);\n-            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n+            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) classInstantiator.instantiate(mockedProxyType);\n             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n+            mockInstance = ensureMockIsAssignableToMockedType(settings, mockAccess);\n \n-            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n+            return mockInstance;\n         } catch (ClassCastException cce) {\n             throw new MockitoException(join(\n                     \"ClassCastException occurred while creating the mockito mock :\",\n                     \"  class to mock : \" + describeClass(mockedProxyType),\n                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n-                    \"  proxy instance class : \" + describeClass(mockInstance),\n+                    \"  proxy instance type : \" + describeClass(MockMethodInterceptor.MockAccess.class),\n                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                     \"\",\n                     \"You might experience classloading issues, please ask the mockito mailing-list.\",",
    "result_reason": "error: method ensureMockIsAssignableToMockedType in class ByteBuddyMockMaker cannot be applied to given types;",
    "test_result": "ERROR"
}