{
    "patch": "import org.mockito.internal.creation.bytebuddy.MockCandidate;\n    \nprivate void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Set<MockCandidate> matchingCandidates = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n        MockCandidate candidateToInject = matchingCandidates.iterator().next();\n        candidateToInject.thenInject();\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..750db1043 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -90,7 +90,15 @@ public class DefaultInjectionEngine {\n \n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+import org.mockito.internal.creation.bytebuddy.MockCandidate;\n+    \n+private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n+    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n+        Set<MockCandidate> matchingCandidates = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n+        MockCandidate candidateToInject = matchingCandidates.iterator().next();\n+        candidateToInject.thenInject();\n+    }\n+}\n         }\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}