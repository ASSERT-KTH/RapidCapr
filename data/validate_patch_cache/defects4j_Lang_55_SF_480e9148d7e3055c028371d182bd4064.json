{
    "patch": "    public void stop() {\n        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n            throw new IllegalStateException(\"Stopwatch is not running. \");\n        }\n        if (this.runningState == STATE_SUSPENDED) {\n            // If the stopwatch is suspended, add the duration of the previous run to the total time\n            totalTime += System.currentTimeMillis() - this.suspendTime;\n            this.suspendTime = 0;\n        } else {\n            // If the stopwatch is running, calculate the duration of the run and add it to the total time\n            totalTime += System.currentTimeMillis() - startTime;\n        }\n\n        this.runningState = STATE_STOPPED;\n        stopTime = System.currentTimeMillis();\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/time/StopWatch.java b/src/java/org/apache/commons/lang/time/StopWatch.java\nindex 8f394217..f0c0b7aa 100644\n--- a/src/java/org/apache/commons/lang/time/StopWatch.java\n+++ b/src/java/org/apache/commons/lang/time/StopWatch.java\n@@ -115,8 +115,17 @@ public class StopWatch {\n         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n             throw new IllegalStateException(\"Stopwatch is not running. \");\n         }\n-            stopTime = System.currentTimeMillis();\n+        if (this.runningState == STATE_SUSPENDED) {\n+            // If the stopwatch is suspended, add the duration of the previous run to the total time\n+            totalTime += System.currentTimeMillis() - this.suspendTime;\n+            this.suspendTime = 0;\n+        } else {\n+            // If the stopwatch is running, calculate the duration of the run and add it to the total time\n+            totalTime += System.currentTimeMillis() - startTime;\n+        }\n+\n         this.runningState = STATE_STOPPED;\n+        stopTime = System.currentTimeMillis();\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}