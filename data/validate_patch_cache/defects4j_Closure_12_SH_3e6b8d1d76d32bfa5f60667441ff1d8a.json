{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (cfgNode.isTry()) {\n        return cfgNode.getFirstChild().hasChildren();\n    } else {\n        return cfgNode.getFirstChild() != null &&\n            cfgNode.getFirstChild().isScript() &&\n            cfgNode.getFirstChild().hasChildren();\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..3e668814 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,15 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (cfgNode.isTry()) {\n+        return cfgNode.getFirstChild().hasChildren();\n+    } else {\n+        return cfgNode.getFirstChild() != null &&\n+            cfgNode.getFirstChild().isScript() &&\n+            cfgNode.getFirstChild().hasChildren();\n+    }\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}