{
    "patch": "double successRatio = ((double) getNumberOfSuccesses()) / ((double) getPopulationSize());\ndouble mean = successRatio * ((double) getSampleSize());\nif (Double.isFinite(mean) && mean >= 0) {\n    retur",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..e1ebaf79c 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -265,7 +265,10 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+double successRatio = ((double) getNumberOfSuccesses()) / ((double) getPopulationSize());\n+double mean = successRatio * ((double) getSampleSize());\n+if (Double.isFinite(mean) && mean >= 0) {\n+    retur\n     }\n \n     /**",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}