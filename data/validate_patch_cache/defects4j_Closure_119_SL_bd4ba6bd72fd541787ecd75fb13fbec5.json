{
    "patch": "case Token.NAME:\n  // This may be a variable get or set.\n  if (NodeUtil.isNameDeclOrSimpleAssignLhs(n, parent)) {\n    isSet = true;\n    type = getValueType(n.getNext());\n  } else if (NodeUtil.isNameReferenced(n, parent)) {\n    name = n.getString();\n  } else {\n    return;\n  }\n  break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..47431cb2 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,17 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.NAME:\n+  // This may be a variable get or set.\n+  if (NodeUtil.isNameDeclOrSimpleAssignLhs(n, parent)) {\n+    isSet = true;\n+    type = getValueType(n.getNext());\n+  } else if (NodeUtil.isNameReferenced(n, parent)) {\n+    name = n.getString();\n+  } else {\n+    return;\n+  }\n+  break;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}