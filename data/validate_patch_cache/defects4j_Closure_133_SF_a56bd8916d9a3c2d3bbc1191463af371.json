{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    List<ExceptionRange> exceptions = getCfg().getExceptionHandlerRanges(cfgNode);\n    return !exceptions.isEmpty();\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..8d1f5b37 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,9 +2396,9 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+    List<ExceptionRange> exceptions = getCfg().getExceptionHandlerRanges(cfgNode);\n+    return !exceptions.isEmpty();\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}