{
    "patch": "public double[] repairAndDecode(final double[] x) {\n    double[] decoded = decode(x);\n    for(int i = 0; i < decoded.length; i++) {\n        if(decoded[i] < lower[i])\n            decoded[i] = lower[i];\n        else if(decoded[i] > upper[i])\n            decoded[i] = upper[i];\n    }\n    return decoded;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 4b7dbf6bb..a789cd1f0 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -918,7 +918,16 @@ public class CMAESOptimizer\n          * @return the original objective variables, possibly repaired.\n          */\n         public double[] repairAndDecode(final double[] x) {\n-            return\n+public double[] repairAndDecode(final double[] x) {\n+    double[] decoded = decode(x);\n+    for(int i = 0; i < decoded.length; i++) {\n+        if(decoded[i] < lower[i])\n+            decoded[i] = lower[i];\n+        else if(decoded[i] > upper[i])\n+            decoded[i] = upper[i];\n+    }\n+    return decoded;\n+}\n                 decode(x);\n         }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}