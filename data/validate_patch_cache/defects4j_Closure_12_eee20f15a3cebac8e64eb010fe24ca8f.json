{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n    if (NodeUtil.isTryBlock(cfgNode)) {\n        Node lastChild = cfgNode.getLastChild();\n        if (lastChild.hasChildren()) {\n            Node catchBlock = lastChild.getFirstChild();\n            Node finallyBlock = catchBlock.getNext();\n            if (catchBlock.hasChildren() || finallyBlock != null) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..ce6ce81c 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -155,8 +155,20 @@ class MaybeReachingVariableUse extends\n \n     return output;\n   }\n-\n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+    if (NodeUtil.isTryBlock(cfgNode)) {\n+        Node lastChild = cfgNode.getLastChild();\n+        if (lastChild.hasChildren()) {\n+            Node catchBlock = lastChild.getFirstChild();\n+            Node finallyBlock = catchBlock.getNext();\n+            if (catchBlock.hasChildren() || finallyBlock != null) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}