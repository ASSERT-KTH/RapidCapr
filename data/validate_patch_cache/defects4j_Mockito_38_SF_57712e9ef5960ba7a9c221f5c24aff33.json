{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (m == null && arg == null) {\n        return true; // both objects are null, so they are equal\n    }\n    if (m == null || arg == null) {\n        return false; // one object is null and the other is not, so they are not equal\n    }\n\n    try {\n        return m.toString().equals(arg.toString()); // compare the string representations using Matcher's toString() method instead of StringDescription.toString()\n    } catch (NullPointerException e) {\n        // if either object cannot be converted to a string, they are not equal\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..4610f2fca 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,20 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n-    private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n-    }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (m == null && arg == null) {\n+        return true; // both objects are null, so they are equal\n+    }\n+    if (m == null || arg == null) {\n+        return false; // one object is null and the other is not, so they are not equal\n+    }\n+\n+    try {\n+        return m.toString().equals(arg.toString()); // compare the string representations using Matcher's toString() method instead of StringDescription.toString()\n+    } catch (NullPointerException e) {\n+        // if either object cannot be converted to a string, they are not equal\n+        return false;\n+    }\n+}\n }",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}