{
    "patch": "if (val == null) {\n    return null;\n}\nif (val.isEmpty()) {\n    throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n}\nif (val.length() > 1 && val.startsWith(\"--\")) {\n    // this is protection for poorness in java.lang.BigDecimal.\n    // it accepts this as a legal value, but it does not appear \n    // to be in specification of class. OS X Java parses it to \n    // a wrong value.\n    return null;\n}\nif(!Character.isDigit(val.charAt(0)) && val.charAt(0) != '-' && val.charAt(0) != '+'){\n    throw new NumberFormatException(val + \" is not a valid number.\");\n}\nif(val.length() == 1 && !Character.isDigit(val.charAt(0))){\n    throw new NumberFormatException(val + \" is not a valid number.\");\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..331f5306 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,25 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+if (val == null) {\n+    return null;\n+}\n+if (val.isEmpty()) {\n+    throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n+}\n+if (val.length() > 1 && val.startsWith(\"--\")) {\n+    // this is protection for poorness in java.lang.BigDecimal.\n+    // it accepts this as a legal value, but it does not appear \n+    // to be in specification of class. OS X Java parses it to \n+    // a wrong value.\n+    return null;\n+}\n+if(!Character.isDigit(val.charAt(0)) && val.charAt(0) != '-' && val.charAt(0) != '+'){\n+    throw new NumberFormatException(val + \" is not a valid number.\");\n+}\n+if(val.length() == 1 && !Character.isDigit(val.charAt(0))){\n+    throw new NumberFormatException(val + \" is not a valid number.\");\n+}\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "junit.framework.AssertionFailedError: isNumber(String)/createNumber(String) 3 failed",
    "test_result": "FAIL"
}