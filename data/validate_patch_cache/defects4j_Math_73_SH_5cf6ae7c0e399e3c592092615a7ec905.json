{
    "patch": "// catch case where initial guess is equal to an endpoint\nif (initial == min) {\n    setResult(min, 0);\n    return result;\n} else if (initial == max) {\n    setResult(max, 0);\n    return result;\n}\n\n// full Brent algorithm starting with provided initial guess\nreturn solve(f, min, yMin, max, yMax, initial, yInitial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..3791451d7 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,17 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+// catch case where initial guess is equal to an endpoint\n+if (initial == min) {\n+    setResult(min, 0);\n+    return result;\n+} else if (initial == max) {\n+    setResult(max, 0);\n+    return result;\n+}\n+\n+// full Brent algorithm starting with provided initial guess\n+return solve(f, min, yMin, max, yMax, initial, yInitial);\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}