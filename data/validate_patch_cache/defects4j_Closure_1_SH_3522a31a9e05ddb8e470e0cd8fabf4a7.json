{
    "patch": "    Preconditions.checkState(cfgNode.isFunction());\n    if (NodeUtil.isGetOrSetKey(cfgNode.getParent())) {\n        // The parameters object literal setters can not be removed.\n        return true;\n    }\n\n    Node argList = cfgNode.getSecondChild();\n    List<Var> parameterVars = ((Function) cfgNode).getParameterVars();\n    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(fnScope, cfgNode);\n    if (!modifyCallers) {\n        // Strip unreferenced args off the end of the function declaration.\n        Node lastParam = argList.getLastChild();\n        while (lastParam != null && !referenced.contains(parameterVars.get(parameterVars.size() - 1))) {\n            argList.removeChild(lastParam);\n            parameterVars.remove(parameterVars.size() - 1);\n            compiler.reportChangeToEnclosingScope(fnScope);\n            lastParam = argList.getLastChild();\n        }\n        return false;\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n        return false;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..5d83b840 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,29 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+    Preconditions.checkState(cfgNode.isFunction());\n+    if (NodeUtil.isGetOrSetKey(cfgNode.getParent())) {\n+        // The parameters object literal setters can not be removed.\n+        return true;\n+    }\n+\n+    Node argList = cfgNode.getSecondChild();\n+    List<Var> parameterVars = ((Function) cfgNode).getParameterVars();\n+    boolean modifyCallers = modifyCallSites && callSiteOptimizer.canModifyCallers(fnScope, cfgNode);\n+    if (!modifyCallers) {\n+        // Strip unreferenced args off the end of the function declaration.\n+        Node lastParam = argList.getLastChild();\n+        while (lastParam != null && !referenced.contains(parameterVars.get(parameterVars.size() - 1))) {\n+            argList.removeChild(lastParam);\n+            parameterVars.remove(parameterVars.size() - 1);\n+            compiler.reportChangeToEnclosingScope(fnScope);\n+            lastParam = argList.getLastChild();\n+        }\n+        return false;\n+    } else {\n+        callSiteOptimizer.optimize(fnScope, referenced);\n+        return false;\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}