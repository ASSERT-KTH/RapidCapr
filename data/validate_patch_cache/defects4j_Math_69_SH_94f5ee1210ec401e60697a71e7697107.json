{
    "patch": "double absT = Math.abs(t);\ndouble p = 2 * (1 - tDistribution.cumulativeProbability(absT));\nif (Double.isNaN(p)) {\n    out[i][j] = Double.NaN;\n} else {\n    out[i][j] = Math.max(0.0, Math.min(1.0, p));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..e70d51dc5 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,13 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+double absT = Math.abs(t);\n+double p = 2 * (1 - tDistribution.cumulativeProbability(absT));\n+if (Double.isNaN(p)) {\n+    out[i][j] = Double.NaN;\n+} else {\n+    out[i][j] = Math.max(0.0, Math.min(1.0, p));\n+}\n                 }\n             }\n         }",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}