{
    "patch": "for(;;) {\n    patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n    if(!patternMatcher.lookingAt()) {\n        nextStrategy = null;\n        break;\n    }\n    String nextFormatField= patternMatcher.group();\n    nextStrategy = getStrategy(nextFormatField);\n    if(currentStrategy == null) {\n        throw new IllegalArgumentException(\"Invalid pattern syntax.\");\n    }\n    if(currentStrategy.addRegex(this, regex)) {\n        collector.add(currentStrategy);\n    }\n    currentFormatField= nextFormatField;\n    currentStrategy= nextStrategy;\n}\nif(currentStrategy == null) {\n    throw new IllegalArgumentException(\"Invalid pattern syntax.\");\n}\nif(currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..6e7ebac5 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,29 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+for(;;) {\n+    patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n+    if(!patternMatcher.lookingAt()) {\n+        nextStrategy = null;\n+        break;\n+    }\n+    String nextFormatField= patternMatcher.group();\n+    nextStrategy = getStrategy(nextFormatField);\n+    if(currentStrategy == null) {\n+        throw new IllegalArgumentException(\"Invalid pattern syntax.\");\n+    }\n+    if(currentStrategy.addRegex(this, regex)) {\n+        collector.add(currentStrategy);\n+    }\n+    currentFormatField= nextFormatField;\n+    currentStrategy= nextStrategy;\n+}\n+if(currentStrategy == null) {\n+    throw new IllegalArgumentException(\"Invalid pattern syntax.\");\n+}\n+if(currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "java.lang.ExceptionInInitializerError",
    "test_result": "FAIL"
}