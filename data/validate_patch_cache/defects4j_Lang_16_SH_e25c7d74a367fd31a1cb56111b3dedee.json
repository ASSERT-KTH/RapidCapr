{
    "patch": "if (str.startsWith(\"--\")) {\n    // this is protection for poorness in java.lang.BigDecimal.\n    // it accepts this as a legal value, but it does not appear \n    // to be in specification of class. OS X Java parses it to \n    // a wrong value.\n    return null;\n} else if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n    // hex value\n    // strip off leading '0x', '0X', '-0x', or '-0X' before parsing\n    String hex = (str.charAt(0) == '-' ? str.substring(3) : str.substring(2));\n    int radix = 16;\n    if (str.charAt(0) == '-') {\n        hex = hex.toUpperCase(Locale.ROOT);\n    }\n    if (hex.endsWith(\"L\") || hex.endsWith(\"l\")) {\n        return createLong(hex.substring(0, hex.length() - 1), radix);\n    } else if (hex.indexOf('.') > -1 || hex.indexOf('e') > -1 || hex.indexOf('E') > -1) {\n        return createBigDecimal(hex);\n    } else {\n        return createInteger(hex, radix);\n    }\n} else {\n    // decimal value\n    // proceed with existing parsing logic\n    char lastChar = str.charAt(str.length() - 1);\n    // ...\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..141dbe48 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,33 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.startsWith(\"--\")) {\n+    // this is protection for poorness in java.lang.BigDecimal.\n+    // it accepts this as a legal value, but it does not appear \n+    // to be in specification of class. OS X Java parses it to \n+    // a wrong value.\n+    return null;\n+} else if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n+    // hex value\n+    // strip off leading '0x', '0X', '-0x', or '-0X' before parsing\n+    String hex = (str.charAt(0) == '-' ? str.substring(3) : str.substring(2));\n+    int radix = 16;\n+    if (str.charAt(0) == '-') {\n+        hex = hex.toUpperCase(Locale.ROOT);\n+    }\n+    if (hex.endsWith(\"L\") || hex.endsWith(\"l\")) {\n+        return createLong(hex.substring(0, hex.length() - 1), radix);\n+    } else if (hex.indexOf('.') > -1 || hex.indexOf('e') > -1 || hex.indexOf('E') > -1) {\n+        return createBigDecimal(hex);\n+    } else {\n+        return createInteger(hex, radix);\n+    }\n+} else {\n+    // decimal value\n+    // proceed with existing parsing logic\n+    char lastChar = str.charAt(str.length() - 1);\n+    // ...\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}