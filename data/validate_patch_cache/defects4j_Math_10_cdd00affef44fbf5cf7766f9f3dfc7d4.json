{
    "patch": "        if (Double.isNaN(result[0])) {\n            // special cases for NaNs\n            result[0] = FastMath.atan2(y[yOffset], x[xOffset]);\n            for (int i = 1; i < result.length; i++) {\n                result[i] = result[0];\n            }\n        } else if (Double.isInfinite(result[0])) {\n            // special cases for infinities\n            double v = FastMath.PI / 2;\n            if (y[yOffset] < 0) {\n                v = -v;\n            }\n            for (int i = 0; i < result.length; i++) {\n                result[i] = v;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\nindex bf6dd65d5..5d5928756 100644\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n@@ -1416,6 +1416,22 @@ public class DSCompiler {\n         }\n \n         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n+        if (Double.isNaN(result[0])) {\n+            // special cases for NaNs\n+            result[0] = FastMath.atan2(y[yOffset], x[xOffset]);\n+            for (int i = 1; i < result.length; i++) {\n+                result[i] = result[0];\n+            }\n+        } else if (Double.isInfinite(result[0])) {\n+            // special cases for infinities\n+            double v = FastMath.PI / 2;\n+            if (y[yOffset] < 0) {\n+                v = -v;\n+            }\n+            for (int i = 0; i < result.length; i++) {\n+                result[i] = v;\n+            }\n+        }\n \n     }\n ",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}