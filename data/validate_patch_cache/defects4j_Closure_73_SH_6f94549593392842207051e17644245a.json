{
    "patch": "// No charsetEncoder provided - pass straight latin characters through,\n// and escape the rest.  Doing the explicit character check is measurably\n// faster than using the CharsetEncoder.\nif (c >= 0x20 && c <= 0x7f && c != quote && c != '\\\\') {\n  sb.append(c);\n} else if (c == quote) {\n  sb.append('\\\\').append(quote);\n} else if (c == '\\\\') {\n  sb.append('\\\\').append('\\\\');\n} else {\n  // Other characters can be misinterpreted by some js parsers,\n  // or perhaps mangled by proxies along the way, so we play it safe\n  // and unicode escape them.\n  appendHexJavaScriptRepresentation(sb, c);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..b5e5f30c 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,21 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+// No charsetEncoder provided - pass straight latin characters through,\n+// and escape the rest.  Doing the explicit character check is measurably\n+// faster than using the CharsetEncoder.\n+if (c >= 0x20 && c <= 0x7f && c != quote && c != '\\\\') {\n+  sb.append(c);\n+} else if (c == quote) {\n+  sb.append('\\\\').append(quote);\n+} else if (c == '\\\\') {\n+  sb.append('\\\\').append('\\\\');\n+} else {\n+  // Other characters can be misinterpreted by some js parsers,\n+  // or perhaps mangled by proxies along the way, so we play it safe\n+  // and unicode escape them.\n+  appendHexJavaScriptRepresentation(sb, c);\n+}\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}