{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n    // Check if the node has any exception handler predecessors\n    List<DiGraphEdge<Node, Branch>> edges = getCfg().getIncomingEdges(cfgNode);\n    for (DiGraphEdge<Node, Branch> edge : edges) {\n      if (edge.getValue() == Branch.ON_EX) {\n        return true;\n      }\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..46040651 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,16 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+    // Check if the node has any exception handler predecessors\n+    List<DiGraphEdge<Node, Branch>> edges = getCfg().getIncomingEdges(cfgNode);\n+    for (DiGraphEdge<Node, Branch> edge : edges) {\n+      if (edge.getValue() == Branch.ON_EX) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}