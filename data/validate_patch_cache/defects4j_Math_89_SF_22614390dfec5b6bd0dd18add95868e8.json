{
    "patch": "public void addValue(Object v) {\n    if (!(v instanceof Comparable)) {\n        System.err.println(\"Value is not comparable\");\n        return;\n    }\n    addValue((Comparable<?>) v);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/Frequency.java b/src/java/org/apache/commons/math/stat/Frequency.java\nindex c8deca31a..d4ec4c8c2 100644\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n@@ -106,9 +106,13 @@ public class Frequency implements Serializable {\n      * @deprecated use {@link #addValue(Comparable)} instead\n      */\n     @Deprecated\n-    public void addValue(Object v) {\n-            addValue((Comparable<?>) v);            \n+public void addValue(Object v) {\n+    if (!(v instanceof Comparable)) {\n+        System.err.println(\"Value is not comparable\");\n+        return;\n     }\n+    addValue((Comparable<?>) v);\n+}\n     \n     /**\n      * Adds 1 to the frequency count for v.",
    "result_reason": "junit.framework.AssertionFailedError: Expected IllegalArgumentException",
    "test_result": "FAIL"
}