{
    "patch": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (!isAlpha(ch0) || !isAlpha(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch3;\n            for (int i = 3; i < len; i++) {\n                ch3 = str.charAt(i);\n                if (ch3 == '_' || ch3 == '-') {\n                    if (i == 3) {\n                        return new Locale(str.substring(0, 2), \"\", str.substring(3));\n                    }\n                    String secondPart = str.substring(3, i);\n                    if (i + 1 >= len) {\n                        return new Locale(str.substring(0, 2), secondPart);\n                    }\n                    if (str.charAt(i + 1) == '_') {\n                        return new Locale(str.substring(0, 2), secondPart, str.substring(i + 2));\n                    }\n                    if (len - i >= 3 && isAlpha(str.charAt(i + 1)) && isAlpha(str.charAt(i + 2))) {\n                        return new Locale(str.substring(0, 2), secondPart, str.substring(i + 1));\n                    }\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (!isAlpha(ch3) && ch3 != '-' && !Character.isDigit(ch3)) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n            return new Locale(str);\n        }\n    }\n\n    private static boolean isAlpha(char ch) {\n        return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..fd5fdbeb 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -96,36 +96,51 @@ public class LocaleUtils {\n             return null;\n         }\n         int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+        if (len < 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n         char ch0 = str.charAt(0);\n         char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        if (!isAlpha(ch0) || !isAlpha(ch1)) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n         if (len == 2) {\n             return new Locale(str, \"\");\n         } else {\n-            if (str.charAt(2) != '_') {\n+            if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n+            char ch3;\n+            for (int i = 3; i < len; i++) {\n+                ch3 = str.charAt(i);\n+                if (ch3 == '_' || ch3 == '-') {\n+                    if (i == 3) {\n+                        return new Locale(str.substring(0, 2), \"\", str.substring(3));\n+                    }\n+                    String secondPart = str.substring(3, i);\n+                    if (i + 1 >= len) {\n+                        return new Locale(str.substring(0, 2), secondPart);\n+                    }\n+                    if (str.charAt(i + 1) == '_') {\n+                        return new Locale(str.substring(0, 2), secondPart, str.substring(i + 2));\n+                    }\n+                    if (len - i >= 3 && isAlpha(str.charAt(i + 1)) && isAlpha(str.charAt(i + 2))) {\n+                        return new Locale(str.substring(0, 2), secondPart, str.substring(i + 1));\n+                    }\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                if (!isAlpha(ch3) && ch3 != '-' && !Character.isDigit(ch3)) {\n                     throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                 }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n             }\n+            return new Locale(str);\n         }\n     }\n \n+    private static boolean isAlpha(char ch) {\n+        return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Obtains the list of locales to search through when performing",
    "result_reason": "junit.framework.ComparisonFailure: expected:<[]POSIX> but was:<[_]POSIX>",
    "test_result": "FAIL"
}