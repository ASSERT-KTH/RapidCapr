{
    "patch": "catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            if (e.getFieldName().equals(\"weekyear\")) {\n                  // subtract a week from the date in order to shift the week around\n                  millis = savedFields[0].set(millis, resetFields);\n                  DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n                  millis = weeks.subtract(millis, 1);\n                  for (int i = 1; i < count; i++) {\n                        millis = savedFields[i].set(millis, resetFields);\n                  }\n            } else {\n                  throw e;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..160bee75 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,22 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+catch (IllegalFieldValueException e) {\n+            if (text != null) {\n+                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+            }\n+            if (e.getFieldName().equals(\"weekyear\")) {\n+                  // subtract a week from the date in order to shift the week around\n+                  millis = savedFields[0].set(millis, resetFields);\n+                  DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n+                  millis = weeks.subtract(millis, 1);\n+                  for (int i = 1; i < count; i++) {\n+                        millis = savedFields[i].set(millis, resetFields);\n+                  }\n+            } else {\n+                  throw e;\n+            }\n+        }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: 'catch' without 'try'",
    "test_result": "ERROR"
}