{
    "patch": "        if (n.isFunction()) {\n          JSDocInfo info = NodeUtil.getBestJSDocInfo(n);\n          if (info != null && info.isNoInline()) {\n            return true;\n          }\n        }\n        \n        if (n.isBlock()) {\n          Node p = n.getParent();\n          if (p.isLoop() || p.isTry()) {\n            return false;\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..19fe7677 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,19 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isFunction()) {\n+          JSDocInfo info = NodeUtil.getBestJSDocInfo(n);\n+          if (info != null && info.isNoInline()) {\n+            return true;\n+          }\n+        }\n+        \n+        if (n.isBlock()) {\n+          Node p = n.getParent();\n+          if (p.isLoop() || p.isTry()) {\n+            return false;\n+          }\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}