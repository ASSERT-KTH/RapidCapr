{
    "patch": "        if (StringUtils.isNotBlank(str)) {\n            str = str.trim();\n            if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n                char[] chars = str.toCharArray();\n                int offset = 0;\n                if (chars[0] == '-') {\n                    offset = 1;\n                }\n                if (chars.length - offset > 2 && chars[offset + 1] == 'x') {\n                    offset += 2;\n                    int num = 0;\n                    for (; offset < chars.length; offset++) {\n                        char ch = chars[offset];\n                        if (ch >= '0' && ch <= '9') {\n                            num = num * 16 + ch - '0';\n                        } else if (ch >= 'a' && ch <= 'f') {\n                            num = num * 16 + 10 + ch - 'a';\n                        } else if (ch >= 'A' && ch <= 'F') {\n                            num = num * 16 + 10 + ch - 'A';\n                        } else {\n                            throw new NumberFormatException(str + \" is not a valid number.\");\n                        }\n                    }\n                    return (offset > 2 && chars[0] == '-') ? Integer.valueOf(-num) : Integer.valueOf(num);\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..f015d39e 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,32 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+        if (StringUtils.isNotBlank(str)) {\n+            str = str.trim();\n+            if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+                char[] chars = str.toCharArray();\n+                int offset = 0;\n+                if (chars[0] == '-') {\n+                    offset = 1;\n+                }\n+                if (chars.length - offset > 2 && chars[offset + 1] == 'x') {\n+                    offset += 2;\n+                    int num = 0;\n+                    for (; offset < chars.length; offset++) {\n+                        char ch = chars[offset];\n+                        if (ch >= '0' && ch <= '9') {\n+                            num = num * 16 + ch - '0';\n+                        } else if (ch >= 'a' && ch <= 'f') {\n+                            num = num * 16 + 10 + ch - 'a';\n+                        } else if (ch >= 'A' && ch <= 'F') {\n+                            num = num * 16 + 10 + ch - 'A';\n+                        } else {\n+                            throw new NumberFormatException(str + \" is not a valid number.\");\n+                        }\n+                    }\n+                    return (offset > 2 && chars[0] == '-') ? Integer.valueOf(-num) : Integer.valueOf(num);\n+                }\n+            }\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "java.lang.NumberFormatException: For input string: \"1234.5\"",
    "test_result": "FAIL"
}