{
    "patch": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n    int length = searchStr.length();\n    if (length == 0) {\n        return true;\n    }\n    int index = 0;\n    while (true) {\n        index = str.indexOf(searchStr, index);\n        if (index == -1) {\n            return false;\n        }\n        if (regionMatches(str, true, index, searchStr, 0, length)) {\n            return true;\n        }\n        index++;\n    }\n}\n\nprivate static boolean regionMatches(CharSequence cs, boolean ignoreCase, int thisStart, CharSequence substring, int start, int length) {\n    if (cs instanceof String && substring instanceof String) {\n        return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);\n    } else {\n        return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..b9cdc59e 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1041,12 +1041,34 @@ public class StringUtils {\n      * @return true if the String contains the search String irrespective of\n      * case or false if not or <code>null</code> string input\n      */\n-    public static boolean containsIgnoreCase(String str, String searchStr) {\n-        if (str == null || searchStr == null) {\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if (str == null || searchStr == null) {\n+        return false;\n+    }\n+    int length = searchStr.length();\n+    if (length == 0) {\n+        return true;\n+    }\n+    int index = 0;\n+    while (true) {\n+        index = str.indexOf(searchStr, index);\n+        if (index == -1) {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+        if (regionMatches(str, true, index, searchStr, 0, length)) {\n+            return true;\n+        }\n+        index++;\n     }\n+}\n+\n+private static boolean regionMatches(CharSequence cs, boolean ignoreCase, int thisStart, CharSequence substring, int start, int length) {\n+    if (cs instanceof String && substring instanceof String) {\n+        return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);\n+    } else {\n+        return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);\n+    }\n+}\n \n     // IndexOfAny chars\n     //-----------------------------------------------------------------------",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}