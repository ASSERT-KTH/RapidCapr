{
    "patch": "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n    if (width > 0) {\n        ensureCapacity(size + width);\n        String str = (obj == null ? getNullText() : obj.toString());\n        int strLen = str.length();\n        if (strLen >= width) {\n            str.getChars(0, width, buffer, size);\n        } else {\n            int padLen = width - strLen;\n            size += str.getChars(0, strLen, buffer, size);\n            for (int i = 0; i < padLen; i++) {\n                buffer[size++] = padChar;\n            }\n        }\n    }\n    return this;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java\nindex 886d424e..c754e2f1 100644\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n@@ -875,24 +875,23 @@ public class StrBuilder implements Cloneable {\n      * @param padChar  the pad character to use\n      * @return this, to enable chaining\n      */\n-    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n-        if (width > 0) {\n-            ensureCapacity(size + width);\n-            String str = (obj == null ? getNullText() : obj.toString());\n-            int strLen = str.length();\n-            if (strLen >= width) {\n-                str.getChars(0, strLen, buffer, size);\n-            } else {\n-                int padLen = width - strLen;\n-                str.getChars(0, strLen, buffer, size);\n-                for (int i = 0; i < padLen; i++) {\n-                    buffer[size + strLen + i] = padChar;\n-                }\n+public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n+    if (width > 0) {\n+        ensureCapacity(size + width);\n+        String str = (obj == null ? getNullText() : obj.toString());\n+        int strLen = str.length();\n+        if (strLen >= width) {\n+            str.getChars(0, width, buffer, size);\n+        } else {\n+            int padLen = width - strLen;\n+            size += str.getChars(0, strLen, buffer, size);\n+            for (int i = 0; i < padLen; i++) {\n+                buffer[size++] = padChar;\n             }\n-            size += width;\n         }\n-        return this;\n     }\n+    return this;\n+}\n \n     /**\n      * Appends an object to the builder padding on the right to a fixed length.",
    "result_reason": "error: bad operand types for binary operator '+'",
    "test_result": "ERROR"
}