{
    "patch": "      switch (this.testForInstanceofOrSubtype(that)) {\n        case TRUE:\n          return new TypePair(this, that);\n        case FALSE:\n          return new TypePair(that, this);\n        default:\n          break;\n      }\n      // the case when types are equal\n      return new TypePair(this, that);",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex aa8c7bc9..66e7f7d9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,7 +703,16 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        return new TypePair(null, null);\n+      switch (this.testForInstanceofOrSubtype(that)) {\n+        case TRUE:\n+          return new TypePair(this, that);\n+        case FALSE:\n+          return new TypePair(that, this);\n+        default:\n+          break;\n+      }\n+      // the case when types are equal\n+      return new TypePair(this, that);\n \n       case FALSE:\n       case UNKNOWN:",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}