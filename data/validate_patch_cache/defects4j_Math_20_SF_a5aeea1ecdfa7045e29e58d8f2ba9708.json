{
    "patch": "public class FitnessFunction {\n    // existing code in FitnessFunction class\n\n    public double[] repairAndDecode(final double[] x, final double[] lower, final double[] upper) {\n        double[] decoded = decode(x);\n        for (int i = 0; i < decoded.length; i++) {\n            if (decoded[i] < lower[i]) {\n                decoded[i] = lower[i];\n            } else if (decoded[i] > upper[i]) {\n                decoded[i] = upper[i];\n            }\n        }\n        return decoded;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex 4b7dbf6bb..0b07931fe 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -917,10 +917,21 @@ public class CMAESOptimizer\n          * @param x Normalized objective variables.\n          * @return the original objective variables, possibly repaired.\n          */\n-        public double[] repairAndDecode(final double[] x) {\n-            return\n-                decode(x);\n+public class FitnessFunction {\n+    // existing code in FitnessFunction class\n+\n+    public double[] repairAndDecode(final double[] x, final double[] lower, final double[] upper) {\n+        double[] decoded = decode(x);\n+        for (int i = 0; i < decoded.length; i++) {\n+            if (decoded[i] < lower[i]) {\n+                decoded[i] = lower[i];\n+            } else if (decoded[i] > upper[i]) {\n+                decoded[i] = upper[i];\n+            }\n         }\n+        return decoded;\n+    }\n+}\n \n         /**\n          * @param x Normalized objective variables.",
    "result_reason": "error: class CMAESOptimizer.FitnessFunction is already defined in class CMAESOptimizer",
    "test_result": "ERROR"
}