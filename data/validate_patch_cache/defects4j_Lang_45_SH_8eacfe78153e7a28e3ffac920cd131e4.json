{
    "patch": "// if the lower value is greater than the length of the string,\n// set it to the length of the string\nif (lower > str.length()) {\n    lower = str.length();\n}\n\n// if the upper value is -1 (i.e. no limit) or is greater than or equal to\n// the length of the string, set it to the length of the string\nif (upper == -1 || upper >= str.length()) {\n    upper = str.length();\n} else {\n    // otherwise, set upper to the minimum of its current value and the string length minus lower\n    upper = Math.min(upper, str.length() - lower);\n}\n\n// if upper is less than or equal to zero, return an empty string\nif (upper <= 0) {\n    return StringUtils.EMPTY;\n}\n\nStringBuffer result = new StringBuffer();\nint index = StringUtils.indexOf(str, \" \", lower);\nif (index == -1 || index > lower + upper) {\n    result.append(str.substring(lower, lower + upper));\n    // only if abbreviation has occurred do we append the appendToEnd value\n    if (lower + upper != str.length()) {\n        result.append(StringUtils.defaultString(appendToEnd));\n    }\n} else {\n    result.append(str.substring(lower, index));\n    result.append(StringUtils.defaultString(appendToEnd));\n}\nreturn result.toString();",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..29d18d5b 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,39 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+// if the lower value is greater than the length of the string,\n+// set it to the length of the string\n+if (lower > str.length()) {\n+    lower = str.length();\n+}\n+\n+// if the upper value is -1 (i.e. no limit) or is greater than or equal to\n+// the length of the string, set it to the length of the string\n+if (upper == -1 || upper >= str.length()) {\n+    upper = str.length();\n+} else {\n+    // otherwise, set upper to the minimum of its current value and the string length minus lower\n+    upper = Math.min(upper, str.length() - lower);\n+}\n+\n+// if upper is less than or equal to zero, return an empty string\n+if (upper <= 0) {\n+    return StringUtils.EMPTY;\n+}\n+\n+StringBuffer result = new StringBuffer();\n+int index = StringUtils.indexOf(str, \" \", lower);\n+if (index == -1 || index > lower + upper) {\n+    result.append(str.substring(lower, lower + upper));\n+    // only if abbreviation has occurred do we append the appendToEnd value\n+    if (lower + upper != str.length()) {\n+        result.append(StringUtils.defaultString(appendToEnd));\n+    }\n+} else {\n+    result.append(str.substring(lower, index));\n+    result.append(StringUtils.defaultString(appendToEnd));\n+}\n+return result.toString();\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: variable result is already defined in method abbreviate(String,int,int,String)",
    "test_result": "ERROR"
}