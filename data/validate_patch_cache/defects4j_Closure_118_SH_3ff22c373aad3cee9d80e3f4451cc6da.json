{
    "patch": "String name = child.getString();\nT type = typeSystem.getType(getScope(), child);\nif (type == null) {\n    Node enclosingFunction = NodeUtil.getEnclosingFunction(n);\n    type = typeSystem.getType(getScope(), enclosingFunction);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..2538f430 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,12 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+String name = child.getString();\n+T type = typeSystem.getType(getScope(), child);\n+if (type == null) {\n+    Node enclosingFunction = NodeUtil.getEnclosingFunction(n);\n+    type = typeSystem.getType(getScope(), enclosingFunction);\n+}\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: method getType in interface TypeSystem<T#2> cannot be applied to given types;",
    "test_result": "ERROR"
}