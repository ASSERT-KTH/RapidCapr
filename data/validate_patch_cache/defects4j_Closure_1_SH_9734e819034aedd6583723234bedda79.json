{
    "patch": "// remove the function arguments that are not referenced by the function body\n    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      // The parameters object literal setters can not be removed.\n      return; // exit the function without removal\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      Node cur = argList.getFirstChild();\n      while (cur != null) {\n        Node next = cur.getNext();\n        if (cur.isName()) {\n          Var var = fnScope.getVar(cur.getString());\n          if (!referenced.contains(var)) {\n            // remove the argument\n            argList.removeChild(cur);\n            compiler.reportCodeChange();\n          }\n        }\n        cur = next;\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedVars.java b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\nindex dfad51bc..4cfd5c16 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n@@ -376,6 +376,34 @@ class RemoveUnusedVars\n     // is removing globals, then it's OK to remove unused function args.\n     //\n     // See http://code.google.com/p/closure-compiler/issues/detail?id=253\n+// remove the function arguments that are not referenced by the function body\n+    Node function = fnScope.getRootNode();\n+    Preconditions.checkState(function.isFunction());\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+      // The parameters object literal setters can not be removed.\n+      return; // exit the function without removal\n+    }\n+\n+    Node argList = getFunctionArgList(function);\n+    boolean modifyCallers = modifyCallSites\n+        && callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+      Node cur = argList.getFirstChild();\n+      while (cur != null) {\n+        Node next = cur.getNext();\n+        if (cur.isName()) {\n+          Var var = fnScope.getVar(cur.getString());\n+          if (!referenced.contains(var)) {\n+            // remove the argument\n+            argList.removeChild(cur);\n+            compiler.reportCodeChange();\n+          }\n+        }\n+        cur = next;\n+      }\n+    } else {\n+      callSiteOptimizer.optimize(fnScope, referenced);\n+    }\n \n     Node function = fnScope.getRootNode();\n ",
    "result_reason": "error: variable function is already defined in method removeUnreferencedFunctionArgs(Scope)",
    "test_result": "ERROR"
}