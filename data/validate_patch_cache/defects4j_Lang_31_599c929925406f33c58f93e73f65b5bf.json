{
    "patch": "public static boolean containsAny(String str, char[] searchChars) {\n    return containsAny(str, new String(searchChars));\n}\n\npublic static boolean containsAny(String str, String searchChars) {\n    if (str == null || searchChars == null) {\n        return false;\n    }\n    return searchChars.codePoints().anyMatch(cp -> str.codePoints().anyMatch(c -> c == cp));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..e2d147fd 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,16 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+public static boolean containsAny(String str, char[] searchChars) {\n+    return containsAny(str, new String(searchChars));\n+}\n+\n+public static boolean containsAny(String str, String searchChars) {\n+    if (str == null || searchChars == null) {\n+        return false;\n+    }\n+    return searchChars.codePoints().anyMatch(cp -> str.codePoints().anyMatch(c -> c == cp));\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}