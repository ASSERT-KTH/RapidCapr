{
    "patch": "private String getRemainingJSDocLine() {\n  String result = null;\n  try {\n    result = stream.getRemainingJSDocLine();\n  } catch (IllegalStateException ex) {\n    // reset stream and try again\n    stream.reset();\n    result = stream.getRemainingJSDocLine();\n  }\n  return result;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..53c09138 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,17 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+  String result = null;\n+  try {\n+    result = stream.getRemainingJSDocLine();\n+  } catch (IllegalStateException ex) {\n+    // reset stream and try again\n+    stream.reset();\n+    result = stream.getRemainingJSDocLine();\n+  }\n+  return result;\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}