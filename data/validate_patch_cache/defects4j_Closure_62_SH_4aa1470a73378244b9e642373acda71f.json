{
    "patch": "if (excerpt.equals(LINE)) {\n    for (int i = 0; i < charno; i++) {\n        char c = sourceExcerpt.charAt(i);\n        if (i < sourceExcerpt.length() && Character.isWhitespace(c)) {\n            b.append(c);\n        } else {\n            b.append(' ');\n        }\n    }\n\n    if (sourceExcerpt.length() > charno) {\n        b.append(\"^\");\n    } else {\n        b.append(\"^\");\n        b.append(System.lineSeparator());\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..3cb660ec 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,23 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+if (excerpt.equals(LINE)) {\n+    for (int i = 0; i < charno; i++) {\n+        char c = sourceExcerpt.charAt(i);\n+        if (i < sourceExcerpt.length() && Character.isWhitespace(c)) {\n+            b.append(c);\n+        } else {\n+            b.append(' ');\n+        }\n+    }\n+\n+    if (sourceExcerpt.length() > charno) {\n+        b.append(\"^\");\n+    } else {\n+        b.append(\"^\");\n+        b.append(System.lineSeparator());\n+    }\n+}\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}