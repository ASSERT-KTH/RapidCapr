{
    "patch": "          && n.getFirstChild().getType() == Token.GETPROP\n          && n.getFirstChild().getFirstChild().getType() == Token.NAME) {\n\n        String lhsName = n.getFirstChild().getFirstChild().getString();\n        if (lhsName.equals(\"Object\") || lhsName.equals(\"Function\")) {\n          Node child = n.getFirstChild().getNext();\n\n          if (child.getType() == Token.STRING &&\n              child.getString().equals(\"prototype\")) {\n            return true;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\nindex 30b19e0b..43394276 100644\n--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n@@ -310,12 +310,23 @@ class AnalyzePrototypeProperties implements CompilerPass {\n            n.getType() == Token.FUNCTION &&\n            n.getParent().getType() == Token.NAME);\n     }\n-\n     private boolean isPrototypePropertyAssign(Node assign) {\n       Node n = assign.getFirstChild();\n       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n           && n.getType() == Token.GETPROP\n-          ) {\n+          && n.getFirstChild().getType() == Token.GETPROP\n+          && n.getFirstChild().getFirstChild().getType() == Token.NAME) {\n+\n+        String lhsName = n.getFirstChild().getFirstChild().getString();\n+        if (lhsName.equals(\"Object\") || lhsName.equals(\"Function\")) {\n+          Node child = n.getFirstChild().getNext();\n+\n+          if (child.getType() == Token.STRING &&\n+              child.getString().equals(\"prototype\")) {\n+            return true;\n+          }\n+        }\n+      }\n         // We want to exclude the assignment itself from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType() == Token.GETPROP;",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}