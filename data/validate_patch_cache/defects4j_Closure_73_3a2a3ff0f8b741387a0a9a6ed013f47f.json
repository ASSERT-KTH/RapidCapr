{
    "patch": "          if (outputCharsetEncoder != null) {\n            if (outputCharsetEncoder.canEncode(c)) {\n              sb.append(c);\n            } else if (c > 0x1f && c <= 0x7f) {\n              // Pass straight latin characters through.\n              sb.append(c);\n            } else {\n              appendHexJavaScriptRepresentation(sb, c);\n            }\n          } else {\n            // No charsetEncoder provided - pass straight latin characters\n            // through, and escape the rest.\n            if (c > 0x1f && c <= 0x7f) {\n              sb.append(c);\n            } else {\n              appendHexJavaScriptRepresentation(sb, c);\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..992d00d9 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,8 +1042,25 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n+          if (outputCharsetEncoder != null) {\n+            if (outputCharsetEncoder.canEncode(c)) {\n+              sb.append(c);\n+            } else if (c > 0x1f && c <= 0x7f) {\n+              // Pass straight latin characters through.\n+              sb.append(c);\n+            } else {\n+              appendHexJavaScriptRepresentation(sb, c);\n+            }\n+          } else {\n+            // No charsetEncoder provided - pass straight latin characters\n+            // through, and escape the rest.\n             if (c > 0x1f && c <= 0x7f) {\n               sb.append(c);\n+            } else {\n+              appendHexJavaScriptRepresentation(sb, c);\n+            }\n+          }\n+              sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,\n               // or perhaps mangled by proxies along the way,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}