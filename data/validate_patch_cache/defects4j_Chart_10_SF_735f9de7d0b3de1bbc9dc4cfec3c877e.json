{
    "patch": "public String generateToolTipFragment(String toolTipText) {\n    StringBuilder result = new StringBuilder();\n    result.append(\" title=\\\"\");\n    Matcher matcher = Pattern.compile(\"[&\\\"'<>]\").matcher(toolTipText);\n    int lastIndex = 0;\n    while (matcher.find()) {\n        String escape = null;\n        char c = toolTipText.charAt(matcher.start());\n        switch (c) {\n            case '&':\n                escape = \"&amp;\";\n                break;\n            case '\\\"':\n                escape = \"&quot;\";\n                break;\n            case '\\'':\n                escape = \"&#39;\";\n                break;\n            case '<':\n                escape = \"&lt;\";\n                break;\n            case '>':\n                escape = \"&gt;\";\n                break;\n        }\n        result.append(toolTipText, lastIndex, matcher.start());\n        result.append(escape);\n        lastIndex = matcher.end();\n    }\n    result.append(toolTipText, lastIndex, toolTipText.length());\n    result.append(\"\\\" alt=\\\"\\\"\");\n    return result.toString();\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java b/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java\nindex cf2934c..4ed8682 100644\n--- a/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java\n+++ b/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java\n@@ -61,9 +61,38 @@ public class StandardToolTipTagFragmentGenerator\n      * \n      * @return The formatted HTML area tag attribute(s).\n      */\n-    public String generateToolTipFragment(String toolTipText) {\n-        return \" title=\\\"\" + toolTipText\n-            + \"\\\" alt=\\\"\\\"\";\n-    }\n+public String generateToolTipFragment(String toolTipText) {\n+    StringBuilder result = new StringBuilder();\n+    result.append(\" title=\\\"\");\n+    Matcher matcher = Pattern.compile(\"[&\\\"'<>]\").matcher(toolTipText);\n+    int lastIndex = 0;\n+    while (matcher.find()) {\n+        String escape = null;\n+        char c = toolTipText.charAt(matcher.start());\n+        switch (c) {\n+            case '&':\n+                escape = \"&amp;\";\n+                break;\n+            case '\\\"':\n+                escape = \"&quot;\";\n+                break;\n+            case '\\'':\n+                escape = \"&#39;\";\n+                break;\n+            case '<':\n+                escape = \"&lt;\";\n+                break;\n+            case '>':\n+                escape = \"&gt;\";\n+                break;\n+        }\n+        result.append(toolTipText, lastIndex, matcher.start());\n+        result.append(escape);\n+        lastIndex = matcher.end();\n+    }\n+    result.append(toolTipText, lastIndex, toolTipText.length());\n+    result.append(\"\\\" alt=\\\"\\\"\");\n+    return result.toString();\n+}\n \n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}