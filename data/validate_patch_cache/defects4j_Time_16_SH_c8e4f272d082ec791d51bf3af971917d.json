{
    "patch": "        long instantLocal = instantMillis;\n        int parsedOffset = 0;\n        if (iOffsetParsed && text.length() > position) {\n            char sign = text.charAt(position);\n            if (sign == '+' || sign == '-') {\n                Integer offset = parser.parseInto(chrono, text.substring(position), position);\n                if (offset != null) {\n                    parsedOffset = offset.intValue();\n                    instantLocal -= parsedOffset;\n                    position += Integer.toString(parsedOffset).length();\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..fc74edee 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,19 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+        long instantLocal = instantMillis;\n+        int parsedOffset = 0;\n+        if (iOffsetParsed && text.length() > position) {\n+            char sign = text.charAt(position);\n+            if (sign == '+' || sign == '-') {\n+                Integer offset = parser.parseInto(chrono, text.substring(position), position);\n+                if (offset != null) {\n+                    parsedOffset = offset.intValue();\n+                    instantLocal -= parsedOffset;\n+                    position += Integer.toString(parsedOffset).length();\n+                }\n+            }\n+        }\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: '.class' expected",
    "test_result": "ERROR"
}