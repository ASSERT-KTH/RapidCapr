{
    "patch": "                long newPosition =\n                    bucket.computeMillis(true, text);\n                if (newPosition == position) {\n                    return setPosition(position, ~position);\n                } else {\n                    return setPosition(position, newPos);\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..9ff79b19 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,13 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+                long newPosition =\n+                    bucket.computeMillis(true, text);\n+                if (newPosition == position) {\n+                    return setPosition(position, ~position);\n+                } else {\n+                    return setPosition(position, newPos);\n+                }\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: '.class' expected",
    "test_result": "ERROR"
}