{
    "patch": "public static double[] bracket(UnivariateRealFunction function,\n            double initial, double lowerBound, double upperBound, \n            int maximumIterations) throws MathIllegalArgumentException, \n            ConvergenceException, FunctionEvaluationException {\n\n    if (function == null) {\n        throw new NullArgumentException(LocalizedFormats.FUNCTION);\n    }\n    if (maximumIterations <= 0)  {\n        throw new NotStrictlyPositiveException(LocalizedFormats.INVALID_MAX_ITERATIONS, maximumIterations);\n    }\n    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n        throw new OutOfRangeException(initial, lowerBound, upperBound);\n    }\n\n    double a = initial;\n    double b = initial;\n    double fa;\n    double fb;\n    int numIterations = 0 ;\n    \n    do {\n        a = Math.max(a - 1.0, lowerBound);\n        b = Math.min(b + 1.0, upperBound);\n        fa = function.value(a);\n        fb = function.value(b);\n        numIterations++ ;\n    } while ((fa * fb > 0.0) && (numIterations < maximumIterations)\n             && ((a > lowerBound) || (b < upperBound)));\n   \n    if (fa * fb >= 0.0 ) {\n        throw new ConvergenceException(new LocalizedFormats(\"BRACKETING_FAILED\"), a, b, fa, fb);\n    }\n        \n    return new double[]{a, b};\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\nindex bf3e4bf53..4574fa520 100644\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n@@ -195,7 +195,42 @@ public class UnivariateRealSolverUtils {\n         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                 ((a > lowerBound) || (b < upperBound)));\n    \n-        if (fa * fb >= 0.0 ) {\n+public static double[] bracket(UnivariateRealFunction function,\n+            double initial, double lowerBound, double upperBound, \n+            int maximumIterations) throws MathIllegalArgumentException, \n+            ConvergenceException, FunctionEvaluationException {\n+\n+    if (function == null) {\n+        throw new NullArgumentException(LocalizedFormats.FUNCTION);\n+    }\n+    if (maximumIterations <= 0)  {\n+        throw new NotStrictlyPositiveException(LocalizedFormats.INVALID_MAX_ITERATIONS, maximumIterations);\n+    }\n+    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n+        throw new OutOfRangeException(initial, lowerBound, upperBound);\n+    }\n+\n+    double a = initial;\n+    double b = initial;\n+    double fa;\n+    double fb;\n+    int numIterations = 0 ;\n+    \n+    do {\n+        a = Math.max(a - 1.0, lowerBound);\n+        b = Math.min(b + 1.0, upperBound);\n+        fa = function.value(a);\n+        fb = function.value(b);\n+        numIterations++ ;\n+    } while ((fa * fb > 0.0) && (numIterations < maximumIterations)\n+             && ((a > lowerBound) || (b < upperBound)));\n+   \n+    if (fa * fb >= 0.0 ) {\n+        throw new ConvergenceException(new LocalizedFormats(\"BRACKETING_FAILED\"), a, b, fa, fb);\n+    }\n+        \n+    return new double[]{a, b};\n+}\n             throw new ConvergenceException(\n                       \"number of iterations={0}, maximum iterations={1}, \" +\n                       \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}