{
    "patch": "    public void verify(VerificationData data) {\n        AssertionError error = null;\n\n        timer.start();\n        while (timer.isCounting()) {\n            try {\n                delegate.verify(data);\n\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            } catch (MockitoAssertionError e) {\n                error = handleVerifyException(e);\n            }\n            catch (Throwable e) {\n                if(isJUnitAvailable()) {\n                    // Append exception message with dependency to JUnit\n                    throw new AssertionError(String.format(\"'%s' has some dependency to JUnit\", pureMockitoAPIClass), e);\n                } else {\n                    error = handleVerifyException(e);\n                }\n            }\n        }\n\n        if (error != null) {\n            throw error;\n        }\n    }\n    \n    private boolean isJUnitAvailable() {\n        try {\n            Class.forName(\"org.junit.Assert\");\n            return true;\n        } catch (ClassNotFoundException e) {\n            return false;\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..ccb5de270 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -88,8 +88,13 @@ public class VerificationOverTimeImpl implements VerificationMode {\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n             }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n-                error = handleVerifyException(e);\n+            catch (Throwable e) {\n+                if(isJUnitAvailable()) {\n+                    // Append exception message with dependency to JUnit\n+                    throw new AssertionError(String.format(\"'%s' has some dependency to JUnit\", pureMockitoAPIClass), e);\n+                } else {\n+                    error = handleVerifyException(e);\n+                }\n             }\n         }\n \n@@ -97,6 +102,15 @@ public class VerificationOverTimeImpl implements VerificationMode {\n             throw error;\n         }\n     }\n+    \n+    private boolean isJUnitAvailable() {\n+        try {\n+            Class.forName(\"org.junit.Assert\");\n+            return true;\n+        } catch (ClassNotFoundException e) {\n+            return false;\n+        }\n+    }\n \n     private AssertionError handleVerifyException(AssertionError e) {\n         if (canRecoverFromFailure(delegate)) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}