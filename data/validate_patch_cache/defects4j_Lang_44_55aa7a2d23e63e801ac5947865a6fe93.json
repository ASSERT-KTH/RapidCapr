{
    "patch": "        if (val.startsWith(\"+\")) {\n            val = val.substring(1);\n        }\n        try {\n            // First, try the default locale\n            DecimalFormat format = new DecimalFormat();\n            format.setGroupingUsed(false);\n            Number result = format.parse(val);\n            if (val.length() == result.toString().length()) {\n                return result;\n            }\n\n            // Otherwise, try with Locale.ENGLISH\n            format = new DecimalFormat(\"\", DecimalFormatSymbols.getInstance(Locale.ENGLISH));\n            format.setGroupingUsed(false);\n            result = format.parse(val);\n            if (val.length() == result.toString().length()) {\n                return result;\n            }\n        } catch (ParseException e) {\n            // Ignore, since we will throw a NumberFormatException below\n        } catch (NumberFormatException e) {\n            // Ignore, since we will throw a NumberFormatException below\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..9f6b7ccf 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,30 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val.startsWith(\"+\")) {\n+            val = val.substring(1);\n+        }\n+        try {\n+            // First, try the default locale\n+            DecimalFormat format = new DecimalFormat();\n+            format.setGroupingUsed(false);\n+            Number result = format.parse(val);\n+            if (val.length() == result.toString().length()) {\n+                return result;\n+            }\n+\n+            // Otherwise, try with Locale.ENGLISH\n+            format = new DecimalFormat(\"\", DecimalFormatSymbols.getInstance(Locale.ENGLISH));\n+            format.setGroupingUsed(false);\n+            result = format.parse(val);\n+            if (val.length() == result.toString().length()) {\n+                return result;\n+            }\n+        } catch (ParseException e) {\n+            // Ignore, since we will throw a NumberFormatException below\n+        } catch (NumberFormatException e) {\n+            // Ignore, since we will throw a NumberFormatException below\n+        }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}