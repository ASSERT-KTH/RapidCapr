{
    "patch": "    public long computeMillis(boolean resetFields, String text) {\n        SavedField[] savedFields = iSavedFields;\n        int count = iSavedFieldsCount;\n        if (iSavedFieldsShared) {\n            iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n            iSavedFieldsShared = false;\n        }\n        sort(savedFields, count);\n        int year = iDefaultYear;\n        DurationField nullField = null;\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField years = DurationFieldType.years().getField(iChrono);\n        DurationField weekyears = null;\n        DurationField weeks = null;\n        DurationField first = null;\n        if (count > 0) {\n            first = savedFields[0].iField.getType().getField(iChrono).getDurationField();\n            if (count >= 4 && compareReverse(first, months) >= 0 && compareReverse(first, DurationFieldType.days().getField(iChrono)) <= 0) {\n                DurationField field1 = savedFields[1].iField.getType().getField(iChrono).getDurationField();\n                DurationField field2 = savedFields[2].iField.getType().getField(iChrono).getDurationField();\n                DurationField field3 = savedFields[3].iField.getType().getField(iChrono).getDurationField();\n                if (compareReverse(field1, first) == 0 &&\n                    compareReverse(field2, first) == 0 &&\n                    compareReverse(field3, DurationFieldType.days().getField(iChrono)) == 0 ) {\n                    weekyears = DurationFieldType.weekyears().getField(iChrono);\n                    weeks = DurationFieldType.weeks().getField(iChrono);\n                    if (compareReverse(first, weeks) < 0) {\n                        weekyears = null;\n                    }\n                    DurationField field;\n                    if (savedFields.length > 4) {\n                        field = savedFields[4].iField.getType().getField(iChrono).getDurationField();\n                    } else {\n                        field = nullField;\n                    }\n                    if (field != null && compareReverse(field, years) <= 0) {\n                        year = savedFields[4].iValue;\n                        savedFields[4] = null;\n                        count -= 1;\n                        first = field;\n                        if (count > 4) {\n                            field = savedFields[5].iField.getType().getField(iChrono).getDurationField();\n                        } else {\n                            field = nullField;\n                        }\n                    }\n                    if (field != null && compareReverse(field, years) <= 0) {\n                        year = savedFields[5].iValue;\n                        savedFields[5] = null;\n                        count -= 1;\n                        if (count > 4) {\n                            field = savedFields[5].iField.getType().getField(iChrono).getDurationField();\n                        } else {\n                            field = nullField;\n                        }\n                    }\n                    if ((weekyears != null && compareReverse(first, weekyears) >= 0 && compareReverse(first, weeks) <= 0) ||\n                        (compareReverse(first, DurationFieldType.weeks().getField(iChrono)) >= 0 && compareReverse(first, DurationFieldType.days().getField(iChrono)) <= 0)) {\n                        int woy = 0;\n                        int dow = 0;\n                        int currentWeeks = 0;\n                        for (int i=0; i<count; i++) {\n                            ChronoField fieldi = savedFields[i].iField.getType().getField(iChrono);\n                            int value = savedFields[i].iValue;\n                            if (compareReverse(fieldi, weeks) == 0) {\n                                currentWeeks += value;\n                            } else if (compareReverse(fieldi, ChronoField.DAY_OF_WEEK) == 0) {\n                                dow = value;\n                            } else if (compareReverse(fieldi, weekyears) == 0) {\n                                woy = value;\n                            } else if (compareReverse(fieldi, years) == 0) {\n                                year = value;\n                            } else if (compareReverse(fieldi, months) == 0) {\n                                if (dow != 0) {\n                                    throw new IllegalFieldValueException(ChronoField.MONTH_OF_YEAR, null);\n                                }\n                                setMonthOfYear(year, value);\n                            } else {\n                                throw new IllegalArgumentException(\"Illegal field \" + fieldi);\n                            }\n                        }\n                        if (woy != 0) {\n                            if (dow == 0) {\n                                throw new IllegalFieldValueException(ChronoField.DAY_OF_WEEK, null);\n                            }\n                            setWeekYear(woy);\n                            setWeekOfWeekBasedYear(currentWeeks);\n                            setDayOfWeek(dow);\n                        } else {\n                            if (weeks != null) {\n                                setWeekOfWeekBasedYear(currentWeeks);\n                            }\n                          ",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..31f1ca34 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -336,46 +336,91 @@ public class DateTimeParserBucket {\n             iSavedFieldsShared = false;\n         }\n         sort(savedFields, count);\n+        int year = iDefaultYear;\n+        DurationField nullField = null;\n+        DurationField months = DurationFieldType.months().getField(iChrono);\n+        DurationField years = DurationFieldType.years().getField(iChrono);\n+        DurationField weekyears = null;\n+        DurationField weeks = null;\n+        DurationField first = null;\n         if (count > 0) {\n-            // alter base year for parsing if first field is month or day\n-            DurationField months = DurationFieldType.months().getField(iChrono);\n-            DurationField days = DurationFieldType.days().getField(iChrono);\n-            DurationField first = savedFields[0].iField.getDurationField();\n-            if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n-                saveField(DateTimeFieldType.year(), iDefaultYear);\n-                return computeMillis(resetFields, text);\n-            }\n-        }\n-\n-        long millis = iMillis;\n-        try {\n-            for (int i = 0; i < count; i++) {\n-                millis = savedFields[i].set(millis, resetFields);\n-            }\n-        } catch (IllegalFieldValueException e) {\n-            if (text != null) {\n-                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n-            }\n-            throw e;\n-        }\n-        \n-        if (iZone == null) {\n-            millis -= iOffset;\n-        } else {\n-            int offset = iZone.getOffsetFromLocal(millis);\n-            millis -= offset;\n-            if (offset != iZone.getOffset(millis)) {\n-                String message =\n-                    \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n-                if (text != null) {\n-                    message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n-                }\n-                throw new IllegalArgumentException(message);\n-            }\n-        }\n-        \n-        return millis;\n-    }\n+            first = savedFields[0].iField.getType().getField(iChrono).getDurationField();\n+            if (count >= 4 && compareReverse(first, months) >= 0 && compareReverse(first, DurationFieldType.days().getField(iChrono)) <= 0) {\n+                DurationField field1 = savedFields[1].iField.getType().getField(iChrono).getDurationField();\n+                DurationField field2 = savedFields[2].iField.getType().getField(iChrono).getDurationField();\n+                DurationField field3 = savedFields[3].iField.getType().getField(iChrono).getDurationField();\n+                if (compareReverse(field1, first) == 0 &&\n+                    compareReverse(field2, first) == 0 &&\n+                    compareReverse(field3, DurationFieldType.days().getField(iChrono)) == 0 ) {\n+                    weekyears = DurationFieldType.weekyears().getField(iChrono);\n+                    weeks = DurationFieldType.weeks().getField(iChrono);\n+                    if (compareReverse(first, weeks) < 0) {\n+                        weekyears = null;\n+                    }\n+                    DurationField field;\n+                    if (savedFields.length > 4) {\n+                        field = savedFields[4].iField.getType().getField(iChrono).getDurationField();\n+                    } else {\n+                        field = nullField;\n+                    }\n+                    if (field != null && compareReverse(field, years) <= 0) {\n+                        year = savedFields[4].iValue;\n+                        savedFields[4] = null;\n+                        count -= 1;\n+                        first = field;\n+                        if (count > 4) {\n+                            field = savedFields[5].iField.getType().getField(iChrono).getDurationField();\n+                        } else {\n+                            field = nullField;\n+                        }\n+                    }\n+                    if (field != null && compareReverse(field, years) <= 0) {\n+                        year = savedFields[5].iValue;\n+                        savedFields[5] = null;\n+                        count -= 1;\n+                        if (count > 4) {\n+                            field = savedFields[5].iField.getType().getField(iChrono).getDurationField();\n+                        } else {\n+                            field = nullField;\n+                        }\n+                    }\n+                    if ((weekyears != null && compareReverse(first, weekyears) >= 0 && compareReverse(first, weeks) <= 0) ||\n+                        (compareReverse(first, DurationFieldType.weeks().getField(iChrono)) >= 0 && compareReverse(first, DurationFieldType.days().getField(iChrono)) <= 0)) {\n+                        int woy = 0;\n+                        int dow = 0;\n+                        int currentWeeks = 0;\n+                        for (int i=0; i<count; i++) {\n+                            ChronoField fieldi = savedFields[i].iField.getType().getField(iChrono);\n+                            int value = savedFields[i].iValue;\n+                            if (compareReverse(fieldi, weeks) == 0) {\n+                                currentWeeks += value;\n+                            } else if (compareReverse(fieldi, ChronoField.DAY_OF_WEEK) == 0) {\n+                                dow = value;\n+                            } else if (compareReverse(fieldi, weekyears) == 0) {\n+                                woy = value;\n+                            } else if (compareReverse(fieldi, years) == 0) {\n+                                year = value;\n+                            } else if (compareReverse(fieldi, months) == 0) {\n+                                if (dow != 0) {\n+                                    throw new IllegalFieldValueException(ChronoField.MONTH_OF_YEAR, null);\n+                                }\n+                                setMonthOfYear(year, value);\n+                            } else {\n+                                throw new IllegalArgumentException(\"Illegal field \" + fieldi);\n+                            }\n+                        }\n+                        if (woy != 0) {\n+                            if (dow == 0) {\n+                                throw new IllegalFieldValueException(ChronoField.DAY_OF_WEEK, null);\n+                            }\n+                            setWeekYear(woy);\n+                            setWeekOfWeekBasedYear(currentWeeks);\n+                            setDayOfWeek(dow);\n+                        } else {\n+                            if (weeks != null) {\n+                                setWeekOfWeekBasedYear(currentWeeks);\n+                            }\n+                          \n     \n     /**\n      * Sorts elements [0,high). Calling java.util.Arrays isn't always the right",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}