{
    "patch": "public static Locale toLocale(final String str) {\n        if (str == null || str.isEmpty()) { \n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final String[] parts = str.split(\"_\", -1);\n        final int len = parts.length;\n        if (len == 0 || len > 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (parts[0].isEmpty()) {\n            if (parts[1].length() < 2 || parts[1].charAt(0) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            // start at index 2\n            int i = 2;\n            for (; i < len && parts[i].isEmpty(); i++) {\n                // continue\n            }\n            String language = i < len ? parts[i] : \"\";\n            if (language.length() < 2) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String country = \"\";\n            String variant = \"\";\n            if (i + 1 < len) {\n                country = language;\n                language = parts[i + 1];\n                if (len > i + 2) {\n                    variant = parts[i + 2];\n                }\n            } else if (i < len) {\n                country = language;\n                language = \"\";\n            }\n            return new Locale(language, country, variant);\n        } else {\n            String language = parts[0];\n            if (language.length() < 2) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String country = \"\";\n            String variant = \"\";\n            if (len > 1) {\n                country = parts[1];\n                if (len > 2) {\n                    variant = parts[2];\n                }\n            }\n            return new Locale(language, country, variant);\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\nindex bc779d04..8172d6f4 100644\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n@@ -85,46 +85,56 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(final String str) {\n-        if (str == null) {\n-            return null;\n+public static Locale toLocale(final String str) {\n+        if (str == null || str.isEmpty()) { \n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final int len = str.length();\n-        if (len < 2) {\n+        final String[] parts = str.split(\"_\", -1);\n+        final int len = parts.length;\n+        if (len == 0 || len > 3) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        final char ch0 = str.charAt(0);\n-            final char ch1 = str.charAt(1);\n-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 2) {\n-                return new Locale(str);\n-            }\n-            if (len < 5) {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (str.charAt(2) != '_') {\n+        if (parts[0].isEmpty()) {\n+            if (parts[1].length() < 2 || parts[1].charAt(0) != '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            final char ch3 = str.charAt(3);\n-            if (ch3 == '_') {\n-                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n+            // start at index 2\n+            int i = 2;\n+            for (; i < len && parts[i].isEmpty(); i++) {\n+                // continue\n             }\n-            final char ch4 = str.charAt(4);\n-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n+            String language = i < len ? parts[i] : \"\";\n+            if (language.length() < 2) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            String country = \"\";\n+            String variant = \"\";\n+            if (i + 1 < len) {\n+                country = language;\n+                language = parts[i + 1];\n+                if (len > i + 2) {\n+                    variant = parts[i + 2];\n+                }\n+            } else if (i < len) {\n+                country = language;\n+                language = \"\";\n             }\n-            if (len < 7) {\n+            return new Locale(language, country, variant);\n+        } else {\n+            String language = parts[0];\n+            if (language.length() < 2) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            if (str.charAt(5) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            String country = \"\";\n+            String variant = \"\";\n+            if (len > 1) {\n+                country = parts[1];\n+                if (len > 2) {\n+                    variant = parts[2];\n+                }\n             }\n-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            return new Locale(language, country, variant);\n+        }\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: _GB",
    "test_result": "FAIL"
}