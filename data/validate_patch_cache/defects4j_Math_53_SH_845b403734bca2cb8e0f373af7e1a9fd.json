{
    "patch": "\n    public Complex add(Complex rhs) throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n        if (Double.isNaN(real) || Double.isNaN(imaginary) ||\n            Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n            return createComplex(Double.NaN, Double.NaN);\n        }\n        double newReal = real + rhs.getReal();\n        double newImaginary = imaginary + rhs.getImaginary();\n        if (Double.isNaN(newReal) || Double.isNaN(newImaginary)) {\n            return createComplex(Double.NaN, Double.NaN);\n        }\n        return createComplex(newReal, newImaginary);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..5a3227a4d 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,6 +150,20 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+\n+    public Complex add(Complex rhs) throws NullArgumentException {\n+        MathUtils.checkNotNull(rhs);\n+        if (Double.isNaN(real) || Double.isNaN(imaginary) ||\n+            Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n+            return createComplex(Double.NaN, Double.NaN);\n+        }\n+        double newReal = real + rhs.getReal();\n+        double newImaginary = imaginary + rhs.getImaginary();\n+        if (Double.isNaN(newReal) || Double.isNaN(newImaginary)) {\n+            return createComplex(Double.NaN, Double.NaN);\n+        }\n+        return createComplex(newReal, newImaginary);\n+    }\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}