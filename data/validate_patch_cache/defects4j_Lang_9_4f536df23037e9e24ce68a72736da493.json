{
    "patch": "        int numDays = (int) ChronoUnit.DAYS.between(start, end) + 1;\n        if (numDays <= 0) {\n            return 0;\n        }\n        int numSundays = 0;\n        LocalDate date = start;\n        for (int i = 0; i < numDays; i++) {\n            if (date.getDayOfWeek() == DayOfWeek.SUNDAY) {\n                numSundays++;\n            }\n            date = date.plusDays(1);\n        }\n        return numSundays;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..d42a50af 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,19 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        int numDays = (int) ChronoUnit.DAYS.between(start, end) + 1;\n+        if (numDays <= 0) {\n+            return 0;\n+        }\n+        int numSundays = 0;\n+        LocalDate date = start;\n+        for (int i = 0; i < numDays; i++) {\n+            if (date.getDayOfWeek() == DayOfWeek.SUNDAY) {\n+                numSundays++;\n+            }\n+            date = date.plusDays(1);\n+        }\n+        return numSundays;\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}