{
    "patch": "for (int i = 0; i < len; i++) {\n    char c = str.charAt(i);\n    if (c == '\\\\') {\n        if (i + 1 < len) {\n            char nextChar = str.charAt(i + 1);\n            switch (nextChar) {\n                case '\\\\':\n                    out.write('\\\\');\n                    i++;\n                    break;\n                case '\\\"':\n                    out.write('\\\"');\n                    i++;\n                    break;\n                case 'n':\n                    out.write('\\n');\n                    i++;\n                    break;\n                case 'r':\n                    out.write('\\r');\n                    i++;\n                    break;\n                case 't':\n                    out.write('\\t');\n                    i++;\n                    break;\n                case 'b':\n                    out.write('\\b');\n                    i++;\n                    break;\n                case 'f':\n                    out.write('\\f');\n                    i++;\n                    break;\n                case 'u':\n                    if (i + 5 < len) {\n                        int code = Integer.parseInt(str.substring(i + 2, i + 6), 16);\n                        out.write((char) code);\n                        i += 5;\n                    } else {\n                        throw new IllegalArgumentException(\"Invalid unicode character at index \" + i + \": \" + str);\n                    }\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid escaped character at index \" + i + \": \" + str);\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid escaped character at index \" + i + \": \" + str);\n        }\n    } else {\n        out.write(c);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..1d182423 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,59 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+for (int i = 0; i < len; i++) {\n+    char c = str.charAt(i);\n+    if (c == '\\\\') {\n+        if (i + 1 < len) {\n+            char nextChar = str.charAt(i + 1);\n+            switch (nextChar) {\n+                case '\\\\':\n+                    out.write('\\\\');\n+                    i++;\n+                    break;\n+                case '\\\"':\n+                    out.write('\\\"');\n+                    i++;\n+                    break;\n+                case 'n':\n+                    out.write('\\n');\n+                    i++;\n+                    break;\n+                case 'r':\n+                    out.write('\\r');\n+                    i++;\n+                    break;\n+                case 't':\n+                    out.write('\\t');\n+                    i++;\n+                    break;\n+                case 'b':\n+                    out.write('\\b');\n+                    i++;\n+                    break;\n+                case 'f':\n+                    out.write('\\f');\n+                    i++;\n+                    break;\n+                case 'u':\n+                    if (i + 5 < len) {\n+                        int code = Integer.parseInt(str.substring(i + 2, i + 6), 16);\n+                        out.write((char) code);\n+                        i += 5;\n+                    } else {\n+                        throw new IllegalArgumentException(\"Invalid unicode character at index \" + i + \": \" + str);\n+                    }\n+                    break;\n+                default:\n+                    throw new IllegalArgumentException(\"Invalid escaped character at index \" + i + \": \" + str);\n+            }\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid escaped character at index \" + i + \": \" + str);\n+        }\n+    } else {\n+        out.write(c);\n+    }\n+}\n             }\n         }\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}