{
    "patch": "public static boolean equals(CharSequence cs1, CharSequence cs2) {\n    if (cs1 == cs2) {\n        return true;\n    }\n    if (cs1 == null || cs2 == null) {\n        return cs1 == cs2;\n    }\n    int len1 = cs1.length();\n    int len2 = cs2.length();\n    if (len1 != len2) {\n        return false;\n    }\n    for (int i = 0; i < len1; i++) {\n        if (cs1.charAt(i) != cs2.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex 535a3f24..6823b0da 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -778,15 +778,25 @@ public class StringUtils {\n      * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}\n      * @since 3.0 Changed signature from equals(String, String) to equals(CharSequence, CharSequence)\n      */\n-    public static boolean equals(CharSequence cs1, CharSequence cs2) {\n-        if (cs1 == cs2) {\n-            return true;\n-        }\n-        if (cs1 == null || cs2 == null) {\n+public static boolean equals(CharSequence cs1, CharSequence cs2) {\n+    if (cs1 == cs2) {\n+        return true;\n+    }\n+    if (cs1 == null || cs2 == null) {\n+        return cs1 == cs2;\n+    }\n+    int len1 = cs1.length();\n+    int len2 = cs2.length();\n+    if (len1 != len2) {\n+        return false;\n+    }\n+    for (int i = 0; i < len1; i++) {\n+        if (cs1.charAt(i) != cs2.charAt(i)) {\n             return false;\n         }\n-            return cs1.equals(cs2);\n     }\n+    return true;\n+}\n \n     /**\n      * <p>Compares two CharSequences, returning {@code true} if they represent",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}