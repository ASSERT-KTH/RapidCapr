{
    "patch": "    if (x == 0 && negativeZero) {\n      add(\"-0.0\");\n    } else if (x < 0 && prev == '-') {\n      add(\" \");\n      add(String.valueOf(x));\n    } else if ((long) x == x && !negativeZero) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 4381487c..4c640aca 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -236,13 +236,17 @@ abstract class CodeConsumer {\n       maybeCutLine();\n     }\n   }\n-\n   void addNumber(double x) {\n     // This is not pretty printing. This is to prevent misparsing of x- -4 as\n     // x--4 (which is a syntax error).\n     char prev = getLastChar();\n     boolean negativeZero = isNegativeZero(x);\n-    if (x < 0 && prev == '-') {\n+    if (x == 0 && negativeZero) {\n+      add(\"-0.0\");\n+    } else if (x < 0 && prev == '-') {\n+      add(\" \");\n+      add(String.valueOf(x));\n+    } else if ((long) x == x && !negativeZero) {\n       add(\" \");\n     }\n ",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...8,8,8,6,9,9,9,6,10,1[]1,11,11,11,11,11,11,...> but was:<...8,8,8,6,9,9,9,6,10,1[0,1]1,11,11,11,11,11,11,...>",
    "test_result": "FAIL"
}