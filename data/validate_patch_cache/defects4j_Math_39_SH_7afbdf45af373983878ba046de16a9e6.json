{
    "patch": "// check if the next step will overshoot the final time and reduce if necessary\ndouble nextTime = stepStart + hNew;\nif ((forward && nextTime > t) || (!forward && nextTime < t)) {\n    hNew = t - stepStart;\n}\nstepSize = hNew;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..fee5db0df 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,12 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+// check if the next step will overshoot the final time and reduce if necessary\n+double nextTime = stepStart + hNew;\n+if ((forward && nextTime > t) || (!forward && nextTime < t)) {\n+    hNew = t - stepStart;\n+}\n+stepSize = hNew;\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}