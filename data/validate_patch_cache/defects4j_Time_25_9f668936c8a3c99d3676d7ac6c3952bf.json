{
    "patch": "                if ((offsetLocal - offsetAdjusted) < 0) {\n                    long prev = previousTransition(instantAdjusted - offsetAdjusted);\n                    if (prev < instantAdjusted) {\n                        int offsetPrev = getOffset(prev);\n                        if (offsetPrev == offsetAdjusted) {\n                            return offsetLocal;\n                        }\n                        return offsetPrev;\n                    }\n                    // handle the gap with a positive execution\n                    return offsetLocal;\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..a62ff0be 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,18 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if ((offsetLocal - offsetAdjusted) < 0) {\n+                    long prev = previousTransition(instantAdjusted - offsetAdjusted);\n+                    if (prev < instantAdjusted) {\n+                        int offsetPrev = getOffset(prev);\n+                        if (offsetPrev == offsetAdjusted) {\n+                            return offsetLocal;\n+                        }\n+                        return offsetPrev;\n+                    }\n+                    // handle the gap with a positive execution\n+                    return offsetLocal;\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}