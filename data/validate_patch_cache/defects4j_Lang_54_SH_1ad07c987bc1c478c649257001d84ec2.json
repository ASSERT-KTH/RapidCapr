{
    "patch": "        if (len == 2) {\n            return new Locale(str, \"\");\n        } else if (len == 5 || len >= 7) {\n            int pos1 = 2;\n            int pos2 = str.charAt(2) == '-' || str.charAt(2) == '_' ? 3 : 4;\n            if (len >= pos2 + 2 && (str.charAt(pos2 - 1) == '-' || str.charAt(pos2 - 1) == '_')\n                    && Character.isUpperCase(str.charAt(pos2 - 1)) && Character.isUpperCase(str.charAt(pos2))\n                    && (!pos2 + 1 < len || str.charAt(pos2 + 1) == '-' || str.charAt(pos2 + 1) == '_')) {\n                pos1 = pos2 + 1;\n                pos2 = pos1 < len && (str.charAt(pos1 - 1) == '-' || str.charAt(pos1 - 1) == '_') ? pos1 + 1 : pos1;\n            }\n            if (pos2 < len && (str.charAt(pos2 - 1) == '-' || str.charAt(pos2 - 1) == '_')\n                    && Character.isUpperCase(str.charAt(pos2))) {\n                pos2++;\n            }\n            String language = str.substring(0, pos1 - 1);\n            String country = str.substring(pos1, pos2 - 1);\n            String variant = pos2 < len ? str.substring(pos2) : \"\";\n            return new Locale(language, country, variant);\n        }\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..3dbb7816 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,27 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        if (len == 2) {\n+            return new Locale(str, \"\");\n+        } else if (len == 5 || len >= 7) {\n+            int pos1 = 2;\n+            int pos2 = str.charAt(2) == '-' || str.charAt(2) == '_' ? 3 : 4;\n+            if (len >= pos2 + 2 && (str.charAt(pos2 - 1) == '-' || str.charAt(pos2 - 1) == '_')\n+                    && Character.isUpperCase(str.charAt(pos2 - 1)) && Character.isUpperCase(str.charAt(pos2))\n+                    && (!pos2 + 1 < len || str.charAt(pos2 + 1) == '-' || str.charAt(pos2 + 1) == '_')) {\n+                pos1 = pos2 + 1;\n+                pos2 = pos1 < len && (str.charAt(pos1 - 1) == '-' || str.charAt(pos1 - 1) == '_') ? pos1 + 1 : pos1;\n+            }\n+            if (pos2 < len && (str.charAt(pos2 - 1) == '-' || str.charAt(pos2 - 1) == '_')\n+                    && Character.isUpperCase(str.charAt(pos2))) {\n+                pos2++;\n+            }\n+            String language = str.substring(0, pos1 - 1);\n+            String country = str.substring(pos1, pos2 - 1);\n+            String variant = pos2 < len ? str.substring(pos2) : \"\";\n+            return new Locale(language, country, variant);\n+        }\n+        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: bad operand type int for unary operator '!'",
    "test_result": "ERROR"
}