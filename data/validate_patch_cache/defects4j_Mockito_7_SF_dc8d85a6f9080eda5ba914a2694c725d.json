{
    "patch": "private void readTypeVariables() {\n    for (Type type : typeVariable.getBounds()) {\n        registerTypeVariablesOn(type);\n    }\n\n    Type actualType = getActualTypeArgumentFor(typeVariable);\n\n    if (actualType != null) {\n        registerTypeVariablesOn(actualType);\n    } else {\n        // Handle null value\n        throw new IllegalArgumentException(\"Null value passed to 'getActualTypeArgumentFor' method\");\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..54b019649 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,21 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+\n+private void readTypeVariables() {\n+    for (Type type : typeVariable.getBounds()) {\n+        registerTypeVariablesOn(type);\n+    }\n+\n+    Type actualType = getActualTypeArgumentFor(typeVariable);\n+\n+    if (actualType != null) {\n+        registerTypeVariablesOn(actualType);\n+    } else {\n+        // Handle null value\n+        throw new IllegalArgumentException(\"Null value passed to 'getActualTypeArgumentFor' method\");\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "java.lang.IllegalArgumentException: Null value passed to 'getActualTypeArgumentFor' method",
    "test_result": "FAIL"
}