{
    "patch": "protected JSType caseTopType(JSType topType) {\n  if (topType.isUnknownType() || topType.isAllType()) {\n    return getNativeType(JSTypeNative.UNKNOWN_TYPE, null);\n  } else if (topType.isNoType()) {\n    return getNativeType(JSTypeNative.NO_TYPE, null);\n  }\n  return topType;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..74fdcd79 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -50,9 +50,14 @@ public class ClosureReverseAbstractInterpreter\n   private final Visitor<JSType> restrictToArrayVisitor =\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n-        protected JSType caseTopType(JSType topType) {\n-          return topType;\n-        }\n+protected JSType caseTopType(JSType topType) {\n+  if (topType.isUnknownType() || topType.isAllType()) {\n+    return getNativeType(JSTypeNative.UNKNOWN_TYPE, null);\n+  } else if (topType.isNoType()) {\n+    return getNativeType(JSTypeNative.NO_TYPE, null);\n+  }\n+  return topType;\n+}\n \n         @Override\n         public JSType caseObjectType(ObjectType type) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}