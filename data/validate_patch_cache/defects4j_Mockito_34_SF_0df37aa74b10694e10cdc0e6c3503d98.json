{
    "patch": "public void captureArgumentsFrom(Invocation invocation) {\n    Object[] arguments = invocation.getArguments();\n    if (arguments == null) {\n        return;\n    }\n\n    int matcherIndex = 0;\n    for (int i = 0; i < arguments.length; i++) {\n        Matcher matcher = matcherIndex < matchers.size() ? matchers.get(matcherIndex) : null;\n        if (matcher instanceof CapturesArguments) {\n            ((CapturesArguments) matcher).captureFrom(arguments[i]);\n            matcherIndex++;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex c72b119dd..08638b03d 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -100,13 +100,19 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n         return invocation.toString(matchers, printSettings);\n     }\n \n-    public void captureArgumentsFrom(Invocation i) {\n-        int k = 0;\n-        for (Matcher m : matchers) {\n-            if (m instanceof CapturesArguments) {\n-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n-            }\n-            k++;\n+public void captureArgumentsFrom(Invocation invocation) {\n+    Object[] arguments = invocation.getArguments();\n+    if (arguments == null) {\n+        return;\n+    }\n+\n+    int matcherIndex = 0;\n+    for (int i = 0; i < arguments.length; i++) {\n+        Matcher matcher = matcherIndex < matchers.size() ? matchers.get(matcherIndex) : null;\n+        if (matcher instanceof CapturesArguments) {\n+            ((CapturesArguments) matcher).captureFrom(arguments[i]);\n+            matcherIndex++;\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n+}",
    "result_reason": "junit.framework.AssertionFailedError: expected:<1> but was:<0>",
    "test_result": "FAIL"
}