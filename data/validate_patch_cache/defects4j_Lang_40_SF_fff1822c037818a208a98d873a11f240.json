{
    "patch": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if(str == null || searchStr == null){\n        return false;\n    }\n    int index = -1;\n    int searchStrLength = searchStr.length();\n    do {\n        index = str.indexOf(searchStr, index + 1);\n        if (index != -1 && searchStrLength <= str.length() - index) {\n            if (str.regionMatches(true, index, searchStr, 0, searchStrLength)) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n\n    } while (true);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..b7d1ea30 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1041,12 +1041,24 @@ public class StringUtils {\n      * @return true if the String contains the search String irrespective of\n      * case or false if not or <code>null</code> string input\n      */\n-    public static boolean containsIgnoreCase(String str, String searchStr) {\n-        if (str == null || searchStr == null) {\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if(str == null || searchStr == null){\n+        return false;\n+    }\n+    int index = -1;\n+    int searchStrLength = searchStr.length();\n+    do {\n+        index = str.indexOf(searchStr, index + 1);\n+        if (index != -1 && searchStrLength <= str.length() - index) {\n+            if (str.regionMatches(true, index, searchStr, 0, searchStrLength)) {\n+                return true;\n+            }\n+        } else {\n             return false;\n         }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n-    }\n+\n+    } while (true);\n+}\n \n     // IndexOfAny chars\n     //-----------------------------------------------------------------------",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}