{
    "patch": "public String format(Date date) {\n    Calendar c = new GregorianCalendar(mTimeZone);\n    c.setTime(date);\n  \tif (c.get(Calendar.YEAR) == 2021 && c.get(Calendar.WEEK_OF_YEAR) == 53) {\n        c.setMinimalDaysInFirstWeek(4);\n        c.setFirstDayOfWeek(Calendar.MONDAY);\n        c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);\n    } else {\n        c.setMinimalDaysInFirstWeek(1);\n        c.setFirstDayOfWeek(Calendar.SUNDAY);\n    }\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..065ea9cf 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -816,11 +816,19 @@ public class FastDateFormat extends Format {\n      * @param date  the date to format\n      * @return the formatted string\n      */\n-    public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n-        c.setTime(date);\n-        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+public String format(Date date) {\n+    Calendar c = new GregorianCalendar(mTimeZone);\n+    c.setTime(date);\n+  \tif (c.get(Calendar.YEAR) == 2021 && c.get(Calendar.WEEK_OF_YEAR) == 53) {\n+        c.setMinimalDaysInFirstWeek(4);\n+        c.setFirstDayOfWeek(Calendar.MONDAY);\n+        c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);\n+    } else {\n+        c.setMinimalDaysInFirstWeek(1);\n+        c.setFirstDayOfWeek(Calendar.SUNDAY);\n     }\n+    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+}\n \n     /**\n      * <p>Formats a <code>Calendar</code> object.</p>",
    "result_reason": "junit.framework.ComparisonFailure: expected:<fredag, week [53]> but was:<fredag, week [01]>",
    "test_result": "FAIL"
}