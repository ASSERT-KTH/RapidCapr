{
    "patch": "        stepSize = hNew;\n\n        if (Double.isNaN(stepSize)) {\n            // Next try with 1/10 of the last step (or 1/100 if step too small)\n            stepSize = filteredH;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..0a622e4be 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,12 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+        stepSize = hNew;\n+\n+        if (Double.isNaN(stepSize)) {\n+            // Next try with 1/10 of the last step (or 1/100 if step too small)\n+            stepSize = filteredH;\n+        }\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}