{
    "patch": "return StringDescription.toString(m).equals(arg == null ? \"null\" : arg.toString());",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..9c375c085 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -61,8 +61,7 @@ public class MockUtil {\n \n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+return StringDescription.toString(m).equals(arg == null ? \"null\" : arg.toString());\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: incompatible types: unexpected return value",
    "test_result": "ERROR"
}