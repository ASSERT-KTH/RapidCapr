{
    "patch": "if (digitCount == 1 && clusterChars.size() > 2) {  // Use grouped 1s like: 1,111\n    groupedOneOccurred = true;\n    add(String.format(Locale.ROOT, \"%,d\", clusterChars.size()));\n} else {\n    if (digitCount == 1 || (digitCount == 4 && index + digitCount != len)) {\n        groupedOneOccurred = true;\n    }\n    add(String.valueOf(value));\n}\n\nindex += digitCount;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 4381487c..c4707233 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -242,7 +242,17 @@ abstract class CodeConsumer {\n     // x--4 (which is a syntax error).\n     char prev = getLastChar();\n     boolean negativeZero = isNegativeZero(x);\n-    if (x < 0 && prev == '-') {\n+if (digitCount == 1 && clusterChars.size() > 2) {  // Use grouped 1s like: 1,111\n+    groupedOneOccurred = true;\n+    add(String.format(Locale.ROOT, \"%,d\", clusterChars.size()));\n+} else {\n+    if (digitCount == 1 || (digitCount == 4 && index + digitCount != len)) {\n+        groupedOneOccurred = true;\n+    }\n+    add(String.valueOf(value));\n+}\n+\n+index += digitCount;\n       add(\" \");\n     }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}