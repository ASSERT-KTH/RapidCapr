{
    "patch": "public boolean isEmptyType() {\n    if (this instanceof NoType ||\n            this instanceof NoSymbolType ||\n            this instanceof JavaType && ((JavaType) this).isRawType)\n        return true;\n    if (this instanceof JavaArrayType) {\n        JavaArrayType array = (JavaArrayType) this;\n        return array.getElementType().isEmptyType();\n    }\n    if (this instanceof TypeVar) {\n        TypeVar typeVar = (TypeVar) this;\n        return typeVar.getUpperBound().isEmptyType();\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..eb2e97d4 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -158,10 +158,21 @@ public abstract class JSType implements Serializable {\n   public boolean isNoObjectType() {\n     return false;\n   }\n-\n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public boolean isEmptyType() {\n+    if (this instanceof NoType ||\n+            this instanceof NoSymbolType ||\n+            this instanceof JavaType && ((JavaType) this).isRawType)\n+        return true;\n+    if (this instanceof JavaArrayType) {\n+        JavaArrayType array = (JavaArrayType) this;\n+        return array.getElementType().isEmptyType();\n+    }\n+    if (this instanceof TypeVar) {\n+        TypeVar typeVar = (TypeVar) this;\n+        return typeVar.getUpperBound().isEmptyType();\n+    }\n+    return false;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}