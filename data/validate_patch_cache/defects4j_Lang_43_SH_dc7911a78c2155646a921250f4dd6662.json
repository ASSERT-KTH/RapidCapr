{
    "patch": "for (int i = pos.getIndex(); i < pattern.length(); i++) {\n    if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n        appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n        pos.setIndex(i + ESCAPED_QUOTE.length());\n        lastHold = pos.getIndex();\n        continue;\n    }\n    switch (c[i]) {\n        case QUOTE:\n            pos.setIndex(i + 1);\n            return appendTo == null ? null : appendTo.append(c, lastHold, i - lastHold);\n        default:\n            pos.setIndex(i + 1);\n            break;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..79e02a81 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,22 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+for (int i = pos.getIndex(); i < pattern.length(); i++) {\n+    if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n+        appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n+        pos.setIndex(i + ESCAPED_QUOTE.length());\n+        lastHold = pos.getIndex();\n+        continue;\n+    }\n+    switch (c[i]) {\n+        case QUOTE:\n+            pos.setIndex(i + 1);\n+            return appendTo == null ? null : appendTo.append(c, lastHold, i - lastHold);\n+        default:\n+            pos.setIndex(i + 1);\n+            break;\n+    }\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}