{
    "patch": "public final boolean isEmptyType() {\n    if (isPrimitiveType()) {\n        return false;\n    }\n    if (isParameterizedType()) {\n        for (Type typeArg: asParameterizedType().getTypeArguments()) {\n            if (!typeArg.isEmptyType()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (isArrayType() || isWildcardType()) {\n        return getArrayType().isEmptyType();\n    }\n    return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..6dce77c2 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -158,10 +158,23 @@ public abstract class JSType implements Serializable {\n   public boolean isNoObjectType() {\n     return false;\n   }\n-\n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public final boolean isEmptyType() {\n+    if (isPrimitiveType()) {\n+        return false;\n+    }\n+    if (isParameterizedType()) {\n+        for (Type typeArg: asParameterizedType().getTypeArguments()) {\n+            if (!typeArg.isEmptyType()) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    if (isArrayType() || isWildcardType()) {\n+        return getArrayType().isEmptyType();\n+    }\n+    return false;\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}