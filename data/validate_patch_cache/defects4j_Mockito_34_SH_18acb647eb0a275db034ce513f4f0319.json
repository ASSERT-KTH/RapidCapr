{
    "patch": "for (int k = 0; k < matchers.size(); k++) {\n    Matcher m = matchers.get(k);\n    if (m instanceof CapturesArguments) {\n        ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n    }\n    k++;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex c72b119dd..e1a9ba2f1 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -103,10 +103,16 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n     public void captureArgumentsFrom(Invocation i) {\n         int k = 0;\n         for (Matcher m : matchers) {\n-            if (m instanceof CapturesArguments) {\n+for (int k = 0; k < matchers.size(); k++) {\n+    Matcher m = matchers.get(k);\n+    if (m instanceof CapturesArguments) {\n+        ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n+    }\n+    k++;\n+}\n                 ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n             }\n             k++;\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}