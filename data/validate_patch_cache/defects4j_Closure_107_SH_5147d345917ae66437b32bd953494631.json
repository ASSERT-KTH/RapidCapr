{
    "patch": "    if (!flags.translationsFile.isEmpty()) {\n      try {\n        options.messageBundle = new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Reading XTB file\", e);\n      }\n    } else if (flags.compilationLevel == CompilationLevel.ADVANCED_OPTIMIZATIONS) {\n      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a\n      // translations file, they might reasonably try to write their own\n      // implementation of goog.getMsg that makes the substitution at\n      // run-time. In ADVANCED mode, goog.getMsg is going to be\n      // renamed anyway, so we might as well inline it. But shut off the\n      // i18n warnings, because the user didn\u2019t\u2019 really ask for i18n.\n\n      // Fix 1: remove the obsolete message bundle\n      options.messageBundle = null;\n\n      // Fix 2: set warning level for MSG_CONVENTIONS to OFF\n      options.setWarningLevel(DiagnosticGroups.MSG_CONVENTIONS, CheckLevel.OFF);\n    } else {\n      // Fix 3: set an empty message bundle for other compilation levels\n      options.messageBundle = new EmptyMessageBundle();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..12377454 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,31 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+    if (!flags.translationsFile.isEmpty()) {\n+      try {\n+        options.messageBundle = new XtbMessageBundle(\n+            new FileInputStream(flags.translationsFile),\n+            flags.translationsProject);\n+      } catch (IOException e) {\n+        throw new RuntimeException(\"Reading XTB file\", e);\n+      }\n+    } else if (flags.compilationLevel == CompilationLevel.ADVANCED_OPTIMIZATIONS) {\n+      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a\n+      // translations file, they might reasonably try to write their own\n+      // implementation of goog.getMsg that makes the substitution at\n+      // run-time. In ADVANCED mode, goog.getMsg is going to be\n+      // renamed anyway, so we might as well inline it. But shut off the\n+      // i18n warnings, because the user didn\u2019t\u2019 really ask for i18n.\n+\n+      // Fix 1: remove the obsolete message bundle\n+      options.messageBundle = null;\n+\n+      // Fix 2: set warning level for MSG_CONVENTIONS to OFF\n+      options.setWarningLevel(DiagnosticGroups.MSG_CONVENTIONS, CheckLevel.OFF);\n+    } else {\n+      // Fix 3: set an empty message bundle for other compilation levels\n+      options.messageBundle = new EmptyMessageBundle();\n+    }\n     }\n \n     return options;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}