{
    "patch": "public class Fraction {\n    private final int numerator;\n    private final int denominator;\n\n    public Fraction(int numerator, int denominator) {\n        if (denominator == 0) {\n            throw new IllegalArgumentException(\"Denominator must not be zero\");\n        }\n        if (denominator < 0) {\n            numerator = -numerator;\n            denominator = -denominator;\n        }\n\n        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        if (gcd > 1) {\n            numerator /= gcd;\n            denominator /= gcd;\n        }\n\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    public int getNumerator() {\n        return numerator;\n    }\n\n    public int getDenominator() {\n        return denominator;\n    }\n\n    public Fraction reduce() {\n        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n        if (gcd == 1) {\n            return this;\n        }\n        return new Fraction(numerator / gcd, denominator / gcd);\n    }\n\n    private int greatestCommonDivisor(int a, int b) {\n        while (b != 0) {\n            int tmp = b;\n            b = a % b;\n            a = tmp;\n        }\n        return Math.abs(a);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java\nindex 5f8e5655..c349f14d 100644\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n@@ -462,14 +462,55 @@ public final class Fraction extends Number implements Comparable {\n      *\n      * @return a new reduced fraction instance, or this if no simplification possible\n      */\n+public class Fraction {\n+    private final int numerator;\n+    private final int denominator;\n+\n+    public Fraction(int numerator, int denominator) {\n+        if (denominator == 0) {\n+            throw new IllegalArgumentException(\"Denominator must not be zero\");\n+        }\n+        if (denominator < 0) {\n+            numerator = -numerator;\n+            denominator = -denominator;\n+        }\n+\n+        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n+        if (gcd > 1) {\n+            numerator /= gcd;\n+            denominator /= gcd;\n+        }\n+\n+        this.numerator = numerator;\n+        this.denominator = denominator;\n+    }\n+\n+    public int getNumerator() {\n+        return numerator;\n+    }\n+\n+    public int getDenominator() {\n+        return denominator;\n+    }\n+\n     public Fraction reduce() {\n         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\n         if (gcd == 1) {\n             return this;\n         }\n-        return Fraction.getFraction(numerator / gcd, denominator / gcd);\n+        return new Fraction(numerator / gcd, denominator / gcd);\n     }\n \n+    private int greatestCommonDivisor(int a, int b) {\n+        while (b != 0) {\n+            int tmp = b;\n+            b = a % b;\n+            a = tmp;\n+        }\n+        return Math.abs(a);\n+    }\n+}\n+\n     /**\n      * <p>Gets a fraction that is the inverse (1/fraction) of this one.</p>\n      * ",
    "result_reason": "error: class Fraction is already defined in package org.apache.commons.lang.math",
    "test_result": "ERROR"
}