{
    "patch": "public static int countPairs(List<Integer> numbers, int k) {\n    Set<Integer> set = new HashSet<>();\n    int count = 0;\n    for (int num : numbers) {\n        if (set.contains(num - k)) {\n            count++;\n        }\n        if (set.contains(num + k)) {\n            count++;\n        }\n        set.add(num);\n    }\n    return count;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..11be565c 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,20 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+public static int countPairs(List<Integer> numbers, int k) {\n+    Set<Integer> set = new HashSet<>();\n+    int count = 0;\n+    for (int num : numbers) {\n+        if (set.contains(num - k)) {\n+            count++;\n+        }\n+        if (set.contains(num + k)) {\n+            count++;\n+        }\n+        set.add(num);\n+    }\n+    return count;\n+}\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}