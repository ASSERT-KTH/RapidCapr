{
    "patch": "  static boolean mayBeString(Node n, boolean recurse) {\n    if (recurse) {\n      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);    \n    } else {\n      return mayBeStringHelper(n);\n    }\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eef27927..cf3ca2d2 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1411,10 +1411,15 @@ public final class NodeUtil {\n   static boolean mayBeString(Node n) {\n     return mayBeString(n, true);\n   }\n-\n   static boolean mayBeString(Node n, boolean recurse) {\n     if (recurse) {\n-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n+  static boolean mayBeString(Node n, boolean recurse) {\n+    if (recurse) {\n+      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);    \n+    } else {\n+      return mayBeStringHelper(n);\n+    }\n+  }\n     } else {\n       return mayBeStringHelper(n);\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}