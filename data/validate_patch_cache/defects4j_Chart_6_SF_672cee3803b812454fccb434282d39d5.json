{
    "patch": "public boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof ShapeList)) {\n        return false;\n    }\n    ShapeList other = (ShapeList) obj;\n    int size = size();\n    if (other.size() != size) {\n        return false;\n    }\n    for (int i = 0; i < size; i++) {\n        Shape shape = getShape(i);",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..9ef8a19 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -100,17 +100,20 @@ public class ShapeList extends AbstractObjectList {\n      *\n      * @return A boolean.\n      */\n-    public boolean equals(Object obj) {\n-\n-        if (obj == this) {\n-            return true;\n-        }\n-        if (!(obj instanceof ShapeList)) {\n-            return false;\n-        }\n-        return super.equals(obj);\n-\n+public boolean equals(Object obj) {\n+    if (obj == this) {\n+        return true;\n     }\n+    if (!(obj instanceof ShapeList)) {\n+        return false;\n+    }\n+    ShapeList other = (ShapeList) obj;\n+    int size = size();\n+    if (other.size() != size) {\n+        return false;\n+    }\n+    for (int i = 0; i < size; i++) {\n+        Shape shape = getShape(i);\n \n     /**\n      * Returns a hash code value for the object.\n@@ -169,4 +172,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}