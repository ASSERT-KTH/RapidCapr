{
    "patch": "      Node value = initialization.getAssignedValue();\n      Preconditions.checkState(value != null);\n      if (value.isFunction()) {\n        Node callNode = reference.getParent();\n        if (callNode.isCall()) {\n          CodingConvention convention = compiler.getCodingConvention();\n          // Bug 2388531: Don't inline subclass definitions into class defining\n          // calls as this confused class removing logic.\n          SubclassRelationship relationship =\n              convention.getClassesDefinedByCall(callNode);\n          if (relationship != null) {\n            return false;\n          }\n\n          String callName = null;\n          boolean isAllowlistedGetterCall = false;\n          if (callNode.getFirstChild().isQualifiedName()) {\n            callName = callNode.getFirstChild().getQualifiedName();\n            isAllowlistedGetterCall = INLINE_GETTER_CALL_ALLOWLIST.contains(callName);\n          }\n          // Do not inline singleton getter methods.\n          if (isAllowlistedGetterCall ||\n              convention.isPropertyGetLikelyGetter(value, reference.getParent())) {\n            return false;\n          }\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..eee062b8 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,33 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+      Node value = initialization.getAssignedValue();\n+      Preconditions.checkState(value != null);\n+      if (value.isFunction()) {\n+        Node callNode = reference.getParent();\n+        if (callNode.isCall()) {\n+          CodingConvention convention = compiler.getCodingConvention();\n+          // Bug 2388531: Don't inline subclass definitions into class defining\n+          // calls as this confused class removing logic.\n+          SubclassRelationship relationship =\n+              convention.getClassesDefinedByCall(callNode);\n+          if (relationship != null) {\n+            return false;\n+          }\n+\n+          String callName = null;\n+          boolean isAllowlistedGetterCall = false;\n+          if (callNode.getFirstChild().isQualifiedName()) {\n+            callName = callNode.getFirstChild().getQualifiedName();\n+            isAllowlistedGetterCall = INLINE_GETTER_CALL_ALLOWLIST.contains(callName);\n+          }\n+          // Do not inline singleton getter methods.\n+          if (isAllowlistedGetterCall ||\n+              convention.isPropertyGetLikelyGetter(value, reference.getParent())) {\n+            return false;\n+          }\n+        }\n+      }\n         }\n       }\n ",
    "result_reason": "error: variable value is already defined in method canInline(Reference,Reference,Reference)",
    "test_result": "ERROR"
}