{
    "patch": "public double percentageValue() {\n    if (isNaN()) {\n        return Double.NaN;\n    }\n    if (equals(ZERO)) {\n        if (isNegative()) {\n            return Double.NEGATIVE_INFINITY;\n        } else {\n            return Double.POSITIVE_INFINITY;\n        }\n    }\n    return multiply(ONE_HUNDRED).toDouble();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\nindex f84218ebd..00feca6df 100644\n--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n@@ -593,9 +593,19 @@ public class Fraction\n      *\n      * @return the fraction percentage as a <tt>double</tt>.\n      */\n-    public double percentageValue() {\n-        return multiply(100).doubleValue();\n+public double percentageValue() {\n+    if (isNaN()) {\n+        return Double.NaN;\n     }\n+    if (equals(ZERO)) {\n+        if (isNegative()) {\n+            return Double.NEGATIVE_INFINITY;\n+        } else {\n+            return Double.POSITIVE_INFINITY;\n+        }\n+    }\n+    return multiply(ONE_HUNDRED).toDouble();\n+}\n \n     /**\n      * <p>Creates a {@code Fraction} instance with the 2 parts",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}