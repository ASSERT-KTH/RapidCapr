{
    "patch": "if (escapingOn && pattern.length() > pos.getIndex() && pattern.charAt(pos.getIndex()) == QUOTE) {\n    pos.setIndex(pos.getIndex() + 1);\n    return appendTo == null ? null : appendTo.append(QUOTE);\n} else if (escapingOn && pattern.length() == pos.getIndex()) {\n    throw new IllegalArgumentException(\"Missing character '\" + QUOTE + \"' while parsing input\");\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..6c64d355 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,12 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+if (escapingOn && pattern.length() > pos.getIndex() && pattern.charAt(pos.getIndex()) == QUOTE) {\n+    pos.setIndex(pos.getIndex() + 1);\n+    return appendTo == null ? null : appendTo.append(QUOTE);\n+} else if (escapingOn && pattern.length() == pos.getIndex()) {\n+    throw new IllegalArgumentException(\"Missing character '\" + QUOTE + \"' while parsing input\");\n+}\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "junit.framework.ComparisonFailure: format Pattern=[1: {0,date,short}], locale=[null] expected:<1: [1/23]/07> but was:<1: [23/01]/07>",
    "test_result": "FAIL"
}