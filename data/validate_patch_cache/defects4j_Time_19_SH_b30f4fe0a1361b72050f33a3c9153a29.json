{
    "patch": ">>> [ INFILL ] <<<\nlong prev = previousTransition(instantAdjusted);\nif (prev < instantAdjusted && (offsetAdjusted >= 0 || getOffset(prev) >= 0)) {\n    int offsetPrev = getOffset(prev);\n    int diff = offsetPrev - offsetLocal;\n    if (instantAdjusted - prev <= diff) {\n        return offsetPrev;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..4e041c6f 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+>>> [ INFILL ] <<<\n+long prev = previousTransition(instantAdjusted);\n+if (prev < instantAdjusted && (offsetAdjusted >= 0 || getOffset(prev) >= 0)) {\n+    int offsetPrev = getOffset(prev);\n+    int diff = offsetPrev - offsetLocal;\n+    if (instantAdjusted - prev <= diff) {\n+        return offsetPrev;\n+    }\n+}\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}