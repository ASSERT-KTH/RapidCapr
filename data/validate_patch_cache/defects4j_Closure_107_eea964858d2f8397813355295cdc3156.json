{
    "patch": "    if (!flags.translationsFile.isEmpty()) {\n      try {\n        options.messageBundle = new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Reading XTB file\", e);\n      }\n    } else if (level == CompilationLevel.ADVANCED_OPTIMIZATIONS) {\n      options.setCollapseProperties(true);\n      options.setCollapseAnonymousFunctions(true);\n      options.setDevirtualizePrototypeMethods(true);\n      options.setRemoveUnusedPrototypeProperties(true);\n      options.setRemoveUnusedPrototypePropertiesInExterns(true);\n      options.setRemoveDeadCode(true);\n      options.setSmartNameRemoval(true);\n      options.setInlineConstantVars(true);\n      options.setInlineFunctions(Reach.ALL);\n      options.setInlineLocalVariables(true);\n      options.setInlineGetters(true);\n      options.setGeneratePseudoNames(true);\n      options.setOptimizeArgumentsArray(true);\n      options.setRewriteFunctionExpressions(false);\n      options.setUseTypesForLocalOptimization(true);\n      options.setUseTypesForOptimization(true);\n      options.setDetectTypes(true);\n      options.setCheckTypes(true);\n      options.setFoldConstants(true);\n      options.setDeadAssignmentElimination(true);\n      options.setRenameLabels(true);\n      options.setPreferLineBreakAtEndOfFile(true);\n      options.setSkipAllCompilerPasses(false);\n      options.setAssumeFunctionWrapper(true);\n      options.setLanguageIn(LanguageMode.ECMASCRIPT5_STRICT);\n      options.setWarningLevel(DiagnosticGroups.checkVars, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.CONST, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.CHECK_REGEXP, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.DEPRECATED_ANNOTATIONS, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.DEPRECATED, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.FILEOVERVIEW_JSDOC, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.DUPLICATE_VARS, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.UNDEFINED_VARS, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.USE_OF_GOOG_BASE, CheckLevel.OFF);\n      options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.OFF);\n\n      if (flags.processJqueryPrimitives) {\n        options.setCodingConvention(new JqueryCodingConvention());\n        options.setJqueryPass(true);\n      } else {\n        options.setCodingConvention(new ClosureCodingConvention());\n      }\n    } else {\n      options.messageBundle = new EmptyMessageBundle();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..60e0b84a 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,63 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+    if (!flags.translationsFile.isEmpty()) {\n+      try {\n+        options.messageBundle = new XtbMessageBundle(\n+            new FileInputStream(flags.translationsFile),\n+            flags.translationsProject);\n+      } catch (IOException e) {\n+        throw new RuntimeException(\"Reading XTB file\", e);\n+      }\n+    } else if (level == CompilationLevel.ADVANCED_OPTIMIZATIONS) {\n+      options.setCollapseProperties(true);\n+      options.setCollapseAnonymousFunctions(true);\n+      options.setDevirtualizePrototypeMethods(true);\n+      options.setRemoveUnusedPrototypeProperties(true);\n+      options.setRemoveUnusedPrototypePropertiesInExterns(true);\n+      options.setRemoveDeadCode(true);\n+      options.setSmartNameRemoval(true);\n+      options.setInlineConstantVars(true);\n+      options.setInlineFunctions(Reach.ALL);\n+      options.setInlineLocalVariables(true);\n+      options.setInlineGetters(true);\n+      options.setGeneratePseudoNames(true);\n+      options.setOptimizeArgumentsArray(true);\n+      options.setRewriteFunctionExpressions(false);\n+      options.setUseTypesForLocalOptimization(true);\n+      options.setUseTypesForOptimization(true);\n+      options.setDetectTypes(true);\n+      options.setCheckTypes(true);\n+      options.setFoldConstants(true);\n+      options.setDeadAssignmentElimination(true);\n+      options.setRenameLabels(true);\n+      options.setPreferLineBreakAtEndOfFile(true);\n+      options.setSkipAllCompilerPasses(false);\n+      options.setAssumeFunctionWrapper(true);\n+      options.setLanguageIn(LanguageMode.ECMASCRIPT5_STRICT);\n+      options.setWarningLevel(DiagnosticGroups.checkVars, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.CONST, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.CHECK_REGEXP, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.DEPRECATED_ANNOTATIONS, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.DEPRECATED, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.FILEOVERVIEW_JSDOC, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.DUPLICATE_VARS, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.UNDEFINED_VARS, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.USE_OF_GOOG_BASE, CheckLevel.OFF);\n+      options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.OFF);\n+\n+      if (flags.processJqueryPrimitives) {\n+        options.setCodingConvention(new JqueryCodingConvention());\n+        options.setJqueryPass(true);\n+      } else {\n+        options.setCodingConvention(new ClosureCodingConvention());\n+      }\n+    } else {\n+      options.messageBundle = new EmptyMessageBundle();\n+    }\n     }\n \n     return options;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}