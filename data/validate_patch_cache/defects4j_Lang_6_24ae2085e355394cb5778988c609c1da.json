{
    "patch": "for (int i = 0; i < consumed; i++) {\n    if (pos < len) {\n        int codePoint = Character.codePointAt(input, pos);\n        pos += Character.charCount(codePoint);\n        out.write(codePoint);\n    } else {\n        break;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..0690d761 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,15 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+for (int i = 0; i < consumed; i++) {\n+    if (pos < len) {\n+        int codePoint = Character.codePointAt(input, pos);\n+        pos += Character.charCount(codePoint);\n+        out.write(codePoint);\n+    } else {\n+        break;\n+    }\n+}\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: unescape(String) failed: expected '\\n",
    "test_result": "FAIL"
}