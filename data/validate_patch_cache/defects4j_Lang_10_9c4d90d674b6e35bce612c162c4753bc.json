{
    "patch": "    public void testLANG_831() throws Exception {\n        SimpleDateFormat df = new SimpleDateFormat(\"ddMMMyyyy\", Locale.US);\n        df.setTimeZone(TimeZone.getTimeZone(\"Pacific/Auckland\"));\n        Date d = df.parse(\"28Sep2002\");\n        String str = df.format(d);\n        assertEquals(\"28Sep2002\", str);\n        \n        SimpleDateFormat parsedf = new SimpleDateFormat(\"MMM d, yyyy\", Locale.US);\n        parsedf.setTimeZone(TimeZone.getDefault());\n        Date parsed = parsedf.parse(str);\n        TimeZone tz = parsedf.getTimeZone();\n        assertEquals(parsed, d);\n        assertEquals(tz, TimeZone.getTimeZone(\"Pacific/Auckland\"));\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex a01159bd..1f29cb1f 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -300,46 +300,19 @@ public class FastDateParser implements DateParser, Serializable {\n      * @param unquote If true, replace two success quotes ('') with single quote (')\n      * @return The <code>StringBuilder</code>\n      */\n-    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n-        boolean wasWhite= false;\n-        for(int i= 0; i<value.length(); ++i) {\n-            char c= value.charAt(i);\n-            if(Character.isWhitespace(c)) {\n-                if(!wasWhite) {\n-                    wasWhite= true;\n-                    regex.append(\"\\\\s*+\");\n-                }\n-                continue;\n-            }\n-            wasWhite= false;\n-            switch(c) {\n-            case '\\'':\n-                if(unquote) {\n-                    if(++i==value.length()) {\n-                        return regex;\n-                    }\n-                    c= value.charAt(i);\n-                }\n-                break;\n-            case '?':\n-            case '[':\n-            case ']':\n-            case '(':\n-            case ')':\n-            case '{':\n-            case '}':\n-            case '\\\\':\n-            case '|':\n-            case '*':\n-            case '+':\n-            case '^':\n-            case '$':\n-            case '.':\n-                regex.append('\\\\');\n-            }\n-            regex.append(c);\n-        }\n-        return regex;\n+    public void testLANG_831() throws Exception {\n+        SimpleDateFormat df = new SimpleDateFormat(\"ddMMMyyyy\", Locale.US);\n+        df.setTimeZone(TimeZone.getTimeZone(\"Pacific/Auckland\"));\n+        Date d = df.parse(\"28Sep2002\");\n+        String str = df.format(d);\n+        assertEquals(\"28Sep2002\", str);\n+        \n+        SimpleDateFormat parsedf = new SimpleDateFormat(\"MMM d, yyyy\", Locale.US);\n+        parsedf.setTimeZone(TimeZone.getDefault());\n+        Date parsed = parsedf.parse(str);\n+        TimeZone tz = parsedf.getTimeZone();\n+        assertEquals(parsed, d);\n+        assertEquals(tz, TimeZone.getTimeZone(\"Pacific/Auckland\"));\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}