{
    "patch": "return new Iterator<Chromosome>() {\n    private final List<Chromosome> unmodifiableChromosomes;\n\n    {\n        unmodifiableChromosomes = Collections.unmodifiableList(new ArrayList<Chromosome>(chromosomes));\n    }\n\n    private final Iterator<Chromosome> iterator = unmodifiableChromosomes.iterator();\n\n    @Override\n    public boolean hasNext() {\n        return iterator.hasNext();\n    }\n\n    @Override\n    public Chromosome next() {\n        return iterator.next();\n    }\n\n    @Override\n    public void remove() {\n        throw new UnsupportedOperationException(\"Cannot remove element from iterator.\");\n    }\n};",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\nindex 1eb005316..cd13a3dab 100644\n--- a/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java\n@@ -206,6 +206,29 @@ public abstract class ListPopulation implements Population {\n      * @return chromosome iterator\n      */\n     public Iterator<Chromosome> iterator() {\n-        return chromosomes.iterator();\n+return new Iterator<Chromosome>() {\n+    private final List<Chromosome> unmodifiableChromosomes;\n+\n+    {\n+        unmodifiableChromosomes = Collections.unmodifiableList(new ArrayList<Chromosome>(chromosomes));\n+    }\n+\n+    private final Iterator<Chromosome> iterator = unmodifiableChromosomes.iterator();\n+\n+    @Override\n+    public boolean hasNext() {\n+        return iterator.hasNext();\n+    }\n+\n+    @Override\n+    public Chromosome next() {\n+        return iterator.next();\n+    }\n+\n+    @Override\n+    public void remove() {\n+        throw new UnsupportedOperationException(\"Cannot remove element from iterator.\");\n+    }\n+};\n     }\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}