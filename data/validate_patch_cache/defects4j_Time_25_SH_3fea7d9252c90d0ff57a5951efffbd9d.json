{
    "patch": "            if ((offsetLocal - offsetAdjusted) < 0) {\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    int offsetNext;\n                    if (nextLocal > instantAdjusted) {\n                        offsetNext = getOffset(nextLocal);\n                    } else {\n                        offsetNext = getOffset(instantAdjusted - 1);\n                    }\n                    // Interpolate offset across transition\n                    long diff = nextLocal - instantAdjusted;\n                    int offsetInterpolated = ((offsetAdjusted * (diff - 1)) + (offsetNext * (1))) / diff;\n                    if (offsetInterpolated == offsetAdjusted) {\n                        return offsetLocal;\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..95b7afaa 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,24 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if ((offsetLocal - offsetAdjusted) < 0) {\n+                long nextLocal = nextTransition(instantAdjusted);\n+                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                if (nextLocal != nextAdjusted) {\n+                    int offsetNext;\n+                    if (nextLocal > instantAdjusted) {\n+                        offsetNext = getOffset(nextLocal);\n+                    } else {\n+                        offsetNext = getOffset(instantAdjusted - 1);\n+                    }\n+                    // Interpolate offset across transition\n+                    long diff = nextLocal - instantAdjusted;\n+                    int offsetInterpolated = ((offsetAdjusted * (diff - 1)) + (offsetNext * (1))) / diff;\n+                    if (offsetInterpolated == offsetAdjusted) {\n+                        return offsetLocal;\n+                    }\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}