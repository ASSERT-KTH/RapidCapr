{
    "patch": "        if (n.isVar() && n.getFirstChild() != null) {\n          if (n.getFirstChild().hasChildren()) {\n            for (Node c = n.getFirstChild().getFirstChild(); c != null; c = c.getNext()) {\n              if (c.isFunction()) {\n                return true;\n              }\n            }\n          }\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..f76dc720 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,15 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isVar() && n.getFirstChild() != null) {\n+          if (n.getFirstChild().hasChildren()) {\n+            for (Node c = n.getFirstChild().getFirstChild(); c != null; c = c.getNext()) {\n+              if (c.isFunction()) {\n+                return true;\n+              }\n+            }\n+          }\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}