{
    "patch": "                // adjust time further one hour back if the given time is at a DST overlap\n                int dstSavings = getStandardOffset(instantAdjusted) - getOffset(instantAdjusted);\n                if (dstSavings > 0) {\n                    // we are at a DST overlap, so move back one hour and recalculate the offset\n                    long instantAdjusted2 = instantAdjusted - dstSavings;\n                    int offsetAdjusted2 = getOffset(instantAdjusted2);\n                    if (offsetAdjusted2 == offsetLocal) {\n                        // we are still at the overlap, so move forward to the transition point\n                        long nextLocal = nextTransition(instantAdjusted2);\n                        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                        if (nextLocal != nextAdjusted) {\n                            return offsetLocal;\n                        }\n                    } else {\n                        // we moved out of the overlap, use the updated offset\n                        return offsetAdjusted2;\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..8aab6029 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,24 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                // adjust time further one hour back if the given time is at a DST overlap\n+                int dstSavings = getStandardOffset(instantAdjusted) - getOffset(instantAdjusted);\n+                if (dstSavings > 0) {\n+                    // we are at a DST overlap, so move back one hour and recalculate the offset\n+                    long instantAdjusted2 = instantAdjusted - dstSavings;\n+                    int offsetAdjusted2 = getOffset(instantAdjusted2);\n+                    if (offsetAdjusted2 == offsetLocal) {\n+                        // we are still at the overlap, so move forward to the transition point\n+                        long nextLocal = nextTransition(instantAdjusted2);\n+                        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                        if (nextLocal != nextAdjusted) {\n+                            return offsetLocal;\n+                        }\n+                    } else {\n+                        // we moved out of the overlap, use the updated offset\n+                        return offsetAdjusted2;\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}