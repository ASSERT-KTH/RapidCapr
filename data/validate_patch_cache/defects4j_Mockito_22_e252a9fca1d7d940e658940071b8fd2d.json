{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n  return m != null && arg != null && StringDescription.toString(m).equals(arg.toString());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/matchers/Equality.java b/src/org/mockito/internal/matchers/Equality.java\nindex 43e11fca9..7a60bc605 100644\n--- a/src/org/mockito/internal/matchers/Equality.java\n+++ b/src/org/mockito/internal/matchers/Equality.java\n@@ -10,7 +10,9 @@ import java.lang.reflect.Array;\n public class Equality {\n \n     public static boolean areEqual(Object o1, Object o2) {\n-        if (o1 == null || o2 == null) {\n+private boolean toStringEquals(Matcher m, Object arg) {\n+  return m != null && arg != null && StringDescription.toString(m).equals(arg.toString());\n+}\n             return o1 == null && o2 == null;\n         } else if (isArray(o1)) {\n             return isArray(o2) && areArraysEqual(o1, o2);\n@@ -38,4 +40,4 @@ public class Equality {\n     static boolean isArray(Object o) {\n         return o.getClass().isArray();\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}