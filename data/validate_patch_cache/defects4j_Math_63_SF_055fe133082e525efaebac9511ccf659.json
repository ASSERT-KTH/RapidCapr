{
    "patch": "    public static boolean equals(double[] x, double[] y, double eps) {\n        if (x == y) {\n            return true;\n        }\n        if (x == null || y == null) {\n            return false;\n        }\n        if (x.length != y.length) {\n            return false;\n        }\n        for (int i = 0; i < x.length; i++) {\n            if (Double.compare(x[i], y[i]) != 0 && Math.abs(x[i] - y[i]) > eps) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..57412413f 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -413,8 +413,22 @@ public final class MathUtils {\n      * @param y second value\n      * @return {@code true} if the values are equal.\n      */\n-    public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+    public static boolean equals(double[] x, double[] y, double eps) {\n+        if (x == y) {\n+            return true;\n+        }\n+        if (x == null || y == null) {\n+            return false;\n+        }\n+        if (x.length != y.length) {\n+            return false;\n+        }\n+        for (int i = 0; i < x.length; i++) {\n+            if (Double.compare(x[i], y[i]) != 0 && Math.abs(x[i] - y[i]) > eps) {\n+                return false;\n+            }\n+        }\n+        return true;\n     }\n \n     /**",
    "result_reason": "error: no suitable method found for equals(double,double)",
    "test_result": "ERROR"
}