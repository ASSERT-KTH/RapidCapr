{
    "patch": "        char separator = '_';\n        boolean countryCodeAvailable = false;\n        for (int i = 0; i < len; i++) {\n           if (i == 2 && str.charAt(i) != separator) {\n               throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n           } else if (i == 5 && str.charAt(i) != separator) {\n               countryCodeAvailable = true;\n               break;\n           } else if (!Character.isLetter(str.charAt(i))) {\n               throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n           }\n        }\n\n        if (len == 2) {\n            return new Locale(str);\n        } else if (len == 5 || countryCodeAvailable) {\n            if (str.charAt(2) != separator) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (!Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n\n            if (countryCodeAvailable) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            } else {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..d7c4f329 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,37 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+        char separator = '_';\n+        boolean countryCodeAvailable = false;\n+        for (int i = 0; i < len; i++) {\n+           if (i == 2 && str.charAt(i) != separator) {\n+               throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+           } else if (i == 5 && str.charAt(i) != separator) {\n+               countryCodeAvailable = true;\n+               break;\n+           } else if (!Character.isLetter(str.charAt(i))) {\n+               throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+           }\n+        }\n+\n+        if (len == 2) {\n+            return new Locale(str);\n+        } else if (len == 5 || countryCodeAvailable) {\n+            if (str.charAt(2) != separator) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (!Character.isUpperCase(str.charAt(3)) || !Character.isUpperCase(str.charAt(4))) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+\n+            if (countryCodeAvailable) {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            } else {\n+                return new Locale(str.substring(0, 2), str.substring(3, 5));\n+            }\n+        } else {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}