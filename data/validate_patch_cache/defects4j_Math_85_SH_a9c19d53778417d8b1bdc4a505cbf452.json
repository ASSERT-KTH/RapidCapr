{
    "patch": "public static double[] bracket(UnivariateRealFunction function, double initial, double lowerBound, double upperBound, \n        int maximumIterations) throws ConvergenceException, FunctionEvaluationException {\n\n    if (function == null) {\n        throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n    }\n\n    if (maximumIterations <= 0) {\n        throw MathRuntimeException.createIllegalArgumentException(\n                \"bad value for maximum iterations number: {0}\", maximumIterations);\n    }\n\n    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n        throw MathRuntimeException.createIllegalArgumentException(\n                \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                  lowerBound, initial, upperBound);\n    }\n\n    double a = initial;\n    double b = initial;\n    double fa;\n    double fb;\n    fa = function.value(a);\n    fb = function.value(b);\n    int numIterations = 0;\n\n    do {\n        a = Math.max(a - 1.0, lowerBound);\n        b = Math.min(b + 1.0, upperBound);\n        fa = function.value(a);\n        fb = function.value(b);\n        numIterations++;\n    } while ((fa >= 0 && fb >= 0) || (fa <= 0 && fb <= 0) || Double.isNaN(fa) || Double.isNaN(fb)) \n        && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)));\n\n    if (numIterations >= maximumIterations) {\n        throw new ConvergenceException(\"maximum number of iterations ({0}) exceeded\", maximumIterations);\n    }\n    \n    return new double[] {a, b};\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\nindex bf3e4bf53..7451cdd80 100644\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n@@ -195,7 +195,47 @@ public class UnivariateRealSolverUtils {\n         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                 ((a > lowerBound) || (b < upperBound)));\n    \n-        if (fa * fb >= 0.0 ) {\n+public static double[] bracket(UnivariateRealFunction function, double initial, double lowerBound, double upperBound, \n+        int maximumIterations) throws ConvergenceException, FunctionEvaluationException {\n+\n+    if (function == null) {\n+        throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n+    }\n+\n+    if (maximumIterations <= 0) {\n+        throw MathRuntimeException.createIllegalArgumentException(\n+                \"bad value for maximum iterations number: {0}\", maximumIterations);\n+    }\n+\n+    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n+        throw MathRuntimeException.createIllegalArgumentException(\n+                \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n+                  lowerBound, initial, upperBound);\n+    }\n+\n+    double a = initial;\n+    double b = initial;\n+    double fa;\n+    double fb;\n+    fa = function.value(a);\n+    fb = function.value(b);\n+    int numIterations = 0;\n+\n+    do {\n+        a = Math.max(a - 1.0, lowerBound);\n+        b = Math.min(b + 1.0, upperBound);\n+        fa = function.value(a);\n+        fb = function.value(b);\n+        numIterations++;\n+    } while ((fa >= 0 && fb >= 0) || (fa <= 0 && fb <= 0) || Double.isNaN(fa) || Double.isNaN(fb)) \n+        && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)));\n+\n+    if (numIterations >= maximumIterations) {\n+        throw new ConvergenceException(\"maximum number of iterations ({0}) exceeded\", maximumIterations);\n+    }\n+    \n+    return new double[] {a, b};\n+}\n             throw new ConvergenceException(\n                       \"number of iterations={0}, maximum iterations={1}, \" +\n                       \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}