{
    "patch": "if (str.matches(\"-?0[xX][0-9a-fA-F]+\")) {\n    try {\n        return Integer.decode(str);\n    } catch (NumberFormatException nfe) { // NOPMD\n        // ignore the bad number\n    }\n    try {\n        return Long.decode(str);\n    } catch (NumberFormatException nfe) { // NOPMD\n        // ignore the bad number\n    }\n    return new BigInteger(str.substring(2), 16);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..2b9e014d 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,19 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.matches(\"-?0[xX][0-9a-fA-F]+\")) {\n+    try {\n+        return Integer.decode(str);\n+    } catch (NumberFormatException nfe) { // NOPMD\n+        // ignore the bad number\n+    }\n+    try {\n+        return Long.decode(str);\n+    } catch (NumberFormatException nfe) { // NOPMD\n+        // ignore the bad number\n+    }\n+    return new BigInteger(str.substring(2), 16);\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}