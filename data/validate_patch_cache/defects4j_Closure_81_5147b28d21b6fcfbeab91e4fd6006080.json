{
    "patch": "    Boolean isUnnamedFunction = false;\n    if (name == null) {\n        name = new Name();\n        name.setIdentifier(\"\");\n        isUnnamedFunction = true;\n    }\n    Node node = newNode(Token.FUNCTION);\n    Node newName = transform(name);\n    if (isUnnamedFunction) {\n        newName.setLineno(functionNode.getLineno());\n        int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n        newName.setCharno(position2charno(lpColumn));\n    }\n    node.addChildToBack(newName);\n\n    Node paramNode = newNode(Token.PARAM_LIST);\n    if (functionNode.getParams() != null) {\n        for (AstNode param : functionNode.getParams()) {\n            paramNode.addChildToBack(transform(param));\n        }\n    }\n    node.addChildToBack(paramNode);\n\n    Node bodyNode = transform(functionNode.getBody());\n    parseDirectives(bodyNode);\n    node.addChildToBack(bodyNode);\n    return node;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..a595235a 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -384,7 +384,6 @@ public class IRFactory {\n         node.setDirectives(directives);\n       }\n     }\n-\n     private boolean isDirective(Node n) {\n       if (n == null) return false;\n \n@@ -514,6 +513,33 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+    Boolean isUnnamedFunction = false;\n+    if (name == null) {\n+        name = new Name();\n+        name.setIdentifier(\"\");\n+        isUnnamedFunction = true;\n+    }\n+    Node node = newNode(Token.FUNCTION);\n+    Node newName = transform(name);\n+    if (isUnnamedFunction) {\n+        newName.setLineno(functionNode.getLineno());\n+        int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n+        newName.setCharno(position2charno(lpColumn));\n+    }\n+    node.addChildToBack(newName);\n+\n+    Node paramNode = newNode(Token.PARAM_LIST);\n+    if (functionNode.getParams() != null) {\n+        for (AstNode param : functionNode.getParams()) {\n+            paramNode.addChildToBack(transform(param));\n+        }\n+    }\n+    node.addChildToBack(paramNode);\n+\n+    Node bodyNode = transform(functionNode.getBody());\n+    parseDirectives(bodyNode);\n+    node.addChildToBack(bodyNode);\n+    return node;\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable isUnnamedFunction is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}