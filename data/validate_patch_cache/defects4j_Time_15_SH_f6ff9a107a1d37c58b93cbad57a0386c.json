{
    "patch": "        if (val2 == -1 && val1 == Long.MIN_VALUE) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        long result = val1 * val2;\n        if (((result ^ val1) < 0) && (val2 != 0 && result / val2 != val1)) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        return result;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java\nindex a0fe7e2d..38e39472 100644\n--- a/src/main/java/org/joda/time/field/FieldUtils.java\n+++ b/src/main/java/org/joda/time/field/FieldUtils.java\n@@ -135,6 +135,14 @@ public class FieldUtils {\n     public static long safeMultiply(long val1, int val2) {\n         switch (val2) {\n             case -1:\n+        if (val2 == -1 && val1 == Long.MIN_VALUE) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+        long result = val1 * val2;\n+        if (((result ^ val1) < 0) && (val2 != 0 && result / val2 != val1)) {\n+            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n+        }\n+        return result;\n                 return -val1;\n             case 0:\n                 return 0L;",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}