{
    "patch": "cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\nif (fromNode == null || fromNode.isFunction()) {\n  return null;\n}\n\nNode parent = finallyNode.getParent();\nif (parent.isTry() && finallyNode != parent.getLastChild()) {\n  return parent.getNext();\n}\n\nNode nextSibling = finallyNode.getNext();\nwhile (nextSibling != null && nextSibling.isEmpty()) {\n  nextSibling = nextSibling.getNext();\n}\n\nif (nextSibling != null) {\n  return nextSibling;\n}\n\nreturn computeFollowNode(fromNode, parent, cfa);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..2700d7a5 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,26 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+if (fromNode == null || fromNode.isFunction()) {\n+  return null;\n+}\n+\n+Node parent = finallyNode.getParent();\n+if (parent.isTry() && finallyNode != parent.getLastChild()) {\n+  return parent.getNext();\n+}\n+\n+Node nextSibling = finallyNode.getNext();\n+while (nextSibling != null && nextSibling.isEmpty()) {\n+  nextSibling = nextSibling.getNext();\n+}\n+\n+if (nextSibling != null) {\n+  return nextSibling;\n+}\n+\n+return computeFollowNode(fromNode, parent, cfa);\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "error: variable parent is already defined in method computeFollowNode(Node,Node,ControlFlowAnalysis)",
    "test_result": "ERROR"
}