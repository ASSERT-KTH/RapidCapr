{
    "patch": "     JSType type = n.getJSType();\n     if (type == null || !type.isFunctionType()) {\n       t.report(n, INVALID_TYPEOF_OPERAND);\n     }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..0f7460db 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,10 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+     JSType type = n.getJSType();\n+     if (type == null || !type.isFunctionType()) {\n+       t.report(n, INVALID_TYPEOF_OPERAND);\n+     }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}