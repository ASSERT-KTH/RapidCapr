{
    "patch": "            double maxEntry = 0;\n            int maxEntryCol = -1;\n            for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n                final double entry = tableau.getEntry(0, i);\n                if (entry > maxEntry) {\n                    maxEntry = entry;\n                    maxEntryCol = i;\n                }\n            }\n\n            if (maxEntryCol >= 0) {\n                columnsToDrop.add(maxEntryCol);\n\n                // update the objective function\n                double[] objectiveCoefficients = getObjectiveFunctionCoefficients();\n                for (int i = 0; i < objectiveCoefficients.length; i++) {\n                    if (i == maxEntryCol) {\n                        objectiveCoefficients[i] = 0;\n                    } else {\n                        objectiveCoefficients[i] -= objectiveCoefficients[maxEntryCol] * tableau.getEntry(0, i) / maxEntry;\n                    }\n                }\n                setObjectiveFunctionCoefficients(objectiveCoefficients);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..a26d8d96a 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -335,7 +335,30 @@ class SimplexTableau implements Serializable {\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+            double maxEntry = 0;\n+            int maxEntryCol = -1;\n+            for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n+                final double entry = tableau.getEntry(0, i);\n+                if (entry > maxEntry) {\n+                    maxEntry = entry;\n+                    maxEntryCol = i;\n+                }\n+            }\n+\n+            if (maxEntryCol >= 0) {\n+                columnsToDrop.add(maxEntryCol);\n+\n+                // update the objective function\n+                double[] objectiveCoefficients = getObjectiveFunctionCoefficients();\n+                for (int i = 0; i < objectiveCoefficients.length; i++) {\n+                    if (i == maxEntryCol) {\n+                        objectiveCoefficients[i] = 0;\n+                    } else {\n+                        objectiveCoefficients[i] -= objectiveCoefficients[maxEntryCol] * tableau.getEntry(0, i) / maxEntry;\n+                    }\n+                }\n+                setObjectiveFunctionCoefficients(objectiveCoefficients);\n+            }\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}