{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        } else {\n            // ensure we are using the timezone of the calendar\n            applyTimeZone(calendar);\n        }\n        return applyRules(calendar, buf);\n    }\n    \n    private void applyTimeZone(Calendar calendar) {\n        if (!calendar.getTimeZone().equals(mTimeZone)) {\n            calendar.setTimeZone(mTimeZone);\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..a16983eb 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -871,9 +871,18 @@ public class FastDateFormat extends Format {\n         if (mTimeZoneForced) {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n+        } else {\n+            // ensure we are using the timezone of the calendar\n+            applyTimeZone(calendar);\n         }\n         return applyRules(calendar, buf);\n     }\n+    \n+    private void applyTimeZone(Calendar calendar) {\n+        if (!calendar.getTimeZone().equals(mTimeZone)) {\n+            calendar.setTimeZone(mTimeZone);\n+        }\n+    }\n \n     /**\n      * <p>Performs the formatting by applying the rules to the",
    "result_reason": "junit.framework.ComparisonFailure: expected:<T[10]:11:12> but was:<T[05]:11:12>",
    "test_result": "FAIL"
}