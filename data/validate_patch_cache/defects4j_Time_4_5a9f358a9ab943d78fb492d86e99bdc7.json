{
    "patch": "            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n            try {\n                iChronology.validate(newPartial, newValues);\n            } catch (IllegalFieldValueException ex) {\n                //Remove the last added value\n                int[] newNewValues = new int[newValues.length - 1];\n                System.arraycopy(newValues, 0, newNewValues, 0, i);\n                System.arraycopy(newValues, i + 1, newNewValues, i, newValues.length - i - 1);\n                throw new IllegalFieldValueException(\n                        fieldType, Integer.valueOf(value), null, ex.getMessage());\n            }\n            return newPartial;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..dd56e9cd 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -462,6 +462,17 @@ public final class Partial\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n             Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            try {\n+                iChronology.validate(newPartial, newValues);\n+            } catch (IllegalFieldValueException ex) {\n+                //Remove the last added value\n+                int[] newNewValues = new int[newValues.length - 1];\n+                System.arraycopy(newValues, 0, newNewValues, 0, i);\n+                System.arraycopy(newValues, i + 1, newNewValues, i, newValues.length - i - 1);\n+                throw new IllegalFieldValueException(\n+                        fieldType, Integer.valueOf(value), null, ex.getMessage());\n+            }\n+            return newPartial;\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: no suitable constructor found for IllegalFieldValueException(DateTimeFieldType,Integer,<null>,String)",
    "test_result": "ERROR"
}