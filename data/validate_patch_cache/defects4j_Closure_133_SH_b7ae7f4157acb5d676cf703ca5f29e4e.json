{
    "patch": "  private String getRemainingJSDocLine() {\n    String remainingJSDocLine = stream.getRemainingJSDocLine();\n    String result;\n    if (remainingJSDocLine == null) {\n      return null;\n    }\n    int idx = remainingJSDocLine.indexOf(\"@\");\n    if (idx >= 0) {\n      result = remainingJSDocLine.substring(0, idx);\n    } else {\n      result = remainingJSDocLine;\n    }\n    return result;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..b375c5df 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,20 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+  private String getRemainingJSDocLine() {\n+    String remainingJSDocLine = stream.getRemainingJSDocLine();\n+    String result;\n+    if (remainingJSDocLine == null) {\n+      return null;\n+    }\n+    int idx = remainingJSDocLine.indexOf(\"@\");\n+    if (idx >= 0) {\n+      result = remainingJSDocLine.substring(0, idx);\n+    } else {\n+      result = remainingJSDocLine;\n+    }\n+    return result;\n+  }\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}