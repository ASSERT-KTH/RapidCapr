{
    "patch": "                // only advance the positions if we consumed at least one char (for surrogate pairs)\n                if (consumed > 1) {\n                    pos += consumed;\n                } else if (consumed == 1) {\n                    pos += Character.charCount(Character.codePointAt(input, pos));\n                } else {\n                    out.write(input.charAt(pos));\n                    pos += 1; // advance one character\n                }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..dd5ee4a4 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,15 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                // only advance the positions if we consumed at least one char (for surrogate pairs)\n+                if (consumed > 1) {\n+                    pos += consumed;\n+                } else if (consumed == 1) {\n+                    pos += Character.charCount(Character.codePointAt(input, pos));\n+                } else {\n+                    out.write(input.charAt(pos));\n+                    pos += 1; // advance one character\n+                }\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: unescape(String) failed: expected '\\ntest\\b' actual '\\nst\\b' expected:<",
    "test_result": "FAIL"
}