{
    "patch": "stepSize = filterStep(hNew, forward, Double.isNaN(error) || error <= 1.0);\ntry {\n    stepSize = Math.max(stepSize, getField().getZero().add(minStep).getReal());\n} catch (IllegalAccessException | InstantiationException e) {\n    throw new RuntimeException(e);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..f7f21a17a 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,12 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+stepSize = filterStep(hNew, forward, Double.isNaN(error) || error <= 1.0);\n+try {\n+    stepSize = Math.max(stepSize, getField().getZero().add(minStep).getReal());\n+} catch (IllegalAccessException | InstantiationException e) {\n+    throw new RuntimeException(e);\n+}\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "error: multi-catch statement is not supported in -source 1.5",
    "test_result": "ERROR"
}