{
    "patch": "          case Token.NAME:\n            // This may be a variable get or set.\n            Node grandparent = parent.getParent();\n            if (parent.isVar() || grandparent.isVar()) {\n              isSet = true;\n              Node rvalue = n.getFirstChild();\n              type = rvalue == null ? Name.Type.OTHER : getValueType(rvalue);\n            } else if (parent.isInc() || parent.isDec()) {\n              isSet = true;\n              type = Name.Type.OTHER;\n            } else if (parent.isAssignment() \n                && parent.getFirstChild() == n) {\n              isSet = true;\n              type = Name.Type.OTHER;\n            } else if (parent.isFunction()) {\n              if (grandparent == null || NodeUtil.isFunctionExpression(parent)) {\n                return;\n              }\n              isSet = true;\n              type = Name.Type.FUNCTION;\n            } else if (parent.isGetProp()) {\n              return;\n            } else {\n              return;\n            }\n            name = n.getString();\n            break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..db03ae39 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,33 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+          case Token.NAME:\n+            // This may be a variable get or set.\n+            Node grandparent = parent.getParent();\n+            if (parent.isVar() || grandparent.isVar()) {\n+              isSet = true;\n+              Node rvalue = n.getFirstChild();\n+              type = rvalue == null ? Name.Type.OTHER : getValueType(rvalue);\n+            } else if (parent.isInc() || parent.isDec()) {\n+              isSet = true;\n+              type = Name.Type.OTHER;\n+            } else if (parent.isAssignment() \n+                && parent.getFirstChild() == n) {\n+              isSet = true;\n+              type = Name.Type.OTHER;\n+            } else if (parent.isFunction()) {\n+              if (grandparent == null || NodeUtil.isFunctionExpression(parent)) {\n+                return;\n+              }\n+              isSet = true;\n+              type = Name.Type.FUNCTION;\n+            } else if (parent.isGetProp()) {\n+              return;\n+            } else {\n+              return;\n+            }\n+            name = n.getString();\n+            break;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: variable rvalue is already defined in method collect(JSModule,Scope,Node)",
    "test_result": "ERROR"
}