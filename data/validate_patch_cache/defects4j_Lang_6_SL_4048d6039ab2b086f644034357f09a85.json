{
    "patch": "char lastChar = 0;\nif (pt > 0) {\n    lastChar = output.charAt(output.length() - 1);\n}\nif (lastChar != 0 || translated.charAt(pt) != 0) {\n    output.append(translated.charAt(pt));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..d00f94fc 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,13 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+char lastChar = 0;\n+if (pt > 0) {\n+    lastChar = output.charAt(output.length() - 1);\n+}\n+if (lastChar != 0 || translated.charAt(pt) != 0) {\n+    output.append(translated.charAt(pt));\n+}\n             }\n         }\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}