{
    "patch": "    protected BasePeriod(long duration) {\n        super();\n        if (duration >= JodaConstants.MILLIS_PER_YEAR || duration <= -JodaConstants.MILLIS_PER_YEAR) {\n            setYears(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_YEAR));\n            duration = duration - (getYears() * JodaConstants.MILLIS_PER_YEAR);\n        }\n        if (duration >= JodaConstants.MILLIS_PER_MONTH || duration <= -JodaConstants.MILLIS_PER_MONTH) {\n            setMonths(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_MONTH));\n            duration = duration - (getMonths() * JodaConstants.MILLIS_PER_MONTH);\n        }\n        if (duration >= JodaConstants.MILLIS_PER_WEEK || duration <= -JodaConstants.MILLIS_PER_WEEK) {\n            setWeeks(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_WEEK));\n            duration = duration - (getWeeks() * JodaConstants.MILLIS_PER_WEEK);\n        }\n        if (duration >= JodaConstants.MILLIS_PER_DAY || duration <= -JodaConstants.MILLIS_PER_DAY) {\n            setDays(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_DAY));\n            duration = duration - (getDays() * JodaConstants.MILLIS_PER_DAY);\n        }\n        if (duration >= JodaConstants.MILLIS_PER_HOUR || duration <= -JodaConstants.MILLIS_PER_HOUR) {\n            setHours(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_HOUR));\n            duration = duration - (getHours() * JodaConstants.MILLIS_PER_HOUR);\n        }\n        if (duration >= JodaConstants.MILLIS_PER_MINUTE || duration <= -JodaConstants.MILLIS_PER_MINUTE) {\n            setMinutes(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_MINUTE));\n            duration = duration - (getMinutes() * JodaConstants.MILLIS_PER_MINUTE);\n        }\n        if (duration >= JodaConstants.MILLIS_PER_SECOND || duration <= -JodaConstants.MILLIS_PER_SECOND) {\n            setSeconds(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_SECOND));\n            duration = duration - (getSeconds() * JodaConstants.MILLIS_PER_SECOND);\n        }\n        if (duration != 0) {\n            setMillis(FieldUtils.safeToInt(duration));\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..09f6db0d 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,8 +219,38 @@ public abstract class BasePeriod\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        super();\n+        if (duration >= JodaConstants.MILLIS_PER_YEAR || duration <= -JodaConstants.MILLIS_PER_YEAR) {\n+            setYears(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_YEAR));\n+            duration = duration - (getYears() * JodaConstants.MILLIS_PER_YEAR);\n+        }\n+        if (duration >= JodaConstants.MILLIS_PER_MONTH || duration <= -JodaConstants.MILLIS_PER_MONTH) {\n+            setMonths(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_MONTH));\n+            duration = duration - (getMonths() * JodaConstants.MILLIS_PER_MONTH);\n+        }\n+        if (duration >= JodaConstants.MILLIS_PER_WEEK || duration <= -JodaConstants.MILLIS_PER_WEEK) {\n+            setWeeks(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_WEEK));\n+            duration = duration - (getWeeks() * JodaConstants.MILLIS_PER_WEEK);\n+        }\n+        if (duration >= JodaConstants.MILLIS_PER_DAY || duration <= -JodaConstants.MILLIS_PER_DAY) {\n+            setDays(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_DAY));\n+            duration = duration - (getDays() * JodaConstants.MILLIS_PER_DAY);\n+        }\n+        if (duration >= JodaConstants.MILLIS_PER_HOUR || duration <= -JodaConstants.MILLIS_PER_HOUR) {\n+            setHours(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_HOUR));\n+            duration = duration - (getHours() * JodaConstants.MILLIS_PER_HOUR);\n+        }\n+        if (duration >= JodaConstants.MILLIS_PER_MINUTE || duration <= -JodaConstants.MILLIS_PER_MINUTE) {\n+            setMinutes(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_MINUTE));\n+            duration = duration - (getMinutes() * JodaConstants.MILLIS_PER_MINUTE);\n+        }\n+        if (duration >= JodaConstants.MILLIS_PER_SECOND || duration <= -JodaConstants.MILLIS_PER_SECOND) {\n+            setSeconds(FieldUtils.safeToInt(duration / JodaConstants.MILLIS_PER_SECOND));\n+            duration = duration - (getSeconds() * JodaConstants.MILLIS_PER_SECOND);\n+        }\n+        if (duration != 0) {\n+            setMillis(FieldUtils.safeToInt(duration));\n+        }\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}