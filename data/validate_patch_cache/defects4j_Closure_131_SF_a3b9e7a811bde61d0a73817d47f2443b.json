{
    "patch": "public static boolean isJSIdentifier(String s) {\n    int length = s.length();\n\n    if (length == 0 ||\n        !Character.isJavaIdentifierStart(s.codePointAt(0))) {\n        return false;\n    }\n\n    for (int i = 1; i < length; i++) {\n        if (!Character.isJavaIdentifierPart(s.codePointAt(i))) {\n            if (s.charAt(i) == '\\'' || s.charAt(i) == '\\\"') {\n                int backTrack = i - 1;\n                while (backTrack >= 0 && s.charAt(backTrack) == '\\\\') {\n                    backTrack--;\n                }\n                int numberOfBackslashes = i - backTrack - 1;\n                if (numberOfBackslashes % 2 == 0) {\n                    int nextQuoteIndex = s.indexOf(s.charAt(i), i + 1);\n                    if (nextQuoteIndex == -1) {\n                        return false;\n                    }\n                    i = nextQuoteIndex;\n                }\n            } else {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/TokenStream.java b/src/com/google/javascript/rhino/TokenStream.java\nindex 144a4adc..45af8a2d 100644\n--- a/src/com/google/javascript/rhino/TokenStream.java\n+++ b/src/com/google/javascript/rhino/TokenStream.java\n@@ -187,21 +187,35 @@ public class TokenStream {\n         return id;\n     }\n \n-    public static boolean isJSIdentifier(String s) {\n-      int length = s.length();\n+public static boolean isJSIdentifier(String s) {\n+    int length = s.length();\n \n-      if (length == 0 ||\n-          !Character.isJavaIdentifierStart(s.charAt(0))) {\n+    if (length == 0 ||\n+        !Character.isJavaIdentifierStart(s.codePointAt(0))) {\n         return false;\n-      }\n+    }\n \n-      for (int i = 1; i < length; i++) {\n-        if (\n-            !Character.isJavaIdentifierPart(s.charAt(i))) {\n-          return false;\n+    for (int i = 1; i < length; i++) {\n+        if (!Character.isJavaIdentifierPart(s.codePointAt(i))) {\n+            if (s.charAt(i) == '\\'' || s.charAt(i) == '\\\"') {\n+                int backTrack = i - 1;\n+                while (backTrack >= 0 && s.charAt(backTrack) == '\\\\') {\n+                    backTrack--;\n+                }\n+                int numberOfBackslashes = i - backTrack - 1;\n+                if (numberOfBackslashes % 2 == 0) {\n+                    int nextQuoteIndex = s.indexOf(s.charAt(i), i + 1);\n+                    if (nextQuoteIndex == -1) {\n+                        return false;\n+                    }\n+                    i = nextQuoteIndex;\n+                }\n+            } else {\n+                return false;\n+            }\n         }\n-      }\n-\n-      return true;\n     }\n+\n+    return true;\n+}\n }",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}