{
    "patch": "        int idx = 0;\n\n        for (int i = last - 1; i >= 0; --i) {\n            int offset = uniCounterOffset[i];\n            if (index >= count + offset) {\n                idx = (index - count) / offset;\n                count += idx * offset;\n            }\n            indices[i] = idx;\n        }\n\n        return indices;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..a38a972cf 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -234,13 +234,18 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n             indices[i] = idx;\n         }\n \n-        int idx = 1;\n-        while (count < index) {\n-            count += idx;\n-            ++idx;\n+        int idx = 0;\n+\n+        for (int i = last - 1; i >= 0; --i) {\n+            int offset = uniCounterOffset[i];\n+            if (index >= count + offset) {\n+                idx = (index - count) / offset;\n+                count += idx * offset;\n+            }\n+            indices[i] = idx;\n         }\n-        --idx;\n-        indices[last] = idx;\n+\n+        return indices;\n \n         return indices;\n     }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}