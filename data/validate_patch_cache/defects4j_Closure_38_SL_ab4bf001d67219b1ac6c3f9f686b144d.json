{
    "patch": "    } else if (x == 0 && Double.doubleToLongBits(x) != 0x8000000000000000L) {\n      add(\"0.0\");\n    } else if (x < 0 && prev == '-') {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 4381487c..c4743a02 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -236,13 +236,14 @@ abstract class CodeConsumer {\n       maybeCutLine();\n     }\n   }\n-\n   void addNumber(double x) {\n     // This is not pretty printing. This is to prevent misparsing of x- -4 as\n     // x--4 (which is a syntax error).\n     char prev = getLastChar();\n     boolean negativeZero = isNegativeZero(x);\n-    if (x < 0 && prev == '-') {\n+    } else if (x == 0 && Double.doubleToLongBits(x) != 0x8000000000000000L) {\n+      add(\"0.0\");\n+    } else if (x < 0 && prev == '-') {\n       add(\" \");\n     }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}