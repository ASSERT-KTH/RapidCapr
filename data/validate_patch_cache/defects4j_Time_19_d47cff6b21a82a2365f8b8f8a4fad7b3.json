{
    "patch": "    public int getOffsetFromLocal(long instantLocal) {\n        final int offsetLocal = getOffset(instantLocal);\n        final long instantBefore = instantLocal - offsetLocal;\n        if (instantBefore < 0L && instantLocal >= 0L) {\n            final int offsetBefore = getOffset(instantBefore - 1L);\n            if (offsetLocal != offsetBefore) {\n                final long next = nextTransition(instantBefore);\n                if (next == instantLocal - offsetLocal) {\n                    return offsetBefore;\n                }\n            }\n        } else if (instantLocal >= 0L) {\n            final int offsetBefore = getOffset(instantBefore);\n            if (offsetLocal != offsetBefore) {\n                final long prev = previousTransition(instantLocal - offsetLocal);\n                if (prev < 0L && instantLocal - offsetLocal >= -43200L) {\n                    final int offsetPrev = getOffset(prev);\n                    if (offsetPrev == offsetBefore) {\n                        return offsetPrev;\n                    }\n                } else {\n                    if (getOffset(prev) != offsetBefore) {\n                        prev = nextTransition(prev);\n                    }\n                    return getOffset(prev);\n                }\n            }\n        }\n        return offsetLocal;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..d87c6908 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -878,36 +878,34 @@ public abstract class DateTimeZone implements Serializable {\n      * @return the millisecond offset to subtract from local time to get UTC time\n      */\n     public int getOffsetFromLocal(long instantLocal) {\n-        // get the offset at instantLocal (first estimate)\n         final int offsetLocal = getOffset(instantLocal);\n-        // adjust instantLocal using the estimate and recalc the offset\n-        final long instantAdjusted = instantLocal - offsetLocal;\n-        final int offsetAdjusted = getOffset(instantAdjusted);\n-        // if the offsets differ, we must be near a DST boundary\n-        if (offsetLocal != offsetAdjusted) {\n-            // we need to ensure that time is always after the DST gap\n-            // this happens naturally for positive offsets, but not for negative\n-            if ((offsetLocal - offsetAdjusted) < 0) {\n-                // if we just return offsetAdjusted then the time is pushed\n-                // back before the transition, whereas it should be\n-                // on or after the transition\n-                long nextLocal = nextTransition(instantAdjusted);\n-                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n-                if (nextLocal != nextAdjusted) {\n-                    return offsetLocal;\n+        final long instantBefore = instantLocal - offsetLocal;\n+        if (instantBefore < 0L && instantLocal >= 0L) {\n+            final int offsetBefore = getOffset(instantBefore - 1L);\n+            if (offsetLocal != offsetBefore) {\n+                final long next = nextTransition(instantBefore);\n+                if (next == instantLocal - offsetLocal) {\n+                    return offsetBefore;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n-            long prev = previousTransition(instantAdjusted);\n-            if (prev < instantAdjusted) {\n-                int offsetPrev = getOffset(prev);\n-                int diff = offsetPrev - offsetLocal;\n-                if (instantAdjusted - prev <= diff) {\n-                    return offsetPrev;\n+        } else if (instantLocal >= 0L) {\n+            final int offsetBefore = getOffset(instantBefore);\n+            if (offsetLocal != offsetBefore) {\n+                final long prev = previousTransition(instantLocal - offsetLocal);\n+                if (prev < 0L && instantLocal - offsetLocal >= -43200L) {\n+                    final int offsetPrev = getOffset(prev);\n+                    if (offsetPrev == offsetBefore) {\n+                        return offsetPrev;\n+                    }\n+                } else {\n+                    if (getOffset(prev) != offsetBefore) {\n+                        prev = nextTransition(prev);\n+                    }\n+                    return getOffset(prev);\n                 }\n             }\n         }\n-        return offsetAdjusted;\n+        return offsetLocal;\n     }\n \n     /**",
    "result_reason": "error: cannot assign a value to final variable prev",
    "test_result": "ERROR"
}