{
    "patch": "        if (n.isScript()) {\n          Node traverseNode = n.getFirstChild();\n          while (traverseNode != null) {\n            if (apply(traverseNode)) {\n              return true;\n            }\n            traverseNode = traverseNode.getNext();\n          }\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..82b4460f 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,16 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isScript()) {\n+          Node traverseNode = n.getFirstChild();\n+          while (traverseNode != null) {\n+            if (apply(traverseNode)) {\n+              return true;\n+            }\n+            traverseNode = traverseNode.getNext();\n+          }\n+          return false;\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}