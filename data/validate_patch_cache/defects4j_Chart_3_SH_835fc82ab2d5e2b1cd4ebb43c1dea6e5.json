{
    "patch": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = (List) ObjectUtilities.deepClone(this.data);\n        if (start > 0) {\n            TimeSeriesDataItem startItem = (TimeSeriesDataItem) copy.data.get(start);\n            startItem.setX(this.timePeriodClass.createInstance(this.data.get(start).getPeriod()));\n        }\n        if (end < copy.getItemCount() - 1) {\n            TimeSeriesDataItem endItem = (TimeSeriesDataItem) copy.data.get(end);\n            endItem.setX(this.timePeriodClass.createInstance(this.data.get(end).getPeriod()));\n            copy.data.remove(end + 1, copy.getItemCount() - 1);\n        }\n        return copy;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..9da4573 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,27 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+    public TimeSeries createCopy(int start, int end)\n+            throws CloneNotSupportedException {\n+        if (start < 0) {\n+            throw new IllegalArgumentException(\"Requires start >= 0.\");\n+        }\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+        TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = (List) ObjectUtilities.deepClone(this.data);\n+        if (start > 0) {\n+            TimeSeriesDataItem startItem = (TimeSeriesDataItem) copy.data.get(start);\n+            startItem.setX(this.timePeriodClass.createInstance(this.data.get(start).getPeriod()));\n+        }\n+        if (end < copy.getItemCount() - 1) {\n+            TimeSeriesDataItem endItem = (TimeSeriesDataItem) copy.data.get(end);\n+            endItem.setX(this.timePeriodClass.createInstance(this.data.get(end).getPeriod()));\n+            copy.data.remove(end + 1, copy.getItemCount() - 1);\n+        }\n+        return copy;\n+    }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}