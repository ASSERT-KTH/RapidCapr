{
    "patch": "copy.data = new java.util.ArrayList(); // create new list\nfor (int i = start; i <= end && i < this.data.size(); i++) { // add data to new list\n    try {\n        copy.add(this.data.get(i).clone());\n    } catch (SeriesException e) {\n        System.err.println(\"Error cloning time series data item.\");\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..125f1a4 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,14 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+copy.data = new java.util.ArrayList(); // create new list\n+for (int i = start; i <= end && i < this.data.size(); i++) { // add data to new list\n+    try {\n+        copy.add(this.data.get(i).clone());\n+    } catch (SeriesException e) {\n+        System.err.println(\"Error cloning time series data item.\");\n+    }\n+}\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: clone() has protected access in Object",
    "test_result": "ERROR"
}