{
    "patch": "private void handleBlockComment(Comment comment) {\n    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n    }\n\n    if (comment.getValue().endsWith(\" */\") || comment.getValue().endsWith(\"*/\")) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..f9c0a455 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,21 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n+private void handleBlockComment(Comment comment) {\n     if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n           sourceName,\n           comment.getLineno(), \"\", 0);\n     }\n-  }\n+\n+    if (comment.getValue().endsWith(\" */\") || comment.getValue().endsWith(\"*/\")) {\n+      errorReporter.warning(\n+          SUSPICIOUS_COMMENT_WARNING,\n+          sourceName,\n+          comment.getLineno(), \"\", 0);\n+    }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected parse warnings(s): JSC_PARSE_ERROR. Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/**'? at testcode line 1 : 0",
    "test_result": "FAIL"
}