{
    "patch": "boolean isOverride =\n    t.inGlobalScope() &&\n    parent.getType() == Token.ASSIGN &&\n    parent.getFirstChild() == getprop &&\n    parent.getFirstChild().getChildCount() == 2 &&\n    parent.getFirstChild().getLastChild() == getprop &&\n    parent.getFirstChild().getFirstChild().isGetProp() &&\n    parent.getLastChild() == getprop.getFirstChild() &&\n    parent.getSecondChild() == getprop.getLastChild() &&\n    parent.getSecondChild().getNext() == null;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..9c33b024 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -413,7 +413,16 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n     if (objectType != null) {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n-      boolean isOverride = t.inGlobalScope() &&\n+boolean isOverride =\n+    t.inGlobalScope() &&\n+    parent.getType() == Token.ASSIGN &&\n+    parent.getFirstChild() == getprop &&\n+    parent.getFirstChild().getChildCount() == 2 &&\n+    parent.getFirstChild().getLastChild() == getprop &&\n+    parent.getFirstChild().getFirstChild().isGetProp() &&\n+    parent.getLastChild() == getprop.getFirstChild() &&\n+    parent.getSecondChild() == getprop.getLastChild() &&\n+    parent.getSecondChild().getNext() == null;\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}