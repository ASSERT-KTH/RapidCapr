{
    "patch": "StringBuilder sb = new StringBuilder(s.length() + 2);\nsb.append(quote);\nfor (int i = 0; i < s.length(); i++) {\n    char c = s.charAt(i);\n    switch (c) {\n        case '\\'':\n            sb.append(\"\\\\'\");\n            break;\n        case '\\\"':\n            sb.append(\"\\\\\\\"\");\n            break;\n        case '\\\\':\n            sb.append(\"\\\\\\\\\");\n            break;\n        case '\\b':\n            sb.append(\"\\\\b\");\n            break;\n        case '\\f':\n            sb.append(\"\\\\f\");\n            break;\n        case '\\n':\n            sb.append(\"\\\\n\");\n            break;\n        case '\\r':\n            sb.append(\"\\\\r\");\n            break;\n        case '\\t':\n            sb.append(\"\\\\t\");\n            break;\n        case '\\0':\n            sb.append(\"\\\\0\");\n            break;\n        default:\n            if (Character.isISOControl(c)) {\n                // Unicode-escape the character.\n                appendHexJavaScriptRepresentation(sb, c);\n            } else {\n                sb.append(c);\n            }\n            break;\n     }\n}\nsb.append(quote);\nreturn sb.toString();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 6117a89b..2a0868bf 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1012,7 +1012,50 @@ class CodeGenerator {\n     for (int i = 0; i < s.length(); i++) {\n       char c = s.charAt(i);\n       switch (c) {\n-        case '\\0': sb.append(\"\\\\0\"); break;\n+StringBuilder sb = new StringBuilder(s.length() + 2);\n+sb.append(quote);\n+for (int i = 0; i < s.length(); i++) {\n+    char c = s.charAt(i);\n+    switch (c) {\n+        case '\\'':\n+            sb.append(\"\\\\'\");\n+            break;\n+        case '\\\"':\n+            sb.append(\"\\\\\\\"\");\n+            break;\n+        case '\\\\':\n+            sb.append(\"\\\\\\\\\");\n+            break;\n+        case '\\b':\n+            sb.append(\"\\\\b\");\n+            break;\n+        case '\\f':\n+            sb.append(\"\\\\f\");\n+            break;\n+        case '\\n':\n+            sb.append(\"\\\\n\");\n+            break;\n+        case '\\r':\n+            sb.append(\"\\\\r\");\n+            break;\n+        case '\\t':\n+            sb.append(\"\\\\t\");\n+            break;\n+        case '\\0':\n+            sb.append(\"\\\\0\");\n+            break;\n+        default:\n+            if (Character.isISOControl(c)) {\n+                // Unicode-escape the character.\n+                appendHexJavaScriptRepresentation(sb, c);\n+            } else {\n+                sb.append(c);\n+            }\n+            break;\n+     }\n+}\n+sb.append(quote);\n+return sb.toString();\n         case '\\n': sb.append(\"\\\\n\"); break;\n         case '\\r': sb.append(\"\\\\r\"); break;\n         case '\\t': sb.append(\"\\\\t\"); break;",
    "result_reason": "error: case, default, or '}' expected",
    "test_result": "ERROR"
}