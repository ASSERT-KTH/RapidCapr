{
    "patch": "protected BasePeriod(long duration) {\n    super(duration, null, PeriodType.standard(), ISOChronology.getInstanceUTC());\n    // Remove weeks field if unsupported\n    if (getValue(WEEKS) == 0) {\n        if (getValue(MONTHS) != 0 || getValue(YEARS) != 0) {\n            super.period = new Period(0, 0, 0, getValue(YEARS), getValue(MONTHS), 0, 0, 0, PeriodType.standard());\n        } else {\n            super.period = new Period(0, 0, 0, 0, 0, 0, 0, duration, PeriodType.standard());\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..78f30e73 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,17 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+protected BasePeriod(long duration) {\n+    super(duration, null, PeriodType.standard(), ISOChronology.getInstanceUTC());\n+    // Remove weeks field if unsupported\n+    if (getValue(WEEKS) == 0) {\n+        if (getValue(MONTHS) != 0 || getValue(YEARS) != 0) {\n+            super.period = new Period(0, 0, 0, getValue(YEARS), getValue(MONTHS), 0, 0, 0, PeriodType.standard());\n+        } else {\n+            super.period = new Period(0, 0, 0, 0, 0, 0, 0, duration, PeriodType.standard());\n+        }\n     }\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: constructor AbstractPeriod in class AbstractPeriod cannot be applied to given types;",
    "test_result": "ERROR"
}