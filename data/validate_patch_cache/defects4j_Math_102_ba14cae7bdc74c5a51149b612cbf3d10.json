{
    "patch": "public double chiSquare(double[] expected, long[] observed)\n        throws IllegalArgumentException {\n    if (expected == null || observed == null || expected.length < 2 || expected.length != observed.length) {\n        throw new IllegalArgumentException(\"Invalid input data\");\n    }\n\n    for (double exp : expected) {\n        if (exp <= 0) {\n            throw new IllegalArgumentException(\"All expected values must be positive\");\n        }\n    }\n\n    double sum = 0;\n    int df = 0;\n    for (int i = 0; i < observed.length; i++) {\n        if (observed[i] < 0) {\n            throw new IllegalArgumentException(\"All observed values must be non-negative\");\n        }\n        double dev = observed[i] - expected[i];\n        sum += dev * dev / expected[i];\n        df++;\n    }\n\n    // Calculate the p-value.\n    ChiSquaredDistribution distribution = new ChiSquaredDistribution(df - 1);\n    return 1 - distribution.cumulativeProbability(sum);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex c87b0101f..a5eb4872f 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -61,25 +61,34 @@ public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n      * @throws IllegalArgumentException if preconditions are not met\n      * or length is less than 2\n      */\n-    public double chiSquare(double[] expected, long[] observed)\n+public double chiSquare(double[] expected, long[] observed)\n         throws IllegalArgumentException {\n-        if ((expected.length < 2) || (expected.length != observed.length)) {\n-            throw new IllegalArgumentException(\n-                    \"observed, expected array lengths incorrect\");\n-        }\n-        if (!isPositive(expected) || !isNonNegative(observed)) {\n-            throw new IllegalArgumentException(\n-                \"observed counts must be non-negative and expected counts must be postive\");\n+    if (expected == null || observed == null || expected.length < 2 || expected.length != observed.length) {\n+        throw new IllegalArgumentException(\"Invalid input data\");\n+    }\n+\n+    for (double exp : expected) {\n+        if (exp <= 0) {\n+            throw new IllegalArgumentException(\"All expected values must be positive\");\n         }\n-        double sumSq = 0.0d;\n-        double dev = 0.0d;\n-        for (int i = 0; i < observed.length; i++) {\n-                dev = ((double) observed[i] - expected[i]);\n-                sumSq += dev * dev / expected[i];\n+    }\n+\n+    double sum = 0;\n+    int df = 0;\n+    for (int i = 0; i < observed.length; i++) {\n+        if (observed[i] < 0) {\n+            throw new IllegalArgumentException(\"All observed values must be non-negative\");\n         }\n-        return sumSq;\n+        double dev = observed[i] - expected[i];\n+        sum += dev * dev / expected[i];\n+        df++;\n     }\n \n+    // Calculate the p-value.\n+    ChiSquaredDistribution distribution = new ChiSquaredDistribution(df - 1);\n+    return 1 - distribution.cumulativeProbability(sum);\n+}\n+\n     /**\n      * {@inheritDoc}\n      * <p><strong>Note: </strong>This implementation rescales the ",
    "result_reason": "error: ChiSquaredDistribution is abstract; cannot be instantiated",
    "test_result": "ERROR"
}