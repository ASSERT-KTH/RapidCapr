{
    "patch": "stepSize = hNew;\n\nif (Double.isNaN(hNew)) {\n    throw new MathIllegalStateException(LocalizedFormats.NAN_STEP_SIZE_INTEGRATION, stepSize);\n}\n\n// next stages\nfor (int k = 1; k < stages; ++k) {\n\n  for (int j = 0; j < y0.length; ++j) {\n    double sum = a[k-1][0] * yDotK[0][j];\n    for (int l = 1; l < k; ++l) {\n      sum += a[k-1][l] * yDotK[l][j];\n    }\n    yTmp[j] = y[j] + stepSize * sum;\n  }\n\n  computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);\n\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..8a91f5279 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,26 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+stepSize = hNew;\n+\n+if (Double.isNaN(hNew)) {\n+    throw new MathIllegalStateException(LocalizedFormats.NAN_STEP_SIZE_INTEGRATION, stepSize);\n+}\n+\n+// next stages\n+for (int k = 1; k < stages; ++k) {\n+\n+  for (int j = 0; j < y0.length; ++j) {\n+    double sum = a[k-1][0] * yDotK[0][j];\n+    for (int l = 1; l < k; ++l) {\n+      sum += a[k-1][l] * yDotK[l][j];\n+    }\n+    yTmp[j] = y[j] + stepSize * sum;\n+  }\n+\n+  computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);\n+\n+}\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}