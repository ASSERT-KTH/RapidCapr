{
    "patch": "        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            CandidateFilter.FilteredResult filteredResult = new CandidateFilter(mockitoSession).filterCandidate(mocks, field, fieldInstance);\n            if(filteredResult.isFound()) {\n                filteredResult.thenInject();\n                return;\n            }\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 213ebf351..7e6a156bf 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -90,7 +90,13 @@ public class DefaultInjectionEngine {\n \n     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n+        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n+            CandidateFilter.FilteredResult filteredResult = new CandidateFilter(mockitoSession).filterCandidate(mocks, field, fieldInstance);\n+            if(filteredResult.isFound()) {\n+                filteredResult.thenInject();\n+                return;\n+            }\n+        }\n         }\n     }\n ",
    "result_reason": "error: variable field is already defined in method injectMockCandidate(Class<?>,Set<Object>,Object)",
    "test_result": "ERROR"
}