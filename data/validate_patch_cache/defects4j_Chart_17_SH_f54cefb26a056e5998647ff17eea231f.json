{
    "patch": "        Object clone = createCopy(0, getItemCount() - 1);\n        TimeSeries cloneSeries = (TimeSeries) super.clone();\n        cloneSeries.data = new ArrayList();\n        for (int i = 0; i < getItemCount(); i++) {\n            cloneSeries.addOrUpdate((TimeSeriesDataItem) getDataItem(i).clone());\n        }\n        if (this.domainIsPointsInTime != null) {\n            cloneSeries.domainIsPointsInTime = (Boolean) this.domainIsPointsInTime.clone();\n        }\n        if (this.rangeDescription != null) {\n            cloneSeries.rangeDescription = this.rangeDescription.clone();\n        }\n        if (this.domainDescription != null) {\n            cloneSeries.domainDescription = this.domainDescription.clone();\n        }\n        cloneSeries.intervalPositionFactor = this.intervalPositionFactor;\n        cloneSeries.xPosition = this.xPosition;\n        return cloneSeries;",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..879c6cc 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,24 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+        Object clone = createCopy(0, getItemCount() - 1);\n+        TimeSeries cloneSeries = (TimeSeries) super.clone();\n+        cloneSeries.data = new ArrayList();\n+        for (int i = 0; i < getItemCount(); i++) {\n+            cloneSeries.addOrUpdate((TimeSeriesDataItem) getDataItem(i).clone());\n+        }\n+        if (this.domainIsPointsInTime != null) {\n+            cloneSeries.domainIsPointsInTime = (Boolean) this.domainIsPointsInTime.clone();\n+        }\n+        if (this.rangeDescription != null) {\n+            cloneSeries.rangeDescription = this.rangeDescription.clone();\n+        }\n+        if (this.domainDescription != null) {\n+            cloneSeries.domainDescription = this.domainDescription.clone();\n+        }\n+        cloneSeries.intervalPositionFactor = this.intervalPositionFactor;\n+        cloneSeries.xPosition = this.xPosition;\n+        return cloneSeries;\n         return clone;\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}