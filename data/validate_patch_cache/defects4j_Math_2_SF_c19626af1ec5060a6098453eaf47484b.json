{
    "patch": "    public double getNumericalMean() {\n        if (getPopulationSize() < getSampleSize() || getPopulationSize() < getNumberOfSuccesses()) {\n            return Double.NaN;\n        }\n        \n        return (double) getSampleSize() * (double) getNumberOfSuccesses() / (double) getPopulationSize();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..b60dd6bb0 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -265,7 +265,11 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+        if (getPopulationSize() < getSampleSize() || getPopulationSize() < getNumberOfSuccesses()) {\n+            return Double.NaN;\n+        }\n+        \n+        return (double) getSampleSize() * (double) getNumberOfSuccesses() / (double) getPopulationSize();\n     }\n \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}