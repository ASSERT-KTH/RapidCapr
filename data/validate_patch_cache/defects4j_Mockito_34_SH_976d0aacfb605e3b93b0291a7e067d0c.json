{
    "patch": "int k = 0;\nObject[] args = i.getArguments();\nfor (Matcher m : matchers) {\n    if (m instanceof CapturesArguments) {\n        if (k >= args.length) {\n            ((CapturesArguments) m).captureFrom(null);\n        } else {\n            ((CapturesArguments) m).captureFrom(args[k]);\n        }\n    }\n    k++;\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex c72b119dd..39c778ef0 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -99,14 +99,24 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n     public String toString(PrintSettings printSettings) {\n         return invocation.toString(matchers, printSettings);\n     }\n-\n     public void captureArgumentsFrom(Invocation i) {\n         int k = 0;\n         for (Matcher m : matchers) {\n-            if (m instanceof CapturesArguments) {\n+int k = 0;\n+Object[] args = i.getArguments();\n+for (Matcher m : matchers) {\n+    if (m instanceof CapturesArguments) {\n+        if (k >= args.length) {\n+            ((CapturesArguments) m).captureFrom(null);\n+        } else {\n+            ((CapturesArguments) m).captureFrom(args[k]);\n+        }\n+    }\n+    k++;\n+}\n                 ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n             }\n             k++;\n         }\n     }\n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}