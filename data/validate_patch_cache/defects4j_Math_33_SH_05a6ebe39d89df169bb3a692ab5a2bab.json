{
    "patch": "            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                int slack = 0;\n                for (int k = getNumObjectiveFunctions(); k < getArtificialVariableOffset(); k++) {\n                    if (Precision.compareTo(tableau.getEntry(0, k), 0d, maxUlps) == 0) {\n                        boolean isAlreadySelected = false;\n                        for (int col : columnsToDrop) {\n                            if (col == k) {\n                                isAlreadySelected = true;\n                                break;\n                            }\n                        }\n                        if (!isAlreadySelected) {\n                            slack++;\n                        }\n                    }\n                }\n                if (slack > 1) {\n                    continue;\n                } else if (slack == 1) {\n                    if (getBasicRow(getNumObjectiveFunctions()) != null) {\n                        continue;\n                    } else {\n                        columnsToDrop.add(getNumObjectiveFunctions());\n                        break;\n                    }\n                } else {\n                    columnsToDrop.add(j);\n                    break;\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..904a82388 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -336,6 +336,35 @@ class SimplexTableau implements Serializable {\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+                int slack = 0;\n+                for (int k = getNumObjectiveFunctions(); k < getArtificialVariableOffset(); k++) {\n+                    if (Precision.compareTo(tableau.getEntry(0, k), 0d, maxUlps) == 0) {\n+                        boolean isAlreadySelected = false;\n+                        for (int col : columnsToDrop) {\n+                            if (col == k) {\n+                                isAlreadySelected = true;\n+                                break;\n+                            }\n+                        }\n+                        if (!isAlreadySelected) {\n+                            slack++;\n+                        }\n+                    }\n+                }\n+                if (slack > 1) {\n+                    continue;\n+                } else if (slack == 1) {\n+                    if (getBasicRow(getNumObjectiveFunctions()) != null) {\n+                        continue;\n+                    } else {\n+                        columnsToDrop.add(getNumObjectiveFunctions());\n+                        break;\n+                    }\n+                } else {\n+                    columnsToDrop.add(j);\n+                    break;\n+                }\n+            }\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}