{
    "patch": "    protected BasePeriod(long duration) {\n        this(duration, null, null, null);\n        // fix: convert duration to millis\n        iMillis = FieldUtils.safeMultiply(duration, getUnitMillis());\n    }\n\n    protected BasePeriod(long duration, Chronology chronology) {\n        super(chronology);\n        this.iType = PeriodType.standard();\n        iValues = new int[size()];\n        setPeriodInternal(duration);\n    }\n\n    protected BasePeriod(long duration, PeriodType type) {\n        this(duration, null, null, type);\n        // fix: convert duration to millis\n        iMillis = FieldUtils.safeMultiply(duration, getUnitMillis());\n    }\n\n    protected BasePeriod(long duration, Chronology chronology, PeriodType type) {\n        super(chronology);\n        if (type == null) {\n            throw new IllegalArgumentException(\"Period type must not be null\");\n        }\n        this.iType = type;\n        iValues = new int[size()];\n        setPeriodInternal(duration);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..28672580 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,8 +219,32 @@ public abstract class BasePeriod\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n+        this(duration, null, null, null);\n+        // fix: convert duration to millis\n+        iMillis = FieldUtils.safeMultiply(duration, getUnitMillis());\n+    }\n+\n+    protected BasePeriod(long duration, Chronology chronology) {\n+        super(chronology);\n+        this.iType = PeriodType.standard();\n+        iValues = new int[size()];\n+        setPeriodInternal(duration);\n+    }\n+\n+    protected BasePeriod(long duration, PeriodType type) {\n+        this(duration, null, null, type);\n+        // fix: convert duration to millis\n+        iMillis = FieldUtils.safeMultiply(duration, getUnitMillis());\n+    }\n+\n+    protected BasePeriod(long duration, Chronology chronology, PeriodType type) {\n+        super(chronology);\n+        if (type == null) {\n+            throw new IllegalArgumentException(\"Period type must not be null\");\n+        }\n+        this.iType = type;\n+        iValues = new int[size()];\n+        setPeriodInternal(duration);\n     }\n \n     /**",
    "result_reason": "error: no suitable constructor found for BasePeriod(long,<null>,<null>,<null>)",
    "test_result": "ERROR"
}