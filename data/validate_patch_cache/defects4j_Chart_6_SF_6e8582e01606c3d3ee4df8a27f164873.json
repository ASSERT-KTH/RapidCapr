{
    "patch": "    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        return super.equals(obj) && this.equals((ShapeList) obj);\n\n    }\n\n    private boolean equals(ShapeList other) {\n        if (this.size() != other.size()) {\n            return false;\n        }\n        for (int i = 0; i < this.size(); i++) {\n            Shape s1 = this.getShape(i);\n            Shape s2 = other.getShape(i);\n            if (!ShapeUtilities.equal(s1, s2)) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..c2ab21c 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,10 +108,24 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+        return super.equals(obj) && this.equals((ShapeList) obj);\n \n     }\n \n+    private boolean equals(ShapeList other) {\n+        if (this.size() != other.size()) {\n+            return false;\n+        }\n+        for (int i = 0; i < this.size(); i++) {\n+            Shape s1 = this.getShape(i);\n+            Shape s2 = other.getShape(i);\n+            if (!ShapeUtilities.equal(s1, s2)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n     /**\n      * Returns a hash code value for the object.\n      *\n@@ -169,4 +183,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "junit.framework.AssertionFailedError: expected:<org.jfree.chart.util.ShapeList@14750637> but was:<org.jfree.chart.util.ShapeList@9fa513e>",
    "test_result": "FAIL"
}