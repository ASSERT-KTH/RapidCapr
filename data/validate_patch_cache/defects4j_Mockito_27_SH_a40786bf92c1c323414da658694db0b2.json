{
    "patch": "        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n        MockitoSettings settings = Mockito.withSettings().defaultAnswer(org.mockito.stubbing.AnswerReturnsDefaults.RETURNS_DEFAULTS);\n        newMockHandler.setMockSettings(settings);\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler);\n        ((Factory) mock).setCallback(0, newFilter);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/MockUtil.java b/src/org/mockito/internal/util/MockUtil.java\nindex 3c20596b0..2ee09aa06 100644\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n@@ -61,8 +61,11 @@ public class MockUtil {\n \n     public <T> void resetMock(T mock) {\n         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));\n+        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n+        MockitoSettings settings = Mockito.withSettings().defaultAnswer(org.mockito.stubbing.AnswerReturnsDefaults.RETURNS_DEFAULTS);\n+        newMockHandler.setMockSettings(settings);\n+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler);\n+        ((Factory) mock).setCallback(0, newFilter);\n         ((Factory) mock).setCallback(0, newFilter);\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}