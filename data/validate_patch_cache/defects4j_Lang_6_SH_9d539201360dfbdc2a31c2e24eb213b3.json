{
    "patch": "} else if (c == '\\\\') {\n    int remaining = end - i;\n    if (remaining >= 2) {\n        char escapeChar = in.charAt(i + 1);\n        if (escapeChar == 'r') {\n            out.append('\\r');\n        } else if (escapeChar == 't') {\n            out.append('\\t');\n        } else if (escapeChar == 'n') {\n            out.append('\\n');\n        } else if (escapeChar == 'b') {\n            out.append('\\b');\n        } else if (escapeChar == 'f') {\n            out.append('\\f');\n        } else if (escapeChar == '\\'') {\n            out.append('\\'');\n        } else if (escapeChar == '\\\"') {\n            out.append('\\\"');\n        } else if (escapeChar == '\\\\') {\n            out.append('\\\\');\n        } else {\n            throw new IllegalArgumentException(\"Illegal escape character \\\\\" + escapeChar + \" at index \" + (i + 1));\n        }\n        i += 2;\n        continue;\n    }\n} ",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..8159d237 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,33 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+} else if (c == '\\\\') {\n+    int remaining = end - i;\n+    if (remaining >= 2) {\n+        char escapeChar = in.charAt(i + 1);\n+        if (escapeChar == 'r') {\n+            out.append('\\r');\n+        } else if (escapeChar == 't') {\n+            out.append('\\t');\n+        } else if (escapeChar == 'n') {\n+            out.append('\\n');\n+        } else if (escapeChar == 'b') {\n+            out.append('\\b');\n+        } else if (escapeChar == 'f') {\n+            out.append('\\f');\n+        } else if (escapeChar == '\\'') {\n+            out.append('\\'');\n+        } else if (escapeChar == '\\\"') {\n+            out.append('\\\"');\n+        } else if (escapeChar == '\\\\') {\n+            out.append('\\\\');\n+        } else {\n+            throw new IllegalArgumentException(\"Illegal escape character \\\\\" + escapeChar + \" at index \" + (i + 1));\n+        }\n+        i += 2;\n+        continue;\n+    }\n+} \n             }\n         }\n     }",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}