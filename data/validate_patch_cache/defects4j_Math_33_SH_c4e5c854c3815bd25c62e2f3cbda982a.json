{
    "patch": "double max = Double.NEGATIVE_INFINITY;\nfor (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n    final double entry = tableau.getEntry(0, i);\n    if (Precision.compareTo(entry, max, maxUlps) > 0) {\n        max = entry;\n        columnsToDrop.clear();\n        columnsToDrop.add(i);\n    } else if (Precision.compareTo(entry, max, maxUlps) == 0) {\n        columnsToDrop.add(i);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..97a8badbf 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -335,7 +335,17 @@ class SimplexTableau implements Serializable {\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+double max = Double.NEGATIVE_INFINITY;\n+for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n+    final double entry = tableau.getEntry(0, i);\n+    if (Precision.compareTo(entry, max, maxUlps) > 0) {\n+        max = entry;\n+        columnsToDrop.clear();\n+        columnsToDrop.add(i);\n+    } else if (Precision.compareTo(entry, max, maxUlps) == 0) {\n+        columnsToDrop.add(i);\n+    }\n+}\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}