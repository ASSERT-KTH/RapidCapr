{
    "patch": "        copy.data = new java.util.ArrayList();\n        for (int i = start; i <= end; i++) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n            try {\n                copy.add((TimeSeriesDataItem) item.clone());\n            }\n            catch (CloneNotSupportedException e) {\n                throw new SeriesException(\"Couldn't clone TimeSeriesItem\", e);\n            }\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..4062545 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,16 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        copy.data = new java.util.ArrayList();\n+        for (int i = start; i <= end; i++) {\n+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(i);\n+            try {\n+                copy.add((TimeSeriesDataItem) item.clone());\n+            }\n+            catch (CloneNotSupportedException e) {\n+                throw new SeriesException(\"Couldn't clone TimeSeriesItem\", e);\n+            }\n+        }\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "error: constructor SeriesException in class SeriesException cannot be applied to given types;",
    "test_result": "ERROR"
}