{
    "patch": "            boolean failure = false;\n            try {\n                for (int i = 0; i < count; i++) {\n                    millis = savedFields[i].set(millis, resetFields);\n                }\n            } catch (IllegalFieldValueException e) {\n                failure = true;\n                if (text != null) {\n                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n                }\n                if (iSavedFieldsShared) {\n                    iSavedFields = (SavedField[]) savedFields.clone();\n                    iSavedFieldsShared = false;\n                }\n                iSavedFieldsCount = count;\n                throw e;\n            }\n\n            if (iSavedFieldsShared) {\n                if (iSavedFields == savedFields) {\n                    iSavedFields = (SavedField[]) savedFields.clone();\n                }\n                iSavedFieldsShared = false;\n            }\n            iSavedFieldsCount = count;\n            \n            if (failure) {\n                return computeMillis(resetFields, text);\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..bdf8d367 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,35 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            boolean failure = false;\n+            try {\n+                for (int i = 0; i < count; i++) {\n+                    millis = savedFields[i].set(millis, resetFields);\n+                }\n+            } catch (IllegalFieldValueException e) {\n+                failure = true;\n+                if (text != null) {\n+                    e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n+                }\n+                if (iSavedFieldsShared) {\n+                    iSavedFields = (SavedField[]) savedFields.clone();\n+                    iSavedFieldsShared = false;\n+                }\n+                iSavedFieldsCount = count;\n+                throw e;\n+            }\n+\n+            if (iSavedFieldsShared) {\n+                if (iSavedFields == savedFields) {\n+                    iSavedFields = (SavedField[]) savedFields.clone();\n+                }\n+                iSavedFieldsShared = false;\n+            }\n+            iSavedFieldsCount = count;\n+            \n+            if (failure) {\n+                return computeMillis(resetFields, text);\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "junit.framework.AssertionFailedError: expected:<2010-01-04> but was:<2008-12-29>",
    "test_result": "FAIL"
}