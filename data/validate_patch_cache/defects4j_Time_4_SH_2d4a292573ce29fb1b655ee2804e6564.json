{
    "patch": "Partial newPartial = null;\ntry {\n    newPartial = new Partial(iChronology, newTypes, newValues);\n} catch (IllegalArgumentException e) {\n    // determine which field caused the problem and initialize newPartial\n    for (int j = 0; j < newTypes.length; j++) {\n        try {\n            if (newTypes[j] == null || newTypes[j].equals(iTypes[j])) {\n                continue;\n            }\n            newValues[j] = getField(j).roundFloor(newValues[j]);\n        } catch (IllegalFieldValueException ex) {\n            newPartial = null;\n            break;\n        }\n    }\n    if (newPartial == null) {\n        throw e;\n    }\n}\nif (newPartial != null) {\n    iChronology.validate(newPartial, newValues, false);\n}\nreturn newPartial;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..5572b2e4 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,30 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+Partial newPartial = null;\n+try {\n+    newPartial = new Partial(iChronology, newTypes, newValues);\n+} catch (IllegalArgumentException e) {\n+    // determine which field caused the problem and initialize newPartial\n+    for (int j = 0; j < newTypes.length; j++) {\n+        try {\n+            if (newTypes[j] == null || newTypes[j].equals(iTypes[j])) {\n+                continue;\n+            }\n+            newValues[j] = getField(j).roundFloor(newValues[j]);\n+        } catch (IllegalFieldValueException ex) {\n+            newPartial = null;\n+            break;\n+        }\n+    }\n+    if (newPartial == null) {\n+        throw e;\n+    }\n+}\n+if (newPartial != null) {\n+    iChronology.validate(newPartial, newValues, false);\n+}\n+return newPartial;\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: possible loss of precision",
    "test_result": "ERROR"
}