{
    "patch": "                int codePoint = Character.codePointAt(input, pos);\n                int charCount = Character.charCount(codePoint);\n                pos += charCount;\n                if (charCount > 1) {\n                    out.write(new String(Character.toChars(codePoint)));\n                }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..b105f1bf 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,12 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                int codePoint = Character.codePointAt(input, pos);\n+                int charCount = Character.charCount(codePoint);\n+                pos += charCount;\n+                if (charCount > 1) {\n+                    out.write(new String(Character.toChars(codePoint)));\n+                }\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Supplementary character must be represented using a single escape expected:<&#144308;[]> but was:<&#144308;[\ud84c\udfb4]>",
    "test_result": "FAIL"
}