{
    "patch": "        if (offsetLocal != offsetAdjusted) {\n            // if offsets differ, check if the transition happened between two invocations\n            boolean inForwardTransitionGap = (offsetLocal < offsetAdjusted);\n            long transitionTime = inForwardTransitionGap ? nextTransition(instantAdjusted) : previousTransition(instantAdjusted);\n            if (transitionTime > instantLocal || transitionTime == instantAdjusted) {\n                return offsetLocal;\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..d1c6a660 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+        if (offsetLocal != offsetAdjusted) {\n+            // if offsets differ, check if the transition happened between two invocations\n+            boolean inForwardTransitionGap = (offsetLocal < offsetAdjusted);\n+            long transitionTime = inForwardTransitionGap ? nextTransition(instantAdjusted) : previousTransition(instantAdjusted);\n+            if (transitionTime > instantLocal || transitionTime == instantAdjusted) {\n+                return offsetLocal;\n+            }\n+        }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}