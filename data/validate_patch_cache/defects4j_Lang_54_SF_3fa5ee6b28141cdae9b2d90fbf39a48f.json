{
    "patch": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        \n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        \n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        \n        if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        \n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            \n            int i = 3;\n            char ch = str.charAt(i);\n            while (i < len && ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch == '_' || ch == '-'))) {\n                ++i;\n                if (i < len) {\n                    ch = str.charAt(i);\n                }\n            }\n            \n            if (i == 3) {\n                // Language only\n                return new Locale(str.substring(0, 2), \"\");\n            } else if (i == 5 || i == 6 && (str.charAt(5) == '_' || str.charAt(5) == '-')) {\n                // Language and country\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                // Language, country, and variant\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..26deaf6f 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -95,32 +95,43 @@ public class LocaleUtils {\n         if (str == null) {\n             return null;\n         }\n+        \n         int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+        if (len < 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n+        \n         char ch0 = str.charAt(0);\n         char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n+        \n+        if ((ch0 < 'a' || ch0 > 'z') && (ch0 < 'A' || ch0 > 'Z') || (ch1 < 'a' || ch1 > 'z') && (ch1 < 'A' || ch1 > 'Z')) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n+        \n         if (len == 2) {\n             return new Locale(str, \"\");\n         } else {\n-            if (str.charAt(2) != '_') {\n+            if (str.charAt(2) != '_' && str.charAt(2) != '-') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            \n+            int i = 3;\n+            char ch = str.charAt(i);\n+            while (i < len && ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch == '_' || ch == '-'))) {\n+                ++i;\n+                if (i < len) {\n+                    ch = str.charAt(i);\n+                }\n             }\n-            if (len == 5) {\n+            \n+            if (i == 3) {\n+                // Language only\n+                return new Locale(str.substring(0, 2), \"\");\n+            } else if (i == 5 || i == 6 && (str.charAt(5) == '_' || str.charAt(5) == '-')) {\n+                // Language and country\n                 return new Locale(str.substring(0, 2), str.substring(3, 5));\n             } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n+                // Language, country, and variant\n                 return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n             }\n         }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<[]> but was:<[_P]>",
    "test_result": "FAIL"
}