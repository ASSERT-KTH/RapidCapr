{
    "patch": "          case Token.CATCH:\n            // Handle the exception variable defined in a catch block.\n            name = n.getFirstChild().getString();\n            if (isGlobalNameReference(name, scope)) {\n              handleSetFromGlobal(module, scope, n, parent, name, false, Name.Type.OTHER);\n            } else {\n              handleSetFromLocal(module, scope, n, parent, name);\n            }\n            return;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..207c35f7 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,15 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+          case Token.CATCH:\n+            // Handle the exception variable defined in a catch block.\n+            name = n.getFirstChild().getString();\n+            if (isGlobalNameReference(name, scope)) {\n+              handleSetFromGlobal(module, scope, n, parent, name, false, Name.Type.OTHER);\n+            } else {\n+              handleSetFromLocal(module, scope, n, parent, name);\n+            }\n+            return;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}