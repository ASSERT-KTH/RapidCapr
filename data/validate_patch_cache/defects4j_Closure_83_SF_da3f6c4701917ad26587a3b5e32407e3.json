{
    "patch": "public int parseArguments(Parameters params) throws CmdLineException {\n    if (params == null || params.size() == 0) {\n        setter.addValue(true);\n        return 0;\n    }\n    String param = params.getParameter(0);\n    String[] splitParam = param.split(\"\\\\s*=\\\\s*\");\n    if (splitParam.length == 1) {\n        setter.addValue(true);\n        return 0;\n    }\n    String value = splitParam[1];\n    if (TRUES.contains(value.toLowerCase())) {\n        setter.addValue(true);\n        return 1;\n    } else if (FALSES.contains(value.toLowerCase())) {\n        setter.addValue(false);\n        return 1;\n    } else {\n        throw new CmdLineException(owner, new Localizable() {\n            @Override\n            public String formatWithLocale(Locale locale, Object... args) {\n                return Messages.ILLEGAL_BOOLEAN.format(owner.getName(), value);\n            }\n        });\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..279a796c 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -330,25 +330,33 @@ public class CommandLineRunner extends\n       }\n \n       @Override\n-      public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n-\n-        if (param == null) {\n-          setter.addValue(true);\n-          return 0;\n-        } else {\n-          String lowerParam = param.toLowerCase();\n-          if (TRUES.contains(lowerParam)) {\n-            setter.addValue(true);\n-          } else if (FALSES.contains(lowerParam)) {\n-            setter.addValue(false);\n-          } else {\n-            setter.addValue(true);\n-            return 0;\n-          }\n-          return 1;\n-        }\n-      }\n+public int parseArguments(Parameters params) throws CmdLineException {\n+    if (params == null || params.size() == 0) {\n+        setter.addValue(true);\n+        return 0;\n+    }\n+    String param = params.getParameter(0);\n+    String[] splitParam = param.split(\"\\\\s*=\\\\s*\");\n+    if (splitParam.length == 1) {\n+        setter.addValue(true);\n+        return 0;\n+    }\n+    String value = splitParam[1];\n+    if (TRUES.contains(value.toLowerCase())) {\n+        setter.addValue(true);\n+        return 1;\n+    } else if (FALSES.contains(value.toLowerCase())) {\n+        setter.addValue(false);\n+        return 1;\n+    } else {\n+        throw new CmdLineException(owner, new Localizable() {\n+            @Override\n+            public String formatWithLocale(Locale locale, Object... args) {\n+                return Messages.ILLEGAL_BOOLEAN.format(owner.getName(), value);\n+            }\n+        });\n+    }\n+}\n \n       @Override\n       public String getDefaultMetaVariable() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}