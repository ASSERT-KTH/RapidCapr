{
    "patch": "public static int gcd(int u, int v) {\n    if (u == 0) {\n        return Math.abs(v);\n    } else if (v == 0) {\n        return Math.abs(u);\n    }\n    // keep u and v negative, as negative integers range down to\n    // -2^31, while positive numbers can only be as large as 2^31-1\n    // (i.e. we can't necessarily negate a negative number without\n    // overflow)\n    /* assert u!=0 && v!=0; */\n    if (u > 0) {\n        u = -u;\n    } // make u negative",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java\nindex c5342aeb3..b57912f9a 100644\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n@@ -409,7 +409,20 @@ public final class MathUtils {\n      * @since 1.1\n      */\n     public static int gcd(int u, int v) {\n-        if (u * v == 0) {\n+public static int gcd(int u, int v) {\n+    if (u == 0) {\n+        return Math.abs(v);\n+    } else if (v == 0) {\n+        return Math.abs(u);\n+    }\n+    // keep u and v negative, as negative integers range down to\n+    // -2^31, while positive numbers can only be as large as 2^31-1\n+    // (i.e. we can't necessarily negate a negative number without\n+    // overflow)\n+    /* assert u!=0 && v!=0; */\n+    if (u > 0) {\n+        u = -u;\n+    } // make u negative\n             return (Math.abs(u) + Math.abs(v));\n         }\n         // keep u and v negative, as negative integers range down to",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}