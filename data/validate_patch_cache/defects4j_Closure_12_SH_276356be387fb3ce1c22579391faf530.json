{
    "patch": "protected JSType caseTopType(JSType topType) {\n    if (topType.isAllType()) {\n        return createTemplatizedType(\n          getNativeObjectType(ARRAY_TYPE),\n          ImmutableList.of(getNativeObjectType(OBJECT_TYPE)));\n    }\n    return topType;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..5a7828c8 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -157,6 +157,14 @@ class MaybeReachingVariableUse extends\n   }\n \n   private boolean hasExceptionHandler(Node cfgNode) {\n+protected JSType caseTopType(JSType topType) {\n+    if (topType.isAllType()) {\n+        return createTemplatizedType(\n+          getNativeObjectType(ARRAY_TYPE),\n+          ImmutableList.of(getNativeObjectType(OBJECT_TYPE)));\n+    }\n+    return topType;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}