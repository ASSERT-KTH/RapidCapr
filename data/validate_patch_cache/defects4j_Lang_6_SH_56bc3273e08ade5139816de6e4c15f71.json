{
    "patch": "                int codepoint = Character.codePointAt(input, pos);\n                int consumed = translate(Character.toChars(codepoint), 0, 1, out);\n                if (consumed == 0) {\n                    if (codepoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {\n                        out.write(replacementChar);\n                    } else {\n                        out.write(Character.toChars(replacementCodepoint));\n                    }\n                    consumed = 1;\n                }\n                pos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..937a255b 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,17 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+                int codepoint = Character.codePointAt(input, pos);\n+                int consumed = translate(Character.toChars(codepoint), 0, 1, out);\n+                if (consumed == 0) {\n+                    if (codepoint < Character.MIN_SUPPLEMENTARY_CODE_POINT) {\n+                        out.write(replacementChar);\n+                    } else {\n+                        out.write(Character.toChars(replacementCodepoint));\n+                    }\n+                    consumed = 1;\n+                }\n+                pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable consumed is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}