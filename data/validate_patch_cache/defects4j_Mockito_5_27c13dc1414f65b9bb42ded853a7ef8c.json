{
    "patch": "public void verify(VerificationData data) {\n        AssertionError error = null;\n\n        timer.start();\n        while (timer.isCounting()) {\n            try {\n                delegate.verify(data);\n\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            } catch (MockitoAssertionError e) {\n                error = handleVerifyException(e);\n            }\n            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n                error = handleVerifyException(e);\n            }\n        }\n\n        if (error != null) {\n            throw new AssertionError(error.getMessage(), error);\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..841f53b65 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -72,7 +72,7 @@ public class VerificationOverTimeImpl implements VerificationMode {\n      *\n      * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout\n      */\n-    public void verify(VerificationData data) {\n+public void verify(VerificationData data) {\n         AssertionError error = null;\n \n         timer.start();\n@@ -94,7 +94,7 @@ public class VerificationOverTimeImpl implements VerificationMode {\n         }\n \n         if (error != null) {\n-            throw error;\n+            throw new AssertionError(error.getMessage(), error);\n         }\n     }\n ",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}