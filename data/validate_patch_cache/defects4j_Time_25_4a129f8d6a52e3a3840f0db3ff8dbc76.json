{
    "patch": "                if (offsetAdjusted != offsetLocal) {\n                    final int diff = offsetLocal - offsetAdjusted;\n                    if (diff < 0) {\n                        long nextLocal = nextTransition(instantAdjusted);\n                        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                        if (nextLocal != nextAdjusted) {\n                            return offsetLocal;\n                        }\n                    } else {\n                        long prevLocal = previousTransition(instantAdjusted);\n                        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                        if (prevLocal == prevAdjusted) {\n                            return offsetLocal;\n                        }\n                    }\n                }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..3c1a9036 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,22 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+                if (offsetAdjusted != offsetLocal) {\n+                    final int diff = offsetLocal - offsetAdjusted;\n+                    if (diff < 0) {\n+                        long nextLocal = nextTransition(instantAdjusted);\n+                        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                        if (nextLocal != nextAdjusted) {\n+                            return offsetLocal;\n+                        }\n+                    } else {\n+                        long prevLocal = previousTransition(instantAdjusted);\n+                        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                        if (prevLocal == prevAdjusted) {\n+                            return offsetLocal;\n+                        }\n+                    }\n+                }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}