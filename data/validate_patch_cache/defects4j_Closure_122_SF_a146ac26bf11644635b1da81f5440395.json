{
    "patch": "private void handleBlockComment(Comment comment) {\n    String commentValue = comment.getValue().trim();\n    if (commentValue.startsWith(\"/*\") && commentValue.endsWith(\"*/\")) {\n        boolean hasTag = false;\n        String[] lines = commentValue.substring(2, commentValue.length() - 2).split(\"\\\\r?\\\\n\");\n        for (String line : lines) {\n            if (line.contains(\"@\")) {\n                hasTag = true;\n                break;\n            }\n        }\n        if (hasTag) {\n            errorReporter.warning(\n                SUSPICIOUS_COMMENT_WARNING,\n                sourceName,\n                comment.getLineno(), \"\", 0);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..60d09632 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,25 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n+private void handleBlockComment(Comment comment) {\n+    String commentValue = comment.getValue().trim();\n+    if (commentValue.startsWith(\"/*\") && commentValue.endsWith(\"*/\")) {\n+        boolean hasTag = false;\n+        String[] lines = commentValue.substring(2, commentValue.length() - 2).split(\"\\\\r?\\\\n\");\n+        for (String line : lines) {\n+            if (line.contains(\"@\")) {\n+                hasTag = true;\n+                break;\n+            }\n+        }\n+        if (hasTag) {\n+            errorReporter.warning(\n+                SUSPICIOUS_COMMENT_WARNING,\n+                sourceName,\n+                comment.getLineno(), \"\", 0);\n+        }\n     }\n-  }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}