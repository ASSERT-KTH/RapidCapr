{
    "patch": "    public int compareTo(Fraction other) {\n        double thisValue = this.numerator / (double) this.denominator;\n        double otherValue = other.numerator / (double) other.denominator;\n        if (thisValue < otherValue) {\n            return -1;\n        } else if (thisValue > otherValue) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..a9ee68972 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -255,10 +255,16 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n-    public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n+    public int compareTo(Fraction other) {\n+        double thisValue = this.numerator / (double) this.denominator;\n+        double otherValue = other.numerator / (double) other.denominator;\n+        if (thisValue < otherValue) {\n+            return -1;\n+        } else if (thisValue > otherValue) {\n+            return 1;\n+        } else {\n+            return 0;\n+        }\n     }\n     \n     /**",
    "result_reason": "junit.framework.AssertionFailedError: expected:<-1> but was:<0>",
    "test_result": "FAIL"
}