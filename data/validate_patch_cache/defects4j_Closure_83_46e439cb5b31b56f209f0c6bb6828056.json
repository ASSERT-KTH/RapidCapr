{
    "patch": "        List<String> arguments = params.getArguments();\n        if (arguments.isEmpty()) {\n            setter.addValue(true);\n            return 0;\n        } else {\n            String lowerParam = arguments.get(0).toLowerCase();\n            if (TRUES.contains(lowerParam)) {\n                setter.addValue(true);\n            } else if (FALSES.contains(lowerParam)) {\n                setter.addValue(false);\n            } else {\n                if (setter instanceof MultiValueOptionHandler) {\n                    // Call setter.addValue true for MultiValueOptionHandler as well\n                    setter.addValue(true);\n                } else {\n                    throw new CmdLineException(owner, new Localizable() {\n                        @Override\n                        public String formatWithLocale(Locale locale, Object... args) {\n                            return \"Illegal value: \" + arguments.get(0);\n                        }\n                    }, (Object[]) null);\n                }\n            }\n            return 1;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..070adf08 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,31 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+        List<String> arguments = params.getArguments();\n+        if (arguments.isEmpty()) {\n+            setter.addValue(true);\n+            return 0;\n+        } else {\n+            String lowerParam = arguments.get(0).toLowerCase();\n+            if (TRUES.contains(lowerParam)) {\n+                setter.addValue(true);\n+            } else if (FALSES.contains(lowerParam)) {\n+                setter.addValue(false);\n+            } else {\n+                if (setter instanceof MultiValueOptionHandler) {\n+                    // Call setter.addValue true for MultiValueOptionHandler as well\n+                    setter.addValue(true);\n+                } else {\n+                    throw new CmdLineException(owner, new Localizable() {\n+                        @Override\n+                        public String formatWithLocale(Locale locale, Object... args) {\n+                            return \"Illegal value: \" + arguments.get(0);\n+                        }\n+                    }, (Object[]) null);\n+                }\n+            }\n+            return 1;\n+        }\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}