{
    "patch": "final PointValuePair optimum = new LevenbergMarquardtOptimizer()\n                                          .withCostRelativeTolerance(1.0e-12)\n                                          .optimize(new Gaussian.Parametric(), observations, weights, guess);\nreturn optimum.getPointRef();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..8d252f5f5 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,10 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+final PointValuePair optimum = new LevenbergMarquardtOptimizer()\n+                                          .withCostRelativeTolerance(1.0e-12)\n+                                          .optimize(new Gaussian.Parametric(), observations, weights, guess);\n+return optimum.getPointRef();\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}