{
    "patch": "        // check if function values at endpoints have different signs\n        if (yMin * yMax > 0) {\n            throw new IllegalArgumentException(\"Function values at endpoints do not have different signs. Endpoints: [\" + min + \",\" + max + \"], Values: [\" + yMin + \",\" + yMax + \"]\");\n        }\n\n        // return the initial guess if it is good enough\n        double yInitial = f.value(initial);\n        if (Math.abs(yInitial) <= functionValueAccuracy) {\n            setResult(initial, 0);\n            return result;\n        }\n\n        // return the first endpoint if it is good enough\n        if (Math.abs(yMin) <= functionValueAccuracy) {\n            setResult(min, 0);\n            return result;\n        }\n\n        // reduce interval if min and initial bracket the root\n        if (yInitial * yMin < 0) {\n            return solve(f, min, yMin, initial, yInitial, min, yMin);\n        }\n\n        // return the second endpoint if it is good enough\n        if (Math.abs(yMax) <= functionValueAccuracy) {\n            setResult(max, 0);\n            return result;\n        }\n\n        // reduce interval if initial and max bracket the root\n        if (yInitial * yMax < 0) {\n            return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n        }\n\n        // full Brent algorithm starting with provided initial guess\n        return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\nindex 8142b5edb..ca468f03b 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n@@ -133,6 +133,42 @@ public class BrentSolver extends UnivariateRealSolverImpl {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n+        // check if function values at endpoints have different signs\n+        if (yMin * yMax > 0) {\n+            throw new IllegalArgumentException(\"Function values at endpoints do not have different signs. Endpoints: [\" + min + \",\" + max + \"], Values: [\" + yMin + \",\" + yMax + \"]\");\n+        }\n+\n+        // return the initial guess if it is good enough\n+        double yInitial = f.value(initial);\n+        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+            setResult(initial, 0);\n+            return result;\n+        }\n+\n+        // return the first endpoint if it is good enough\n+        if (Math.abs(yMin) <= functionValueAccuracy) {\n+            setResult(min, 0);\n+            return result;\n+        }\n+\n+        // reduce interval if min and initial bracket the root\n+        if (yInitial * yMin < 0) {\n+            return solve(f, min, yMin, initial, yInitial, min, yMin);\n+        }\n+\n+        // return the second endpoint if it is good enough\n+        if (Math.abs(yMax) <= functionValueAccuracy) {\n+            setResult(max, 0);\n+            return result;\n+        }\n+\n+        // reduce interval if initial and max bracket the root\n+        if (yInitial * yMax < 0) {\n+            return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n+        }\n+\n+        // full Brent algorithm starting with provided initial guess\n+        return solve(f, min, yMin, max, yMax, initial, yInitial);\n \n         // full Brent algorithm starting with provided initial guess\n         return solve(f, min, yMin, max, yMax, initial, yInitial);",
    "result_reason": "error: variable yInitial is already defined in method solve(UnivariateRealFunction,double,double,double)",
    "test_result": "ERROR"
}