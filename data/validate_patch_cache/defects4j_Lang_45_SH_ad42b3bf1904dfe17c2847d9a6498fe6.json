{
    "patch": "    public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n        // initial parameter checks\n        if (str == null) {\n            return null;\n        }\n        if (str.isEmpty()) {\n            return \"\";\n        }\n\n        final int strLength = str.length();\n\n        lower = Math.max(lower, 0);\n        upper = Math.min(upper, strLength);\n\n        if (lower > upper) {\n            throw new IllegalArgumentException(\"Lower bound cannot be greater than upper bound!\");\n        }\n\n        StringBuffer result = new StringBuffer();\n        int index = StringUtils.indexOf(str, \" \", lower);\n\n        if (index == -1 || index > upper) {\n            result.append(str.substring(0, upper));\n            result.append(StringUtils.defaultString(appendToEnd));\n        } else {\n            result.append(str.substring(0, index));\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n\n        return result.toString();\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/WordUtils.java b/src/java/org/apache/commons/lang/WordUtils.java\nindex 42bd883e..779beb2b 100644\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n@@ -613,6 +613,37 @@ public class WordUtils {\n \n         // if the lower value is greater than the length of the string,\n         // set to the length of the string\n+    public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n+        // initial parameter checks\n+        if (str == null) {\n+            return null;\n+        }\n+        if (str.isEmpty()) {\n+            return \"\";\n+        }\n+\n+        final int strLength = str.length();\n+\n+        lower = Math.max(lower, 0);\n+        upper = Math.min(upper, strLength);\n+\n+        if (lower > upper) {\n+            throw new IllegalArgumentException(\"Lower bound cannot be greater than upper bound!\");\n+        }\n+\n+        StringBuffer result = new StringBuffer();\n+        int index = StringUtils.indexOf(str, \" \", lower);\n+\n+        if (index == -1 || index > upper) {\n+            result.append(str.substring(0, upper));\n+            result.append(StringUtils.defaultString(appendToEnd));\n+        } else {\n+            result.append(str.substring(0, index));\n+            result.append(StringUtils.defaultString(appendToEnd));\n+        }\n+\n+        return result.toString();\n+    }\n         // if the upper value is -1 (i.e. no limit) or is greater\n         // than the length of the string, set to the length of the string\n         if (upper == -1 || upper > str.length()) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}