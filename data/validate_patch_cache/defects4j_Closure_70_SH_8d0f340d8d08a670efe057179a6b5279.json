{
    "patch": "if (jsDocParameter != null) {\n  boolean isOptional = (jsDocParameter.getFirstChild() != null && jsDocParameter.getFirstChild().getString().equals(\"OPT\"));\n  defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), isOptional);\n  jsDocParameter = jsDocParameter.getNext();\n} else {\n  defineSlot(astParameter, functionNode, null, true);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..130a1865 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1742,7 +1742,13 @@ final class TypedScopeCreator implements ScopeCreator {\n           for (Node astParameter : astParameters.children()) {\n             if (jsDocParameter != null) {\n               defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), true);\n+if (jsDocParameter != null) {\n+  boolean isOptional = (jsDocParameter.getFirstChild() != null && jsDocParameter.getFirstChild().getString().equals(\"OPT\"));\n+  defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), isOptional);\n+  jsDocParameter = jsDocParameter.getNext();\n+} else {\n+  defineSlot(astParameter, functionNode, null, true);\n+}\n               jsDocParameter = jsDocParameter.getNext();\n             } else {\n               defineSlot(astParameter, functionNode, null, true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}