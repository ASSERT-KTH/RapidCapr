{
    "patch": "    public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n        String str = text.substring(position);\n\n        for (String id : ALL_IDS) {\n            int idx = str.indexOf(id);\n\n            while (idx != -1) {\n                int idLen = id.length();\n\n                if (((idx == 0) || (Character.isWhitespace(str.charAt(idx - 1)))) &&\n                        ((idx + idLen == str.length()) ||\n                                (str.charAt(idx + idLen) == '/') ||\n                                (Character.isWhitespace(str.charAt(idx + idLen))))) {\n\n                    char nextChar = '\\0';\n\n                    if (idx + idLen < str.length()) {\n                        nextChar = str.charAt(idx + idLen);\n                    }\n\n                    if (!Character.isLetterOrDigit(nextChar) && nextChar != '_') {\n                        bucket.setZone(DateTimeZone.forID(id));\n                        return position + idx + idLen;\n                    }\n                }\n\n                idx = str.indexOf(id, idx + 1);\n            }\n        }\n\n        return ~position;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex 558a5864..a711d6db 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2537,16 +2537,38 @@ public class DateTimeFormatterBuilder {\n             return MAX_LENGTH;\n         }\n \n-        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n-            String str = text.substring(position);\n-            for (String id : ALL_IDS) {\n-                if (str.startsWith(id)) {\n-                    bucket.setZone(DateTimeZone.forID(id));\n-                    return position + id.length();\n+    public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n+        String str = text.substring(position);\n+\n+        for (String id : ALL_IDS) {\n+            int idx = str.indexOf(id);\n+\n+            while (idx != -1) {\n+                int idLen = id.length();\n+\n+                if (((idx == 0) || (Character.isWhitespace(str.charAt(idx - 1)))) &&\n+                        ((idx + idLen == str.length()) ||\n+                                (str.charAt(idx + idLen) == '/') ||\n+                                (Character.isWhitespace(str.charAt(idx + idLen))))) {\n+\n+                    char nextChar = '\\0';\n+\n+                    if (idx + idLen < str.length()) {\n+                        nextChar = str.charAt(idx + idLen);\n+                    }\n+\n+                    if (!Character.isLetterOrDigit(nextChar) && nextChar != '_') {\n+                        bucket.setZone(DateTimeZone.forID(id));\n+                        return position + idx + idLen;\n+                    }\n                 }\n+\n+                idx = str.indexOf(id, idx + 1);\n             }\n-            return ~position;\n         }\n+\n+        return ~position;\n+    }\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}