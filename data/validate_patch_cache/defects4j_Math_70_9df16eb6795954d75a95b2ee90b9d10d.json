{
    "patch": "public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n    double x0 = min;\n    double x1 = max;\n    double x = initial;\n\n    // check if initial guess is within range\n    if (x < min || x > max) {\n        throw new FunctionEvaluationException(x, \"Initial guess is not within range.\");\n    }\n\n    for (int i = 0; i < getMaxIterations(); i++) {\n        x = (x0 + x1) / 2;\n        double fx = f.value(x);\n        if (fx == 0) {\n            return x;\n        } else if (fx * f.value(x0) < 0) {\n            x1 = x;\n        } else {\n            x0 = x;\n        }\n        if (Math.abs(x1 - x0) < getAbsoluteAccuracy()) {\n            return x;\n        }\n    }\n    throw new MaxIterationsExceededException(getMaxIterations());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..518b77188 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,33 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n+        throws MaxIterationsExceededException, FunctionEvaluationException {\n+    double x0 = min;\n+    double x1 = max;\n+    double x = initial;\n+\n+    // check if initial guess is within range\n+    if (x < min || x > max) {\n+        throw new FunctionEvaluationException(x, \"Initial guess is not within range.\");\n+    }\n+\n+    for (int i = 0; i < getMaxIterations(); i++) {\n+        x = (x0 + x1) / 2;\n+        double fx = f.value(x);\n+        if (fx == 0) {\n+            return x;\n+        } else if (fx * f.value(x0) < 0) {\n+            x1 = x;\n+        } else {\n+            x0 = x;\n+        }\n+        if (Math.abs(x1 - x0) < getAbsoluteAccuracy()) {\n+            return x;\n+        }\n+    }\n+    throw new MaxIterationsExceededException(getMaxIterations());\n+}\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}