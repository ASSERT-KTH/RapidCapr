{
    "patch": "    @SuppressWarnings(\"unchecked\")\n    public void should_return_empty_iterable() {\n        // create mock values for the method\n        ReturnValue<Object> values = mockReturnValue(Object.class);\n        when(values.returnValueFor(Iterable.class)).thenReturn(Collections.EMPTY_LIST);\n\n        // call the method to be tested\n        Object result = mock.methodUnderTest();\n\n        // verify the results\n        assertFalse(((Iterable<Object>) result).iterator().hasNext());\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 06697e527..cddcbdc6b 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -84,7 +84,7 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             return Primitives.defaultValueForPrimitiveOrWrapper(type);\n             //new instances are used instead of Collections.emptyList(), etc.\n             //to avoid UnsupportedOperationException if code under test modifies returned collection\n-        } else if (type == Collection.class) {\n+\n             return new LinkedList<Object>();\n         } else if (type == Set.class) {\n             return new HashSet<Object>();",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}