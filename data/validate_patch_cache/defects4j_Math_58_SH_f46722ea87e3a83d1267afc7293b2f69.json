{
    "patch": "        final ParametricUnivariateSolver solver = new BrentSolver();\n        final double[] newGuess = new double[guess.length + 1];\n        System.arraycopy(guess, 0, newGuess, 0, guess.length);\n        newGuess[newGuess.length - 1] = 0.1;\n        final UnivariateFunction f = new UnivariateFunction() {\n            public double value(final double lambda) {\n                return (new Gaussian.Parametric()).logLikelihood(lambda, xs, ys, sigs);\n            }\n        };\n        final double lambda = solver.solve(Integer.MAX_VALUE, f, 0, 1, AllowedSolution.ANY_SIDE);\n        return fit(new Gaussian.Parametric(), copyArrayAndAppend(guess, lambda));",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..933844ae4 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,17 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final ParametricUnivariateSolver solver = new BrentSolver();\n+        final double[] newGuess = new double[guess.length + 1];\n+        System.arraycopy(guess, 0, newGuess, 0, guess.length);\n+        newGuess[newGuess.length - 1] = 0.1;\n+        final UnivariateFunction f = new UnivariateFunction() {\n+            public double value(final double lambda) {\n+                return (new Gaussian.Parametric()).logLikelihood(lambda, xs, ys, sigs);\n+            }\n+        };\n+        final double lambda = solver.solve(Integer.MAX_VALUE, f, 0, 1, AllowedSolution.ANY_SIDE);\n+        return fit(new Gaussian.Parametric(), copyArrayAndAppend(guess, lambda));\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}