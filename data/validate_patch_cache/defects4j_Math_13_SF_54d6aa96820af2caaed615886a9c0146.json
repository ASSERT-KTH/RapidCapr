{
    "patch": "import org.apache.commons.math3.util.MathArrays;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    final RealMatrix sqrtD = MathArrays.sqrt(dec.getD());\n    final RealMatrix v = dec.getV();\n    final RealMatrix vInv = MatrixUtils.inverse(v);\n    return v.multiply(sqrtD).multiply(vInv);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..457e55294 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,13 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n-    }\n+import org.apache.commons.math3.util.MathArrays;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    final EigenDecomposition dec = new EigenDecomposition(m);\n+    final RealMatrix sqrtD = MathArrays.sqrt(dec.getD());\n+    final RealMatrix v = dec.getV();\n+    final RealMatrix vInv = MatrixUtils.inverse(v);\n+    return v.multiply(sqrtD).multiply(vInv);\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}