{
    "patch": "        if ((stepSize > 0) && (stepStart + stepSize > end)) {\n            stepSize = end - stepStart;\n        } else if ((stepSize < 0) && (stepStart + stepSize < end)) {\n            stepSize = end - stepStart;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..ba1acef3f 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,11 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+        if ((stepSize > 0) && (stepStart + stepSize > end)) {\n+            stepSize = end - stepStart;\n+        } else if ((stepSize < 0) && (stepStart + stepSize < end)) {\n+            stepSize = end - stepStart;\n+        }\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}