{
    "patch": "        // Maybe STRING, GET, SET\n        if (child.isNumber()) {\n          compiler.report(\n              JSError.make(t.getSourceName(), child, INVALID_OBJLIT_KEY_ERROR));\n          continue;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..51c2047f 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,12 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        // Maybe STRING, GET, SET\n+        if (child.isNumber()) {\n+          compiler.report(\n+              JSError.make(t.getSourceName(), child, INVALID_OBJLIT_KEY_ERROR));\n+          continue;\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}