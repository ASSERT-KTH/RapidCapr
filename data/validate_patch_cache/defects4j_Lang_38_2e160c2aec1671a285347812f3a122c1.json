{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            calendar = (Calendar) calendar.clone();\n            calendar.setTimeZone(mTimeZone);\n        }\n        buf = applyRules(calendar, buf);\n        // adjust for timezone offset if applied\n        if (mTimeZoneForced) {\n            SimpleTimeZone tz = new SimpleTimeZone(0, mTimeZone.getID());\n            tz.setRawOffset(mTimeZone.getRawOffset() * -1);\n            buf.append(tz.format(calendar.getTime()));\n        }\n        return buf;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..cd118833 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -872,7 +872,14 @@ public class FastDateFormat extends Format {\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }\n-        return applyRules(calendar, buf);\n+        buf = applyRules(calendar, buf);\n+        // adjust for timezone offset if applied\n+        if (mTimeZoneForced) {\n+            SimpleTimeZone tz = new SimpleTimeZone(0, mTimeZone.getID());\n+            tz.setRawOffset(mTimeZone.getRawOffset() * -1);\n+            buf.append(tz.format(calendar.getTime()));\n+        }\n+        return buf;\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}