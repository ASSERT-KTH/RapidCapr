{
    "patch": "if (excerpt.equals(LINE) && sourceExcerpt.endsWith(System.lineSeparator())) {\n  for (int i = 0; i < charno; i++) {\n    char c = sourceExcerpt.charAt(i);\n    if (Character.isWhitespace(c)) {\n      b.append(c);\n    } else {\n      b.append(' ');\n    }\n  }\n  b.append(\"^\\n\");\n} else if (excerpt.equals(LINE) && !sourceExcerpt.endsWith(System.lineSeparator())) {\n  int idx = 0;\n  while (sourceExcerpt.charAt(idx) != System.lineSeparator().charAt(0)) {\n    b.append(' ');\n    idx++;\n  }\n  b.append(\"^\\n\");\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..c18cb2d3 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,24 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+if (excerpt.equals(LINE) && sourceExcerpt.endsWith(System.lineSeparator())) {\n+  for (int i = 0; i < charno; i++) {\n+    char c = sourceExcerpt.charAt(i);\n+    if (Character.isWhitespace(c)) {\n+      b.append(c);\n+    } else {\n+      b.append(' ');\n+    }\n+  }\n+  b.append(\"^\\n\");\n+} else if (excerpt.equals(LINE) && !sourceExcerpt.endsWith(System.lineSeparator())) {\n+  int idx = 0;\n+  while (sourceExcerpt.charAt(idx) != System.lineSeparator().charAt(0)) {\n+    b.append(' ');\n+    idx++;\n+  }\n+  b.append(\"^\\n\");\n+}\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}