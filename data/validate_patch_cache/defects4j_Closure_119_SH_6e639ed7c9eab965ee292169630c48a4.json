{
    "patch": "              case Token.INC:\n              case Token.DEC:\n                isSet = true;\n                type = Name.Type.OTHER;\n                break;\n              case Token.CATCH:  // ADD THIS CASE\n                name = n.getFirstChild().getString();\n                break;\n              default:\n                if (NodeUtil.isAssignmentOp(parent) &&\n                    parent.getFirstChild() == n) {\n                  isSet = true;\n                  type = Name.Type.OTHER;\n                }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..61389ca6 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -302,7 +302,6 @@ class GlobalNamespace\n \n       return true;\n     }\n-\n     public void collect(JSModule module, Scope scope, Node n) {\n       Node parent = n.getParent();\n \n@@ -364,6 +363,20 @@ class GlobalNamespace\n                 type = Name.Type.FUNCTION;\n                 break;\n               case Token.INC:\n+              case Token.DEC:\n+                isSet = true;\n+                type = Name.Type.OTHER;\n+                break;\n+              case Token.CATCH:  // ADD THIS CASE\n+                name = n.getFirstChild().getString();\n+                break;\n+              default:\n+                if (NodeUtil.isAssignmentOp(parent) &&\n+                    parent.getFirstChild() == n) {\n+                  isSet = true;\n+                  type = Name.Type.OTHER;\n+                }\n+              case Token.INC:\n               case Token.DEC:\n                 isSet = true;\n                 type = Name.Type.OTHER;",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}