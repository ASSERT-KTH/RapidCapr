{
    "patch": "import com.google.javascript.jscomp.Var;\n\nprivate void declareArguments(Node functionNode) {\n  Node astParameters = functionNode.getFirstChild().getNext();\n  Node body = astParameters.getNext();\n  FunctionType functionType = (FunctionType) functionNode.getJSType();\n  if (functionType != null) {\n    Node jsDocParameters = functionType.getParametersNode();\n    if (jsDocParameters != null) {\n      Node jsDocParameter = jsDocParameters.getFirstChild();\n      Scope scope = getScope();\n      for (Node astParameter : astParameters.children()) {\n        if (jsDocParameter != null) {\n          String paramName = astParameter.getString();\n          Var var = scope.getVar(paramName);\n          if (var != null) {\n            report(DUPLICATE_VAR_DECLARATION, paramName, astParameter);\n          } else {\n            defineSlot(astParameter, functionNode,\n                        jsDocParameter.getJSType(), true);\n          }\n          jsDocParameter = jsDocParameter.getNext();\n        } else {\n          defineSlot(astParameter, functionNode, null, true);\n        }\n      }\n    }\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..4c781377 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1731,26 +1731,35 @@ final class TypedScopeCreator implements ScopeCreator {\n     /**\n      * Declares all of a function's arguments.\n      */\n-    private void declareArguments(Node functionNode) {\n-      Node astParameters = functionNode.getFirstChild().getNext();\n-      Node body = astParameters.getNext();\n-      FunctionType functionType = (FunctionType) functionNode.getJSType();\n-      if (functionType != null) {\n-        Node jsDocParameters = functionType.getParametersNode();\n-        if (jsDocParameters != null) {\n-          Node jsDocParameter = jsDocParameters.getFirstChild();\n-          for (Node astParameter : astParameters.children()) {\n-            if (jsDocParameter != null) {\n-              defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), true);\n-              jsDocParameter = jsDocParameter.getNext();\n-            } else {\n-              defineSlot(astParameter, functionNode, null, true);\n-            }\n+import com.google.javascript.jscomp.Var;\n+\n+private void declareArguments(Node functionNode) {\n+  Node astParameters = functionNode.getFirstChild().getNext();\n+  Node body = astParameters.getNext();\n+  FunctionType functionType = (FunctionType) functionNode.getJSType();\n+  if (functionType != null) {\n+    Node jsDocParameters = functionType.getParametersNode();\n+    if (jsDocParameters != null) {\n+      Node jsDocParameter = jsDocParameters.getFirstChild();\n+      Scope scope = getScope();\n+      for (Node astParameter : astParameters.children()) {\n+        if (jsDocParameter != null) {\n+          String paramName = astParameter.getString();\n+          Var var = scope.getVar(paramName);\n+          if (var != null) {\n+            report(DUPLICATE_VAR_DECLARATION, paramName, astParameter);\n+          } else {\n+            defineSlot(astParameter, functionNode,\n+                        jsDocParameter.getJSType(), true);\n           }\n+          jsDocParameter = jsDocParameter.getNext();\n+        } else {\n+          defineSlot(astParameter, functionNode, null, true);\n         }\n       }\n-    } // end declareArguments\n+    }\n+  }\n+}\n   } // end LocalScopeBuilder\n \n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}