{
    "patch": "} else if (parent.isCall() && n == parent.getFirstChild()) {\n  // If the assignment is the callee of a call expression,\n  // the rhs of the assignment is used by the caller, not the\n  // lhs.\n  recordDepScope(recordNode.getNext(), ns);\n} else {\n  recordDepScope(recordNode, ns);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..1e711883 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -575,7 +575,14 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+} else if (parent.isCall() && n == parent.getFirstChild()) {\n+  // If the assignment is the callee of a call expression,\n+  // the rhs of the assignment is used by the caller, not the\n+  // lhs.\n+  recordDepScope(recordNode.getNext(), ns);\n+} else {\n+  recordDepScope(recordNode, ns);\n+}\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}