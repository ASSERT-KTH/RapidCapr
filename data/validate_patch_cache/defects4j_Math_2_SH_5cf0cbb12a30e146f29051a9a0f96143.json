{
    "patch": "double numericalMean = 0.0;\nif (getSampleSize() > 0 && getPopulationSize() > 0) {\n    double successRatio = (double) getNumberOfSuccesses() / (double) getPopulationSize();\n    numericalMean = successRatio * (double) getSampleSize();\n}\nreturn Math.max(0.0, numericalMean);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\nindex 27691272f..d61f1361e 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\n@@ -265,7 +265,12 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n+double numericalMean = 0.0;\n+if (getSampleSize() > 0 && getPopulationSize() > 0) {\n+    double successRatio = (double) getNumberOfSuccesses() / (double) getPopulationSize();\n+    numericalMean = successRatio * (double) getSampleSize();\n+}\n+return Math.max(0.0, numericalMean);\n     }\n \n     /**",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}