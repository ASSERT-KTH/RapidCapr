{
    "patch": "int indexOfDot = -1;\nif (namespace != null) {\n  // Find the last occurrence of '.' that is not at the beginning or end of the namespace.\n  int lastIndex = namespace.lastIndexOf('.');\n  if (lastIndex > 0 && lastIndex < namespace.length() - 1) {\n    indexOfDot = lastIndex;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..67fb4349 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -786,7 +786,14 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+int indexOfDot = -1;\n+if (namespace != null) {\n+  // Find the last occurrence of '.' that is not at the beginning or end of the namespace.\n+  int lastIndex = namespace.lastIndexOf('.');\n+  if (lastIndex > 0 && lastIndex < namespace.length() - 1) {\n+    indexOfDot = lastIndex;\n+  }\n+}\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}