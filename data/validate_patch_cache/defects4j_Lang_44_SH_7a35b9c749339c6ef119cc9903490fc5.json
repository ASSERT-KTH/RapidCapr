{
    "patch": "        if (val == null) {\n            return null;\n        }\n        if (val.length() == 0) {\n            throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n        }\n\n        try {\n            return Integer.parseInt(val);\n        } catch (NumberFormatException ex) {}\n\n        try {\n            return Long.parseLong(val);\n        } catch (NumberFormatException ex) {}\n\n        try {\n            return Float.parseFloat(val);\n        } catch (NumberFormatException ex) {}\n\n        try {\n            return Double.parseDouble(val);\n        } catch (NumberFormatException ex) {}\n\n        try {\n            return new BigDecimal(val);\n        } catch (NumberFormatException ex) {}\n\n        throw new NumberFormatException(val + \" is not a valid number.\");",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..e4bfafc3 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,34 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val == null) {\n+            return null;\n+        }\n+        if (val.length() == 0) {\n+            throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n+        }\n+\n+        try {\n+            return Integer.parseInt(val);\n+        } catch (NumberFormatException ex) {}\n+\n+        try {\n+            return Long.parseLong(val);\n+        } catch (NumberFormatException ex) {}\n+\n+        try {\n+            return Float.parseFloat(val);\n+        } catch (NumberFormatException ex) {}\n+\n+        try {\n+            return Double.parseDouble(val);\n+        } catch (NumberFormatException ex) {}\n+\n+        try {\n+            return new BigDecimal(val);\n+        } catch (NumberFormatException ex) {}\n+\n+        throw new NumberFormatException(val + \" is not a valid number.\");\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "error: incompatible types",
    "test_result": "ERROR"
}