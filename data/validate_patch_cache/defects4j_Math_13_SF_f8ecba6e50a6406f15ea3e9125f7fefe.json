{
    "patch": "import org.apache.commons.math3.linear.EigenDecomposition;\nimport org.apache.commons.math3.linear.RealMatrix;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    EigenDecomposition dec = new EigenDecomposition(m);\n    RealMatrix eigenValues = dec.getD();\n    for (int i = 0; i < eigenValues.getRowDimension(); i++) {\n        double eigenValue = eigenValues.getEntry(i, i);\n        if (eigenValue < 0) {\n            throw new IllegalArgumentException(\"Matrix is not positive definite.\");\n        }\n        eigenValues.setEntry(i, i, Math.sqrt(eigenValue));  \n    }\n    RealMatrix eigenVectors = dec.getV();\n    RealMatrix transposedEV = eigenVectors.transpose();\n    return eigenVectors.multiply(eigenValues).multiply(transposedEV);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..7ffa3aff4 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,21 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+import org.apache.commons.math3.linear.EigenDecomposition;\n+import org.apache.commons.math3.linear.RealMatrix;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    EigenDecomposition dec = new EigenDecomposition(m);\n+    RealMatrix eigenValues = dec.getD();\n+    for (int i = 0; i < eigenValues.getRowDimension(); i++) {\n+        double eigenValue = eigenValues.getEntry(i, i);\n+        if (eigenValue < 0) {\n+            throw new IllegalArgumentException(\"Matrix is not positive definite.\");\n+        }\n+        eigenValues.setEntry(i, i, Math.sqrt(eigenValue));  \n     }\n+    RealMatrix eigenVectors = dec.getV();\n+    RealMatrix transposedEV = eigenVectors.transpose();\n+    return eigenVectors.multiply(eigenValues).multiply(transposedEV);\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}