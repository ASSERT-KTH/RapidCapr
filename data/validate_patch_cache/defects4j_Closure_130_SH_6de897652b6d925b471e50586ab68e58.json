{
    "patch": "      if (name.localSets == 0 && name.globalSets == 1 &&\n          // Don't inline aliased variable references unless the variable\n          // itself is never aliased.\n          name.aliasingGets == 0) {\n        // {@code name} meets condition (b).\n        int size = name.refs.size();\n        for (int i = 0; i < size; i++) {\n          Ref ref = name.getRefs().get(i);\n          if (ref.type != Ref.Type.SET_FROM_GLOBAL || ref.isLvalue()) {\n            // {@code name} doesn't meet condition (c).\n            return;\n          }\n        }\n\n        // All refs of {@code name} meet condition (c).",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..60f25ebd 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,21 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if (name.localSets == 0 && name.globalSets == 1 &&\n+          // Don't inline aliased variable references unless the variable\n+          // itself is never aliased.\n+          name.aliasingGets == 0) {\n+        // {@code name} meets condition (b).\n+        int size = name.refs.size();\n+        for (int i = 0; i < size; i++) {\n+          Ref ref = name.getRefs().get(i);\n+          if (ref.type != Ref.Type.SET_FROM_GLOBAL || ref.isLvalue()) {\n+            // {@code name} doesn't meet condition (c).\n+            return;\n+          }\n+        }\n+\n+        // All refs of {@code name} meet condition (c).\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}