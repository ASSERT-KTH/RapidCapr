{
    "patch": "if (rowDimension <= 0 || columnDimension <= 0 || Math.multiplyExact(rowDimension, columnDimension) <= 0) {\n    throw new IllegalArgumentException(\"Invalid matrix dimensions\");\n} else if ((long)rowDimension * columnDimension > Integer.MAX_VALUE) {\n    throw new NumberIsTooLargeException(rowDimension * (long)columnDimension, Integer.MAX_VALUE, true);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..e83242a37 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,11 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+if (rowDimension <= 0 || columnDimension <= 0 || Math.multiplyExact(rowDimension, columnDimension) <= 0) {\n+    throw new IllegalArgumentException(\"Invalid matrix dimensions\");\n+} else if ((long)rowDimension * columnDimension > Integer.MAX_VALUE) {\n+    throw new NumberIsTooLargeException(rowDimension * (long)columnDimension, Integer.MAX_VALUE, true);\n+}\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "java.lang.Exception: Unexpected exception, expected<org.apache.commons.math.exception.NumberIsTooLargeException> but was<java.lang.ArithmeticException>",
    "test_result": "FAIL"
}