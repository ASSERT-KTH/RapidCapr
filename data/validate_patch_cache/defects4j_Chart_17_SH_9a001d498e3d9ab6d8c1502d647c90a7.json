{
    "patch": "public Object clone() throws CloneNotSupportedException {\n    TimeSeries clone = (TimeSeries) super.clone();\n    clone.data = (List) ObjectUtilities.deepClone(this.data);\n    clone.domainIsPointsInTime = this.domainIsPointsInTime;\n    if (this.domain != null) {\n        clone.domain = (RegularTimePeriod) this.domain.clone();\n    }\n    if (this.range instanceof PublicCloneable) {\n        clone.range = (Range) ((PublicCloneable) this.range).clone();\n    }\n    return clone;\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex ffd1dff..41c674b 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -854,7 +854,18 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *         subclasses may differ.\n      */\n     public Object clone() throws CloneNotSupportedException {\n-        Object clone = createCopy(0, getItemCount() - 1);\n+public Object clone() throws CloneNotSupportedException {\n+    TimeSeries clone = (TimeSeries) super.clone();\n+    clone.data = (List) ObjectUtilities.deepClone(this.data);\n+    clone.domainIsPointsInTime = this.domainIsPointsInTime;\n+    if (this.domain != null) {\n+        clone.domain = (RegularTimePeriod) this.domain.clone();\n+    }\n+    if (this.range instanceof PublicCloneable) {\n+        clone.range = (Range) ((PublicCloneable) this.range).clone();\n+    }\n+    return clone;\n+}\n         return clone;\n     }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}