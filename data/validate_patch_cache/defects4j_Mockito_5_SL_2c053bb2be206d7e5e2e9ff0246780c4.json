{
    "patch": "        timer.start();\n        try {\n            while (timer.isCounting()) {\n                delegate.verify(data);\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            }\n        } catch (MockitoAssertionError e) {\n            error = handleVerifyException(e);\n        } catch (VerificationOverTimeImpl.GaveUp e) {\n            error = handleVerifyException(e);\n        }\n\n        if (error != null) {\n            throw error;\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..f600321ce 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -88,7 +88,25 @@ public class VerificationOverTimeImpl implements VerificationMode {\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n             }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n+        timer.start();\n+        try {\n+            while (timer.isCounting()) {\n+                delegate.verify(data);\n+                if (returnOnSuccess) {\n+                    return;\n+                } else {\n+                    error = null;\n+                }\n+            }\n+        } catch (MockitoAssertionError e) {\n+            error = handleVerifyException(e);\n+        } catch (VerificationOverTimeImpl.GaveUp e) {\n+            error = handleVerifyException(e);\n+        }\n+\n+        if (error != null) {\n+            throw error;\n+        }\n                 error = handleVerifyException(e);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}