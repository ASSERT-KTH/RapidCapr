{
    "patch": "if (n.isTry()) {\n  Node tryBlk = n.getFirstChild();\n  tryMinimizeExits(tryBlk, exitType, labelName);\n  Node allCatchNodes = NodeUtil.getCatchBlock(n);\n  if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n    Preconditions.checkState(allCatchNodes.hasOneChild());\n    Node catchNode = allCatchNodes.getFirstChild();\n    Node catchCodeBlk = catchNode.getLastChild();\n    tryMinimizeExits(catchCodeBlk, exitType, labelName);\n  }\n  Node finallyBlk = NodeUtil.getFinallyBlock(n);\n  if (finallyBlk != null) {\n    tryMinimizeExits(finallyBlk, exitType, labelName);\n  }\n  return;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MinimizeExitPoints.java b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\nindex 4146f177..02a31abe 100644\n--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java\n@@ -138,10 +138,22 @@ class MinimizeExitPoints\n        * can cause problems if it changes the completion type of the finally\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+if (n.isTry()) {\n+  Node tryBlk = n.getFirstChild();\n+  tryMinimizeExits(tryBlk, exitType, labelName);\n+  Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+  if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n+    Preconditions.checkState(allCatchNodes.hasOneChild());\n+    Node catchNode = allCatchNodes.getFirstChild();\n+    Node catchCodeBlk = catchNode.getLastChild();\n+    tryMinimizeExits(catchCodeBlk, exitType, labelName);\n+  }\n+  Node finallyBlk = NodeUtil.getFinallyBlock(n);\n+  if (finallyBlk != null) {\n+    tryMinimizeExits(finallyBlk, exitType, labelName);\n+  }\n+  return;\n+}\n     }\n \n     // Just a 'label'.",
    "result_reason": "error: variable allCatchNodes is already defined in method tryMinimizeExits(Node,int,String)",
    "test_result": "ERROR"
}