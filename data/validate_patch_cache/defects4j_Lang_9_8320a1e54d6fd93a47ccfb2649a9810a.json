{
    "patch": "if (value > 99999) {\n    throw new IllegalArgumentException(\"Value too large: \" + value);\n}\nint numDigits = String.valueOf(value).length();\nfor (int i = 0; i < (5 - numDigits); i++) {\n    builder.append('0');\n}\nbuilder.append(value);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..16d06bc0 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,14 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if (value > 99999) {\n+    throw new IllegalArgumentException(\"Value too large: \" + value);\n+}\n+int numDigits = String.valueOf(value).length();\n+for (int i = 0; i < (5 - numDigits); i++) {\n+    builder.append('0');\n+}\n+builder.append(value);\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}