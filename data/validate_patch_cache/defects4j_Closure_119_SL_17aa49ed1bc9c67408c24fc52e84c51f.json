{
    "patch": "if (isGlobalScope(scope)) {\n  Var var = scope.getVar(name);\n  if (var != null) {\n    var.addReference(n);\n  } else {\n    scope.declare(name, type, isPropAssign, n, null);\n  }\n} else {\n  scope.declare(name, type, isPropAssign, n, null);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..1971aad5 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,16 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+if (isGlobalScope(scope)) {\n+  Var var = scope.getVar(name);\n+  if (var != null) {\n+    var.addReference(n);\n+  } else {\n+    scope.declare(name, type, isPropAssign, n, null);\n+  }\n+} else {\n+  scope.declare(name, type, isPropAssign, n, null);\n+}\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}