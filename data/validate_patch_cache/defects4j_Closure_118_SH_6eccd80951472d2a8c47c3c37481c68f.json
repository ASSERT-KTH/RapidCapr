{
    "patch": "// Maybe STRING, GET, SET\nif (child.isString()) {\n    // Also consider numbers, but not \"-4\" or \"0x9\".\n    String name = child.getString();\n    if (!TokenStream.isJSIdentifier(name) &&\n          !TokenStream.isKeyword(name, compiler.getOptions().getLanguageMode().isEs6())) {\n        compiler.report(JSError.make(\n            t.getSourceName(),\n            // The error message expects the second argument to be a string.\n            child,\n            CheckObjectLiteral.INVALID_OBJLIT_KEY_ERROR, name));\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..e2088fab 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,19 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+// Maybe STRING, GET, SET\n+if (child.isString()) {\n+    // Also consider numbers, but not \"-4\" or \"0x9\".\n+    String name = child.getString();\n+    if (!TokenStream.isJSIdentifier(name) &&\n+          !TokenStream.isKeyword(name, compiler.getOptions().getLanguageMode().isEs6())) {\n+        compiler.report(JSError.make(\n+            t.getSourceName(),\n+            // The error message expects the second argument to be a string.\n+            child,\n+            CheckObjectLiteral.INVALID_OBJLIT_KEY_ERROR, name));\n+    }\n+}\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}