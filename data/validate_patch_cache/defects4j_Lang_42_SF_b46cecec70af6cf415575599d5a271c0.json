{
    "patch": "public void escape(Writer writer, String str) throws IOException {\n    int len = str.length();\n    for (int i = 0; i < len; i++) {\n        char c = str.charAt(i);\n        String entityName = this.entityName(c);\n        if (entityName == null) {\n            if (c > 0x7F) {\n                // Write the unicode escape sequence directly\n                String hexString = Integer.toHexString((int)c);\n                writer.write(\"&#x\");\n                if (hexString.length() < 4) {\n                    // Pad with 0s if necessary\n                    for (int j = 0; j < 4 - hexString.length(); j++) {\n                        writer.write(\"0\");\n                    }\n                }\n                writer.write(hexString);\n                writer.write(';');\n            } else {\n                writer.write(c);\n            }\n        } else {\n            writer.write('&');\n            writer.write(entityName);\n            writer.write(';');\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java\nindex 900e1a89..2468ec57 100644\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n@@ -822,26 +822,34 @@ class Entities {\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void escape(Writer writer, String str) throws IOException {\n-        int len = str.length();\n-        for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n-            String entityName = this.entityName(c);\n-            if (entityName == null) {\n-                if (c > 0x7F) {\n-                    writer.write(\"&#\");\n-                    writer.write(Integer.toString(c, 10));\n-                    writer.write(';');\n-                } else {\n-                    writer.write(c);\n+public void escape(Writer writer, String str) throws IOException {\n+    int len = str.length();\n+    for (int i = 0; i < len; i++) {\n+        char c = str.charAt(i);\n+        String entityName = this.entityName(c);\n+        if (entityName == null) {\n+            if (c > 0x7F) {\n+                // Write the unicode escape sequence directly\n+                String hexString = Integer.toHexString((int)c);\n+                writer.write(\"&#x\");\n+                if (hexString.length() < 4) {\n+                    // Pad with 0s if necessary\n+                    for (int j = 0; j < 4 - hexString.length(); j++) {\n+                        writer.write(\"0\");\n+                    }\n                 }\n-            } else {\n-                writer.write('&');\n-                writer.write(entityName);\n+                writer.write(hexString);\n                 writer.write(';');\n+            } else {\n+                writer.write(c);\n             }\n+        } else {\n+            writer.write('&');\n+            writer.write(entityName);\n+            writer.write(';');\n         }\n     }\n+}\n \n     /**\n      * <p>",
    "result_reason": "junit.framework.ComparisonFailure: languages expected:<...h,Fran&ccedil;ais,&#[26085;&#26412;&#35486]; (nihongo)> but was:<...h,Fran&ccedil;ais,&#[x65e5;&#x672c;&#x8a9e]; (nihongo)>",
    "test_result": "FAIL"
}