{
    "patch": "int padLen = width - strLen;\nif (padLen <= 0) {\n    return this.append(str);\n} else if (padLen > padChar.length()) {\n    padChar.getChars(0, padChar.length(), buffer, size + strLen);\n    for (int i = size + strLen + padChar.length(); i < size + width; i++) {\n        buffer[i] = padChar.charAt(padChar.length() - 1);\n    }\n} else {\n    padChar.getChars(0, padLen, buffer, size + strLen);\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java\nindex 886d424e..756109c0 100644\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n@@ -881,7 +881,17 @@ public class StrBuilder implements Cloneable {\n             String str = (obj == null ? getNullText() : obj.toString());\n             int strLen = str.length();\n             if (strLen >= width) {\n-                str.getChars(0, strLen, buffer, size);\n+int padLen = width - strLen;\n+if (padLen <= 0) {\n+    return this.append(str);\n+} else if (padLen > padChar.length()) {\n+    padChar.getChars(0, padChar.length(), buffer, size + strLen);\n+    for (int i = size + strLen + padChar.length(); i < size + width; i++) {\n+        buffer[i] = padChar.charAt(padChar.length() - 1);\n+    }\n+} else {\n+    padChar.getChars(0, padLen, buffer, size + strLen);\n+}\n             } else {\n                 int padLen = width - strLen;\n                 str.getChars(0, strLen, buffer, size);",
    "result_reason": "error: char cannot be dereferenced",
    "test_result": "ERROR"
}