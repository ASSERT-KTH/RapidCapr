{
    "patch": "        if (Double.compare(x,y) == 0) {\n            return true;\n        }\n        // check if exactly one value is NaN\n        if (Double.isNaN(x) || Double.isNaN(y)) {\n            return false;\n        }\n        // check for infinity\n        if (Double.isInfinite(x) || Double.isInfinite(y)) {\n            return false;\n        }\n        // check for significant digits\n        double delta = Math.abs(x - y);\n        double max = Math.max(Math.abs(x), Math.abs(y));\n        double epsilon = 1E-15;\n        return delta <= epsilon * max;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..66e826ff2 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -414,7 +414,22 @@ public final class MathUtils {\n      * @return {@code true} if the values are equal.\n      */\n     public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+        if (Double.compare(x,y) == 0) {\n+            return true;\n+        }\n+        // check if exactly one value is NaN\n+        if (Double.isNaN(x) || Double.isNaN(y)) {\n+            return false;\n+        }\n+        // check for infinity\n+        if (Double.isInfinite(x) || Double.isInfinite(y)) {\n+            return false;\n+        }\n+        // check for significant digits\n+        double delta = Math.abs(x - y);\n+        double max = Math.max(Math.abs(x), Math.abs(y));\n+        double epsilon = 1E-15;\n+        return delta <= epsilon * max;\n     }\n \n     /**",
    "result_reason": "junit.framework.AssertionFailedError",
    "test_result": "FAIL"
}