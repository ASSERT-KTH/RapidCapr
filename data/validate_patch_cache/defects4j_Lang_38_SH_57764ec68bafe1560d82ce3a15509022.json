{
    "patch": "        if (mTimeZoneForced) {\n            DateFormat originalFormat = getDateFormat();\n            TimeZone originalTimezone = originalFormat.getTimeZone();\n\n            DateFormat forcedFormat = getDateFormat();\n            forcedFormat.setTimeZone(mTimeZone);\n\n            buf = forcedFormat.format(calendar.getTime(), buf, new FieldPosition(0));\n            applyRules(calendar, buf);\n\n            forcedFormat.setTimeZone(originalTimezone);\n            setDateFormat(originalFormat);\n        } else {\n            applyRules(calendar, buf);\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..07fcb911 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,21 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+        if (mTimeZoneForced) {\n+            DateFormat originalFormat = getDateFormat();\n+            TimeZone originalTimezone = originalFormat.getTimeZone();\n+\n+            DateFormat forcedFormat = getDateFormat();\n+            forcedFormat.setTimeZone(mTimeZone);\n+\n+            buf = forcedFormat.format(calendar.getTime(), buf, new FieldPosition(0));\n+            applyRules(calendar, buf);\n+\n+            forcedFormat.setTimeZone(originalTimezone);\n+            setDateFormat(originalFormat);\n+        } else {\n+            applyRules(calendar, buf);\n+        }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}