{
    "patch": "public static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null) {\n        return clone(array2);\n    } else if (array2 == null) {\n        return clone(array1);\n    } else {\n        Class<?> commonType;\n        Class<?> componentType1 = array1.getClass().getComponentType();\n        Class<?> componentType2 = array2.getClass().getComponentType();\n\n        if (componentType1.isAssignableFrom(componentType2)) {\n            commonType = componentType1;\n        } else if (componentType2.isAssignableFrom(componentType1)) {\n            commonType = componentType2;\n        } else {\n            throw new ArrayStoreException(\"Cannot store \" + componentType2.getName() + \" in an array of \" + componentType1.getName());\n        }\n\n        T[] result = (T[]) Array.newInstance(commonType, array1.length + array2.length);\n        System.arraycopy(array1, 0, result, 0, array1.length);\n        System.arraycopy(array2, 0, result, array1.length, array2.length);\n\n        return result;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java\nindex 889497e9..786d7cbc 100644\n--- a/src/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -2950,19 +2950,31 @@ public class ArrayUtils {\n      * @since 2.1\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public static <T> T[] addAll(T[] array1, T... array2) {\n-        if (array1 == null) {\n-            return clone(array2);\n-        } else if (array2 == null) {\n-            return clone(array1);\n+public static <T> T[] addAll(T[] array1, T... array2) {\n+    if (array1 == null) {\n+        return clone(array2);\n+    } else if (array2 == null) {\n+        return clone(array1);\n+    } else {\n+        Class<?> commonType;\n+        Class<?> componentType1 = array1.getClass().getComponentType();\n+        Class<?> componentType2 = array2.getClass().getComponentType();\n+\n+        if (componentType1.isAssignableFrom(componentType2)) {\n+            commonType = componentType1;\n+        } else if (componentType2.isAssignableFrom(componentType1)) {\n+            commonType = componentType2;\n+        } else {\n+            throw new ArrayStoreException(\"Cannot store \" + componentType2.getName() + \" in an array of \" + componentType1.getName());\n         }\n-        final Class<?> type1 = array1.getClass().getComponentType();\n-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n-            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n-            // Check if problem is incompatible types\n-        return joinedArray;\n+\n+        T[] result = (T[]) Array.newInstance(commonType, array1.length + array2.length);\n+        System.arraycopy(array1, 0, result, 0, array1.length);\n+        System.arraycopy(array2, 0, result, array1.length, array2.length);\n+\n+        return result;\n     }\n+}\n \n     /**\n      * <p>Adds all the elements of the given arrays into a new array.</p>",
    "result_reason": "java.lang.ArrayStoreException: Cannot store java.lang.Long in an array of java.lang.Integer",
    "test_result": "FAIL"
}