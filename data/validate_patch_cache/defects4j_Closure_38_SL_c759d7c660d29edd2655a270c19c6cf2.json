{
    "patch": "if ((long) x == x && !negativeZero) {\n    long value = (long) x;\n    long mantissa = Math.abs(value);\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n        while (mantissa / 10 * Math.pow(10, exp + 1) == mantissa * 10) {\n            mantissa /= 10;\n            exp++;\n        }\n    }\n    if (value < 0) {\n        add(\"-\");\n        mantissa = -mantissa;\n    }\n    if (exp > 2) {\n        add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n        add(Long.toString(mantissa));\n    }\n} else {\n    add(String.valueOf(x));\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 4381487c..2daa5963 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -236,13 +236,33 @@ abstract class CodeConsumer {\n       maybeCutLine();\n     }\n   }\n-\n   void addNumber(double x) {\n     // This is not pretty printing. This is to prevent misparsing of x- -4 as\n     // x--4 (which is a syntax error).\n     char prev = getLastChar();\n     boolean negativeZero = isNegativeZero(x);\n-    if (x < 0 && prev == '-') {\n+if ((long) x == x && !negativeZero) {\n+    long value = (long) x;\n+    long mantissa = Math.abs(value);\n+    int exp = 0;\n+    if (Math.abs(x) >= 100) {\n+        while (mantissa / 10 * Math.pow(10, exp + 1) == mantissa * 10) {\n+            mantissa /= 10;\n+            exp++;\n+        }\n+    }\n+    if (value < 0) {\n+        add(\"-\");\n+        mantissa = -mantissa;\n+    }\n+    if (exp > 2) {\n+        add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n+    } else {\n+        add(Long.toString(mantissa));\n+    }\n+} else {\n+    add(String.valueOf(x));\n+}\n       add(\" \");\n     }\n ",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}