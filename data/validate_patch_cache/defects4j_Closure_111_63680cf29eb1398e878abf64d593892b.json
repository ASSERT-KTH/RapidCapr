{
    "patch": "          if (topType.isUnknownType()) {\n            return createArrayType(JSType.UNKNOWN);\n          } else if (topType.isTop()) {\n            return topType.withLoose();\n          } else {\n            return JSType.UNDEFINED;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..4522aba0 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,13 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+          if (topType.isUnknownType()) {\n+            return createArrayType(JSType.UNKNOWN);\n+          } else if (topType.isTop()) {\n+            return topType.withLoose();\n+          } else {\n+            return JSType.UNDEFINED;\n+          }\n         }\n \n         @Override",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}