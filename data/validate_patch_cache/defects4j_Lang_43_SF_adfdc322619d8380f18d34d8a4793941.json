{
    "patch": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (escapingOn && c[start] == QUOTE) {\n            return appendTo == null ? null : appendTo.append(QUOTE);\n        }\n        int lastHold = start;\n        for (int i = pos.getIndex(); i < pattern.length(); i++) {\n            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(\n                        QUOTE);\n                i += ESCAPED_QUOTE.length() - 1; // skip past escaped quote\n                pos.setIndex(i + 1); // skip past non-escaped quote\n                lastHold = pos.getIndex();\n                continue;\n            }\n            switch (c[pos.getIndex()]) {\n            case QUOTE:\n                next(pos);\n                return appendTo == null ? null : appendTo.append(c, lastHold,\n                        pos.getIndex() - lastHold);\n            default:\n                next(pos);\n            }\n        }\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..9e3f6f99 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -426,7 +426,8 @@ public class ExtendedMessageFormat extends MessageFormat {\n             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                 appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(\n                         QUOTE);\n-                pos.setIndex(i + ESCAPED_QUOTE.length());\n+                i += ESCAPED_QUOTE.length() - 1; // skip past escaped quote\n+                pos.setIndex(i + 1); // skip past non-escaped quote\n                 lastHold = pos.getIndex();\n                 continue;\n             }",
    "result_reason": "java.lang.OutOfMemoryError: Requested array size exceeds VM limit",
    "test_result": "FAIL"
}