{
    "patch": "public static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null && array2 == null) {\n        return null;\n    } else if (array1 == null) {\n        return Arrays.copyOf(array2, array2.length);\n    } else if (array2 == null) {\n        return Arrays.copyOf(array1, array1.length);\n    }\n\n    T[] result = Arrays.copyOf(array1, array1.length + array2.length);\n    System.arraycopy(array2, 0, result, array1.length, array2.length);\n\n    return result;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/ArrayUtils.java b/src/java/org/apache/commons/lang3/ArrayUtils.java\nindex 889497e9..6bb8751f 100644\n--- a/src/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -2950,20 +2950,21 @@ public class ArrayUtils {\n      * @since 2.1\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public static <T> T[] addAll(T[] array1, T... array2) {\n-        if (array1 == null) {\n-            return clone(array2);\n-        } else if (array2 == null) {\n-            return clone(array1);\n-        }\n-        final Class<?> type1 = array1.getClass().getComponentType();\n-        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n-        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n-            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n-            // Check if problem is incompatible types\n-        return joinedArray;\n+public static <T> T[] addAll(T[] array1, T... array2) {\n+    if (array1 == null && array2 == null) {\n+        return null;\n+    } else if (array1 == null) {\n+        return Arrays.copyOf(array2, array2.length);\n+    } else if (array2 == null) {\n+        return Arrays.copyOf(array1, array1.length);\n     }\n \n+    T[] result = Arrays.copyOf(array1, array1.length + array2.length);\n+    System.arraycopy(array2, 0, result, array1.length, array2.length);\n+\n+    return result;\n+}\n+\n     /**\n      * <p>Adds all the elements of the given arrays into a new array.</p>\n      * <p>The new array contains all of the element of <code>array1</code> followed",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}