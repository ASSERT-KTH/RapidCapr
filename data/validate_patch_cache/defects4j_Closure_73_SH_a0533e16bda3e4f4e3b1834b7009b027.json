{
    "patch": "          // No charsetEncoder provided - pass straight latin characters\n          // (from 0x20 to 0x7e) through,\n          // and escape the rest.  Doing the explicit character\n          // check is measurably faster than using the CharsetEncoder.\n          if (c >= 0x20 && c <= 0x7e) {\n            sb.append(c);\n          } else {\n            // Other characters can be misinterpreted by some js parsers,\n            // or perhaps mangled by proxies along the way,\n            // so we play it safe and unicode escape them.\n            if (c >= 0x80) {\n              appendHexJavaScriptRepresentation(sb, c);\n            } else {\n              // Default case - pass it straight through:\n              sb.append(c);\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..d673f625 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,23 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+          // No charsetEncoder provided - pass straight latin characters\n+          // (from 0x20 to 0x7e) through,\n+          // and escape the rest.  Doing the explicit character\n+          // check is measurably faster than using the CharsetEncoder.\n+          if (c >= 0x20 && c <= 0x7e) {\n+            sb.append(c);\n+          } else {\n+            // Other characters can be misinterpreted by some js parsers,\n+            // or perhaps mangled by proxies along the way,\n+            // so we play it safe and unicode escape them.\n+            if (c >= 0x80) {\n+              appendHexJavaScriptRepresentation(sb, c);\n+            } else {\n+              // Default case - pass it straight through:\n+              sb.append(c);\n+            }\n+          }\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}