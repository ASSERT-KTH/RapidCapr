{
    "patch": "    public static boolean equals(double x, double y) {\n        // compare x and y using the absolute error\n        // within a given relative tolerance, taking into account\n        // both the magnitudes of x and y and their maximum\n        // magnitudes.\n        final double absoluteTolerance = Math.max(DEFAULT_EPSILON,\n                                 Math.max(Math.abs(x), Math.abs(y)) * DEFAULT_RELATIVE_EPSILON);\n        return Math.abs(x - y) <= absoluteTolerance;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MathUtils.java b/src/main/java/org/apache/commons/math/util/MathUtils.java\nindex 136184990..f20e55416 100644\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n@@ -414,7 +414,15 @@ public final class MathUtils {\n      * @return {@code true} if the values are equal.\n      */\n     public static boolean equals(double x, double y) {\n-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n+    public static boolean equals(double x, double y) {\n+        // compare x and y using the absolute error\n+        // within a given relative tolerance, taking into account\n+        // both the magnitudes of x and y and their maximum\n+        // magnitudes.\n+        final double absoluteTolerance = Math.max(DEFAULT_EPSILON,\n+                                 Math.max(Math.abs(x), Math.abs(y)) * DEFAULT_RELATIVE_EPSILON);\n+        return Math.abs(x - y) <= absoluteTolerance;\n+    }\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}