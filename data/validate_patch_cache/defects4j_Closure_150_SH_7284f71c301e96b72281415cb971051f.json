{
    "patch": "      attachLiteralTypes(n);\n      switch (n.getToken()) {\n        case FUNCTION:\n        case CLASS:\n          if (parent.getToken() == NAME) {\n            return;\n          }\n          defineDeclaredFunctionOrClass(n, parent);\n          break;\n        case VAR:\n        case LET:\n        case CONST:\n          defineVar(n, parent);\n          break;\n        case CATCH:\n          defineCatch(n, parent);\n          break;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4b841ae8..04c34ef9 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1449,19 +1449,22 @@ final class TypedScopeCreator implements ScopeCreator {\n       }\n \n       attachLiteralTypes(n);\n-      switch (n.getType()) {\n-        case Token.FUNCTION:\n-          if (parent.getType() == Token.NAME) {\n+      switch (n.getToken()) {\n+        case FUNCTION:\n+        case CLASS:\n+          if (parent.getToken() == NAME) {\n             return;\n           }\n-          defineDeclaredFunction(n, parent);\n-          break;\n-        case Token.CATCH:\n-          defineCatch(n, parent);\n+          defineDeclaredFunctionOrClass(n, parent);\n           break;\n-        case Token.VAR:\n+        case VAR:\n+        case LET:\n+        case CONST:\n           defineVar(n, parent);\n           break;\n+        case CATCH:\n+          defineCatch(n, parent);\n+          break;\n       }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}