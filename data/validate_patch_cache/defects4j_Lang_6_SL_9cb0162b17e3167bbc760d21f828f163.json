{
    "patch": "    public static String unescape(String input) {\n        if (input == null) {\n            return null;\n        }\n        if (input.indexOf('\\\\') == -1) {\n            return input;\n        }\n        int len = input.length();\n        StringBuilder output = new StringBuilder(len);\n        for (int i = 0; i < len; i++) {\n            char currentChar = input.charAt(i);\n            if (currentChar == '\\\\' && i + 1 < len) {\n                char nextChar = input.charAt(i + 1);\n                switch (nextChar) {\n                    case '\\\\':\n                        output.append('\\\\');\n                        break;\n                    case 'n':\n                        output.append('\\n');\n                        break;\n                    case 't':\n                        output.append('\\t');\n                        break;\n                    case 'b':\n                        output.append('\\b');\n                        break;\n                    case 'r':\n                        output.append('\\r');\n                        break;\n                    case 'f':\n                        output.append('\\f');\n                        break;\n                    case '\\'':\n                        output.append('\\'');\n                        break;\n                    case '\\\"':\n                        output.append('\\\"');\n                        break;\n                    case ' ':\n                        output.append(' ');\n                        break;\n                    default:\n                        output.append('\\\\');\n                        output.append(nextChar);\n                        break;\n                }\n                i++;\n            } else {\n                output.append(currentChar);\n            }\n        }\n        return output.toString();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..1508e307 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,59 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+    public static String unescape(String input) {\n+        if (input == null) {\n+            return null;\n+        }\n+        if (input.indexOf('\\\\') == -1) {\n+            return input;\n+        }\n+        int len = input.length();\n+        StringBuilder output = new StringBuilder(len);\n+        for (int i = 0; i < len; i++) {\n+            char currentChar = input.charAt(i);\n+            if (currentChar == '\\\\' && i + 1 < len) {\n+                char nextChar = input.charAt(i + 1);\n+                switch (nextChar) {\n+                    case '\\\\':\n+                        output.append('\\\\');\n+                        break;\n+                    case 'n':\n+                        output.append('\\n');\n+                        break;\n+                    case 't':\n+                        output.append('\\t');\n+                        break;\n+                    case 'b':\n+                        output.append('\\b');\n+                        break;\n+                    case 'r':\n+                        output.append('\\r');\n+                        break;\n+                    case 'f':\n+                        output.append('\\f');\n+                        break;\n+                    case '\\'':\n+                        output.append('\\'');\n+                        break;\n+                    case '\\\"':\n+                        output.append('\\\"');\n+                        break;\n+                    case ' ':\n+                        output.append(' ');\n+                        break;\n+                    default:\n+                        output.append('\\\\');\n+                        output.append(nextChar);\n+                        break;\n+                }\n+                i++;\n+            } else {\n+                output.append(currentChar);\n+            }\n+        }\n+        return output.toString();\n+    }\n             }\n         }\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}