{
    "patch": "      case Token.NEW:\n        // TODO(nicksantos): This needs to be changed so that it\n        // returns true iff we're sure the value was never aliased from inside\n        // the constructor (similar to callHasLocalResult)\n        return false;\n      case Token.FUNCTION:\n        // Literals objects with non-literal children are allowed.\n        return true;\n      case Token.REGEXP:\n        return true;\n      case Token.ARRAYLIT:\n      case Token.OBJECTLIT:\n        return true;\n      case Token.IN:\n        // TODO(johnlenz): should IN operator be included in #isSimpleOperator?\n        return true;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex dd78f900..ea1aa9c8 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -2462,6 +2462,21 @@ public final class NodeUtil {\n         // TODO(nicksantos): This needs to be changed so that it\n         // returns true iff we're sure the value was never aliased from inside\n         // the constructor (similar to callHasLocalResult)\n+      case Token.NEW:\n+        // TODO(nicksantos): This needs to be changed so that it\n+        // returns true iff we're sure the value was never aliased from inside\n+        // the constructor (similar to callHasLocalResult)\n+        return false;\n+      case Token.FUNCTION:\n+        // Literals objects with non-literal children are allowed.\n+        return true;\n+      case Token.REGEXP:\n+        return true;\n+      case Token.ARRAYLIT:\n+      case Token.OBJECTLIT:\n+        return true;\n+      case Token.IN:\n+        // TODO(johnlenz): should IN operator be included in #isSimpleOperator?\n         return true;\n       case Token.FUNCTION:\n       case Token.REGEXP:",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}