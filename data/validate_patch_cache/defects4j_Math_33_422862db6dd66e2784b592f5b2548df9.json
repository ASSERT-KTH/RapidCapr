{
    "patch": "  double[] solution = solver.solve(optimizer);\n  if (solution == null) {\n    Assert.assertTrue(Double.isNaN(optimize.goals.get(0).getValue()));\n  } else {\n    Assert.assertEquals(obj, solution[0], 1.0e-1 * obj);\n  }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..8eeeb9c31 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -335,7 +335,12 @@ class SimplexTableau implements Serializable {\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+  double[] solution = solver.solve(optimizer);\n+  if (solution == null) {\n+    Assert.assertTrue(Double.isNaN(optimize.goals.get(0).getValue()));\n+  } else {\n+    Assert.assertEquals(obj, solution[0], 1.0e-1 * obj);\n+  }\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}