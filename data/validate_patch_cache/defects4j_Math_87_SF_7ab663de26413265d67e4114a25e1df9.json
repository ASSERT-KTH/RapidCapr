{
    "patch": "```\nprivate Integer getBasicRow(final int col) {\n    Integer row = null;\n    int numNonZeroEntries = 0;\n    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n        double val = getEntry(i, col);\n        if (Math.abs(val - 1.0) < epsilon) {\n            if (row == null) {\n                row = i;\n            } else {\n                return null;\n            }\n            numNonZeroEntries++;\n        } else if (Math.abs(val) > epsilon) {\n            return null;\n        }\n    }\n    if (numNonZeroEntries != 1) {\n        return null;\n    }\n    return row;\n}\n```\nThis function checks if there is only one non-zero element in a column, and if that element is equal to 1. If a non-zero element exists that is not equal to 1, or there is more than one non-zero element, the function returns null.",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex 0ab790cd6..a4a595869 100644\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -269,19 +269,30 @@ class SimplexTableau implements Serializable {\n      * @param col index of the column to check\n      * @return the row that the variable is basic in.  null if the column is not basic\n      */\n-    private Integer getBasicRow(final int col) {\n-        Integer row = null;\n-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-                if (row == null) {\n+```\n+private Integer getBasicRow(final int col) {\n+    Integer row = null;\n+    int numNonZeroEntries = 0;\n+    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n+        double val = getEntry(i, col);\n+        if (Math.abs(val - 1.0) < epsilon) {\n+            if (row == null) {\n                 row = i;\n-                } else {\n+            } else {\n                 return null;\n-                }\n             }\n+            numNonZeroEntries++;\n+        } else if (Math.abs(val) > epsilon) {\n+            return null;\n         }\n-        return row;\n     }\n+    if (numNonZeroEntries != 1) {\n+        return null;\n+    }\n+    return row;\n+}\n+```\n+This function checks if there is only one non-zero element in a column, and if that element is equal to 1. If a non-zero element exists that is not equal to 1, or there is more than one non-zero element, the function returns null.\n \n     /**\n      * Removes the phase 1 objective function and artificial variables from this tableau.",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}