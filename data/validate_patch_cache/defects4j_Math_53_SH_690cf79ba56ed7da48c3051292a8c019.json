{
    "patch": "if(Double.isNaN(real) || Double.isNaN(imaginary) ||\n\t\tDouble.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n\treturn createComplex(Double.NaN, Double.NaN);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..e6d0e3e50 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,6 +150,10 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+if(Double.isNaN(real) || Double.isNaN(imaginary) ||\n+\t\tDouble.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {\n+\treturn createComplex(Double.NaN, Double.NaN);\n+}\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}