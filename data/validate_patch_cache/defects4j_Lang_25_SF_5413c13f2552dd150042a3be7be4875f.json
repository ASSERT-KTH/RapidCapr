{
    "patch": "public static boolean isAvailableLocale(Locale locale) {\n     return availableLocaleSet().contains(locale);\n}\n\nprivate static Set<Locale> availableLocaleSet() {\n     Set<Locale> availableLocaleSet = new HashSet<>();\n     for (Locale locale : Locale.getAvailableLocales())\n         availableLocaleSet.add(locale);\n     return availableLocaleSet;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\nindex 8caca580..68169f4a 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n@@ -26,8 +26,16 @@ package org.apache.commons.lang3.text.translate;\n  * @version $Id$\n  */\n public class EntityArrays {\n+public static boolean isAvailableLocale(Locale locale) {\n+     return availableLocaleSet().contains(locale);\n+}\n \n-    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n+private static Set<Locale> availableLocaleSet() {\n+     Set<Locale> availableLocaleSet = new HashSet<>();\n+     for (Locale locale : Locale.getAvailableLocales())\n+         availableLocaleSet.add(locale);\n+     return availableLocaleSet;\n+}\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00A1\", \"&iexcl;\"}, // inverted exclamation mark",
    "result_reason": "error: operand expected (error token is \"=\")",
    "test_result": "ERROR"
}