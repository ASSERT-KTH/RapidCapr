{
    "patch": "import java.util.Locale;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class LocaleUtils {\n\n    private static final Set<Locale> cAvailableLocaleSet;\n\n    static {\n        cAvailableLocaleSet = new HashSet<>();\n        Locale[] availableLocales = Locale.getAvailableLocales();\n        for (Locale locale : availableLocales) {\n            cAvailableLocaleSet.add(locale);\n        }\n    }\n\n    public static boolean isAvailableLocale(Locale locale) {\n        return cAvailableLocaleSet.contains(locale);\n    }\n\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex a90b0673..25c64c28 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1437,7 +1437,27 @@ public class StringUtils {\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+import java.util.Locale;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class LocaleUtils {\n+\n+    private static final Set<Locale> cAvailableLocaleSet;\n+\n+    static {\n+        cAvailableLocaleSet = new HashSet<>();\n+        Locale[] availableLocales = Locale.getAvailableLocales();\n+        for (Locale locale : availableLocales) {\n+            cAvailableLocaleSet.add(locale);\n+        }\n+    }\n+\n+    public static boolean isAvailableLocale(Locale locale) {\n+        return cAvailableLocaleSet.contains(locale);\n+    }\n+\n+}\n \t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n \t\t\treturn false;\n \t\t}",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}