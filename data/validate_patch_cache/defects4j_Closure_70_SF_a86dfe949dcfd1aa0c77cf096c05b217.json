{
    "patch": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            String astName = astParameter.getString();\n            if (jsDocParameter != null) {\n              JSType type = jsDocParameter.getJSType();\n              defineSlot(astParameter, functionNode, type, true);\n              if (type instanceof FunctionType) {\n                FunctionType fnType = (FunctionType) type;\n                Node astNameNode = Node.newString(Token.NAME, astName);\n                defineSlot(astNameNode, functionNode, fnType, true);\n              }\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..3b14b8f0 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1740,9 +1740,15 @@ final class TypedScopeCreator implements ScopeCreator {\n         if (jsDocParameters != null) {\n           Node jsDocParameter = jsDocParameters.getFirstChild();\n           for (Node astParameter : astParameters.children()) {\n+            String astName = astParameter.getString();\n             if (jsDocParameter != null) {\n-              defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), true);\n+              JSType type = jsDocParameter.getJSType();\n+              defineSlot(astParameter, functionNode, type, true);\n+              if (type instanceof FunctionType) {\n+                FunctionType fnType = (FunctionType) type;\n+                Node astNameNode = Node.newString(Token.NAME, astName);\n+                defineSlot(astNameNode, functionNode, fnType, true);\n+              }\n               jsDocParameter = jsDocParameter.getNext();\n             } else {\n               defineSlot(astParameter, functionNode, null, true);",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_DUP_VAR_DECLARATION. variable x redefined with type Function, original definition at testcode:2 with type Function at testcode line (unknown line) : (unknown column) expected:<0> but was:<1>",
    "test_result": "FAIL"
}