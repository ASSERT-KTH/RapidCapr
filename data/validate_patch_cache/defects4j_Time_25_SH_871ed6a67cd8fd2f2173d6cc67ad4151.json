{
    "patch": "            if (offsetLocal != offsetAdjusted) {\n                // we need to ensure that time is always after the DST gap\n                // this happens naturally for positive offsets, but not for negative\n                int diff = offsetLocal - offsetAdjusted; // added line\n                if (diff < 0) { \n                    // if we just return offsetAdjusted then the time is pushed\n                    // back before the transition, whereas it should be\n                    // on or after the transition\n                    long nextLocal = nextTransition(instantAdjusted);\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    } else {\n                        long previousLocal = previousTransition(instantAdjusted);\n                        long previousAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                        if (previousLocal == previousAdjusted) {\n                            return offsetAdjusted + 1;\n                        }\n                    }\n                } else if (diff > 0) { // fixed line\n                    long nextLocal = nextTransition(instantAdjusted);\n                    if (nextLocal <= instantLocal) {\n                        return offsetLocal;\n                    }\n                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                    if (nextLocal != nextAdjusted) {\n                        return offsetLocal;\n                    } else {\n                        return offsetAdjusted;\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..16b8754a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,38 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+            if (offsetLocal != offsetAdjusted) {\n+                // we need to ensure that time is always after the DST gap\n+                // this happens naturally for positive offsets, but not for negative\n+                int diff = offsetLocal - offsetAdjusted; // added line\n+                if (diff < 0) { \n+                    // if we just return offsetAdjusted then the time is pushed\n+                    // back before the transition, whereas it should be\n+                    // on or after the transition\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    } else {\n+                        long previousLocal = previousTransition(instantAdjusted);\n+                        long previousAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+                        if (previousLocal == previousAdjusted) {\n+                            return offsetAdjusted + 1;\n+                        }\n+                    }\n+                } else if (diff > 0) { // fixed line\n+                    long nextLocal = nextTransition(instantAdjusted);\n+                    if (nextLocal <= instantLocal) {\n+                        return offsetLocal;\n+                    }\n+                    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+                    if (nextLocal != nextAdjusted) {\n+                        return offsetLocal;\n+                    } else {\n+                        return offsetAdjusted;\n+                    }\n+                }\n+            }\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}