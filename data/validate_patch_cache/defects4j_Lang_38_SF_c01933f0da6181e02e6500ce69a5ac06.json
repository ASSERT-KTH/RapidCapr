{
    "patch": "public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n        calendar = (Calendar) calendar.clone();\n        calendar.setTimeZone(mTimeZone);\n    }\n    buf = applyRules(calendar, buf);\n    if (mTimeZoneForced && mShowTimeZone) {\n        formatTimeZone(calendar, buf);\n    }\n    return buf;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..de29cd51 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -867,13 +867,17 @@ public class FastDateFormat extends Format {\n      * @param buf  the buffer to format into\n      * @return the specified string buffer\n      */\n-    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n-        if (mTimeZoneForced) {\n-            calendar = (Calendar) calendar.clone();\n-            calendar.setTimeZone(mTimeZone);\n-        }\n-        return applyRules(calendar, buf);\n+public StringBuffer format(Calendar calendar, StringBuffer buf) {\n+    if (mTimeZoneForced) {\n+        calendar = (Calendar) calendar.clone();\n+        calendar.setTimeZone(mTimeZone);\n+    }\n+    buf = applyRules(calendar, buf);\n+    if (mTimeZoneForced && mShowTimeZone) {\n+        formatTimeZone(calendar, buf);\n     }\n+    return buf;\n+}\n \n     /**\n      * <p>Performs the formatting by applying the rules to the",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}