{
    "patch": "            StringBuffer formattedDate = applyRules(calendar, new StringBuffer());\n            if (mTimeZoneForced) {\n                DateFormat formatter = new SimpleDateFormat(ISO_DATETIME_TIME_ZONE_FORMAT);\n                formatter.setTimeZone(mTimeZone);\n                try {\n                    calendar.setTime(formatter.parse(formattedDate.toString()));\n                } catch (ParseException e) {\n                    throw new IllegalArgumentException(e);\n                }\n            }\n            buf.append(formattedDate);\n            return buf;",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..23bb2ad0 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,18 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+            StringBuffer formattedDate = applyRules(calendar, new StringBuffer());\n+            if (mTimeZoneForced) {\n+                DateFormat formatter = new SimpleDateFormat(ISO_DATETIME_TIME_ZONE_FORMAT);\n+                formatter.setTimeZone(mTimeZone);\n+                try {\n+                    calendar.setTime(formatter.parse(formattedDate.toString()));\n+                } catch (ParseException e) {\n+                    throw new IllegalArgumentException(e);\n+                }\n+            }\n+            buf.append(formattedDate);\n+            return buf;\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}