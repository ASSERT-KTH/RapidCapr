{
    "patch": "if (excerpt.equals(LINE)) {\n  int lineEnd = sourceExcerpt.indexOf('\\n', charno);\n  if (lineEnd < 0) {\n    lineEnd = sourceExcerpt.length();\n  }\n  for (int i = 0; i < lineEnd - charno; i++) {\n    char c = sourceExcerpt.charAt(charno + i);\n    b.append(Character.isWhitespace(c) ? c : ' ');\n  }\n  b.append(\"^\\n\");\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..33428b63 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,17 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+if (excerpt.equals(LINE)) {\n+  int lineEnd = sourceExcerpt.indexOf('\\n', charno);\n+  if (lineEnd < 0) {\n+    lineEnd = sourceExcerpt.length();\n+  }\n+  for (int i = 0; i < lineEnd - charno; i++) {\n+    char c = sourceExcerpt.charAt(charno + i);\n+    b.append(Character.isWhitespace(c) ? c : ' ');\n+  }\n+  b.append(\"^\\n\");\n+}\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}