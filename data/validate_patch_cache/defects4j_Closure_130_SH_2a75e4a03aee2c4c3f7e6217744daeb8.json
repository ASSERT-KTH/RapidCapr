{
    "patch": "      if ((name.globalSets == 1 || name.localSets == 1) && name.localSets + name.aliasingGets == 0 &&\n          name.getDeclaration() != null && NodeUtil.isImmutableValue(name.getDeclaration())) {\n        // name meets condition (b)\n        inferredConsts.add(name.getDeclaration().getFirstChild());\n        for (Ref ref : name.getRefs()) {\n          ref.getNode().putBooleanProp(Node.IS_CONSTANT_NAME, true);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..3900fbb4 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,14 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+      if ((name.globalSets == 1 || name.localSets == 1) && name.localSets + name.aliasingGets == 0 &&\n+          name.getDeclaration() != null && NodeUtil.isImmutableValue(name.getDeclaration())) {\n+        // name meets condition (b)\n+        inferredConsts.add(name.getDeclaration().getFirstChild());\n+        for (Ref ref : name.getRefs()) {\n+          ref.getNode().putBooleanProp(Node.IS_CONSTANT_NAME, true);\n+        }\n+      }\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}