{
    "patch": "public boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof ShapeList)) {\n        return false;\n    }\n    ShapeList other = (ShapeList) obj;\n    List<Shape> thisShapes = getShapes();\n    List<Shape> otherShapes = other.getShapes();\n    if (thisShapes.size() != otherShapes.size()) {\n        return false;\n    }\n    for (int i = 0; i < thisShapes.size(); i++) {\n        Shape thisShape = thisShapes.get(i);\n        Shape otherShape = otherShapes.get(i);\n        if (!thisShape.equals(otherShape)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..344b65c 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,28 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+public boolean equals(Object obj) {\n+    if (obj == this) {\n+        return true;\n+    }\n+    if (!(obj instanceof ShapeList)) {\n+        return false;\n+    }\n+    ShapeList other = (ShapeList) obj;\n+    List<Shape> thisShapes = getShapes();\n+    List<Shape> otherShapes = other.getShapes();\n+    if (thisShapes.size() != otherShapes.size()) {\n+        return false;\n+    }\n+    for (int i = 0; i < thisShapes.size(); i++) {\n+        Shape thisShape = thisShapes.get(i);\n+        Shape otherShape = otherShapes.get(i);\n+        if (!thisShape.equals(otherShape)) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n \n     }\n \n@@ -169,4 +190,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}