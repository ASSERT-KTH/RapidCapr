{
    "patch": "if (str.toLowerCase().startsWith(\"0x\")) {\n    try {\n        return createInteger(Integer.parseInt(str.substring(2), 16));\n    } catch (NumberFormatException e) {\n        // ignore the bad number\n    }\n} else if (str.toLowerCase().startsWith(\"-0x\")) {\n    try {\n        return createInteger(-1 * Integer.parseInt(str.substring(3), 16));\n    } catch (NumberFormatException e) {\n        // ignore the bad number\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..b5a566ec 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,19 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+if (str.toLowerCase().startsWith(\"0x\")) {\n+    try {\n+        return createInteger(Integer.parseInt(str.substring(2), 16));\n+    } catch (NumberFormatException e) {\n+        // ignore the bad number\n+    }\n+} else if (str.toLowerCase().startsWith(\"-0x\")) {\n+    try {\n+        return createInteger(-1 * Integer.parseInt(str.substring(3), 16));\n+    } catch (NumberFormatException e) {\n+        // ignore the bad number\n+    }\n+}\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}