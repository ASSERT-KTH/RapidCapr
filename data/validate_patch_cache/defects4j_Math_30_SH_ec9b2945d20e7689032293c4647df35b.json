{
    "patch": "   final double n1n2prod = (double) n1 * n2;\n   ```\n\n2. If the result needs to be a long:\n\n   ```java\n   final long n1n2prod = (long) n1 * n2;\n   ```\n\n3. If the result needs to be a double, but with a cast for `n1` and `n2`:\n\n   ```java\n   final double n1n2prod = ((double) n1) * ((double) n2);\n   ```\n\n4. If the result needs to be a double, but with a cast for either `n1` or `n2`:\n\n   ```java\n   final double n1n2prod = n1 * 1.0 * n2;\n   ``",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\nindex ce694ce8f..42ade6a5f 100644\n--- a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\n+++ b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java\n@@ -170,7 +170,26 @@ public class MannWhitneyUTest {\n                                              final int n2)\n         throws ConvergenceException, MaxCountExceededException {\n \n-        final int n1n2prod = n1 * n2;\n+   final double n1n2prod = (double) n1 * n2;\n+   ```\n+\n+2. If the result needs to be a long:\n+\n+   ```java\n+   final long n1n2prod = (long) n1 * n2;\n+   ```\n+\n+3. If the result needs to be a double, but with a cast for `n1` and `n2`:\n+\n+   ```java\n+   final double n1n2prod = ((double) n1) * ((double) n2);\n+   ```\n+\n+4. If the result needs to be a double, but with a cast for either `n1` or `n2`:\n+\n+   ```java\n+   final double n1n2prod = n1 * 1.0 * n2;\n+   ``\n \n         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n         final double EU = n1n2prod / 2.0;",
    "result_reason": "error: illegal character: \\96",
    "test_result": "ERROR"
}