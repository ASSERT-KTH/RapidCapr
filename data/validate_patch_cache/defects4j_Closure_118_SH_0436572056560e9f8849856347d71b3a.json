{
    "patch": "        ObjectType ownerType = ObjectType.cast(topScope.getVar(ownerVar).getType());\n        if (ownerType == null) {\n           throw new RuntimeException(\"Declaration of \" + name + \" has null owner type.\");\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..f29b8e6c 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,10 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        ObjectType ownerType = ObjectType.cast(topScope.getVar(ownerVar).getType());\n+        if (ownerType == null) {\n+           throw new RuntimeException(\"Declaration of \" + name + \" has null owner type.\");\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}