{
    "patch": "    public String format(Date date) {\n        TimeZone.setDefault(mTimeZone);\n        Calendar c = Calendar.getInstance();\n        c.setTime(date);\n        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..79771f84 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -817,7 +817,12 @@ public class FastDateFormat extends Format {\n      * @return the formatted string\n      */\n     public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n+    public String format(Date date) {\n+        TimeZone.setDefault(mTimeZone);\n+        Calendar c = Calendar.getInstance();\n+        c.setTime(date);\n+        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+    }\n         c.setTime(date);\n         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n     }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}