{
    "patch": "      Node first = n.getFirstChild();\n      Node getprop = first.isGetProp() ? first : NodeUtil.getBestLValue(first);\n\n      if (getprop != null && NodeUtil.isGet(getprop)) {\n        Node obj = getprop.getFirstChild();\n        if (obj.getType() == Token.NAME\n            && \"goog\".equals(obj.getString())) {\n          n.putBooleanProp(Node.FREE_CALL, true);\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..007580bd 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,16 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      Node first = n.getFirstChild();\n+      Node getprop = first.isGetProp() ? first : NodeUtil.getBestLValue(first);\n+\n+      if (getprop != null && NodeUtil.isGet(getprop)) {\n+        Node obj = getprop.getFirstChild();\n+        if (obj.getType() == Token.NAME\n+            && \"goog\".equals(obj.getString())) {\n+          n.putBooleanProp(Node.FREE_CALL, true);\n+        }\n+      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}