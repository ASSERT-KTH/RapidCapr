{
    "patch": "return (f.value(min) * f.value(max) <= 0) ?\n    solve(f, min, max) :\n    solve(f, min, initial) != Double.NaN ?\n        solve(f, min, initial) :\n        solve(f, initial, max) != Double.NaN ?\n            solve(f, initial, max) :\n            Double.NaN;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..30c5895cf 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,13 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+return (f.value(min) * f.value(max) <= 0) ?\n+    solve(f, min, max) :\n+    solve(f, min, initial) != Double.NaN ?\n+        solve(f, min, initial) :\n+        solve(f, initial, max) != Double.NaN ?\n+            solve(f, initial, max) :\n+            Double.NaN;\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}