{
    "patch": "import org.jfree.data.general.SeriesException;\nimport org.jfree.data.time.TimeSeries;\nimport org.jfree.data.time.TimeSeriesDataItem;\nimport java.util.ArrayList;\n\npublic class YourClassNameHere {\n\n    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        if (end >= getItemCount()) {\n            end = getItemCount() - 1;\n            if (end < start) {\n                throw new IllegalArgumentException(\n                        \"Requires start <= end.\");\n            }\n        }\n        TimeSeries copy = super.createCopy(start, end);\n        copy.setData(new ArrayList<>());\n        if (this.data.size() > 0) {\n            for (int index = start; index < end; index++) {\n                if (index >= 0 && index < this.data.size()) {\n                    try (TimeSeriesDataItem item =\n                            (TimeSeriesDataItem) this.data.get(index).clone()) {\n                        copy.add(item);\n                    } catch (CloneNotSupportedException | SeriesException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n        return copy;\n    }\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..76230ea 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1045,31 +1045,45 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n      *\n      * @throws CloneNotSupportedException if there is a cloning problem.\n      */\n-    public TimeSeries createCopy(int start, int end)\n-            throws CloneNotSupportedException {\n-        if (start < 0) {\n-            throw new IllegalArgumentException(\"Requires start >= 0.\");\n-        }\n-        if (end < start) {\n-            throw new IllegalArgumentException(\"Requires start <= end.\");\n-        }\n-        TimeSeries copy = (TimeSeries) super.clone();\n-        copy.data = new java.util.ArrayList();\n-        if (this.data.size() > 0) {\n-            for (int index = start; index <= end; index++) {\n-                TimeSeriesDataItem item\n-                        = (TimeSeriesDataItem) this.data.get(index);\n-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n-                try {\n-                    copy.add(clone);\n-                }\n-                catch (SeriesException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        return copy;\n-    }\n+import org.jfree.data.general.SeriesException;\n+import org.jfree.data.time.TimeSeries;\n+import org.jfree.data.time.TimeSeriesDataItem;\n+import java.util.ArrayList;\n+\n+public class YourClassNameHere {\n+\n+    public TimeSeries createCopy(int start, int end)\n+            throws CloneNotSupportedException {\n+        if (start < 0) {\n+            throw new IllegalArgumentException(\"Requires start >= 0.\");\n+        }\n+        if (end < start) {\n+            throw new IllegalArgumentException(\"Requires start <= end.\");\n+        }\n+        if (end >= getItemCount()) {\n+            end = getItemCount() - 1;\n+            if (end < start) {\n+                throw new IllegalArgumentException(\n+                        \"Requires start <= end.\");\n+            }\n+        }\n+        TimeSeries copy = super.createCopy(start, end);\n+        copy.setData(new ArrayList<>());\n+        if (this.data.size() > 0) {\n+            for (int index = start; index < end; index++) {\n+                if (index >= 0 && index < this.data.size()) {\n+                    try (TimeSeriesDataItem item =\n+                            (TimeSeriesDataItem) this.data.get(index).clone()) {\n+                        copy.add(item);\n+                    } catch (CloneNotSupportedException | SeriesException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }\n+        }\n+        return copy;\n+    }\n+}\n \n     /**\n      * Creates a new timeseries by copying a subset of the data in this time",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}