{
    "patch": "public String format(Date date) {\n    Calendar c = new GregorianCalendar();\n    c.setTimeZone(mTimeZone);\n    c.setTime(date);\n    c.set(Calendar.WEEK_OF_YEAR, c.get(Calendar.WEEK_OF_YEAR));\n    c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..fbee4140 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -816,11 +816,14 @@ public class FastDateFormat extends Format {\n      * @param date  the date to format\n      * @return the formatted string\n      */\n-    public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n-        c.setTime(date);\n-        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n-    }\n+public String format(Date date) {\n+    Calendar c = new GregorianCalendar();\n+    c.setTimeZone(mTimeZone);\n+    c.setTime(date);\n+    c.set(Calendar.WEEK_OF_YEAR, c.get(Calendar.WEEK_OF_YEAR));\n+    c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);\n+    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+}\n \n     /**\n      * <p>Formats a <code>Calendar</code> object.</p>",
    "result_reason": "junit.framework.ComparisonFailure: expected:<200[5-01-0]1T12:00:00> but was:<200[4-12-3]1T12:00:00>",
    "test_result": "FAIL"
}