{
    "patch": "      // check for throw statement\n      if (n.isThrow()) {\n        return true;\n      }\n\n      for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n        if (apply(c)) {\n          return true;\n        }\n        if (ControlFlowGraph.isEnteringNewCfgNode(c)) {\n          break;\n        }\n      }\n      return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..923dc3a7 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,20 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+      // check for throw statement\n+      if (n.isThrow()) {\n+        return true;\n+      }\n+\n+      for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n+        if (apply(c)) {\n+          return true;\n+        }\n+        if (ControlFlowGraph.isEnteringNewCfgNode(c)) {\n+          break;\n+        }\n+      }\n+      return false;\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}