{
    "patch": "              if (finallyNode.equals(fromNode)) {\n                return null;\n              }\n              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..8451ee54 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,6 +764,9 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n+              if (finallyNode.equals(fromNode)) {\n+                return null;\n+              }\n               cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n             }\n           }",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}