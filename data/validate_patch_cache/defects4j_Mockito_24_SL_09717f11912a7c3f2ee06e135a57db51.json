{
    "patch": "```\nif (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n    Object mock = invocation.getMock();\n    Object arg = invocation.getArguments()[0];\n    if (mock == arg) {\n        return 0;\n    }\n    return System.identityHashCode(mock) < System.identityHashCode(arg) ? -1 : 1;\n}\n``` \n\nThis alternative fix line returns 0 if the mock is compared to itself, as expected, and returns -1 or 1 based on their identity hash codes if they are different objects.",
    "patch_diff": "diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\nindex 4c00f50b1..efc3b1172 100644\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n@@ -73,7 +73,18 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n             //see issue 184.\n             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).\n             //Only for compareTo() method by the Comparable interface\n-            return 1;\n+```\n+if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n+    Object mock = invocation.getMock();\n+    Object arg = invocation.getArguments()[0];\n+    if (mock == arg) {\n+        return 0;\n+    }\n+    return System.identityHashCode(mock) < System.identityHashCode(arg) ? -1 : 1;\n+}\n+``` \n+\n+This alternative fix line returns 0 if the mock is compared to itself, as expected, and returns -1 or 1 based on their identity hash codes if they are different objects.\n         }\n         \n         Class<?> returnType = invocation.getMethod().getReturnType();\n@@ -120,4 +131,4 @@ public class ReturnsEmptyValues implements Answer<Object>, Serializable {\n         return null;\n     }\n \n-}\n\\ No newline at end of file\n+}",
    "result_reason": "error: illegal character: '`'",
    "test_result": "ERROR"
}