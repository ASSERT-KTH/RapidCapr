{
    "patch": "if (rhs == null) {\n    throw new NullArgumentException();\n} else if (Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary()) \n        || Double.isNaN(real) || Double.isNaN(imaginary)) {\n    return createComplex(Double.NaN, Double.NaN);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..278e3f08f 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,6 +150,12 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n+if (rhs == null) {\n+    throw new NullArgumentException();\n+} else if (Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary()) \n+        || Double.isNaN(real) || Double.isNaN(imaginary)) {\n+    return createComplex(Double.NaN, Double.NaN);\n+}\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}