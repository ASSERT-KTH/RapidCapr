{
    "patch": "public String format(Date date) {\n    Calendar c = Calendar.getInstance(mTimeZone);\n    c.setFirstDayOfWeek(Calendar.MONDAY);\n    c.setMinimalDaysInFirstWeek(4);\n    c.setTime(date);\n\n    // Shift the week from 01 to 53 to the previous year's week 53\n    if (c.get(Calendar.YEAR) == 2022 && c.get(Calendar.WEEK_OF_YEAR) == 1) {\n        c.add(Calendar.WEEK_OF_YEAR, -1);\n    }\n\n    // If the current week is 53, adjust the calendar to Friday of that week\n    if (c.get(Calendar.WEEK_OF_YEAR) == 53) {\n        c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);\n    }\n\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex e30da2a5..c271fa71 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -816,12 +816,25 @@ public class FastDateFormat extends Format {\n      * @param date  the date to format\n      * @return the formatted string\n      */\n-    public String format(Date date) {\n-        Calendar c = new GregorianCalendar(mTimeZone);\n-        c.setTime(date);\n-        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+public String format(Date date) {\n+    Calendar c = Calendar.getInstance(mTimeZone);\n+    c.setFirstDayOfWeek(Calendar.MONDAY);\n+    c.setMinimalDaysInFirstWeek(4);\n+    c.setTime(date);\n+\n+    // Shift the week from 01 to 53 to the previous year's week 53\n+    if (c.get(Calendar.YEAR) == 2022 && c.get(Calendar.WEEK_OF_YEAR) == 1) {\n+        c.add(Calendar.WEEK_OF_YEAR, -1);\n+    }\n+\n+    // If the current week is 53, adjust the calendar to Friday of that week\n+    if (c.get(Calendar.WEEK_OF_YEAR) == 53) {\n+        c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);\n     }\n \n+    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n+}\n+\n     /**\n      * <p>Formats a <code>Calendar</code> object.</p>\n      * ",
    "result_reason": "junit.framework.ComparisonFailure: expected:<200[5-01-0]1T12:00:00> but was:<200[4-12-3]1T12:00:00>",
    "test_result": "FAIL"
}