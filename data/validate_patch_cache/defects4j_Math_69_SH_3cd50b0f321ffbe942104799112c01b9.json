{
    "patch": "double p = tDistribution.cumulativeProbability(-Math.abs(t));\nif (Double.isNaN(p)) {\n    out[i][j] = Double.NaN;\n} else if (p == 0.0) {\n    out[i][j] = 0.0;\n} else {\n    out[i][j] = 2 * p;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..58a5bcd3e 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,14 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+double p = tDistribution.cumulativeProbability(-Math.abs(t));\n+if (Double.isNaN(p)) {\n+    out[i][j] = Double.NaN;\n+} else if (p == 0.0) {\n+    out[i][j] = 0.0;\n+} else {\n+    out[i][j] = 2 * p;\n+}\n                 }\n             }\n         }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}