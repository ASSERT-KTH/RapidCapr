{
    "patch": "int indexOfDot = namespace.lastIndexOf('.');\nif (indexOfDot == -1 && namespace.startsWith(\"window.\")) {\n  indexOfDot = namespace.indexOf('.', \"window.\".length());\n}\nif (indexOfDot == -1 && candidateDefinition.isVar()) {\n  // Global names should be defined on the global scope\n  // (i.e, start with the 'window.' prefix).\n  indexOfDot = \"window\".length() - 1;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex c929a363..89894cb1 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -786,7 +786,15 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+int indexOfDot = namespace.lastIndexOf('.');\n+if (indexOfDot == -1 && namespace.startsWith(\"window.\")) {\n+  indexOfDot = namespace.indexOf('.', \"window.\".length());\n+}\n+if (indexOfDot == -1 && candidateDefinition.isVar()) {\n+  // Global names should be defined on the global scope\n+  // (i.e, start with the 'window.' prefix).\n+  indexOfDot = \"window\".length() - 1;\n+}\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}