{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (m == null && arg == null) {\n        return true; // both are null, so they are equal\n    } else if (m == null || arg == null) {\n        return false; // one is null and other is not, so they are not equal\n    } else {\n        try {\n            String mToString = StringDescription.toString(m); // get string representation of m\n            String argToString = arg.toString(); // get string representation of arg\n            return (mToString != null && argToString != null) && mToString.equals(argToString); // verify if both strings are not null and if they are equal\n        } catch (NullPointerException e) {\n            return false; // if any exception occurs, the objects are not equal\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..a2689bd57 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,20 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n-    private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n-    }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (m == null && arg == null) {\n+        return true; // both are null, so they are equal\n+    } else if (m == null || arg == null) {\n+        return false; // one is null and other is not, so they are not equal\n+    } else {\n+        try {\n+            String mToString = StringDescription.toString(m); // get string representation of m\n+            String argToString = arg.toString(); // get string representation of arg\n+            return (mToString != null && argToString != null) && mToString.equals(argToString); // verify if both strings are not null and if they are equal\n+        } catch (NullPointerException e) {\n+            return false; // if any exception occurs, the objects are not equal\n+        }\n+    }\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}