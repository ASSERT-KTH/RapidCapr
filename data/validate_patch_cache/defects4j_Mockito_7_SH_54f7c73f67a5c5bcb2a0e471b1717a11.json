{
    "patch": "            if(typeVariable == null) {\n               throw new MockitoException(\"TypeVariable is null\");\n            }\n\n            for (Type type : typeVariable.getBounds()) {\n                registerTypeVariablesOn(type);\n            }\n            \n            Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n            if(actualTypeArgument == null) {\n               throw new MockitoException(\"Actual type argument is null\");\n            }\n            registerTypeVariablesOn(actualTypeArgument);",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..9f6ca18d1 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -376,6 +376,19 @@ public abstract class GenericMetadataSupport {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+            if(typeVariable == null) {\n+               throw new MockitoException(\"TypeVariable is null\");\n+            }\n+\n+            for (Type type : typeVariable.getBounds()) {\n+                registerTypeVariablesOn(type);\n+            }\n+            \n+            Type actualTypeArgument = getActualTypeArgumentFor(typeVariable);\n+            if(actualTypeArgument == null) {\n+               throw new MockitoException(\"Actual type argument is null\");\n+            }\n+            registerTypeVariablesOn(actualTypeArgument);\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Actual type argument is null",
    "test_result": "FAIL"
}