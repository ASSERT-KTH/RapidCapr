{
    "patch": "      if (value.isFunction() && value.getParent().isCall()) {\n        // Check if the function is a singleton getter method\n        Call callNode = (Call) value.getParent();\n        if (callNode != null &&\n            callNode.getFirstChild().isGetProp() &&\n            !callNode.getFirstChild().isQualifiedName() &&\n            !callNode.getFirstChild().getLastChild().getString().equals(\"bind\")) {\n          return false;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..65140ba2 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,16 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+      if (value.isFunction() && value.getParent().isCall()) {\n+        // Check if the function is a singleton getter method\n+        Call callNode = (Call) value.getParent();\n+        if (callNode != null &&\n+            callNode.getFirstChild().isGetProp() &&\n+            !callNode.getFirstChild().isQualifiedName() &&\n+            !callNode.getFirstChild().getLastChild().getString().equals(\"bind\")) {\n+          return false;\n+        }\n+      }\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}