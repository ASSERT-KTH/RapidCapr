{
    "patch": "if (other instanceof Complex) {\n    Complex rhs = (Complex) other;\n    ret = Double.compare(rhs.real, this.real) == 0 && Double.compare(rhs.imaginary, this.imaginary) == 0;\n} else {\n    ret = false;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java\nindex 3571567f8..e06e70ecb 100644\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n@@ -255,7 +255,12 @@ public class Complex implements Serializable  {\n                 if (rhs.isNaN()) {\n                     ret = this.isNaN();\n                 } else {\n-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); \n+if (other instanceof Complex) {\n+    Complex rhs = (Complex) other;\n+    ret = Double.compare(rhs.real, this.real) == 0 && Double.compare(rhs.imaginary, this.imaginary) == 0;\n+} else {\n+    ret = false;\n+}\n                 }\n             } catch (ClassCastException ex) {\n                 // ignore exception",
    "result_reason": "error: variable rhs is already defined in method equals(Object)",
    "test_result": "ERROR"
}