{
    "patch": "public boolean isEmptyType() {\n    return isVoidType() || isPrimitiveType() || isNullType() || isNoType() || isNoResolvedType()\n           || isTypeVariable() || isWildcardType() || isParameterizedType() && getActualTypeArguments().stream().allMatch(TypeUtils::isEmptyType);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..f13ffba5 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -158,10 +158,10 @@ public abstract class JSType implements Serializable {\n   public boolean isNoObjectType() {\n     return false;\n   }\n-\n-  public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n-  }\n+public boolean isEmptyType() {\n+    return isVoidType() || isPrimitiveType() || isNullType() || isNoType() || isNoResolvedType()\n+           || isTypeVariable() || isWildcardType() || isParameterizedType() && getActualTypeArguments().stream().allMatch(TypeUtils::isEmptyType);\n+}\n \n   public boolean isNumberObjectType() {\n     return false;",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}