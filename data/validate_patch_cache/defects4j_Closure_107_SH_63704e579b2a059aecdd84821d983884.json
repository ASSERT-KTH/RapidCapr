{
    "patch": "if (flags.translationsFile.isEmpty()) {\n    if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n        options.setMessageBundle(null);\n    } else {\n        options.setMessageBundle(new EmptyMessageBundle());\n    }\n} else {\n    try {\n        options.setMessageBundle(new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject));\n    } catch (IOException e) {\n        throw new RuntimeException(\"Reading XTB file\", e);\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..c55e07b8 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,19 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+if (flags.translationsFile.isEmpty()) {\n+    if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n+        options.setMessageBundle(null);\n+    } else {\n+        options.setMessageBundle(new EmptyMessageBundle());\n+    }\n+} else {\n+    try {\n+        options.setMessageBundle(new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject));\n+    } catch (IOException e) {\n+        throw new RuntimeException(\"Reading XTB file\", e);\n+    }\n+}\n     }\n \n     return options;",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}