{
    "patch": "      Name name = functionNode.getFunctionName();\n      if (name == null) {\n        name = new Name();\n        name.setIdentifier(\"\");\n        name.setLineno(functionNode.getLineno());\n        name.setCharno(position2charno(functionNode.getAbsolutePosition() + \"function\".length()));\n      }\n\n      Node node = newNode(Token.FUNCTION);\n      Node newName = transform(name);\n      node.addChildToBack(newName);\n      \n      Node lp = newNode(Token.LP);\n      lp.setLineno(name.getLineno());\n      lp.setCharno(newName.getCharno() + newName.getLength());\n      \n      for (AstNode param : functionNode.getParams()) {\n        lp.addChildToFront(transform(param));\n      }\n      lp.addChildToBack(new Node(Token.BLOCK));\n      \n      Node rp = newNode(Token.RP);\n      rp.setLineno(newName.getLineno());\n      rp.setCharno(lp.getCharno() + lp.getLength() + 1);\n\n      node.addChildToBack(lp);\n      node.addChildToBack(rp);\n\n      Node bodyNode = transform(functionNode.getBody());\n      parseDirectives(bodyNode);\n      lp.getLastChild().addChildToFront(bodyNode);\n      return node;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..1012f820 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,38 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      Name name = functionNode.getFunctionName();\n+      if (name == null) {\n+        name = new Name();\n+        name.setIdentifier(\"\");\n+        name.setLineno(functionNode.getLineno());\n+        name.setCharno(position2charno(functionNode.getAbsolutePosition() + \"function\".length()));\n+      }\n+\n+      Node node = newNode(Token.FUNCTION);\n+      Node newName = transform(name);\n+      node.addChildToBack(newName);\n+      \n+      Node lp = newNode(Token.LP);\n+      lp.setLineno(name.getLineno());\n+      lp.setCharno(newName.getCharno() + newName.getLength());\n+      \n+      for (AstNode param : functionNode.getParams()) {\n+        lp.addChildToFront(transform(param));\n+      }\n+      lp.addChildToBack(new Node(Token.BLOCK));\n+      \n+      Node rp = newNode(Token.RP);\n+      rp.setLineno(newName.getLineno());\n+      rp.setCharno(lp.getCharno() + lp.getLength() + 1);\n+\n+      node.addChildToBack(lp);\n+      node.addChildToBack(rp);\n+\n+      Node bodyNode = transform(functionNode.getBody());\n+      parseDirectives(bodyNode);\n+      lp.getLastChild().addChildToFront(bodyNode);\n+      return node;\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}