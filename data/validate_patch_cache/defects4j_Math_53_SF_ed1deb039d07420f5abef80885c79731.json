{
    "patch": "public Complex add(Complex rhs) throws NullArgumentException {\n    MathUtils.checkNotNull(rhs);\n      \n    double newReal = 0.0;\n    double newImaginary = 0.0;\n      \n    try {\n        newReal = Math.addExact(real, rhs.getReal());\n        newImaginary = Mat",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex e0a8e97e9..baa9cb57c 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -147,12 +147,15 @@ public class Complex implements FieldElement<Complex>, Serializable  {\n      * @return the complex number sum\n      * @throws NullArgumentException if <code>rhs</code> is null\n      */\n-    public Complex add(Complex rhs)\n-        throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n-            imaginary + rhs.getImaginary());\n-    }\n+public Complex add(Complex rhs) throws NullArgumentException {\n+    MathUtils.checkNotNull(rhs);\n+      \n+    double newReal = 0.0;\n+    double newImaginary = 0.0;\n+      \n+    try {\n+        newReal = Math.addExact(real, rhs.getReal());\n+        newImaginary = Mat\n \n     /**\n      * Return the conjugate of this complex number. The conjugate of",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}