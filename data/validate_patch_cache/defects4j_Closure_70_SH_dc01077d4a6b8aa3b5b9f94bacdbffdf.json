{
    "patch": "for (Node astParameter : astParameters.children()) {\n  if (jsDocParameter != null) {\n    if (findDuplicate(astParameter, functionNode)) {\n      // parameter is already defined\n      jsDocParameter = jsDocParameter.getNext();\n      continue;\n    }\n    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n    jsDocParameter = jsDocParameter.getNext();\n  } else {\n    defineSlot(astParameter, functionNode, null, true);\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..369e379b 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1742,7 +1742,19 @@ final class TypedScopeCreator implements ScopeCreator {\n           for (Node astParameter : astParameters.children()) {\n             if (jsDocParameter != null) {\n               defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), true);\n+for (Node astParameter : astParameters.children()) {\n+  if (jsDocParameter != null) {\n+    if (findDuplicate(astParameter, functionNode)) {\n+      // parameter is already defined\n+      jsDocParameter = jsDocParameter.getNext();\n+      continue;\n+    }\n+    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n+    jsDocParameter = jsDocParameter.getNext();\n+  } else {\n+    defineSlot(astParameter, functionNode, null, true);\n+  }\n+}\n               jsDocParameter = jsDocParameter.getNext();\n             } else {\n               defineSlot(astParameter, functionNode, null, true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}