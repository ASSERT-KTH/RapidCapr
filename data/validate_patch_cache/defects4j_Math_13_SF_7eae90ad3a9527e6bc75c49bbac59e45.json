{
    "patch": "    private RealMatrix squareRoot(RealMatrix m) {\n        final SchurDecomposition dec = new SchurDecomposition(m);\n\n        RealMatrix triRoot = dec.getT().sqrt();\n        RealMatrix q = dec.getQ();\n\n        return q.multiply(triRoot).multiply(q.transpose());\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..05f12484c 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -559,7 +559,11 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @return the square-root of the weight matrix.\n      */\n     private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+        final SchurDecomposition dec = new SchurDecomposition(m);\n+\n+        RealMatrix triRoot = dec.getT().sqrt();\n+        RealMatrix q = dec.getQ();\n+\n+        return q.multiply(triRoot).multiply(q.transpose());\n     }\n }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}