{
    "patch": "        String param = params.getParameter(0);\n        if(param == null){\n            setter.addValue(true);\n            return 0;\n        }\n        String lowerParam = param.toLowerCase();\n        if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n        } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n        } else {\n            throw new CmdLineException(owner, new Localizable() {\n                @Override\n                public String format(Locale locale, Object... args) {\n                    return \"The argument '\" + params.getParameter(0) + \"' is not a valid boolean value\";\n                }\n            }, null);\n        }\n        return 1;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..a95653ed 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -332,6 +332,24 @@ public class CommandLineRunner extends\n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n         String param = params.getParameter(0);\n+        if(param == null){\n+            setter.addValue(true);\n+            return 0;\n+        }\n+        String lowerParam = param.toLowerCase();\n+        if (TRUES.contains(lowerParam)) {\n+            setter.addValue(true);\n+        } else if (FALSES.contains(lowerParam)) {\n+            setter.addValue(false);\n+        } else {\n+            throw new CmdLineException(owner, new Localizable() {\n+                @Override\n+                public String format(Locale locale, Object... args) {\n+                    return \"The argument '\" + params.getParameter(0) + \"' is not a valid boolean value\";\n+                }\n+            }, null);\n+        }\n+        return 1;\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}