{
    "patch": "        long newInstantLocal = bucket.computeMillis(false, text);\n        if (iZone != null) {\n            newInstantLocal -= iZone.getOffset(newInstantLocal);\n        }\n        instant.setMillis(newInstantLocal);\n        instant.setChronology(chrono);\n        if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n            int parsedOffset = bucket.getOffsetInteger();\n            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n            instant.setZone(parsedZone);\n        } else if (bucket.getZone() != null) {\n            instant.setZone(bucket.getZone());\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..97cfe6b0 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,19 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+        long newInstantLocal = bucket.computeMillis(false, text);\n+        if (iZone != null) {\n+            newInstantLocal -= iZone.getOffset(newInstantLocal);\n+        }\n+        instant.setMillis(newInstantLocal);\n+        instant.setChronology(chrono);\n+        if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n+            int parsedOffset = bucket.getOffsetInteger();\n+            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n+            instant.setZone(parsedZone);\n+        } else if (bucket.getZone() != null) {\n+            instant.setZone(bucket.getZone());\n+        }\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: '.class' expected",
    "test_result": "ERROR"
}