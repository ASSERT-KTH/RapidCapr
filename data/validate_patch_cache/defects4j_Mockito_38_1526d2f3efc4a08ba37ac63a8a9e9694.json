{
    "patch": "    private boolean toStringEquals(Matcher m, Object arg) {\n        if (arg == null) {\n            return StringDescription.toString(m).equals(\"null\");\n        }\n        StringDescription sd = new StringDescription();\n        sd.appendValue(arg);\n        return StringDescription.toString(m).equals(sd.toString());\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..35a689748 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -45,6 +45,13 @@ public class ArgumentMatchingTool {\n     }\n \n     private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n+    private boolean toStringEquals(Matcher m, Object arg) {\n+        if (arg == null) {\n+            return StringDescription.toString(m).equals(\"null\");\n+        }\n+        StringDescription sd = new StringDescription();\n+        sd.appendValue(arg);\n+        return StringDescription.toString(m).equals(sd.toString());\n+    }\n     }\n }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}