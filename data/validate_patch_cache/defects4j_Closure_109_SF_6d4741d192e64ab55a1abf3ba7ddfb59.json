{
    "patch": "  private Node parseContextTypeExpression(JsDocToken token) {\n      Node typeExpression = parseTypeExpression(token);\n      if (typeExpression == null) {\n          throw new RuntimeException(\"Unable to parse JsDocToken: \" + token.getValue());\n      }\n      return typeExpression;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..9cfbb85c 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,11 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+      Node typeExpression = parseTypeExpression(token);\n+      if (typeExpression == null) {\n+          throw new RuntimeException(\"Unable to parse JsDocToken: \" + token.getValue());\n+      }\n+      return typeExpression;\n   }\n \n   /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}