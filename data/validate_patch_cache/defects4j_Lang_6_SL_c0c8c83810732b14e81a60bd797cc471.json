{
    "patch": "for (int pt = 0; pt < consumed; pt++) {\n    final int inputCodePoint = Character.codePointAt(input, pos + pt);\n    final String translated = translate(inputCodePoint);\n    if (inputCodePoint == '\\b' && translated == null) {\n        out.write(input.charAt(pos + pt));\n    } else if(translated != null){\n        out.write(translated);\n    } else {\n        char[] c = Character.toChars(inputCodePoint);\n        out.write(c);\n    }\n}\npos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..4cdcefbc 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,19 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+for (int pt = 0; pt < consumed; pt++) {\n+    final int inputCodePoint = Character.codePointAt(input, pos + pt);\n+    final String translated = translate(inputCodePoint);\n+    if (inputCodePoint == '\\b' && translated == null) {\n+        out.write(input.charAt(pos + pt));\n+    } else if(translated != null){\n+        out.write(translated);\n+    } else {\n+        char[] c = Character.toChars(inputCodePoint);\n+        out.write(c);\n+    }\n+}\n+pos += consumed;\n             }\n         }\n     }",
    "result_reason": "error: variable pt is already defined in method translate(CharSequence,Writer)",
    "test_result": "ERROR"
}