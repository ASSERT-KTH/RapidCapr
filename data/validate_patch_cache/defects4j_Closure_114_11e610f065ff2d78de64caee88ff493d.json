{
    "patch": "          // The RHS of the assignment is the caller, so it's used by the\n          // context. Don't associate it w/ the LHS.\n          if (NodeUtil.isExpressionNode(recordNode)) {\n            recordDepScope(recordNode, ns);\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..b63e0ce8 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -554,7 +554,6 @@ final class NameAnalyzer implements CompilerPass {\n           break;\n       }\n     }\n-\n     private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n       Node nameNode = n.getFirstChild();\n       Node parent = n.getParent();\n@@ -575,7 +574,11 @@ final class NameAnalyzer implements CompilerPass {\n           } else {\n             recordDepScope(nameNode, ns);\n           }\n-        } else {\n+          // The RHS of the assignment is the caller, so it's used by the\n+          // context. Don't associate it w/ the LHS.\n+          if (NodeUtil.isExpressionNode(recordNode)) {\n+            recordDepScope(recordNode, ns);\n+          }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}