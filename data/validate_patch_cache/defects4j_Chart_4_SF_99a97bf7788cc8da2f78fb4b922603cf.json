{
    "patch": "public Range getDataRange(ValueAxis axis) {\n    Range result = null;\n    List<XYDataset> mappedDatasets = new ArrayList<>();\n    List<XYAnnotationBoundsInfo> includedAnnotations = new ArrayList<>();\n    boolean isDomainAxis = true;\n    int domainIndex = getDomainAxisIndex(axis);\n    int rangeIndex = getRangeAxisIndex(axis);\n\n    // is it a domain axis?\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(domainIndex));\n        if (domainIndex == 0) {\n            // grab the plot's annotations\n            if (annotations != null) {\n                for (Object obj : annotations) {\n                    if (obj instanceof XYAnnotationBoundsInfo) {\n                        includedAnnotations.add((XYAnnotationBoundsInfo) obj);\n                    }\n                }\n            }\n        }\n    }\n\n    // or is it a range axis?\n    if (rangeIndex >= 0) {\n        isDomainAxis = false;\n        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(rangeIndex));\n        if (rangeIndex == 0) {\n            if (annotations != null) {\n                for (Object obj : annotations) {\n                    if (obj instanceof XYAnnotationBoundsInfo) {\n                        includedAnnotations.add((XYAnnotationBoundsInfo) obj);\n                    }\n                }\n            }\n        }\n    }\n\n    // iterate through the datasets that map to the axis and get the union of the ranges.\n    for (XYDataset dataset : mappedDatasets) {\n        XYItemRenderer renderer = getRendererForDataset(dataset);\n        if (renderer != null) {\n            result = getCombinedRange(result, renderer, dataset, isDomainAxis);\n            Collection<XYAnnotation> annotations = renderer.getAnnotations();\n            if (annotations != null) {\n                for (XYAnnotation annotation : annotations) {\n                    if (annotation instanceof XYAnnotationBoundsInfo) {\n                        includedAnnotations.add((XYAnnotationBoundsInfo) annotation);\n                    }\n                }\n            }\n        } else {\n            result = getCombinedRange(result, dataset, isDomainAxis);\n        }\n    }\n\n    // combine the ranges of the included annotations\n    for (XYAnnotationBoundsInfo annotation : includedAnnotations) {\n        if (annotation.getIncludeInDataBounds()) {\n            if (isDomainAxis) {\n                result = getCombinedRange(result, annotation.getXRange());\n            } else {\n                result = getCombinedRange(result, annotation.getYRange());\n            }\n        }\n    }\n\n    return result;\n}\n\nprivate Range getCombinedRange(Range existingRange, Range newRange) {\n    if (existingRange == null) {\n        return newRange;\n    } else {\n        return Range.combine(existingRange, newRange);\n    }\n}\n\nprivate Range getCombinedRange(Range existingRange, XYItemRenderer renderer, XYDataset dataset, boolean isDomainAxis) {\n    if (isDomainAxis) {\n        Range range = renderer.findDomainBounds(dataset);\n        return getCombinedRange(existingRange, range);\n    } else {\n        Range range = renderer.findRangeBounds(dataset);\n        return getCombinedRange(existingRange, range);\n    }\n}\n\nprivate Range getCombinedRange(Range existingRange, XYDataset dataset, boolean isDomainAxis) {\n    Range range;\n    if (isDomainAxis) {\n        range = DatasetUtilities.findDomainBounds(dataset);\n    } else {\n        range = DatasetUtilities.findRangeBounds(dataset);\n    }\n    return getCombinedRange(existingRange, range);\n}",
    "patch_diff": "diff --git a/source/org/jfree/chart/plot/XYPlot.java b/source/org/jfree/chart/plot/XYPlot.java\nindex ec26162..1f378bd 100644\n--- a/source/org/jfree/chart/plot/XYPlot.java\n+++ b/source/org/jfree/chart/plot/XYPlot.java\n@@ -4422,101 +4422,104 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,\n      *\n      * @return The range.\n      */\n-    public Range getDataRange(ValueAxis axis) {\n-\n-        Range result = null;\n-        List mappedDatasets = new ArrayList();\n-        List includedAnnotations = new ArrayList();\n-        boolean isDomainAxis = true;\n-\n-        // is it a domain axis?\n-        int domainIndex = getDomainAxisIndex(axis);\n-        if (domainIndex >= 0) {\n-            isDomainAxis = true;\n-            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(\n-                    new Integer(domainIndex)));\n-            if (domainIndex == 0) {\n-                // grab the plot's annotations\n-                Iterator iterator = this.annotations.iterator();\n-                while (iterator.hasNext()) {\n-                    XYAnnotation annotation = (XYAnnotation) iterator.next();\n-                    if (annotation instanceof XYAnnotationBoundsInfo) {\n-                        includedAnnotations.add(annotation);\n-                    }\n-                }\n-            }\n-        }\n-\n-        // or is it a range axis?\n-        int rangeIndex = getRangeAxisIndex(axis);\n-        if (rangeIndex >= 0) {\n-            isDomainAxis = false;\n-            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(\n-                    new Integer(rangeIndex)));\n-            if (rangeIndex == 0) {\n-                Iterator iterator = this.annotations.iterator();\n-                while (iterator.hasNext()) {\n-                    XYAnnotation annotation = (XYAnnotation) iterator.next();\n-                    if (annotation instanceof XYAnnotationBoundsInfo) {\n-                        includedAnnotations.add(annotation);\n-                    }\n-                }\n-            }\n-        }\n-\n-        // iterate through the datasets that map to the axis and get the union\n-        // of the ranges.\n-        Iterator iterator = mappedDatasets.iterator();\n-        while (iterator.hasNext()) {\n-            XYDataset d = (XYDataset) iterator.next();\n-            if (d != null) {\n-                XYItemRenderer r = getRendererForDataset(d);\n-                if (isDomainAxis) {\n-                    if (r != null) {\n-                        result = Range.combine(result, r.findDomainBounds(d));\n-                    }\n-                    else {\n-                        result = Range.combine(result,\n-                                DatasetUtilities.findDomainBounds(d));\n-                    }\n-                }\n-                else {\n-                    if (r != null) {\n-                        result = Range.combine(result, r.findRangeBounds(d));\n-                    }\n-                    else {\n-                        result = Range.combine(result,\n-                                DatasetUtilities.findRangeBounds(d));\n-                    }\n-                }\n-                \n-                    Collection c = r.getAnnotations();\n-                    Iterator i = c.iterator();\n-                    while (i.hasNext()) {\n-                        XYAnnotation a = (XYAnnotation) i.next();\n-                        if (a instanceof XYAnnotationBoundsInfo) {\n-                            includedAnnotations.add(a);\n-                        }\n-                    }\n-            }\n-        }\n-\n-        Iterator it = includedAnnotations.iterator();\n-        while (it.hasNext()) {\n-            XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();\n-            if (xyabi.getIncludeInDataBounds()) {\n-                if (isDomainAxis) {\n-                    result = Range.combine(result, xyabi.getXRange());\n-                }\n-                else {\n-                    result = Range.combine(result, xyabi.getYRange());\n-                }\n-            }\n-        }\n-\n-        return result;\n-\n-    }\n+public Range getDataRange(ValueAxis axis) {\n+    Range result = null;\n+    List<XYDataset> mappedDatasets = new ArrayList<>();\n+    List<XYAnnotationBoundsInfo> includedAnnotations = new ArrayList<>();\n+    boolean isDomainAxis = true;\n+    int domainIndex = getDomainAxisIndex(axis);\n+    int rangeIndex = getRangeAxisIndex(axis);\n+\n+    // is it a domain axis?\n+    if (domainIndex >= 0) {\n+        isDomainAxis = true;\n+        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(domainIndex));\n+        if (domainIndex == 0) {\n+            // grab the plot's annotations\n+            if (annotations != null) {\n+                for (Object obj : annotations) {\n+                    if (obj instanceof XYAnnotationBoundsInfo) {\n+                        includedAnnotations.add((XYAnnotationBoundsInfo) obj);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    // or is it a range axis?\n+    if (rangeIndex >= 0) {\n+        isDomainAxis = false;\n+        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(rangeIndex));\n+        if (rangeIndex == 0) {\n+            if (annotations != null) {\n+                for (Object obj : annotations) {\n+                    if (obj instanceof XYAnnotationBoundsInfo) {\n+                        includedAnnotations.add((XYAnnotationBoundsInfo) obj);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    // iterate through the datasets that map to the axis and get the union of the ranges.\n+    for (XYDataset dataset : mappedDatasets) {\n+        XYItemRenderer renderer = getRendererForDataset(dataset);\n+        if (renderer != null) {\n+            result = getCombinedRange(result, renderer, dataset, isDomainAxis);\n+            Collection<XYAnnotation> annotations = renderer.getAnnotations();\n+            if (annotations != null) {\n+                for (XYAnnotation annotation : annotations) {\n+                    if (annotation instanceof XYAnnotationBoundsInfo) {\n+                        includedAnnotations.add((XYAnnotationBoundsInfo) annotation);\n+                    }\n+                }\n+            }\n+        } else {\n+            result = getCombinedRange(result, dataset, isDomainAxis);\n+        }\n+    }\n+\n+    // combine the ranges of the included annotations\n+    for (XYAnnotationBoundsInfo annotation : includedAnnotations) {\n+        if (annotation.getIncludeInDataBounds()) {\n+            if (isDomainAxis) {\n+                result = getCombinedRange(result, annotation.getXRange());\n+            } else {\n+                result = getCombinedRange(result, annotation.getYRange());\n+            }\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+private Range getCombinedRange(Range existingRange, Range newRange) {\n+    if (existingRange == null) {\n+        return newRange;\n+    } else {\n+        return Range.combine(existingRange, newRange);\n+    }\n+}\n+\n+private Range getCombinedRange(Range existingRange, XYItemRenderer renderer, XYDataset dataset, boolean isDomainAxis) {\n+    if (isDomainAxis) {\n+        Range range = renderer.findDomainBounds(dataset);\n+        return getCombinedRange(existingRange, range);\n+    } else {\n+        Range range = renderer.findRangeBounds(dataset);\n+        return getCombinedRange(existingRange, range);\n+    }\n+}\n+\n+private Range getCombinedRange(Range existingRange, XYDataset dataset, boolean isDomainAxis) {\n+    Range range;\n+    if (isDomainAxis) {\n+        range = DatasetUtilities.findDomainBounds(dataset);\n+    } else {\n+        range = DatasetUtilities.findRangeBounds(dataset);\n+    }\n+    return getCombinedRange(existingRange, range);\n+}\n \n     /**\n      * Receives notification of a change to the plot's dataset.",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}