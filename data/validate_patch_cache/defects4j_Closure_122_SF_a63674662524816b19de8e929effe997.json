{
    "patch": "private void handleBlockComment(Comment comment) {\n    String commentValue = comment.getValue().trim();\n    if (commentValue.startsWith(\"/*\")) {\n        commentValue = commentValue.substring(2);\n        if (commentValue.contains(\"@\")) {\n            errorReporter.warning(\n              SUSPICIOUS_COMMENT_WARNING,\n              sourceName,\n              comment.getLineno(), \"\", 0);\n            return;\n        }\n        while (comment.getLineno() == comment.getEndLine() && commentValue.endsWith(\"*/\")) {\n            commentValue = commentValue.substring(0, commentValue.length() - 2);\n            comment = comment.getNext();\n        }\n        if (commentValue.contains(\"@\")) {\n            errorReporter.warning(\n              SUSPICIOUS_COMMENT_WARNING,\n              sourceName,\n              comment.getLineno(), \"\", 0);\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..67ec130e 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -248,14 +248,29 @@ class IRFactory {\n   /**\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n-  private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n-      errorReporter.warning(\n-          SUSPICIOUS_COMMENT_WARNING,\n-          sourceName,\n-          comment.getLineno(), \"\", 0);\n+private void handleBlockComment(Comment comment) {\n+    String commentValue = comment.getValue().trim();\n+    if (commentValue.startsWith(\"/*\")) {\n+        commentValue = commentValue.substring(2);\n+        if (commentValue.contains(\"@\")) {\n+            errorReporter.warning(\n+              SUSPICIOUS_COMMENT_WARNING,\n+              sourceName,\n+              comment.getLineno(), \"\", 0);\n+            return;\n+        }\n+        while (comment.getLineno() == comment.getEndLine() && commentValue.endsWith(\"*/\")) {\n+            commentValue = commentValue.substring(0, commentValue.length() - 2);\n+            comment = comment.getNext();\n+        }\n+        if (commentValue.contains(\"@\")) {\n+            errorReporter.warning(\n+              SUSPICIOUS_COMMENT_WARNING,\n+              sourceName,\n+              comment.getLineno(), \"\", 0);\n+        }\n     }\n-  }\n+}\n \n   /**\n    * @return true if the jsDocParser represents a fileoverview.",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}