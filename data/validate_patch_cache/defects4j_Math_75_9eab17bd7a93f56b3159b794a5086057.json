{
    "patch": "public double percentageValue() {\n    return multiply(BigDecimal.valueOf(100)).doubleValue();\n}\n\npublic double getPct(Object v) {\n    if (v instanceof Comparable) {\n        return getCumPct((Comparable<?>) v);\n    }\n    return 0.0;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..8b9322bc6 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,8 +300,17 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n+public double percentageValue() {\n+    return multiply(BigDecimal.valueOf(100)).doubleValue();\n+}\n+\n+public double getPct(Object v) {\n+    if (v instanceof Comparable) {\n         return getCumPct((Comparable<?>) v);\n     }\n+    return 0.0;\n+}\n+    }\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}