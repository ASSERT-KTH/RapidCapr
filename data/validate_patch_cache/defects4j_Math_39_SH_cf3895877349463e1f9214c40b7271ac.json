{
    "patch": "// update step size if it overshoots the final time\nif (forward && (stepStart + stepSize) > t) {\n    stepSize = t - stepStart;\n    hNew = stepSize;\n} else if (!forward && (stepStart + stepSize) < t) {\n    stepSize = t - stepStart;\n    hNew = stepSize;\n}\n\n// next stages...",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..c60c42491 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,16 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+// update step size if it overshoots the final time\n+if (forward && (stepStart + stepSize) > t) {\n+    stepSize = t - stepStart;\n+    hNew = stepSize;\n+} else if (!forward && (stepStart + stepSize) < t) {\n+    stepSize = t - stepStart;\n+    hNew = stepSize;\n+}\n+\n+// next stages...\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}