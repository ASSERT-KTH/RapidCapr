{
    "patch": "private static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n    if (NodeUtil.isExprCall(parent) && node.getFirstChild() != null\n            && node.getFirstChild().getType() == Token.GETPROP) {\n      Node callee = node.getFirstChild();\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName) && callee.getNext() != null\n              && callee.getNext().isString()) {\n        return callee.getNext().getString();\n      }\n    }\n    return null;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ClosureCodingConvention.java b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\nindex c507c924..68646cdf 100644\n--- a/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n+++ b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n@@ -184,7 +184,6 @@ public class ClosureCodingConvention extends DefaultCodingConvention {\n   public String extractClassNameIfRequire(Node node, Node parent){\n     return extractClassNameIfGoog(node, parent, \"goog.require\");\n   }\n-\n   private static String extractClassNameIfGoog(Node node, Node parent,\n       String functionName){\n     String className = null;\n@@ -194,7 +193,18 @@ public class ClosureCodingConvention extends DefaultCodingConvention {\n         String qualifiedName = callee.getQualifiedName();\n         if (functionName.equals(qualifiedName)) {\n           Node target = callee.getNext();\n-          if (target != null) {\n+private static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n+    if (NodeUtil.isExprCall(parent) && node.getFirstChild() != null\n+            && node.getFirstChild().getType() == Token.GETPROP) {\n+      Node callee = node.getFirstChild();\n+      String qualifiedName = callee.getQualifiedName();\n+      if (functionName.equals(qualifiedName) && callee.getNext() != null\n+              && callee.getNext().isString()) {\n+        return callee.getNext().getString();\n+      }\n+    }\n+    return null;\n+}\n             className = target.getString();\n           }\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}