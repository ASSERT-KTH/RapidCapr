{
    "patch": "        if (offsetLocal >= 0 && offsetAdjusted >= 0) {\n            return offsetAdjusted;\n        } else if (offsetLocal < 0 && offsetAdjusted < 0) {\n            long prevTransition = previousTransition(instantAdjusted);\n            if (prevTransition < instantAdjusted) {\n                int offsetPrevTransition = getOffset(prevTransition);\n                if (offsetLocal == offsetPrevTransition) {\n                    return offsetLocal;\n                }\n                long prevTransitionLocal = prevTransition + offsetPrevTransition;\n                if (instantLocal - prevTransitionLocal < offsetLocal - offsetPrevTransition) {\n                    return offsetPrevTransition;\n                } else {\n                    return offsetLocal;\n                }\n            } else {\n                return offsetLocal;\n            }\n        } else {\n            long nextTransition = nextTransition(instantAdjusted);\n            int offsetNextTransition = getOffset(nextTransition);\n            long nextTransitionLocal = nextTransition + offsetNextTransition;\n            if (instantLocal >= nextTransitionLocal) {\n                if (offsetNextTransition > offsetLocal) {\n                    return offsetNextTransition;\n                } else {\n                    return offsetLocal;\n                }\n            } else {\n                if (offsetLocal < 0) {\n                    long prevTransition = previousTransition(instantAdjusted);\n                    if (prevTransition < instantAdjusted) {\n                        int offsetPrevTransition = getOffset(prevTransition);\n                        long prevTransitionLocal = prevTransition + offsetPrevTransition;\n                        if (instantLocal - prevTransitionLocal >= offsetLocal - offsetPrevTransition) {\n                            return offsetLocal;\n                        } else {\n                            return offsetPrevTransition;\n                        }\n                    } else {\n                        return offsetLocal;\n                    }\n                } else {\n                    return offsetLocal;\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..3896302d 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,53 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+        if (offsetLocal >= 0 && offsetAdjusted >= 0) {\n+            return offsetAdjusted;\n+        } else if (offsetLocal < 0 && offsetAdjusted < 0) {\n+            long prevTransition = previousTransition(instantAdjusted);\n+            if (prevTransition < instantAdjusted) {\n+                int offsetPrevTransition = getOffset(prevTransition);\n+                if (offsetLocal == offsetPrevTransition) {\n+                    return offsetLocal;\n+                }\n+                long prevTransitionLocal = prevTransition + offsetPrevTransition;\n+                if (instantLocal - prevTransitionLocal < offsetLocal - offsetPrevTransition) {\n+                    return offsetPrevTransition;\n+                } else {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                return offsetLocal;\n+            }\n+        } else {\n+            long nextTransition = nextTransition(instantAdjusted);\n+            int offsetNextTransition = getOffset(nextTransition);\n+            long nextTransitionLocal = nextTransition + offsetNextTransition;\n+            if (instantLocal >= nextTransitionLocal) {\n+                if (offsetNextTransition > offsetLocal) {\n+                    return offsetNextTransition;\n+                } else {\n+                    return offsetLocal;\n+                }\n+            } else {\n+                if (offsetLocal < 0) {\n+                    long prevTransition = previousTransition(instantAdjusted);\n+                    if (prevTransition < instantAdjusted) {\n+                        int offsetPrevTransition = getOffset(prevTransition);\n+                        long prevTransitionLocal = prevTransition + offsetPrevTransition;\n+                        if (instantLocal - prevTransitionLocal >= offsetLocal - offsetPrevTransition) {\n+                            return offsetLocal;\n+                        } else {\n+                            return offsetPrevTransition;\n+                        }\n+                    } else {\n+                        return offsetLocal;\n+                    }\n+                } else {\n+                    return offsetLocal;\n+                }\n+            }\n+        }\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}