{
    "patch": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          Set<String> declaredParameters = new HashSet<>(); // Keep track of declared parameters\n          for (Node astParameter : astParameters.children()) {\n            String paramName = astParameter.getString();\n            if (declaredParameters.contains(paramName)) {\n              compiler.report(JSError.make(\"Duplicate local variable declaration in parameter list: \" + paramName, astParameter));\n            } else {\n              declaredParameters.add(paramName); // Add parameter to declared parameters\n              if (jsDocParameter != null) {\n                defineSlot(astParameter, functionNode,\n                    jsDocParameter.getJSType(), true);\n                jsDocParameter = jsDocParameter.getNext();\n              } else {\n                defineSlot(astParameter, functionNode, null, true);\n              }\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 210bb66e..37578ba0 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1739,13 +1739,20 @@ final class TypedScopeCreator implements ScopeCreator {\n         Node jsDocParameters = functionType.getParametersNode();\n         if (jsDocParameters != null) {\n           Node jsDocParameter = jsDocParameters.getFirstChild();\n+          Set<String> declaredParameters = new HashSet<>(); // Keep track of declared parameters\n           for (Node astParameter : astParameters.children()) {\n-            if (jsDocParameter != null) {\n-              defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), true);\n-              jsDocParameter = jsDocParameter.getNext();\n+            String paramName = astParameter.getString();\n+            if (declaredParameters.contains(paramName)) {\n+              compiler.report(JSError.make(\"Duplicate local variable declaration in parameter list: \" + paramName, astParameter));\n             } else {\n-              defineSlot(astParameter, functionNode, null, true);\n+              declaredParameters.add(paramName); // Add parameter to declared parameters\n+              if (jsDocParameter != null) {\n+                defineSlot(astParameter, functionNode,\n+                    jsDocParameter.getJSType(), true);\n+                jsDocParameter = jsDocParameter.getNext();\n+              } else {\n+                defineSlot(astParameter, functionNode, null, true);\n+              }\n             }\n           }\n         }",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}