{
    "patch": "        if (start == end) {\n            if (chars != null) {\n                throw new IllegalArgumentException(\"bound must be greater than start when chars != null\");\n            } else {\n                end = Character.MAX_CODE_POINT;\n            }\n        } else if (start > end) {\n            int tmp = start;\n            start = end;\n            end = tmp;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..34d3c3c7 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,17 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+        if (start == end) {\n+            if (chars != null) {\n+                throw new IllegalArgumentException(\"bound must be greater than start when chars != null\");\n+            } else {\n+                end = Character.MAX_CODE_POINT;\n+            }\n+        } else if (start > end) {\n+            int tmp = start;\n+            start = end;\n+            end = tmp;\n+        }\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "junit.framework.AssertionFailedError: Message (bound must be positive) must contain 'start'",
    "test_result": "FAIL"
}