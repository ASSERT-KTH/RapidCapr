{
    "patch": "static boolean isSimpleNumber(String s) {\n  int len = s.length();\n  // Check for octal numbers\n  if (len > 1 && s.charAt(0) == '0') {\n    for (int i = 1; i < len; i++) {\n      char c = s.charAt(i);\n      if (c < '0' || c > '7') {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    for (int index = 0; index < len; index++) {\n      char c = s.charAt(index);\n      if (!Character.isDigit(c)) {\n        return false;\n      }\n    }\n    return len > 0;\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex ac6299d1..9d1ac493 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -733,17 +733,27 @@ class CodeGenerator {\n \n     cc.endSourceMapping(n);\n   }\n-\n-  static boolean isSimpleNumber(String s) {\n-    int len = s.length();\n+static boolean isSimpleNumber(String s) {\n+  int len = s.length();\n+  // Check for octal numbers\n+  if (len > 1 && s.charAt(0) == '0') {\n+    for (int i = 1; i < len; i++) {\n+      char c = s.charAt(i);\n+      if (c < '0' || c > '7') {\n+        return false;\n+      }\n+    }\n+    return true;\n+  } else {\n     for (int index = 0; index < len; index++) {\n       char c = s.charAt(index);\n-      if (c < '0' || c > '9') {\n+      if (!Character.isDigit(c)) {\n         return false;\n       }\n     }\n     return len > 0;\n   }\n+}\n \n   static double getSimpleNumber(String s) {\n     if (isSimpleNumber(s)) {",
    "result_reason": "junit.framework.ComparisonFailure: expected:<var x={[\"010\"]:1}> but was:<var x={[10]:1}>",
    "test_result": "FAIL"
}