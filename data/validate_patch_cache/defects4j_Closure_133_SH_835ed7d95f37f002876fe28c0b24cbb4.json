{
    "patch": "private String getRemainingJSDocLine() {\n    String res = stream.getRemainingJSDocLine();\n    String result;\n    if (res == null) {\n      result = null;\n    } else {\n      int badPos = res.indexOf('\\u0000');\n      if (badPos != -1) {\n        throw new IllegalStateException(\"Recorded bad position information\");\n      }\n      result = res;\n    }\n    return result;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..20528596 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2398,6 +2398,20 @@ public final class JsDocInfoParser {\n    */\n   private String getRemainingJSDocLine() {\n     String result = stream.getRemainingJSDocLine();\n+private String getRemainingJSDocLine() {\n+    String res = stream.getRemainingJSDocLine();\n+    String result;\n+    if (res == null) {\n+      result = null;\n+    } else {\n+      int badPos = res.indexOf('\\u0000');\n+      if (badPos != -1) {\n+        throw new IllegalStateException(\"Recorded bad position information\");\n+      }\n+      result = res;\n+    }\n+    return result;\n+  }\n     return result;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}