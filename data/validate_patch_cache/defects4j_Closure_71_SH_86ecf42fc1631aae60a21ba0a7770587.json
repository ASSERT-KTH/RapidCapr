{
    "patch": "      boolean isOverride = t.inGlobalScope() &&\n          parent.getType() == Token.ASSIGN &&\n          parent.getFirstChild() == getprop;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..5ac8395c 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -416,6 +416,8 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n       boolean isOverride = t.inGlobalScope() &&\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n+          parent.getType() == Token.ASSIGN &&\n+          parent.getFirstChild() == getprop;\n \n       // Find the lowest property defined on a class with visibility\n       // information.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}