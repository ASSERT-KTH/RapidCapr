{
    "patch": "double n1 = numerator * object.denominator;\ndouble n2 = object.numerator * denominator;\nif (n1 < n2) {\n    return -1;\n} else if (n1 > n2) {\n    return 1;\n} else {\n    double d1 = denominator * object.denominator;\n    double d2 = object.denominator * denominator;\n    if (d1 < d2) {\n        return -1;\n    } else if (d1 > d2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..8956a2d58 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,23 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+double n1 = numerator * object.denominator;\n+double n2 = object.numerator * denominator;\n+if (n1 < n2) {\n+    return -1;\n+} else if (n1 > n2) {\n+    return 1;\n+} else {\n+    double d1 = denominator * object.denominator;\n+    double d2 = object.denominator * denominator;\n+    if (d1 < d2) {\n+        return -1;\n+    } else if (d1 > d2) {\n+        return 1;\n+    } else {\n+        return 0;\n+    }\n+}\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}