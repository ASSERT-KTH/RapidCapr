{
    "patch": "        if (startIndex > endIndex) {\n            throw new IllegalArgumentException(\n                    \"Requires start on or before end.\");\n        }\n        boolean emptyRange = false;\n        if (startIndex < 0 && endIndex < 0) {\n            emptyRange = true; // both start and end periods are not in original series\n        } else if (startIndex < 0) {\n            startIndex = -(startIndex + 1);\n            if (startIndex == this.data.size()) {\n                emptyRange = true; // start is after last data item\n            }\n        } else if (endIndex < 0) { // end period is not in original series\n            endIndex = -(endIndex + 1); // this is first item AFTER end period\n            endIndex = endIndex - 1; // so this is last item BEFORE end\n        }\n        if (emptyRange) {\n            TimeSeries copy = (TimeSeries) super.clone();\n            copy.data = new ArrayList();\n            return copy;\n        } else {\n            return createCopy(startIndex, endIndex);\n        }",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 4067e3e..efce36f 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -941,7 +941,29 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             endIndex = -(endIndex + 1); // this is first item AFTER end period\n             endIndex = endIndex - 1;    // so this is last item BEFORE end\n         }\n-        if (endIndex < 0) {\n+        if (startIndex > endIndex) {\n+            throw new IllegalArgumentException(\n+                    \"Requires start on or before end.\");\n+        }\n+        boolean emptyRange = false;\n+        if (startIndex < 0 && endIndex < 0) {\n+            emptyRange = true; // both start and end periods are not in original series\n+        } else if (startIndex < 0) {\n+            startIndex = -(startIndex + 1);\n+            if (startIndex == this.data.size()) {\n+                emptyRange = true; // start is after last data item\n+            }\n+        } else if (endIndex < 0) { // end period is not in original series\n+            endIndex = -(endIndex + 1); // this is first item AFTER end period\n+            endIndex = endIndex - 1; // so this is last item BEFORE end\n+        }\n+        if (emptyRange) {\n+            TimeSeries copy = (TimeSeries) super.clone();\n+            copy.data = new ArrayList();\n+            return copy;\n+        } else {\n+            return createCopy(startIndex, endIndex);\n+        }\n             emptyRange = true;\n         }\n         if (emptyRange) {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}