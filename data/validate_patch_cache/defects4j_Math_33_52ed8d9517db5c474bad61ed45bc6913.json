{
    "patch": "        List<Integer> positiveColumns = new ArrayList<Integer>();\n        List<Integer> negativeColumns = new ArrayList<Integer>();\n        List<Integer> nonZeroColumns = new ArrayList<Integer>();\n        \n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            if (Math.abs(entry) < maxUlps) {\n                if (Math.abs(entry) > 0) {\n                    nonZeroColumns.add(i);\n                }\n            } else if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                positiveColumns.add(i);\n            } else {\n                negativeColumns.add(i);\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..84d66acc1 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -335,7 +335,22 @@ class SimplexTableau implements Serializable {\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+        List<Integer> positiveColumns = new ArrayList<Integer>();\n+        List<Integer> negativeColumns = new ArrayList<Integer>();\n+        List<Integer> nonZeroColumns = new ArrayList<Integer>();\n+        \n+        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n+            final double entry = tableau.getEntry(0, i);\n+            if (Math.abs(entry) < maxUlps) {\n+                if (Math.abs(entry) > 0) {\n+                    nonZeroColumns.add(i);\n+                }\n+            } else if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+                positiveColumns.add(i);\n+            } else {\n+                negativeColumns.add(i);\n+            }\n+        }\n                 columnsToDrop.add(i);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}