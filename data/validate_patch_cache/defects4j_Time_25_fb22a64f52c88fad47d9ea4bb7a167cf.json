{
    "patch": "if (offsetLocal > offsetAdjusted) {\n    long prev = previousTransition(instantAdjusted - offsetAdjusted);\n    if (prev < instantAdjusted - offsetLocal) {\n        return offsetLocal;\n    }\n} else if (offsetLocal < offsetAdjusted) {\n    long next = nextTransition(instantAdjusted - offsetAdjusted);\n    if (next <= instantAdjusted - offsetLocal) {\n        return offsetLocal;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..f3f6b2d4 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,17 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if (offsetLocal > offsetAdjusted) {\n+    long prev = previousTransition(instantAdjusted - offsetAdjusted);\n+    if (prev < instantAdjusted - offsetLocal) {\n+        return offsetLocal;\n+    }\n+} else if (offsetLocal < offsetAdjusted) {\n+    long next = nextTransition(instantAdjusted - offsetAdjusted);\n+    if (next <= instantAdjusted - offsetLocal) {\n+        return offsetLocal;\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<false> but was:<true>",
    "test_result": "FAIL"
}