{
    "patch": "if (nameNode.isQualifiedName()) {\n    Node root = AstUtils.getRootOfQualifiedName(nameNode);\n    if (root != null && root.isName()) {\n        String rootName = root.getString();\n        if (rootName.equals(\"Math\") || \n            rootName.equals(\"console\") || \n            rootName.equals(\"JSON\")) {\n            return false;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..296cb3b0 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,17 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.isQualifiedName()) {\n+    Node root = AstUtils.getRootOfQualifiedName(nameNode);\n+    if (root != null && root.isName()) {\n+        String rootName = root.getString();\n+        if (rootName.equals(\"Math\") || \n+            rootName.equals(\"console\") || \n+            rootName.equals(\"JSON\")) {\n+            return false;\n+        }\n+    }\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}