{
    "patch": "case REGULA_FALSI:\n    if (maximalEvaluations <= 0) {\n        throw new ConvergenceException(\n                LocalizedFormats.CONVERGENCE_FAILED,\n                getMaximalEvaluations());\n    } else {\n        // Detect early that algorithm is stuck, instead of waiting\n        // for the maximum number of iterations to be exceeded.\n        --maximalEvaluations;\n    }\n    break;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\nindex 8a667dad3..afcfe70c2 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\n@@ -186,6 +186,17 @@ public abstract class BaseSecantSolver\n                 case REGULA_FALSI:\n                     // Detect early that algorithm is stuck, instead of waiting\n                     // for the maximum number of iterations to be exceeded.\n+case REGULA_FALSI:\n+    if (maximalEvaluations <= 0) {\n+        throw new ConvergenceException(\n+                LocalizedFormats.CONVERGENCE_FAILED,\n+                getMaximalEvaluations());\n+    } else {\n+        // Detect early that algorithm is stuck, instead of waiting\n+        // for the maximum number of iterations to be exceeded.\n+        --maximalEvaluations;\n+    }\n+    break;\n                     break;\n                 default:\n                     // Should never happen.",
    "result_reason": "error: duplicate case label",
    "test_result": "ERROR"
}