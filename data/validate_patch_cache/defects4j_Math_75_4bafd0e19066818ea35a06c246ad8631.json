{
    "patch": "        if (contains(v)) {\n            int idx = Collections.binarySearch(data, v);\n            if (idx >= 0) {\n                return (idx + 1) / (double) data.size();\n            } else {\n                return -(idx + 1) / (double) data.size();\n            }\n        }\n        return Double.NaN;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..e2f559c1b 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,15 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+        if (contains(v)) {\n+            int idx = Collections.binarySearch(data, v);\n+            if (idx >= 0) {\n+                return (idx + 1) / (double) data.size();\n+            } else {\n+                return -(idx + 1) / (double) data.size();\n+            }\n+        }\n+        return Double.NaN;\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}