{
    "patch": "if (offsetLocal == offsetAdjusted) {\n    return offsetLocal;\n} else if ((offsetLocal >= 0 && offsetAdjusted >= 0) || (offsetLocal < 0 && offsetAdjusted < 0 && offsetLocal - offsetAdjusted >= 0)) {\n    // we must be near a DST boundary\n    if (offsetLocal - offsetAdjusted < 0) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            return offsetLocal;\n        }\n    } else if (offsetLocal - offsetAdjusted > 1) {\n        long prevLocal = previousTransition(instantAdjusted);\n        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n        if (prevLocal < instantAdjusted && prevLocal != prevAdjusted) {\n            return getOffset(prevLocal);\n        }\n    }\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex 855cad05..552ab1ac 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -897,7 +897,25 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n-        } else if (offsetLocal > 0) {\n+if (offsetLocal == offsetAdjusted) {\n+    return offsetLocal;\n+} else if ((offsetLocal >= 0 && offsetAdjusted >= 0) || (offsetLocal < 0 && offsetAdjusted < 0 && offsetLocal - offsetAdjusted >= 0)) {\n+    // we must be near a DST boundary\n+    if (offsetLocal - offsetAdjusted < 0) {\n+        long nextLocal = nextTransition(instantAdjusted);\n+        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n+        if (nextLocal != nextAdjusted) {\n+            return offsetLocal;\n+        }\n+    } else if (offsetLocal - offsetAdjusted > 1) {\n+        long prevLocal = previousTransition(instantAdjusted);\n+        long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+        if (prevLocal < instantAdjusted && prevLocal != prevAdjusted) {\n+            return getOffset(prevLocal);\n+        }\n+    }\n+}\n+return offsetAdjusted;\n             long prev = previousTransition(instantAdjusted);\n             if (prev < instantAdjusted) {\n                 int offsetPrev = getOffset(prev);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}