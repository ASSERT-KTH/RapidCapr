{
    "patch": "        final AbstractCurveFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer())\n                .withStartPoint(guess)\n                .withMaxIterations(1000)\n                .withConvergenceChecker(new SimpleVectorValueChecker(1e-15, 1e-15));\n        return fitter.fit(getObservations(), guess);",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..fb3547be9 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,11 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final AbstractCurveFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer())\n+                .withStartPoint(guess)\n+                .withMaxIterations(1000)\n+                .withConvergenceChecker(new SimpleVectorValueChecker(1e-15, 1e-15));\n+        return fitter.fit(getObservations(), guess);\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}