{
    "patch": "        // Maybe STRING, GET, SET\n        if (!child.isString()) {\n          // We can't rename dynamic property accesses.\n          continue;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b34921ed..cff5683e 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,6 +492,11 @@ class DisambiguateProperties<T> implements CompilerPass {\n           child != null;\n           child = child.getNext()) {\n         // Maybe STRING, GET, SET\n+        // Maybe STRING, GET, SET\n+        if (!child.isString()) {\n+          // We can't rename dynamic property accesses.\n+          continue;\n+        }\n \n         // We should never see a mix of numbers and strings.\n         String name = child.getString();",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}