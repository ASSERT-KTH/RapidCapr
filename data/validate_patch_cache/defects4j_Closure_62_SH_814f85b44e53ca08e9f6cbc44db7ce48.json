{
    "patch": "if (excerpt.equals(LINE)) {\n  int excerptLength = sourceExcerpt.length();\n  // adjust excerpt length by adding the number of end of line characters\n  if (excerptLength > 0 && sourceExcerpt.charAt(excerptLength - 1) == '\\n') {\n    excerptLength--;\n    if (excerptLength > 0 && sourceExcerpt.charAt(excerptLength - 1) == '\\r') {\n      excerptLength--;\n    }\n  }\n\n  if (charno >= 0 && charno <= excerptLength) {\n    for (int i = 0; i < charno; i++) {\n      char c = sourceExcerpt.charAt(i);\n      if (Character.isWhitespace(c)) {\n        b.append(c);\n      } else {\n        b.append(' ');\n      }\n    }\n    b.append(\"^\\n\");\n  }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 5a4f884c..cb2878c4 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,28 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+if (excerpt.equals(LINE)) {\n+  int excerptLength = sourceExcerpt.length();\n+  // adjust excerpt length by adding the number of end of line characters\n+  if (excerptLength > 0 && sourceExcerpt.charAt(excerptLength - 1) == '\\n') {\n+    excerptLength--;\n+    if (excerptLength > 0 && sourceExcerpt.charAt(excerptLength - 1) == '\\r') {\n+      excerptLength--;\n+    }\n+  }\n+\n+  if (charno >= 0 && charno <= excerptLength) {\n+    for (int i = 0; i < charno; i++) {\n+      char c = sourceExcerpt.charAt(i);\n+      if (Character.isWhitespace(c)) {\n+        b.append(c);\n+      } else {\n+        b.append(' ');\n+      }\n+    }\n+    b.append(\"^\\n\");\n+  }\n+}\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}