{
    "patch": "        final double[] fittedParams = new double[guess.length];\n        final LeastSquaresOptimizer.Optimum optimum = fitter.fit(new Gaussian.Parametric(), guess, getObservations(), null, null);\n        for (int i = 0; i < fittedParams.length; i++) {\n            fittedParams[i] = optimum.getPoint().getEntry(i);\n        }\n        return fittedParams;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..d5f236d8d 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,12 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        final double[] fittedParams = new double[guess.length];\n+        final LeastSquaresOptimizer.Optimum optimum = fitter.fit(new Gaussian.Parametric(), guess, getObservations(), null, null);\n+        for (int i = 0; i < fittedParams.length; i++) {\n+            fittedParams[i] = optimum.getPoint().getEntry(i);\n+        }\n+        return fittedParams;\n     }\n \n     /**",
    "result_reason": "error: package LeastSquaresOptimizer does not exist",
    "test_result": "ERROR"
}