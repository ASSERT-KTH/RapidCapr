{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent.getParent() != null && parent.getParent().getType() == Token.ASSIGN &&\n          parent.getParent().getLastChild() != null &&\n          parent.getParent().getLastChild().getType() == Token.OBJECTLIT &&\n          parent.getParent().getLastChild().hasOneChild() &&\n          parent.getParent().getLastChild().getFirstChild().getType() == Token.STRING &&\n          \"prototype\".equals(parent.getParent().getLastChild().getFirstChild().getString()) &&\n          parent.getFirstChild() == parent.getParent().getFirstChild()) {\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..25f9883f 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,16 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent.getParent() != null && parent.getParent().getType() == Token.ASSIGN &&\n+          parent.getParent().getLastChild() != null &&\n+          parent.getParent().getLastChild().getType() == Token.OBJECTLIT &&\n+          parent.getParent().getLastChild().hasOneChild() &&\n+          parent.getParent().getLastChild().getFirstChild().getType() == Token.STRING &&\n+          \"prototype\".equals(parent.getParent().getLastChild().getFirstChild().getString()) &&\n+          parent.getFirstChild() == parent.getParent().getFirstChild()) {\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>",
    "test_result": "FAIL"
}