{
    "patch": "JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);\nif (resolvedTypeOfThis == null) {\n    // if type of \"this\" did not resolve to anything, set it to UNKNOWN_TYPE\n    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n} else if (resolvedTypeOfThis instanceof ObjectType) {\n    // if type of \"this\" resolved to an ObjectType, use it\n    typeOfThis = (ObjectType) resolvedTypeOfThis;\n} else if (resolvedTypeOfThis.isNamedType()) {\n    // if type of \"this\" resolved to a NamedType, use the referenced type if its an ObjectType\n    JSType referencedType = ((NamedType) resolvedTypeOfThis).getReferencedType();\n    if (referencedType instanceof ObjectType) {\n        typeOfThis = (ObjectType) referencedType;\n    } else {\n        typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n    }\n} else {\n    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex fc2578d8..3c79d1bb 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -868,7 +868,24 @@ public class FunctionType extends PrototypeObjectType {\n     // Warning about typeOfThis if it doesn't resolve to an ObjectType\n     // is handled further upstream.\n     // TODO(nicksantos): Handle this correctly if we have a UnionType.\n-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);\n+JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);\n+if (resolvedTypeOfThis == null) {\n+    // if type of \"this\" did not resolve to anything, set it to UNKNOWN_TYPE\n+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n+} else if (resolvedTypeOfThis instanceof ObjectType) {\n+    // if type of \"this\" resolved to an ObjectType, use it\n+    typeOfThis = (ObjectType) resolvedTypeOfThis;\n+} else if (resolvedTypeOfThis.isNamedType()) {\n+    // if type of \"this\" resolved to a NamedType, use the referenced type if its an ObjectType\n+    JSType referencedType = ((NamedType) resolvedTypeOfThis).getReferencedType();\n+    if (referencedType instanceof ObjectType) {\n+        typeOfThis = (ObjectType) referencedType;\n+    } else {\n+        typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n+    }\n+} else {\n+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);\n+}\n \n     boolean changed = false;\n     ImmutableList.Builder<ObjectType> resolvedInterfaces =",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}