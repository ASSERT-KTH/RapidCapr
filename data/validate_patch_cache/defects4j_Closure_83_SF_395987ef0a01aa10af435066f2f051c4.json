{
    "patch": "public int parseArguments(Parameters params) throws CmdLineException {\n    String param = params.getParameter(0);\n\n    if (param == null) {\n        setter.addValue(true);\n        return 1;\n    } else {\n        String lowerParam = param.toLowerCase();\n        if (TRUES.contains(lowerParam)) {\n        setter.addValue(true);\n        } else if (FALSES.contains(lowerParam)) {\n        setter.addValue(false);\n        } else {\n            throw new CmdLineException(owner, new Localizable() {\n                public String formatWithLocale(Locale locale, Object... args) {\n                    return format(args);\n                }\n\n                public String format(Object... args) {\n                    return Messages.ERR_ILLEGAL_BOOLEAN.format(param).format(args);\n                }\n\n                public String getKey() {\n                    return Messages.ERR_ILLEGAL_BOOLEAN.getKey();\n                }\n            });\n        }\n    } \n    return 1; // return if either of the true false value used.\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..6dbadf52 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -330,25 +330,36 @@ public class CommandLineRunner extends\n       }\n \n       @Override\n-      public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+public int parseArguments(Parameters params) throws CmdLineException {\n+    String param = params.getParameter(0);\n \n-        if (param == null) {\n-          setter.addValue(true);\n-          return 0;\n+    if (param == null) {\n+        setter.addValue(true);\n+        return 1;\n+    } else {\n+        String lowerParam = param.toLowerCase();\n+        if (TRUES.contains(lowerParam)) {\n+        setter.addValue(true);\n+        } else if (FALSES.contains(lowerParam)) {\n+        setter.addValue(false);\n         } else {\n-          String lowerParam = param.toLowerCase();\n-          if (TRUES.contains(lowerParam)) {\n-            setter.addValue(true);\n-          } else if (FALSES.contains(lowerParam)) {\n-            setter.addValue(false);\n-          } else {\n-            setter.addValue(true);\n-            return 0;\n-          }\n-          return 1;\n+            throw new CmdLineException(owner, new Localizable() {\n+                public String formatWithLocale(Locale locale, Object... args) {\n+                    return format(args);\n+                }\n+\n+                public String format(Object... args) {\n+                    return Messages.ERR_ILLEGAL_BOOLEAN.format(param).format(args);\n+                }\n+\n+                public String getKey() {\n+                    return Messages.ERR_ILLEGAL_BOOLEAN.getKey();\n+                }\n+            });\n         }\n-      }\n+    } \n+    return 1; // return if either of the true false value used.\n+}\n \n       @Override\n       public String getDefaultMetaVariable() {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}