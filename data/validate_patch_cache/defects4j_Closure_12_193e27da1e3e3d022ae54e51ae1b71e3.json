{
    "patch": "private boolean hasExceptionHandler(Node cfgNode) {\n   for (CfgEdge edge : cfgNode.getOutgoingEdges()) {\n      if (edge.isExceptionEdge()) {\n          return true;\n      }\n   }\n   return false;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..044fb48f 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -155,8 +155,15 @@ class MaybeReachingVariableUse extends\n \n     return output;\n   }\n-\n   private boolean hasExceptionHandler(Node cfgNode) {\n+private boolean hasExceptionHandler(Node cfgNode) {\n+   for (CfgEdge edge : cfgNode.getOutgoingEdges()) {\n+      if (edge.isExceptionEdge()) {\n+          return true;\n+      }\n+   }\n+   return false;\n+}\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}