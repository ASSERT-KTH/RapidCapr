{
    "patch": "public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n            throws MaxIterationsExceededException, FunctionEvaluationException {\n        if (f == null) {\n            throw new NullPointerException(\"The function f cannot be null.\");\n        }\n        if (Double.isNaN(initial) || Double.isInfinite(initial)) {\n            throw new IllegalArgumentException(\"The initial value is invalid.\");\n        }\n        if (min > max) {\n            throw new IllegalArgumentException(\"The lower bound of the interval must be less than or equal to the upper bound.\");\n        }\n        double result;\n        try {\n            result = solve(f, min, max);\n        } catch (NullPointerException e) {\n            if (initial < min || initial > max) {\n                throw new IllegalArgumentException(\"The initial value is not within the given interval.\");\n            } else if (initial == min) {\n                result = solve(f, min, max, min + solver.getFunctionValueAccuracy());\n            } else if (initial == max) {\n                result = solve(f, min, max, max - solver.getFunctionValueAccuracy());\n            } else {\n                result = solve(f, min, max, initial);\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..8bc476ee7 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -67,9 +67,32 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     }\n \n     /** {@inheritDoc} */\n-    public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n-        throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n+            throws MaxIterationsExceededException, FunctionEvaluationException {\n+        if (f == null) {\n+            throw new NullPointerException(\"The function f cannot be null.\");\n+        }\n+        if (Double.isNaN(initial) || Double.isInfinite(initial)) {\n+            throw new IllegalArgumentException(\"The initial value is invalid.\");\n+        }\n+        if (min > max) {\n+            throw new IllegalArgumentException(\"The lower bound of the interval must be less than or equal to the upper bound.\");\n+        }\n+        double result;\n+        try {\n+            result = solve(f, min, max);\n+        } catch (NullPointerException e) {\n+            if (initial < min || initial > max) {\n+                throw new IllegalArgumentException(\"The initial value is not within the given interval.\");\n+            } else if (initial == min) {\n+                result = solve(f, min, max, min + solver.getFunctionValueAccuracy());\n+            } else if (initial == max) {\n+                result = solve(f, min, max, max - solver.getFunctionValueAccuracy());\n+            } else {\n+                result = solve(f, min, max, initial);\n+            }\n+        }\n+        return result;\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}