{
    "patch": "List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(cfgNode);\nfor (DiGraphEdge<Node, Branch> edge : branchEdges) {\n  if (edge.getValue() == Branch.ON_EX || edge.getValue() == Branch.ON_EX_UNCHECKED) {\n    return true;\n  }\n}\n// Add this statement to handle the case where there are no exception handlers.\nreturn false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..34f54fb1 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -169,7 +169,14 @@ class CollapseProperties implements CompilerPass {\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n+List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(cfgNode);\n+for (DiGraphEdge<Node, Branch> edge : branchEdges) {\n+  if (edge.getValue() == Branch.ON_EX || edge.getValue() == Branch.ON_EX_UNCHECKED) {\n+    return true;\n+  }\n+}\n+// Add this statement to handle the case where there are no exception handlers.\n+return false;\n           name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}