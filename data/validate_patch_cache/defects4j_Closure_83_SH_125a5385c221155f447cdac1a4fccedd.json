{
    "patch": "        String[] args = params.getParameter(0).split(\"=\");\n        String param = args[0];\n\n        if (args.length == 1) {\n            if (TRUES.contains(param.toLowerCase())) {\n                setter.addValue(true);\n            } else if (FALSES.contains(param.toLowerCase())) {\n                setter.addValue(false);\n            } else {\n                throw new CmdLineException(owner, \"Invalid argument: \" + param);\n            }\n        } else {\n            String value = args[1];\n            if (!SINGLE_VALUES.contains(param.toLowerCase())) {\n                throw new CmdLineException(owner, \"Invalid argument: \" + param);\n            }\n            try {\n                setter.addValue(value);\n            } catch (NumberFormatException ex) {\n                throw new CmdLineException(owner, \"Invalid value for \" + param + \": \" + value);\n            }\n        }\n        return args.length;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..130a09f9 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,29 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+        String[] args = params.getParameter(0).split(\"=\");\n+        String param = args[0];\n+\n+        if (args.length == 1) {\n+            if (TRUES.contains(param.toLowerCase())) {\n+                setter.addValue(true);\n+            } else if (FALSES.contains(param.toLowerCase())) {\n+                setter.addValue(false);\n+            } else {\n+                throw new CmdLineException(owner, \"Invalid argument: \" + param);\n+            }\n+        } else {\n+            String value = args[1];\n+            if (!SINGLE_VALUES.contains(param.toLowerCase())) {\n+                throw new CmdLineException(owner, \"Invalid argument: \" + param);\n+            }\n+            try {\n+                setter.addValue(value);\n+            } catch (NumberFormatException ex) {\n+                throw new CmdLineException(owner, \"Invalid value for \" + param + \": \" + value);\n+            }\n+        }\n+        return args.length;\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: no suitable constructor found for CmdLineException(CmdLineParser,String)",
    "test_result": "ERROR"
}