{
    "patch": "switch (value.getType()) {\n    case Token.NEW:\n    case Token.THIS:\n    case Token.NAME:\n    case Token.GETELEM:\n    case Token.GETPROP:\n        return isImmutableValue(value) || locals.apply(value);\n    case Token.CALL:\n        return callHasLocalResult(value)\n                || isToStringMethodCall(value)\n                || locals.apply(valu",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex dd78f900..ed7fd5f9 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -2462,7 +2462,17 @@ public final class NodeUtil {\n         // TODO(nicksantos): This needs to be changed so that it\n         // returns true iff we're sure the value was never aliased from inside\n         // the constructor (similar to callHasLocalResult)\n-        return true;\n+switch (value.getType()) {\n+    case Token.NEW:\n+    case Token.THIS:\n+    case Token.NAME:\n+    case Token.GETELEM:\n+    case Token.GETPROP:\n+        return isImmutableValue(value) || locals.apply(value);\n+    case Token.CALL:\n+        return callHasLocalResult(value)\n+                || isToStringMethodCall(value)\n+                || locals.apply(valu\n       case Token.FUNCTION:\n       case Token.REGEXP:\n       case Token.ARRAYLIT:",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}