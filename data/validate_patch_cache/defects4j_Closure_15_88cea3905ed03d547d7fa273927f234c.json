{
    "patch": "        if (n.isHook()) {\n          Node hookTrueNode = n.getFirstChild();\n          Node hookFalseNode = hookTrueNode.getNext();\n          if (apply(hookTrueNode) || apply(hookFalseNode)) {\n            return true;\n          }\n          return false;\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\nindex a8e92fcc..ac347637 100644\n--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java\n@@ -99,6 +99,14 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback\n           return true;\n         }\n \n+        if (n.isHook()) {\n+          Node hookTrueNode = n.getFirstChild();\n+          Node hookFalseNode = hookTrueNode.getNext();\n+          if (apply(hookTrueNode) || apply(hookFalseNode)) {\n+            return true;\n+          }\n+          return false;\n+        }\n \n         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}