{
    "patch": "Node grandparent = n.getAncestor(3);\nif (grandparent.isExprResult() && grandparent.getParent().isFunction()) {\n    grandparent.getParent().putBooleanProp(Node.FREE_CALL, true);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..f5a5da86 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,10 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+Node grandparent = n.getAncestor(3);\n+if (grandparent.isExprResult() && grandparent.getParent().isFunction()) {\n+    grandparent.getParent().putBooleanProp(Node.FREE_CALL, true);\n+}\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "java.lang.RuntimeException: INTERNAL COMPILER ERROR.",
    "test_result": "FAIL"
}