{
    "patch": "      List<Node> nodes = new ArrayList<>();\n      nodes.add(n);\n      while (!nodes.isEmpty()) {\n        Node curr = nodes.remove(0);\n        if (mayBeStringHelper(curr)) {\n          return true;\n        }\n        nodes.addAll(curr.children());\n      }\n      return false;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eef27927..d94851c8 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1411,10 +1411,18 @@ public final class NodeUtil {\n   static boolean mayBeString(Node n) {\n     return mayBeString(n, true);\n   }\n-\n   static boolean mayBeString(Node n, boolean recurse) {\n     if (recurse) {\n-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n+      List<Node> nodes = new ArrayList<>();\n+      nodes.add(n);\n+      while (!nodes.isEmpty()) {\n+        Node curr = nodes.remove(0);\n+        if (mayBeStringHelper(curr)) {\n+          return true;\n+        }\n+        nodes.addAll(curr.children());\n+      }\n+      return false;\n     } else {\n       return mayBeStringHelper(n);\n     }",
    "result_reason": "error: diamond operator is not supported in -source 1.6",
    "test_result": "ERROR"
}