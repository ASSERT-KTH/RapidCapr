{
    "patch": "    public static boolean toBoolean(String str) {\n        if (str == null) {\n            return false;\n        }\n        str = str.trim();\n        if (str.isEmpty()) {\n            return false;\n        }\n        if (str.length() <= 5) {\n            char ch0 = str.charAt(0), ch1 = str.charAt(1);\n            if (ch0 == 't' || ch0 == 'T') {\n                if (ch1 == 'r' || ch1 == 'R') {\n                    int len = str.length();\n                    if (len == 2) {\n                        return true;\n                    }\n                    if (len == 3) {\n                        return str.charAt(2) == 'u' || str.charAt(2) == 'U';\n                    }\n                    if (len == 4) {\n                        return str.charAt(2) == 'u' || str.charAt(2) == 'U'\n                            && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n                    }\n                }\n            } else if (ch0 == 'f' || ch0 == 'F') {\n                if (ch1 == 'a' || ch1 == 'A') {\n                    int len = str.length();\n                    if (len == 2) {\n                        return false;\n                    }\n                    if (len == 3) {\n                        return str.charAt(2) == 'l' || str.charAt(2) == 'L';\n                    }\n                    if (len == 4) {\n                        return str.charAt(2) == 'l' || str.charAt(2) == 'L'\n                            && (str.charAt(3) == 's' || str.charAt(3) == 'S');\n                    }\n                }\n            }\n        }\n        return false;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/BooleanUtils.java b/src/java/org/apache/commons/lang/BooleanUtils.java\nindex 3fda4ecc..f18d32ef 100644\n--- a/src/java/org/apache/commons/lang/BooleanUtils.java\n+++ b/src/java/org/apache/commons/lang/BooleanUtils.java\n@@ -679,6 +679,48 @@ public class BooleanUtils {\n                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                         (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                 }\n+    public static boolean toBoolean(String str) {\n+        if (str == null) {\n+            return false;\n+        }\n+        str = str.trim();\n+        if (str.isEmpty()) {\n+            return false;\n+        }\n+        if (str.length() <= 5) {\n+            char ch0 = str.charAt(0), ch1 = str.charAt(1);\n+            if (ch0 == 't' || ch0 == 'T') {\n+                if (ch1 == 'r' || ch1 == 'R') {\n+                    int len = str.length();\n+                    if (len == 2) {\n+                        return true;\n+                    }\n+                    if (len == 3) {\n+                        return str.charAt(2) == 'u' || str.charAt(2) == 'U';\n+                    }\n+                    if (len == 4) {\n+                        return str.charAt(2) == 'u' || str.charAt(2) == 'U'\n+                            && (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n+                    }\n+                }\n+            } else if (ch0 == 'f' || ch0 == 'F') {\n+                if (ch1 == 'a' || ch1 == 'A') {\n+                    int len = str.length();\n+                    if (len == 2) {\n+                        return false;\n+                    }\n+                    if (len == 3) {\n+                        return str.charAt(2) == 'l' || str.charAt(2) == 'L';\n+                    }\n+                    if (len == 4) {\n+                        return str.charAt(2) == 'l' || str.charAt(2) == 'L'\n+                            && (str.charAt(3) == 's' || str.charAt(3) == 'S');\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n             }\n             case 4: {\n                 char ch = str.charAt(0);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}