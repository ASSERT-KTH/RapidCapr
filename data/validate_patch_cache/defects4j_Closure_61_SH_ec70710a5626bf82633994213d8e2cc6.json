{
    "patch": "if (nameNode.getType() == Token.GETPROP) {\n    Node targetNode = nameNode.getFirstChild();\n    if (targetNode.getType() == Token.NAME && targetNode.getString().equals(\"Math\")) {\n        return false;\n    }\n    Node lastChild = nameNode.getLastChild();\n    if (lastChild.getType() == Token.STRING) {\n        String methodName = lastChild.getString();\n        if (OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(methodName)) {\n            return false;\n        }\n    }\n    if (lastChild.getType() == Token.NAME && lastChild.getString().equals(\"now\")) {\n        if (targetNode.getType() == Token.NAME && targetNode.getString().equals(\"Date\")) {\n            return false;\n        }\n    }\n    if (lastChild.getType() == Token.NAME && lastChild.getString().equals(\"setTimeout\")) {\n        if (targetNode.getType() == Token.NAME && targetNode.getString().equals(\"window\")) {\n            return false;\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 1844b18a..3e32fc03 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -955,6 +955,29 @@ public final class NodeUtil {\n       }\n \n       // Functions in the \"Math\" namespace have no side effects.\n+if (nameNode.getType() == Token.GETPROP) {\n+    Node targetNode = nameNode.getFirstChild();\n+    if (targetNode.getType() == Token.NAME && targetNode.getString().equals(\"Math\")) {\n+        return false;\n+    }\n+    Node lastChild = nameNode.getLastChild();\n+    if (lastChild.getType() == Token.STRING) {\n+        String methodName = lastChild.getString();\n+        if (OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(methodName)) {\n+            return false;\n+        }\n+    }\n+    if (lastChild.getType() == Token.NAME && lastChild.getString().equals(\"now\")) {\n+        if (targetNode.getType() == Token.NAME && targetNode.getString().equals(\"Date\")) {\n+            return false;\n+        }\n+    }\n+    if (lastChild.getType() == Token.NAME && lastChild.getString().equals(\"setTimeout\")) {\n+        if (targetNode.getType() == Token.NAME && targetNode.getString().equals(\"window\")) {\n+            return false;\n+        }\n+    }\n+}\n \n       if (compiler != null && !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() == Token.REGEXP",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}