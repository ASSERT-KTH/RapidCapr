{
    "patch": "private String getRemainingJSDocLine() {\n    while (true) {\n        String result = stream.getRemainingJSDocLine();\n        if (result != null) {\n            return result;\n        } else if (stream.peek() == null) {\n            return \"\";\n        } else { // Skip past any bad position information\n            stream.consume();\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex 6e3294b5..412d6366 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -2396,10 +2396,18 @@ public final class JsDocInfoParser {\n   /**\n    * Returns the remainder of the line.\n    */\n-  private String getRemainingJSDocLine() {\n-    String result = stream.getRemainingJSDocLine();\n-    return result;\n-  }\n+private String getRemainingJSDocLine() {\n+    while (true) {\n+        String result = stream.getRemainingJSDocLine();\n+        if (result != null) {\n+            return result;\n+        } else if (stream.peek() == null) {\n+            return \"\";\n+        } else { // Skip past any bad position information\n+            stream.consume();\n+        }\n+    }\n+}\n \n   /**\n    * Determines whether the parser has been populated with docinfo with a",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}