{
    "patch": "public Range getDataRange(ValueAxis axis) {\n    Range result = null;\n    List mappedDatasets = getDatasetsMappedToAxis(axis);\n    List includedAnnotations = getIncludedAnnotations(axis);\n    boolean isDomainAxis = isDomainAxis(axis);\n\n    // iterate through the datasets that map to the axis and get the union\n    // of the ranges.\n    for (XYDataset dataset : mappedDatasets) {\n        if (dataset != null) {\n            XYItemRenderer renderer = getRendererForDataset(dataset);\n            if (renderer != null) {\n                if (isDomainAxis) {\n                    result = Range.combine(result, renderer.findDomainBounds(dataset));\n                } else {\n                    result = Range.combine(result, renderer.findRangeBounds(dataset));\n                }\n                Collection annotations = renderer.getAnnotations();\n                if (annotations != null) {\n                    for (XYAnnotation annotation : annotations) {\n                        if (annotation instanceof XYAnnotationBoundsInfo) {\n                            includedAnnotations.add(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // add the included annotations\n    for (XYAnnotationBoundsInfo annotation : includedAnnotations) {\n        if (annotation.getIncludeInDataBounds()) {\n            if (isDomainAxis) {\n                result = Range.combine(result, annotation.getXRange());\n            } else {\n                result = Range.combine(result, annotation.getYRange());\n            }\n        }\n    }\n\n    return result;\n}\n\nprivate List getDatasetsMappedToAxis(ValueAxis axis) {\n    List datasets = new ArrayList();\n    boolean isDomainAxis = isDomainAxis(axis);\n    int axisIndex = isDomainAxis ? getDomainAxisIndex(axis) : getRangeAxisIndex(axis);\n    if (axisIndex >= 0) {\n        for (Object obj : getDatasetMappings().values()) {\n            DatasetRenderingOrderInfo info = (DatasetRenderingOrderInfo) obj;\n            int[] indices = isDomainAxis ? info.getDomainAxisIndices() : info.getRangeAxisIndices();\n            for (int j = 0; j < indices.length; j++) {\n                if (indices[j] == axisIndex) {\n                    datasets.add(info.getDataset());\n                }\n            }\n        }\n    }\n    return datasets;\n}\n\nprivate List getIncludedAnnotations(ValueAxis axis) {\n    List annotations = new ArrayList();\n    boolean isDomainAxis = isDomainAxis(axis);\n    int axisIndex = isDomainAxis ? getDomainAxisIndex(axis) : getRangeAxisIndex(axis);\n    if (axisIndex == 0) {\n        for (Object annotation : this.annotations) {\n            if (annotation instanceof XYAnnotationBoundsInfo) {\n                annotations.add(annotation);\n            }\n        }\n    }\n    return annotations;\n}\n\nprivate boolean isDomainAxis(ValueAxis axis) {\n    return getDomainAxisIndex(axis) >= 0;\n}\n\nprivate int getDomainAxisIndex(ValueAxis axis) {\n    int result = -1;\n    if (axis != null) {\n        for (int i = 0; i < this.domainAxes.size(); i++) {\n            if (this.domainAxes.get(i) == axis) {\n                result = i;\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nprivate int getRangeAxisIndex(ValueAxis axis) {\n    int result = -1;\n    if (axis != null) {\n        for (int i = 0; i < this.rangeAxes.size(); i++) {\n            if (this.rangeAxes.get(i) == axis) {\n                result = i;",
    "patch_diff": "diff --git a/source/org/jfree/chart/plot/XYPlot.java b/source/org/jfree/chart/plot/XYPlot.java\nindex ec26162..858eaa1 100644\n--- a/source/org/jfree/chart/plot/XYPlot.java\n+++ b/source/org/jfree/chart/plot/XYPlot.java\n@@ -4422,101 +4422,104 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,\n      *\n      * @return The range.\n      */\n-    public Range getDataRange(ValueAxis axis) {\n-\n-        Range result = null;\n-        List mappedDatasets = new ArrayList();\n-        List includedAnnotations = new ArrayList();\n-        boolean isDomainAxis = true;\n-\n-        // is it a domain axis?\n-        int domainIndex = getDomainAxisIndex(axis);\n-        if (domainIndex >= 0) {\n-            isDomainAxis = true;\n-            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(\n-                    new Integer(domainIndex)));\n-            if (domainIndex == 0) {\n-                // grab the plot's annotations\n-                Iterator iterator = this.annotations.iterator();\n-                while (iterator.hasNext()) {\n-                    XYAnnotation annotation = (XYAnnotation) iterator.next();\n-                    if (annotation instanceof XYAnnotationBoundsInfo) {\n-                        includedAnnotations.add(annotation);\n-                    }\n-                }\n-            }\n-        }\n-\n-        // or is it a range axis?\n-        int rangeIndex = getRangeAxisIndex(axis);\n-        if (rangeIndex >= 0) {\n-            isDomainAxis = false;\n-            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(\n-                    new Integer(rangeIndex)));\n-            if (rangeIndex == 0) {\n-                Iterator iterator = this.annotations.iterator();\n-                while (iterator.hasNext()) {\n-                    XYAnnotation annotation = (XYAnnotation) iterator.next();\n-                    if (annotation instanceof XYAnnotationBoundsInfo) {\n-                        includedAnnotations.add(annotation);\n-                    }\n-                }\n-            }\n-        }\n-\n-        // iterate through the datasets that map to the axis and get the union\n-        // of the ranges.\n-        Iterator iterator = mappedDatasets.iterator();\n-        while (iterator.hasNext()) {\n-            XYDataset d = (XYDataset) iterator.next();\n-            if (d != null) {\n-                XYItemRenderer r = getRendererForDataset(d);\n-                if (isDomainAxis) {\n-                    if (r != null) {\n-                        result = Range.combine(result, r.findDomainBounds(d));\n-                    }\n-                    else {\n-                        result = Range.combine(result,\n-                                DatasetUtilities.findDomainBounds(d));\n-                    }\n-                }\n-                else {\n-                    if (r != null) {\n-                        result = Range.combine(result, r.findRangeBounds(d));\n-                    }\n-                    else {\n-                        result = Range.combine(result,\n-                                DatasetUtilities.findRangeBounds(d));\n-                    }\n-                }\n-                \n-                    Collection c = r.getAnnotations();\n-                    Iterator i = c.iterator();\n-                    while (i.hasNext()) {\n-                        XYAnnotation a = (XYAnnotation) i.next();\n-                        if (a instanceof XYAnnotationBoundsInfo) {\n-                            includedAnnotations.add(a);\n-                        }\n-                    }\n-            }\n-        }\n-\n-        Iterator it = includedAnnotations.iterator();\n-        while (it.hasNext()) {\n-            XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();\n-            if (xyabi.getIncludeInDataBounds()) {\n-                if (isDomainAxis) {\n-                    result = Range.combine(result, xyabi.getXRange());\n-                }\n-                else {\n-                    result = Range.combine(result, xyabi.getYRange());\n-                }\n-            }\n-        }\n-\n-        return result;\n-\n-    }\n+public Range getDataRange(ValueAxis axis) {\n+    Range result = null;\n+    List mappedDatasets = getDatasetsMappedToAxis(axis);\n+    List includedAnnotations = getIncludedAnnotations(axis);\n+    boolean isDomainAxis = isDomainAxis(axis);\n+\n+    // iterate through the datasets that map to the axis and get the union\n+    // of the ranges.\n+    for (XYDataset dataset : mappedDatasets) {\n+        if (dataset != null) {\n+            XYItemRenderer renderer = getRendererForDataset(dataset);\n+            if (renderer != null) {\n+                if (isDomainAxis) {\n+                    result = Range.combine(result, renderer.findDomainBounds(dataset));\n+                } else {\n+                    result = Range.combine(result, renderer.findRangeBounds(dataset));\n+                }\n+                Collection annotations = renderer.getAnnotations();\n+                if (annotations != null) {\n+                    for (XYAnnotation annotation : annotations) {\n+                        if (annotation instanceof XYAnnotationBoundsInfo) {\n+                            includedAnnotations.add(annotation);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    // add the included annotations\n+    for (XYAnnotationBoundsInfo annotation : includedAnnotations) {\n+        if (annotation.getIncludeInDataBounds()) {\n+            if (isDomainAxis) {\n+                result = Range.combine(result, annotation.getXRange());\n+            } else {\n+                result = Range.combine(result, annotation.getYRange());\n+            }\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+private List getDatasetsMappedToAxis(ValueAxis axis) {\n+    List datasets = new ArrayList();\n+    boolean isDomainAxis = isDomainAxis(axis);\n+    int axisIndex = isDomainAxis ? getDomainAxisIndex(axis) : getRangeAxisIndex(axis);\n+    if (axisIndex >= 0) {\n+        for (Object obj : getDatasetMappings().values()) {\n+            DatasetRenderingOrderInfo info = (DatasetRenderingOrderInfo) obj;\n+            int[] indices = isDomainAxis ? info.getDomainAxisIndices() : info.getRangeAxisIndices();\n+            for (int j = 0; j < indices.length; j++) {\n+                if (indices[j] == axisIndex) {\n+                    datasets.add(info.getDataset());\n+                }\n+            }\n+        }\n+    }\n+    return datasets;\n+}\n+\n+private List getIncludedAnnotations(ValueAxis axis) {\n+    List annotations = new ArrayList();\n+    boolean isDomainAxis = isDomainAxis(axis);\n+    int axisIndex = isDomainAxis ? getDomainAxisIndex(axis) : getRangeAxisIndex(axis);\n+    if (axisIndex == 0) {\n+        for (Object annotation : this.annotations) {\n+            if (annotation instanceof XYAnnotationBoundsInfo) {\n+                annotations.add(annotation);\n+            }\n+        }\n+    }\n+    return annotations;\n+}\n+\n+private boolean isDomainAxis(ValueAxis axis) {\n+    return getDomainAxisIndex(axis) >= 0;\n+}\n+\n+private int getDomainAxisIndex(ValueAxis axis) {\n+    int result = -1;\n+    if (axis != null) {\n+        for (int i = 0; i < this.domainAxes.size(); i++) {\n+            if (this.domainAxes.get(i) == axis) {\n+                result = i;\n+                break;\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+private int getRangeAxisIndex(ValueAxis axis) {\n+    int result = -1;\n+    if (axis != null) {\n+        for (int i = 0; i < this.rangeAxes.size(); i++) {\n+            if (this.rangeAxes.get(i) == axis) {\n+                result = i;\n \n     /**\n      * Receives notification of a change to the plot's dataset.",
    "result_reason": "error: for-each loops are not supported in -source 1.4",
    "test_result": "ERROR"
}