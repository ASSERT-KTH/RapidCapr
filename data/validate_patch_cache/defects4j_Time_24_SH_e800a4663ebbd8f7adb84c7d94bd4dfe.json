{
    "patch": "            if (savedFields[i].isSaved()) {\n                if (resetFields) {\n                    throw new IllegalStateException(\"Cannot reset field to null\");\n                }\n                DurationField field = savedFields[i].getField().getDurationField();\n                millis = field.add(millis, savedFields[i].getValue());\n            } else {\n                millis = savedFields[i].getField().set(millis, savedFields[i].getValue());\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..fe570563 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,15 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].isSaved()) {\n+                if (resetFields) {\n+                    throw new IllegalStateException(\"Cannot reset field to null\");\n+                }\n+                DurationField field = savedFields[i].getField().getDurationField();\n+                millis = field.add(millis, savedFields[i].getValue());\n+            } else {\n+                millis = savedFields[i].getField().set(millis, savedFields[i].getValue());\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}