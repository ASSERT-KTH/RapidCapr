{
    "patch": "if ((offsetLocal - offsetAdjusted) < 0) {\n    long nextLocal = nextTransition(instantAdjusted + 1);\n    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted + 1);\n    if (nextLocal != nextAdjusted) {\n        int newOffset = getOffset(nextAdjusted - 1);\n        return newOffset;\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..ac4de5db 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,14 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) < 0) {\n+    long nextLocal = nextTransition(instantAdjusted + 1);\n+    long nextAdjusted = nextTransition(instantLocal - offsetAdjusted + 1);\n+    if (nextLocal != nextAdjusted) {\n+        int newOffset = getOffset(nextAdjusted - 1);\n+        return newOffset;\n+    }\n+}\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>",
    "test_result": "FAIL"
}