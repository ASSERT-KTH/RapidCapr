{
    "patch": "            } else {\n                if (actualTypeArgument instanceof WildcardType) {\n                    Type wildcardBound = ((WildcardType) actualTypeArgument).getUpperBounds()[0];\n                    if (wildcardBound instanceof TypeVariable) {\n                        wildcardBound = contextualActualTypeParameters.get(wildcardBound);\n                    }\n                    actualTypeArgument = wildcardBound;\n                }\n                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..c113b9bf8 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,16 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+            } else {\n+                if (actualTypeArgument instanceof WildcardType) {\n+                    Type wildcardBound = ((WildcardType) actualTypeArgument).getUpperBounds()[0];\n+                    if (wildcardBound instanceof TypeVariable) {\n+                        wildcardBound = contextualActualTypeParameters.get(wildcardBound);\n+                    }\n+                    actualTypeArgument = wildcardBound;\n+                }\n+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n+            }\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}