{
    "patch": "        int idx = 1;\n        while (count < index) {\n            count += idx;\n            ++idx;\n        }\n        --idx;\n        indices[last] = idx;\n        for (int i = last - 1; i >= 0; --i) {\n            indices[i] = indices[i+1] == 0 ? size[i] - 1 : indices[i+1] - 1;\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\nindex 56c9ffebc..1a7295427 100644\n--- a/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n+++ b/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java\n@@ -241,6 +241,9 @@ public class MultidimensionalCounter implements Iterable<Integer> {\n         }\n         --idx;\n         indices[last] = idx;\n+        for (int i = last - 1; i >= 0; --i) {\n+            indices[i] = indices[i+1] == 0 ? size[i] - 1 : indices[i+1] - 1;\n+        }\n \n         return indices;\n     }",
    "result_reason": "junit.framework.AssertionFailedError: Wrong multidimensional index for [0][0] expected:<0> but was:<1>",
    "test_result": "FAIL"
}