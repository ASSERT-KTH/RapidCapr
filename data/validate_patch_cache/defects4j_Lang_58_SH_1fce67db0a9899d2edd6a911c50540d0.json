{
    "patch": "                        && (isValidInteger(numeric))) {\n...\nprivate static boolean isValidInteger(String numeric) {\n    if (numeric.charAt(0) == '-') {\n        return isDigits(numeric.substring(1));\n    } else {\n        return isDigits(numeric);\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java\nindex c0f06a47..04671e31 100644\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n@@ -451,8 +451,15 @@ public class NumberUtils {\n                 case 'L' :\n                     if (dec == null\n                         && exp == null\n-                        && isDigits(numeric.substring(1))\n-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n+                        && (isValidInteger(numeric))) {\n+...\n+private static boolean isValidInteger(String numeric) {\n+    if (numeric.charAt(0) == '-') {\n+        return isDigits(numeric.substring(1));\n+    } else {\n+        return isDigits(numeric);\n+    }\n+}\n                         try {\n                             return createLong(numeric);\n                         } catch (NumberFormatException nfe) {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}