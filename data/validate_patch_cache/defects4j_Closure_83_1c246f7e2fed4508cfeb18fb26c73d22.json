{
    "patch": "import org.kohsuke.args4j.CmdLineException;\n\npublic int parseArguments(List<String> params) throws CmdLineException {\n    if (params == null || params.size() == 0) {\n        setter.addValue(true);\n        return 0;\n    }\n\n    String param = params.get(0);\n    if (TRUES.contains(param.toLowerCase())) {\n        setter.addValue(true);\n    } else if (FALSES.contains(param.toLowerCase())) {\n        setter.addValue(false);\n    } else {\n        setter.addValue(true);\n        return 0;\n    }\n    return 1;\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..6eea8886 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -331,7 +331,25 @@ public class CommandLineRunner extends\n \n       @Override\n       public int parseArguments(Parameters params) throws CmdLineException {\n-        String param = params.getParameter(0);\n+import org.kohsuke.args4j.CmdLineException;\n+\n+public int parseArguments(List<String> params) throws CmdLineException {\n+    if (params == null || params.size() == 0) {\n+        setter.addValue(true);\n+        return 0;\n+    }\n+\n+    String param = params.get(0);\n+    if (TRUES.contains(param.toLowerCase())) {\n+        setter.addValue(true);\n+    } else if (FALSES.contains(param.toLowerCase())) {\n+        setter.addValue(false);\n+    } else {\n+        setter.addValue(true);\n+        return 0;\n+    }\n+    return 1;\n+}\n \n         if (param == null) {\n           setter.addValue(true);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}