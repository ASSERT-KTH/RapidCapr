{
    "patch": "if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear() &&\n    savedFields[i].iValue < 100) {\n    // pivot century\n    savedFields[i].iValue += 2000;\n    millis = savedFields[i].set(millis, resetFields);\n    savedFields[i].iValue -= 2000;\n    // Check if this year is out of valid range\n    int year = iChrono.weekyear().get(millis);\n    if (year <= 0 || year > 9999) {\n        throw new IllegalFieldValueException(\n              DateTimeFieldType.weekyear(),\n              \"Weekyear is out of valid range: \" + year,\n              null);\n    }\n} else {\n    millis = savedFields[i].set(millis, resetFields);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..dd29ae2c 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,23 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+if (savedFields[i].iField.getType() == DateTimeFieldType.weekyear() &&\n+    savedFields[i].iValue < 100) {\n+    // pivot century\n+    savedFields[i].iValue += 2000;\n+    millis = savedFields[i].set(millis, resetFields);\n+    savedFields[i].iValue -= 2000;\n+    // Check if this year is out of valid range\n+    int year = iChrono.weekyear().get(millis);\n+    if (year <= 0 || year > 9999) {\n+        throw new IllegalFieldValueException(\n+              DateTimeFieldType.weekyear(),\n+              \"Weekyear is out of valid range: \" + year,\n+              null);\n+    }\n+} else {\n+    millis = savedFields[i].set(millis, resetFields);\n+}\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}