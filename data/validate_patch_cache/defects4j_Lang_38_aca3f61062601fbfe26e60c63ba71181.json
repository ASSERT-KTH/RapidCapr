{
    "patch": "    private StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n        assert(calendar.getTimeZone().equals(TimeZone.getTimeZone(\"UTC\")));\n        for (Rule rule : mRules) {\n            if (rule instanceof TimeRule) {\n                buf = ((TimeRule) rule).appendTo(buf, calendar);\n            } else if (rule instanceof TimeZoneRule) {\n                mTimeZoneFormat.format(calendar, buf);\n            } else if (rule instanceof LiteralRule) {\n                buf.append(((LiteralRule) rule).getText());\n            }\n        }\n        return buf;\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..2a69df66 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,19 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+    private StringBuffer applyRules(Calendar calendar, StringBuffer buf) {\n+        assert(calendar.getTimeZone().equals(TimeZone.getTimeZone(\"UTC\")));\n+        for (Rule rule : mRules) {\n+            if (rule instanceof TimeRule) {\n+                buf = ((TimeRule) rule).appendTo(buf, calendar);\n+            } else if (rule instanceof TimeZoneRule) {\n+                mTimeZoneFormat.format(calendar, buf);\n+            } else if (rule instanceof LiteralRule) {\n+                buf.append(((LiteralRule) rule).getText());\n+            }\n+        }\n+        return buf;\n+    }\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}