{
    "patch": "public double getPct(Object v) {\n    if (v instanceof Integer) {\n        return getCumPct((Integer) v);\n    } else {\n        throw new IllegalArgumentException(\"v must be an instance of Integer.\");\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..bbb22eec7 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,13 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public double getPct(Object v) {\n+    if (v instanceof Integer) {\n+        return getCumPct((Integer) v);\n+    } else {\n+        throw new IllegalArgumentException(\"v must be an instance of Integer.\");\n+    }\n+}\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}