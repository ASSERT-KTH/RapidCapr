{
    "patch": "            if (len >= 7 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n                if (len == 7) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                // Language, Country and Variant\n                String country = str.substring(3, 5);\n                String variant = str.substring(6);\n                if (variant.length() > 0 && !Character.isUpperCase(variant.charAt(0))) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), country, variant);\n            } else if (len >= 5 && str.charAt(2) == '_' && Character.isUpperCase(str.charAt(3))) {\n                // Language and Country\n                String country = str.substring(3, 5);\n                if (len == 5) {\n                    return new Locale(str.substring(0, 2), country);\n                } else if (len >= 6 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n                    // Language, Country and Variant\n                    String variant = str.substring(6);\n                    if (variant.length() > 0 && !Character.isUpperCase(variant.charAt(0))) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    return new Locale(str.substring(0, 2), country, variant);\n                }\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            } else if (len == 2) {\n                // Language\n                return new Locale(str);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..106302a3 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -111,6 +111,37 @@ public class LocaleUtils {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             char ch3 = str.charAt(3);\n+            if (len >= 7 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n+                if (len == 7) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                // Language, Country and Variant\n+                String country = str.substring(3, 5);\n+                String variant = str.substring(6);\n+                if (variant.length() > 0 && !Character.isUpperCase(variant.charAt(0))) {\n+                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                }\n+                return new Locale(str.substring(0, 2), country, variant);\n+            } else if (len >= 5 && str.charAt(2) == '_' && Character.isUpperCase(str.charAt(3))) {\n+                // Language and Country\n+                String country = str.substring(3, 5);\n+                if (len == 5) {\n+                    return new Locale(str.substring(0, 2), country);\n+                } else if (len >= 6 && str.charAt(5) == '_' && Character.isUpperCase(str.charAt(6))) {\n+                    // Language, Country and Variant\n+                    String variant = str.substring(6);\n+                    if (variant.length() > 0 && !Character.isUpperCase(variant.charAt(0))) {\n+                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+                    }\n+                    return new Locale(str.substring(0, 2), country, variant);\n+                }\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            } else if (len == 2) {\n+                // Language\n+                return new Locale(str);\n+            } else {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n             char ch4 = str.charAt(4);\n             if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}