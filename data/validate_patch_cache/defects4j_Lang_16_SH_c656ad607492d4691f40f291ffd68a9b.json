{
    "patch": "        if (str.startsWith(\"--\")) {\n            // this is protection for poorness in java.lang.BigDecimal.\n            // it accepts this as a legal value, but it does not appear \n            // to be in specification of class. OS X Java parses it to \n            // a wrong value.\n            return null;\n        }\n>>> [ INFILL ] <<<\n        if (str.toLowerCase().startsWith(\"0x\") || str.startsWith(\"-0x\") || str.toLowerCase().startsWith(\"-0x\") || str.toLowerCase().startsWith(\"0X\") || str.startsWith(\"-0X\") || str.toLowerCase().startsWith(\"-0X\")) {\n            return createInteger(new Integer(str.substring(2), 16));\n        }   \n        char lastChar = str.charAt(str.length() - 1);\n        String mant;\n        String dec;\n        String exp;\n        int decPos = str.indexOf('.');",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 882358f2..f2890618 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,22 @@ public class NumberUtils {\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n+        if (str.startsWith(\"--\")) {\n+            // this is protection for poorness in java.lang.BigDecimal.\n+            // it accepts this as a legal value, but it does not appear \n+            // to be in specification of class. OS X Java parses it to \n+            // a wrong value.\n+            return null;\n+        }\n+>>> [ INFILL ] <<<\n+        if (str.toLowerCase().startsWith(\"0x\") || str.startsWith(\"-0x\") || str.toLowerCase().startsWith(\"-0x\") || str.toLowerCase().startsWith(\"0X\") || str.startsWith(\"-0X\") || str.toLowerCase().startsWith(\"-0X\")) {\n+            return createInteger(new Integer(str.substring(2), 16));\n+        }   \n+        char lastChar = str.charAt(str.length() - 1);\n+        String mant;\n+        String dec;\n+        String exp;\n+        int decPos = str.indexOf('.');\n             return createInteger(str);\n         }   \n         char lastChar = str.charAt(str.length() - 1);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}