{
    "patch": "        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\nindex 9a6993a55..0382537ec 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n@@ -333,12 +333,17 @@ class SimplexTableau implements Serializable {\n         columnsToDrop.add(0);\n \n         // positive cost non-artificial variables\n+        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n+            final double entry = tableau.getEntry(0, i);\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                 columnsToDrop.add(i);\n             }\n         }\n+                columnsToDrop.add(i);\n+            }\n+        }\n \n         // non-basic artificial variables\n         for (int i = 0; i < getNumArtificialVariables(); i++) {",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}