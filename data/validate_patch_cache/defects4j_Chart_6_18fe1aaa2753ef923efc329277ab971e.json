{
    "patch": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        ShapeList list = (ShapeList) obj;\n        if (this.getShapes().size() != list.getShapes().size()) {\n            return false;\n        }\n        for (int i = 0; i < this.getShapes().size(); i++) {\n            Shape s1 = this.getShapes().get(i);\n            Shape s2 = list.getShapes().get(i);\n            if (!s1.equals(s2)) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..f44dfec 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,26 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+    public boolean equals(Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+        if (!(obj instanceof ShapeList)) {\n+            return false;\n+        }\n+        ShapeList list = (ShapeList) obj;\n+        if (this.getShapes().size() != list.getShapes().size()) {\n+            return false;\n+        }\n+        for (int i = 0; i < this.getShapes().size(); i++) {\n+            Shape s1 = this.getShapes().get(i);\n+            Shape s2 = list.getShapes().get(i);\n+            if (!s1.equals(s2)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n \n     }\n \n@@ -169,4 +188,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}