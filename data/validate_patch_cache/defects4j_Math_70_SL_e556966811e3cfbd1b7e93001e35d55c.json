{
    "patch": "import org.apache.commons.math3.analysis.UnivariateFunction;\nimport org.apache.commons.math3.exception.MaxIterationsExceededException;\nimport org.apache.commons.math3.exception.TooManyEvaluationsException;\n\npublic double solve(final UnivariateFunction f, double min, double max, double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException, TooManyEvaluationsException {\n    return solve(new UnivariateFunction() {\n        @Override\n        public double value(double x) throws IllegalArgumentException {\n            try {\n                return f.value(x);\n            } catch (final Exception e) {\n                throw new IllegalArgumentException(e);\n            }\n        }\n    }, min, max, initial);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\nindex 3f669271a..9a3bfdd74 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java\n@@ -69,7 +69,23 @@ public class BisectionSolver extends UnivariateRealSolverImpl {\n     /** {@inheritDoc} */\n     public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-        return solve(min, max);\n+import org.apache.commons.math3.analysis.UnivariateFunction;\n+import org.apache.commons.math3.exception.MaxIterationsExceededException;\n+import org.apache.commons.math3.exception.TooManyEvaluationsException;\n+\n+public double solve(final UnivariateFunction f, double min, double max, double initial)\n+        throws MaxIterationsExceededException, FunctionEvaluationException, TooManyEvaluationsException {\n+    return solve(new UnivariateFunction() {\n+        @Override\n+        public double value(double x) throws IllegalArgumentException {\n+            try {\n+                return f.value(x);\n+            } catch (final Exception e) {\n+                throw new IllegalArgumentException(e);\n+            }\n+        }\n+    }, min, max, initial);\n+}\n     }\n \n     /** {@inheritDoc} */",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}