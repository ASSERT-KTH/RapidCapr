{
    "patch": "int codepoint = Character.codePointAt(input, pos);\nint charCount = Character.charCount(codepoint);\nchar[] charArray = Character.toChars(codepoint);\nchar[] translated = translate(charArray, 0, charArray.length);\nif (translated == null) {\n    out.write(charArray, 0, charArray.length);\n} else {\n    out.write(translated, 0, translated.length);\n}\npos += charCount;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..36e0c984 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,16 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+int codepoint = Character.codePointAt(input, pos);\n+int charCount = Character.charCount(codepoint);\n+char[] charArray = Character.toChars(codepoint);\n+char[] translated = translate(charArray, 0, charArray.length);\n+if (translated == null) {\n+    out.write(charArray, 0, charArray.length);\n+} else {\n+    out.write(translated, 0, translated.length);\n+}\n+pos += charCount;\n             }\n         }\n     }",
    "result_reason": "error: no suitable method found for translate(char[],int,int)",
    "test_result": "ERROR"
}