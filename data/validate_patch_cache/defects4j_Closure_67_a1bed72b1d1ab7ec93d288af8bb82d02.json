{
    "patch": "    private boolean isPrototypePropertyAssign(Node assign) {\n      Node n = assign.getFirstChild();\n      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n          && n.getType() == Token.GETPROP) {\n        // We want to exclude the assignment itself from the usage list\n        boolean isChainedProperty =\n            n.getFirstChild().getType() == Token.GETPROP;\n\n        if (isChainedProperty) {\n          Node child = NodeUtil.getPrototypeProperty(n.getFirstChild());\n\n          if (child != null) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\nindex 30b19e0b..d60b2b6c 100644\n--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n@@ -310,21 +310,18 @@ class AnalyzePrototypeProperties implements CompilerPass {\n            n.getType() == Token.FUNCTION &&\n            n.getParent().getType() == Token.NAME);\n     }\n-\n     private boolean isPrototypePropertyAssign(Node assign) {\n       Node n = assign.getFirstChild();\n       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n-          && n.getType() == Token.GETPROP\n-          ) {\n+          && n.getType() == Token.GETPROP) {\n         // We want to exclude the assignment itself from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType() == Token.GETPROP;\n \n         if (isChainedProperty) {\n-          Node child = n.getFirstChild().getFirstChild().getNext();\n+          Node child = NodeUtil.getPrototypeProperty(n.getFirstChild());\n \n-          if (child.getType() == Token.STRING &&\n-              child.getString().equals(\"prototype\")) {\n+          if (child != null) {\n             return true;\n           }\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}