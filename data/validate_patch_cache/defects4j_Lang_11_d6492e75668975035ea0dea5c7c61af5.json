{
    "patch": "if (start >= end) {\n    throw new IllegalArgumentException(\"bound must be greater than origin\");\n}\nif (count > Integer.MAX_VALUE / (end - start)) {\n    throw new IllegalArgumentException(String.format(\"Requested random string length %d is greater \"\n                 + \"than max allowed length of %d.\",\n                 count, Integer.MAX_VALUE / (end - start)));\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..7fc6fe2d 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,14 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+if (start >= end) {\n+    throw new IllegalArgumentException(\"bound must be greater than origin\");\n+}\n+if (count > Integer.MAX_VALUE / (end - start)) {\n+    throw new IllegalArgumentException(String.format(\"Requested random string length %d is greater \"\n+                 + \"than max allowed length of %d.\",\n+                 count, Integer.MAX_VALUE / (end - start)));\n+}\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "junit.framework.AssertionFailedError: Message (bound must be positive) must contain 'start'",
    "test_result": "FAIL"
}