{
    "patch": "          // Pass ASCII characters straight through, and escape others\n          if (c <= 0x7f) {\n            sb.append(c);\n          } else {\n            // Check if the character can be represented in the output character set\n            if (outputCharsetEncoder != null && outputCharsetEncoder.canEncode(c)) {\n              sb.append(c);\n            } else {\n              // Unicode-escape the character\n              appendHexJavaScriptRepresentation(sb, c);\n            }\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..09f41260 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,18 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+          // Pass ASCII characters straight through, and escape others\n+          if (c <= 0x7f) {\n+            sb.append(c);\n+          } else {\n+            // Check if the character can be represented in the output character set\n+            if (outputCharsetEncoder != null && outputCharsetEncoder.canEncode(c)) {\n+              sb.append(c);\n+            } else {\n+              // Unicode-escape the character\n+              appendHexJavaScriptRepresentation(sb, c);\n+            }\n+          }\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}