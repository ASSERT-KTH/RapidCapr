{
    "patch": "long nOd = this.numerator * (long)object.denominator;\nlong dOn = (long)this.denominator * object.numerator;\n\ndouble result = (double)nOd / dOn;\n\nif(result < 0){\n    return -1;\n}else if(result > 0){\n    return 1;\n}else{\n    return 0;\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/fraction/Fraction.java b/src/java/org/apache/commons/math/fraction/Fraction.java\nindex 0706f8c41..bc220b9dd 100644\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n@@ -256,8 +256,18 @@ public class Fraction extends Number implements Comparable<Fraction> {\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        double nOd = doubleValue();\n-        double dOn = object.doubleValue();\n+long nOd = this.numerator * (long)object.denominator;\n+long dOn = (long)this.denominator * object.numerator;\n+\n+double result = (double)nOd / dOn;\n+\n+if(result < 0){\n+    return -1;\n+}else if(result > 0){\n+    return 1;\n+}else{\n+    return 0;\n+}\n         return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     ",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}