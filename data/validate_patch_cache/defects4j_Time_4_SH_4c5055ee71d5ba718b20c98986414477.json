{
    "patch": "            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n            try {\n                iChronology.validate(newPartial, newValues);\n            } catch (IllegalFieldValueException e) {\n                // remove added fields\n                System.arraycopy(iTypes, i + 1, newTypes, i, newTypes.length - i - 1);\n                System.arraycopy(iValues, i + 1, newValues, i, newValues.length - i - 1);\n                throw e;\n            }\n            return newPartial;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..89124ddc 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -462,6 +462,15 @@ public final class Partial\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n             Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            try {\n+                iChronology.validate(newPartial, newValues);\n+            } catch (IllegalFieldValueException e) {\n+                // remove added fields\n+                System.arraycopy(iTypes, i + 1, newTypes, i, newTypes.length - i - 1);\n+                System.arraycopy(iValues, i + 1, newValues, i, newValues.length - i - 1);\n+                throw e;\n+            }\n+            return newPartial;\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: unreachable statement",
    "test_result": "ERROR"
}