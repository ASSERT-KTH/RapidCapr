{
    "patch": "stepSize = hNew;\nif (forward) {\n    if (stepStart + stepSize > t) {\n        stepSize = t - stepStart;\n        hNew = stepSize; // update hNew as well\n    }\n} else {\n    if (stepStart + stepSize < t) {\n        stepSize = t - stepStart;\n        hNew = stepSize; // update hNew as well\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 13ced27d7..2c62ee80f 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -247,6 +247,18 @@ public abstract class EmbeddedRungeKuttaIntegrator\n         }\n \n         stepSize = hNew;\n+stepSize = hNew;\n+if (forward) {\n+    if (stepStart + stepSize > t) {\n+        stepSize = t - stepStart;\n+        hNew = stepSize; // update hNew as well\n+    }\n+} else {\n+    if (stepStart + stepSize < t) {\n+        stepSize = t - stepStart;\n+        hNew = stepSize; // update hNew as well\n+    }\n+}\n \n         // next stages\n         for (int k = 1; k < stages; ++k) {",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}