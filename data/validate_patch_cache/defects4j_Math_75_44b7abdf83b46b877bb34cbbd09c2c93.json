{
    "patch": "public double getPct(Object v) {\n   int idx = Arrays.binarySearch(data, (T) v); // data is the array of Comparable elements\n   if (idx < 0) {\n      idx = -(idx + 1);\n   }\n   return (double) idx / size;\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..42919c5c5 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,13 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n-    public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n-    }\n+public double getPct(Object v) {\n+   int idx = Arrays.binarySearch(data, (T) v); // data is the array of Comparable elements\n+   if (idx < 0) {\n+      idx = -(idx + 1);\n+   }\n+   return (double) idx / size;\n+}\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}