{
    "patch": "private void readTypeVariables(TypeVariable<?> typeVariable) {\n    if (typeVariable != null) {\n        for (Type type : typeVariable.getBounds()) {\n            registerTypeVariablesOn(type);\n        }\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..3f4f0df6a 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -372,12 +372,14 @@ public abstract class GenericMetadataSupport {\n             registerTypeParametersOn(typeParameters);\n         }\n \n-        private void readTypeVariables() {\n-            for (Type type : typeVariable.getBounds()) {\n-                registerTypeVariablesOn(type);\n-            }\n-            registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n-        }\n+private void readTypeVariables(TypeVariable<?> typeVariable) {\n+    if (typeVariable != null) {\n+        for (Type type : typeVariable.getBounds()) {\n+            registerTypeVariablesOn(type);\n+        }\n+        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n+    }\n+}\n \n         @Override\n         public Class<?> rawType() {",
    "result_reason": "error: method readTypeVariables in class TypeVariableReturnType cannot be applied to given types;",
    "test_result": "ERROR"
}