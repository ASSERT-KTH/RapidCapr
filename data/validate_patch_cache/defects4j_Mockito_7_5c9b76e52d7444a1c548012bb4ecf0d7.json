{
    "patch": "            TypeVariable<? extends Class<?>>[] typeParameters = (TypeVariable<? extends Class<?>>[]) cls.getTypeParameters();\n            for (TypeVariable<? extends Class<?>> typeParameter : typeParameters) {\n                readTypeVariablesOn(typeParameter);\n            }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..0562377ab 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -376,6 +376,10 @@ public abstract class GenericMetadataSupport {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+            TypeVariable<? extends Class<?>>[] typeParameters = (TypeVariable<? extends Class<?>>[]) cls.getTypeParameters();\n+            for (TypeVariable<? extends Class<?>> typeParameter : typeParameters) {\n+                readTypeVariablesOn(typeParameter);\n+            }\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}