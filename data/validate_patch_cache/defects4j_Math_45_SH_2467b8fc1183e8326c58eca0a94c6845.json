{
    "patch": "public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n    super(rowDimension, columnDimension);\n    this.rows = rowDimension;\n    this.columns = columnDimension;\n    int expectedSize = Math.max(1, (int) Math.ceil(rowDimension * columnDimension * 0.01)); // Resize hashmap to 1% of expected entries\n    this.entries = new OpenIntToDoubleHashMap(expectedSize, 0.0);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\nindex 174eda6ac..35e29c668 100644\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n@@ -47,6 +47,13 @@ public class OpenMapRealMatrix extends AbstractRealMatrix\n      */\n     public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n         super(rowDimension, columnDimension);\n+public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n+    super(rowDimension, columnDimension);\n+    this.rows = rowDimension;\n+    this.columns = columnDimension;\n+    int expectedSize = Math.max(1, (int) Math.ceil(rowDimension * columnDimension * 0.01)); // Resize hashmap to 1% of expected entries\n+    this.entries = new OpenIntToDoubleHashMap(expectedSize, 0.0);\n+}\n         this.rows = rowDimension;\n         this.columns = columnDimension;\n         this.entries = new OpenIntToDoubleHashMap(0.0);",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}