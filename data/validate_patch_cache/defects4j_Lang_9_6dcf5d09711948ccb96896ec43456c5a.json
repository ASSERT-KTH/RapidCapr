{
    "patch": "        if(nextStrategy != null) {\n            if(currentStrategy.addRegex(this, regex)) {\n                collector.add(currentStrategy);\n            }\n        } else {\n            // Last one\n            nextStrategy = currentStrategy;\n        }\n        currentFormatField= null;\n        strategies= collector.toArray(new Strategy[collector.size() + (nextStrategy != null ? 1 : 0)]);\n        if (nextStrategy != null) {\n            strategies[strategies.length - 1] = nextStrategy;\n        }\n        parsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..1acb2df5 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,20 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+        if(nextStrategy != null) {\n+            if(currentStrategy.addRegex(this, regex)) {\n+                collector.add(currentStrategy);\n+            }\n+        } else {\n+            // Last one\n+            nextStrategy = currentStrategy;\n+        }\n+        currentFormatField= null;\n+        strategies= collector.toArray(new Strategy[collector.size() + (nextStrategy != null ? 1 : 0)]);\n+        if (nextStrategy != null) {\n+            strategies[strategies.length - 1] = nextStrategy;\n+        }\n+        parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "java.lang.ExceptionInInitializerError",
    "test_result": "FAIL"
}