{
    "patch": "    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = new LegendItemCollection();\n        if (this.plot == null) {\n            return result;\n        }\n\n        CategoryDataset dataset = null;\n        int index = this.plot.indexOf(this);\n        if (index >= 0) {\n            dataset = this.plot.getDataset(index);\n        }\n\n        if (dataset == null) {\n            return result;\n        }\n\n        int seriesCount = dataset.getRowCount();\n        if (this.plot.getRendererForDataset(dataset) == null) {\n            seriesCount = 0;\n        }\n\n        PlotOrientation orientation = this.plot.getOrientation();\n        if (orientation == PlotOrientation.HORIZONTAL) {\n            for (int i = seriesCount - 1; i >= 0; i--) {\n\n                if (isSeriesVisibleInLegend(i)) {\n                    LegendItem item = getLegendItem(index, i);\n                    if (item != null) {\n                        result.add(item);\n                    }\n                }\n            }\n        } else {\n            for (int i = 0; i < seriesCount; i++) {\n\n                if (isSeriesVisibleInLegend(i)) {\n                    LegendItem item = getLegendItem(index, i);\n                    if (item != null) {\n                        result.add(item);\n                    }\n                }\n            }\n        }\n\n        return result;\n    }",
    "patch_diff": "diff --git a/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java b/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java\nindex 226b25a..75927a8 100644\n--- a/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java\n+++ b/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java\n@@ -1794,7 +1794,52 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer\n         }\n         int index = this.plot.getIndexOf(this);\n         CategoryDataset dataset = this.plot.getDataset(index);\n-        if (dataset != null) {\n+    public LegendItemCollection getLegendItems() {\n+        LegendItemCollection result = new LegendItemCollection();\n+        if (this.plot == null) {\n+            return result;\n+        }\n+\n+        CategoryDataset dataset = null;\n+        int index = this.plot.indexOf(this);\n+        if (index >= 0) {\n+            dataset = this.plot.getDataset(index);\n+        }\n+\n+        if (dataset == null) {\n+            return result;\n+        }\n+\n+        int seriesCount = dataset.getRowCount();\n+        if (this.plot.getRendererForDataset(dataset) == null) {\n+            seriesCount = 0;\n+        }\n+\n+        PlotOrientation orientation = this.plot.getOrientation();\n+        if (orientation == PlotOrientation.HORIZONTAL) {\n+            for (int i = seriesCount - 1; i >= 0; i--) {\n+\n+                if (isSeriesVisibleInLegend(i)) {\n+                    LegendItem item = getLegendItem(index, i);\n+                    if (item != null) {\n+                        result.add(item);\n+                    }\n+                }\n+            }\n+        } else {\n+            for (int i = 0; i < seriesCount; i++) {\n+\n+                if (isSeriesVisibleInLegend(i)) {\n+                    LegendItem item = getLegendItem(index, i);\n+                    if (item != null) {\n+                        result.add(item);\n+                    }\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n             return result;\n         }\n         int seriesCount = dataset.getRowCount();",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}