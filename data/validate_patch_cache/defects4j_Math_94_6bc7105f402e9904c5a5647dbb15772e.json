{
    "patch": "    public static int gcd(int u, int v) {\n        if (u == 0) {\n            return v;\n        }\n        if (v == 0) {\n            return u;\n        }\n\n        if (u > 0 && v > 0 && u >= v || u < 0 && v < 0 && u <= v) {\n            return gcd(u % v, v);\n        } else {\n            return gcd(u, v % u);\n        }\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java\nindex c5342aeb3..fe78c5c61 100644\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n@@ -409,7 +409,20 @@ public final class MathUtils {\n      * @since 1.1\n      */\n     public static int gcd(int u, int v) {\n-        if (u * v == 0) {\n+    public static int gcd(int u, int v) {\n+        if (u == 0) {\n+            return v;\n+        }\n+        if (v == 0) {\n+            return u;\n+        }\n+\n+        if (u > 0 && v > 0 && u >= v || u < 0 && v < 0 && u <= v) {\n+            return gcd(u % v, v);\n+        } else {\n+            return gcd(u, v % u);\n+        }\n+    }\n             return (Math.abs(u) + Math.abs(v));\n         }\n         // keep u and v negative, as negative integers range down to",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}