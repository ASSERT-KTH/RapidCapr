{
    "patch": "if (c > 0x7f) {\n    // Other characters can be misinterpreted by some js parsers,\n    // or perhaps mangled by proxies along the way,\n    // so we play it safe and unicode escape them.\n    appendHexJavaScriptRepresentation(sb, c);\n} else {\n    switch (c) {\n        case '\\\\':\n            sb.append(backslashEscape);\n            break;\n        case '\\\"':\n            sb.append(doublequoteEscape);\n            break;\n        case '\\'':\n            sb.append(singlequoteEscape);\n            break;\n        default:\n            sb.append(c);\n            break;\n    }\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 558e74fe..cf5e8226 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -1042,7 +1042,27 @@ class CodeGenerator {\n             // No charsetEncoder provided - pass straight latin characters\n             // through, and escape the rest.  Doing the explicit character\n             // check is measurably faster than using the CharsetEncoder.\n-            if (c > 0x1f && c <= 0x7f) {\n+if (c > 0x7f) {\n+    // Other characters can be misinterpreted by some js parsers,\n+    // or perhaps mangled by proxies along the way,\n+    // so we play it safe and unicode escape them.\n+    appendHexJavaScriptRepresentation(sb, c);\n+} else {\n+    switch (c) {\n+        case '\\\\':\n+            sb.append(backslashEscape);\n+            break;\n+        case '\\\"':\n+            sb.append(doublequoteEscape);\n+            break;\n+        case '\\'':\n+            sb.append(singlequoteEscape);\n+            break;\n+        default:\n+            sb.append(c);\n+            break;\n+    }\n+}\n               sb.append(c);\n             } else {\n               // Other characters can be misinterpreted by some js parsers,",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}