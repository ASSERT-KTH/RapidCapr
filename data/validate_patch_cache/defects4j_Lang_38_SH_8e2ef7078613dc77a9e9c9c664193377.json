{
    "patch": "if (mTimeZoneForced) {\n    DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");\n    format.setTimeZone(mTimeZone);\n    String dateString = format.format(calendar.getTime());\n    Date date = null;\n    try {\n        date = format.parse(dateString);\n    } catch (ParseException e) {\n        e.printStackTrace();\n    }\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    return new StringBuffer(format.format(date));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..b739ddca 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,19 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");\n+    format.setTimeZone(mTimeZone);\n+    String dateString = format.format(calendar.getTime());\n+    Date date = null;\n+    try {\n+        date = format.parse(dateString);\n+    } catch (ParseException e) {\n+        e.printStackTrace();\n+    }\n+    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+    return new StringBuffer(format.format(date));\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}