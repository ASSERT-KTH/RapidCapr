{
    "patch": "protected BasePeriod(long duration) {\n    this(duration, null, null);\n    // Fixed for [3264409]\n    this.years = 0;\n    this.months = 0;\n    this.weeks = 0;\n    this.days = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_DAY);\n    this.hours = FieldUtils.safeToInt((duration / DateTimeConstants.MILLIS_PER_HOUR) % 24);\n    this.minutes = FieldUtils.safeToInt((duration / DateTimeConstants.MILLIS_PER_MINUTE) % 60);\n    this.seconds = FieldUtils.safeToInt((duration / DateTimeConstants.MILLIS_PER_SECOND) % 60);\n    this.millis = FieldUtils.safeToInt(duration % 1000);\n}",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex 679b734a..b709ef5a 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -218,10 +218,18 @@ public abstract class BasePeriod\n      *\n      * @param duration  the duration, in milliseconds\n      */\n-    protected BasePeriod(long duration) {\n-        this(duration, null, null);\n-        // bug [3264409]\n-    }\n+protected BasePeriod(long duration) {\n+    this(duration, null, null);\n+    // Fixed for [3264409]\n+    this.years = 0;\n+    this.months = 0;\n+    this.weeks = 0;\n+    this.days = FieldUtils.safeToInt(duration / DateTimeConstants.MILLIS_PER_DAY);\n+    this.hours = FieldUtils.safeToInt((duration / DateTimeConstants.MILLIS_PER_HOUR) % 24);\n+    this.minutes = FieldUtils.safeToInt((duration / DateTimeConstants.MILLIS_PER_MINUTE) % 60);\n+    this.seconds = FieldUtils.safeToInt((duration / DateTimeConstants.MILLIS_PER_SECOND) % 60);\n+    this.millis = FieldUtils.safeToInt(duration % 1000);\n+}\n \n     /**\n      * Creates a period from the given millisecond duration, which is only really",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}