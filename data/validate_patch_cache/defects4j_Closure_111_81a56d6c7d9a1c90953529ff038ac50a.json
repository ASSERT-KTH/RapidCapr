{
    "patch": "    protected JSType caseTopType(JSType topType) {\n        if (topType.isBottom()) {\n            return getNativeType(UNKNOWN_TYPE);\n        }\n        if (topType.isUnknownType()) {\n            return getNativeType(OBJECT_TYPE);\n        }\n        if (topType.isEnumElementType() || topType.isEnumType()) {\n            return topType;\n        }\n        return topType.restrictByNotNullOrUndefined().autobox();\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..738c2372 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -50,9 +50,18 @@ public class ClosureReverseAbstractInterpreter\n   private final Visitor<JSType> restrictToArrayVisitor =\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n-        protected JSType caseTopType(JSType topType) {\n-          return topType;\n+    protected JSType caseTopType(JSType topType) {\n+        if (topType.isBottom()) {\n+            return getNativeType(UNKNOWN_TYPE);\n+        }\n+        if (topType.isUnknownType()) {\n+            return getNativeType(OBJECT_TYPE);\n         }\n+        if (topType.isEnumElementType() || topType.isEnumType()) {\n+            return topType;\n+        }\n+        return topType.restrictByNotNullOrUndefined().autobox();\n+    }\n \n         @Override\n         public JSType caseObjectType(ObjectType type) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}