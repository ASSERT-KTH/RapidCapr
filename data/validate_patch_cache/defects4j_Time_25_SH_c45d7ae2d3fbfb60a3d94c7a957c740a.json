{
    "patch": "if ((offsetLocal - offsetAdjusted) <= 0) {\n    return offsetAdjusted;\n}\nlong prevLocal = previousTransition(instantAdjusted);\nlong prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\nif (prevLocal != prevAdjusted) {\n    return offsetLocal;\n}\nreturn offsetAdjusted;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/DateTimeZone.java b/src/main/java/org/joda/time/DateTimeZone.java\nindex a320022c..5e82b37a 100644\n--- a/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/src/main/java/org/joda/time/DateTimeZone.java\n@@ -896,6 +896,15 @@ public abstract class DateTimeZone implements Serializable {\n                     return offsetLocal;\n                 }\n             }\n+if ((offsetLocal - offsetAdjusted) <= 0) {\n+    return offsetAdjusted;\n+}\n+long prevLocal = previousTransition(instantAdjusted);\n+long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n+if (prevLocal != prevAdjusted) {\n+    return offsetLocal;\n+}\n+return offsetAdjusted;\n         }\n         return offsetAdjusted;\n     }",
    "result_reason": "junit.framework.ComparisonFailure: 2007-03-25T01:00:00.000+03:00 expected:<2007-03-25T0[3:00:00.000+04]:00> but was:<2007-03-25T0[1:00:00.000+03]:00>",
    "test_result": "FAIL"
}