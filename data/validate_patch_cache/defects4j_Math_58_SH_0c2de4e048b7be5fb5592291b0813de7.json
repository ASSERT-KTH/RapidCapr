{
    "patch": "    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        final int len = getObservations().length;\n        final double[] x = new double[len];\n        final double[] y = new double[len];\n\n        for (int i = 0; i < len; i++) {\n            x[i] = getObservations()[i][0];\n            y[i] = getObservations()[i][1];\n        }\n\n        return new GaussianCurveFitter(new SimpleCurveFitter(new LevenbergMarquardtOptimizer()))\n              .fit(new WeightedObservedPoints().addAll(x, y), guess);\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..a863c97fd 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,20 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+    public double[] fit() {\n+        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n+        final int len = getObservations().length;\n+        final double[] x = new double[len];\n+        final double[] y = new double[len];\n+\n+        for (int i = 0; i < len; i++) {\n+            x[i] = getObservations()[i][0];\n+            y[i] = getObservations()[i][1];\n+        }\n+\n+        return new GaussianCurveFitter(new SimpleCurveFitter(new LevenbergMarquardtOptimizer()))\n+              .fit(new WeightedObservedPoints().addAll(x, y), guess);\n+    }\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}