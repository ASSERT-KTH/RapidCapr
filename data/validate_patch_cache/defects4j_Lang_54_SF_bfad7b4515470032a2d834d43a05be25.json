{
    "patch": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len != 2 && len != 5 && len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        int firstIndex = str.indexOf('_');\n        int lastIndex = str.lastIndexOf('_');\n        if (firstIndex == -1) {\n            return new Locale(str);\n        }\n        \n        if (firstIndex == lastIndex) {\n            return new Locale(str.substring(0, firstIndex), str.substring(firstIndex + 1));\n        }\n        \n        return new Locale(str.substring(0, firstIndex), str.substring(firstIndex + 1, lastIndex), str.substring(lastIndex + 1));\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..f72d3b49 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -99,31 +99,18 @@ public class LocaleUtils {\n         if (len != 2 && len != 5 && len < 7) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+\n+        int firstIndex = str.indexOf('_');\n+        int lastIndex = str.lastIndexOf('_');\n+        if (firstIndex == -1) {\n+            return new Locale(str);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+        \n+        if (firstIndex == lastIndex) {\n+            return new Locale(str.substring(0, firstIndex), str.substring(firstIndex + 1));\n         }\n+        \n+        return new Locale(str.substring(0, firstIndex), str.substring(firstIndex + 1, lastIndex), str.substring(lastIndex + 1));\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "junit.framework.AssertionFailedError: Should fail if not lowercase",
    "test_result": "FAIL"
}