{
    "patch": "      Name name = functionNode.getFunctionName();\n      Node node = newNode(Token.FUNCTION);\n      Node newName;\n      if (name == null) {\n        newName = new Node(Token.NAME);\n        newName.setString(\"\");\n        newName.setLineno(functionNode.getLineno());\n        newName.setCharno(position2charno(functionNode.getAbsolutePosition()));\n      } else {\n        newName = transform(name);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..1a387889 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -384,7 +384,6 @@ public class IRFactory {\n         node.setDirectives(directives);\n       }\n     }\n-\n     private boolean isDirective(Node n) {\n       if (n == null) return false;\n \n@@ -514,6 +513,17 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+      Name name = functionNode.getFunctionName();\n+      Node node = newNode(Token.FUNCTION);\n+      Node newName;\n+      if (name == null) {\n+        newName = new Node(Token.NAME);\n+        newName.setString(\"\");\n+        newName.setLineno(functionNode.getLineno());\n+        newName.setCharno(position2charno(functionNode.getAbsolutePosition()));\n+      } else {\n+        newName = transform(name);\n+      }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable name is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}