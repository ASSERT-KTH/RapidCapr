{
    "patch": "public Week(Date time, TimeZone zone) {\n    if (time == null) {\n        throw new IllegalArgumentException(\"Null 'time' argument.\");\n    }\n    if (zone == null) {\n        throw new IllegalArgumentException(\"Null 'zone' argument.\");\n    }\n    Calendar calendar = Calendar.getInstance(zone);\n    calendar.setTime(time);\n    int week = calendar.get(Calendar.WEEK_OF_YEAR);\n    if (week == 1 && calendar.get(Calendar.MONTH) == Calendar.DECEMBER) {\n        week = 53;\n    }\n    super(week, calendar.get(Calendar.YEAR));\n}",
    "patch_diff": "diff --git a/source/org/jfree/data/time/Week.java b/source/org/jfree/data/time/Week.java\nindex 3cc4138..7ec593a 100644\n--- a/source/org/jfree/data/time/Week.java\n+++ b/source/org/jfree/data/time/Week.java\n@@ -172,7 +172,21 @@ public class Week extends RegularTimePeriod implements Serializable {\n      */\n     public Week(Date time, TimeZone zone) {\n         // defer argument checking...\n-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());\n+public Week(Date time, TimeZone zone) {\n+    if (time == null) {\n+        throw new IllegalArgumentException(\"Null 'time' argument.\");\n+    }\n+    if (zone == null) {\n+        throw new IllegalArgumentException(\"Null 'zone' argument.\");\n+    }\n+    Calendar calendar = Calendar.getInstance(zone);\n+    calendar.setTime(time);\n+    int week = calendar.get(Calendar.WEEK_OF_YEAR);\n+    if (week == 1 && calendar.get(Calendar.MONTH) == Calendar.DECEMBER) {\n+        week = 53;\n+    }\n+    super(week, calendar.get(Calendar.YEAR));\n+}\n     }\n \n     /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}