{
    "patch": "if (!(constraintObj instanceof NamedType) || ((NamedType) constraintObj).getReferenceName() != null) {\n      return; // do not match if constraint is not anonymous or is not a record type\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex b6e3fc78..4344a70f 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -554,6 +554,9 @@ class PrototypeObjectType extends ObjectType {\n   @Override\n   public void matchConstraint(ObjectType constraintObj) {\n     // We only want to match contraints on anonymous types.\n+if (!(constraintObj instanceof NamedType) || ((NamedType) constraintObj).getReferenceName() != null) {\n+      return; // do not match if constraint is not anonymous or is not a record type\n+}\n \n     // Handle the case where the constraint object is a record type.\n     //",
    "result_reason": "junit.framework.ComparisonFailure: expected:<...arameter",
    "test_result": "FAIL"
}