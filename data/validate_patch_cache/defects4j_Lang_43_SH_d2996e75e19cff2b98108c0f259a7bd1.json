{
    "patch": "            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n                pos.setIndex(i + ESCAPED_QUOTE.length());\n                lastHold = pos.getIndex();\n                continue;\n            } else if (escapingOn && c[i] == QUOTE) {\n                appendTo.append(c, lastHold, i - lastHold);\n                pos.setIndex(i + 1);\n                return appendTo == null ? null : appendTo.append(QUOTE);\n            }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\nindex 404be490..d13b2112 100644\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n@@ -419,6 +419,16 @@ public class ExtendedMessageFormat extends MessageFormat {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n+                pos.setIndex(i + ESCAPED_QUOTE.length());\n+                lastHold = pos.getIndex();\n+                continue;\n+            } else if (escapingOn && c[i] == QUOTE) {\n+                appendTo.append(c, lastHold, i - lastHold);\n+                pos.setIndex(i + 1);\n+                return appendTo == null ? null : appendTo.append(QUOTE);\n+            }\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}