{
    "patch": "DateTimeZone zone = chrono.getZone();\nDateTimeParserBucket bucket = new DateTimeParserBucket(\n            instantLocal,\n            zone,\n            iLocale,\n            bucket.getPivotYear(),\n            chrono,\n            iPivotYear,\n            iDefaultYear);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatter.java b/src/main/java/org/joda/time/format/DateTimeFormatter.java\nindex a4b16127..b1aabe58 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n@@ -706,7 +706,15 @@ public class DateTimeFormatter {\n         chrono = selectChronology(chrono);\n         \n         DateTimeParserBucket bucket = new DateTimeParserBucket(\n-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n+DateTimeZone zone = chrono.getZone();\n+DateTimeParserBucket bucket = new DateTimeParserBucket(\n+            instantLocal,\n+            zone,\n+            iLocale,\n+            bucket.getPivotYear(),\n+            chrono,\n+            iPivotYear,\n+            iDefaultYear);\n         int newPos = parser.parseInto(bucket, text, position);\n         instant.setMillis(bucket.computeMillis(false, text));\n         if (iOffsetParsed && bucket.getOffsetInteger() != null) {",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}