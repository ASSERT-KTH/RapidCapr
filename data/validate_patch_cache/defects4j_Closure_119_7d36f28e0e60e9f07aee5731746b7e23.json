{
    "patch": "case Token.CATCH:\n    handleCatch(module, scope, (Catch) n);\n    break;\ncase Token.INC:\ncase Token.DEC:\n    isSet = true;\n    type = Name.Type.OTHER;\n    break;\ndefault:\n    if (NodeUtil.isAssignmentOp(parent) &&\n            parent.getFirstChild() == n) {\n        isSet = true;\n        type = Name.Type.OTHER;\n    } else {\n        return;\n    }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..63f0f510 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -302,7 +302,6 @@ class GlobalNamespace\n \n       return true;\n     }\n-\n     public void collect(JSModule module, Scope scope, Node n) {\n       Node parent = n.getParent();\n \n@@ -363,6 +362,22 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.CATCH:\n+    handleCatch(module, scope, (Catch) n);\n+    break;\n+case Token.INC:\n+case Token.DEC:\n+    isSet = true;\n+    type = Name.Type.OTHER;\n+    break;\n+default:\n+    if (NodeUtil.isAssignmentOp(parent) &&\n+            parent.getFirstChild() == n) {\n+        isSet = true;\n+        type = Name.Type.OTHER;\n+    } else {\n+        return;\n+    }\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}