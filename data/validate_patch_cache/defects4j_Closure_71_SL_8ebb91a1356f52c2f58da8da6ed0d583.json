{
    "patch": "boolean isOverride = parent != null\n          && parent.isAssign()\n          && getprop.getFirstChild().isGetProp()\n          && t.getClosestHoistScope().isGlobal()\n          && !getprop.getFirstChild().getFirstChild().isThis();",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java\nindex b23fd7af..1267298c 100644\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n@@ -413,7 +413,11 @@ class CheckAccessControls implements ScopedCallback, HotSwapCompilerPass {\n     if (objectType != null) {\n       // Is this a normal property access, or are we trying to override\n       // an existing property?\n-      boolean isOverride = t.inGlobalScope() &&\n+boolean isOverride = parent != null\n+          && parent.isAssign()\n+          && getprop.getFirstChild().isGetProp()\n+          && t.getClosestHoistScope().isGlobal()\n+          && !getprop.getFirstChild().getFirstChild().isThis();\n           parent.getType() == Token.ASSIGN &&\n           parent.getFirstChild() == getprop;\n ",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}