{
    "patch": "    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        Calendar targetCal = calendar;\n        if (mTimeZoneForced) {\n            targetCal = (Calendar) calendar.clone();\n            targetCal.setTimeZone(mTimeZone);\n        }\n        else if (!calendar.getTimeZone().equals(TimeZone.getTimeZone(\"UTC\"))) {\n            // Convert time to UTC if calendar timezone is not already UTC\n            targetCal = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n            targetCal.setTimeInMillis(calendar.getTimeInMillis());\n        }\n        return applyRules(targetCal, buf);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..45a482a1 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -868,11 +868,17 @@ public class FastDateFormat extends Format {\n      * @return the specified string buffer\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n+        Calendar targetCal = calendar;\n         if (mTimeZoneForced) {\n-            calendar = (Calendar) calendar.clone();\n-            calendar.setTimeZone(mTimeZone);\n+            targetCal = (Calendar) calendar.clone();\n+            targetCal.setTimeZone(mTimeZone);\n         }\n-        return applyRules(calendar, buf);\n+        else if (!calendar.getTimeZone().equals(TimeZone.getTimeZone(\"UTC\"))) {\n+            // Convert time to UTC if calendar timezone is not already UTC\n+            targetCal = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n+            targetCal.setTimeInMillis(calendar.getTimeInMillis());\n+        }\n+        return applyRules(targetCal, buf);\n     }\n \n     /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<T1[0]:11:12> but was:<T1[3]:11:12>",
    "test_result": "FAIL"
}