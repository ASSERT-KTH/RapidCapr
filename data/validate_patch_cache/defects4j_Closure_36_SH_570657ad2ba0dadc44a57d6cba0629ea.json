{
    "patch": "            String propertyName = convention.getGetterName(value.getFirstChild().getString());\n            if (propertyName != null) {\n              return convention.getSingletonGetterClassName(\n                value.getFirstChild().qualifier.getOriginalQualifiedName(), propertyName) == null;\n            }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java\nindex 0b4b3ded..8ab90f9c 100644\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n@@ -572,6 +572,11 @@ class InlineVariables implements CompilerPass {\n \n           // issue 668: Don't inline singleton getter methods\n           // calls as this confused class removing logic.\n+            String propertyName = convention.getGetterName(value.getFirstChild().getString());\n+            if (propertyName != null) {\n+              return convention.getSingletonGetterClassName(\n+                value.getFirstChild().qualifier.getOriginalQualifiedName(), propertyName) == null;\n+            }\n         }\n       }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}