{
    "patch": "    public Period normalizedStandard(PeriodType type) {\n        type = DateTimeUtils.getPeriodType(type);\n        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());\n        int years = getYears();\n        int months = getMonths();\n        if (years != 0 || months != 0) {\n            years = FieldUtils.safeAdd(years, months / 12);\n            months = months % 12;\n            if (years != 0) {\n                result = result.withYears(years);\n            }\n            if (months != 0) {\n                try {\n                    result = result.withMonths(months);\n                } catch (UnsupportedOperationException ex) {\n                    // try to normalize manually\n                    int totalMonths = years * 12 + months;\n                    int normalizedYears = totalMonths / 12;\n                    int normalizedMonths = totalMonths % 12;\n                    if (normalizedYears != years) {\n                        result = result.withYears(normalizedYears);\n                    }\n                    if (normalizedMonths != months) {\n                        result = result.withMonths(normalizedMonths);\n                    }\n                }\n            }\n        }\n        return result;\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex f4047933..a6a5afca 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1631,7 +1631,20 @@ public final class Period\n                 result = result.withYears(years);\n             }\n             if (months != 0) {\n-                result = result.withMonths(months);\n+                try {\n+                    result = result.withMonths(months);\n+                } catch (UnsupportedOperationException ex) {\n+                    // try to normalize manually\n+                    int totalMonths = years * 12 + months;\n+                    int normalizedYears = totalMonths / 12;\n+                    int normalizedMonths = totalMonths % 12;\n+                    if (normalizedYears != years) {\n+                        result = result.withYears(normalizedYears);\n+                    }\n+                    if (normalizedMonths != months) {\n+                        result = result.withMonths(normalizedMonths);\n+                    }\n+                }\n             }\n         }\n         return result;",
    "result_reason": "java.lang.UnsupportedOperationException: Field is not supported",
    "test_result": "FAIL"
}