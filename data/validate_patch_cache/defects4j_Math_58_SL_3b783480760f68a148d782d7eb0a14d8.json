{
    "patch": "for(int i = 0; i < guess.length; i++) {\n    guess[i] = Math.max(guess[i], Double.MIN_VALUE);\n}\nreturn fit(new Gaussian.Parametric(), guess, getObservations());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..de660f525 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,10 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+for(int i = 0; i < guess.length; i++) {\n+    guess[i] = Math.max(guess[i], Double.MIN_VALUE);\n+}\n+return fit(new Gaussian.Parametric(), guess, getObservations());\n     }\n \n     /**",
    "result_reason": "error: no suitable method found for fit(Parametric,double[],WeightedObservedPoint[])",
    "test_result": "ERROR"
}