{
    "patch": "          case Token.NAME:\n            // This may be a variable get or set.\n            if (parent != null) {\n              switch (parent.getType()) {\n                case Token.VAR:\n                  isSet = true;\n                  break;\n                case Token.ASSIGN:\n                  if (parent.getFirstChild() == n) {\n                    isSet = true;\n                  }\n                  break;\n                case Token.FUNCTION:\n                  Node gramps = parent.getParent();\n                  if (gramps == null || NodeUtil.isFunctionExpression(parent)) {\n                    return;\n                  }\n                  isSet = true;\n                  type = Name.Type.FUNCTION;\n                  break;\n                case Token.INC:\n                case Token.DEC:\n                  isSet = true;\n                  break;\n                default:\n                  if (NodeUtil.isAssignmentOp(parent) &&\n                      parent.getFirstChild() == n) {\n                    isSet = true;\n                  }\n              }\n              type = getValueType(n.getNext()); // set type\n              if (!isSet) {\n                type = getValueType(n); // get type\n              }\n            }\n            name = n.getString();\n            break;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..dc9df761 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -363,6 +363,43 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+          case Token.NAME:\n+            // This may be a variable get or set.\n+            if (parent != null) {\n+              switch (parent.getType()) {\n+                case Token.VAR:\n+                  isSet = true;\n+                  break;\n+                case Token.ASSIGN:\n+                  if (parent.getFirstChild() == n) {\n+                    isSet = true;\n+                  }\n+                  break;\n+                case Token.FUNCTION:\n+                  Node gramps = parent.getParent();\n+                  if (gramps == null || NodeUtil.isFunctionExpression(parent)) {\n+                    return;\n+                  }\n+                  isSet = true;\n+                  type = Name.Type.FUNCTION;\n+                  break;\n+                case Token.INC:\n+                case Token.DEC:\n+                  isSet = true;\n+                  break;\n+                default:\n+                  if (NodeUtil.isAssignmentOp(parent) &&\n+                      parent.getFirstChild() == n) {\n+                    isSet = true;\n+                  }\n+              }\n+              type = getValueType(n.getNext()); // set type\n+              if (!isSet) {\n+                type = getValueType(n); // get type\n+              }\n+            }\n+            name = n.getString();\n+            break;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: variable gramps is already defined in method collect(JSModule,Scope,Node)",
    "test_result": "ERROR"
}