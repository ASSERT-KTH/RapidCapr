{
    "patch": "import org.apache.commons.math3.linear.EigenDecompositionUtils;\n\nprivate RealMatrix squareRoot(RealMatrix m) {\n    EigenDecompositionUtils dec = new EigenDecompositionUtils(m, 1e-8);\n    RealMatrix d = dec.getD();\n    RealMatrix v = dec.getV();\n    for (int i = 0; i < d.getRowDimension(); i++) {\n        if (d.getEntry(i, i) < 0) {\n            throw new IllegalArgumentException(\"Matrix is not positive definite.\");\n        } else {\n            d.setEntry(i, i, FastMath.sqrt(d.getEntry(i, i)));\n        }\n    }\n    return v.multiply(d).multiply(v.transpose());\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\nindex 99d86e92a..25cb32ddf 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n@@ -558,8 +558,19 @@ public abstract class AbstractLeastSquaresOptimizer\n      * @param m Symmetric, positive-definite (weight) matrix.\n      * @return the square-root of the weight matrix.\n      */\n-    private RealMatrix squareRoot(RealMatrix m) {\n-            final EigenDecomposition dec = new EigenDecomposition(m);\n-            return dec.getSquareRoot();\n+import org.apache.commons.math3.linear.EigenDecompositionUtils;\n+\n+private RealMatrix squareRoot(RealMatrix m) {\n+    EigenDecompositionUtils dec = new EigenDecompositionUtils(m, 1e-8);\n+    RealMatrix d = dec.getD();\n+    RealMatrix v = dec.getV();\n+    for (int i = 0; i < d.getRowDimension(); i++) {\n+        if (d.getEntry(i, i) < 0) {\n+            throw new IllegalArgumentException(\"Matrix is not positive definite.\");\n+        } else {\n+            d.setEntry(i, i, FastMath.sqrt(d.getEntry(i, i)));\n+        }\n     }\n+    return v.multiply(d).multiply(v.transpose());\n+}\n }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}