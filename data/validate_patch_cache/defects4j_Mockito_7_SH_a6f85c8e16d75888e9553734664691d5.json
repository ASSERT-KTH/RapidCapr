{
    "patch": "        for (Type type : typeVariable.getBounds()) {\n            registerTypeVariablesOn(type);\n        }\n        if (typeVariable.getGenericDeclaration() instanceof Class) {\n            Class<?> declaringClass = (Class<?>) typeVariable.getGenericDeclaration();\n            if (!declaringClass.isAssignableFrom(Class.class)) {\n                for (Type type : declaringClass.getTypeParameters()) {\n                    registerTypeVariablesOn(type);\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..cf2a59c0d 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -376,6 +376,17 @@ public abstract class GenericMetadataSupport {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+        for (Type type : typeVariable.getBounds()) {\n+            registerTypeVariablesOn(type);\n+        }\n+        if (typeVariable.getGenericDeclaration() instanceof Class) {\n+            Class<?> declaringClass = (Class<?>) typeVariable.getGenericDeclaration();\n+            if (!declaringClass.isAssignableFrom(Class.class)) {\n+                for (Type type : declaringClass.getTypeParameters()) {\n+                    registerTypeVariablesOn(type);\n+                }\n+            }\n+        }\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'",
    "test_result": "FAIL"
}