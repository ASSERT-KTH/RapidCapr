{
    "patch": "  private boolean hasExceptionHandler(Node cfgNode) {\n      ControlFlowGraph<Node> cfg = getCfg();\n      return cfg.getExceptionHandler(cfgNode) != null;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\nindex add5c664..4d6921d0 100644\n--- a/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n+++ b/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java\n@@ -155,8 +155,11 @@ class MaybeReachingVariableUse extends\n \n     return output;\n   }\n-\n   private boolean hasExceptionHandler(Node cfgNode) {\n+  private boolean hasExceptionHandler(Node cfgNode) {\n+      ControlFlowGraph<Node> cfg = getCfg();\n+      return cfg.getExceptionHandler(cfgNode) != null;\n+  }\n     return false;\n   }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}