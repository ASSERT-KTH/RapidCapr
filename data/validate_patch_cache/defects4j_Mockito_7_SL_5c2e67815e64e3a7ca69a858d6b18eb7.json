{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    if (arg == null) {\n        return false;\n    }\n    return StringDescription.toString(m).equals(arg.toString());\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 2d6c07b17..b218b1030 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -376,6 +376,12 @@ public abstract class GenericMetadataSupport {\n             for (Type type : typeVariable.getBounds()) {\n                 registerTypeVariablesOn(type);\n             }\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    if (arg == null) {\n+        return false;\n+    }\n+    return StringDescription.toString(m).equals(arg.toString());\n+}\n             registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n         }\n ",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}