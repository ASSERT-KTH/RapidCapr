{
    "patch": "        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        ShapeList other = (ShapeList) obj;\n        if (this.size() != other.size()) {\n            return false;\n        }\n        Iterator<Shape> thisIter = this.iterator();\n        Iterator<Shape> otherIter = other.iterator();\n        while (thisIter.hasNext() && otherIter.hasNext()) {\n            Shape thisShape = thisIter.next();\n            Shape otherShape = otherIter.next();\n            if (!ShapeUtilities.equal(thisShape, otherShape)) {\n                return false;\n            }\n        }\n        return true;",
    "patch_diff": "diff --git a/source/org/jfree/chart/util/ShapeList.java b/source/org/jfree/chart/util/ShapeList.java\nindex 85f1c81..e2d3c8a 100644\n--- a/source/org/jfree/chart/util/ShapeList.java\n+++ b/source/org/jfree/chart/util/ShapeList.java\n@@ -108,7 +108,23 @@ public class ShapeList extends AbstractObjectList {\n         if (!(obj instanceof ShapeList)) {\n             return false;\n         }\n-        return super.equals(obj);\n+        if (!(obj instanceof ShapeList)) {\n+            return false;\n+        }\n+        ShapeList other = (ShapeList) obj;\n+        if (this.size() != other.size()) {\n+            return false;\n+        }\n+        Iterator<Shape> thisIter = this.iterator();\n+        Iterator<Shape> otherIter = other.iterator();\n+        while (thisIter.hasNext() && otherIter.hasNext()) {\n+            Shape thisShape = thisIter.next();\n+            Shape otherShape = otherIter.next();\n+            if (!ShapeUtilities.equal(thisShape, otherShape)) {\n+                return false;\n+            }\n+        }\n+        return true;\n \n     }\n \n@@ -169,4 +185,3 @@ public class ShapeList extends AbstractObjectList {\n     }\n \n }\n-",
    "result_reason": "error: generics are not supported in -source 1.4",
    "test_result": "ERROR"
}