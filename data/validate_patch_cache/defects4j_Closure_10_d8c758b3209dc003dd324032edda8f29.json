{
    "patch": "  static boolean mayBeString(Node n, boolean recurse) {\n    if (recurse) {\n      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n    }\n    return mayBeStringBase(n);\n  }\n\n  private static boolean mayBeStringBase(Node n) {\n    JSType type = n.getJSType();\n    return type != null && (type.isUnknownType() || type.isStringValueType() || type.isEnumType() || type.isTemplateType());\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eef27927..a038e3e8 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1411,13 +1411,16 @@ public final class NodeUtil {\n   static boolean mayBeString(Node n) {\n     return mayBeString(n, true);\n   }\n-\n   static boolean mayBeString(Node n, boolean recurse) {\n     if (recurse) {\n       return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n-    } else {\n-      return mayBeStringHelper(n);\n     }\n+    return mayBeStringBase(n);\n+  }\n+\n+  private static boolean mayBeStringBase(Node n) {\n+    JSType type = n.getJSType();\n+    return type != null && (type.isUnknownType() || type.isStringValueType() || type.isEnumType() || type.isTemplateType());\n   }\n \n   static boolean mayBeStringHelper(Node n) {",
    "result_reason": "junit.framework.AssertionFailedError:",
    "test_result": "FAIL"
}