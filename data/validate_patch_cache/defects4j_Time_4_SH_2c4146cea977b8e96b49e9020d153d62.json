{
    "patch": "            int[] newValues = getValues();\n            newValues = getField(index).set(this, index, newValues, value);\n            // validate the new partial before creating it\n            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n            iChronology.validate(newPartial, newValues);\n            return newPartial;",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..096d18cd 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,9 +461,14 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n+            int[] newValues = getValues();\n+            newValues = getField(index).set(this, index, newValues, value);\n+            // validate the new partial before creating it\n             Partial newPartial = new Partial(iChronology, newTypes, newValues);\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n+            iChronology.validate(newPartial, newValues);\n+            return newPartial;\n         }\n         if (value == getValue(index)) {\n             return this;",
    "result_reason": "error: variable newValues is already defined in method with(DateTimeFieldType,int)",
    "test_result": "ERROR"
}