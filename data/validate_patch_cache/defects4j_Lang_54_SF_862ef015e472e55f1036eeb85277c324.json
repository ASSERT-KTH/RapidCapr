{
    "patch": "    public static Locale toLocale(String localeString) {\n        if (localeString == null || localeString.isEmpty()) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n        }\n        String[] parts = localeString.split(\"_\", -1);\n        int len = parts.length;\n        if (len > 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n        }\n        String language = parts[0];\n        if (language.isEmpty() || !language.matches(\"^[a-zA-Z]+$\")) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n        }\n        String country = \"\";\n        if (len >= 2) {\n            String cnt = parts[1];\n            if (cnt.isEmpty() || len == 2 || !cnt.matches(\"^[a-zA-Z]{2}$\")) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n            }\n            country = cnt;\n        }\n        String variant = \"\";\n        if (len == 3) {\n            String var = parts[2];\n            if (var.isEmpty() || !var.matches(\"^[0-9a-zA-Z]+$\")) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n            }\n            variant = var;\n        }\n        return new Locale(language, country, variant);\n    }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java\nindex 139d9a7f..497dc62d 100644\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n@@ -91,39 +91,36 @@ public class LocaleUtils {\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n-        if (str == null) {\n-            return null;\n+    public static Locale toLocale(String localeString) {\n+        if (localeString == null || localeString.isEmpty()) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n         }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        String[] parts = localeString.split(\"_\", -1);\n+        int len = parts.length;\n+        if (len > 3) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        String language = parts[0];\n+        if (language.isEmpty() || !language.matches(\"^[a-zA-Z]+$\")) {\n+            throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n         }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n-        } else {\n-            if (str.charAt(2) != '_') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+        String country = \"\";\n+        if (len >= 2) {\n+            String cnt = parts[1];\n+            if (cnt.isEmpty() || len == 2 || !cnt.matches(\"^[a-zA-Z]{2}$\")) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n             }\n-            char ch3 = str.charAt(3);\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n-                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-            }\n-            if (len == 5) {\n-                return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n+            country = cnt;\n+        }\n+        String variant = \"\";\n+        if (len == 3) {\n+            String var = parts[2];\n+            if (var.isEmpty() || !var.matches(\"^[0-9a-zA-Z]+$\")) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + localeString);\n             }\n+            variant = var;\n         }\n+        return new Locale(language, country, variant);\n     }\n \n     //-----------------------------------------------------------------------",
    "result_reason": "java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX",
    "test_result": "FAIL"
}