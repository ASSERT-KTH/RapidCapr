{
    "patch": "double absT = Math.abs(t);\ndouble p;\nif (Double.isNaN(absT) || absT == Double.POSITIVE_INFINITY || absT == Double.NaN) {\n    p = 1.0;\n} else {\n    p = 2 * tDistribution.cumulativeProbability(-absT);\n    if (Double.isNaN(p)) {\n        out[i][j] = Double.NaN;\n    } else if (p == 0.0 || p == 1.0) {\n        out[i][j] = Double.NaN;\n    } else {\n        out[i][j] = 2.0 * (1.0 - p);\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\nindex 83b4c4130..754b4f496 100644\n--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -168,7 +168,20 @@ public class PearsonsCorrelation {\n                 } else {\n                     double r = correlationMatrix.getEntry(i, j);\n                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));\n-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));\n+double absT = Math.abs(t);\n+double p;\n+if (Double.isNaN(absT) || absT == Double.POSITIVE_INFINITY || absT == Double.NaN) {\n+    p = 1.0;\n+} else {\n+    p = 2 * tDistribution.cumulativeProbability(-absT);\n+    if (Double.isNaN(p)) {\n+        out[i][j] = Double.NaN;\n+    } else if (p == 0.0 || p == 1.0) {\n+        out[i][j] = Double.NaN;\n+    } else {\n+        out[i][j] = 2.0 * (1.0 - p);\n+    }\n+}\n                 }\n             }\n         }",
    "result_reason": "junit.framework.AssertionFailedError: expected:<0.014917200614726234> but was:<1.9701655987705473>",
    "test_result": "FAIL"
}