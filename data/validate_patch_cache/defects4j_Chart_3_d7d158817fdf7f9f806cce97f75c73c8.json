{
    "patch": "        if (end < start || start >= this.data.size()) {\n            throw new IllegalArgumentException(\"Invalid 'start' or 'end' argument.\");\n        }\n        if (end >= this.data.size()) {\n            end = this.data.size() - 1;\n        }\n        copy.data = new java.util.ArrayList(this.data.subList(start, end + 1));",
    "patch_diff": "diff --git a/source/org/jfree/data/time/TimeSeries.java b/source/org/jfree/data/time/TimeSeries.java\nindex 795d791..47b5593 100644\n--- a/source/org/jfree/data/time/TimeSeries.java\n+++ b/source/org/jfree/data/time/TimeSeries.java\n@@ -1054,6 +1054,13 @@ public class TimeSeries extends Series implements Cloneable, Serializable {\n             throw new IllegalArgumentException(\"Requires start <= end.\");\n         }\n         TimeSeries copy = (TimeSeries) super.clone();\n+        if (end < start || start >= this.data.size()) {\n+            throw new IllegalArgumentException(\"Invalid 'start' or 'end' argument.\");\n+        }\n+        if (end >= this.data.size()) {\n+            end = this.data.size() - 1;\n+        }\n+        copy.data = new java.util.ArrayList(this.data.subList(start, end + 1));\n         copy.data = new java.util.ArrayList();\n         if (this.data.size() > 0) {\n             for (int index = start; index <= end; index++) {",
    "result_reason": "java.lang.IllegalArgumentException: Invalid 'start' or 'end' argument.",
    "test_result": "FAIL"
}