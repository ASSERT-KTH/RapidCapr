{
    "patch": "Name functionName = functionNode.getFunctionName();\nBoolean isUnnamedFunction = false;\nString identifier = \"\";\nif (functionName == null) {\n    // Create a unique name for this function, to avoid naming collisions.\n    identifier = \"__unknown__function__\" + uniqueId++;\n    functionName = new Name();\n    functionName.setIdentifier(identifier);\n    isUnnamedFunction = true;\n} else {\n    identifier = functionName.getIdentifier();\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..c0b0ca6e 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,6 +514,18 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+Name functionName = functionNode.getFunctionName();\n+Boolean isUnnamedFunction = false;\n+String identifier = \"\";\n+if (functionName == null) {\n+    // Create a unique name for this function, to avoid naming collisions.\n+    identifier = \"__unknown__function__\" + uniqueId++;\n+    functionName = new Name();\n+    functionName.setIdentifier(identifier);\n+    isUnnamedFunction = true;\n+} else {\n+    identifier = functionName.getIdentifier();\n+}\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: variable isUnnamedFunction is already defined in method processFunctionNode(FunctionNode)",
    "test_result": "ERROR"
}