{
    "patch": "      if (name.globalSets == 1 && name.localSets == 0 &&\n          name.aliasingGets > 0) {\n        // Condition (b) holds for this name.\n        boolean inlinedAlias = false;\n        for (Ref ref : name.getRefs()) {\n          if (ref.isSet() || ref.type != Type.ALIASING_GET || !ref.scope.isLocal()) {\n            continue;\n          }\n          // Condition (c) holds for this ref.\n          if (inlineAliasIfPossible(ref, namespace)) {\n            name.removeRef(ref);\n            inlinedAlias = true;\n            break;\n          }\n        }\n        if (inlinedAlias) {\n          // If an alias of name has been inlined, skip adding it back to workList.\n          continue;\n        }\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ab2d2c7c..f69df433 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -171,6 +171,25 @@ class CollapseProperties implements CompilerPass {\n \n       if (name.globalSets == 1 && name.localSets == 0 &&\n           name.aliasingGets > 0) {\n+        // Condition (b) holds for this name.\n+        boolean inlinedAlias = false;\n+        for (Ref ref : name.getRefs()) {\n+          if (ref.isSet() || ref.type != Type.ALIASING_GET || !ref.scope.isLocal()) {\n+            continue;\n+          }\n+          // Condition (c) holds for this ref.\n+          if (inlineAliasIfPossible(ref, namespace)) {\n+            name.removeRef(ref);\n+            inlinedAlias = true;\n+            break;\n+          }\n+        }\n+        if (inlinedAlias) {\n+          // If an alias of name has been inlined, skip adding it back to workList.\n+          continue;\n+        }\n+      }\n+          name.aliasingGets > 0) {\n         // {@code name} meets condition (b). Find all of its local aliases\n         // and try to inline them.\n         List<Ref> refs = Lists.newArrayList(name.getRefs());",
    "result_reason": "error: not a statement",
    "test_result": "ERROR"
}