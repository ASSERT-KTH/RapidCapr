{
    "patch": "  public final boolean isEmptyType() {\n    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isPrimitive() && !isLongType() && !isDoubleType() && !\"boolean\".equals(getName());\n  }\n\n  @Override\n  public String toString() {\n    return isEmptyType() ? \"**EMPTY**\" : getName();\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 32a0b250..498a7951 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -160,7 +160,14 @@ public abstract class JSType implements Serializable {\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+  public final boolean isEmptyType() {\n+    return isNoType() || isNoObjectType() || isNoResolvedType() || isVoidType() || isPrimitive() && !isLongType() && !isDoubleType() && !\"boolean\".equals(getName());\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return isEmptyType() ? \"**EMPTY**\" : getName();\n+  }\n   }\n \n   public boolean isNumberObjectType() {",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}