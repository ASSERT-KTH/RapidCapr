{
    "patch": "    } else {\n      options.messageBundle = new EmptyMessageBundle();\n    }\n\n    options.setLanguageIn(flags.languageIn);\n    options.setLanguageOut(flags.languageOut);\n    options.setSourceMapOutputPath(flags.sourceMapOutputPath);\n    options.setSourceMapFormat(flags.sourceMapFormat);\n    return options;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..d7f515e6 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,16 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+    } else {\n+      options.messageBundle = new EmptyMessageBundle();\n+    }\n+\n+    options.setLanguageIn(flags.languageIn);\n+    options.setLanguageOut(flags.languageOut);\n+    options.setSourceMapOutputPath(flags.sourceMapOutputPath);\n+    options.setSourceMapFormat(flags.sourceMapFormat);\n+    return options;\n+  }\n     }\n \n     return options;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}