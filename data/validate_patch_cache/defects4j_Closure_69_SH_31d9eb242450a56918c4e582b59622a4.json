{
    "patch": "      if (functionType.getTypeOfThis() != null && !NodeUtil.isGet(functionType.getTypeOfThis().getFirstChild())) {\n        report(t, n, EXPLICIT_THIS_WITHOUT_GET, childType.toString());\n        ensureTyped(t, n); // Ensure that the node is typed anyway.\n        return;\n      }\n\n      visitParameterList(t, n, functionType);\n      ensureTyped(t, n, functionType.getReturnType());",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex f58418c6..715b19a8 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1577,6 +1577,14 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {\n \n       // Functions with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n+      if (functionType.getTypeOfThis() != null && !NodeUtil.isGet(functionType.getTypeOfThis().getFirstChild())) {\n+        report(t, n, EXPLICIT_THIS_WITHOUT_GET, childType.toString());\n+        ensureTyped(t, n); // Ensure that the node is typed anyway.\n+        return;\n+      }\n+\n+      visitParameterList(t, n, functionType);\n+      ensureTyped(t, n, functionType.getReturnType());\n \n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}