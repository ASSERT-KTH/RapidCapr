{
    "patch": "public Dfp multiply(final int x) {\n    if (x >= 0 && x < RADIX) {\n        return multiplyFast(x);\n    }\n    final Dfp tx = newInstance(x);\n    final DfpField field = getField();\n    final Dfp powerOfTwo = field.getPowerOfTwo();\n    final int[] work = new int[2 * tx.nDigits];\n    boolean negative = false;\n    int v = x;\n    if (v < 0) {\n        negative = true;\n        v = -v;\n    }\n    Dfp t = powerOfTwo;\n    while (v != 0) {\n        if ((v & 1) != 0) {\n            t = t.multiply(tx);\n        }\n        tx.sqr();\n        v >>= 1;\n    }\n    if (negative) {\n        t = powerOfTwo.multiply(2).subtract(t);\n    }\n    return t.round();\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/special/Gamma.java b/src/java/org/apache/commons/math/special/Gamma.java\nindex 8c565cbff..98b1558e5 100644\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n@@ -28,7 +28,33 @@ import org.apache.commons.math.util.ContinuedFraction;\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Gamma implements Serializable {\n+public Dfp multiply(final int x) {\n+    if (x >= 0 && x < RADIX) {\n+        return multiplyFast(x);\n+    }\n+    final Dfp tx = newInstance(x);\n+    final DfpField field = getField();\n+    final Dfp powerOfTwo = field.getPowerOfTwo();\n+    final int[] work = new int[2 * tx.nDigits];\n+    boolean negative = false;\n+    int v = x;\n+    if (v < 0) {\n+        negative = true;\n+        v = -v;\n+    }\n+    Dfp t = powerOfTwo;\n+    while (v != 0) {\n+        if ((v & 1) != 0) {\n+            t = t.multiply(tx);\n+        }\n+        tx.sqr();\n+        v >>= 1;\n+    }\n+    if (negative) {\n+        t = powerOfTwo.multiply(2).subtract(t);\n+    }\n+    return t.round();\n+}\n     \n     /** Serializable version identifier */\n     private static final long serialVersionUID = -6587513359895466954L;",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}