{
    "patch": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n    int sLen = searchStr.length();\n    if (sLen == 0) {\n        return true;\n    }\n    char firstChar = Character.toLowerCase(searchStr.charAt(0));\n    for (int i = 0, l = str.length() - sLen; i <= l; i++) {\n        if (Character.toLowerCase(str.charAt(i)) != firstChar) {\n            continue;\n        }\n        if (str.regionMatches(true, i, searchStr, 0, sLen)) {\n          ",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/StringUtils.java b/src/java/org/apache/commons/lang/StringUtils.java\nindex 72b4a491..48b4ac52 100644\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n@@ -1041,12 +1041,21 @@ public class StringUtils {\n      * @return true if the String contains the search String irrespective of\n      * case or false if not or <code>null</code> string input\n      */\n-    public static boolean containsIgnoreCase(String str, String searchStr) {\n-        if (str == null || searchStr == null) {\n-            return false;\n-        }\n-        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+public static boolean containsIgnoreCase(String str, String searchStr) {\n+    if (str == null || searchStr == null) {\n+        return false;\n     }\n+    int sLen = searchStr.length();\n+    if (sLen == 0) {\n+        return true;\n+    }\n+    char firstChar = Character.toLowerCase(searchStr.charAt(0));\n+    for (int i = 0, l = str.length() - sLen; i <= l; i++) {\n+        if (Character.toLowerCase(str.charAt(i)) != firstChar) {\n+            continue;\n+        }\n+        if (str.regionMatches(true, i, searchStr, 0, sLen)) {\n+          \n \n     // IndexOfAny chars\n     //-----------------------------------------------------------------------",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}