{
    "patch": "    public Dfp percentageValue() {\n        final Dfp factor = newInstance(100); // create a new Dfp instance of value 100\n        factor.exp = exp; // propagate the exponent to the new instance\n        factor.field.setIEEEFlagsBits(field.getIEEEFlags()); // propagate any flags to the new instance\n        return multiply(factor); // multiply the current instance with the factor and return the result\n    }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\nindex f84218ebd..96d0e32b8 100644\n--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java\n@@ -593,8 +593,11 @@ public class Fraction\n      *\n      * @return the fraction percentage as a <tt>double</tt>.\n      */\n-    public double percentageValue() {\n-        return multiply(100).doubleValue();\n+    public Dfp percentageValue() {\n+        final Dfp factor = newInstance(100); // create a new Dfp instance of value 100\n+        factor.exp = exp; // propagate the exponent to the new instance\n+        factor.field.setIEEEFlagsBits(field.getIEEEFlags()); // propagate any flags to the new instance\n+        return multiply(factor); // multiply the current instance with the factor and return the result\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}