{
    "patch": "if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n  options.setMessageBundle(flags.translationsFile.isEmpty() ? null :\n      new XtbMessageBundle(\n          new FileInputStream(flags.translationsFile),\n          flags.translationsProject ));\n} else {\n  options.setMessageBundle(new EmptyMessageBundle());\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..9bf9887d 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,6 +859,14 @@ public class CommandLineRunner extends\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn't really ask for i18n.\n       options.messageBundle = new EmptyMessageBundle();\n+if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n+  options.setMessageBundle(flags.translationsFile.isEmpty() ? null :\n+      new XtbMessageBundle(\n+          new FileInputStream(flags.translationsFile),\n+          flags.translationsProject ));\n+} else {\n+  options.setMessageBundle(new EmptyMessageBundle());\n+}\n     }\n \n     return options;",
    "result_reason": "error: unreported exception FileNotFoundException; must be caught or declared to be thrown",
    "test_result": "ERROR"
}