{
    "patch": "public double getPct(Object v) {\n    if (v == null) {\n        throw new NullPointerException(\"Argument must not be null\");\n    }\n    if (!(v instanceof Comparable<?>)) {\n        throw new ClassCastException(\"Argument must be Comparable\");\n    }\n    return getCumPct((Comparable<? super T>) v);\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..e846c1861 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -299,9 +299,15 @@ public class Frequency implements Serializable {\n      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n      */\n     @Deprecated\n-    public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+public double getPct(Object v) {\n+    if (v == null) {\n+        throw new NullPointerException(\"Argument must not be null\");\n+    }\n+    if (!(v instanceof Comparable<?>)) {\n+        throw new ClassCastException(\"Argument must be Comparable\");\n     }\n+    return getCumPct((Comparable<? super T>) v);\n+}\n \n     /**\n      * Returns the percentage of values that are equal to v",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}