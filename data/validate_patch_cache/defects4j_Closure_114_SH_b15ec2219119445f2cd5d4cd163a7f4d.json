{
    "patch": "        } else {\n          // If the assignment is not part of a call expression\n          // then we record the dependency scope of the recordNode\n          // otherwise it's recorded for the assignment node itself\n          boolean isCallAssignment = n.getParent().isCall() && n.getParent().getFirstChild() == n;\n          Node nodeToRecord = isCallAssignment ? n : recordNode;\n          recordDepScope(nodeToRecord, ns);\n        }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 0fc5ae8f..3c6cb731 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -576,6 +576,13 @@ final class NameAnalyzer implements CompilerPass {\n             recordDepScope(nameNode, ns);\n           }\n         } else {\n+          // If the assignment is not part of a call expression\n+          // then we record the dependency scope of the recordNode\n+          // otherwise it's recorded for the assignment node itself\n+          boolean isCallAssignment = n.getParent().isCall() && n.getParent().getFirstChild() == n;\n+          Node nodeToRecord = isCallAssignment ? n : recordNode;\n+          recordDepScope(nodeToRecord, ns);\n+        }\n           // The rhs of the assignment is the caller, so it's used by the\n           // context. Don't associate it w/ the lhs.\n           // FYI: this fixes only the specific case where the assignment is the",
    "result_reason": "error: class, interface, or enum expected",
    "test_result": "ERROR"
}