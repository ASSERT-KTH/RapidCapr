{
    "patch": "      // Don't traverse functions that are getting lent to a prototype.\n      if (parent != null && NodeUtil.isGet(parent) &&\n          parent.getLastChild().getString().equals(\"prototype\") &&\n          parent.getFirstChild().getLastChild().matchesName(\"apply\")) {\n        // The function is getting \"applied\" to a prototype; don't traverse it.\n        return false;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java\nindex fa598d2e..5fd33ea7 100644\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n@@ -112,6 +112,13 @@ final class CheckGlobalThis implements Callback {\n       }\n \n       // Don't traverse functions that are getting lent to a prototype.\n+      // Don't traverse functions that are getting lent to a prototype.\n+      if (parent != null && NodeUtil.isGet(parent) &&\n+          parent.getLastChild().getString().equals(\"prototype\") &&\n+          parent.getFirstChild().getLastChild().matchesName(\"apply\")) {\n+        // The function is getting \"applied\" to a prototype; don't traverse it.\n+        return false;\n+      }\n     }\n \n     if (parent != null && parent.getType() == Token.ASSIGN) {",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}