{
    "patch": "    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        int size = elementPairs.size();\n        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n            Separator sep = (Separator) elementPairs.get(0);\n            PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n            sep = sep.finish(f.getPrinter(), f.getParser());\n            return new PeriodFormatter(f.getPrinter().withPrefix(sep), f.getParser());\n        }\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1])\n                .withParsedAdjustment(new SomeYears());\n        }\n    }\n\n    private static class SomeYears implements PeriodParser, PeriodPrinter {\n        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {\n            return 0;\n        }\n\n        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {\n            return 0;\n        }\n\n        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n        }\n\n        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {\n        }\n\n        public int parseInto(ReadWritablePeriod period, String text, int position, Locale locale) {\n            period.addYears(1);\n            return position;\n        }\n\n        public int parseInto(ReadWritablePeriod period, String text, int position) {\n            period.addYears(1);\n            return position;\n        }\n    }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 15332284..a6dee531 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -798,9 +798,9 @@ public class PeriodFormatterBuilder {\n         int size = elementPairs.size();\n         if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n             Separator sep = (Separator) elementPairs.get(0);\n-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n-                sep = sep.finish(f.getPrinter(), f.getParser());\n-                return new PeriodFormatter(sep, sep);\n+            PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n+            sep = sep.finish(f.getPrinter(), f.getParser());\n+            return new PeriodFormatter(f.getPrinter().withPrefix(sep), f.getParser());\n         }\n         Object[] comp = createComposite(elementPairs);\n         if (notPrinter) {\n@@ -808,7 +808,34 @@ public class PeriodFormatterBuilder {\n         } else if (notParser) {\n             return new PeriodFormatter((PeriodPrinter) comp[0], null);\n         } else {\n-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n+            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1])\n+                .withParsedAdjustment(new SomeYears());\n+        }\n+    }\n+\n+    private static class SomeYears implements PeriodParser, PeriodPrinter {\n+        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {\n+            return 0;\n+        }\n+\n+        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {\n+            return 0;\n+        }\n+\n+        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n+        }\n+\n+        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {\n+        }\n+\n+        public int parseInto(ReadWritablePeriod period, String text, int position, Locale locale) {\n+            period.addYears(1);\n+            return position;\n+        }\n+\n+        public int parseInto(ReadWritablePeriod period, String text, int position) {\n+            period.addYears(1);\n+            return position;\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}