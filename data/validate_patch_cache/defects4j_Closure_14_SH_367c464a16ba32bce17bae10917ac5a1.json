{
    "patch": "// If we are coming out of the FINALLY block...\nelse if (parent.getLastChild() == node){\n  if (cfa != null) {\n    for (Node finallyNode : cfa.finallyMap.get(parent)) {\n      cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n    }\n  }\n  return computeFollowNode(fromNode, parent, cfa);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..a9cf2385 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,15 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+// If we are coming out of the FINALLY block...\n+else if (parent.getLastChild() == node){\n+  if (cfa != null) {\n+    for (Node finallyNode : cfa.finallyMap.get(parent)) {\n+      cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+    }\n+  }\n+  return computeFollowNode(fromNode, parent, cfa);\n+}\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}