{
    "patch": "      public int parseArguments(Parameters params) throws CmdLineException {\n        String param = params.getParameter(0);\n\n        if (param == null) {\n          setter.addValue(true);\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            setter.addValue(true);\n          } else if (FALSES.contains(lowerParam)) {\n            setter.addValue(false);\n          } else {\n            throw new CmdLineException(owner, new IllegalAnnotationError(\"Invalid boolean value: \" + param));\n          }\n        }\n        return 1;\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex f146b0e4..fb032658 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -335,7 +335,6 @@ public class CommandLineRunner extends\n \n         if (param == null) {\n           setter.addValue(true);\n-          return 0;\n         } else {\n           String lowerParam = param.toLowerCase();\n           if (TRUES.contains(lowerParam)) {\n@@ -343,11 +342,10 @@ public class CommandLineRunner extends\n           } else if (FALSES.contains(lowerParam)) {\n             setter.addValue(false);\n           } else {\n-            setter.addValue(true);\n-            return 0;\n+            throw new CmdLineException(owner, new IllegalAnnotationError(\"Invalid boolean value: \" + param));\n           }\n-          return 1;\n         }\n+        return 1;\n       }\n \n       @Override",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}