{
    "patch": "  @Override\n  Node processFunctionNode(FunctionNode functionNode) {\n    Name name = functionNode.getFunctionName();\n    boolean hasName = name != null;\n    Node node =\n        newNode(\n            Token.FUNCTION,\n            hasName ? transform(name) : null,\n            transform(functionNode.getParams()),\n            transform(functionNode.getBody()));\n    if (hasName) {\n      int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n      node.setLineno(name.getLineno());\n      node.setCharno(position2charno(lpColumn));\n    } else {\n      node.setLineno(functionNode.getLineno());\n    }\n    return node;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 4a733cda..5d67111b 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -384,7 +384,6 @@ public class IRFactory {\n         node.setDirectives(directives);\n       }\n     }\n-\n     private boolean isDirective(Node n) {\n       if (n == null) return false;\n \n@@ -514,6 +513,25 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n+  @Override\n+  Node processFunctionNode(FunctionNode functionNode) {\n+    Name name = functionNode.getFunctionName();\n+    boolean hasName = name != null;\n+    Node node =\n+        newNode(\n+            Token.FUNCTION,\n+            hasName ? transform(name) : null,\n+            transform(functionNode.getParams()),\n+            transform(functionNode.getBody()));\n+    if (hasName) {\n+      int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n+      node.setLineno(name.getLineno());\n+      node.setCharno(position2charno(lpColumn));\n+    } else {\n+      node.setLineno(functionNode.getLineno());\n+    }\n+    return node;\n+  }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}