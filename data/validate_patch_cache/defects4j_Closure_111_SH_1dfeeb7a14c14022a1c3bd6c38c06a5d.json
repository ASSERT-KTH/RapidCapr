{
    "patch": "          if (topType == null) {\n            return JSType.BOTTOM;\n          }\n          if (topType.isSubtypeOf(getNativeType(JSTypeNative.ARRAY_TYPE))) {\n            return getNativeType(JSTypeNative.ARRAY_TYPE);\n          } else if (topType.isTruthy()) {\n            return topType.autobox();\n          } else {\n            return JSType.BOTTOM;\n          }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex 1706e345..86f1c568 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,7 +51,16 @@ public class ClosureReverseAbstractInterpreter\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType;\n+          if (topType == null) {\n+            return JSType.BOTTOM;\n+          }\n+          if (topType.isSubtypeOf(getNativeType(JSTypeNative.ARRAY_TYPE))) {\n+            return getNativeType(JSTypeNative.ARRAY_TYPE);\n+          } else if (topType.isTruthy()) {\n+            return topType.autobox();\n+          } else {\n+            return JSType.BOTTOM;\n+          }\n         }\n \n         @Override",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}