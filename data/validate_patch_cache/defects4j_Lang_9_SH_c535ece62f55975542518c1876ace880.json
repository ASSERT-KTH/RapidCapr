{
    "patch": "if (currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\ncurrentFormatField = nextFormatField;\ncurrentStrategy = nextStrategy;\nif (nextStrategy == null && patternMatcher.regionEnd() > patternMatcher.end()) {\n    currentFormatField = patternMatcher.group();\n    currentStrategy = getStrategy(currentFormatField);\n}\nif (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n    collector.add(currentStrategy);\n}\ncurrentFormatField = null;\nstrategies = collector.toArray(new Strategy[collector.size()]);\nparsePattern = Pattern.compile(regex.toString());",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\nindex 8df302f9..db9972a9 100644\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n@@ -141,6 +141,21 @@ public class FastDateParser implements DateParser, Serializable {\n             currentFormatField= nextFormatField;\n             currentStrategy= nextStrategy;\n         }\n+if (currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+currentFormatField = nextFormatField;\n+currentStrategy = nextStrategy;\n+if (nextStrategy == null && patternMatcher.regionEnd() > patternMatcher.end()) {\n+    currentFormatField = patternMatcher.group();\n+    currentStrategy = getStrategy(currentFormatField);\n+}\n+if (currentStrategy != null && currentStrategy.addRegex(this, regex)) {\n+    collector.add(currentStrategy);\n+}\n+currentFormatField = null;\n+strategies = collector.toArray(new Strategy[collector.size()]);\n+parsePattern = Pattern.compile(regex.toString());\n         if(currentStrategy.addRegex(this, regex)) {\n             collector.add(currentStrategy);\n         }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}