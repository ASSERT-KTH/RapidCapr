{
    "patch": "if (comment.getValue() != null && comment.getValue().startsWith(\"/*\") && comment.getValue().endsWith(\"*/\") && (comment.getValue().indexOf(\"@\") != -1 || comment.getValue().contains(\"\\n *\"))) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 709534bf..1f0a866b 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -249,7 +249,7 @@ class IRFactory {\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n   private void handleBlockComment(Comment comment) {\n-    if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n+if (comment.getValue() != null && comment.getValue().startsWith(\"/*\") && comment.getValue().endsWith(\"*/\") && (comment.getValue().indexOf(\"@\") != -1 || comment.getValue().contains(\"\\n *\"))) {\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n           sourceName,",
    "result_reason": "junit.framework.AssertionFailedError: Unexpected warning(s): JSC_PARSE_ERROR. Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/**'? at [synthetic:1] line 1 : 0",
    "test_result": "FAIL"
}