{
    "patch": "void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n        return;\n    }\n\n    char c = newcode.charAt(0);\n    if ((isWordChar(c) || c == '\\\\') &&\n        isWordChar(getLastChar())) {\n      // need space to separate. This is not pretty printing.\n      // For example: \"return foo;\"\n      append(\" \");\n      // Do not allow a forward slash to appear after a DIV.\n      // For example,\n      // REGEXP DIV REGEXP\n      // is valid and should print like\n      // / // / /\n    }\n\n    // Check if current and new code are both slashes, and if yes, add a space in between\n    if (getLastChar() == '/' && c == '/') {\n        append(\" \");\n    }\n  \n    append(newcode);\n}",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeConsumer.java b/src/com/google/javascript/jscomp/CodeConsumer.java\nindex 47556652..c38e6538 100644\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n@@ -178,11 +178,11 @@ abstract class CodeConsumer {\n   void endCaseBody() {\n   }\n \n-  void add(String newcode) {\n+void add(String newcode) {\n     maybeEndStatement();\n \n     if (newcode.length() == 0) {\n-      return;\n+        return;\n     }\n \n     char c = newcode.charAt(0);\n@@ -198,8 +198,13 @@ abstract class CodeConsumer {\n       // / // / /\n     }\n \n+    // Check if current and new code are both slashes, and if yes, add a space in between\n+    if (getLastChar() == '/' && c == '/') {\n+        append(\" \");\n+    }\n+  \n     append(newcode);\n-  }\n+}\n \n   void appendOp(String op, boolean binOp) {\n     append(op);",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}