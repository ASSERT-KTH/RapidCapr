{
    "patch": "  protected CompilerOptions createOptions() {\n    CompilerOptions options = new CompilerOptions();\n    if (flags.processJqueryPrimitives) {\n      options.setCodingConvention(new JqueryCodingConvention());\n    } else {\n      options.setCodingConvention(new ClosureCodingConvention());\n    }\n\n    options.setExtraAnnotationNames(flags.extraAnnotationName);\n\n    CompilationLevel level = flags.compilationLevel;\n    level.setOptionsForCompilationLevel(options);\n\n    if (flags.debug) {\n      level.setDebugOptionsForCompilationLevel(options);\n    }\n\n    if (flags.useTypesForOptimization) {\n      level.setTypeBasedOptimizationOptions(options);\n    }\n\n    if (flags.generateExports) {\n      options.setGenerateExports(flags.generateExports);\n    }\n\n    WarningLevel wLevel = flags.warningLevel;\n    wLevel.setOptionsForWarningLevel(options);\n    options.setWarningLevel(DiagnosticGroups.DEPRECATED, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.CHECK_REGEXP, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.CONST, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.DUPLICATE_VARS, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.ES3, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.EXTERNS_VALIDATION, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.FILEoverviewTags, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.INFERRED_CONST_CHECKS, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JS_DOCS, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.STRICT_MODULE_DEP_CHECK, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.UNDEFINED_VARIABLES, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.USE_OF_GOOG_BASE, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.OFF);\n    options.setWarningLevel(DiagnosticGroups.DEPRECATED_ANNOTATIONS, CheckLevel.OFF);\n    \n    for (FormattingOption formattingOption : flags.formatting) {\n      formattingOption.applyToOptions(options);\n    }\n\n    options.closurePass = flags.processClosurePrimitives;\n\n    options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&\n        flags.processJqueryPrimitives;\n\n    options.angularPass = flags.angularPass;\n\n    if (!flags.translationsFile.isEmpty()) {\n      try {\n        options.messageBundle = new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Reading XTB file\", e);\n      }\n    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a\n      // translations file, they might reasonably try to write their own\n      // implementation of goog.getMsg that makes the substitution at\n      // run-time.\n      //\n      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,\n      // so we might as well inline it. But shut off the i18n warnings,\n      // because the user didn't really ask for i18n.\n      options.messageBundle = new EmptyMessageBundle();\n    }\n\n    return options;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 93b35475..f778698c 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -830,6 +830,25 @@ public class CommandLineRunner extends\n \n     WarningLevel wLevel = flags.warningLevel;\n     wLevel.setOptionsForWarningLevel(options);\n+    options.setWarningLevel(DiagnosticGroups.DEPRECATED, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.CHECK_REGEXP, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.CONST, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.DUPLICATE_VARS, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.ES3, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.EXTERNS_VALIDATION, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.FILEoverviewTags, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.INFERRED_CONST_CHECKS, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JS_DOCS, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.STRICT_MODULE_DEP_CHECK, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.UNDEFINED_VARIABLES, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.USE_OF_GOOG_BASE, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.DEPRECATED_ANNOTATIONS, CheckLevel.OFF);\n+    \n     for (FormattingOption formattingOption : flags.formatting) {\n       formattingOption.applyToOptions(options);\n     }",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}