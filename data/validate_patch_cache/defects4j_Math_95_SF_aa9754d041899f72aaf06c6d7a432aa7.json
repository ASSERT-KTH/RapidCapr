{
    "patch": "protected double getInitialDomain(double p) {\n    double d = getDenominatorDegreesOfFreedom();\n    if ",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\nindex e19e97aef..03c72e46d 100644\n--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\n@@ -140,13 +140,9 @@ public class FDistributionImpl\n      * @param p the desired probability for the critical value\n      * @return initial domain value\n      */\n-    protected double getInitialDomain(double p) {\n-        double ret;\n-        double d = getDenominatorDegreesOfFreedom();\n-            // use mean\n-            ret = d / (d - 2.0);\n-        return ret;\n-    }\n+protected double getInitialDomain(double p) {\n+    double d = getDenominatorDegreesOfFreedom();\n+    if \n     \n     /**\n      * Modify the numerator degrees of freedom.",
    "result_reason": "error: '(' expected",
    "test_result": "ERROR"
}