{
    "patch": "public void stop() {\n    if (this.runningState == STATE_STOPPED) {\n        throw new IllegalStateException(\"Stopwatch has already been stopped.\");\n    }\n    if (this.runningState == STATE_RUNNING) {\n        stopTime = System.currentTimeMillis();\n    } else if (this.runningState != STATE_SUSPENDED) {\n        throw new IllegalStateException(\"Stopwatch is not running.\");\n    }\n    this.runningState = STATE_STOPPED;\n\n    // Check if suspendTime is equal to totalTime\n    if (this.runningState == STATE_STOPPED && this.suspendTime != 0) {\n        long totalTime = (this.suspendTime - this.startTime) - this.pausedTime;\n        if (totalTime != this.getTotalTime()) {\n            throw new RuntimeException(\"Wrong total time! expected: \" + totalTime + \", actual: \" + this.getTotalTime());\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/time/StopWatch.java b/src/java/org/apache/commons/lang/time/StopWatch.java\nindex 8f394217..db6afdfd 100644\n--- a/src/java/org/apache/commons/lang/time/StopWatch.java\n+++ b/src/java/org/apache/commons/lang/time/StopWatch.java\n@@ -111,13 +111,25 @@ public class StopWatch {\n      *\n      * @throws IllegalStateException if the StopWatch is not running.\n      */\n-    public void stop() {\n-        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n-            throw new IllegalStateException(\"Stopwatch is not running. \");\n+public void stop() {\n+    if (this.runningState == STATE_STOPPED) {\n+        throw new IllegalStateException(\"Stopwatch has already been stopped.\");\n+    }\n+    if (this.runningState == STATE_RUNNING) {\n+        stopTime = System.currentTimeMillis();\n+    } else if (this.runningState != STATE_SUSPENDED) {\n+        throw new IllegalStateException(\"Stopwatch is not running.\");\n+    }\n+    this.runningState = STATE_STOPPED;\n+\n+    // Check if suspendTime is equal to totalTime\n+    if (this.runningState == STATE_STOPPED && this.suspendTime != 0) {\n+        long totalTime = (this.suspendTime - this.startTime) - this.pausedTime;\n+        if (totalTime != this.getTotalTime()) {\n+            throw new RuntimeException(\"Wrong total time! expected: \" + totalTime + \", actual: \" + this.getTotalTime());\n         }\n-            stopTime = System.currentTimeMillis();\n-        this.runningState = STATE_STOPPED;\n     }\n+}\n \n     /**\n      * <p>Resets the stopwatch. Stops it if need be. </p>",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}