{
    "patch": "        if (start >= end) {\n            if (chars != null && chars.length > 0) {\n                throw new IllegalArgumentException(\"bound must be greater than start\");\n            } else {\n                if (numbers) {\n                    start = 0;\n                    end = 10;\n                } else {\n                    if (letters) {\n                        start = 'a';\n                        end = 'z' + 1;\n                    } else {\n                        start = ' ';\n                        end = ' ' + 1;\n                    }\n                }\n            }\n        }",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\nindex a7990575..c53e3004 100644\n--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java\n@@ -242,6 +242,24 @@ public class RandomStringUtils {\n                     start = ' ';                \n                 }\n             }\n+        if (start >= end) {\n+            if (chars != null && chars.length > 0) {\n+                throw new IllegalArgumentException(\"bound must be greater than start\");\n+            } else {\n+                if (numbers) {\n+                    start = 0;\n+                    end = 10;\n+                } else {\n+                    if (letters) {\n+                        start = 'a';\n+                        end = 'z' + 1;\n+                    } else {\n+                        start = ' ';\n+                        end = ' ' + 1;\n+                    }\n+                }\n+            }\n+        }\n         }\n \n         char[] buffer = new char[count];",
    "result_reason": "junit.framework.AssertionFailedError: Message (bound must be positive) must contain 'start'",
    "test_result": "FAIL"
}