{
    "patch": "              !mayEffectMutableState(lhs) &&\n              NodeUtil.mayHaveSideEffects(\n                  NodeUtil.getFunctionParameters(cond.getNext()))) {",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\nindex ae568e8e..3d077c67 100644\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n@@ -779,7 +779,9 @@ class PeepholeSubstituteAlternateSyntax\n               // evaluates LHS before cond]\n               // NOTE - there are some circumstances where we can\n               // proceed even if there are side effects...\n-              !mayEffectMutableState(lhs)) {\n+              !mayEffectMutableState(lhs) &&\n+              NodeUtil.mayHaveSideEffects(\n+                  NodeUtil.getFunctionParameters(cond.getNext()))) {\n \n             n.removeChild(cond);\n             Node assignName = thenOp.removeFirstChild();",
    "result_reason": "java.lang.IllegalArgumentException",
    "test_result": "FAIL"
}