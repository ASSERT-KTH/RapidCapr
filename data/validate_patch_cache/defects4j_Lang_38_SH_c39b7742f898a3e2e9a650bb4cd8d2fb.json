{
    "patch": "if (mTimeZoneForced) {\n    DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    calendar.setTimeZone(mTimeZone);\n    return new StringBuffer(format.format(calendar.getTime()));\n}",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\nindex 6b10a94f..513a19a8 100644\n--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java\n@@ -869,6 +869,12 @@ public class FastDateFormat extends Format {\n      */\n     public StringBuffer format(Calendar calendar, StringBuffer buf) {\n         if (mTimeZoneForced) {\n+if (mTimeZoneForced) {\n+    DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n+    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+    calendar.setTimeZone(mTimeZone);\n+    return new StringBuffer(format.format(calendar.getTime()));\n+}\n             calendar = (Calendar) calendar.clone();\n             calendar.setTimeZone(mTimeZone);\n         }",
    "result_reason": "junit.framework.ComparisonFailure: dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08]:42:16.000Z>",
    "test_result": "FAIL"
}