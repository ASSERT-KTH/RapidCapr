{
    "patch": "if (other instanceof Complex) {\n    double otherReal = ((Complex)other).getReal();\n    double otherImaginary = ((Complex)other).getImaginary();\n    ret = Double.compare(real, otherReal) == 0\n          && Double.compare(imaginary",
    "patch_diff": "diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java\nindex 3571567f8..5ba385a50 100644\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n@@ -255,7 +255,11 @@ public class Complex implements Serializable  {\n                 if (rhs.isNaN()) {\n                     ret = this.isNaN();\n                 } else {\n-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); \n+if (other instanceof Complex) {\n+    double otherReal = ((Complex)other).getReal();\n+    double otherImaginary = ((Complex)other).getImaginary();\n+    ret = Double.compare(real, otherReal) == 0\n+          && Double.compare(imaginary\n                 }\n             } catch (ClassCastException ex) {\n                 // ignore exception",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}