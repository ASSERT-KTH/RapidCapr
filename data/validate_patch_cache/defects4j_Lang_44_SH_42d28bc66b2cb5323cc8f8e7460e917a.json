{
    "patch": "        if (val == null || val.length() == 0) {\n            throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n        }\n        if (val.charAt(0) == '+' || val.charAt(0) == '-') {\n            if (val.length() == 1 || !Character.isDigit(val.charAt(1))) {\n                throw new NumberFormatException(val + \" is not a valid number.\");\n            }\n        } else if (!Character.isDigit(val.charAt(0))) {\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        }",
    "patch_diff": "diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java\nindex 18a05efe..e7aecde8 100644\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -142,6 +142,16 @@ public final class NumberUtils {\n         if (val.length() == 0) {\n             throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n         }\n+        if (val == null || val.length() == 0) {\n+            throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n+        }\n+        if (val.charAt(0) == '+' || val.charAt(0) == '-') {\n+            if (val.length() == 1 || !Character.isDigit(val.charAt(1))) {\n+                throw new NumberFormatException(val + \" is not a valid number.\");\n+            }\n+        } else if (!Character.isDigit(val.charAt(0))) {\n+            throw new NumberFormatException(val + \" is not a valid number.\");\n+        }\n         if (val.startsWith(\"--\")) {\n             // this is protection for poorness in java.lang.BigDecimal.\n             // it accepts this as a legal value, but it does not appear ",
    "result_reason": "junit.framework.AssertionFailedError: isNumber(String)/createNumber(String) 3 failed",
    "test_result": "FAIL"
}