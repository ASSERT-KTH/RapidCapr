{
    "patch": "  private Node parseContextTypeExpression(JsDocToken token) {\n      Node typeNode = parseTypeExpression(token);\n      if (typeNode == null) {\n          return IR.string(\"unknown\");\n      }\n      return typeNode;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex e30c3509..17d194a7 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,7 +1905,13 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-          return parseTypeName(token);\n+  private Node parseContextTypeExpression(JsDocToken token) {\n+      Node typeNode = parseTypeExpression(token);\n+      if (typeNode == null) {\n+          return IR.string(\"unknown\");\n+      }\n+      return typeNode;\n+  }\n   }\n \n   /**",
    "result_reason": "error: illegal start of expression",
    "test_result": "ERROR"
}