{
    "patch": "      Node child = n.getFirstChild();\n      Node first = null;\n\n      // ignore cast nodes.\n      while (NodeUtil.isCast(child)) {\n        child = child.getFirstChild();\n      }\n\n      if (NodeUtil.isGet(child)) {\n        first = child.getLastChild();\n      }\n      \n      if (first == null) {\n        first = child;\n      }\n\n      if (!NodeUtil.isGet(first)) {\n        n.putBooleanProp(Node.FREE_CALL, true);\n      }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex d993bee7..60d064ca 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,6 +163,25 @@ class PrepareAst implements CompilerPass {\n       Node first = n.getFirstChild();\n \n       // ignore cast nodes.\n+      Node child = n.getFirstChild();\n+      Node first = null;\n+\n+      // ignore cast nodes.\n+      while (NodeUtil.isCast(child)) {\n+        child = child.getFirstChild();\n+      }\n+\n+      if (NodeUtil.isGet(child)) {\n+        first = child.getLastChild();\n+      }\n+      \n+      if (first == null) {\n+        first = child;\n+      }\n+\n+      if (!NodeUtil.isGet(first)) {\n+        n.putBooleanProp(Node.FREE_CALL, true);\n+      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);",
    "result_reason": "error: variable first is already defined in method annotateCalls(Node)",
    "test_result": "ERROR"
}