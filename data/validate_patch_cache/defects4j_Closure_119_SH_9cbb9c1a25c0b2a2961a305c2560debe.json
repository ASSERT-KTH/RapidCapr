{
    "patch": "case Token.INC:\ncase Token.DEC:\n  if (!isGlobalNameReference(name, scope)) {\n    return;\n  }\n  warnings.add(\n      new BasicError(\n          Type.GLOBAL_THIS,\n          n,\n          name,\n          module.getModuleName(),\n          compiler.getSourceFile(scope.getRootNode().getSourceFileName())));\n  return;",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 639318df..6b2246ac 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -302,7 +302,6 @@ class GlobalNamespace\n \n       return true;\n     }\n-\n     public void collect(JSModule module, Scope scope, Node n) {\n       Node parent = n.getParent();\n \n@@ -363,6 +362,19 @@ class GlobalNamespace\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+case Token.INC:\n+case Token.DEC:\n+  if (!isGlobalNameReference(name, scope)) {\n+    return;\n+  }\n+  warnings.add(\n+      new BasicError(\n+          Type.GLOBAL_THIS,\n+          n,\n+          name,\n+          module.getModuleName(),\n+          compiler.getSourceFile(scope.getRootNode().getSourceFileName())));\n+  return;\n               case Token.INC:\n               case Token.DEC:\n                 isSet = true;",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}