{
    "patch": "            if (savedFields[i].iField.getType() == DateTimeFieldType.year()) {\n                int value = savedFields[i].getDifference();\n                if (iDefaultYear != value) {\n                    saveField(DateTimeFieldType.year(), value);\n                    millis = iMillis;\n                    for (int j = 0; j < iSavedFieldsCount; j++) {\n                        millis = iSavedFields[j].set(millis, resetFields);\n                    }\n                }\n            }",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/format/DateTimeParserBucket.java b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\nindex b985cefd..49ee3eab 100644\n--- a/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/src/main/java/org/joda/time/format/DateTimeParserBucket.java\n@@ -352,6 +352,16 @@ public class DateTimeParserBucket {\n             for (int i = 0; i < count; i++) {\n                 millis = savedFields[i].set(millis, resetFields);\n             }\n+            if (savedFields[i].iField.getType() == DateTimeFieldType.year()) {\n+                int value = savedFields[i].getDifference();\n+                if (iDefaultYear != value) {\n+                    saveField(DateTimeFieldType.year(), value);\n+                    millis = iMillis;\n+                    for (int j = 0; j < iSavedFieldsCount; j++) {\n+                        millis = iSavedFields[j].set(millis, resetFields);\n+                    }\n+                }\n+            }\n         } catch (IllegalFieldValueException e) {\n             if (text != null) {\n                 e.prependMessage(\"Cannot parse \\\"\" + text + '\"');",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}