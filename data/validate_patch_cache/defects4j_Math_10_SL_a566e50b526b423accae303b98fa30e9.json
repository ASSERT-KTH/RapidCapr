{
    "patch": "if (Double.isNaN(result[resultOffset])) {\n    if (Double.isFinite(x[xOffset]) && Double.isFinite(y[yOffset])",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\nindex bf6dd65d5..23d414a05 100644\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n@@ -1416,6 +1416,8 @@ public class DSCompiler {\n         }\n \n         // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n+if (Double.isNaN(result[resultOffset])) {\n+    if (Double.isFinite(x[xOffset]) && Double.isFinite(y[yOffset])\n \n     }\n ",
    "result_reason": "error: ')' expected",
    "test_result": "ERROR"
}