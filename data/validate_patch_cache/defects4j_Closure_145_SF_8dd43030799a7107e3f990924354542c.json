{
    "patch": "  private boolean isOneExactlyFunctionOrDo(Node n) {\n    // For labels with block children, we need to ensure that a\n    // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n    // are skipped. \n    if (n.getType() != Token.BLOCK) {\n      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);\n    }\n    int count = 0;\n    for (Node child : n.children()) {\n      if (child.getType() != Token.EMPTY) {\n        count++;\n      }\n      if (count > 1) {\n        return false;\n      }\n      if (child.getType() == Token.FUNCTION || child.getType() == Token.DO) {\n        return true;\n      }\n    }\n    return false;\n  }",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/CodeGenerator.java b/src/com/google/javascript/jscomp/CodeGenerator.java\nindex 42c9ab38..69400eaf 100644\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n@@ -706,12 +706,25 @@ class CodeGenerator {\n    * labels).\n    */\n   private boolean isOneExactlyFunctionOrDo(Node n) {\n-        // For labels with block children, we need to ensure that a\n-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n-        // are skipped. \n-          // Either a empty statement or an block with more than one child,\n-          // way it isn't a FUNCTION or DO.\n+    // For labels with block children, we need to ensure that a\n+    // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n+    // are skipped. \n+    if (n.getType() != Token.BLOCK) {\n       return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);\n+    }\n+    int count = 0;\n+    for (Node child : n.children()) {\n+      if (child.getType() != Token.EMPTY) {\n+        count++;\n+      }\n+      if (count > 1) {\n+        return false;\n+      }\n+      if (child.getType() == Token.FUNCTION || child.getType() == Token.DO) {\n+        return true;\n+      }\n+    }\n+    return false;\n   }\n \n   /**",
    "result_reason": "junit.framework.ComparisonFailure: expected:<if(e1)[{A:function goo(){return true}]}> but was:<if(e1)[A:function goo(){return true]}>",
    "test_result": "FAIL"
}