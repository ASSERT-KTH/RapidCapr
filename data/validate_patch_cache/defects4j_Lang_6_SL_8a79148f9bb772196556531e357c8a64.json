{
    "patch": "if (Character.isHighSurrogate(input.charAt(pos))) {\n    if (pos + 1 >= len) {\n        throw new IllegalStateException(\n                \"Unable to parse the High Surrogate because of the single Low Surrogate value at end of input\");\n    }\n    consumed = translate(input, pos, out);\n} else {\n    out.write(input.charAt(pos));\n    consumed = 1;\n}\npos += consumed;",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\nindex 4d010eaf..f168d8b4 100644\n--- a/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java\n@@ -92,7 +92,17 @@ public abstract class CharSequenceTranslator {\n //          // contract with translators is that they have to understand codepoints \n //          // and they just took care of a surrogate pair\n             for (int pt = 0; pt < consumed; pt++) {\n-                pos += Character.charCount(Character.codePointAt(input, pos));\n+if (Character.isHighSurrogate(input.charAt(pos))) {\n+    if (pos + 1 >= len) {\n+        throw new IllegalStateException(\n+                \"Unable to parse the High Surrogate because of the single Low Surrogate value at end of input\");\n+    }\n+    consumed = translate(input, pos, out);\n+} else {\n+    out.write(input.charAt(pos));\n+    consumed = 1;\n+}\n+pos += consumed;\n             }\n         }\n     }",
    "result_reason": "junit.framework.AssertionFailedError: unescape(String) failed: expected '\\n",
    "test_result": "FAIL"
}