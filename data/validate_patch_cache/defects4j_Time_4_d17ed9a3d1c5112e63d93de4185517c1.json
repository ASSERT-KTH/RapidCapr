{
    "patch": "Partial newPartial = new Partial(iChronology, newTypes, newValues);\n// validate newly created instance in case Chronology has some peculiar behaviour\niChronology.validate(newPartial, newValues);\n// fix the index of the new partial\nindex = indexOf(fieldType);\nreturn newPartial.with(fieldType.getField(iChronology), value);",
    "patch_diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 0d4edf47..fbe58c88 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -461,7 +461,12 @@ public final class Partial\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n             // use public constructor to ensure full validation\n             // this isn't overly efficient, but is safe\n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+// validate newly created instance in case Chronology has some peculiar behaviour\n+iChronology.validate(newPartial, newValues);\n+// fix the index of the new partial\n+index = indexOf(fieldType);\n+return newPartial.with(fieldType.getField(iChronology), value);\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }",
    "result_reason": "error: method with in class Partial cannot be applied to given types;",
    "test_result": "ERROR"
}