{
    "patch": "private boolean toStringEquals(Matcher m, Object arg) {\n    // if both objects are null, they are equal\n    if (m == null && arg == null) {\n        return true;\n    }\n    // if only one object is null, they are not equal\n    if (m == null || arg == null) {\n        return false;\n    }\n    // compare the string representations of the objects\n    try {\n        String mStr = StringDescription.toString(m);\n        String argStr = arg.toString();\n        return mStr.equals(argStr);\n    } catch (NullPointerException e) {\n        // if either object cannot be converted to a string, they are not equal\n        return false;\n    }\n}",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\nindex 671fbc539..22b6bed4c 100644\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n@@ -44,7 +44,24 @@ public class ArgumentMatchingTool {\n         }\n     }\n \n-    private boolean toStringEquals(Matcher m, Object arg) {\n-        return StringDescription.toString(m).equals(arg.toString());\n-    }\n+\n+private boolean toStringEquals(Matcher m, Object arg) {\n+    // if both objects are null, they are equal\n+    if (m == null && arg == null) {\n+        return true;\n+    }\n+    // if only one object is null, they are not equal\n+    if (m == null || arg == null) {\n+        return false;\n+    }\n+    // compare the string representations of the objects\n+    try {\n+        String mStr = StringDescription.toString(m);\n+        String argStr = arg.toString();\n+        return mStr.equals(argStr);\n+    } catch (NullPointerException e) {\n+        // if either object cannot be converted to a string, they are not equal\n+        return false;\n+    }\n+}\n }",
    "result_reason": "all tests passed",
    "test_result": "PASS"
}