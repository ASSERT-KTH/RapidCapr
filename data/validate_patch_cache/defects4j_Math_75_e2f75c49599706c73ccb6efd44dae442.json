{
    "patch": "@SuppressWarnings(\"unchecked\")\npublic double getPct(Object v) {\n    try {\n        return getCumPct((Comparable<T>) v);\n    } catch (Exception e1) {\n        try {\n            return getCumPct(((Number) v).doubleValue());\n        } catch (Exception e2) {\n            try {\n                return getCumPct(v.toString());\n            } catch (Exception e3) {\n                throw new IllegalArgumentException(\"Could not compute percentage for value: \" + v);\n            }\n        }\n    }\n}",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/stat/Frequency.java b/src/main/java/org/apache/commons/math/stat/Frequency.java\nindex c45d72883..4b6f71249 100644\n--- a/src/main/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math/stat/Frequency.java\n@@ -300,7 +300,22 @@ public class Frequency implements Serializable {\n      */\n     @Deprecated\n     public double getPct(Object v) {\n-        return getCumPct((Comparable<?>) v);\n+@SuppressWarnings(\"unchecked\")\n+public double getPct(Object v) {\n+    try {\n+        return getCumPct((Comparable<T>) v);\n+    } catch (Exception e1) {\n+        try {\n+            return getCumPct(((Number) v).doubleValue());\n+        } catch (Exception e2) {\n+            try {\n+                return getCumPct(v.toString());\n+            } catch (Exception e3) {\n+                throw new IllegalArgumentException(\"Could not compute percentage for value: \" + v);\n+            }\n+        }\n+    }\n+}\n     }\n \n     /**",
    "result_reason": "error: ';' expected",
    "test_result": "ERROR"
}