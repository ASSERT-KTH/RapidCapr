{
    "patch": "} else if (parent.getType() == Token.TRY) {\n  // If we are coming out of the FINALLY block...\n  if (parent.getLastChild() == node) {\n    if (cfa != null) {\n      for (Node finallyNode : cfa.finallyMap.get(parent)) {\n        cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n      }\n    }\n    return computeFollowNode(fromNode, parent, cfa);\n  }\n} // add this closing brace",
    "patch_diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 5c6927f9..7d9b9521 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,17 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {\n         } else if (parent.getLastChild() == node){\n           if (cfa != null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+} else if (parent.getType() == Token.TRY) {\n+  // If we are coming out of the FINALLY block...\n+  if (parent.getLastChild() == node) {\n+    if (cfa != null) {\n+      for (Node finallyNode : cfa.finallyMap.get(parent)) {\n+        cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n+      }\n+    }\n+    return computeFollowNode(fromNode, parent, cfa);\n+  }\n+} // add this closing brace\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);",
    "result_reason": "error: 'else' without 'if'",
    "test_result": "ERROR"
}