{
    "patch": "        return new LevenbergMarquardtOptimizer().optimize(\n                new LeastSquaresBuilder()\n                .maxEvaluations(Integer.MAX_VALUE)\n                .maxIterations(Integer.MAX_VALUE)\n                .start(guess)\n                .model(new Gaussian.Parametric())\n                .target(getObservations())\n                .weight(componentsDiagonalMatrix())\n                .build())\n            .getPoint().toArray();",
    "patch_diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\nindex ae7ac3994..c04fbf36c 100644\n--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java\n@@ -118,7 +118,16 @@ public class GaussianFitter extends CurveFitter {\n      */\n     public double[] fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-        return fit(new Gaussian.Parametric(), guess);\n+        return new LevenbergMarquardtOptimizer().optimize(\n+                new LeastSquaresBuilder()\n+                .maxEvaluations(Integer.MAX_VALUE)\n+                .maxIterations(Integer.MAX_VALUE)\n+                .start(guess)\n+                .model(new Gaussian.Parametric())\n+                .target(getObservations())\n+                .weight(componentsDiagonalMatrix())\n+                .build())\n+            .getPoint().toArray();\n     }\n \n     /**",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}