{
    "patch": "    public void verify(VerificationData data) {\n        AssertionError error = null;\n\n        timer.start();\n        while (timer.isCounting()) {\n            try {\n                delegate.verify(data);\n\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    error = null;\n                }\n            } catch (MockitoAssertionError e) {\n                error = handleVerifyException(e);\n            } catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n                error = handleVerifyException(e.filterStackTrace());\n            }\n        }\n\n        if (error != null) {\n            if (error instanceof AssertionErrorWithCause) {\n                throw (AssertionErrorWithCause) error;\n            } else {\n                throw error;\n            }\n        }\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..2f09dad5f 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -87,14 +87,17 @@ public class VerificationOverTimeImpl implements VerificationMode {\n                 }\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n-            }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n-                error = handleVerifyException(e);\n+            } catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n+                error = handleVerifyException(e.filterStackTrace());\n             }\n         }\n \n         if (error != null) {\n-            throw error;\n+            if (error instanceof AssertionErrorWithCause) {\n+                throw (AssertionErrorWithCause) error;\n+            } else {\n+                throw error;\n+            }\n         }\n     }\n ",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}