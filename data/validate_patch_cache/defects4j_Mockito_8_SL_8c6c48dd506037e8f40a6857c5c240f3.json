{
    "patch": "} else if (actualTypeArgument instanceof Class<?>) {\n    // Handle class types\n    Class<?> actualClassArgument = (Class<?>) actualTypeArgument;\n    contextualActualTypeParameters.put(typeParameter, actualClassArgument);\n    for (TypeVariable<?> actualClassTypeParameter : actualClassArgument.getTypeParameters()) {\n        Type contextType = actualTypeArgument;\n        if (typeParameterOnContext == null) {\n            typeParameterOnContext = actualTypeParameterOnLhs(typeParameter, contextType, actualTypeArguments);\n        }\n        contextualActualTypeParameters.put(actualClassTypeParameter, contextType);\n    }",
    "patch_diff": "diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\nindex 152e9424e..8a47ae5e8 100644\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n@@ -76,7 +76,17 @@ public abstract class GenericMetadataSupport {\n \n             if (actualTypeArgument instanceof WildcardType) {\n                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n-            } else {\n+} else if (actualTypeArgument instanceof Class<?>) {\n+    // Handle class types\n+    Class<?> actualClassArgument = (Class<?>) actualTypeArgument;\n+    contextualActualTypeParameters.put(typeParameter, actualClassArgument);\n+    for (TypeVariable<?> actualClassTypeParameter : actualClassArgument.getTypeParameters()) {\n+        Type contextType = actualTypeArgument;\n+        if (typeParameterOnContext == null) {\n+            typeParameterOnContext = actualTypeParameterOnLhs(typeParameter, contextType, actualTypeArguments);\n+        }\n+        contextualActualTypeParameters.put(actualClassTypeParameter, contextType);\n+    }\n                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n             }\n             // logger.log(\"For '\" + parameterizedType + \"' found type variable : { '\" + typeParameter + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' : '\" + actualTypeArgument + \"(\" + System.identityHashCode(typeParameter) + \")\" + \"' }\");",
    "result_reason": "error: cannot find symbol",
    "test_result": "ERROR"
}