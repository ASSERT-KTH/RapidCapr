{
    "patch": "        try{\n            timer.start();\n            while (timer.isCounting()) {\n                delegate.verify(data);\n                if (returnOnSuccess) {\n                    return;\n                }\n            }\n        } catch (MockitoAssertionError e) {\n            throw handleVerifyException(e);\n        } catch (Throwable t) {\n            throw handleVerifyException(new MockitoAssertionError(\"Unexpected exception thrown\", t));\n        }",
    "patch_diff": "diff --git a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\nindex c5a66c501..91b5d2cb8 100644\n--- a/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationOverTimeImpl.java\n@@ -88,7 +88,19 @@ public class VerificationOverTimeImpl implements VerificationMode {\n             } catch (MockitoAssertionError e) {\n                 error = handleVerifyException(e);\n             }\n-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {\n+        try{\n+            timer.start();\n+            while (timer.isCounting()) {\n+                delegate.verify(data);\n+                if (returnOnSuccess) {\n+                    return;\n+                }\n+            }\n+        } catch (MockitoAssertionError e) {\n+            throw handleVerifyException(e);\n+        } catch (Throwable t) {\n+            throw handleVerifyException(new MockitoAssertionError(\"Unexpected exception thrown\", t));\n+        }\n                 error = handleVerifyException(e);\n             }\n         }",
    "result_reason": "error: illegal start of type",
    "test_result": "ERROR"
}