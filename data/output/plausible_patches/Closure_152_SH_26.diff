diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java
index fc2578d8..90a64cfd 100644
--- a/src/com/google/javascript/rhino/jstype/FunctionType.java
+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -868,7 +868,21 @@ public class FunctionType extends PrototypeObjectType {
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+JSType resolvedThisType = safeResolve(typeOfThis, t, scope);
+if (resolvedThisType instanceof ObjectType) {
+  typeOfThis = (ObjectType) resolvedThisType;
+} else if (resolvedThisType instanceof NamedType) {
+  JSType referencedType = ((NamedType) resolvedThisType).getReferencedType();
+  if (referencedType instanceof ObjectType) {
+    typeOfThis = (ObjectType) referencedType;
+  } else {
+    // Set typeOfThis to UNKNOWN_TYPE because the referencedNamedType is not ObjectType
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+  }
+} else {
+  // Set typeOfThis to UNKNOWN_TYPE because resolvedThisType is not ObjectType nor NamedType
+  typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+}
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =