diff --git a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
index a7990575..3571bc58 100644
--- a/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
+++ b/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
@@ -220,17 +220,26 @@ public class RandomStringUtils {
      * @throws IllegalArgumentException if {@code count} &lt; 0 or the provided chars array is empty.
      * @since 2.0
      */
-    public static String random(int count, int start, int end, boolean letters, boolean numbers,
+public static String random(int count, int start, int end, boolean letters, boolean numbers,
                                 char[] chars, Random random) {
-        if (count == 0) {
-            return "";
-        } else if (count < 0) {
+        if (count < 0) {
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
         if (chars != null && chars.length == 0) {
             throw new IllegalArgumentException("The chars array must not be empty");
         }
 
+        if (start == end && start != 0) {
+            throw new IllegalArgumentException("Invalid range specified. Parameter start (" + start + 
+                                                   ") must not equal parameter end (" + end + ")");
+        }
+
+        if(start > end){
+            int temp = end;
+            end = start;
+            start = temp;
+        }
+
         if (start == 0 && end == 0) {
             if (chars != null) {
                 end = chars.length;
@@ -239,10 +248,13 @@ public class RandomStringUtils {
                     end = Integer.MAX_VALUE;
                 } else {
                     end = 'z' + 1;
-                    start = ' ';                
+                    start = ' ';
                 }
             }
-        }
+        } else if (start < 0 || end < 0){
+            throw new IllegalArgumentException("Invalid range specified. Parameters start (" + start + 
+                                                ") and end (" + end + ") must be non-negative.");
+        } 
 
         char[] buffer = new char[count];
         int gap = end - start;