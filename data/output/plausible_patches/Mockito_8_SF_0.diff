diff --git a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
index 152e9424e..69ac86836 100644
--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
@@ -64,23 +64,23 @@ public abstract class GenericMetadataSupport {
 
 
     protected void registerTypeVariablesOn(Type classType) {
-        if (!(classType instanceof ParameterizedType)) {
-            return;
-        }
-        ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
-        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
-            Type actualTypeArgument = actualTypeArguments[i];
-
-            if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
-                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
-            }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
-        }
+if (!(classType instanceof ParameterizedType)) {
+    return;
+}
+ParameterizedType parameterizedType = (ParameterizedType) classType;
+TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+for (int i = 0; i < actualTypeArguments.length; i++) {
+    TypeVariable typeParameter = typeParameters[i];
+    Type actualTypeArgument = actualTypeArguments[i];
+
+    if (actualTypeArgument instanceof WildcardType) {
+        contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+    } else if (!typeParameter.equals(actualTypeArgument)) { // check for equality before adding to the map
+        contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+    }
+    // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+}
     }
 
     protected void registerTypeParametersOn(TypeVariable[] typeParameters) {