diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java
index 900e1a89..5ac7f900 100644
--- a/src/java/org/apache/commons/lang/Entities.java
+++ b/src/java/org/apache/commons/lang/Entities.java
@@ -822,26 +822,37 @@ class Entities {
      * @see #escape(String)
      * @see Writer
      */
-    public void escape(Writer writer, String str) throws IOException {
-        int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
-            if (entityName == null) {
-                if (c > 0x7F) {
-                    writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
-                    writer.write(';');
-                } else {
-                    writer.write(c);
-                }
+public void escape(Writer writer, String str) throws IOException {
+    int len = str.length();
+    for (int i = 0; i < len; i++) {
+        char c = str.charAt(i);
+        if (Character.isSurrogate(c)) {
+            int codePoint = Character.codePointAt(str, i);
+            if (this.entityName(codePoint) != null) {
+                writer.write('&');
+                writer.write(this.entityName(codePoint));
+                writer.write(';');
             } else {
+                writer.write("&#");
+                writer.write(Integer.toString(codePoint, 10));
+                writer.write(';');
+            }
+            i += Character.charCount(codePoint) - 1;
+        } else {
+            if (this.entityName(c) != null) {
                 writer.write('&');
-                writer.write(entityName);
+                writer.write(this.entityName(c));
+                writer.write(';');
+            } else if (c > 0x7F) {
+                writer.write("&#");
+                writer.write(Integer.toString(c, 10));
                 writer.write(';');
+            } else {
+                writer.write(c);
             }
         }
     }
+}
 
     /**
      * <p>