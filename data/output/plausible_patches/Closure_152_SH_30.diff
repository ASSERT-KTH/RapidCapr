diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java
index fc2578d8..fe35ecdf 100644
--- a/src/com/google/javascript/rhino/jstype/FunctionType.java
+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -868,7 +868,20 @@ public class FunctionType extends PrototypeObjectType {
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+JSType typeOfThisResolved = safeResolve(typeOfThis, t, scope);
+if (typeOfThisResolved == null) {
+    // If typeOfThis resolved to null, set it to UNKNOWN_TYPE
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+} else if (typeOfThisResolved.isNamedType() && ((NamedType) typeOfThisResolved).getReferencedType() instanceof ObjectType) {
+    // If typeOfThis resolves to a NamedType with an ObjectType as the referenced type, use the referenced ObjectType
+    typeOfThis = (ObjectType) ((NamedType) typeOfThisResolved).getReferencedType();
+} else if (typeOfThisResolved instanceof ObjectType) {
+    // If typeOfThis resolves to an ObjectType, use it
+    typeOfThis = (ObjectType) typeOfThisResolved;
+} else {
+    // If typeOfThis does not resolve to an ObjectType, set it to UNKNOWN_TYPE
+    typeOfThis = registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);
+}
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =