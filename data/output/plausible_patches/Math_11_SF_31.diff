diff --git a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
index 15706811b..bf1d49e16 100644
--- a/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
@@ -174,16 +174,16 @@ public class MultivariateNormalDistribution
     }
 
     /** {@inheritDoc} */
-    public double density(final double[] vals) throws DimensionMismatchException {
-        final int dim = getDimension();
-        if (vals.length != dim) {
-            throw new DimensionMismatchException(vals.length, dim);
-        }
-
-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *
-            FastMath.pow(covarianceMatrixDeterminant, -0.5) *
-            getExponentTerm(vals);
+public double density(final double[] vals) throws DimensionMismatchException {
+    final int dim = getDimension();
+    if (vals == null || vals.length != dim) {
+        throw new DimensionMismatchException(dim, vals == null ? 0 : vals.length);
     }
+    final double factor = Math.pow(2 * Math.PI, -0.5 * dim);
+    final double determinantSqrt = Math.sqrt(Math.abs(covarianceMatrixDeterminant));
+    final double exponent = getExponentTerm(vals);
+    return factor / determinantSqrt * exponent;
+}
 
     /**
      * Gets the square root of each element on the diagonal of the covariance