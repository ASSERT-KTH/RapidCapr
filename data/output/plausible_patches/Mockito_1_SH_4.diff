diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java
index 7b877b1e2..370f2288c 100644
--- a/src/org/mockito/internal/invocation/InvocationMatcher.java
+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java
@@ -120,7 +120,25 @@ public class InvocationMatcher implements DescribedInvocation, CapturesArgumensF
     public void captureArgumentsFrom(Invocation invocation) {
         if (invocation.getMethod().isVarArgs()) {
             int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+    Object[] rawArguments = invocation.getRawArguments();
+    for (int position = 0; position < matchers.size(); position++) {
+        Matcher m = matchers.get(position);
+        if (m instanceof CapturesArguments) {
+            if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
+                Object varArgObject = rawArguments[position];
+                if (varArgObject != null && varArgObject.getClass().isArray()) {
+                    int varArgLength = Array.getLength(varArgObject);
+                    for (int i = 0; i < varArgLength; i++) {
+                        ((CapturesArguments) m).captureFrom(Array.get(varArgObject, i));
+                    }
+                } else {
+                    ((CapturesArguments) m).captureFrom(varArgObject);
+                }
+            } else {
+                ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
+            }
+        }
+    }
 
         } else {
             for (int position = 0; position < matchers.size(); position++) {