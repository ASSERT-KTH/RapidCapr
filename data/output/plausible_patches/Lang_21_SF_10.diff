diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
index 9a24c00f..fc945f98 100644
--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
@@ -255,19 +255,27 @@ public class DateUtils {
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
-    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
-        if (cal1 == null || cal2 == null) {
-            throw new IllegalArgumentException("The date must not be null");
-        }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
-                cal1.getClass() == cal2.getClass());
+public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
+    if (cal1 == null || cal2 == null) {
+        throw new IllegalArgumentException("The calendar must not be null");
     }
+    boolean result = true;
+    result &= cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND);
+    result &= cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND);
+    result &= cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE);
+    result &= cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY);
+    result &= cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR);
+    result &= cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR);
+    result &= cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA);
+    result &= cal1.getClass() == cal2.getClass();
+
+    // Adding this check for DST offset as it may impact local time equality
+    if (cal1.getTimeZone().inDaylightTime(cal1.getTime()) && cal2.getTimeZone().inDaylightTime(cal2.getTime())) {
+        result &= cal1.get(Calendar.DST_OFFSET) == cal2.get(Calendar.DST_OFFSET);
+    }
+
+    return result;
+}
 
     //-----------------------------------------------------------------------
     /**