diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
index 9a24c00f..8ded631f 100644
--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
@@ -255,20 +255,34 @@ public class DateUtils {
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
-    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
-        if (cal1 == null || cal2 == null) {
-            throw new IllegalArgumentException("The date must not be null");
+public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
+    if (cal1 == null || cal2 == null) {
+        throw new IllegalArgumentException("The calendar must not be null");
+    }
+
+    // Set both calendars to the same time zone
+    TimeZone timeZone = cal1.getTimeZone();
+    cal1.setTimeZone(timeZone);
+    cal2.setTimeZone(timeZone);
+
+    // Compare the fields
+    int[] fields = {Calendar.MILLISECOND, Calendar.SECOND, Calendar.MINUTE, Calendar.HOUR_OF_DAY, Calendar.DAY_OF_YEAR, Calendar.YEAR, Calendar.ERA};
+    for (int field : fields) {
+        if (cal1.get(field) != cal2.get(field)) {
+            return false;
         }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
-                cal1.getClass() == cal2.getClass());
     }
 
+    // Check if the two calendars have the same time value (milliseconds since epoch)
+    long time1 = cal1.getTimeInMillis();
+    long time2 = cal2.getTimeInMillis();
+    if (time1 != time2) {
+        return false;
+    }
+
+    return true;
+}
+
     //-----------------------------------------------------------------------
     /**
      * <p>Parses a string representing a date by trying a variety of different parsers.</p>