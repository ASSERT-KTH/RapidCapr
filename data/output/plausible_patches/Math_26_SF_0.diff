diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java
index f81ff0a94..4ab47fa89 100644
--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java
+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java
@@ -177,11 +177,11 @@ public class Fraction
     {
         long overflow = Integer.MAX_VALUE;
         double r0 = value;
-        long a0 = (long)FastMath.floor(r0);
-        if (a0 > overflow) {
+        long a0 = (long)FastMath.floor(r0); 
+        if (a0 > overflow || -a0 > overflow) {
             throw new FractionConversionException(value, a0, 1l);
         }
-
+        
         // check for (almost) integer arguments, which should not go
         // to iterations.
         if (FastMath.abs(a0 - value) < epsilon) {
@@ -189,15 +189,15 @@ public class Fraction
             this.denominator = 1;
             return;
         }
-
+        
         long p0 = 1;
         long q0 = 0;
         long p1 = a0;
         long q1 = 1;
-
+        
         long p2 = 0;
         long q2 = 1;
-
+        
         int n = 0;
         boolean stop = false;
         do {
@@ -206,10 +206,10 @@ public class Fraction
             long a1 = (long)FastMath.floor(r1);
             p2 = (a1 * p1) + p0;
             q2 = (a1 * q1) + q0;
-            if ((p2 > overflow) || (q2 > overflow)) {
+            if ((p2 > overflow) || (q2 > overflow) || (-p2 > overflow) || (-q2 > overflow)) {
                 throw new FractionConversionException(value, p2, q2);
             }
-
+            
             double convergent = (double)p2 / (double)q2;
             if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator) {
                 p0 = p1;
@@ -222,11 +222,11 @@ public class Fraction
                 stop = true;
             }
         } while (!stop);
-
+        
         if (n >= maxIterations) {
             throw new FractionConversionException(value, maxIterations);
         }
-
+        
         if (q2 < maxDenominator) {
             this.numerator = (int) p2;
             this.denominator = (int) q2;
@@ -234,7 +234,7 @@ public class Fraction
             this.numerator = (int) p1;
             this.denominator = (int) q1;
         }
-
+        
     }
 
     /**