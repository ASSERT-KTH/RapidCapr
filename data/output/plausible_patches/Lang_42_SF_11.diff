diff --git a/src/java/org/apache/commons/lang/Entities.java b/src/java/org/apache/commons/lang/Entities.java
index 900e1a89..bebe0177 100644
--- a/src/java/org/apache/commons/lang/Entities.java
+++ b/src/java/org/apache/commons/lang/Entities.java
@@ -822,26 +822,38 @@ class Entities {
      * @see #escape(String)
      * @see Writer
      */
-    public void escape(Writer writer, String str) throws IOException {
-        int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
-            if (entityName == null) {
-                if (c > 0x7F) {
-                    writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
-                    writer.write(';');
-                } else {
-                    writer.write(c);
-                }
-            } else {
-                writer.write('&');
-                writer.write(entityName);
-                writer.write(';');
-            }
+public void escape(Writer writer, String str) throws IOException {
+    int len = str.length();
+    int i = 0;
+    while (i < len) {
+        char c = str.charAt(i);
+        String entityName = this.entityName(c);
+        if (entityName != null) {
+            writer.write('&');
+            writer.write(entityName);
+            writer.write(';');
+        } else if (c >= 0xD800 && c <= 0xDBFF && i + 1 < len) { // high surrogate
+            char d = str.charAt(i + 1);
+            int cp = Character.toCodePoint(c, d);
+            writer.write("&#");
+            writer.write(Integer.toString(cp, 10));
+            writer.write(';');
+            i += 2;
+        } else if (c >= 0xDC00 && c <= 0xDFFF) { // low surrogate
+            writer.write("&#"); // error
+            writer.write(Integer.toString(c, 10));
+            writer.write(';');
+            i++;
+        } else if (c > 0x7F) {
+            writer.write("&#");
+            writer.write(Integer.toString(c, 10));
+            writer.write(';');
+        } else {
+            writer.write(c);
         }
+        i++;
     }
+}
 
     /**
      * <p>